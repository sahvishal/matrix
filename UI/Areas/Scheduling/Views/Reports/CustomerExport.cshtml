@using System.Linq
@using Falcon.App.Core.Extensions
@model Falcon.App.Core.Scheduling.ViewModels.CustomerExportListModel
@{
    ViewBag.Title = "Customer Export";
}
<h1>Customer Export</h1>
<link href="/Content/Styles/jquery.qtip.min.css" rel="stylesheet" type="text/css" />
<script src="/Scripts/jquery.qtip.min.js" type="text/javascript"></script>
<script src="/Scripts/reportexportqueue.js"></script>
<div id="ExportToCsvMessage" style="display:none;">
</div>
<div id="list-filter">
    @{Html.BeginForm("CustomerExport", "Reports", FormMethod.Get);}
    @Html.Partial("CustomerExportListModelFilter", new ViewDataDictionary(Model.Filter))
    @{Html.EndForm();}
</div>
@if (Model != null && !Model.Collection.IsNullOrEmpty())
{
    <div class="exportcsvlink">
        @if (Model.PagingModel.NumberOfItems > 1000)
        {
            <a href="javascript:void(0);" onclick='return requestReport("/Scheduling/ReportsQueue/CustomerExport?@Request.QueryString","ExportToCsvMessage",@Model.PagingModel.NumberOfItems);'>
                Export CSV
            </a>
        }
        else
        {
            <a target="_blank" href="/Scheduling/ExportableReports/CustomerExport?id=@System.Guid.NewGuid().ToString()&@Request.QueryString">Export CSV </a>
        }
    </div>
    @Html.DisplayFor(m => m.PagingModel)
    <table id="list-view">
        <tr>
            <th>CustomerId</th>
            <th>Customer Info</th>
            <th>Additional Info</th>
            <th>PCP Info</th>
            <th>Event Info</th>
            <th style="text-align:right;">Total Revenue</th>
        </tr>
        @foreach (var customer in Model.Collection)
        {
            <tr>
                <td>
                    @customer.CustomerId
                    @if (!string.IsNullOrEmpty(customer.DoNotContactReason))
                    {
                        <br />
                        <img src="/Content/Images/Do-Not-Call.gif" style="width: 20px; height: 20px;" alt="" class="donotcontact-infoimage" />
                        <div class="notes-div" style="display:none;">
                            <div class="notes-div-title"><b>@Html.Raw(customer.DoNotContactReason)</b></div>
                            <div class="notes-div-text"><i>@Html.Raw(customer.DoNotContactReasonNote)</i></div>
                        </div>
                    }
                </td>
                <td style="float:left; width:180px;">
                    <b>Name: </b>@(customer.FirstName + (!string.IsNullOrEmpty(customer.MiddleName) ? " " + customer.MiddleName + " " : " ") + customer.LastName)<br />
                    <b>Email: </b>@customer.Email<br />
                    <b>Phone: </b>@customer.PhoneHome<br />
                    <div>
                        <b>Address: </b>@customer.Address1<br />
                        @customer.City, @customer.State - @customer.Zip
                    </div>
                    <b>Created On: </b>  @customer.DateCreated.ToString("dddd, MMMM dd, yyyy hh:mm tt")<br />
                    <b>Mode: </b>@customer.SignUpMode<br />
                    <b>Tag: </b>@customer.Tag<br />
                </td>
                <td>
                    <b>Member Id</b>: @customer.MemberId<br />
                    <b>Is Eligible</b>: @customer.IsEligible<br />
                    <b>Activity</b>: @customer.Activity <br />
                    <b>Language</b>: @customer.Language<br />
                    <b>Lab</b>: @customer.Lab<br />
                    <b>Custom Tag(s)</b>: @customer.CustomTag<br />
                    <b>Copay Amount</b>: @customer.Copay<br />
                    <b>Medicare Plan Name</b>: @customer.MedicarePlanName<br />
                    <b>HICN</b>: @customer.Hicn<br />
                    <b>MBI</b>: @customer.Mbi<br />
                    <b>LPI</b>: @customer.Lpi<br />
                    <b>Market</b>: @customer.Market<br />
                    <b>MRN</b>: @customer.Mrn<br />
                    <b>ACES Id</b>: @customer.AcesId<br />
                    <b>Group Name</b>: @customer.GroupName <br />
                    <b>Pre-Approved Test(s)</b>: @customer.PreApprovedTest <br />
                    <b>Pre-Approved Package</b>: @customer.PreApprovedPackage <br />
                    @if (customer.AdditionalFields != null && customer.AdditionalFields.Any())
                    {
                        foreach (var additionalField in customer.AdditionalFields)
                        {
                            <b>@additionalField.FirstValue</b><span>: @additionalField.SecondValue</span><br />
                        }
                    }
                    <b>Predicted Zip</b>: @(string.IsNullOrEmpty(customer.PredictedZip) ? "N/A" : customer.PredictedZip)<br/>
                    <b>Product</b>: @customer.Product
                </td>
                <td style="width:180px;">
                    <div><b>Name: </b> @((string.IsNullOrEmpty(customer.PcpFirstName) && string.IsNullOrEmpty(customer.PcpLastName)) ? "N/A" : customer.PcpFirstName + " " + customer.PcpLastName)</div>
                    <div><b>Address: </b>@(string.IsNullOrEmpty(customer.PcpAddress1) ? "N/A" : customer.PcpAddress1 + (string.IsNullOrEmpty(customer.PcpAddress2) ? ", " : ", " + customer.PcpAddress2 + ", ") + customer.PcpCity + ", " + customer.PcpState + ", " + customer.PcpZip)</div>
                    <div><b>Fax: </b> @(string.IsNullOrEmpty(customer.PcpFax) ? "N/A" : customer.PcpFax)</div>
                    <div><b>Phone: </b> @(string.IsNullOrEmpty(customer.PcpPhone) ? "N/A" : customer.PcpPhone)</div>
                    <div><b>NPI: </b> @(string.IsNullOrEmpty(customer.PcpNpi) ? "N/A" : customer.PcpNpi)</div>
                </td>
                <td style="width:180px;">
                    @if (customer.EventDate.HasValue)
                    {
                        <span>
                            <b>Address :</b> @customer.EventName <br />
                            @customer.EventDate.Value.ToString("dddd, MMMM dd, yyyy")<br />
                            <b>Package :</b> @customer.Package<br />
                            <b>Appointment Status :</b>  @(string.IsNullOrEmpty(customer.Status) ? "N/A" : customer.Status)
                        </span>
                    }
                    else
                    {
                        <span>N/A</span>
                    }
                </td>
                <td style="text-align:right;">
                    $@customer.Amount.ToString("0.00")
                </td>
            </tr>
        }
    </table>
    @Html.DisplayFor(m => m.PagingModel)
}
else
{
    <div>
        <h2>
            No Records found.
        </h2>
    </div>
}
@section scripts {
    <script type="text/javascript">
        $(function () {
            $("table#list-view tr:even").addClass("alt-row");
        });


        $(function () {
            $("tr:not(:has(th))").hover(function () {
                $(this).addClass('row-hover');
            },
                function () {
                    $(this).removeClass('row-hover');
                });
        });
        $('.donotcontact-infoimage').qtip({
            position: {
                my: 'left top'
            },
            content: {
                title: function (api) {
                    return $(this).parent().find('.notes-div-title').html();
                },
                text: function (api) {
                    return $(this).parent().find('.notes-div-text').html();
                }
            },
            style: {
                width: '200px'
            }
        });
    </script>

}
