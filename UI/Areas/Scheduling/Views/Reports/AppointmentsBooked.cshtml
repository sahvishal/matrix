@using Falcon.App.Core.Extensions
@model Falcon.App.Core.Scheduling.ViewModels.AppointmentsBookedListModel
<link href="/Content/Styles/jquery.qtip.min.css" rel="stylesheet" type="text/css" />
<script src="/Scripts/jquery.qtip.min.js" type="text/javascript"></script>
<script src="/Scripts/reportexportqueue.js"></script>
@{
    ViewBag.Title = "Appointments Booked";
}
<h1>
    Appointments Booked
</h1>
<div id="ExportToCsvMessage" style="display:none;">
</div>
<div id="list-filter">
    @{Html.BeginForm("AppointmentsBooked", "Reports", FormMethod.Get);}
    @Html.Partial("AppointmentsBookedListModelFilter", new ViewDataDictionary(Model.Filter))
    @{Html.EndForm();}
</div>
@if (Model != null && !Model.Collection.IsNullOrEmpty())
{
    <div class="exportcsvlink">
        @if (Model.PagingModel.NumberOfItems > 1000)
        {
            <a href="javascript:void(0);" onclick='return requestReport("/Scheduling/ReportsQueue/AppointmentsBooked?@Request.QueryString","ExportToCsvMessage",@Model.PagingModel.NumberOfItems);'>
                Export CSV
            </a>
        }
        else
        {
            <a target="_blank" href="/Scheduling/ExportableReports/AppointmentsBooked?id=@System.Guid.NewGuid().ToString()&@Request.QueryString">Export CSV </a>
        }
    </div>
    @Html.DisplayFor(m => m.PagingModel)
    <div style="overflow-x: auto; width: 100%; float: left;">
        <table id="list-view" style="width: 200%;">
            <tr>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().RegistrationDate)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().EventId)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().RecommendPackage)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().CustomerCode)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().CustomerName)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().Gender)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().Language)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().PreferredContactType)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().Market)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().Address1)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().Address2)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().City)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().State)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().Zip)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().Email)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().RequestedNewsLetter)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().DateofBirth)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().PhoneHome)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().PhoneCell)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().PhoneBusiness)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().InsuranceId)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().SsnCaptured)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().Hicn)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().MedicareAdvantageNumber)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().MedicareAdvantagePlanName)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().RegistrationStatus)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().IsConfirmed)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().ConfirmedBy)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().Package)
                </th>
                @*<th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().HafStatus)
                </th>*@
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().ShippingOptions)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().ShippingCost)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().ImagesPurchased)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().ImagesCost)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().PackageCost)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().PriortyCodeDiscount)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().TotalAmount)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().AmountDue)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().ReimbursementRate)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().PrePaid)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().Pod)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().PriortyCode)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().IncomingPhoneLine)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().CallersPhoneNumber)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().AdSource)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().EventDate)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().EventType)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().Host)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().HostAddress)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().SponsoredBy)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().RegisterationByRole)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().CallType)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().RegisteredBy)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().PcpName)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().PcpPhone)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().PcpFax)
                </th>
                <th>
                    @Html.LabelFor(m => m.Collection.FirstOrDefault().PcpNpi)
                </th>
                <th>Reschedule Info</th>
                <th>@Html.LabelFor(m => m.Collection.FirstOrDefault().CheckInTime)</th>

                <th>@Html.LabelFor(m => m.Collection.FirstOrDefault().CheckOutTime)</th>
                <th>@Html.LabelFor(m => m.Collection.FirstOrDefault().Status)</th>
                <th>@Html.LabelFor(m => m.Collection.FirstOrDefault().Tag)</th>
                <th>@Html.LabelFor(m => m.Collection.FirstOrDefault().CustomTag)</th>
                <th>@Html.LabelFor(m => m.Collection.FirstOrDefault().PcpAppointmentDate)</th>
                <th>@Html.LabelFor(m => m.Collection.FirstOrDefault().PcpAppointmentTime)</th>
                <th>@Html.LabelFor(m => m.Collection.FirstOrDefault().IsEligible)</th>
                <th>@Html.LabelFor(m => m.Collection.FirstOrDefault().GroupName)</th>
                <th>Additional Fields</th>
                <th>Predicted Zip</th>
                <th>Product</th>
            </tr>
            @foreach (var appointment in Model.Collection)
            {
                <tr>
                    <td>
                        @appointment.RegistrationDate.ToString("MM/dd/yyyy hh:mm tt")
                    </td>
                    <td>
                        @appointment.EventId
                    </td>
                    <td>
                        @appointment.RecommendPackage
                    </td>
                    <td>
                        @appointment.CustomerCode
                    </td>
                    <td>
                        @appointment.CustomerName
                    </td>
                    <td>
                        @appointment.Gender
                    </td>
                    <td>
                        @appointment.Language
                    </td>
                    <td>
                        @appointment.PreferredContactType
                    </td>
                    <td>
                        @appointment.Market
                    </td>
                    @*<td class="address-column">@string.Concat(appointment.Address.StreetAddressLine1, " ", appointment.Address.StreetAddressLine2, " ", appointment.Address.City, "-", appointment.Address.ZipCode)
                        </td>*@
                    <td style="float:left; width:100px;">
                        @appointment.Address1
                    </td>
                    <td style="width:100px;">
                        @appointment.Address2
                    </td>
                    <td>
                        @appointment.City
                    </td>
                    <td>
                        @appointment.State
                    </td>
                    <td>
                        @appointment.Zip
                    </td>
                    <td>
                        @appointment.Email
                    </td>
                    <td>
                        @appointment.RequestedNewsLetter
                    </td>
                    <td>
                        @(appointment.DateofBirth.HasValue ? appointment.DateofBirth.Value.ToShortDateString() : "")
                    </td>
                    <td>
                        @appointment.PhoneHome
                    </td>
                    <td>
                        @appointment.PhoneCell
                    </td>
                    <td>
                        @(!string.IsNullOrEmpty(appointment.PhoneOfficeExtension) ? appointment.PhoneBusiness + "/" + appointment.PhoneOfficeExtension : appointment.PhoneBusiness)
                    </td>
                    <td>
                        @appointment.InsuranceId
                    </td>
                    <td>
                        @appointment.SsnCaptured
                    </td>
                    <td>
                        @appointment.Hicn
                    </td>
                    <td>
                        @appointment.MedicareAdvantageNumber
                    </td>
                    <td>
                        @appointment.MedicareAdvantagePlanName
                    </td>
                    <td>
                        @appointment.RegistrationStatus
                    </td>
                    <td>
                        @appointment.IsConfirmed
                    </td>
                    <td>
                        @appointment.ConfirmedBy
                    </td>
                    <td>
                        @appointment.Package
                    </td>
                    @*<td>
                        @appointment.HafStatus
                    </td>*@
                    <td style="float:left; width:100px;">
                        @if (appointment.ShippingOptions != null && appointment.ShippingOptions.Count() > 0)
                        {
                            <div>@Html.Raw(string.Join(", <br />", appointment.ShippingOptions.ToArray()))</div>

                        }
                        else
                        {
                            <div>N/A</div>
                        }
                    </td>
                    <td>
                        $@appointment.ShippingCost.ToString("0.00")
                    </td>
                    <td>
                        @appointment.ImagesPurchased
                    </td>
                    <td>
                        $@appointment.ImagesCost.ToString("0.00")
                    </td>
                    <td>
                        $@appointment.PackageCost.ToString("00.00")
                    </td>
                    <td>
                        $@appointment.PriortyCodeDiscount.ToString("00.00")
                    </td>
                    <td>
                        $@appointment.TotalAmount.ToString("00.00")
                    </td>
                    <td>
                        $@appointment.AmountDue.ToString("00.00")
                    </td>
                    <td>
                        $@appointment.ReimbursementRate.ToString("00.00")
                    </td>
                    <td>
                        @appointment.PrePaid
                    </td>
                    <td>
                        @appointment.Pod
                    </td>
                    <td>
                        @appointment.PriortyCode
                    </td>
                    <td>
                        @appointment.IncomingPhoneLine
                    </td>
                    <td>
                        @appointment.CallersPhoneNumber
                    </td>
                    <td>
                        @appointment.AdSource
                    </td>
                    <td>
                        @appointment.EventDate.ToShortDateString()
                    </td>
                    <td>
                        @appointment.EventType
                    </td>
                    <td>
                        @appointment.Host
                    </td>
                    <td class="address-column">
                        @string.Concat(appointment.HostAddress.StreetAddressLine1, " ", appointment.HostAddress.StreetAddressLine2, " ", appointment.HostAddress.City)
                    </td>
                    <td>
                        @appointment.SponsoredBy
                    </td>
                    <td>
                        @appointment.RegisterationByRole
                    </td>
                    <td>
                        @appointment.CallType
                    </td>
                    <td>
                        @appointment.RegisteredBy
                    </td>
                    <td>
                        @appointment.PcpName
                    </td>
                    <td>
                        @appointment.PcpPhone
                    </td>
                    <td>
                        @appointment.PcpFax
                    </td>
                    <td>
                        @appointment.PcpNpi
                    </td>
                    <td style="float:left; width:200px;">
                        @if (appointment.RescheduleInfo != null && appointment.RescheduleInfo.Any())
                        {
                            foreach (var rescheduleInfo in appointment.RescheduleInfo)
                            {
                                <div>
                                    Rescheduled By :@rescheduleInfo.RescheduledBy
                                    <br />
                                    Reason : @rescheduleInfo.Reason
                                    @if (!string.IsNullOrEmpty(rescheduleInfo.Notes))
                                    {
                                        <br />
                                        <a href="javascript:void(0);" class="notes-qtip">Notes</a>
                                        <div class="div-notes" style="display: none;">@rescheduleInfo.Notes</div>
                                    }
                                </div>
                                <hr />
                            }
                        }
                        else
                        {
                            <div>N/A</div>
                        }
                    </td>

                    <td>
                        @if (appointment.CheckInTime.HasValue)
                        {
                            <text>@appointment.CheckInTime.Value.ToString("hh:mm tt")</text>
                        }
                    </td>
                    <td>
                        @if (appointment.CheckOutTime.HasValue)
                        {
                            <text>@appointment.CheckOutTime.Value.ToString("hh:mm tt")</text>
                        }
                    </td>
                    <td>
                        @appointment.Status
                    </td>
                    <td>@appointment.Tag</td>
                    <td>@appointment.CustomTag</td>
                    <td>
                        @if (appointment.PcpAppointmentDate.HasValue)
                        {
                            <text>@appointment.PcpAppointmentDate.Value.ToString("MM/dd/yyyy")</text>
                        }
                    </td>
                    <td>
                        @if (appointment.PcpAppointmentTime.HasValue)
                        {
                            <text>@appointment.PcpAppointmentTime.Value.ToString("hh:mm tt")</text>
                        }
                    </td>
                    <td>@appointment.IsEligible</td>
                    <td>@appointment.GroupName</td>
                    <td>
                        @if (appointment.AdditionalFields != null && appointment.AdditionalFields.Any())
                        {
                            foreach (var additionalField in appointment.AdditionalFields)
                            {
                                <span><b>@additionalField.FirstValue</b>: @additionalField.SecondValue</span><br />
                            }
                        }
                        else
                        {
                            <text>N/A</text>
                        }
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(appointment.PredictedZip) ? "N/A" : appointment.PredictedZip)
                    </td>
                    <td>
                        @appointment.Product
                    </td>
                </tr>
            }
        </table>
    </div>
    @Html.DisplayFor(m => m.PagingModel)
}
else
{
    <div>
        <h2>
            No Records found.
        </h2>
    </div>
}
@section scripts {
    <script type="text/javascript">
        $(function () {
            $("table#list-view tr:even").addClass("alt-row");
        });


        $(function () {
            $("tr:not(:has(th))").hover(function () {
                $(this).addClass('row-hover');
            },
            function () {
                $(this).removeClass('row-hover');
            });
        });

        $(document).ready(function () {
            $(".notes-qtip").qtip({
                position: {
                    my: 'right top'
                },
                style: {
                    width: '500px'
                },
                content: {
                    title: "Notes",
                    text: function (api) {
                        return $(this).parent().find(".div-notes").html();
                    }
                }
            });
        });
    </script>
}
