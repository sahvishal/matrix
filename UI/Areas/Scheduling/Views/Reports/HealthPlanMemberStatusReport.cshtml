@using Falcon.App.Core.Application
@using Falcon.App.Core.Extensions
@model Falcon.App.Core.Scheduling.ViewModels.MemberStatusListModel
@{
    var organizationName = Falcon.App.DependencyResolution.IoC.Resolve<ISessionContext>().UserSession.CurrentOrganizationRole.OrganizationName;
    ViewBag.Title = organizationName + " Member Status Report";
}

<h1>Member Status Report</h1>

<link href="/Content/Styles/jquery.qtip.min.css" rel="stylesheet" type="text/css" />
<script src="/Scripts/jquery.qtip.min.js" type="text/javascript"></script>
<script src="/Scripts/reportexportqueue.js"></script>
<div id="ExportToCsvMessage" style="display:none;">
</div>
<div id="list-filter">
    @{Html.BeginForm("HealthPlanMemberStatusReport", "Reports", FormMethod.Get);}
    @Html.Partial("HealthPlanMemberStatusReportFilter", new ViewDataDictionary(Model.Filter))
    @{Html.EndForm();}
</div>
@if (Model != null && !Model.Collection.IsNullOrEmpty())
{
    <div class="exportcsvlink">
        @if (Model.PagingModel.NumberOfItems > 1000)
        {
            <a href="javascript:void(0);" onclick='return requestReport("/Scheduling/ReportsQueue/HealthPlanMemberStatusReport?@Request.QueryString","ExportToCsvMessage",@Model.PagingModel.NumberOfItems);'>
                Export CSV
            </a>
        }
        else
        {
            <a target="_blank" href="/Scheduling/ExportableReports/HealthPlanMemberStatusReport?id=@Guid.NewGuid().ToString()&@Request.QueryString">Export CSV </a>
        }
    </div>
    @Html.DisplayFor(m => m.PagingModel)

    <div style="float: left;clear: both;width: 950px;overflow-x: auto;padding-right: 10px;">
        <table id="list-view" style="width: 200%;">
            <tr>
                <th>CustomerId</th>
                <th>First Name</th>
                <th>Middle Name</th>
                <th>Last Name</th>
                <th>Phone Number</th>
                <th>Gender</th>
                <th>DOB</th>
                <th>Address 1</th>
                <th>Address 2</th>
                <th>City</th>
                <th>State</th>
                <th>Zip</th>
                <th>Email</th>
                <th>Package</th>
                <th>EventId</th>
                <th>Event Name</th>
                <th>Event Date</th>
                <th>Event Address 1</th>
                <th>Event Address 2</th>
                <th>Event City</th>
                <th>Event State</th>
                <th>Event Zip</th>
                <th>Scheduled Status</th>
                <th>Completion Status</th>
                <th>Current Outbound Call Category</th>
                <th>Current Outbound Call Outcome</th>
                <th>Current Outbound Call Disposition</th>
                <th>Pod Name</th>
                <th>Tag</th>
                <th>Member Id</th>
                <th>IsEligible</th>
                <th>Custom Tag(s)</th>
                <th>PCP First Name</th>
                <th>PCP Last Name</th>
                <th>PCP Address 1</th>
                <th>PCP Address 2</th>
                <th>PCP City</th>
                <th>PCP State</th>
                <th>PCP Zip</th>
                <th>PCP Fax</th>
                <th>PCP Phone</th>
                <th>PCP NPI</th>
                <th>Medicare Plan Name</th>
                <th>HICN</th>
                <th>Market</th>
                <th>Group Name</th>
                <th>ACES Id</th>
                <th>Restriction Status</th>
                <th>Do Not Contact Reason</th>
                <th>Do Not Contact Reason Notes</th>
                <th>Pre-Approved Test</th>
                <th>Pre-Approved Package</th>
                <th>Customer Result Shipped Date</th>
                <th>PCP Result Shipped Date</th>
                <th>Additional Fields</th>
                <th>Outreach Type 1</th>
                <th>Outreach Date 1</th>
                <th>Outreach Type 2</th>
                <th>Outreach Date 2</th>
                <th>Outreach Type 3</th>
                <th>Outreach Date 3</th>
                <th>Outreach Type 4</th>
                <th>Outreach Date 4</th>
                <th>Outreach Type 5</th>
                <th>Outreach Date 5</th>
                <th>Outreach Type 6</th>
                <th>Outreach Date 6</th>
                <th>Outreach Type 7</th>
                <th>Outreach Date 7</th>
                <th>Outreach Type 8</th>
                <th>Outreach Date 8</th>
                <th>Outreach Type 9</th>
                <th>Outreach Date 9</th>
                <th>Outreach Type 10</th>
                <th>Outreach Date 10</th>
                <th>Outreach Type 11</th>
                <th>Outreach Date 11</th>
                <th>Outreach Type 12</th>
                <th>Outreach Date 12</th>
            </tr>
            @foreach (var customer in Model.Collection)
            {
                <tr style="width: 100%;">
                    <td>
                        @customer.CustomerId
                    </td>
                    <td>
                        @customer.FirstName
                    </td>
                    <td>
                        @customer.MiddleName
                    </td>
                    <td>
                        @customer.LastName
                    </td>
                    <td>
                        @customer.PhoneHome
                    </td>
                    <td>
                        @customer.Gender
                    </td>
                    <td>
                        @(customer.DateofBirth.HasValue ? customer.DateofBirth.Value.ToString("MM/dd/yyyy") : "N/A")
                    </td>
                    <td>
                        @customer.Address1
                    </td>
                    <td>
                        @customer.Address2
                    </td>
                    <td>
                        @customer.City
                    </td>
                    <td>
                        @customer.State
                    </td>
                    <td>
                        @customer.Zip
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.Email) ? "N/A" : customer.Email)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.Package) ? "N/A" : customer.Package)

                    </td>
                    <td>
                        @(customer.EventId > 0 ? customer.EventId.ToString() : "N/A")
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.EventName) ? "N/A" : customer.EventName)
                    </td>
                    <td>
                        @(customer.EventDate.HasValue ? customer.EventDate.Value.ToString("MM/dd/yyyy") : "N/A")
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.EventAddress1) ? "N/A" : customer.EventAddress1)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.EventAddress2) ? "N/A" : customer.EventAddress2)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.EventCity) ? "N/A" : customer.EventCity)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.EventState) ? "N/A" : customer.EventState)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.EventZip) ? "N/A" : customer.EventZip)
                    </td>

                    <td>
                        @(string.IsNullOrEmpty(customer.ScheduledStatus) ? "N/A" : customer.ScheduledStatus)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.CompletionStatus) ? "N/A" : customer.CompletionStatus)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.CurrentOutboundCallCategory) ? "N/A" : customer.CurrentOutboundCallCategory)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.CurrentOutboundCallOutcome) ? "N/A" : customer.CurrentOutboundCallOutcome)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.CurrentOutboundCallDisposition) ? "N/A" : customer.CurrentOutboundCallDisposition)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.Pod) ? "N/A" : customer.Pod)
                    </td>
                    
                    <td>
                        @(string.IsNullOrEmpty(customer.Tag) ? "N/A" : customer.Tag)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.MemberId) ? "N/A" : customer.MemberId)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.IsEligible) ? "N/A" : customer.IsEligible)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.CustomTag) ? "N/A" : customer.CustomTag)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.PcpFirstName) ? "N/A" : customer.PcpFirstName)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.PcpLastName) ? "N/A" : customer.PcpLastName)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.PcpAddress1) ? "N/A" : customer.PcpAddress1)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.PcpAddress2) ? "N/A" : customer.PcpAddress2)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.PcpCity) ? "N/A" : customer.PcpCity)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.PcpState) ? "N/A" : customer.PcpState)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.PcpZip) ? "N/A" : customer.PcpZip)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.PcpFax) ? "N/A" : customer.PcpFax)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.PcpPhone) ? "N/A" : customer.PcpPhone)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.PcpNpi) ? "N/A" : customer.PcpNpi)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.MedicarePlanName) ? "N/A" : customer.MedicarePlanName)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.Hicn) ? "N/A" : customer.Hicn)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.Market) ? "N/A" : customer.Market)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.GroupName) ? "N/A" : customer.GroupName)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.AcesId) ? "N/A" : customer.AcesId)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.RestrictionStatus) ? "N/A" : customer.RestrictionStatus)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.DoNotContactReason) ? "N/A" : customer.DoNotContactReason)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.DoNotContactReasonNote) ? "N/A" : customer.DoNotContactReasonNote)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.PreApprovedTest) ? "N/A" : customer.PreApprovedTest)
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.PreApprovedPackage) ? "N/A" : customer.PreApprovedPackage)
                    </td>
                    <td>
                        @(customer.CustomerResultShipedDate.HasValue ? @customer.CustomerResultShipedDate.Value.ToString("MM/dd/yyyy") : "N/A")
                    </td>
                    <td>
                        @(customer.PCPResultShipedDate.HasValue ? @customer.PCPResultShipedDate.Value.ToString("MM/dd/yyyy") : "N/A")
                    </td>
                    <td>
                        @if (customer.AdditionalFields != null && customer.AdditionalFields.Any())
                        {
                            foreach (var additionalField in customer.AdditionalFields)
                            {
                                <span><b>@additionalField.FirstValue</b>: @additionalField.SecondValue</span><br />
                            }
                        }
                        else
                        {
                            <text>N/A</text>
                        }
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.OutreachType1) ? "N/A" : customer.OutreachType1)
                    </td>
                    <td>
                        @(customer.OutreachDate1.HasValue ? @customer.OutreachDate1.Value.ToString("MM/dd/yyyy") : "N/A")
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.OutreachType2) ? "N/A" : customer.OutreachType2)
                    </td>
                    <td>
                        @(customer.OutreachDate2.HasValue ? @customer.OutreachDate2.Value.ToString("MM/dd/yyyy") : "N/A")
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.OutreachType3) ? "N/A" : customer.OutreachType3)
                    </td>
                    <td>
                        @(customer.OutreachDate3.HasValue ? @customer.OutreachDate3.Value.ToString("MM/dd/yyyy") : "N/A")
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.OutreachType4) ? "N/A" : customer.OutreachType4)
                    </td>
                    <td>
                        @(customer.OutreachDate4.HasValue ? @customer.OutreachDate4.Value.ToString("MM/dd/yyyy") : "N/A")
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.OutreachType5) ? "N/A" : customer.OutreachType5)
                    </td>
                    <td>
                        @(customer.OutreachDate5.HasValue ? @customer.OutreachDate5.Value.ToString("MM/dd/yyyy") : "N/A")
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.OutreachType6) ? "N/A" : customer.OutreachType6)
                    </td>
                    <td>
                        @(customer.OutreachDate6.HasValue ? @customer.OutreachDate6.Value.ToString("MM/dd/yyyy") : "N/A")
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.OutreachType7) ? "N/A" : customer.OutreachType7)
                    </td>
                    <td>
                        @(customer.OutreachDate7.HasValue ? @customer.OutreachDate7.Value.ToString("MM/dd/yyyy") : "N/A")
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.OutreachType8) ? "N/A" : customer.OutreachType8)
                    </td>
                    <td>
                        @(customer.OutreachDate8.HasValue ? @customer.OutreachDate8.Value.ToString("MM/dd/yyyy") : "N/A")
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.OutreachType9) ? "N/A" : customer.OutreachType9)
                    </td>
                    <td>
                        @(customer.OutreachDate9.HasValue ? @customer.OutreachDate9.Value.ToString("MM/dd/yyyy") : "N/A")
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.OutreachType10) ? "N/A" : customer.OutreachType10)
                    </td>
                    <td>
                        @(customer.OutreachDate10.HasValue ? @customer.OutreachDate10.Value.ToString("MM/dd/yyyy") : "N/A")
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.OutreachType11) ? "N/A" : customer.OutreachType11)
                    </td>
                    <td>
                        @(customer.OutreachDate11.HasValue ? @customer.OutreachDate11.Value.ToString("MM/dd/yyyy") : "N/A")
                    </td>
                    <td>
                        @(string.IsNullOrEmpty(customer.OutreachType12) ? "N/A" : customer.OutreachType12)
                    </td>
                    <td>
                        @(customer.OutreachDate12.HasValue ? @customer.OutreachDate12.Value.ToString("MM/dd/yyyy") : "N/A")
                    </td>
                </tr>
            }
        </table>
    </div>


    @Html.DisplayFor(m => m.PagingModel)
}
else
{
    <div>
        <h2>
            No Records found.
        </h2>
    </div>
}
@section scripts {
    <script type="text/javascript">
        $(function () {
            $("table#list-view tr:even").addClass("alt-row");
        });


        $(function () {
            $("tr:not(:has(th))").hover(function () {
                $(this).addClass('row-hover');
            },
                function () {
                    $(this).removeClass('row-hover');
                });
        });
        $('.donotcontact-infoimage').qtip({
            position: {
                my: 'left top'
            },
            content: {
                title: function (api) {
                    return $(this).parent().find('.notes-div-title').html();
                },
                text: function (api) {
                    return $(this).parent().find('.notes-div-text').html();
                }
            },
            style: {
                width: '200px'
            }
        });
    </script>

}
