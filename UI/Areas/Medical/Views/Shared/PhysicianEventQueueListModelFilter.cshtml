@using Falcon.App.Core.Medical.ViewModels
@using Falcon.App.UI.HtmlHelpers
@model PhysicianEventQueueListModelFilter
<h2>
    Search Records <span style="padding-left: 80px;">Queue Type:
        <input type="radio" name="physicianqueuetype" onclick='onClickRecordType(true);' @(Model.RecordsforPrimaryEval ? "checked=checked" : "") />
        Primary Eval</span> <span style="padding-left: 5px;">
            <input type="radio" name="physicianqueuetype" onclick='onClickRecordType(false);' @(!Model.RecordsforPrimaryEval ? "checked=checked" : "") />
            OverRead</span> <span style="float: right"><a href="/Medical/Reports/PhysicianReviewSummary">
                Physician Review Summary</a> </span>
</h2>
<div style="padding-left: 5px; overflow: hidden; padding-bottom: 10px;">
    <div class="editor-column" style="width: 20%">
        <div class="small-text">
            From:
        </div>
        @Html.TextBoxFor(m => m.FromDate, new { @class = "datePicker", @value = String.Format("{0:yyyy-MM-dd}", Model.FromDate.HasValue ? Model.FromDate : DateTime.Now) })
    </div>
    <div class="editor-column" style="width: 20%">
        <div class="small-text">
            To:
        </div>
        @Html.TextBoxFor(m => m.ToDate, new { @class = "datePicker" })
    </div>
    <div class="editor-column" style="width: 20%">
        <div class="small-text">
            Date Type:</div>
        @Html.DropDownListFor(m => m.DateType, DropDownHelper.GetPhysicianQueueDateTypeFilter())
    </div>
    <div class="editor-column" style="width: 20%">
        <div class="small-text">
            Physician:</div>
        @Html.DropDownListFor(m => m.PhysicianId, DropDownHelper.GetPhysicians())
    </div>
    <div class="editor-column" style="width: 15%">
        <div class="small-text">
            Event Id:
        </div>
        @Html.TextBoxFor(m => m.EventId)
    </div>
    @Html.HiddenFor(m => m.RecordsforPrimaryEval)
</div>
<div style="padding-left: 5px; overflow: hidden;">
    <div class="editor-column" style="width: 20%">
        <div class="small-text">
            Vehicle:
        </div>
        @Html.DropDownListFor(m => m.PodId, DropDownHelper.Pods())
    </div>
    <div class="editor-column" style="width: 30%">
        <div class="small-text">
            Event Type:
        </div>
        <div>
            <input type="checkbox" id="is-retail-event" @(Model.IsRetailEvent ? "checked" : "") onclick="onCheckEventType(this, 'IsRetailEvent');" />Retail
            <input type="checkbox" id="is-corporate-event" @(Model.IsCorporateEvent ? "checked" : "") onclick="onCheckEventType(this, 'IsCorporateEvent');" />Corporate
        </div>
        <div>
            <input type="checkbox" id="is-public-event" @(Model.IsPublicEvent ? "checked" : "") onclick="onCheckEventType(this, 'IsPublicEvent');" />Public
            <input type="checkbox" id="is-private-event" @(Model.IsPrivateEvent ? "checked" : "") onclick="onCheckEventType(this, 'IsPrivateEvent');" />Private
        </div>
        @Html.HiddenFor(m => m.IsRetailEvent)
        @Html.HiddenFor(m => m.IsCorporateEvent)
        @Html.HiddenFor(m => m.IsPublicEvent)
        @Html.HiddenFor(m => m.IsPrivateEvent)
    </div>
    <div class="editor-column" style="width: 10%">
        &nbsp;</div>
    <div class="editor-column" style="width: 20%">
        <div class="small-text">
            &nbsp;</div>
        @Html.HiddenFor(m => m.ShowOnlyCritical) <input type="checkbox" onclick="onClickSetCritical($(this));" @(Model.ShowOnlyCritical ? "checked=checked" : "") /> Show only Critical
    </div>
    <div class="editor-column" style="float: right; padding-top: 12px; text-align: right;">
        @Html.ActionLink("Clear", "PhysicianQueue", "Reports") | @Html.SubmitButton("Search")
    </div>
</div>
<script language="javascript" type="text/javascript">
    function onCheckEventType(checkBox, hiddenBox) {
        if ($(checkBox).attr("checked")) {
            $("#" + hiddenBox).val('@Boolean.TrueString');
        }
        else {
            $("#" + hiddenBox).val('@Boolean.FalseString');
        }
    }

    function onClickRecordType(isPrimaryEval) {
        $("input[type=hidden][id*='RecordsforPrimaryEval']").val(isPrimaryEval ? "@Boolean.TrueString" : "@Boolean.FalseString");
        $('form').submit();
    }


    function onClickSetCritical(tagRef) {
        $("input[type=hidden][id*='ShowOnlyCritical']").val(tagRef.attr("checked") ? "@Boolean.TrueString" : "@Boolean.FalseString");
    }
</script>
