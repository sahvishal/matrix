@using Falcon.App.UI.HtmlHelpers
@model Falcon.App.Core.Finance.ViewModels.DeferredRevenueListModelFilter
<h2>
    Search Records
</h2>
<div style="padding-left: 5px; overflow: hidden;">
    <div class="editor-column" style="width: 32%">
        <div class="small-text">
            Event Date:
        </div>
        @Html.TextBoxFor(m => m.FromEventDate, new { @class = "datePicker", @style = "width:40%;" })
        -
        @Html.TextBoxFor(m => m.ToEventDate, new { @class = "datePicker", @style = "width:40%;" })
    </div>
    <div class="editor-column" style="width: 22%">
        <div class="small-text">
            Pod:
        </div>
        @Html.TextBoxFor(m => m.Pod, new { @style = "width:80%;" })
    </div>
    <div class="editor-column" style="width: 32%">
        <div class="small-text">
            &nbsp;</div>
        <b>Customers: </b>@Html.CheckBoxFor(m => m.PaidCustomers) Paid &nbsp;&nbsp;&nbsp;  @Html.CheckBoxFor(m => m.UnPaidCustomers) Unpaid
    </div>    
</div>
<div style="padding-left: 5px; margin-top: 5px; overflow: hidden;">
    <div class="editor-column" style="width: 32%">
        <div class="small-text">
            Registration Date:
        </div>
        @Html.TextBoxFor(m => m.FromRegistrationDate, new { @class = "datePicker", @style = "width:40%;" })
        -
        @Html.TextBoxFor(m => m.ToRegistrationDate, new { @class = "datePicker", @style = "width:40%;" })
    </div>
    <div class="editor-column" style="width: 25%">
        <div class="small-text">
            Event Type:
        </div>
        <div>
            <input type="checkbox" id="is-retail-event" @(Model.IsRetailEvent ? "checked" : "") onclick="onCheckEventType(this, 'IsRetailEvent');" />Retail
            <input type="checkbox" id="is-corporate-event" @(Model.IsCorporateEvent ? "checked" : "") onclick="onCheckEventType(this, 'IsCorporateEvent');" />Corporate
        </div>
        <div>
            <input type="checkbox" id="is-public-event" @(Model.IsPublicEvent ? "checked" : "") onclick="onCheckEventType(this, 'IsPublicEvent');" />Public
            <input type="checkbox" id="is-private-event" @(Model.IsPrivateEvent ? "checked" : "") onclick="onCheckEventType(this, 'IsPrivateEvent');" />Private
        </div>
        @Html.HiddenFor(m => m.IsRetailEvent)
        @Html.HiddenFor(m => m.IsCorporateEvent)
        @Html.HiddenFor(m => m.IsPublicEvent)
        @Html.HiddenFor(m => m.IsPrivateEvent)
    </div>
    <div class="editor-column" style="width: 20%">
        <div class="small-text">
            Event Id:
        </div>
        @Html.TextBoxFor(m => m.EventId, new { @style = "width:80%;" })
    </div>
    <div class="editor-column" style="float: right; width: 18%; padding-top: 12px; text-align: right;">
        @Html.ActionLink("Clear", "DeferredRevenue", "Reports") | @Html.SubmitButton("Search")
    </div>
</div>
<script type="text/javascript" language="javascript">

    function onCheckEventType(checkBox, hiddenBox) {
        if ($(checkBox).attr("checked")) {
            $("#" + hiddenBox).val('@Boolean.TrueString');
        }
        else {
            $("#" + hiddenBox).val('@Boolean.FalseString');
        }
    }

</script>
