@using Falcon.App.Core.Application
@using Falcon.App.DependencyResolution
@using Falcon.App.UI.HtmlHelpers
@model Falcon.App.Core.Finance.ViewModels.DailyPatientRecapModelFilter
<h2>
    Search
</h2>
@{
    var currentOrgRole = IoC.Resolve<ISessionContext>().UserSession.CurrentOrganizationRole;
}
<div style="padding-left: 5px; overflow: hidden;">
    <div>
        <div class="editor-column" style="width: 17%">
            <div class="small-text">
                <b>Event From</b>
            </div>
            @Html.TextBoxFor(m => m.EventDateFrom, new { @class = "datePicker" })@Html.ValidationMessageFor(m => m.EventDateFrom)
        </div>
        <div class="editor-column" style="width: 20%">
            <div class="small-text">
                <b>To</b>
            </div>
            @Html.TextBoxFor(m => m.EventDateTo, new { @class = "datePicker" })@Html.ValidationMessageFor(m => m.EventDateTo)
        </div>
        <div class="editor-column" style="width: 20%">
            <div class="small-text">
                Customer Name
            </div>
            @Html.TextBoxFor(m => m.CustomerName)
        </div>
        <div class="editor-column" style="width: 20%">
            <div class="small-text">
                Customer Id
            </div>
            @Html.TextBoxFor(m => m.CustomerId)
        </div>
        @if (currentOrgRole.CheckRole((long)Falcon.App.Core.Enum.Roles.FranchisorAdmin))
        {
            <div class="editor-column" style="width: 20%">
                <div class="small-text">
                    Pod
                </div>
                @Html.TextBoxFor(m => m.Pod)
            </div>
        }
    </div>

    <div style="padding-left: 5px;clear: left; padding-top: 10px; overflow: hidden;">
        @if (currentOrgRole.CheckRole((long)Falcon.App.Core.Enum.Roles.FranchisorAdmin))
        {
            <div class="editor-column" style="width: 20%">
                <div class="small-text">
                    Hospital Partners:
                </div>
                @Html.DropDownListFor(m => m.HospitalPartnerId, DropDownHelper.HospitalPartners(), new { @style = "width:95%;" })
            </div>
            <div class="editor-column" style="width: 20%">
                <div class="small-text">
                    Corporate Sponsors:
                </div>
                @Html.DropDownListFor(m => m.CorporateAccountId, DropDownHelper.GetCorporateAccounts(), new { @style = "width:95%;" })
            </div>
        }
        <div class="editor-column" style="width: 30%;">
            <div class="small-text">
                Event Type:
            </div>
            <div>
                <input type="checkbox" id="is-retail-event" @(Model.IsRetailEvent ? "checked" : "") onclick="onCheckEventType(this, 'IsRetailEvent');" />Retail
                <input type="checkbox" id="is-corporate-event" @(Model.IsCorporateEvent ? "checked" : "") onclick="onCheckEventType(this, 'IsCorporateEvent');" />Corporate
                <input type="checkbox" id="is-healthPlan-event" @(Model.IsHealthPlanEvent ? "checked" : "") onclick="onCheckEventType(this, 'IsHealthPlanEvent');" />Health Plan
            </div>
            <div>
                <input type="checkbox" id="is-public-event" @(Model.IsPublicEvent ? "checked" : "") onclick="onCheckEventType(this, 'IsPublicEvent');" />Public
                <input type="checkbox" id="is-private-event" @(Model.IsPrivateEvent ? "checked" : "") onclick="onCheckEventType(this, 'IsPrivateEvent');" />Private
            </div>
            @Html.HiddenFor(m => m.IsRetailEvent)
            @Html.HiddenFor(m => m.IsCorporateEvent)
            @Html.HiddenFor(m => m.IsHealthPlanEvent)
            @Html.HiddenFor(m => m.IsPublicEvent)
            @Html.HiddenFor(m => m.IsPrivateEvent)
        </div>
        <div class="editor-column" style="width: 20%">
            <div class="small-text">
                GC Delivered
            </div>
            @Html.HiddenFor(m => m.IsGiftCertificateDeleievred)
            @*@Html.DropDownListFor(m => m.IsGiftCertificateDeleievred, DropDownHelper.GetYesNoDropdownList(Model.IsGiftCertificateDeleievred), new { @style = "width:70%" })*@
            <input type="radio" name="IsGiftCertificateDeleievred" @(string.IsNullOrEmpty(Model.IsGiftCertificateDeleievred) ? "checked" : "") onclick="setGCDeliveredFilter('');" /> Show All
            <input type="radio" name="IsGiftCertificateDeleievred" @(Model.IsGiftCertificateDeleievred == "yes" ? "checked" : "") onclick="setGCDeliveredFilter('yes');" /> Yes
            <input type="radio" name="IsGiftCertificateDeleievred" @(Model.IsGiftCertificateDeleievred == "no" ? "checked" : "") onclick="setGCDeliveredFilter('no');" /> No
        </div>
    </div>

    <div class="editor-column" style="padding-top: 10px; text-align: right; float: right;">
        @Html.ActionLink("Clear", "DailyPatientRecap", "Reports") | @Html.SubmitButton("Search")
    </div>
</div>
<script type="text/javascript" language="javascript">

    function onCheckEventType(checkBox, hiddenBox) {
        if ($(checkBox).attr("checked")) {
            $("#" + hiddenBox).val('@Boolean.TrueString');
        }
        else {
            $("#" + hiddenBox).val('@Boolean.FalseString');
        }
    }

    function setGCDeliveredFilter(isGcDelievred) {
        $('input[type="hidden"][name="IsGiftCertificateDeleievred"]').val(isGcDelievred);
    }

</script>
