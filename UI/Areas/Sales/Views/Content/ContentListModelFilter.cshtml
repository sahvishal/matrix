@using Falcon.App.UI.HtmlHelpers
@model Falcon.App.Core.Sales.ViewModels.ContentListModelFilter
<h2>
    Search Records</h2>
<div style="padding-left: 5px; overflow: hidden;">
    <div class="editor-column" style="width: 18%">
        <div class="small-text">
            Title:</div>
        @Html.TextBoxFor(m => m.Title)
    </div>
    <div class="editor-column" style="width: 35%">
        <div class="small-text">
            &nbsp;
        </div>
        <b>Records: </b>&nbsp; &nbsp; &nbsp; All
        <input type="radio" id="records-all" name="AllRecords" onclick="setActive(false, false);" @(!Model.Inactive && !Model.Active ? "checked=checked" : "") />
        &nbsp; &nbsp; &nbsp; Active
        <input type="radio" id="records-active" name="AllRecords" onclick="setActive(true, false);" @(Model.Active ? "checked=checked" : "") />
        &nbsp; &nbsp; &nbsp; InActive
        <input type="radio" name="AllRecords" onclick="setActive(false, true);" @(Model.Inactive ? "checked=checked" : "") />
        @Html.HiddenFor(m => m.Active, new { @class = "records-active-hidden" })
        @Html.HiddenFor(m => m.Inactive, new { @class = "records-inactive-hidden" })
    </div>
    <div class="editor-column" style="padding-top: 10px; width: 18%; float: right; text-align: right;">
        @Html.ActionLink("Clear", "Index", "Content") | @Html.SubmitButton("Search")
    </div>
</div>
<script language="javascript" type="text/javascript">

    function setActive(isActive, isInactive) {
        $(".records-active-hidden").val(isActive);
        $(".records-inactive-hidden").val(isInactive);
    }

</script>
