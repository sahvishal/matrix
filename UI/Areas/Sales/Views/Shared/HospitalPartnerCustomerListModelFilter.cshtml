@using Falcon.App.Core.Sales.ViewModels
@using Falcon.App.UI.HtmlHelpers
@using Falcon.App.DependencyResolution
@using Falcon.App.Core.Application
@model HospitalPartnerCustomerListModelFilter

<link href="/Content/Styles/jquery.qtip.min.css" rel="stylesheet" type="text/css" />
<script src="/Scripts/jquery.qtip.min.js" type="text/javascript"></script>
<h2>
    Search Records</h2>
@{
    var currentOrgRole = IoC.Resolve<ISessionContext>().UserSession.CurrentOrganizationRole;
}
<div style="padding-left: 5px; overflow: hidden;">
    <div class="editor-column" style="width: 30%">
        <div class="small-text">
            Date:
        </div>
        @Html.TextBoxFor(m => m.FromDate, new { @class = "date", @style = "width:40%;" })
        -
        @Html.TextBoxFor(m => m.ToDate, new { @class = "date", @style = "width:40%;" })
        @if (currentOrgRole.CheckRole((long)Falcon.App.Core.Enum.Roles.HospitalPartnerCoordinator))
        {
            @Html.HiddenFor(m => m.HospitalPartnerId)
        }
        else if (currentOrgRole.CheckRole((long)Falcon.App.Core.Enum.Roles.HospitalFacilityCoordinator))
        {
            @Html.HiddenFor(m => m.HospitalFacilityId)
        }
    </div>  
    <div class="editor-column" style="width: 20%">
        <div class="small-text">Date Type:</div>
        @Html.DropDownListFor(m => m.DateType, DropDownHelper.GetHospitalPartnerCustomerDateTypeFilter(), new { @style = "width:90%;" })
    </div>  
    <div class="editor-column" style="width: 25%">
        <div class="small-text">
            Customer Name:
        </div>
        @Html.TextBoxFor(m => m.CustomerName, new { @style="width:80%;" })
    </div>
    <div class="editor-column" style="width: 18%;">
        <div class="small-text">
            Customer Id:
        </div>
        @Html.TextBoxFor(m => m.CustomerId)
    </div>
</div>
<div style="padding-left: 5px; overflow: hidden; margin-top:10px;">
    <div class="editor-column" style="width: 13%">
        <div class="small-text">
            Pod:
        </div>
        @Html.TextBoxFor(m => m.Pod, new { @style="width:90%;" })
    </div>
    <div class="editor-column" style="width: 17%">
        <div class="small-text">
            Result Summary:
        </div>
        @Html.DropDownListFor(m => m.ResultSummary, DropDownHelper.GetResultSummary(), new { @style = "width:80%;" })
    </div>
    <div class="editor-column" style="width: 20%">
        <div class="small-text">
            Status:
        </div>
        @Html.DropDownListFor(m => m.Status, DropDownHelper.GetHospitalPartnerCustomerStatus(), new { @style = "width:90%;" })
    </div>    
    <div class="editor-column" style="width: 18%;">
        <div class="small-text">
            Phone Number:
        </div>
        @Html.TextBoxFor(m => m.PhoneNumber)
    </div>
    <div class="editor-column" style="width: 25%;">
        <div class="small-text">&nbsp;</div>
        @Html.CheckBoxFor(m=>m.CriticalMarkedByTechnician) Critical Marked by Technician <a id="critical-qtip"><b>?</b></a>
    </div>
</div>
<div style="padding-left: 5px; padding-top: 10px; overflow: hidden;">
    @if (currentOrgRole.CheckRole((long)Falcon.App.Core.Enum.Roles.FranchisorAdmin))
    {
        <div class="editor-column" style="width: 26%">
            <div class="small-text">
                Hospital Partners:
            </div>
            @Html.DropDownListFor(m => m.HospitalPartnerId, DropDownHelper.HospitalPartners(), new { @style = "width:100%;" })
        </div>  
        <div class="editor-column" style="width: 26%">
            <div class="small-text">
                Corporate Sponsors:
            </div>
            @Html.DropDownListFor(m => m.CorporateAccountId, DropDownHelper.GetCorporateAccounts(), new { @style = "width:100%;" })
        </div>
        <div class="editor-column" style="width: 45%; margin-left:10px;">
            <div class="small-text" style="margin-bottom:3px;">Event Type: </div>
            <div>
                @Html.CheckBoxFor(m => m.IsRetailEvent) Retail
                @Html.CheckBoxFor(m => m.IsCorporateEvent) Corporate
                @Html.CheckBoxFor(m => m.IsHospitalPartnerAttached) Hospital partner
            </div>
            <div>
                @Html.CheckBoxFor(m => m.IsPublicEvent) Public
                @Html.CheckBoxFor(m => m.IsPrivateEvent) Private
            </div>
        </div>
        <div class="editor-column" style="float: right; width: 22%; padding-top: 12px; text-align: right;">
            @Html.ActionLink("Clear", "CustomerAggregateResultSummary", "HospitalPartner") | @Html.SubmitButton("Search")
        </div>
    }
    else
    {
    <div class="editor-column" style="float: right; width: 22%; padding-top: 12px; text-align: right;">
        @Html.ActionLink("Clear", "SearchCustomers", "HospitalPartner") | @Html.SubmitButton("Search")
    </div>
    }
</div>
@Html.HiddenFor(m=>m.EventId)
@Html.HiddenFor(m=>m.SortingColumn)
@Html.HiddenFor(m=>m.SortingOrder)

<script type="text/javascript" language="javascript">
    function Sorting(currentSortingColumn) {
        var prevSortingColumn = $("#SortingColumn").val();

        if (prevSortingColumn == currentSortingColumn) {

            if ($("#SortingOrder").val() == '@((int)Falcon.App.Core.Sales.Enum.SortingOrder.Ascending)') {
                $("#SortingOrder").val('@((int)Falcon.App.Core.Sales.Enum.SortingOrder.Descending)');
            }
            else {
                $("#SortingOrder").val('@((int)Falcon.App.Core.Sales.Enum.SortingOrder.Ascending)');
            }
        }
        else {
            $("#SortingColumn").val(currentSortingColumn);
            $("#SortingOrder").val('@((int)Falcon.App.Core.Sales.Enum.SortingOrder.Ascending)');
        }

        $('input[type="submit"]').click();
    }

    $(document).ready(function () {
        //debugger;
        var currentDate = new Date();
        $(".date").val(function (index, value) { return value.substr(0, value.indexOf(" ")); }).datepicker({
            changeMonth: true,
            changeYear: true,
            yearRange: ("1900:" + (currentDate.getFullYear() + 20)),
            defaultDate: currentDate,
            //maxDate: new Date(currentDate.getMonth(), currentDate.getDate(), currentDate.getFullYear + 20),
            minDate: new Date("01/01/1900")
        });

        $("#critical-qtip").qtip({
            position: {
                my: 'left top'
            },
            style: {
                width: '500px'
            },
            content: {
                title: "Critical Disclaimer",
                text: function (api) {
                    return "In case of Criticals study are preliminary. They have not yet been read and interpreted by a @(IoC.Resolve<ISettings>().CompanyName) physician.";
                }
            }
        });
    });

</script>
