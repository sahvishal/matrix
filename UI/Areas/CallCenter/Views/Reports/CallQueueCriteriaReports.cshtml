@using Falcon.App.Core.CallQueues.Enum
@using Falcon.App.UI.HtmlHelpers
@model Falcon.App.Core.CallQueues.ViewModels.HealthPlanCallQueueListModel
@{
    ViewBag.Title = "Call Queue Criteria";
}
<h1>
    Call Queue Criteria
</h1>
<style type="text/css">
    .assignments-list ul li {
        list-style-type: none;
    }
</style>
<div id="list-filter">
    @{Html.BeginForm("CallQueueCriteriaReports", "Reports", FormMethod.Get);}
    @Html.Partial("CallQueueCustomerReports", new ViewDataDictionary(Model.Filter))
    @{Html.EndForm();}
</div>
@if (Model != null && Model.Collection != null && Model.Collection.Any())
{
    @Html.DisplayFor(m => m.PagingModel)
    <div style="margin-bottom: 10px; overflow: auto;">
        <table id="list-view">
            <tr>
                <th nowrap>Criteria</th>
                <th>HealthPlan</th>
                <th nowrap>CallQueue</th>
                <th nowrap>Modified By</th>
                <th nowrap>Modified On</th>
                <th nowrap>Action</th>
            </tr>
            @foreach (var item in Model.Collection)
            {
                <tr>
                    <td>
                        @if (string.IsNullOrEmpty(item.Criterias.CriteriaName))
                        {
                            if (item.Criterias.Category == HealthPlanCallQueueCategory.UncontactedCustomers)
                            {
                                <div>
                                    Never been contacted in last one year
                                </div>
                            }

                            if (item.Criterias.Category == HealthPlanCallQueueCategory.LanguageBarrier)
                            {
                                <div>
                                    Customer has been marked as Language Barrier
                                </div>
                            }

                            if (item.Criterias.Category == HealthPlanCallQueueCategory.FillEventsHealthPlan)
                            {
                                <div>
                                    Booking percentage is less than @(item.Criterias.Percentage)% and are scheduled in next @(item.Criterias.NoOfDays + (item.Criterias.NoOfDays > 1 ? "days" : "day"))
                                </div>

                            }
                            if (item.Criterias.Category == HealthPlanCallQueueCategory.CallRound)
                            {
                                var textForNumberOfDays = DropDownHelper.GetCallRoundNumberOfDays().Single(x => x.Value == item.Criterias.NoOfDays.ToString()).Text;
                                var roundOfCalls = DropDownHelper.GetCallRoundRoundOfCalls().Single(x => x.Value == item.Criterias.RoundOfCalls.ToString()).Text;

                                <div>
                                    @(roundOfCalls + (item.Criterias.RoundOfCalls > 0 ? " number of outbound calls completed" : string.Empty)) in last @(textForNumberOfDays)
                                </div>
                            }
                            if (item.Criterias.Category == HealthPlanCallQueueCategory.NoShows)
                            {
                                <div>Marked as No Show between from @(item.Criterias.StartDate.Value.ToShortDateString()) and @(item.Criterias.EndDate.Value.ToShortDateString())</div>
                            }
                            if (item.Criterias.Category == HealthPlanCallQueueCategory.ZipRadius)
                            {
                                var textForRadius = DropDownHelper.Redius().SingleOrDefault(x => x.Value == item.Criterias.Radius.ToString());

                                <div>
                                    Customers have zip code @(item.Criterias.Zipcode) in  @(textForRadius.Text)
                                </div>

                            }
                            if (item.Criterias.Category == HealthPlanCallQueueCategory.MailRound)
                            {
                                <div>
                                    @item.Criterias.CampaignName
                                </div>
                            }
                        }
                        else
                        {
                            <div>
                                @item.Criterias.CriteriaName
                            </div>
                        }
                    </td>
                    <td style="width:200px;">
                        @if (item.IsDefault)
                        {
                            <text>Default Criteria</text>
                        }
                        else
                        {
                            @Html.DisplayFor(modelItem => item.HealthPlan)
                        }

                    </td>
                    <td>@Html.DisplayFor(modelItem => item.HealthPlanCallQueue)</td>
                    <td> @item.ModifiedBy</td>
                    <td> @item.ModifiedOn.ToShortDateString()</td>
                    <td nowrap>
                        @if (item.Criterias.Category == HealthPlanCallQueueCategory.FillEventsHealthPlan)
                        {
                            <a href="javascript:void(0);" onclick="viewFillEventsCustomers(@item.CallQueueId, @item.Id) "> View Events</a>
                        }
                        else if (item.Criterias.Category == HealthPlanCallQueueCategory.MailRound)
                        {
                            <a href="javascript:void(0);" onclick="viewCampaignCallQueue(@item.Criterias.CampaignId ,@item.CallQueueId, @item.Id) ">View Customers</a>
                        }
                        else
                        {
                            <a href="javascript:void(0);" onclick="viewCallQueueCustomers(@item.CallQueueId, @item.Id) ">View Customers</a>
                        }

                    </td>
                </tr>
            }
        </table>
    </div>
    @Html.DisplayFor(m => m.PagingModel)
}
else
{
    <h2>
        No Records Found!
    </h2>
}

@section scripts {
    <script type="text/javascript">
        $(function () {
            $("table#list-view tr:even").addClass("alt-row");
        });


        $(function () {
            $("tr:not(:has(th))").hover(function () {
                $(this).addClass('row-hover');
            },
                function () {
                    $(this).removeClass('row-hover');
                });
        });

        function viewFillEventsCustomers(callQueueId, criteriaId) {
            window.location.href = "/CallCenter/Reports/FillEventCallQueue?CallQueueId=@Model.Filter.CallQueueId&CriteriaId=" + criteriaId + "&HealthPlanId=@Model.Filter.HealthPlanId";
        }

        function viewCampaignCallQueue(campaignId, callQueueId, criteriaId) {
            window.location.href = "/CallCenter/Reports/CallQueueCustomers?CampaignId=" + campaignId + "&CallQueueId=@Model.Filter.CallQueueId&CriteriaId=" + criteriaId + "&HealthPlanId=@Model.Filter.HealthPlanId";
        }

        function viewCallQueueCustomers(callQueueId, criteriaId) {
            window.location.href = "/CallCenter/Reports/CallQueueCustomers?CallQueueId=@Model.Filter.CallQueueId&CriteriaId=" + criteriaId + "&HealthPlanId=@Model.Filter.HealthPlanId";
        }
    </script>
}