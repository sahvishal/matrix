///////////////////////////////////////////////////////////////
// This is generated code. 
//////////////////////////////////////////////////////////////
// Code is generated using LLBLGen Pro version: 2.6
// Code is generated on: 27 June 2019 17:22:55
// Code is generated using templates: SD.TemplateBindings.SqlServerSpecific.NET20
// Templates vendor: Solutions Design.
// Templates version: 
//////////////////////////////////////////////////////////////
using System;
using System.Collections;
using System.Data;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace Falcon.Data.Sql
{
	/// <summary>
	/// Singleton implementation of the PersistenceInfoProvider. This class is the singleton wrapper through which the actual instance is retrieved.
	/// </summary>
	/// <remarks>It uses a single instance of an internal class. The access isn't marked with locks as the PersistenceInfoProviderBase class is threadsafe.</remarks>
	internal sealed class PersistenceInfoProviderSingleton
	{
		#region Class Member Declarations
		private static readonly IPersistenceInfoProvider _providerInstance = new PersistenceInfoProviderCore();
		#endregion
		
		/// <summary>private ctor to prevent instances of this class.</summary>
		private PersistenceInfoProviderSingleton()
		{
		}

		/// <summary>Dummy static constructor to make sure threadsafe initialization is performed.</summary>
		static PersistenceInfoProviderSingleton()
		{
		}

		/// <summary>Gets the singleton instance of the PersistenceInfoProviderCore</summary>
		/// <returns>Instance of the PersistenceInfoProvider.</returns>
		public static IPersistenceInfoProvider GetInstance()
		{
			return _providerInstance;
		}
	}

	/// <summary>Actual implementation of the PersistenceInfoProvider. Used by singleton wrapper.</summary>
	internal class PersistenceInfoProviderCore : PersistenceInfoProviderBase
	{
		/// <summary>Initializes a new instance of the <see cref="PersistenceInfoProviderCore"/> class.</summary>
		internal PersistenceInfoProviderCore()
		{
			Init();
		}

		/// <summary>Method which initializes the internal datastores with the structure of hierarchical types.</summary>
		private void Init()
		{
			base.InitClass((639 + 12));
			InitAccessControlObjectEntityMappings();
			InitAccessControlObjectUrlEntityMappings();
			InitAccessObjectScopeOptionEntityMappings();
			InitAccountEntityMappings();
			InitAccountAdditionalFieldsEntityMappings();
			InitAccountCallCenterOrganizationEntityMappings();
			InitAccountCallQueueSettingEntityMappings();
			InitAccountCheckoutPhoneNumberEntityMappings();
			InitAccountCoordinatorProfileEntityMappings();
			InitAccountCustomerResultTestDependencyEntityMappings();
			InitAccountEventZipEntityMappings();
			InitAccountEventZipSubstituteEntityMappings();
			InitAccountHealthPlanResultTestDependencyEntityMappings();
			InitAccountHraChatQuestionnaireEntityMappings();
			InitAccountNotReviewableTestEntityMappings();
			InitAccountPackageEntityMappings();
			InitAccountPcpResultTestDependencyEntityMappings();
			InitAccountTestEntityMappings();
			InitAccountTestHcpcsCodeEntityMappings();
			InitActivityEntityMappings();
			InitActivityTypeEntityMappings();
			InitAdditionalFieldsEntityMappings();
			InitAddressEntityMappings();
			InitAdvocateManagerTeamEntityMappings();
			InitAfadvertiserEntityMappings();
			InitAfAdvertisingCommissionEntityMappings();
			InitAfaffiliateCampaignEntityMappings();
			InitAfaffiliateCampaignMarketingMaterialEntityMappings();
			InitAfcampaignEntityMappings();
			InitAfcampaignCreativeEntityMappings();
			InitAfcampaignSubAdvocateEntityMappings();
			InitAfcampaignTemplateEntityMappings();
			InitAfchannelEntityMappings();
			InitAfcommisionEntityMappings();
			InitAfDailyLogImpressionClickEntityMappings();
			InitAffiliateProfileEntityMappings();
			InitAfimpressionEntityMappings();
			InitAfimpressionLogEntityMappings();
			InitAfincomingPhoneEntityMappings();
			InitAflAffiliatePaymentMethodEntityMappings();
			InitAfmanualCheckEntityMappings();
			InitAfmarketingMaterialEntityMappings();
			InitAfMarketingMaterialBannerSizeEntityMappings();
			InitAfmarketingMaterialGroupEntityMappings();
			InitAfmarketingMaterialTypeEntityMappings();
			InitAfpaymentEntityMappings();
			InitAfpaypalEntityMappings();
			InitAfppcclickLogEntityMappings();
			InitAfredirectUrlEntityMappings();
			InitApplicationAuthenticationEntityMappings();
			InitBarrierEntityMappings();
			InitBillingAccountEntityMappings();
			InitBillingAccountTestEntityMappings();
			InitBlockedDaysEntityMappings();
			InitBlockedDaysFranchiseeEntityMappings();
			InitCallCenterAgentTeamEntityMappings();
			InitCallCenterAgentTeamLogEntityMappings();
			InitCallCenterNotesEntityMappings();
			InitCallCenterRepProfileEntityMappings();
			InitCallCenterTeamEntityMappings();
			InitCallDetailsEntityMappings();
			InitCallQueueEntityMappings();
			InitCallQueueAssignmentEntityMappings();
			InitCallQueueCriteriaEntityMappings();
			InitCallQueueCustomerEntityMappings();
			InitCallQueueCustomerCallEntityMappings();
			InitCallQueueCustomerLockEntityMappings();
			InitCallQueueCustomTagEntityMappings();
			InitCallRoundCallQueueEntityMappings();
			InitCallRoundCallQueueCriteriaAssignmentEntityMappings();
			InitCallsEntityMappings();
			InitCallUploadEntityMappings();
			InitCallUploadLogEntityMappings();
			InitCampaignEntityMappings();
			InitCampaignActivityEntityMappings();
			InitCampaignActivityAssignmentEntityMappings();
			InitCampaignAssignmentEntityMappings();
			InitCampaignTagEntityMappings();
			InitCampaignTagMappingEntityMappings();
			InitCareCodingOutboundEntityMappings();
			InitCarrierEntityMappings();
			InitCashPaymentEntityMappings();
			InitCategoriesEntityMappings();
			InitCdcontentGeneratorTrackingEntityMappings();
			InitChaperoneAnswerEntityMappings();
			InitChaperoneQuestionEntityMappings();
			InitChaperoneSignatureEntityMappings();
			InitChargeCardEntityMappings();
			InitChargeCardPaymentEntityMappings();
			InitChaseCampaignEntityMappings();
			InitChaseCampaignTypeEntityMappings();
			InitChaseChannelLevelEntityMappings();
			InitChaseGroupEntityMappings();
			InitChaseOutboundEntityMappings();
			InitChaseProductEntityMappings();
			InitCheckEntityMappings();
			InitCheckListAnswerEntityMappings();
			InitCheckListGroupEntityMappings();
			InitChecklistGroupQuestionEntityMappings();
			InitCheckListQuestionEntityMappings();
			InitCheckListTemplateEntityMappings();
			InitCheckListTemplateQuestionEntityMappings();
			InitCheckPaymentEntityMappings();
			InitCityEntityMappings();
			InitClaimEntityMappings();
			InitClickConversionEntityMappings();
			InitClickKeywordEntityMappings();
			InitClickLogEntityMappings();
			InitClientEntityMappings();
			InitClinicalTestQualificationCriteriaEntityMappings();
			InitCommunicationModeEntityMappings();
			InitContactCallEntityMappings();
			InitContactCallStatusEntityMappings();
			InitContactFranchiseeAccessEntityMappings();
			InitContactMeetingEntityMappings();
			InitContactNotesEntityMappings();
			InitContactsEntityMappings();
			InitContactTypeEntityMappings();
			InitContentEntityMappings();
			InitContractEntityMappings();
			InitCorporateShippingOptionEntityMappings();
			InitCorporateTagEntityMappings();
			InitCorporateUploadEntityMappings();
			InitCountryEntityMappings();
			InitCouponsEntityMappings();
			InitCouponSignUpModeEntityMappings();
			InitCouponTypeEntityMappings();
			InitCreditCardTypeEntityMappings();
			InitCriteriaEntityMappings();
			InitCriticalCustomerCommunicationRecordEntityMappings();
			InitCriticalQuestionEntityMappings();
			InitCurrentMedicationEntityMappings();
			InitCustomCampaignContentEntityMappings();
			InitCustomerAccountGlocomNumberEntityMappings();
			InitCustomerActivityTypeUploadEntityMappings();
			InitCustomerBillingAccountEntityMappings();
			InitCustomerCallAttemptsEntityMappings();
			InitCustomerCallQueueCallAttemptEntityMappings();
			InitCustomerChaseCampaignEntityMappings();
			InitCustomerChaseChannelEntityMappings();
			InitCustomerChaseProductEntityMappings();
			InitCustomerClinicalQuestionAnswerEntityMappings();
			InitCustomerEligibilityEntityMappings();
			InitCustomerEventCriticalTestDataEntityMappings();
			InitCustomerEventPriorityInQueueDataEntityMappings();
			InitCustomerEventReadingEntityMappings();
			InitCustomerEventScreeningTestsEntityMappings();
			InitCustomerEventTestFindingEntityMappings();
			InitCustomerEventTestIncidentalFindingEntityMappings();
			InitCustomerEventTestIncidentalFindingDetailEntityMappings();
			InitCustomerEventTestPhysicianEvaluationEntityMappings();
			InitCustomerEventTestPhysicianNoteEntityMappings();
			InitCustomerEventTestStandardFindingEntityMappings();
			InitCustomerEventTestStateEntityMappings();
			InitCustomerEventUnableScreenReasonEntityMappings();
			InitCustomerHealthInfoEntityMappings();
			InitCustomerHealthInfoArchiveEntityMappings();
			InitCustomerHealthQuestionGroupEntityMappings();
			InitCustomerHealthQuestionsEntityMappings();
			InitCustomerIcdCodeEntityMappings();
			InitCustomerLockForCallEntityMappings();
			InitCustomerMedicareQuestionAnswerEntityMappings();
			InitCustomerOrderHistoryEntityMappings();
			InitCustomerPhoneNumberUpdateUploadEntityMappings();
			InitCustomerPhoneNumberUpdateUploadLogEntityMappings();
			InitCustomerPredictedZipEntityMappings();
			InitCustomerPrimaryCarePhysicianEntityMappings();
			InitCustomerProfileEntityMappings();
			InitCustomerProfileHistoryEntityMappings();
			InitCustomerRegistrationNotesEntityMappings();
			InitCustomerResultPostedEntityMappings();
			InitCustomerResultScreeningCommunicationEntityMappings();
			InitCustomerSkipReviewEntityMappings();
			InitCustomerSurveyEntityMappings();
			InitCustomerSurveyQuestionEntityMappings();
			InitCustomerSurveyQuestionAnswerEntityMappings();
			InitCustomerTagEntityMappings();
			InitCustomerTargetedEntityMappings();
			InitCustomerTraleEntityMappings();
			InitCustomerUnsubscribedSmsNotificationEntityMappings();
			InitCustomerWarmTransferEntityMappings();
			InitCustomEventNotificationEntityMappings();
			InitDemandDraftPaymentDetailsEntityMappings();
			InitDependentDisqualifiedTestEntityMappings();
			InitDiabeticRetinopathyParserlogEntityMappings();
			InitDigitalAssetAccessLogEntityMappings();
			InitDirectMailEntityMappings();
			InitDirectMailTypeEntityMappings();
			InitDisqualifiedTestEntityMappings();
			InitEcheckPaymentEntityMappings();
			InitEligibilityEntityMappings();
			InitEligibilityUploadEntityMappings();
			InitEmailTemplateEntityMappings();
			InitEmailTemplateMacroEntityMappings();
			InitEncounterEntityMappings();
			InitEventAccountEntityMappings();
			InitEventAccountTestHcpcsCodeEntityMappings();
			InitEventActivityTemplateEntityMappings();
			InitEventActivityTemplateCallEntityMappings();
			InitEventActivityTemplateEmailEntityMappings();
			InitEventActivityTemplateHostEntityMappings();
			InitEventActivityTemplateMeetingEntityMappings();
			InitEventActivityTemplateTaskEntityMappings();
			InitEventAffiliateDetailsEntityMappings();
			InitEventAppointmentEntityMappings();
			InitEventAppointmentCancellationLogEntityMappings();
			InitEventAppointmentChangeLogEntityMappings();
			InitEventCallDetailsEntityMappings();
			InitEventCampaignDetailsEntityMappings();
			InitEventChecklistTemplateEntityMappings();
			InitEventCouponsEntityMappings();
			InitEventCustomerBarrierEntityMappings();
			InitEventCustomerBasicBioMetricEntityMappings();
			InitEventCustomerCriticalQuestionEntityMappings();
			InitEventCustomerCurrentMedicationEntityMappings();
			InitEventCustomerCustomNotificationEntityMappings();
			InitEventCustomerDiagnosisEntityMappings();
			InitEventCustomerEligibilityEntityMappings();
			InitEventCustomerEncounterEntityMappings();
			InitEventCustomerEvaluationLockEntityMappings();
			InitEventCustomerGiftCardEntityMappings();
			InitEventCustomerIcdCodesEntityMappings();
			InitEventCustomerNotificationEntityMappings();
			InitEventCustomerOrderDetailEntityMappings();
			InitEventCustomerPaymentEntityMappings();
			InitEventCustomerPdfgenerationErrorLogEntityMappings();
			InitEventCustomerPreApprovedPackageTestEntityMappings();
			InitEventCustomerPreApprovedTestEntityMappings();
			InitEventCustomerPrimaryCarePhysicianEntityMappings();
			InitEventCustomerQuestionAnswerEntityMappings();
			InitEventCustomerRequiredTestEntityMappings();
			InitEventCustomerResultEntityMappings();
			InitEventCustomerResultBloodLabEntityMappings();
			InitEventCustomerResultBloodLabParserEntityMappings();
			InitEventCustomerResultHistoryEntityMappings();
			InitEventCustomerResultTraleEntityMappings();
			InitEventCustomerRetestEntityMappings();
			InitEventCustomersEntityMappings();
			InitEventCustomerTestNotPerformedNotificationEntityMappings();
			InitEventFluConsentTemplateEntityMappings();
			InitEventHospitalFacilityEntityMappings();
			InitEventHospitalPartnerEntityMappings();
			InitEventHostPromotionsEntityMappings();
			InitEventMarketingOffersEntityMappings();
			InitEventMeetingDetailsEntityMappings();
			InitEventNoteEntityMappings();
			InitEventNotesLogEntityMappings();
			InitEventNotificationEntityMappings();
			InitEventPackageDetailsEntityMappings();
			InitEventPackageOrderItemEntityMappings();
			InitEventPackageTestEntityMappings();
			InitEventPaymentDetailsEntityMappings();
			InitEventPerformanceMailStatusEntityMappings();
			InitEventPhysicianTestEntityMappings();
			InitEventPodEntityMappings();
			InitEventPodRoomEntityMappings();
			InitEventPodRoomTestEntityMappings();
			InitEventProductExclusionEntityMappings();
			InitEventProductTypeEntityMappings();
			InitEventPublicationEntityMappings();
			InitEventsEntityMappings();
			InitEventScheduleTemplateEntityMappings();
			InitEventSchedulingSlotEntityMappings();
			InitEventSlotAppointmentEntityMappings();
			InitEventStaffAssignmentEntityMappings();
			InitEventSurveyTemplateEntityMappings();
			InitEventTaskDetailsEntityMappings();
			InitEventTestEntityMappings();
			InitEventTestOrderItemEntityMappings();
			InitEventTypeEntityMappings();
			InitEventZipEntityMappings();
			InitEventZipProductTypeEntityMappings();
			InitEventZipProductTypeSubstituteEntityMappings();
			InitExitInterviewAnswerEntityMappings();
			InitExitInterviewQuestionEntityMappings();
			InitExitInterviewSignatureEntityMappings();
			InitExportableReportsEntityMappings();
			InitExportableReportsQueueEntityMappings();
			InitFileEntityMappings();
			InitFillEventCallQueueEntityMappings();
			InitFillEventCallQueueCriteriaAssignmentEntityMappings();
			InitFluConsentAnswerEntityMappings();
			InitFluConsentQuestionEntityMappings();
			InitFluConsentSignatureEntityMappings();
			InitFluConsentTemplateEntityMappings();
			InitFluConsentTemplateQuestionEntityMappings();
			InitFraminghamCalculationSourceEntityMappings();
			InitFraminghamScoreRangeEntityMappings();
			InitFranchiseeApplicationEntityMappings();
			InitFranchiseeTerritoryEntityMappings();
			InitFranchiseeWiringInstructionsEntityMappings();
			InitGcNotGivenReasonEntityMappings();
			InitGiftCertificateEntityMappings();
			InitGiftCertificateOrderItemEntityMappings();
			InitGiftCertificatePaymentEntityMappings();
			InitGiftCertificateTypeEntityMappings();
			InitGlobalConfigurationEntityMappings();
			InitGuardianDetailsEntityMappings();
			InitHafTemplateEntityMappings();
			InitHafTemplateQuestionEntityMappings();
			InitHcpcsCodeEntityMappings();
			InitHealthPlanCallQueueCriteriaEntityMappings();
			InitHealthPlanCallQueueCriteriaAssignmentEntityMappings();
			InitHealthPlanCriteriaAssignmentEntityMappings();
			InitHealthPlanCriteriaAssignmentUploadEntityMappings();
			InitHealthPlanCriteriaDirectMailEntityMappings();
			InitHealthPlanCriteriaTeamAssignmentEntityMappings();
			InitHealthPlanEventZipEntityMappings();
			InitHealthPlanFillEventCallQueueEntityMappings();
			InitHealthPlanRevenueEntityMappings();
			InitHealthPlanRevenueItemEntityMappings();
			InitHealthQuestionDependencyRuleEntityMappings();
			InitHospitalFacilityEntityMappings();
			InitHospitalFacilityCampaignEntityMappings();
			InitHospitalPartnerEntityMappings();
			InitHospitalPartnerCustomerEntityMappings();
			InitHospitalPartnerEventNotesEntityMappings();
			InitHospitalPartnerHospitalFacilityEntityMappings();
			InitHospitalPartnerPackageEntityMappings();
			InitHospitalPartnerShippingOptionEntityMappings();
			InitHospitalPartnerTerritoryEntityMappings();
			InitHostAdvocateDetailEntityMappings();
			InitHostEventDetailsEntityMappings();
			InitHostFacilityRankingEntityMappings();
			InitHostImageEntityMappings();
			InitHostNotesEntityMappings();
			InitHostPaymentEntityMappings();
			InitHostPaymentTransactionEntityMappings();
			InitIcdCodesEntityMappings();
			InitIflocationMasterEntityMappings();
			InitIncidentalFindingIncidentalFindingReadingGroupEntityMappings();
			InitIncidentalFindingReadingGroupEntityMappings();
			InitIncidentalFindingReadingGroupItemEntityMappings();
			InitIncidentalFindingsEntityMappings();
			InitIncomingPhoneNumberResolverRuleEntityMappings();
			InitInsuranceCompanyEntityMappings();
			InitInsurancePaymentEntityMappings();
			InitInsuranceServiceTypeEntityMappings();
			InitInventoryItemEntityMappings();
			InitInventoryItemTestEntityMappings();
			InitItemEntityMappings();
			InitItemTypeEntityMappings();
			InitKynLabValuesEntityMappings();
			InitLabEntityMappings();
			InitLanguageEntityMappings();
			InitLanguageBarrierCallQueueEntityMappings();
			InitLanguageBarrierCallQueueCriteriaAssignmentEntityMappings();
			InitLoginOtpEntityMappings();
			InitLoginSettingsEntityMappings();
			InitLoincCrosswalkEntityMappings();
			InitLoincLabDataEntityMappings();
			InitLookupEntityMappings();
			InitLookupTypeEntityMappings();
			InitMailRoundCallQueueEntityMappings();
			InitMailRoundCallQueueCriteriaAssignmentEntityMappings();
			InitMarketingOfferRoleMappingEntityMappings();
			InitMarketingOffersEntityMappings();
			InitMarketingOfferSignUpModeEntityMappings();
			InitMarketingOfferTypeEntityMappings();
			InitMarketingOrderShippingInfoEntityMappings();
			InitMarketingPrintOrderEntityMappings();
			InitMarketingPrintOrderEventMappingEntityMappings();
			InitMarketingPrintOrderItemEntityMappings();
			InitMarketingPrintOrderProspectListMappingEntityMappings();
			InitMarketingSourceEntityMappings();
			InitMarketingSourceTerritoryEntityMappings();
			InitMedicalHistoryReadingAssosciationEntityMappings();
			InitMedicalVendorProfileEntityMappings();
			InitMedicalVendorTypeEntityMappings();
			InitMedicareGroupDependencyRuleEntityMappings();
			InitMedicareQuestionEntityMappings();
			InitMedicareQuestionDependencyRuleEntityMappings();
			InitMedicareQuestionGroupEntityMappings();
			InitMedicareQuestionsRemarksEntityMappings();
			InitMedicationEntityMappings();
			InitMedicationUploadEntityMappings();
			InitMedicationUploadLogEntityMappings();
			InitMemberUploadLogEntityMappings();
			InitMemberUploadParseDetailEntityMappings();
			InitMergeCustomerUploadEntityMappings();
			InitMergeCustomerUploadLogEntityMappings();
			InitMolinaAttestationEntityMappings();
			InitMVPaymentCheckDetailsEntityMappings();
			InitMvuserClassificationEntityMappings();
			InitNdcEntityMappings();
			InitNoShowCallQueueEntityMappings();
			InitNoShowCallQueueCriteriaAssignmentEntityMappings();
			InitNoteEntityMappings();
			InitNotesDetailsEntityMappings();
			InitNotificationEntityMappings();
			InitNotificationEmailEntityMappings();
			InitNotificationMediumEntityMappings();
			InitNotificationPhoneEntityMappings();
			InitNotificationSubscribersEntityMappings();
			InitNotificationTypeEntityMappings();
			InitOrderEntityMappings();
			InitOrderDetailEntityMappings();
			InitOrderItemEntityMappings();
			InitOrganizationEntityMappings();
			InitOrganizationRoleUserEntityMappings();
			InitOrganizationRoleUserTerritoryEntityMappings();
			InitOrganizationTypeEntityMappings();
			InitOrgRoleUserActivityEntityMappings();
			InitOutboundUploadEntityMappings();
			InitPackageEntityMappings();
			InitPackageAvailabilityToRolesEntityMappings();
			InitPackageMarketingOfferDiscountEntityMappings();
			InitPackageSourceCodeDiscountEntityMappings();
			InitPackageTestEntityMappings();
			InitParticipationConsentSignatureEntityMappings();
			InitPasswordChangelogEntityMappings();
			InitPaymentEntityMappings();
			InitPaymentFrequencyEntityMappings();
			InitPaymentInstructionsEntityMappings();
			InitPaymentOrderEntityMappings();
			InitPaymentTypeEntityMappings();
			InitPayPeriodEntityMappings();
			InitPayPeriodCriteriaEntityMappings();
			InitPcpAppointmentEntityMappings();
			InitPcpDispositionEntityMappings();
			InitPhysicianCustomerAssignmentEntityMappings();
			InitPhysicianCustomerPayRateEntityMappings();
			InitPhysicianEarningsEntityMappings();
			InitPhysicianEvaluationEntityMappings();
			InitPhysicianEventAssignmentEntityMappings();
			InitPhysicianInvoiceEntityMappings();
			InitPhysicianInvoiceItemEntityMappings();
			InitPhysicianLabTestEntityMappings();
			InitPhysicianLicenseEntityMappings();
			InitPhysicianMasterEntityMappings();
			InitPhysicianPaymentEntityMappings();
			InitPhysicianPaymentInvoiceEntityMappings();
			InitPhysicianPermittedTestEntityMappings();
			InitPhysicianPodEntityMappings();
			InitPhysicianProfileEntityMappings();
			InitPhysicianRecordRequestSignatureEntityMappings();
			InitPhysicianSpecializationEntityMappings();
			InitPinChangelogEntityMappings();
			InitPodDefaultTeamEntityMappings();
			InitPodDetailsEntityMappings();
			InitPodInventoryItemEntityMappings();
			InitPodPackageEntityMappings();
			InitPodRoomEntityMappings();
			InitPodRoomTestEntityMappings();
			InitPodTerritoryEntityMappings();
			InitPodTestEntityMappings();
			InitPreApprovedPackageEntityMappings();
			InitPreApprovedTestEntityMappings();
			InitPreAssessmentCallQueueCustomerLockEntityMappings();
			InitPreAssessmentCustomerCallQueueCallAttemptEntityMappings();
			InitPreQualificationQuestionEntityMappings();
			InitPreQualificationQuestionRuleEntityMappings();
			InitPreQualificationResultEntityMappings();
			InitPreQualificationTemplateDependentTestEntityMappings();
			InitPreQualificationTemplateQuestionEntityMappings();
			InitPreQualificationTestTemplateEntityMappings();
			InitPrintOrderItemTrackingEntityMappings();
			InitPriorityInQueueEntityMappings();
			InitProductEntityMappings();
			InitProductOrderItemEntityMappings();
			InitProductShippingOptionEntityMappings();
			InitProductSourceCodeDiscountEntityMappings();
			InitProspectActivityEntityMappings();
			InitProspectActivityDetailsEntityMappings();
			InitProspectAddressEntityMappings();
			InitProspectCallDetailsEntityMappings();
			InitProspectCallsEntityMappings();
			InitProspectContactEntityMappings();
			InitProspectContactCallsEntityMappings();
			InitProspectContactMeetingsEntityMappings();
			InitProspectContactRoleEntityMappings();
			InitProspectContactRoleMappingEntityMappings();
			InitProspectContactTasksEntityMappings();
			InitProspectCustomerEntityMappings();
			InitProspectCustomerCallEntityMappings();
			InitProspectCustomerDeletedEntityMappings();
			InitProspectCustomerNotificationEntityMappings();
			InitProspectDetailsEntityMappings();
			InitProspectFaliureReportEntityMappings();
			InitProspectListDetailsEntityMappings();
			InitProspectListTypeEntityMappings();
			InitProspectMeetingsEntityMappings();
			InitProspectNotesDetailsEntityMappings();
			InitProspectsEntityMappings();
			InitProspectTasksEntityMappings();
			InitProspectTypeEntityMappings();
			InitRapsEntityMappings();
			InitRapsUploadEntityMappings();
			InitRapsUploadLogEntityMappings();
			InitReadingEntityMappings();
			InitReferralEntityMappings();
			InitRefundEntityMappings();
			InitRefundOrderItemEntityMappings();
			InitRefundRequestEntityMappings();
			InitRefundRequestGiftCertificateEntityMappings();
			InitRelationshipEntityMappings();
			InitRequiredTestEntityMappings();
			InitRescheduleCancelDispositionEntityMappings();
			InitResultArchiveUploadEntityMappings();
			InitResultArchiveUploadLogEntityMappings();
			InitRoleEntityMappings();
			InitRoleAccessControlObjectEntityMappings();
			InitRolePermisibleAccessControlObjectEntityMappings();
			InitRoleScopeOptionEntityMappings();
			InitSafeComputerHistoryEntityMappings();
			InitSalesRepPodAssigmentsEntityMappings();
			InitScheduleMethodEntityMappings();
			InitScheduleTemplateEntityMappings();
			InitScheduleTemplateFranchiseeAccessEntityMappings();
			InitScheduleTemplateTimeEntityMappings();
			InitScreeningAuthorizationEntityMappings();
			InitScriptsEntityMappings();
			InitScriptTypeEntityMappings();
			InitSecurityQuestionEntityMappings();
			InitSeminarCampaignDetailsEntityMappings();
			InitSeminarsEntityMappings();
			InitShippingDetailEntityMappings();
			InitShippingDetailOrderDetailEntityMappings();
			InitShippingOptionEntityMappings();
			InitShippingOptionOrderItemEntityMappings();
			InitShippingOptionSourceCodeDiscountEntityMappings();
			InitSmsReceivedEntityMappings();
			InitSourceCodeChangeLogEntityMappings();
			InitSourceCodeOrderDetailEntityMappings();
			InitStaffEventRoleEntityMappings();
			InitStaffEventRoleTestEntityMappings();
			InitStaffEventScheduleUploadEntityMappings();
			InitStaffEventScheduleUploadLogEntityMappings();
			InitStandardFindingEntityMappings();
			InitStandardFindingTestReadingEntityMappings();
			InitStateEntityMappings();
			InitSurveyAnswerEntityMappings();
			InitSurveyQuestionEntityMappings();
			InitSurveyTemplateEntityMappings();
			InitSurveyTemplateQuestionEntityMappings();
			InitSuspectConditionEntityMappings();
			InitSuspectConditionUploadEntityMappings();
			InitSuspectConditionUploadLogEntityMappings();
			InitSystemGeneratedCallQueueAssignmentEntityMappings();
			InitSystemGeneratedCallQueueCriteriaEntityMappings();
			InitSystemUserInfoEntityMappings();
			InitTagEntityMappings();
			InitTaskEntityMappings();
			InitTaskDetailsEntityMappings();
			InitTaskPriorityTypesEntityMappings();
			InitTaskStatusTypesEntityMappings();
			InitTechnicianProfileEntityMappings();
			InitTempCartEntityMappings();
			InitTemplateEntityMappings();
			InitTemplateMacroEntityMappings();
			InitTemplateTagEntityMappings();
			InitTerritoryEntityMappings();
			InitTerritoryPackageEntityMappings();
			InitTerritoryZipEntityMappings();
			InitTestEntityMappings();
			InitTestAvailabilityToRolesEntityMappings();
			InitTestDependencyRuleEntityMappings();
			InitTestHcpcsCodeEntityMappings();
			InitTestimonialEntityMappings();
			InitTestIncidentalFindingEntityMappings();
			InitTestMediaEntityMappings();
			InitTestNotPerformedEntityMappings();
			InitTestNotPerformedReasonEntityMappings();
			InitTestOrderItemEntityMappings();
			InitTestPerformedExternallyEntityMappings();
			InitTestReadingEntityMappings();
			InitTestSourceCodeDiscountEntityMappings();
			InitTestUnableScreenReasonEntityMappings();
			InitToolTipEntityMappings();
			InitTrackingMarketingEntityMappings();
			InitUncontactedCustomerCallQueueEntityMappings();
			InitUncontactedCustomerCallQueueCriteriaAssignmentEntityMappings();
			InitUnitEntityMappings();
			InitUploadTestInfoEntityMappings();
			InitUploadZipInfoEntityMappings();
			InitUserEntityMappings();
			InitUserLoginEntityMappings();
			InitUserLoginLogEntityMappings();
			InitUserNpiInfoEntityMappings();
			InitUserSecurityQuestionEntityMappings();
			InitVanDetailsEntityMappings();
			InitVwCallCenterCallReportEntityMappings();
			InitVwCallQueueCustomerCallDetailsEntityMappings();
			InitVwCallQueueCustomerCriteraAssignmentEntityMappings();
			InitVwCallQueueCustomerCriteraAssignmentForGmsEntityMappings();
			InitVwCallQueueCustomerCriteraAssignmentForGmsStatsEntityMappings();
			InitVwCallQueueCustomerCriteraAssignmentForStatsEntityMappings();
			InitVwCallQueueCustomerCriteraAssignmentWithCustomerEntityMappings();
			InitVwCallRoundCallQueueCriteraAssignmentEntityMappings();
			InitVwCampaignClickConversionEntityMappings();
			InitVwCustomerAggregateResultSummaryEntityMappings();
			InitVwEventAppointmentEntityMappings();
			InitVwEventCustomerPreApprovedTestListEntityMappings();
			InitVwEventCustomersAccountEntityMappings();
			InitVwEventCustomersViewServiceReportEntityMappings();
			InitVwFillEventCallQueueCriteraAssignmentEntityMappings();
			InitVwGetAllTestForCustomersEntityMappings();
			InitVwGetBookedAppointmentForCalculatingBonusEntityMappings();
			InitVwGetCallCenterAgentsForConversionReportEntityMappings();
			InitVwGetCallQueueCustomersEntityMappings();
			InitVwGetCallQueueExcludedCustomersEntityMappings();
			InitVwGetCallsEntityMappings();
			InitVwGetCallsForCalculatingBonusEntityMappings();
			InitVwGetCallsForCallQueueEntityMappings();
			InitVwGetCallsForSuppressionEntityMappings();
			InitVwGetConfirmationCallQueueCustomersWithoutSuppressionEntityMappings();
			InitVwGetCustomerForMailRoundInsertionEntityMappings();
			InitVwGetCustomerIdsHavingSingleTagForCallQueueEntityMappings();
			InitVwGetCustomersForCallQueueWithCustomerEntityMappings();
			InitVwGetCustomersForCallQueueWithCustomerViciEntityMappings();
			InitVwGetCustomersForConfirmationCallQueueEntityMappings();
			InitVwGetCustomersForNotInCallQueueEntityMappings();
			InitVwGetCustomersToGenerateCallQueueEntityMappings();
			InitVwGetCustomersToGenerateConfirmationCallQueueEntityMappings();
			InitVwGetCustomersToGenerateFillEventCallQueueEntityMappings();
			InitVwGetCustomersToGenerateFillEventCallQueue_EntityMappings();
			InitVwGetCustomerTagForCallQueueEntityMappings();
			InitVwGetDataForSkippedCallReportEntityMappings();
			InitVwGetDirectMailForCallQueueEntityMappings();
			InitVwGetEventCustomerEawvTestInOrderEntityMappings();
			InitVwGetHkynTestCustomersEntityMappings();
			InitVwGetKynTestCustomersEntityMappings();
			InitVwGetMyBioCheckTestCustomersEntityMappings();
			InitVwGetOutboundCallsEntityMappings();
			InitVwGetTestPerformedReportEntityMappings();
			InitVwHospitalPartnerCustomersEntityMappings();
			InitVwHostEventDetailsEntityMappings();
			InitVwLanguageBarrierCallQueueCriteraAssignmentEntityMappings();
			InitVwMailRoundCallQueueCriteraAssignmentEntityMappings();
			InitVwOutreachCallReportEntityMappings();
			InitVwPcpAppointmetnDispositionEntityMappings();
			InitVwPhysicianQueueRecordEntityMappings();
			InitVwUncontactedCustomerCallQueueCriteraAssignmentEntityMappings();
			InitWellMedAttestationEntityMappings();
			InitWfEntityMappings();
			InitWidgetEntityMappings();
			InitZipEntityMappings();
			InitZipDataEntityMappings();
			InitZipRadiusDistanceEntityMappings();
			InitAddressViewTypedViewMappings();
			InitCcrepMetricesTypedViewMappings();
			InitCustomerEventBasicInfoTypedViewMappings();
			InitCustomerOrderBasicInfoTypedViewMappings();
			InitFranchiseeFranchiseeUserTypedViewMappings();
			InitGetRecordsReadyforCustomerViewTypedViewMappings();
			InitMedicalVendorEarningCustomerTypedViewMappings();
			InitMedicalVendorEarningInfoTypedViewMappings();
			InitMedicalVendorInvoiceItemTypedViewMappings();
			InitMedicalVendorMedicalVendorUserTypedViewMappings();
			InitMedicalVendorMvuserEarningAndPayRateTypedViewMappings();
			InitMedicalVendorMvuserPaymentTypedViewMappings();
		}


		/// <summary>Inits AccessControlObjectEntity's mappings</summary>
		private void InitAccessControlObjectEntityMappings()
		{
			base.AddElementMapping( "AccessControlObjectEntity", "Falcon", @"dbo", "TblAccessControlObject", 7 );
			base.AddElementFieldMapping( "AccessControlObjectEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AccessControlObjectEntity", "Title", "Title", false, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "AccessControlObjectEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "AccessControlObjectEntity", "ParentId", "ParentId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "AccessControlObjectEntity", "DisplayOrder", "DisplayOrder", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 4 );
			base.AddElementFieldMapping( "AccessControlObjectEntity", "IsRequired", "IsRequired", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "AccessControlObjectEntity", "Alias", "Alias", false, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 6 );
		}
		/// <summary>Inits AccessControlObjectUrlEntity's mappings</summary>
		private void InitAccessControlObjectUrlEntityMappings()
		{
			base.AddElementMapping( "AccessControlObjectUrlEntity", "Falcon", @"dbo", "TblAccessControlObjectUrl", 3 );
			base.AddElementFieldMapping( "AccessControlObjectUrlEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AccessControlObjectUrlEntity", "AccessControlObjectId", "AccessControlObjectId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "AccessControlObjectUrlEntity", "Url", "Url", false, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 2 );
		}
		/// <summary>Inits AccessObjectScopeOptionEntity's mappings</summary>
		private void InitAccessObjectScopeOptionEntityMappings()
		{
			base.AddElementMapping( "AccessObjectScopeOptionEntity", "Falcon", @"dbo", "TblAccessObjectScopeOption", 2 );
			base.AddElementFieldMapping( "AccessObjectScopeOptionEntity", "AccessControlObjectId", "AccessControlObjectId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AccessObjectScopeOptionEntity", "ScopeId", "ScopeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits AccountEntity's mappings</summary>
		private void InitAccountEntityMappings()
		{
			base.AddElementMapping( "AccountEntity", "Falcon", @"dbo", "TblAccount", 133 );
			base.AddElementFieldMapping( "AccountEntity", "AccountId", "AccountID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AccountEntity", "ContractNotes", "ContractNotes", true, (int)SqlDbType.Text, 2147483647, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "AccountEntity", "ShowSponsoredByUrl", "ShowSponsoredByUrl", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
			base.AddElementFieldMapping( "AccountEntity", "Content", "Content", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "AccountEntity", "ConvertedHostId", "ConvertedHostId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "AccountEntity", "CorpCode", "CorpCode", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "AccountEntity", "CorporateWhiteLabeling", "CorporateWhiteLabeling", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "AccountEntity", "AllowCobranding", "AllowCobranding", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "AccountEntity", "FluffLetterFileId", "FluffLetterFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "AccountEntity", "CaptureInsuranceId", "CaptureInsuranceId", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 9 );
			base.AddElementFieldMapping( "AccountEntity", "InsuranceIdRequired", "InsuranceIdRequired", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 10 );
			base.AddElementFieldMapping( "AccountEntity", "SendAppointmentMail", "SendAppointmentMail", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 11 );
			base.AddElementFieldMapping( "AccountEntity", "Tag", "Tag", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "AccountEntity", "MemberIdLabel", "MemberIdLabel", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "AccountEntity", "AllowOnlineRegistration", "AllowOnlineRegistration", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 14 );
			base.AddElementFieldMapping( "AccountEntity", "AllowPreQualifiedTestOnly", "AllowPreQualifiedTestOnly", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 15 );
			base.AddElementFieldMapping( "AccountEntity", "AllowCustomerPortalLogin", "AllowCustomerPortalLogin", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 16 );
			base.AddElementFieldMapping( "AccountEntity", "SendResultReadyMail", "SendResultReadyMail", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 17 );
			base.AddElementFieldMapping( "AccountEntity", "ShowBasicBiometricPage", "ShowBasicBiometricPage", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 18 );
			base.AddElementFieldMapping( "AccountEntity", "SendSurveyMail", "SendSurveyMail", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 19 );
			base.AddElementFieldMapping( "AccountEntity", "AppointmentConfirmationMailTemplateId", "AppointmentConfirmationMailTemplateId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 20 );
			base.AddElementFieldMapping( "AccountEntity", "AppointmentReminderMailTemplateId", "AppointmentReminderMailTemplateId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 21 );
			base.AddElementFieldMapping( "AccountEntity", "ResultReadyMailTemplateId", "ResultReadyMailTemplateId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 22 );
			base.AddElementFieldMapping( "AccountEntity", "SurveyMailTemplateId", "SurveyMailTemplateId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 23 );
			base.AddElementFieldMapping( "AccountEntity", "AllowVerifiedMembersOnly", "AllowVerifiedMembersOnly", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 24 );
			base.AddElementFieldMapping( "AccountEntity", "FirstName", "FirstName", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 25 );
			base.AddElementFieldMapping( "AccountEntity", "MemberId", "MemberId", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 26 );
			base.AddElementFieldMapping( "AccountEntity", "Zipcode", "Zipcode", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 27 );
			base.AddElementFieldMapping( "AccountEntity", "LastName", "LastName", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 28 );
			base.AddElementFieldMapping( "AccountEntity", "DateOfBirth", "DateOfBirth", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 29 );
			base.AddElementFieldMapping( "AccountEntity", "Email", "Email", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 30 );
			base.AddElementFieldMapping( "AccountEntity", "SendResultReadyMailWithFax", "SendResultReadyMailWithFax", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 31 );
			base.AddElementFieldMapping( "AccountEntity", "CapturePcpconsent", "CapturePCPConsent", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 32 );
			base.AddElementFieldMapping( "AccountEntity", "CaptureAbnstatus", "CaptureABNStatus", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 33 );
			base.AddElementFieldMapping( "AccountEntity", "AllowPrePayment", "AllowPrePayment", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 34 );
			base.AddElementFieldMapping( "AccountEntity", "HicnumberRequired", "HICNumberRequired", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 35 );
			base.AddElementFieldMapping( "AccountEntity", "GeneratePcpLetterWithDiagnosisCode", "GeneratePcpLetterWithDiagnosisCode", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 36 );
			base.AddElementFieldMapping( "AccountEntity", "GenerateCustomerResult", "GenerateCustomerResult", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 37 );
			base.AddElementFieldMapping( "AccountEntity", "IsCustomerResultsTestDependent", "IsCustomerResultsTestDependent", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 38 );
			base.AddElementFieldMapping( "AccountEntity", "GeneratePcpResult", "GeneratePcpResult", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 39 );
			base.AddElementFieldMapping( "AccountEntity", "CheckoutPhoneNumber", "CheckoutPhoneNumber", true, (int)SqlDbType.NVarChar, 50, 0, 0, false, "", null, typeof(System.String), 40 );
			base.AddElementFieldMapping( "AccountEntity", "RecommendPackage", "RecommendPackage", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 41 );
			base.AddElementFieldMapping( "AccountEntity", "AskPreQualificationQuestion", "AskPreQualificationQuestion", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 42 );
			base.AddElementFieldMapping( "AccountEntity", "SendWelcomeEmail", "SendWelcomeEmail", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 43 );
			base.AddElementFieldMapping( "AccountEntity", "CaptureHaf", "CaptureHAF", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 44 );
			base.AddElementFieldMapping( "AccountEntity", "CaptureHafonline", "CaptureHAFOnline", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 45 );
			base.AddElementFieldMapping( "AccountEntity", "EnableImageUpsell", "EnableImageUpsell", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 46 );
			base.AddElementFieldMapping( "AccountEntity", "AllowTechUpdateQualifiedTests", "AllowTechUpdateQualifiedTests", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 47 );
			base.AddElementFieldMapping( "AccountEntity", "AttachQualityAssuranceForm", "AttachQualityAssuranceForm", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 48 );
			base.AddElementFieldMapping( "AccountEntity", "RemoveLongDescription", "RemoveLongDescription", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 49 );
			base.AddElementFieldMapping( "AccountEntity", "GenerateBatchLabel", "GenerateBatchLabel", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 50 );
			base.AddElementFieldMapping( "AccountEntity", "AttachCongitiveClockForm", "AttachCongitiveClockForm", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 51 );
			base.AddElementFieldMapping( "AccountEntity", "AttachChronicEvaluationForm", "AttachChronicEvaluationForm", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 52 );
			base.AddElementFieldMapping( "AccountEntity", "AttachParicipantConsentForm", "AttachParicipantConsentForm", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 53 );
			base.AddElementFieldMapping( "AccountEntity", "UpsellTest", "UpsellTest", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 54 );
			base.AddElementFieldMapping( "AccountEntity", "AskClinicalQuestions", "AskClinicalQuestions", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 55 );
			base.AddElementFieldMapping( "AccountEntity", "ClinicalQuestionTemplateId", "ClinicalQuestionTemplateId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 56 );
			base.AddElementFieldMapping( "AccountEntity", "DefaultSelectionBasePackage", "DefaultSelectionBasePackage", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 57 );
			base.AddElementFieldMapping( "AccountEntity", "SlotBooking", "SlotBooking", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 58 );
			base.AddElementFieldMapping( "AccountEntity", "AddImagesForAbnormal", "AddImagesForAbnormal", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 59 );
			base.AddElementFieldMapping( "AccountEntity", "BookPcpAppointment", "BookPcpAppointment", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 60 );
			base.AddElementFieldMapping( "AccountEntity", "NumberOfDays", "NumberOfDays", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 61 );
			base.AddElementFieldMapping( "AccountEntity", "ScreeningInfo", "ScreeningInfo", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 62 );
			base.AddElementFieldMapping( "AccountEntity", "PatientWorkSheet", "PatientWorkSheet", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 63 );
			base.AddElementFieldMapping( "AccountEntity", "UseHeaderImage", "UseHeaderImage", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 64 );
			base.AddElementFieldMapping( "AccountEntity", "ShowHafFooter", "ShowHafFooter", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 65 );
			base.AddElementFieldMapping( "AccountEntity", "CaptureSurvey", "CaptureSurvey", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 66 );
			base.AddElementFieldMapping( "AccountEntity", "SurveyPdfFileId", "SurveyPdfFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 67 );
			base.AddElementFieldMapping( "AccountEntity", "PcpLetterPdfFileId", "PcpLetterPdfFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 68 );
			base.AddElementFieldMapping( "AccountEntity", "AttachScannedDoc", "AttachScannedDoc", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 69 );
			base.AddElementFieldMapping( "AccountEntity", "ResultFormatTypeId", "ResultFormatTypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 70 );
			base.AddElementFieldMapping( "AccountEntity", "AttachUnreadableTest", "AttachUnreadableTest", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 71 );
			base.AddElementFieldMapping( "AccountEntity", "AttachGiftCard", "AttachGiftCard", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 72 );
			base.AddElementFieldMapping( "AccountEntity", "GiftCardAmount", "GiftCardAmount", true, (int)SqlDbType.Decimal, 0, 2, 10, false, "", null, typeof(System.Decimal), 73 );
			base.AddElementFieldMapping( "AccountEntity", "AttachEawvPreventionPlan", "AttachEawvPreventionPlan", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 74 );
			base.AddElementFieldMapping( "AccountEntity", "GenerateEawvPreventionPlanReport", "GenerateEawvPreventionPlanReport", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 75 );
			base.AddElementFieldMapping( "AccountEntity", "GenerateFluPneuConsentForm", "GenerateFluPneuConsentForm", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 76 );
			base.AddElementFieldMapping( "AccountEntity", "GenerateBmiReport", "GenerateBmiReport", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 77 );
			base.AddElementFieldMapping( "AccountEntity", "EnablePgpEncryption", "EnablePgpEncryption", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 78 );
			base.AddElementFieldMapping( "AccountEntity", "PublicKeyFileId", "PublicKeyFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 79 );
			base.AddElementFieldMapping( "AccountEntity", "LockEvent", "LockEvent", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 80 );
			base.AddElementFieldMapping( "AccountEntity", "GenerateHealthPlanReport", "GenerateHealthPlanReport", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 81 );
			base.AddElementFieldMapping( "AccountEntity", "IsHealthPlan", "IsHealthPlan", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 82 );
			base.AddElementFieldMapping( "AccountEntity", "AttachAttestationForm", "AttachAttestationForm", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 83 );
			base.AddElementFieldMapping( "AccountEntity", "EventLockDaysCount", "EventLockDaysCount", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 84 );
			base.AddElementFieldMapping( "AccountEntity", "AttachOrderRequisitionForm", "AttachOrderRequisitionForm", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 85 );
			base.AddElementFieldMapping( "AccountEntity", "ParticipantLetterId", "ParticipantLetterId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 86 );
			base.AddElementFieldMapping( "AccountEntity", "FolderName", "FolderName", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 87 );
			base.AddElementFieldMapping( "AccountEntity", "CheckListFileId", "CheckListFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 88 );
			base.AddElementFieldMapping( "AccountEntity", "PrintCheckList", "PrintCheckList", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 89 );
			base.AddElementFieldMapping( "AccountEntity", "SendEventResultReadyNotification", "SendEventResultReadyNotification", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 90 );
			base.AddElementFieldMapping( "AccountEntity", "ShowBarrier", "ShowBarrier", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 91 );
			base.AddElementFieldMapping( "AccountEntity", "PrintPcpAppointmentForBulkHaf", "PrintPcpAppointmentForBulkHaf", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 92 );
			base.AddElementFieldMapping( "AccountEntity", "PrintPcpAppointmentForResult", "PrintPcpAppointmentForResult", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 93 );
			base.AddElementFieldMapping( "AccountEntity", "PrintAceForm", "PrintAceForm", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 94 );
			base.AddElementFieldMapping( "AccountEntity", "PrintMipForm", "PrintMipForm", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 95 );
			base.AddElementFieldMapping( "AccountEntity", "AllowRegistrationWithImproperTags", "AllowRegistrationWithImproperTags", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 96 );
			base.AddElementFieldMapping( "AccountEntity", "PrintMicroalbuminForm", "PrintMicroalbuminForm", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 97 );
			base.AddElementFieldMapping( "AccountEntity", "PrintIfobtform", "PrintIFOBTForm", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 98 );
			base.AddElementFieldMapping( "AccountEntity", "EnableSms", "EnableSms", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 99 );
			base.AddElementFieldMapping( "AccountEntity", "MaximumSms", "MaximumSms", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 100 );
			base.AddElementFieldMapping( "AccountEntity", "ConfirmationSmsTemplateId", "ConfirmationSmsTemplateId", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 101 );
			base.AddElementFieldMapping( "AccountEntity", "ReminderSmsTemplateId", "ReminderSmsTemplateId", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 102 );
			base.AddElementFieldMapping( "AccountEntity", "PrintLoincLabData", "PrintLoincLabData", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 103 );
			base.AddElementFieldMapping( "AccountEntity", "CheckListTemplateId", "CheckListTemplateId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 104 );
			base.AddElementFieldMapping( "AccountEntity", "IsMaxAttemptPerHealthPlan", "IsMaxAttemptPerHealthPlan", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 105 );
			base.AddElementFieldMapping( "AccountEntity", "MaxAttempt", "MaxAttempt", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 106 );
			base.AddElementFieldMapping( "AccountEntity", "MarkPennedBack", "MarkPennedBack", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 107 );
			base.AddElementFieldMapping( "AccountEntity", "PennedBackText", "PennedBackText", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 108 );
			base.AddElementFieldMapping( "AccountEntity", "ShowCallCenterScript", "ShowCallCenterScript", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 109 );
			base.AddElementFieldMapping( "AccountEntity", "CallCenterScriptFileId", "CallCenterScriptFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 110 );
			base.AddElementFieldMapping( "AccountEntity", "EventConfirmationBeforeDays", "EventConfirmationBeforeDays", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 111 );
			base.AddElementFieldMapping( "AccountEntity", "ConfirmationBeforeAppointmentMinutes", "ConfirmationBeforeAppointmentMinutes", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 112 );
			base.AddElementFieldMapping( "AccountEntity", "ConfirmationScriptFileId", "ConfirmationScriptFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 113 );
			base.AddElementFieldMapping( "AccountEntity", "RestrictHealthPlanData", "RestrictHealthPlanData", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 114 );
			base.AddElementFieldMapping( "AccountEntity", "SendPatientDataToAces", "SendPatientDataToAces", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 115 );
			base.AddElementFieldMapping( "AccountEntity", "ClientId", "ClientId", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 116 );
			base.AddElementFieldMapping( "AccountEntity", "SendConsentData", "SendConsentData", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 117 );
			base.AddElementFieldMapping( "AccountEntity", "ShowGiftCertificateOnEod", "ShowGiftCertificateOnEod", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 118 );
			base.AddElementFieldMapping( "AccountEntity", "WarmTransfer", "WarmTransfer", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 119 );
			base.AddElementFieldMapping( "AccountEntity", "InboundCallScriptFileId", "InboundCallScriptFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 120 );
			base.AddElementFieldMapping( "AccountEntity", "AcesClientShortName", "AcesClientShortName", true, (int)SqlDbType.VarChar, 20, 0, 0, false, "", null, typeof(System.String), 121 );
			base.AddElementFieldMapping( "AccountEntity", "IncludeMemberLetter", "IncludeMemberLetter", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 122 );
			base.AddElementFieldMapping( "AccountEntity", "MemberLetterFileId", "MemberLetterFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 123 );
			base.AddElementFieldMapping( "AccountEntity", "PcpCoverLetterTemplateId", "PcpCoverLetterTemplateId", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 124 );
			base.AddElementFieldMapping( "AccountEntity", "MemberCoverLetterTemplateId", "MemberCoverLetterTemplateId", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 125 );
			base.AddElementFieldMapping( "AccountEntity", "AcesToHipIntake", "AcesToHipIntake", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 126 );
			base.AddElementFieldMapping( "AccountEntity", "AcesToHipIntakeShortName", "AcesToHipIntakeShortName", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 127 );
			base.AddElementFieldMapping( "AccountEntity", "FluConsentTemplateId", "FluConsentTemplateId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 128 );
			base.AddElementFieldMapping( "AccountEntity", "ExitInterviewTemplateId", "ExitInterviewTemplateId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 129 );
			base.AddElementFieldMapping( "AccountEntity", "SurveyTemplateId", "SurveyTemplateId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 130 );
			base.AddElementFieldMapping( "AccountEntity", "ShowChaperonForm", "ShowChaperonForm", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 131 );
			base.AddElementFieldMapping( "AccountEntity", "GeneratePcpLetter", "GeneratePcpLetter", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 132 );
		}
		/// <summary>Inits AccountAdditionalFieldsEntity's mappings</summary>
		private void InitAccountAdditionalFieldsEntityMappings()
		{
			base.AddElementMapping( "AccountAdditionalFieldsEntity", "Falcon", @"dbo", "TblAccountAdditionalFields", 3 );
			base.AddElementFieldMapping( "AccountAdditionalFieldsEntity", "AccountId", "AccountId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AccountAdditionalFieldsEntity", "AdditionalFieldId", "AdditionalFieldId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "AccountAdditionalFieldsEntity", "DisplayName", "DisplayName", false, (int)SqlDbType.NVarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
		}
		/// <summary>Inits AccountCallCenterOrganizationEntity's mappings</summary>
		private void InitAccountCallCenterOrganizationEntityMappings()
		{
			base.AddElementMapping( "AccountCallCenterOrganizationEntity", "Falcon", @"dbo", "TblAccountCallCenterOrganization", 8 );
			base.AddElementFieldMapping( "AccountCallCenterOrganizationEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AccountCallCenterOrganizationEntity", "AccountId", "AccountId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "AccountCallCenterOrganizationEntity", "OrganizationId", "OrganizationId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "AccountCallCenterOrganizationEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "AccountCallCenterOrganizationEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "AccountCallCenterOrganizationEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "AccountCallCenterOrganizationEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "AccountCallCenterOrganizationEntity", "IsDeleted", "IsDeleted", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
		}
		/// <summary>Inits AccountCallQueueSettingEntity's mappings</summary>
		private void InitAccountCallQueueSettingEntityMappings()
		{
			base.AddElementMapping( "AccountCallQueueSettingEntity", "Falcon", @"dbo", "TblAccountCallQueueSetting", 6 );
			base.AddElementFieldMapping( "AccountCallQueueSettingEntity", "AccountId", "AccountID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AccountCallQueueSettingEntity", "CallQueueId", "CallQueueID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "AccountCallQueueSettingEntity", "SuppressionTypeId", "SuppressionTypeID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "AccountCallQueueSettingEntity", "NoOfDays", "NoOfDays", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 3 );
			base.AddElementFieldMapping( "AccountCallQueueSettingEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "AccountCallQueueSettingEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits AccountCheckoutPhoneNumberEntity's mappings</summary>
		private void InitAccountCheckoutPhoneNumberEntityMappings()
		{
			base.AddElementMapping( "AccountCheckoutPhoneNumberEntity", "Falcon", @"dbo", "TblAccountCheckoutPhoneNumber", 4 );
			base.AddElementFieldMapping( "AccountCheckoutPhoneNumberEntity", "AccountId", "AccountID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AccountCheckoutPhoneNumberEntity", "StateId", "StateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "AccountCheckoutPhoneNumberEntity", "CheckoutPhoneNumber", "CheckoutPhoneNumber", false, (int)SqlDbType.NVarChar, 50, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "AccountCheckoutPhoneNumberEntity", "Id", "ID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 3 );
		}
		/// <summary>Inits AccountCoordinatorProfileEntity's mappings</summary>
		private void InitAccountCoordinatorProfileEntityMappings()
		{
			base.AddElementMapping( "AccountCoordinatorProfileEntity", "Falcon", @"dbo", "TblAccountCoordinatorProfile", 2 );
			base.AddElementFieldMapping( "AccountCoordinatorProfileEntity", "OrganizationRoleUserId", "OrganizationRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AccountCoordinatorProfileEntity", "IsClinicalCoordinator", "IsClinicalCoordinator", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 1 );
		}
		/// <summary>Inits AccountCustomerResultTestDependencyEntity's mappings</summary>
		private void InitAccountCustomerResultTestDependencyEntityMappings()
		{
			base.AddElementMapping( "AccountCustomerResultTestDependencyEntity", "Falcon", @"dbo", "TblAccountCustomerResultTestDependency", 2 );
			base.AddElementFieldMapping( "AccountCustomerResultTestDependencyEntity", "AccountId", "AccountId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AccountCustomerResultTestDependencyEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits AccountEventZipEntity's mappings</summary>
		private void InitAccountEventZipEntityMappings()
		{
			base.AddElementMapping( "AccountEventZipEntity", "Falcon", @"dbo", "TblAccountEventZip", 2 );
			base.AddElementFieldMapping( "AccountEventZipEntity", "AccountId", "AccountId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AccountEventZipEntity", "ZipId", "ZipId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits AccountEventZipSubstituteEntity's mappings</summary>
		private void InitAccountEventZipSubstituteEntityMappings()
		{
			base.AddElementMapping( "AccountEventZipSubstituteEntity", "Falcon", @"dbo", "TblAccountEventZipSubstitute", 2 );
			base.AddElementFieldMapping( "AccountEventZipSubstituteEntity", "AccountId", "AccountId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AccountEventZipSubstituteEntity", "ZipId", "ZipId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits AccountHealthPlanResultTestDependencyEntity's mappings</summary>
		private void InitAccountHealthPlanResultTestDependencyEntityMappings()
		{
			base.AddElementMapping( "AccountHealthPlanResultTestDependencyEntity", "Falcon", @"dbo", "TblAccountHealthPlanResultTestDependency", 2 );
			base.AddElementFieldMapping( "AccountHealthPlanResultTestDependencyEntity", "AccountId", "AccountId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AccountHealthPlanResultTestDependencyEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits AccountHraChatQuestionnaireEntity's mappings</summary>
		private void InitAccountHraChatQuestionnaireEntityMappings()
		{
			base.AddElementMapping( "AccountHraChatQuestionnaireEntity", "Falcon", @"dbo", "TblAccountHraChatQuestionnaire", 9 );
			base.AddElementFieldMapping( "AccountHraChatQuestionnaireEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AccountHraChatQuestionnaireEntity", "AccountId", "AccountId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "AccountHraChatQuestionnaireEntity", "QuestionnaireType", "QuestionnaireType", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "AccountHraChatQuestionnaireEntity", "StartDate", "StartDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "AccountHraChatQuestionnaireEntity", "EndDate", "EndDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "AccountHraChatQuestionnaireEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "AccountHraChatQuestionnaireEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "AccountHraChatQuestionnaireEntity", "ModifiedOn", "ModifiedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "AccountHraChatQuestionnaireEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
		}
		/// <summary>Inits AccountNotReviewableTestEntity's mappings</summary>
		private void InitAccountNotReviewableTestEntityMappings()
		{
			base.AddElementMapping( "AccountNotReviewableTestEntity", "Falcon", @"dbo", "TblAccountNotReviewableTest", 2 );
			base.AddElementFieldMapping( "AccountNotReviewableTestEntity", "AccountId", "AccountId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AccountNotReviewableTestEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits AccountPackageEntity's mappings</summary>
		private void InitAccountPackageEntityMappings()
		{
			base.AddElementMapping( "AccountPackageEntity", "Falcon", @"dbo", "TblAccountPackage", 3 );
			base.AddElementFieldMapping( "AccountPackageEntity", "AccountId", "AccountID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AccountPackageEntity", "PackageId", "PackageID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "AccountPackageEntity", "IsRecommended", "IsRecommended", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
		}
		/// <summary>Inits AccountPcpResultTestDependencyEntity's mappings</summary>
		private void InitAccountPcpResultTestDependencyEntityMappings()
		{
			base.AddElementMapping( "AccountPcpResultTestDependencyEntity", "Falcon", @"dbo", "TblAccountPcpResultTestDependency", 2 );
			base.AddElementFieldMapping( "AccountPcpResultTestDependencyEntity", "AccountId", "AccountId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AccountPcpResultTestDependencyEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits AccountTestEntity's mappings</summary>
		private void InitAccountTestEntityMappings()
		{
			base.AddElementMapping( "AccountTestEntity", "Falcon", @"dbo", "TblAccountTest", 2 );
			base.AddElementFieldMapping( "AccountTestEntity", "AccountId", "AccountID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AccountTestEntity", "TestId", "TestID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits AccountTestHcpcsCodeEntity's mappings</summary>
		private void InitAccountTestHcpcsCodeEntityMappings()
		{
			base.AddElementMapping( "AccountTestHcpcsCodeEntity", "Falcon", @"dbo", "TblAccountTestHcpcsCode", 8 );
			base.AddElementFieldMapping( "AccountTestHcpcsCodeEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AccountTestHcpcsCodeEntity", "AccountId", "AccountId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "AccountTestHcpcsCodeEntity", "TestHcpcsCodeId", "TestHcpcsCodeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "AccountTestHcpcsCodeEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "AccountTestHcpcsCodeEntity", "CreatedDate", "CreatedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "AccountTestHcpcsCodeEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "AccountTestHcpcsCodeEntity", "ModifiedDate", "ModifiedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "AccountTestHcpcsCodeEntity", "IsDeleted", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
		}
		/// <summary>Inits ActivityEntity's mappings</summary>
		private void InitActivityEntityMappings()
		{
			base.AddElementMapping( "ActivityEntity", "Falcon", @"dbo", "TblActivity", 7 );
			base.AddElementFieldMapping( "ActivityEntity", "ActivityId", "ActivityId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ActivityEntity", "Type", "Type", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 1 );
			base.AddElementFieldMapping( "ActivityEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
			base.AddElementFieldMapping( "ActivityEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "ActivityEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "ActivityEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "ActivityEntity", "ModifiedByOrgRoleUserId", "ModifiedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
		}
		/// <summary>Inits ActivityTypeEntity's mappings</summary>
		private void InitActivityTypeEntityMappings()
		{
			base.AddElementMapping( "ActivityTypeEntity", "Falcon", @"dbo", "TblActivityType", 6 );
			base.AddElementFieldMapping( "ActivityTypeEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ActivityTypeEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ActivityTypeEntity", "Alias", "Alias", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ActivityTypeEntity", "CreatedDate", "CreatedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "ActivityTypeEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "ActivityTypeEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits AdditionalFieldsEntity's mappings</summary>
		private void InitAdditionalFieldsEntityMappings()
		{
			base.AddElementMapping( "AdditionalFieldsEntity", "Falcon", @"dbo", "TblAdditionalFields", 7 );
			base.AddElementFieldMapping( "AdditionalFieldsEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AdditionalFieldsEntity", "Name", "Name", false, (int)SqlDbType.NVarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "AdditionalFieldsEntity", "Alias", "Alias", false, (int)SqlDbType.NVarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "AdditionalFieldsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "AdditionalFieldsEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "AdditionalFieldsEntity", "ModifiedDate", "ModifiedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "AdditionalFieldsEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
		}
		/// <summary>Inits AddressEntity's mappings</summary>
		private void InitAddressEntityMappings()
		{
			base.AddElementMapping( "AddressEntity", "Falcon", @"dbo", "TblAddress", 16 );
			base.AddElementFieldMapping( "AddressEntity", "AddressId", "AddressID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AddressEntity", "Address1", "Address1", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "AddressEntity", "Address2", "Address2", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "AddressEntity", "CityId", "CityID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "AddressEntity", "StateId", "StateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "AddressEntity", "CountryId", "CountryID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "AddressEntity", "ZipId", "ZipID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "AddressEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "AddressEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "AddressEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "AddressEntity", "Latitude", "Latitude", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "AddressEntity", "Longitude", "Longitude", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 11 );
			base.AddElementFieldMapping( "AddressEntity", "VerificationOrgRoleUserId", "VerificationOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "AddressEntity", "IsManuallyVerified", "IsManuallyVerified", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 13 );
			base.AddElementFieldMapping( "AddressEntity", "UseLatLogForMapping", "UseLatLogForMapping", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 14 );
			base.AddElementFieldMapping( "AddressEntity", "NeedVerification", "NeedVerification", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 15 );
		}
		/// <summary>Inits AdvocateManagerTeamEntity's mappings</summary>
		private void InitAdvocateManagerTeamEntityMappings()
		{
			base.AddElementMapping( "AdvocateManagerTeamEntity", "Falcon", @"dbo", "TblAdvocateManagerTeam", 6 );
			base.AddElementFieldMapping( "AdvocateManagerTeamEntity", "ManagerTeamId", "ManagerTeamID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AdvocateManagerTeamEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.SmallDateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 1 );
			base.AddElementFieldMapping( "AdvocateManagerTeamEntity", "DateModified", "DateModified", false, (int)SqlDbType.SmallDateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "AdvocateManagerTeamEntity", "IsActive", "isActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "AdvocateManagerTeamEntity", "ManagerOrgRoleUserId", "ManagerOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "AdvocateManagerTeamEntity", "SalesRepOrgRoleUserId", "SalesRepOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
		}
		/// <summary>Inits AfadvertiserEntity's mappings</summary>
		private void InitAfadvertiserEntityMappings()
		{
			base.AddElementMapping( "AfadvertiserEntity", "Falcon", @"dbo", "tblAFAdvertiser", 6 );
			base.AddElementFieldMapping( "AfadvertiserEntity", "AdvertiserId", "AdvertiserID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AfadvertiserEntity", "AdvertiserName", "AdvertiserName", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "AfadvertiserEntity", "ChannelId", "ChannelID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "AfadvertiserEntity", "CreatedDate", "CreatedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "AfadvertiserEntity", "LastModifiedDate", "LastModifiedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "AfadvertiserEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits AfAdvertisingCommissionEntity's mappings</summary>
		private void InitAfAdvertisingCommissionEntityMappings()
		{
			base.AddElementMapping( "AfAdvertisingCommissionEntity", "Falcon", @"dbo", "tblAfAdvertisingCommission", 11 );
			base.AddElementFieldMapping( "AfAdvertisingCommissionEntity", "MmcommissionId", "MMCommissionId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AfAdvertisingCommissionEntity", "MarketingMaterialId", "MarketingMaterialId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "AfAdvertisingCommissionEntity", "CampaignId", "CampaignId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "AfAdvertisingCommissionEntity", "AffiliateId", "AffiliateId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "AfAdvertisingCommissionEntity", "Commission", "Commission", true, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 4 );
			base.AddElementFieldMapping( "AfAdvertisingCommissionEntity", "CreatedDate", "CreatedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "AfAdvertisingCommissionEntity", "LastModifiedDate", "LastModifiedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "AfAdvertisingCommissionEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "AfAdvertisingCommissionEntity", "IsPaid", "IsPaid", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
			base.AddElementFieldMapping( "AfAdvertisingCommissionEntity", "PaymentId", "PaymentID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "AfAdvertisingCommissionEntity", "IsApproved", "IsApproved", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 10 );
		}
		/// <summary>Inits AfaffiliateCampaignEntity's mappings</summary>
		private void InitAfaffiliateCampaignEntityMappings()
		{
			base.AddElementMapping( "AfaffiliateCampaignEntity", "Falcon", @"dbo", "tblAFAffiliateCampaign", 8 );
			base.AddElementFieldMapping( "AfaffiliateCampaignEntity", "AffiliateCampaignId", "AffiliateCampaignID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AfaffiliateCampaignEntity", "AffiliateId", "AffiliateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "AfaffiliateCampaignEntity", "CampaignId", "CampaignID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "AfaffiliateCampaignEntity", "AssignedDate", "AssignedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "AfaffiliateCampaignEntity", "IsAssignmentActive", "IsAssignmentActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "AfaffiliateCampaignEntity", "CreatedDate", "CreatedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "AfaffiliateCampaignEntity", "LastModifiedDate", "LastModifiedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "AfaffiliateCampaignEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
		}
		/// <summary>Inits AfaffiliateCampaignMarketingMaterialEntity's mappings</summary>
		private void InitAfaffiliateCampaignMarketingMaterialEntityMappings()
		{
			base.AddElementMapping( "AfaffiliateCampaignMarketingMaterialEntity", "Falcon", @"dbo", "tblAFAffiliateCampaignMarketingMaterial", 9 );
			base.AddElementFieldMapping( "AfaffiliateCampaignMarketingMaterialEntity", "AffiliateCampaignMarketingMaterialId", "AffiliateCampaignMarketingMaterialID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AfaffiliateCampaignMarketingMaterialEntity", "MarketingMaterialId", "MarketingMaterialID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "AfaffiliateCampaignMarketingMaterialEntity", "CampaignId", "CampaignID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "AfaffiliateCampaignMarketingMaterialEntity", "ImpressionCount", "ImpressionCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "AfaffiliateCampaignMarketingMaterialEntity", "ClickCount", "ClickCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "AfaffiliateCampaignMarketingMaterialEntity", "CreatedDate", "CreatedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "AfaffiliateCampaignMarketingMaterialEntity", "LastModifiedDate", "LastModifiedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "AfaffiliateCampaignMarketingMaterialEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "AfaffiliateCampaignMarketingMaterialEntity", "IsInbound", "IsInbound", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
		}
		/// <summary>Inits AfcampaignEntity's mappings</summary>
		private void InitAfcampaignEntityMappings()
		{
			base.AddElementMapping( "AfcampaignEntity", "Falcon", @"dbo", "tblAFCampaign", 24 );
			base.AddElementFieldMapping( "AfcampaignEntity", "CampaignId", "CampaignID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AfcampaignEntity", "CampaignName", "CampaignName", false, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "AfcampaignEntity", "PromoCodeId", "PromoCodeID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "AfcampaignEntity", "AdvertiserId", "AdvertiserID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "AfcampaignEntity", "IncomingPhone", "IncomingPhone", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "AfcampaignEntity", "StartDate", "StartDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "AfcampaignEntity", "EndDate", "EndDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "AfcampaignEntity", "Cost", "Cost", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 7 );
			base.AddElementFieldMapping( "AfcampaignEntity", "Commision", "Commision", true, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 8 );
			base.AddElementFieldMapping( "AfcampaignEntity", "ParentAffiliateCommision", "ParentAffiliateCommision", true, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 9 );
			base.AddElementFieldMapping( "AfcampaignEntity", "IsCommisionPercentage", "IsCommisionPercentage", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 10 );
			base.AddElementFieldMapping( "AfcampaignEntity", "CreatedDate", "CreatedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "AfcampaignEntity", "LastModifiedDate", "LastModifiedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 12 );
			base.AddElementFieldMapping( "AfcampaignEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 13 );
			base.AddElementFieldMapping( "AfcampaignEntity", "IsGlobal", "IsGlobal", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 14 );
			base.AddElementFieldMapping( "AfcampaignEntity", "CompensationType", "CompensationType", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 15 );
			base.AddElementFieldMapping( "AfcampaignEntity", "CampaignType", "CampaignType", false, (int)SqlDbType.SmallInt, 0, 0, 5, false, "", null, typeof(System.Int16), 16 );
			base.AddElementFieldMapping( "AfcampaignEntity", "OwnerAffiliate", "OwnerAffiliate", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 17 );
			base.AddElementFieldMapping( "AfcampaignEntity", "IsuniquePhonenumber", "IsuniquePhonenumber", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 18 );
			base.AddElementFieldMapping( "AfcampaignEntity", "IsAutoGenerated", "IsAutoGenerated", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 19 );
			base.AddElementFieldMapping( "AfcampaignEntity", "Notes", "Notes", true, (int)SqlDbType.NVarChar, 1000, 0, 0, false, "", null, typeof(System.String), 20 );
			base.AddElementFieldMapping( "AfcampaignEntity", "CategoryId", "CategoryId", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 21 );
			base.AddElementFieldMapping( "AfcampaignEntity", "RoleId", "OwnerOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 22 );
			base.AddElementFieldMapping( "AfcampaignEntity", "ShellId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 23 );
		}
		/// <summary>Inits AfcampaignCreativeEntity's mappings</summary>
		private void InitAfcampaignCreativeEntityMappings()
		{
			base.AddElementMapping( "AfcampaignCreativeEntity", "Falcon", @"dbo", "tblAFCampaignCreative", 6 );
			base.AddElementFieldMapping( "AfcampaignCreativeEntity", "CampaignCreativeId", "CampaignCreativeId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AfcampaignCreativeEntity", "CampaignId", "CampaignID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "AfcampaignCreativeEntity", "CreativeId", "CreativeID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "AfcampaignCreativeEntity", "CreatedDate", "CreatedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "AfcampaignCreativeEntity", "LastModifiedDate", "LastModifiedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "AfcampaignCreativeEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits AfcampaignSubAdvocateEntity's mappings</summary>
		private void InitAfcampaignSubAdvocateEntityMappings()
		{
			base.AddElementMapping( "AfcampaignSubAdvocateEntity", "Falcon", @"dbo", "tblAFCampaignSubAdvocate", 8 );
			base.AddElementFieldMapping( "AfcampaignSubAdvocateEntity", "CampaignSubAffiliateId", "CampaignSubAffiliateID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AfcampaignSubAdvocateEntity", "CampaignId", "CampaignID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "AfcampaignSubAdvocateEntity", "AffiliateId", "AffiliateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "AfcampaignSubAdvocateEntity", "SubAffiliateId", "SubAffiliateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "AfcampaignSubAdvocateEntity", "SubAffiliateCommission", "SubAffiliateCommission", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 4 );
			base.AddElementFieldMapping( "AfcampaignSubAdvocateEntity", "IsActive", "isActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "AfcampaignSubAdvocateEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "AfcampaignSubAdvocateEntity", "ModifiedOn", "ModifiedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
		}
		/// <summary>Inits AfcampaignTemplateEntity's mappings</summary>
		private void InitAfcampaignTemplateEntityMappings()
		{
			base.AddElementMapping( "AfcampaignTemplateEntity", "Falcon", @"dbo", "tblAFCampaignTemplate", 17 );
			base.AddElementFieldMapping( "AfcampaignTemplateEntity", "CampaignTemplateId", "CampaignTemplateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AfcampaignTemplateEntity", "TemplateType", "TemplateType", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 1 );
			base.AddElementFieldMapping( "AfcampaignTemplateEntity", "TemplateCampaignName", "TemplateCampaignName", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "AfcampaignTemplateEntity", "PromoCodeId", "PromoCodeID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "AfcampaignTemplateEntity", "AdvertiserId", "AdvertiserID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "AfcampaignTemplateEntity", "IncomingPhone", "IncomingPhone", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "AfcampaignTemplateEntity", "StartDate", "StartDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "AfcampaignTemplateEntity", "EndDate", "EndDate", true, (int)SqlDbType.NChar, 10, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "AfcampaignTemplateEntity", "Cost", "Cost", false, (int)SqlDbType.Decimal, 0, 0, 18, false, "", null, typeof(System.Decimal), 8 );
			base.AddElementFieldMapping( "AfcampaignTemplateEntity", "Commision", "Commision", true, (int)SqlDbType.Decimal, 0, 0, 18, false, "", null, typeof(System.Decimal), 9 );
			base.AddElementFieldMapping( "AfcampaignTemplateEntity", "ParentAffiliateCommision", "ParentAffiliateCommision", true, (int)SqlDbType.Decimal, 0, 0, 18, false, "", null, typeof(System.Decimal), 10 );
			base.AddElementFieldMapping( "AfcampaignTemplateEntity", "IsCommisionPercentage", "IsCommisionPercentage", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 11 );
			base.AddElementFieldMapping( "AfcampaignTemplateEntity", "CreatedDate", "CreatedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 12 );
			base.AddElementFieldMapping( "AfcampaignTemplateEntity", "LastModifiedDate", "LastModifiedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 13 );
			base.AddElementFieldMapping( "AfcampaignTemplateEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 14 );
			base.AddElementFieldMapping( "AfcampaignTemplateEntity", "IsGlobal", "IsGlobal", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 15 );
			base.AddElementFieldMapping( "AfcampaignTemplateEntity", "OwnerFranchiseeId", "OwnerOrganizationId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 16 );
		}
		/// <summary>Inits AfchannelEntity's mappings</summary>
		private void InitAfchannelEntityMappings()
		{
			base.AddElementMapping( "AfchannelEntity", "Falcon", @"dbo", "tblAFChannel", 5 );
			base.AddElementFieldMapping( "AfchannelEntity", "ChannelId", "ChannelID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AfchannelEntity", "ChannelName", "ChannelName", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "AfchannelEntity", "CreatedDate", "CreatedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "AfchannelEntity", "LastModifiedDate", "LastModifiedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "AfchannelEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
		}
		/// <summary>Inits AfcommisionEntity's mappings</summary>
		private void InitAfcommisionEntityMappings()
		{
			base.AddElementMapping( "AfcommisionEntity", "Falcon", @"dbo", "tblAFCommision", 14 );
			base.AddElementFieldMapping( "AfcommisionEntity", "CommisionId", "CommisionID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AfcommisionEntity", "AffiliateId", "AffiliateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "AfcommisionEntity", "AffiliateCampaignId", "AffiliateCampaignID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "AfcommisionEntity", "EventCustomerId", "EventCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "AfcommisionEntity", "Commision", "Commision", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 4 );
			base.AddElementFieldMapping( "AfcommisionEntity", "IsParentAffilateCommision", "IsParentAffilateCommision", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "AfcommisionEntity", "Notes", "Notes", false, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "AfcommisionEntity", "CreatedDate", "CreatedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "AfcommisionEntity", "LastModifiedDate", "LastModifiedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "AfcommisionEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 9 );
			base.AddElementFieldMapping( "AfcommisionEntity", "IsPaid", "IsPaid", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 10 );
			base.AddElementFieldMapping( "AfcommisionEntity", "SaleAmount", "SaleAmount", true, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 11 );
			base.AddElementFieldMapping( "AfcommisionEntity", "PaymentId", "PaymentID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "AfcommisionEntity", "IsPaymentConfirm", "IsPaymentConfirm", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 13 );
		}
		/// <summary>Inits AfDailyLogImpressionClickEntity's mappings</summary>
		private void InitAfDailyLogImpressionClickEntityMappings()
		{
			base.AddElementMapping( "AfDailyLogImpressionClickEntity", "Falcon", @"dbo", "tblAfDailyLogImpressionClick", 6 );
			base.AddElementFieldMapping( "AfDailyLogImpressionClickEntity", "DailyLogImpressionClickId", "DailyLogImpressionClickId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AfDailyLogImpressionClickEntity", "CampaignId", "CampaignId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "AfDailyLogImpressionClickEntity", "MarketingMaterialId", "MarketingMaterialId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "AfDailyLogImpressionClickEntity", "ImpressionCount", "ImpressionCount", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "AfDailyLogImpressionClickEntity", "ClickCount", "ClickCount", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "AfDailyLogImpressionClickEntity", "Date", "Date", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 5 );
		}
		/// <summary>Inits AffiliateProfileEntity's mappings</summary>
		private void InitAffiliateProfileEntityMappings()
		{
			base.AddElementMapping( "AffiliateProfileEntity", "Falcon", @"dbo", "TblAffiliateProfile", 30 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "AffiliateId", "AffiliateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "ParentAffilateId", "ParentAffilateID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "AffiliateCode", "AffiliateCode", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "CreatedDate", "CreatedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "LastModifiedDate", "LastModifiedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "IsGlobal", "IsGlobal", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "DefaultIncomingPhoneLine", "DefaultIncomingPhoneLine", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "MaxCommisionDollar", "MaxCommisionDollar", true, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 8 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "MaxParentCommisionDollar", "MaxParentCommisionDollar", true, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 9 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "PayCycle", "PayCycle", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 10 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "PaymentThreshold", "PaymentThreshold", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 11 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "PaymentAddressId", "PaymentAddressId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "IsPaymentByCheck", "IsPaymentByCheck", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 13 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "IsDonation", "IsDonation", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 14 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "CheckPaypalEmail", "CheckPaypalEMail", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 15 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "MarketingInfo", "MarketingInfo", true, (int)SqlDbType.VarChar, 250, 0, 0, false, "", null, typeof(System.String), 16 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "MaxCommisionPercentage", "MaxCommisionPercentage", true, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 17 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "MaxParentCommisionPercentage", "MaxParentCommisionPercentage", true, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 18 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "IsApproved", "IsApproved", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 19 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "LastPaidOn", "LastPaidOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 20 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "NextDueOn", "NextDueOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 21 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "IsExpressAffiliate", "isExpressAffiliate", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 22 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "IsMonetize", "isMonetize", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 23 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "CompanyName", "CompanyName", true, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 24 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "CampaignTypeAssignment", "CampaignTypeAssignment", false, (int)SqlDbType.SmallInt, 0, 0, 5, false, "", null, typeof(System.Int16), 25 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "CategoryId", "CategoryId", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 26 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "WebAddress", "WebAddress", true, (int)SqlDbType.NVarChar, 1000, 0, 0, false, "", null, typeof(System.String), 27 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "OwnerOrganizationId", "OwnerOrganizationId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 28 );
			base.AddElementFieldMapping( "AffiliateProfileEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 29 );
		}
		/// <summary>Inits AfimpressionEntity's mappings</summary>
		private void InitAfimpressionEntityMappings()
		{
			base.AddElementMapping( "AfimpressionEntity", "Falcon", @"dbo", "tblAFImpression", 3 );
			base.AddElementFieldMapping( "AfimpressionEntity", "ImpressionId", "ImpressionID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AfimpressionEntity", "CampaignId", "CampaignId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "AfimpressionEntity", "TotalImpressionMarkedForCommission", "TotalImpressionMarkedForCommission", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
		}
		/// <summary>Inits AfimpressionLogEntity's mappings</summary>
		private void InitAfimpressionLogEntityMappings()
		{
			base.AddElementMapping( "AfimpressionLogEntity", "Falcon", @"dbo", "tblAFImpressionLog", 5 );
			base.AddElementFieldMapping( "AfimpressionLogEntity", "ImpressionLogId", "ImpressionLogID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AfimpressionLogEntity", "AffiliateCampaignMarketingMaterialId", "AffiliateCampaignMarketingMaterialID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "AfimpressionLogEntity", "DayStamp", "DayStamp", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "AfimpressionLogEntity", "ImpressionCount", "ImpressionCount", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "AfimpressionLogEntity", "ClickCount", "ClickCount", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
		}
		/// <summary>Inits AfincomingPhoneEntity's mappings</summary>
		private void InitAfincomingPhoneEntityMappings()
		{
			base.AddElementMapping( "AfincomingPhoneEntity", "Falcon", @"dbo", "tblAFIncomingPhone", 2 );
			base.AddElementFieldMapping( "AfincomingPhoneEntity", "IncomingPhoneId", "IncomingPhoneId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AfincomingPhoneEntity", "IncomingPhoneLine", "IncomingPhoneLine", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 1 );
		}
		/// <summary>Inits AflAffiliatePaymentMethodEntity's mappings</summary>
		private void InitAflAffiliatePaymentMethodEntityMappings()
		{
			base.AddElementMapping( "AflAffiliatePaymentMethodEntity", "Falcon", @"dbo", "tblAFlAffiliatePaymentMethod", 7 );
			base.AddElementFieldMapping( "AflAffiliatePaymentMethodEntity", "AffiliatePaymentMethod", "AffiliatePaymentMethod", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AflAffiliatePaymentMethodEntity", "AffiliateId", "AffiliateID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "AflAffiliatePaymentMethodEntity", "StartDate", "StartDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "AflAffiliatePaymentMethodEntity", "EndDate", "EndDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "AflAffiliatePaymentMethodEntity", "CreatedDate", "CreatedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "AflAffiliatePaymentMethodEntity", "LastModifiedDate", "LastModifiedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "AflAffiliatePaymentMethodEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
		}
		/// <summary>Inits AfmanualCheckEntity's mappings</summary>
		private void InitAfmanualCheckEntityMappings()
		{
			base.AddElementMapping( "AfmanualCheckEntity", "Falcon", @"dbo", "tblAFManualCheck", 7 );
			base.AddElementFieldMapping( "AfmanualCheckEntity", "ManualCheckId", "ManualCheckID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AfmanualCheckEntity", "AffiliatePaymentMethodId", "AffiliatePaymentMethodID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "AfmanualCheckEntity", "PayeeName", "PayeeName", false, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "AfmanualCheckEntity", "CreatedDate", "CreatedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "AfmanualCheckEntity", "LastModifiedDate", "LastModifiedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "AfmanualCheckEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "AfmanualCheckEntity", "PayeeAddressId", "PayeeAddressID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
		}
		/// <summary>Inits AfmarketingMaterialEntity's mappings</summary>
		private void InitAfmarketingMaterialEntityMappings()
		{
			base.AddElementMapping( "AfmarketingMaterialEntity", "Falcon", @"dbo", "tblAFMarketingMaterial", 23 );
			base.AddElementFieldMapping( "AfmarketingMaterialEntity", "MarketingMaterialId", "MarketingMaterialId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AfmarketingMaterialEntity", "Title", "Title", false, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "AfmarketingMaterialEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "AfmarketingMaterialEntity", "IsEventSpecific", "IsEventSpecific", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "AfmarketingMaterialEntity", "MarketingMaterialTypeId", "MarketingMaterialTypeID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "AfmarketingMaterialEntity", "ImagePath", "ImagePath", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "AfmarketingMaterialEntity", "Text", "Text", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "AfmarketingMaterialEntity", "Htmltext", "HTMLText", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "AfmarketingMaterialEntity", "CommonSizeName", "CommonSizeName", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "AfmarketingMaterialEntity", "Height", "Height", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 9 );
			base.AddElementFieldMapping( "AfmarketingMaterialEntity", "Width", "Width", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 10 );
			base.AddElementFieldMapping( "AfmarketingMaterialEntity", "CreatedDate", "CreatedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "AfmarketingMaterialEntity", "LastModifiedDate", "LastModifiedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 12 );
			base.AddElementFieldMapping( "AfmarketingMaterialEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 13 );
			base.AddElementFieldMapping( "AfmarketingMaterialEntity", "IsInternal", "IsInternal", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 14 );
			base.AddElementFieldMapping( "AfmarketingMaterialEntity", "EventId", "EventID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 15 );
			base.AddElementFieldMapping( "AfmarketingMaterialEntity", "HeadingText", "HeadingText", true, (int)SqlDbType.VarChar, 2000, 0, 0, false, "", null, typeof(System.String), 16 );
			base.AddElementFieldMapping( "AfmarketingMaterialEntity", "LeadingInUrl", "LeadingInURL", true, (int)SqlDbType.VarChar, 2000, 0, 0, false, "", null, typeof(System.String), 17 );
			base.AddElementFieldMapping( "AfmarketingMaterialEntity", "DisplayUrl", "DisplayURL", true, (int)SqlDbType.VarChar, 2000, 0, 0, false, "", null, typeof(System.String), 18 );
			base.AddElementFieldMapping( "AfmarketingMaterialEntity", "IsInbound", "IsInbound", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 19 );
			base.AddElementFieldMapping( "AfmarketingMaterialEntity", "Isdefault", "Isdefault", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 20 );
			base.AddElementFieldMapping( "AfmarketingMaterialEntity", "MarketingOfferId", "MarketingOfferID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 21 );
			base.AddElementFieldMapping( "AfmarketingMaterialEntity", "ThumbnailImagePath", "ThumbnailImagePath", true, (int)SqlDbType.VarChar, 3000, 0, 0, false, "", null, typeof(System.String), 22 );
		}
		/// <summary>Inits AfMarketingMaterialBannerSizeEntity's mappings</summary>
		private void InitAfMarketingMaterialBannerSizeEntityMappings()
		{
			base.AddElementMapping( "AfMarketingMaterialBannerSizeEntity", "Falcon", @"dbo", "TblAfMarketingMaterialBannerSize", 5 );
			base.AddElementFieldMapping( "AfMarketingMaterialBannerSizeEntity", "MarketingMaterialBannerSizeId", "MarketingMaterialBannerSizeID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AfMarketingMaterialBannerSizeEntity", "BannerSize", "BannerSize", false, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "AfMarketingMaterialBannerSizeEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "AfMarketingMaterialBannerSizeEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "AfMarketingMaterialBannerSizeEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
		}
		/// <summary>Inits AfmarketingMaterialGroupEntity's mappings</summary>
		private void InitAfmarketingMaterialGroupEntityMappings()
		{
			base.AddElementMapping( "AfmarketingMaterialGroupEntity", "Falcon", @"dbo", "tblAFMarketingMaterialGroup", 6 );
			base.AddElementFieldMapping( "AfmarketingMaterialGroupEntity", "MarketingMaterialGroupId", "MarketingMaterialGroupId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AfmarketingMaterialGroupEntity", "Title", "Title", false, (int)SqlDbType.NVarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "AfmarketingMaterialGroupEntity", "Description", "Description", true, (int)SqlDbType.NVarChar, 1000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "AfmarketingMaterialGroupEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "AfmarketingMaterialGroupEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "AfmarketingMaterialGroupEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits AfmarketingMaterialTypeEntity's mappings</summary>
		private void InitAfmarketingMaterialTypeEntityMappings()
		{
			base.AddElementMapping( "AfmarketingMaterialTypeEntity", "Falcon", @"dbo", "tblAFMarketingMaterialType", 8 );
			base.AddElementFieldMapping( "AfmarketingMaterialTypeEntity", "MarketingMaterialTypeId", "MarketingMaterialTypeID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AfmarketingMaterialTypeEntity", "Title", "Title", false, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "AfmarketingMaterialTypeEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "AfmarketingMaterialTypeEntity", "Tag", "Tag", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "AfmarketingMaterialTypeEntity", "GroupId", "GroupId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "AfmarketingMaterialTypeEntity", "CreatedDate", "CreatedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "AfmarketingMaterialTypeEntity", "LastModifiedDate", "LastModifiedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "AfmarketingMaterialTypeEntity", "IsActive", "IsActive", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
		}
		/// <summary>Inits AfpaymentEntity's mappings</summary>
		private void InitAfpaymentEntityMappings()
		{
			base.AddElementMapping( "AfpaymentEntity", "Falcon", @"dbo", "tblAFPayment", 15 );
			base.AddElementFieldMapping( "AfpaymentEntity", "PaymentId", "PaymentID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AfpaymentEntity", "AffiliateId", "AffiliateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "AfpaymentEntity", "Amount", "Amount", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 2 );
			base.AddElementFieldMapping( "AfpaymentEntity", "PaymentDate", "PaymentDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "AfpaymentEntity", "CommisionStartDate", "CommisionStartDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "AfpaymentEntity", "CommisionEndDate", "CommisionEndDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "AfpaymentEntity", "AffiliatePaymentMethod", "AffiliatePaymentMethod", true, (int)SqlDbType.NChar, 10, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "AfpaymentEntity", "PaymentMode", "PaymentMode", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 7 );
			base.AddElementFieldMapping( "AfpaymentEntity", "Notes", "Notes", true, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "AfpaymentEntity", "CreatedDate", "CreatedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "AfpaymentEntity", "LastModifiedDate", "LastModifiedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 10 );
			base.AddElementFieldMapping( "AfpaymentEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 11 );
			base.AddElementFieldMapping( "AfpaymentEntity", "InvoiceNumber", "InvoiceNumber", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "AfpaymentEntity", "CheckNumber", "CheckNumber", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "AfpaymentEntity", "NameOnCheck", "NameOnCheck", true, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 14 );
		}
		/// <summary>Inits AfpaypalEntity's mappings</summary>
		private void InitAfpaypalEntityMappings()
		{
			base.AddElementMapping( "AfpaypalEntity", "Falcon", @"dbo", "tblAFPaypal", 7 );
			base.AddElementFieldMapping( "AfpaypalEntity", "PaypalId", "PaypalID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AfpaypalEntity", "AffiliatePaymentMethod", "AffiliatePaymentMethod", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "AfpaypalEntity", "PayPalUserName", "PayPalUserName", false, (int)SqlDbType.NChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "AfpaypalEntity", "PaypalVerfiedAddressId", "PaypalVerfiedAddressId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "AfpaypalEntity", "CreatedDate", "CreatedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "AfpaypalEntity", "LastModifiedDate", "LastModifiedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "AfpaypalEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
		}
		/// <summary>Inits AfppcclickLogEntity's mappings</summary>
		private void InitAfppcclickLogEntityMappings()
		{
			base.AddElementMapping( "AfppcclickLogEntity", "Falcon", @"dbo", "tblAFPPCClickLog", 6 );
			base.AddElementFieldMapping( "AfppcclickLogEntity", "PpcclickLogId", "PPCClickLogID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AfppcclickLogEntity", "CampaignId", "CampaignId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "AfppcclickLogEntity", "Mmid", "MMID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "AfppcclickLogEntity", "TimeStamp", "TimeStamp", false, (int)SqlDbType.SmallDateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "AfppcclickLogEntity", "IpAddress", "IP_Address", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "AfppcclickLogEntity", "Referer", "Referer", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 5 );
		}
		/// <summary>Inits AfredirectUrlEntity's mappings</summary>
		private void InitAfredirectUrlEntityMappings()
		{
			base.AddElementMapping( "AfredirectUrlEntity", "Falcon", @"dbo", "tblAFRedirectURL", 6 );
			base.AddElementFieldMapping( "AfredirectUrlEntity", "RedirectUrlId", "RedirectUrlID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AfredirectUrlEntity", "CampaignMmid", "CampaignMMID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "AfredirectUrlEntity", "RedirectUrl", "RedirectUrl", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "AfredirectUrlEntity", "CreatedDate", "CreatedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "AfredirectUrlEntity", "LastModifiedDate", "LastModifiedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "AfredirectUrlEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits ApplicationAuthenticationEntity's mappings</summary>
		private void InitApplicationAuthenticationEntityMappings()
		{
			base.AddElementMapping( "ApplicationAuthenticationEntity", "Falcon", @"dbo", "TblApplicationAuthentication", 9 );
			base.AddElementFieldMapping( "ApplicationAuthenticationEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ApplicationAuthenticationEntity", "ApplicationName", "ApplicationName", false, (int)SqlDbType.NVarChar, 1024, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ApplicationAuthenticationEntity", "ApplicationId", "ApplicationId", false, (int)SqlDbType.NVarChar, 1024, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ApplicationAuthenticationEntity", "Token", "Token", false, (int)SqlDbType.NVarChar, 1024, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "ApplicationAuthenticationEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "ApplicationAuthenticationEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "ApplicationAuthenticationEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "ApplicationAuthenticationEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "ApplicationAuthenticationEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
		}
		/// <summary>Inits BarrierEntity's mappings</summary>
		private void InitBarrierEntityMappings()
		{
			base.AddElementMapping( "BarrierEntity", "Falcon", @"dbo", "TblBarrier", 8 );
			base.AddElementFieldMapping( "BarrierEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "BarrierEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "BarrierEntity", "Alias", "Alias", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "BarrierEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "BarrierEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "BarrierEntity", "CreatedBy", "CreatedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "BarrierEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "BarrierEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
		}
		/// <summary>Inits BillingAccountEntity's mappings</summary>
		private void InitBillingAccountEntityMappings()
		{
			base.AddElementMapping( "BillingAccountEntity", "Falcon", @"dbo", "TblBillingAccount", 6 );
			base.AddElementFieldMapping( "BillingAccountEntity", "BillingAccountId", "BillingAccountId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "BillingAccountEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "BillingAccountEntity", "CustomerKey", "CustomerKey", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "BillingAccountEntity", "UserName", "UserName", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "BillingAccountEntity", "Password", "Password", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "BillingAccountEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits BillingAccountTestEntity's mappings</summary>
		private void InitBillingAccountTestEntityMappings()
		{
			base.AddElementMapping( "BillingAccountTestEntity", "Falcon", @"dbo", "TblBillingAccountTest", 2 );
			base.AddElementFieldMapping( "BillingAccountTestEntity", "BillingAccountId", "BillingAccountId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "BillingAccountTestEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits BlockedDaysEntity's mappings</summary>
		private void InitBlockedDaysEntityMappings()
		{
			base.AddElementMapping( "BlockedDaysEntity", "Falcon", @"dbo", "tblBlockedDays", 5 );
			base.AddElementFieldMapping( "BlockedDaysEntity", "BlockedDayId", "BlockedDayID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "BlockedDaysEntity", "BlockedDay", "BlockedDay", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 1 );
			base.AddElementFieldMapping( "BlockedDaysEntity", "BlockedReason", "BlockedReason", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "BlockedDaysEntity", "IsGlobal", "IsGlobal", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "BlockedDaysEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
		}
		/// <summary>Inits BlockedDaysFranchiseeEntity's mappings</summary>
		private void InitBlockedDaysFranchiseeEntityMappings()
		{
			base.AddElementMapping( "BlockedDaysFranchiseeEntity", "Falcon", @"dbo", "tblBlockedDaysFranchisee", 4 );
			base.AddElementFieldMapping( "BlockedDaysFranchiseeEntity", "BlockedDayFranchiseeId", "BlockedDayFranchiseeID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "BlockedDaysFranchiseeEntity", "BlockedDaysId", "BlockedDaysID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "BlockedDaysFranchiseeEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
			base.AddElementFieldMapping( "BlockedDaysFranchiseeEntity", "OrganizationId", "OrganizationId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
		}
		/// <summary>Inits CallCenterAgentTeamEntity's mappings</summary>
		private void InitCallCenterAgentTeamEntityMappings()
		{
			base.AddElementMapping( "CallCenterAgentTeamEntity", "Falcon", @"dbo", "TblCallCenterAgentTeam", 2 );
			base.AddElementFieldMapping( "CallCenterAgentTeamEntity", "TeamId", "TeamId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CallCenterAgentTeamEntity", "AgentId", "AgentId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits CallCenterAgentTeamLogEntity's mappings</summary>
		private void InitCallCenterAgentTeamLogEntityMappings()
		{
			base.AddElementMapping( "CallCenterAgentTeamLogEntity", "Falcon", @"dbo", "TblCallCenterAgentTeamLog", 8 );
			base.AddElementFieldMapping( "CallCenterAgentTeamLogEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CallCenterAgentTeamLogEntity", "TeamId", "TeamId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CallCenterAgentTeamLogEntity", "AgentId", "AgentId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CallCenterAgentTeamLogEntity", "DateAssigned", "DateAssigned", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "CallCenterAgentTeamLogEntity", "DateRemoved", "DateRemoved", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "CallCenterAgentTeamLogEntity", "AssignedByOrgRoleUserId", "AssignedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "CallCenterAgentTeamLogEntity", "RemovedByOrgRoleUserId", "RemovedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "CallCenterAgentTeamLogEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
		}
		/// <summary>Inits CallCenterNotesEntity's mappings</summary>
		private void InitCallCenterNotesEntityMappings()
		{
			base.AddElementMapping( "CallCenterNotesEntity", "Falcon", @"dbo", "TblCallCenterNotes", 7 );
			base.AddElementFieldMapping( "CallCenterNotesEntity", "CallCenterNotesId", "CallCenterNotesID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CallCenterNotesEntity", "CallId", "CallID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CallCenterNotesEntity", "Notes", "Notes", true, (int)SqlDbType.VarChar, 5000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CallCenterNotesEntity", "NotesSequence", "NotesSequence", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "CallCenterNotesEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "CallCenterNotesEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "CallCenterNotesEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
		}
		/// <summary>Inits CallCenterRepProfileEntity's mappings</summary>
		private void InitCallCenterRepProfileEntityMappings()
		{
			base.AddElementMapping( "CallCenterRepProfileEntity", "Falcon", @"dbo", "TblCallCenterRepProfile", 4 );
			base.AddElementFieldMapping( "CallCenterRepProfileEntity", "CallCenterRepId", "CallCenterRepId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CallCenterRepProfileEntity", "CanRefund", "CanRefund", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 1 );
			base.AddElementFieldMapping( "CallCenterRepProfileEntity", "CanChangeNotes", "CanChangeNotes", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
			base.AddElementFieldMapping( "CallCenterRepProfileEntity", "DialerUrl", "DialerUrl", true, (int)SqlDbType.NVarChar, 2048, 0, 0, false, "", null, typeof(System.String), 3 );
		}
		/// <summary>Inits CallCenterTeamEntity's mappings</summary>
		private void InitCallCenterTeamEntityMappings()
		{
			base.AddElementMapping( "CallCenterTeamEntity", "Falcon", @"dbo", "TblCallCenterTeam", 9 );
			base.AddElementFieldMapping( "CallCenterTeamEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CallCenterTeamEntity", "Name", "Name", true, (int)SqlDbType.NVarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "CallCenterTeamEntity", "Description", "Description", true, (int)SqlDbType.NVarChar, 2048, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CallCenterTeamEntity", "TypeId", "TypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "CallCenterTeamEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "CallCenterTeamEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "CallCenterTeamEntity", "ModifiedBy", "ModifiedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "CallCenterTeamEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "CallCenterTeamEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
		}
		/// <summary>Inits CallDetailsEntity's mappings</summary>
		private void InitCallDetailsEntityMappings()
		{
			base.AddElementMapping( "CallDetailsEntity", "Falcon", @"dbo", "TblCallDetails", 5 );
			base.AddElementFieldMapping( "CallDetailsEntity", "CallDetailsId", "CallDetailsID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CallDetailsEntity", "CalledUserId", "CalledUserID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CallDetailsEntity", "EventId", "EventID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CallDetailsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "CallDetailsEntity", "DareModified", "DareModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
		}
		/// <summary>Inits CallQueueEntity's mappings</summary>
		private void InitCallQueueEntityMappings()
		{
			base.AddElementMapping( "CallQueueEntity", "Falcon", @"dbo", "TblCallQueue", 16 );
			base.AddElementFieldMapping( "CallQueueEntity", "CallQueueId", "CallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CallQueueEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 2000, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "CallQueueEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CallQueueEntity", "Attempts", "Attempts", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 3 );
			base.AddElementFieldMapping( "CallQueueEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "CallQueueEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "CallQueueEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "CallQueueEntity", "ModifiedByOrgRoleUserId", "ModifiedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "CallQueueEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
			base.AddElementFieldMapping( "CallQueueEntity", "IsQueueGenerated", "IsQueueGenerated", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 9 );
			base.AddElementFieldMapping( "CallQueueEntity", "QueueGenerationInterval", "QueueGenerationInterval", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 10 );
			base.AddElementFieldMapping( "CallQueueEntity", "LastQueueGeneratedDate", "LastQueueGeneratedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "CallQueueEntity", "ScriptId", "ScriptId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "CallQueueEntity", "IsManual", "IsManual", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 13 );
			base.AddElementFieldMapping( "CallQueueEntity", "Category", "Category", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 14 );
			base.AddElementFieldMapping( "CallQueueEntity", "IsHealthPlan", "IsHealthPlan", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 15 );
		}
		/// <summary>Inits CallQueueAssignmentEntity's mappings</summary>
		private void InitCallQueueAssignmentEntityMappings()
		{
			base.AddElementMapping( "CallQueueAssignmentEntity", "Falcon", @"dbo", "TblCallQueueAssignment", 3 );
			base.AddElementFieldMapping( "CallQueueAssignmentEntity", "CallQueueId", "CallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CallQueueAssignmentEntity", "AssignedOrgRoleUserId", "AssignedOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CallQueueAssignmentEntity", "Percentage", "Percentage", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 2 );
		}
		/// <summary>Inits CallQueueCriteriaEntity's mappings</summary>
		private void InitCallQueueCriteriaEntityMappings()
		{
			base.AddElementMapping( "CallQueueCriteriaEntity", "Falcon", @"dbo", "TblCallQueueCriteria", 9 );
			base.AddElementFieldMapping( "CallQueueCriteriaEntity", "CallQueueCriteriaId", "CallQueueCriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CallQueueCriteriaEntity", "CallQueueId", "CallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CallQueueCriteriaEntity", "CriteriaId", "CriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CallQueueCriteriaEntity", "Zipcode", "Zipcode", false, (int)SqlDbType.VarChar, 10, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "CallQueueCriteriaEntity", "Radius", "Radius", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 4 );
			base.AddElementFieldMapping( "CallQueueCriteriaEntity", "Condition", "Condition", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "CallQueueCriteriaEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "CallQueueCriteriaEntity", "Sequence", "Sequence", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 7 );
			base.AddElementFieldMapping( "CallQueueCriteriaEntity", "CallReason", "CallReason", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 8 );
		}
		/// <summary>Inits CallQueueCustomerEntity's mappings</summary>
		private void InitCallQueueCustomerEntityMappings()
		{
			base.AddElementMapping( "CallQueueCustomerEntity", "Falcon", @"dbo", "TblCallQueueCustomer", 52 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "CallQueueCustomerId", "CallQueueCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "CallQueueId", "CallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "CustomerId", "CustomerId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "ProspectCustomerId", "ProspectCustomerId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "Attempts", "Attempts", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 5 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "NotesId", "NotesId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "ModifiedByOrgRoleUserId", "ModifiedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 11 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "AssignedToOrgRoleUserId", "AssignedToOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "CallQueueCriteriaId", "CallQueueCriteriaId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 13 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "CallDate", "CallDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 14 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "EventId", "EventId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 15 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "HealthPlanId", "HealthPlanId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 16 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "CampaignId", "CampaignId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 17 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "LastUpdatedOn", "LastUpdatedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 18 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "FirstName", "FirstName", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 19 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "MiddleName", "MiddleName", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 20 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "LastName", "LastName", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 21 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "PhoneOffice", "PhoneOffice", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 22 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "PhoneCell", "PhoneCell", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 23 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "PhoneHome", "PhoneHome", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 24 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "ZipId", "ZipId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 25 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "ZipCode", "ZipCode", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 26 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "Tag", "Tag", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 27 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "IsEligble", "IsEligble", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 28 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "IsIncorrectPhoneNumber", "IsIncorrectPhoneNumber", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 29 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "IsLanguageBarrier", "IsLanguageBarrier", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 30 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "ActivityId", "ActivityId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 31 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "DoNotContactTypeId", "DoNotContactTypeId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 32 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "DoNotContactReasonId", "DoNotContactReasonId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 33 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "DoNotContactUpdateDate", "DoNotContactUpdateDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 34 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "CallCount", "CallCount", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 35 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "AppointmentDate", "AppointmentDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 36 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "CallStatus", "CallStatus", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 37 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "ContactedDate", "ContactedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 38 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "Disposition", "Disposition", true, (int)SqlDbType.NVarChar, 400, 0, 0, false, "", null, typeof(System.String), 39 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "CallBackRequestedDate", "CallBackRequestedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 40 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "AppointmentCancellationDate", "AppointmentCancellationDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 41 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "EventCustomerId", "EventCustomerId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 42 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "AppointmentDateTimeWithTimeZone", "AppointmentDateTimeWithTimeZone", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 43 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "DoNotContactUpdateSource", "DoNotContactUpdateSource", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 44 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "IncorrectPhoneNumberMarkedDate", "IncorrectPhoneNumberMarkedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 45 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "LanguageBarrierMarkedDate", "LanguageBarrierMarkedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 46 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "LanguageId", "LanguageId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 47 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "NoShowDate", "NoShowDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 48 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "TargetedYear", "TargetedYear", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 49 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "IsTargeted", "IsTargeted", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 50 );
			base.AddElementFieldMapping( "CallQueueCustomerEntity", "ProductTypeId", "ProductTypeId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 51 );
		}
		/// <summary>Inits CallQueueCustomerCallEntity's mappings</summary>
		private void InitCallQueueCustomerCallEntityMappings()
		{
			base.AddElementMapping( "CallQueueCustomerCallEntity", "Falcon", @"dbo", "TblCallQueueCustomerCall", 2 );
			base.AddElementFieldMapping( "CallQueueCustomerCallEntity", "CallQueueCustomerId", "CallQueueCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CallQueueCustomerCallEntity", "CallId", "CallId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits CallQueueCustomerLockEntity's mappings</summary>
		private void InitCallQueueCustomerLockEntityMappings()
		{
			base.AddElementMapping( "CallQueueCustomerLockEntity", "Falcon", @"dbo", "TblCallQueueCustomerLock", 5 );
			base.AddElementFieldMapping( "CallQueueCustomerLockEntity", "CallQueueCustomerId", "CallQueueCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CallQueueCustomerLockEntity", "ProspectCustomerId", "ProspectCustomerId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CallQueueCustomerLockEntity", "CustomerId", "CustomerId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CallQueueCustomerLockEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "CallQueueCustomerLockEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
		}
		/// <summary>Inits CallQueueCustomTagEntity's mappings</summary>
		private void InitCallQueueCustomTagEntityMappings()
		{
			base.AddElementMapping( "CallQueueCustomTagEntity", "Falcon", @"dbo", "TblCallQueueCustomTag", 6 );
			base.AddElementFieldMapping( "CallQueueCustomTagEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CallQueueCustomTagEntity", "HealthPlanId", "HealthPlanId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CallQueueCustomTagEntity", "CustomTag", "CustomTag", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CallQueueCustomTagEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "CallQueueCustomTagEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "CallQueueCustomTagEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits CallRoundCallQueueEntity's mappings</summary>
		private void InitCallRoundCallQueueEntityMappings()
		{
			base.AddElementMapping( "CallRoundCallQueueEntity", "Falcon", @"dbo", "TblCallRoundCallQueue", 8 );
			base.AddElementFieldMapping( "CallRoundCallQueueEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CallRoundCallQueueEntity", "HealthPlanId", "HealthPlanId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CallRoundCallQueueEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CallRoundCallQueueEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "CallRoundCallQueueEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "CallRoundCallQueueEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "CallRoundCallQueueEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "CallRoundCallQueueEntity", "CallDate", "CallDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
		}
		/// <summary>Inits CallRoundCallQueueCriteriaAssignmentEntity's mappings</summary>
		private void InitCallRoundCallQueueCriteriaAssignmentEntityMappings()
		{
			base.AddElementMapping( "CallRoundCallQueueCriteriaAssignmentEntity", "Falcon", @"dbo", "TblCallRoundCallQueueCriteriaAssignment", 2 );
			base.AddElementFieldMapping( "CallRoundCallQueueCriteriaAssignmentEntity", "CallRoundCallQueueId", "CallRoundCallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CallRoundCallQueueCriteriaAssignmentEntity", "CriteriaId", "CriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits CallsEntity's mappings</summary>
		private void InitCallsEntityMappings()
		{
			base.AddElementMapping( "CallsEntity", "Falcon", @"dbo", "TblCalls", 30 );
			base.AddElementFieldMapping( "CallsEntity", "CallId", "CallID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CallsEntity", "IsNewCustomer", "IsNewCustomer", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 1 );
			base.AddElementFieldMapping( "CallsEntity", "CalledCustomerId", "CalledCustomerID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CallsEntity", "TimeCreated", "TimeCreated", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "CallsEntity", "TimeEnd", "TimeEnd", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "CallsEntity", "CallStatus", "CallStatus", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "CallsEntity", "EventId", "EventID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "CallsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "CallsEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "CallsEntity", "CallBackNumber", "CallBackNumber", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "CallsEntity", "IncomingPhoneLine", "IncomingPhoneLine", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "CallsEntity", "CallersPhoneNumber", "CallersPhoneNumber", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 11 );
			base.AddElementFieldMapping( "CallsEntity", "CallerName", "CallerName", true, (int)SqlDbType.NChar, 50, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "CallsEntity", "PromoCodeId", "PromoCodeID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 13 );
			base.AddElementFieldMapping( "CallsEntity", "AffiliateId", "AffiliateID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 14 );
			base.AddElementFieldMapping( "CallsEntity", "OutBound", "OutBound", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 15 );
			base.AddElementFieldMapping( "CallsEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 16 );
			base.AddElementFieldMapping( "CallsEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 17 );
			base.AddElementFieldMapping( "CallsEntity", "Disposition", "Disposition", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 18 );
			base.AddElementFieldMapping( "CallsEntity", "ReadAndUnderstoodNotes", "ReadAndUnderstoodNotes", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 19 );
			base.AddElementFieldMapping( "CallsEntity", "IsUploaded", "IsUploaded", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 20 );
			base.AddElementFieldMapping( "CallsEntity", "CampaignId", "CampaignId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 21 );
			base.AddElementFieldMapping( "CallsEntity", "NotInterestedReasonId", "NotInterestedReasonId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 22 );
			base.AddElementFieldMapping( "CallsEntity", "HealthPlanId", "HealthPlanId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 23 );
			base.AddElementFieldMapping( "CallsEntity", "CallQueueId", "CallQueueId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 24 );
			base.AddElementFieldMapping( "CallsEntity", "CustomTags", "CustomTags", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 25 );
			base.AddElementFieldMapping( "CallsEntity", "IsContacted", "IsContacted", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 26 );
			base.AddElementFieldMapping( "CallsEntity", "DialerType", "DialerType", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 27 );
			base.AddElementFieldMapping( "CallsEntity", "InvalidNumberCount", "InvalidNumberCount", false, (int)SqlDbType.TinyInt, 0, 0, 3, false, "", null, typeof(System.Byte), 28 );
			base.AddElementFieldMapping( "CallsEntity", "ProductTypeId", "ProductTypeId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 29 );
		}
		/// <summary>Inits CallUploadEntity's mappings</summary>
		private void InitCallUploadEntityMappings()
		{
			base.AddElementMapping( "CallUploadEntity", "Falcon", @"dbo", "TblCallUpload", 10 );
			base.AddElementFieldMapping( "CallUploadEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CallUploadEntity", "FileId", "FileId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CallUploadEntity", "StatusId", "StatusId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CallUploadEntity", "SuccessfullUploadCount", "SuccessfullUploadCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "CallUploadEntity", "FailedUploadCount", "FailedUploadCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "CallUploadEntity", "UploadTime", "UploadTime", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "CallUploadEntity", "UploadedBy", "UploadedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "CallUploadEntity", "ParseStartTime", "ParseStartTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "CallUploadEntity", "ParseEndTime", "ParseEndTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "CallUploadEntity", "LogFileId", "LogFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
		}
		/// <summary>Inits CallUploadLogEntity's mappings</summary>
		private void InitCallUploadLogEntityMappings()
		{
			base.AddElementMapping( "CallUploadLogEntity", "Falcon", @"dbo", "TblCallUploadLog", 18 );
			base.AddElementFieldMapping( "CallUploadLogEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CallUploadLogEntity", "CallUploadId", "CallUploadId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CallUploadLogEntity", "CustomerId", "CustomerId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CallUploadLogEntity", "OutreachType", "OutreachType", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "CallUploadLogEntity", "OutreachDateTime", "OutreachDateTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "CallUploadLogEntity", "Outcome", "Outcome", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "CallUploadLogEntity", "Disposition", "Disposition", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "CallUploadLogEntity", "EventId", "EventId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "CallUploadLogEntity", "Email", "Email", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "CallUploadLogEntity", "UserName", "UserName", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "CallUploadLogEntity", "Notes", "Notes", true, (int)SqlDbType.VarChar, 4000, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "CallUploadLogEntity", "IsSuccessFull", "IsSuccessFull", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 11 );
			base.AddElementFieldMapping( "CallUploadLogEntity", "ErrorMessage", "ErrorMessage", true, (int)SqlDbType.VarChar, 4000, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "CallUploadLogEntity", "IsRuleApplied", "IsRuleApplied", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 13 );
			base.AddElementFieldMapping( "CallUploadLogEntity", "Reason", "Reason", true, (int)SqlDbType.NVarChar, 512, 0, 0, false, "", null, typeof(System.String), 14 );
			base.AddElementFieldMapping( "CallUploadLogEntity", "CampaignName", "CampaignName", true, (int)SqlDbType.NVarChar, 512, 0, 0, false, "", null, typeof(System.String), 15 );
			base.AddElementFieldMapping( "CallUploadLogEntity", "DirectMailType", "DirectMailType", true, (int)SqlDbType.NVarChar, 512, 0, 0, false, "", null, typeof(System.String), 16 );
			base.AddElementFieldMapping( "CallUploadLogEntity", "IsInvalidAddress", "IsInvalidAddress", true, (int)SqlDbType.VarChar, 10, 0, 0, false, "", null, typeof(System.String), 17 );
		}
		/// <summary>Inits CampaignEntity's mappings</summary>
		private void InitCampaignEntityMappings()
		{
			base.AddElementMapping( "CampaignEntity", "Falcon", @"dbo", "TblCampaign", 15 );
			base.AddElementFieldMapping( "CampaignEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CampaignEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "CampaignEntity", "CampaignCode", "CampaignCode", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CampaignEntity", "StartDate", "StartDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "CampaignEntity", "EndDate", "EndDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "CampaignEntity", "TypeId", "TypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "CampaignEntity", "ModeId", "ModeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "CampaignEntity", "AccountId", "AccountId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "CampaignEntity", "CustomTags", "CustomTags", true, (int)SqlDbType.NVarChar, 4000, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "CampaignEntity", "Description", "Description", true, (int)SqlDbType.NVarChar, 4000, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "CampaignEntity", "IsPublished", "IsPublished", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 10 );
			base.AddElementFieldMapping( "CampaignEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "CampaignEntity", "Createdby", "Createdby", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "CampaignEntity", "ModifiedOn", "ModifiedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 13 );
			base.AddElementFieldMapping( "CampaignEntity", "Modifiedby", "Modifiedby", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 14 );
		}
		/// <summary>Inits CampaignActivityEntity's mappings</summary>
		private void InitCampaignActivityEntityMappings()
		{
			base.AddElementMapping( "CampaignActivityEntity", "Falcon", @"dbo", "TblCampaignActivity", 10 );
			base.AddElementFieldMapping( "CampaignActivityEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CampaignActivityEntity", "CampaignId", "CampaignId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CampaignActivityEntity", "ActivityDate", "ActivityDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "CampaignActivityEntity", "TypeId", "TypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "CampaignActivityEntity", "Sequence", "Sequence", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 4 );
			base.AddElementFieldMapping( "CampaignActivityEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "CampaignActivityEntity", "Createdby", "Createdby", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "CampaignActivityEntity", "ModifiedOn", "ModifiedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "CampaignActivityEntity", "Modifiedby", "Modifiedby", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "CampaignActivityEntity", "DirectMailTypeId", "DirectMailTypeId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
		}
		/// <summary>Inits CampaignActivityAssignmentEntity's mappings</summary>
		private void InitCampaignActivityAssignmentEntityMappings()
		{
			base.AddElementMapping( "CampaignActivityAssignmentEntity", "Falcon", @"dbo", "TblCampaignActivityAssignment", 2 );
			base.AddElementFieldMapping( "CampaignActivityAssignmentEntity", "CampaignActivityId", "CampaignActivityId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CampaignActivityAssignmentEntity", "AssignedToOrgRoleUserId", "AssignedToOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits CampaignAssignmentEntity's mappings</summary>
		private void InitCampaignAssignmentEntityMappings()
		{
			base.AddElementMapping( "CampaignAssignmentEntity", "Falcon", @"dbo", "TblCampaignAssignment", 2 );
			base.AddElementFieldMapping( "CampaignAssignmentEntity", "CampaignId", "CampaignId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CampaignAssignmentEntity", "AssignedToOrgRoleUserId", "AssignedToOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits CampaignTagEntity's mappings</summary>
		private void InitCampaignTagEntityMappings()
		{
			base.AddElementMapping( "CampaignTagEntity", "Falcon", @"dbo", "tblCampaignTag", 6 );
			base.AddElementFieldMapping( "CampaignTagEntity", "CampaignTagId", "CampaignTagID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CampaignTagEntity", "Namespace", "Namespace", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "CampaignTagEntity", "Tag", "Tag", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CampaignTagEntity", "CreatedDate", "CreatedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "CampaignTagEntity", "ModifiedDate", "ModifiedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "CampaignTagEntity", "IsActive", "IsActive", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits CampaignTagMappingEntity's mappings</summary>
		private void InitCampaignTagMappingEntityMappings()
		{
			base.AddElementMapping( "CampaignTagMappingEntity", "Falcon", @"dbo", "tblCampaignTagMapping", 3 );
			base.AddElementFieldMapping( "CampaignTagMappingEntity", "CampaignTagId", "CampaignTagID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CampaignTagMappingEntity", "CampaignId", "CampaignID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CampaignTagMappingEntity", "CampaignTagMappingId", "CampaignTagMappingID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 2 );
		}
		/// <summary>Inits CareCodingOutboundEntity's mappings</summary>
		private void InitCareCodingOutboundEntityMappings()
		{
			base.AddElementMapping( "CareCodingOutboundEntity", "Falcon", @"dbo", "TblCareCodingOutbound", 18 );
			base.AddElementFieldMapping( "CareCodingOutboundEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CareCodingOutboundEntity", "TenantId", "TenantId", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "CareCodingOutboundEntity", "CampaignId", "CampaignId", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CareCodingOutboundEntity", "IndividualId", "IndividualId", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "CareCodingOutboundEntity", "ClientId", "ClientId", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "CareCodingOutboundEntity", "ContractNumber", "ContractNumber", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "CareCodingOutboundEntity", "ContractPersonNumber", "ContractPersonNumber", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "CareCodingOutboundEntity", "ConsumerId", "ConsumerId", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "CareCodingOutboundEntity", "CampaignCode", "CampaignCode", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "CareCodingOutboundEntity", "CampaignMemberId", "CampaignMemberId", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "CareCodingOutboundEntity", "CareCodeLabType", "CareCodeLabType", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "CareCodingOutboundEntity", "CareCodeLabDescription", "CareCodeLabDescription", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 11 );
			base.AddElementFieldMapping( "CareCodingOutboundEntity", "StatusOfCoding", "StatusOfCoding", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "CareCodingOutboundEntity", "MedicalCode", "MedicalCode", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "CareCodingOutboundEntity", "MedicalCodeType", "MedicalCodeType", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 14 );
			base.AddElementFieldMapping( "CareCodingOutboundEntity", "MedicalCodeServiceDate", "MedicalCodeServiceDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 15 );
			base.AddElementFieldMapping( "CareCodingOutboundEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 16 );
			base.AddElementFieldMapping( "CareCodingOutboundEntity", "DateUpdated", "DateUpdated", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 17 );
		}
		/// <summary>Inits CarrierEntity's mappings</summary>
		private void InitCarrierEntityMappings()
		{
			base.AddElementMapping( "CarrierEntity", "Falcon", @"dbo", "TblCarrier", 2 );
			base.AddElementFieldMapping( "CarrierEntity", "CarrierId", "CarrierID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CarrierEntity", "Carrier", "Carrier", false, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 1 );
		}
		/// <summary>Inits CashPaymentEntity's mappings</summary>
		private void InitCashPaymentEntityMappings()
		{
			base.AddElementMapping( "CashPaymentEntity", "Falcon", @"dbo", "TblCashPayment", 3 );
			base.AddElementFieldMapping( "CashPaymentEntity", "CashPaymentId", "CashPaymentID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CashPaymentEntity", "PaymentId", "PaymentID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CashPaymentEntity", "Amount", "Amount", false, (int)SqlDbType.Money, 0, 4, 19, false, "", null, typeof(System.Decimal), 2 );
		}
		/// <summary>Inits CategoriesEntity's mappings</summary>
		private void InitCategoriesEntityMappings()
		{
			base.AddElementMapping( "CategoriesEntity", "Falcon", @"dbo", "tblCategories", 5 );
			base.AddElementFieldMapping( "CategoriesEntity", "CategoryId", "CategoryId", false, (int)SqlDbType.Int, 0, 0, 10, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0 );
			base.AddElementFieldMapping( "CategoriesEntity", "CategoryName", "CategoryName", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "CategoriesEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
			base.AddElementFieldMapping( "CategoriesEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "CategoriesEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
		}
		/// <summary>Inits CdcontentGeneratorTrackingEntity's mappings</summary>
		private void InitCdcontentGeneratorTrackingEntityMappings()
		{
			base.AddElementMapping( "CdcontentGeneratorTrackingEntity", "Falcon", @"dbo", "TblCDContentGeneratorTracking", 7 );
			base.AddElementFieldMapping( "CdcontentGeneratorTrackingEntity", "CdcontentGeneratorTrackingId", "CDContentGeneratorTrackingId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CdcontentGeneratorTrackingEntity", "EventCustomerResultId", "EventCustomerResultId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CdcontentGeneratorTrackingEntity", "IsContentGenerated", "IsContentGenerated", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
			base.AddElementFieldMapping( "CdcontentGeneratorTrackingEntity", "IsContentDownloaded", "IsContentDownloaded", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "CdcontentGeneratorTrackingEntity", "DownloadedByOrgRoleUserId", "DownloadedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "CdcontentGeneratorTrackingEntity", "DownloadedDate", "DownloadedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "CdcontentGeneratorTrackingEntity", "ContentGeneratedDate", "ContentGeneratedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
		}
		/// <summary>Inits ChaperoneAnswerEntity's mappings</summary>
		private void InitChaperoneAnswerEntityMappings()
		{
			base.AddElementMapping( "ChaperoneAnswerEntity", "Falcon", @"dbo", "TblChaperoneAnswer", 9 );
			base.AddElementFieldMapping( "ChaperoneAnswerEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ChaperoneAnswerEntity", "QuestionId", "QuestionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ChaperoneAnswerEntity", "Answer", "Answer", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ChaperoneAnswerEntity", "Version", "Version", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 3 );
			base.AddElementFieldMapping( "ChaperoneAnswerEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "ChaperoneAnswerEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "ChaperoneAnswerEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "ChaperoneAnswerEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "ChaperoneAnswerEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
		}
		/// <summary>Inits ChaperoneQuestionEntity's mappings</summary>
		private void InitChaperoneQuestionEntityMappings()
		{
			base.AddElementMapping( "ChaperoneQuestionEntity", "Falcon", @"dbo", "TblChaperoneQuestion", 8 );
			base.AddElementFieldMapping( "ChaperoneQuestionEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ChaperoneQuestionEntity", "Question", "Question", false, (int)SqlDbType.VarChar, 4000, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ChaperoneQuestionEntity", "TypeId", "TypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "ChaperoneQuestionEntity", "Gender", "Gender", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "ChaperoneQuestionEntity", "ParentId", "ParentId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "ChaperoneQuestionEntity", "ControlValues", "ControlValues", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "ChaperoneQuestionEntity", "ControlValueDelimiter", "ControlValueDelimiter", true, (int)SqlDbType.VarChar, 5, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "ChaperoneQuestionEntity", "Index", "Index", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
		}
		/// <summary>Inits ChaperoneSignatureEntity's mappings</summary>
		private void InitChaperoneSignatureEntityMappings()
		{
			base.AddElementMapping( "ChaperoneSignatureEntity", "Falcon", @"dbo", "TblChaperoneSignature", 7 );
			base.AddElementFieldMapping( "ChaperoneSignatureEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ChaperoneSignatureEntity", "SignatureFileId", "SignatureFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ChaperoneSignatureEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "ChaperoneSignatureEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "ChaperoneSignatureEntity", "Version", "Version", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 4 );
			base.AddElementFieldMapping( "ChaperoneSignatureEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "ChaperoneSignatureEntity", "StaffSignatureFileId", "StaffSignatureFileId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
		}
		/// <summary>Inits ChargeCardEntity's mappings</summary>
		private void InitChargeCardEntityMappings()
		{
			base.AddElementMapping( "ChargeCardEntity", "Falcon", @"dbo", "TblChargeCard", 10 );
			base.AddElementFieldMapping( "ChargeCardEntity", "ChargeCardId", "ChargeCardID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ChargeCardEntity", "NameOnCard", "NameOnCard", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ChargeCardEntity", "Number", "Number", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ChargeCardEntity", "TypeId", "TypeID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "ChargeCardEntity", "ExpirationDate", "ExpirationDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "ChargeCardEntity", "Cvv", "CVV", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "ChargeCardEntity", "CardIssuer", "CardIssuer", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "ChargeCardEntity", "IsDebitCard", "IsDebitCard", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "ChargeCardEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "ChargeCardEntity", "OrganizationRoleUserCreatorId", "OrganizationRoleUserCreatorID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
		}
		/// <summary>Inits ChargeCardPaymentEntity's mappings</summary>
		private void InitChargeCardPaymentEntityMappings()
		{
			base.AddElementMapping( "ChargeCardPaymentEntity", "Falcon", @"dbo", "TblChargeCardPayment", 8 );
			base.AddElementFieldMapping( "ChargeCardPaymentEntity", "ChargeCardPaymentId", "ChargeCardPaymentID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ChargeCardPaymentEntity", "PaymentId", "PaymentID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ChargeCardPaymentEntity", "ChargeCardId", "ChargeCardID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "ChargeCardPaymentEntity", "Amount", "Amount", false, (int)SqlDbType.Money, 0, 4, 19, false, "", null, typeof(System.Decimal), 3 );
			base.AddElementFieldMapping( "ChargeCardPaymentEntity", "ProcessorResponse", "ProcessorResponse", true, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "ChargeCardPaymentEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "ChargeCardPaymentEntity", "OrganizationRoleUserCreatorId", "OrganizationRoleUserCreatorID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "ChargeCardPaymentEntity", "Status", "Status", false, (int)SqlDbType.TinyInt, 0, 0, 3, false, "", null, typeof(System.Byte), 7 );
		}
		/// <summary>Inits ChaseCampaignEntity's mappings</summary>
		private void InitChaseCampaignEntityMappings()
		{
			base.AddElementMapping( "ChaseCampaignEntity", "Falcon", @"dbo", "TblChaseCampaign", 8 );
			base.AddElementFieldMapping( "ChaseCampaignEntity", "ChaseCampaignId", "ChaseCampaignId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ChaseCampaignEntity", "CampaignId", "CampaignId", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ChaseCampaignEntity", "CampaignFileId", "CampaignFileId", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ChaseCampaignEntity", "CampaignName", "CampaignName", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "ChaseCampaignEntity", "CampaignCode", "CampaignCode", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "ChaseCampaignEntity", "CampaignHouseholdId", "CampaignHouseholdId", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "ChaseCampaignEntity", "ChaseCampaignTypeId", "ChaseCampaignTypeId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "ChaseCampaignEntity", "KeyCode", "KeyCode", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 7 );
		}
		/// <summary>Inits ChaseCampaignTypeEntity's mappings</summary>
		private void InitChaseCampaignTypeEntityMappings()
		{
			base.AddElementMapping( "ChaseCampaignTypeEntity", "Falcon", @"dbo", "TblChaseCampaignType", 3 );
			base.AddElementFieldMapping( "ChaseCampaignTypeEntity", "ChaseCampaignTypeId", "ChaseCampaignTypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ChaseCampaignTypeEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ChaseCampaignTypeEntity", "Alias", "Alias", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
		}
		/// <summary>Inits ChaseChannelLevelEntity's mappings</summary>
		private void InitChaseChannelLevelEntityMappings()
		{
			base.AddElementMapping( "ChaseChannelLevelEntity", "Falcon", @"dbo", "TblChaseChannelLevel", 3 );
			base.AddElementFieldMapping( "ChaseChannelLevelEntity", "ChaseChannelLevelId", "ChaseChannelLevelId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ChaseChannelLevelEntity", "ChannelName", "ChannelName", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ChaseChannelLevelEntity", "ChannelLevel", "ChannelLevel", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
		}
		/// <summary>Inits ChaseGroupEntity's mappings</summary>
		private void InitChaseGroupEntityMappings()
		{
			base.AddElementMapping( "ChaseGroupEntity", "Falcon", @"dbo", "TblChaseGroup", 4 );
			base.AddElementFieldMapping( "ChaseGroupEntity", "ChaseGroupId", "ChaseGroupId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ChaseGroupEntity", "Name", "Name", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ChaseGroupEntity", "Number", "Number", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ChaseGroupEntity", "Division", "Division", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 3 );
		}
		/// <summary>Inits ChaseOutboundEntity's mappings</summary>
		private void InitChaseOutboundEntityMappings()
		{
			base.AddElementMapping( "ChaseOutboundEntity", "Falcon", @"dbo", "TblChaseOutbound", 31 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "TenantId", "TenantId", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "IndividualId", "IndividualId", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "ClientId", "ClientId", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "VendorCd", "VendorCD", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "ContractNumber", "ContractNumber", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "ContractPersonNumber", "ContractPersonNumber", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "ConsumerId", "ConsumerId", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "CampaignMemberId", "CampaignMemberId", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "DistributionId", "DistributionId", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "SubscriberIndicator", "SubscriberIndicator", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 11 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "RelationshipId", "RelationshipId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "IdentifiedIndicator", "IdentifiedIndicator", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 13 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "OutboundCallIndicator", "OutboundCallIndicator", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 14 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "WirelessIndicator", "WirelessIndicator", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 15 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "PriorityCode", "PriorityCode", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 16 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "BusinessCaseId", "BusinessCaseId", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 17 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "MedicareIndicator", "MedicareIndicator", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 18 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "ChaseGroupId", "ChaseGroupId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 19 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "HmoLobIndicator", "HmoLobIndicator", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 20 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "ReferMemberTo", "ReferMemberTo", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 21 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "ClosestRetailCenter", "ClosestRetailCenter", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 22 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "ConfidenceScoreId", "ConfidenceScoreId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 23 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "LocationCode", "LocationCode", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 24 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "ForecastedOutreachDate", "ForecastedOutreachDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 25 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "RecordProcessDate", "RecordProcessDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 26 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "AgentContextNameValueSet", "AgentContextNameValueSet", true, (int)SqlDbType.NVarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 27 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 28 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "EndDate", "EndDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 29 );
			base.AddElementFieldMapping( "ChaseOutboundEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 30 );
		}
		/// <summary>Inits ChaseProductEntity's mappings</summary>
		private void InitChaseProductEntityMappings()
		{
			base.AddElementMapping( "ChaseProductEntity", "Falcon", @"dbo", "TblChaseProduct", 3 );
			base.AddElementFieldMapping( "ChaseProductEntity", "ChaseProductId", "ChaseProductId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ChaseProductEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ChaseProductEntity", "ProductLevel", "ProductLevel", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
		}
		/// <summary>Inits CheckEntity's mappings</summary>
		private void InitCheckEntityMappings()
		{
			base.AddElementMapping( "CheckEntity", "Falcon", @"dbo", "TblCheck", 15 );
			base.AddElementFieldMapping( "CheckEntity", "CheckId", "CheckID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CheckEntity", "PayableTo", "PayableTo", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "CheckEntity", "Amount", "Amount", false, (int)SqlDbType.Money, 0, 4, 19, false, "", null, typeof(System.Decimal), 2 );
			base.AddElementFieldMapping( "CheckEntity", "CheckNumber", "CheckNumber", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "CheckEntity", "RoutingNumber", "RoutingNumber", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "CheckEntity", "BankName", "BankName", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "CheckEntity", "Memo", "Memo", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "CheckEntity", "AccountNumber", "AccountNumber", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "CheckEntity", "CheckDate", "CheckDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "CheckEntity", "DataRecoderCreatorId", "DataRecoderCreatorID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "CheckEntity", "DataRecoderModifierId", "DataRecoderModifierID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
			base.AddElementFieldMapping( "CheckEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "CheckEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 12 );
			base.AddElementFieldMapping( "CheckEntity", "IsElectronic", "IsElectronic", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 13 );
			base.AddElementFieldMapping( "CheckEntity", "AccountHolderName", "AccountHolderName", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 14 );
		}
		/// <summary>Inits CheckListAnswerEntity's mappings</summary>
		private void InitCheckListAnswerEntityMappings()
		{
			base.AddElementMapping( "CheckListAnswerEntity", "Falcon", @"dbo", "TblCheckListAnswer", 10 );
			base.AddElementFieldMapping( "CheckListAnswerEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CheckListAnswerEntity", "QuestionId", "QuestionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CheckListAnswerEntity", "Answer", "Answer", false, (int)SqlDbType.NVarChar, 50, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CheckListAnswerEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "CheckListAnswerEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "CheckListAnswerEntity", "Version", "Version", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 5 );
			base.AddElementFieldMapping( "CheckListAnswerEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "CheckListAnswerEntity", "ModifiedOn", "ModifiedOn", true, (int)SqlDbType.Date, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "CheckListAnswerEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "CheckListAnswerEntity", "Type", "Type", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
		}
		/// <summary>Inits CheckListGroupEntity's mappings</summary>
		private void InitCheckListGroupEntityMappings()
		{
			base.AddElementMapping( "CheckListGroupEntity", "Falcon", @"dbo", "TblCheckListGroup", 7 );
			base.AddElementFieldMapping( "CheckListGroupEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CheckListGroupEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "CheckListGroupEntity", "Description", "Description", false, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CheckListGroupEntity", "TypeId", "TypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "CheckListGroupEntity", "ParentId", "ParentId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "CheckListGroupEntity", "Alias", "Alias", false, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "CheckListGroupEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
		}
		/// <summary>Inits ChecklistGroupQuestionEntity's mappings</summary>
		private void InitChecklistGroupQuestionEntityMappings()
		{
			base.AddElementMapping( "ChecklistGroupQuestionEntity", "Falcon", @"dbo", "TblChecklistGroupQuestion", 5 );
			base.AddElementFieldMapping( "ChecklistGroupQuestionEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ChecklistGroupQuestionEntity", "GroupId", "GroupId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ChecklistGroupQuestionEntity", "QuestionId", "QuestionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "ChecklistGroupQuestionEntity", "ParentId", "ParentId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "ChecklistGroupQuestionEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
		}
		/// <summary>Inits CheckListQuestionEntity's mappings</summary>
		private void InitCheckListQuestionEntityMappings()
		{
			base.AddElementMapping( "CheckListQuestionEntity", "Falcon", @"dbo", "TblCheckListQuestion", 7 );
			base.AddElementFieldMapping( "CheckListQuestionEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CheckListQuestionEntity", "Question", "Question", false, (int)SqlDbType.VarChar, 4000, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "CheckListQuestionEntity", "TypeId", "TypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CheckListQuestionEntity", "Gender", "Gender", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "CheckListQuestionEntity", "ControlValues", "ControlValues", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "CheckListQuestionEntity", "ControlValueDelimiter", "ControlValueDelimiter", true, (int)SqlDbType.VarChar, 5, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "CheckListQuestionEntity", "Index", "Index", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 6 );
		}
		/// <summary>Inits CheckListTemplateEntity's mappings</summary>
		private void InitCheckListTemplateEntityMappings()
		{
			base.AddElementMapping( "CheckListTemplateEntity", "Falcon", @"dbo", "TblCheckListTemplate", 11 );
			base.AddElementFieldMapping( "CheckListTemplateEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CheckListTemplateEntity", "Name", "Name", true, (int)SqlDbType.NVarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "CheckListTemplateEntity", "HealthPlanId", "HealthPlanId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CheckListTemplateEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "CheckListTemplateEntity", "IsPublished", "IsPublished", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "CheckListTemplateEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "CheckListTemplateEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "CheckListTemplateEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "CheckListTemplateEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "CheckListTemplateEntity", "IsDefault", "IsDefault", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 9 );
			base.AddElementFieldMapping( "CheckListTemplateEntity", "Type", "Type", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
		}
		/// <summary>Inits CheckListTemplateQuestionEntity's mappings</summary>
		private void InitCheckListTemplateQuestionEntityMappings()
		{
			base.AddElementMapping( "CheckListTemplateQuestionEntity", "Falcon", @"dbo", "TblCheckListTemplateQuestion", 3 );
			base.AddElementFieldMapping( "CheckListTemplateQuestionEntity", "TemplateId", "TemplateId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CheckListTemplateQuestionEntity", "QuestionId", "QuestionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CheckListTemplateQuestionEntity", "GroupQuestionId", "GroupQuestionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
		}
		/// <summary>Inits CheckPaymentEntity's mappings</summary>
		private void InitCheckPaymentEntityMappings()
		{
			base.AddElementMapping( "CheckPaymentEntity", "Falcon", @"dbo", "TblCheckPayment", 3 );
			base.AddElementFieldMapping( "CheckPaymentEntity", "PaymentId", "PaymentID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CheckPaymentEntity", "CheckId", "CheckID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CheckPaymentEntity", "Status", "Status", false, (int)SqlDbType.TinyInt, 0, 0, 3, false, "", null, typeof(System.Byte), 2 );
		}
		/// <summary>Inits CityEntity's mappings</summary>
		private void InitCityEntityMappings()
		{
			base.AddElementMapping( "CityEntity", "Falcon", @"dbo", "TblCity", 8 );
			base.AddElementFieldMapping( "CityEntity", "CityId", "CityID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CityEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "CityEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CityEntity", "StateId", "StateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "CityEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "CityEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "CityEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "CityEntity", "CityCode", "CityCode", true, (int)SqlDbType.VarChar, 2, 0, 0, false, "", null, typeof(System.String), 7 );
		}
		/// <summary>Inits ClaimEntity's mappings</summary>
		private void InitClaimEntityMappings()
		{
			base.AddElementMapping( "ClaimEntity", "Falcon", @"dbo", "TblClaim", 19 );
			base.AddElementFieldMapping( "ClaimEntity", "ClaimId", "ClaimId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ClaimEntity", "EncounterId", "EncounterId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ClaimEntity", "InsurancePaymentId", "InsurancePaymentId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "ClaimEntity", "BillingPatientId", "BillingPatientId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "ClaimEntity", "ProcedureCode", "ProcedureCode", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "ClaimEntity", "ProcedureName", "ProcedureName", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "ClaimEntity", "Units", "Units", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 6 );
			base.AddElementFieldMapping( "ClaimEntity", "UnitCharge", "UnitCharge", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 7 );
			base.AddElementFieldMapping( "ClaimEntity", "TotalCharges", "TotalCharges", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 8 );
			base.AddElementFieldMapping( "ClaimEntity", "AdjustedCharges", "AdjustedCharges", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 9 );
			base.AddElementFieldMapping( "ClaimEntity", "Receipts", "Receipts", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 10 );
			base.AddElementFieldMapping( "ClaimEntity", "PatientBalance", "PatientBalance", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 11 );
			base.AddElementFieldMapping( "ClaimEntity", "InsuranceBalance", "InsuranceBalance", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 12 );
			base.AddElementFieldMapping( "ClaimEntity", "TotalBalance", "TotalBalance", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 13 );
			base.AddElementFieldMapping( "ClaimEntity", "Status", "Status", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 14 );
			base.AddElementFieldMapping( "ClaimEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 15 );
			base.AddElementFieldMapping( "ClaimEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 16 );
			base.AddElementFieldMapping( "ClaimEntity", "FirstBillDate", "FirstBillDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 17 );
			base.AddElementFieldMapping( "ClaimEntity", "LastBillDate", "LastBillDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 18 );
		}
		/// <summary>Inits ClickConversionEntity's mappings</summary>
		private void InitClickConversionEntityMappings()
		{
			base.AddElementMapping( "ClickConversionEntity", "Falcon", @"dbo", "tblClickConversion", 5 );
			base.AddElementFieldMapping( "ClickConversionEntity", "ClickConversionId", "ClickConversionID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ClickConversionEntity", "ClickId", "ClickID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ClickConversionEntity", "ProspectCustomerId", "ProspectCustomerID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "ClickConversionEntity", "EventCustomerId", "EventCustomerID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "ClickConversionEntity", "CustomerId", "CustomerID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
		}
		/// <summary>Inits ClickKeywordEntity's mappings</summary>
		private void InitClickKeywordEntityMappings()
		{
			base.AddElementMapping( "ClickKeywordEntity", "Falcon", @"dbo", "tblClickKeyword", 3 );
			base.AddElementFieldMapping( "ClickKeywordEntity", "KeywordClickId", "KeywordClickID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ClickKeywordEntity", "ClickId", "ClickId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ClickKeywordEntity", "Keyword", "Keyword", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
		}
		/// <summary>Inits ClickLogEntity's mappings</summary>
		private void InitClickLogEntityMappings()
		{
			base.AddElementMapping( "ClickLogEntity", "Falcon", @"dbo", "tblClickLog", 11 );
			base.AddElementFieldMapping( "ClickLogEntity", "ClickId", "ClickID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ClickLogEntity", "CampaignId", "CampaignID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ClickLogEntity", "MarketingMaterialId", "MarketingMaterialID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "ClickLogEntity", "Timestamp", "Timestamp", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "ClickLogEntity", "IpAddress", "IpAddress", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "ClickLogEntity", "PriorReferrer", "PriorReferrer", true, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "ClickLogEntity", "Referrer", "Referrer", true, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "ClickLogEntity", "BrowserClient", "BrowserClient", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "ClickLogEntity", "ResolutionWidth", "ResolutionWidth", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 8 );
			base.AddElementFieldMapping( "ClickLogEntity", "ResolutionHeight", "ResolutionHeight", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 9 );
			base.AddElementFieldMapping( "ClickLogEntity", "Cookie", "Cookie", true, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 10 );
		}
		/// <summary>Inits ClientEntity's mappings</summary>
		private void InitClientEntityMappings()
		{
			base.AddElementMapping( "ClientEntity", "Falcon", @"dbo", "TblClient", 7 );
			base.AddElementFieldMapping( "ClientEntity", "ClientId", "ClientID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ClientEntity", "ClientIp", "ClientIP", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ClientEntity", "ClientAction", "ClientAction", true, (int)SqlDbType.NChar, 20, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ClientEntity", "Attempts", "Attempts", true, (int)SqlDbType.TinyInt, 0, 0, 3, false, "", null, typeof(System.Byte), 3 );
			base.AddElementFieldMapping( "ClientEntity", "CreatedOn", "CreatedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "ClientEntity", "UpdatedOn", "UpdatedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "ClientEntity", "IsActive", "IsActive", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
		}
		/// <summary>Inits ClinicalTestQualificationCriteriaEntity's mappings</summary>
		private void InitClinicalTestQualificationCriteriaEntityMappings()
		{
			base.AddElementMapping( "ClinicalTestQualificationCriteriaEntity", "Falcon", @"dbo", "TblClinicalTestQualificationCriteria", 17 );
			base.AddElementFieldMapping( "ClinicalTestQualificationCriteriaEntity", "TemplateId", "TemplateId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ClinicalTestQualificationCriteriaEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ClinicalTestQualificationCriteriaEntity", "Gender", "Gender", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "ClinicalTestQualificationCriteriaEntity", "NumberOfQuestion", "NumberOfQuestion", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 3 );
			base.AddElementFieldMapping( "ClinicalTestQualificationCriteriaEntity", "Answer", "Answer", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "ClinicalTestQualificationCriteriaEntity", "OnMedication", "OnMedication", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "ClinicalTestQualificationCriteriaEntity", "MedicationQuestionId", "MedicationQuestionId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "ClinicalTestQualificationCriteriaEntity", "AgeMin", "AgeMin", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 7 );
			base.AddElementFieldMapping( "ClinicalTestQualificationCriteriaEntity", "AgeMax", "AgeMax", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 8 );
			base.AddElementFieldMapping( "ClinicalTestQualificationCriteriaEntity", "AgeCondition", "AgeCondition", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "ClinicalTestQualificationCriteriaEntity", "IsPublished", "IsPublished", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 10 );
			base.AddElementFieldMapping( "ClinicalTestQualificationCriteriaEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "ClinicalTestQualificationCriteriaEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "ClinicalTestQualificationCriteriaEntity", "ModifiedOn", "ModifiedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 13 );
			base.AddElementFieldMapping( "ClinicalTestQualificationCriteriaEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 14 );
			base.AddElementFieldMapping( "ClinicalTestQualificationCriteriaEntity", "DisqualifierQuestionId", "DisqualifierQuestionId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 15 );
			base.AddElementFieldMapping( "ClinicalTestQualificationCriteriaEntity", "DisqualifierQuestionAnswer", "DisqualifierQuestionAnswer", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 16 );
		}
		/// <summary>Inits CommunicationModeEntity's mappings</summary>
		private void InitCommunicationModeEntityMappings()
		{
			base.AddElementMapping( "CommunicationModeEntity", "Falcon", @"dbo", "TblCommunicationMode", 6 );
			base.AddElementFieldMapping( "CommunicationModeEntity", "CommunicationModeId", "CommunicationModeID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CommunicationModeEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "CommunicationModeEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CommunicationModeEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "CommunicationModeEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "CommunicationModeEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
		}
		/// <summary>Inits ContactCallEntity's mappings</summary>
		private void InitContactCallEntityMappings()
		{
			base.AddElementMapping( "ContactCallEntity", "Falcon", @"dbo", "tblContactCall", 16 );
			base.AddElementFieldMapping( "ContactCallEntity", "ContactCallId", "ContactCallID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ContactCallEntity", "Subject", "Subject", false, (int)SqlDbType.VarChar, 1500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ContactCallEntity", "Notes", "Notes", true, (int)SqlDbType.VarChar, 5000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ContactCallEntity", "ContactCallStatusId", "ContactCallStatusID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "ContactCallEntity", "IsInbound", "IsInbound", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "ContactCallEntity", "StartDate", "StartDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "ContactCallEntity", "Starttime", "Starttime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "ContactCallEntity", "Duration", "Duration", true, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 7 );
			base.AddElementFieldMapping( "ContactCallEntity", "Reminder", "Reminder", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
			base.AddElementFieldMapping( "ContactCallEntity", "DateCreated", "DateCreated", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "ContactCallEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 10 );
			base.AddElementFieldMapping( "ContactCallEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 11 );
			base.AddElementFieldMapping( "ContactCallEntity", "CallResult", "CallResult", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 12 );
			base.AddElementFieldMapping( "ContactCallEntity", "FutureAction", "FutureAction", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 13 );
			base.AddElementFieldMapping( "ContactCallEntity", "CreatedByRoleId", "AssignedToOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 14 );
			base.AddElementFieldMapping( "ContactCallEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 15 );
		}
		/// <summary>Inits ContactCallStatusEntity's mappings</summary>
		private void InitContactCallStatusEntityMappings()
		{
			base.AddElementMapping( "ContactCallStatusEntity", "Falcon", @"dbo", "tblContactCallStatus", 3 );
			base.AddElementFieldMapping( "ContactCallStatusEntity", "ContactCallStatusId", "ContactCallStatusID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ContactCallStatusEntity", "Status", "Status", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ContactCallStatusEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
		}
		/// <summary>Inits ContactFranchiseeAccessEntity's mappings</summary>
		private void InitContactFranchiseeAccessEntityMappings()
		{
			base.AddElementMapping( "ContactFranchiseeAccessEntity", "Falcon", @"dbo", "TblContactFranchiseeAccess", 8 );
			base.AddElementFieldMapping( "ContactFranchiseeAccessEntity", "ContactAccessId", "ContactAccessID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ContactFranchiseeAccessEntity", "AccessId", "AccessID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ContactFranchiseeAccessEntity", "ContactId", "ContactID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "ContactFranchiseeAccessEntity", "IsSecured", "IsSecured", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "ContactFranchiseeAccessEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "ContactFranchiseeAccessEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "ContactFranchiseeAccessEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "ContactFranchiseeAccessEntity", "OrganizationId", "OrganizationId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
		}
		/// <summary>Inits ContactMeetingEntity's mappings</summary>
		private void InitContactMeetingEntityMappings()
		{
			base.AddElementMapping( "ContactMeetingEntity", "Falcon", @"dbo", "tblContactMeeting", 17 );
			base.AddElementFieldMapping( "ContactMeetingEntity", "ContactMeetingId", "ContactMeetingID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ContactMeetingEntity", "Subject", "Subject", true, (int)SqlDbType.VarChar, 1500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ContactMeetingEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 5000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ContactMeetingEntity", "ContactMeetingStatusId", "ContactMeetingStatusID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "ContactMeetingEntity", "MeetingVenue", "MeetingVenue", true, (int)SqlDbType.VarChar, 5000, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "ContactMeetingEntity", "StartDate", "StartDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "ContactMeetingEntity", "Starttime", "Starttime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "ContactMeetingEntity", "Duration", "Duration", true, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 7 );
			base.AddElementFieldMapping( "ContactMeetingEntity", "Reminder", "Reminder", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
			base.AddElementFieldMapping( "ContactMeetingEntity", "ReminderHoursBefore", "ReminderHoursBefore", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 9 );
			base.AddElementFieldMapping( "ContactMeetingEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 10 );
			base.AddElementFieldMapping( "ContactMeetingEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "ContactMeetingEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 12 );
			base.AddElementFieldMapping( "ContactMeetingEntity", "FollowUpDate", "FollowUpDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 13 );
			base.AddElementFieldMapping( "ContactMeetingEntity", "MeetingType", "MeetingType", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 14 );
			base.AddElementFieldMapping( "ContactMeetingEntity", "CreatedByRoleId", "AssignedToOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 15 );
			base.AddElementFieldMapping( "ContactMeetingEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 16 );
		}
		/// <summary>Inits ContactNotesEntity's mappings</summary>
		private void InitContactNotesEntityMappings()
		{
			base.AddElementMapping( "ContactNotesEntity", "Falcon", @"dbo", "TblContactNotes", 7 );
			base.AddElementFieldMapping( "ContactNotesEntity", "ContactNotesId", "ContactNotesID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ContactNotesEntity", "ContactId", "ContactID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ContactNotesEntity", "Notes", "Notes", true, (int)SqlDbType.VarChar, 5000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ContactNotesEntity", "NotesSequence", "NotesSequence", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "ContactNotesEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "ContactNotesEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "ContactNotesEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
		}
		/// <summary>Inits ContactsEntity's mappings</summary>
		private void InitContactsEntityMappings()
		{
			base.AddElementMapping( "ContactsEntity", "Falcon", @"dbo", "TblContacts", 34 );
			base.AddElementFieldMapping( "ContactsEntity", "ContactId", "ContactID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ContactsEntity", "Salutation", "Salutation", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ContactsEntity", "FirstName", "FirstName", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ContactsEntity", "MiddleName", "MiddleName", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "ContactsEntity", "LastName", "LastName", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "ContactsEntity", "PhoneHome", "PhoneHome", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "ContactsEntity", "PhoneCell", "PhoneCell", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "ContactsEntity", "PhoneOffice", "PhoneOffice", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "ContactsEntity", "PhoneOfficeExtension", "PhoneOfficeExtension", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "ContactsEntity", "Fax", "Fax", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "ContactsEntity", "Email", "EMail", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "ContactsEntity", "Addedby", "Addedby", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 11 );
			base.AddElementFieldMapping( "ContactsEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "ContactsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 13 );
			base.AddElementFieldMapping( "ContactsEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 14 );
			base.AddElementFieldMapping( "ContactsEntity", "IsPrimary", "isPrimary", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 15 );
			base.AddElementFieldMapping( "ContactsEntity", "Title", "Title", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 16 );
			base.AddElementFieldMapping( "ContactsEntity", "Gender", "Gender", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 17 );
			base.AddElementFieldMapping( "ContactsEntity", "Website", "Website", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 18 );
			base.AddElementFieldMapping( "ContactsEntity", "Organisation", "Organisation", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 19 );
			base.AddElementFieldMapping( "ContactsEntity", "Status", "Status", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 20 );
			base.AddElementFieldMapping( "ContactsEntity", "AddedRoleId", "AddedRoleID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 21 );
			base.AddElementFieldMapping( "ContactsEntity", "ModifiedRoleId", "ModifiedRoleID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 22 );
			base.AddElementFieldMapping( "ContactsEntity", "ContactTypeId", "ContactTypeID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 23 );
			base.AddElementFieldMapping( "ContactsEntity", "Address1", "Address1", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 24 );
			base.AddElementFieldMapping( "ContactsEntity", "Address2", "Address2", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 25 );
			base.AddElementFieldMapping( "ContactsEntity", "City", "City", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 26 );
			base.AddElementFieldMapping( "ContactsEntity", "State", "State", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 27 );
			base.AddElementFieldMapping( "ContactsEntity", "Country", "Country", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 28 );
			base.AddElementFieldMapping( "ContactsEntity", "ZipCode", "ZipCode", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 29 );
			base.AddElementFieldMapping( "ContactsEntity", "EmailOffice", "EmailOffice", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 30 );
			base.AddElementFieldMapping( "ContactsEntity", "DateOfBirth", "DateOfBirth", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 31 );
			base.AddElementFieldMapping( "ContactsEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 32 );
			base.AddElementFieldMapping( "ContactsEntity", "EmployeeId", "EmployeeID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 33 );
		}
		/// <summary>Inits ContactTypeEntity's mappings</summary>
		private void InitContactTypeEntityMappings()
		{
			base.AddElementMapping( "ContactTypeEntity", "Falcon", @"dbo", "TblContactType", 6 );
			base.AddElementFieldMapping( "ContactTypeEntity", "ContactTypeId", "ContactTypeID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ContactTypeEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ContactTypeEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 5000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ContactTypeEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "ContactTypeEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "ContactTypeEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits ContentEntity's mappings</summary>
		private void InitContentEntityMappings()
		{
			base.AddElementMapping( "ContentEntity", "Falcon", @"dbo", "TblContent", 9 );
			base.AddElementFieldMapping( "ContentEntity", "ContentId", "ContentId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ContentEntity", "Title", "Title", false, (int)SqlDbType.VarChar, 250, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ContentEntity", "Summary", "Summary", false, (int)SqlDbType.VarChar, 2000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ContentEntity", "Content", "Content", false, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "ContentEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "ContentEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "ContentEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "ContentEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "ContentEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
		}
		/// <summary>Inits ContractEntity's mappings</summary>
		private void InitContractEntityMappings()
		{
			base.AddElementMapping( "ContractEntity", "Falcon", @"dbo", "TblContract", 10 );
			base.AddElementFieldMapping( "ContractEntity", "ContractId", "ContractID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ContractEntity", "ContractName", "ContractName", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ContractEntity", "StateId", "StateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "ContractEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 2000, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "ContractEntity", "Contract", "Contract", false, (int)SqlDbType.Text, 2147483647, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "ContractEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "ContractEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "ContractEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "ContractEntity", "StartDate", "StartDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "ContractEntity", "EndDate", "EndDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
		}
		/// <summary>Inits CorporateShippingOptionEntity's mappings</summary>
		private void InitCorporateShippingOptionEntityMappings()
		{
			base.AddElementMapping( "CorporateShippingOptionEntity", "Falcon", @"dbo", "TblCorporateShippingOption", 2 );
			base.AddElementFieldMapping( "CorporateShippingOptionEntity", "AccountId", "AccountId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CorporateShippingOptionEntity", "ShippingOptionId", "ShippingOptionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits CorporateTagEntity's mappings</summary>
		private void InitCorporateTagEntityMappings()
		{
			base.AddElementMapping( "CorporateTagEntity", "Falcon", @"dbo", "TblCorporateTag", 11 );
			base.AddElementFieldMapping( "CorporateTagEntity", "CorporateTagId", "CorporateTagId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CorporateTagEntity", "CorporateId", "CorporateId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CorporateTagEntity", "Tag", "Tag", true, (int)SqlDbType.NVarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CorporateTagEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "CorporateTagEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "CorporateTagEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "CorporateTagEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "CorporateTagEntity", "ModifiedOn", "ModifiedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "CorporateTagEntity", "IsDisabled", "IsDisabled", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
			base.AddElementFieldMapping( "CorporateTagEntity", "StartDate", "StartDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "CorporateTagEntity", "EndDate", "EndDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 10 );
		}
		/// <summary>Inits CorporateUploadEntity's mappings</summary>
		private void InitCorporateUploadEntityMappings()
		{
			base.AddElementMapping( "CorporateUploadEntity", "Falcon", @"dbo", "TblCorporateUpload", 12 );
			base.AddElementFieldMapping( "CorporateUploadEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CorporateUploadEntity", "FileId", "FileId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CorporateUploadEntity", "SuccessfullUploadCount", "SuccessfullUploadCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CorporateUploadEntity", "FailedUploadCount", "FailedUploadCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "CorporateUploadEntity", "UploadTime", "UploadTime", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "CorporateUploadEntity", "UploadedBy", "UploadedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "CorporateUploadEntity", "LogFileId", "LogFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "CorporateUploadEntity", "AccountId", "AccountId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "CorporateUploadEntity", "AdjustOrderLogFileId", "AdjustOrderLogFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "CorporateUploadEntity", "SourceId", "SourceId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "CorporateUploadEntity", "ParseStatus", "ParseStatus", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 10 );
			base.AddElementFieldMapping( "CorporateUploadEntity", "IsTermByAbsence", "IsTermByAbsence", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 11 );
		}
		/// <summary>Inits CountryEntity's mappings</summary>
		private void InitCountryEntityMappings()
		{
			base.AddElementMapping( "CountryEntity", "Falcon", @"dbo", "TblCountry", 7 );
			base.AddElementFieldMapping( "CountryEntity", "CountryId", "CountryID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CountryEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "CountryEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CountryEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "CountryEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "CountryEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "CountryEntity", "CountryCode", "CountryCode", false, (int)SqlDbType.VarChar, 2, 0, 0, false, "", null, typeof(System.String), 6 );
		}
		/// <summary>Inits CouponsEntity's mappings</summary>
		private void InitCouponsEntityMappings()
		{
			base.AddElementMapping( "CouponsEntity", "Falcon", @"dbo", "TblCoupons", 16 );
			base.AddElementFieldMapping( "CouponsEntity", "CouponId", "CouponID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CouponsEntity", "CouponTypeId", "CouponTypeID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CouponsEntity", "IsPercentage", "IsPercentage", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
			base.AddElementFieldMapping( "CouponsEntity", "CouponValue", "CouponValue", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 3 );
			base.AddElementFieldMapping( "CouponsEntity", "CouponDescription", "CouponDescription", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "CouponsEntity", "MinimumPurchaseAmount", "MinimumPurchaseAmount", true, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 5 );
			base.AddElementFieldMapping( "CouponsEntity", "ValidityStartDate", "ValidityStartDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "CouponsEntity", "ValidityEndDate", "ValidityEndDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "CouponsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "CouponsEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "CouponsEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 10 );
			base.AddElementFieldMapping( "CouponsEntity", "MaximumNumberTimesUsed", "MaximumNumberTimesUsed", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 11 );
			base.AddElementFieldMapping( "CouponsEntity", "CouponCode", "CouponCode", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "CouponsEntity", "CustomerRange", "CustomerRange", true, (int)SqlDbType.TinyInt, 0, 0, 3, false, "", null, typeof(System.Byte), 13 );
			base.AddElementFieldMapping( "CouponsEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 14 );
			base.AddElementFieldMapping( "CouponsEntity", "ModifiedByOrgRoleUserId", "ModifiedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 15 );
		}
		/// <summary>Inits CouponSignUpModeEntity's mappings</summary>
		private void InitCouponSignUpModeEntityMappings()
		{
			base.AddElementMapping( "CouponSignUpModeEntity", "Falcon", @"dbo", "TblCouponSignUpMode", 2 );
			base.AddElementFieldMapping( "CouponSignUpModeEntity", "CouponId", "CouponID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CouponSignUpModeEntity", "SignUpMode", "SignUpMode", false, (int)SqlDbType.TinyInt, 0, 0, 3, false, "", null, typeof(System.Byte), 1 );
		}
		/// <summary>Inits CouponTypeEntity's mappings</summary>
		private void InitCouponTypeEntityMappings()
		{
			base.AddElementMapping( "CouponTypeEntity", "Falcon", @"dbo", "TblCouponType", 7 );
			base.AddElementFieldMapping( "CouponTypeEntity", "CouponTypeId", "CouponTypeID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CouponTypeEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "CouponTypeEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 5000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CouponTypeEntity", "IsEventCoupon", "IsEventCoupon", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "CouponTypeEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "CouponTypeEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "CouponTypeEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
		}
		/// <summary>Inits CreditCardTypeEntity's mappings</summary>
		private void InitCreditCardTypeEntityMappings()
		{
			base.AddElementMapping( "CreditCardTypeEntity", "Falcon", @"dbo", "TblCreditCardType", 6 );
			base.AddElementFieldMapping( "CreditCardTypeEntity", "CreditCardTypeId", "CreditCardTypeID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CreditCardTypeEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "CreditCardTypeEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CreditCardTypeEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "CreditCardTypeEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "CreditCardTypeEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
		}
		/// <summary>Inits CriteriaEntity's mappings</summary>
		private void InitCriteriaEntityMappings()
		{
			base.AddElementMapping( "CriteriaEntity", "Falcon", @"dbo", "TblCriteria", 3 );
			base.AddElementFieldMapping( "CriteriaEntity", "CriteriaId", "CriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CriteriaEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 2000, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "CriteriaEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
		}
		/// <summary>Inits CriticalCustomerCommunicationRecordEntity's mappings</summary>
		private void InitCriticalCustomerCommunicationRecordEntityMappings()
		{
			base.AddElementMapping( "CriticalCustomerCommunicationRecordEntity", "Falcon", @"dbo", "TblCriticalCustomerCommunicationRecord", 2 );
			base.AddElementFieldMapping( "CriticalCustomerCommunicationRecordEntity", "NoteId", "NoteId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CriticalCustomerCommunicationRecordEntity", "EventCustomerResultId", "EventCustomerResultId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits CriticalQuestionEntity's mappings</summary>
		private void InitCriticalQuestionEntityMappings()
		{
			base.AddElementMapping( "CriticalQuestionEntity", "Falcon", @"dbo", "TblCriticalQuestion", 6 );
			base.AddElementFieldMapping( "CriticalQuestionEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CriticalQuestionEntity", "Question", "Question", false, (int)SqlDbType.NVarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "CriticalQuestionEntity", "ControlType", "ControlType", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CriticalQuestionEntity", "ControlValues", "ControlValues", true, (int)SqlDbType.VarChar, 5000, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "CriticalQuestionEntity", "ControlValueDelimiter", "ControlValueDelimiter", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "CriticalQuestionEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits CurrentMedicationEntity's mappings</summary>
		private void InitCurrentMedicationEntityMappings()
		{
			base.AddElementMapping( "CurrentMedicationEntity", "Falcon", @"dbo", "TblCurrentMedication", 9 );
			base.AddElementFieldMapping( "CurrentMedicationEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CurrentMedicationEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CurrentMedicationEntity", "NdcId", "NdcId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CurrentMedicationEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "CurrentMedicationEntity", "DateEnd", "DateEnd", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "CurrentMedicationEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "CurrentMedicationEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "CurrentMedicationEntity", "IsPrescribed", "IsPrescribed", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "CurrentMedicationEntity", "IsOtc", "IsOtc", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
		}
		/// <summary>Inits CustomCampaignContentEntity's mappings</summary>
		private void InitCustomCampaignContentEntityMappings()
		{
			base.AddElementMapping( "CustomCampaignContentEntity", "Falcon", @"dbo", "TblCustomCampaignContent", 6 );
			base.AddElementFieldMapping( "CustomCampaignContentEntity", "CustomCampaignContentId", "CustomCampaignContentId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomCampaignContentEntity", "CampaignId", "CampaignId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomCampaignContentEntity", "MarketingMaterialId", "MarketingMaterialId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CustomCampaignContentEntity", "Position", "Position", false, (int)SqlDbType.TinyInt, 0, 0, 3, false, "", null, typeof(System.Byte), 3 );
			base.AddElementFieldMapping( "CustomCampaignContentEntity", "Step", "Step", false, (int)SqlDbType.TinyInt, 0, 0, 3, false, "", null, typeof(System.Byte), 4 );
			base.AddElementFieldMapping( "CustomCampaignContentEntity", "Tag", "Tag", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 5 );
		}
		/// <summary>Inits CustomerAccountGlocomNumberEntity's mappings</summary>
		private void InitCustomerAccountGlocomNumberEntityMappings()
		{
			base.AddElementMapping( "CustomerAccountGlocomNumberEntity", "Falcon", @"dbo", "TblCustomerAccountGlocomNumber", 6 );
			base.AddElementFieldMapping( "CustomerAccountGlocomNumberEntity", "Id", "ID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerAccountGlocomNumberEntity", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerAccountGlocomNumberEntity", "CallId", "CallID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CustomerAccountGlocomNumberEntity", "GlocomNumber", "GlocomNumber", false, (int)SqlDbType.NVarChar, 50, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "CustomerAccountGlocomNumberEntity", "CreatedDate", "CreatedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "CustomerAccountGlocomNumberEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits CustomerActivityTypeUploadEntity's mappings</summary>
		private void InitCustomerActivityTypeUploadEntityMappings()
		{
			base.AddElementMapping( "CustomerActivityTypeUploadEntity", "Falcon", @"dbo", "TblCustomerActivityTypeUpload", 10 );
			base.AddElementFieldMapping( "CustomerActivityTypeUploadEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerActivityTypeUploadEntity", "FileId", "FileId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerActivityTypeUploadEntity", "SuccessfullUploadCount", "SuccessfullUploadCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CustomerActivityTypeUploadEntity", "FailedUploadCount", "FailedUploadCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "CustomerActivityTypeUploadEntity", "UploadTime", "UploadTime", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "CustomerActivityTypeUploadEntity", "UploadedBy", "UploadedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "CustomerActivityTypeUploadEntity", "LogFileId", "LogFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "CustomerActivityTypeUploadEntity", "StatusId", "StatusId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "CustomerActivityTypeUploadEntity", "ParseStartTime", "ParseStartTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "CustomerActivityTypeUploadEntity", "ParseEndTime", "ParseEndTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
		}
		/// <summary>Inits CustomerBillingAccountEntity's mappings</summary>
		private void InitCustomerBillingAccountEntityMappings()
		{
			base.AddElementMapping( "CustomerBillingAccountEntity", "Falcon", @"dbo", "TblCustomerBillingAccount", 4 );
			base.AddElementFieldMapping( "CustomerBillingAccountEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerBillingAccountEntity", "BillingAccountId", "BillingAccountId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerBillingAccountEntity", "BillingPatientId", "BillingPatientId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CustomerBillingAccountEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
		}
		/// <summary>Inits CustomerCallAttemptsEntity's mappings</summary>
		private void InitCustomerCallAttemptsEntityMappings()
		{
			base.AddElementMapping( "CustomerCallAttemptsEntity", "Falcon", @"dbo", "TblCustomerCallAttempts", 4 );
			base.AddElementFieldMapping( "CustomerCallAttemptsEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerCallAttemptsEntity", "Attempt", "Attempt", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerCallAttemptsEntity", "UpdatedOn", "UpdatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "CustomerCallAttemptsEntity", "UpdatedBy", "UpdatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
		}
		/// <summary>Inits CustomerCallQueueCallAttemptEntity's mappings</summary>
		private void InitCustomerCallQueueCallAttemptEntityMappings()
		{
			base.AddElementMapping( "CustomerCallQueueCallAttemptEntity", "Falcon", @"dbo", "TblCustomerCallQueueCallAttempt", 10 );
			base.AddElementFieldMapping( "CustomerCallQueueCallAttemptEntity", "CallAttemptId", "CallAttemptID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerCallQueueCallAttemptEntity", "CallId", "CallID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerCallQueueCallAttemptEntity", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CustomerCallQueueCallAttemptEntity", "CallQueueCustomerId", "CallQueueCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "CustomerCallQueueCallAttemptEntity", "IsCallSkipped", "IsCallSkipped", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "CustomerCallQueueCallAttemptEntity", "IsNotesReadAndUnderstood", "IsNotesReadAndUnderstood", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "CustomerCallQueueCallAttemptEntity", "NotInterestedReasonId", "NotInterestedReasonID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "CustomerCallQueueCallAttemptEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "CustomerCallQueueCallAttemptEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "CustomerCallQueueCallAttemptEntity", "SkipCallNote", "SkipCallNote", true, (int)SqlDbType.VarChar, 5000, 0, 0, false, "", null, typeof(System.String), 9 );
		}
		/// <summary>Inits CustomerChaseCampaignEntity's mappings</summary>
		private void InitCustomerChaseCampaignEntityMappings()
		{
			base.AddElementMapping( "CustomerChaseCampaignEntity", "Falcon", @"dbo", "TblCustomerChaseCampaign", 4 );
			base.AddElementFieldMapping( "CustomerChaseCampaignEntity", "ChaseOutboundId", "ChaseOutboundId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerChaseCampaignEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerChaseCampaignEntity", "ChaseCampaignId", "ChaseCampaignId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CustomerChaseCampaignEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
		}
		/// <summary>Inits CustomerChaseChannelEntity's mappings</summary>
		private void InitCustomerChaseChannelEntityMappings()
		{
			base.AddElementMapping( "CustomerChaseChannelEntity", "Falcon", @"dbo", "TblCustomerChaseChannel", 3 );
			base.AddElementFieldMapping( "CustomerChaseChannelEntity", "ChaseOutboundId", "ChaseOutboundId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerChaseChannelEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerChaseChannelEntity", "ChaseChannelLevelId", "ChaseChannelLevelId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
		}
		/// <summary>Inits CustomerChaseProductEntity's mappings</summary>
		private void InitCustomerChaseProductEntityMappings()
		{
			base.AddElementMapping( "CustomerChaseProductEntity", "Falcon", @"dbo", "TblCustomerChaseProduct", 3 );
			base.AddElementFieldMapping( "CustomerChaseProductEntity", "ChaseOutboundId", "ChaseOutboundId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerChaseProductEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerChaseProductEntity", "ChaseProductId", "ChaseProductId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
		}
		/// <summary>Inits CustomerClinicalQuestionAnswerEntity's mappings</summary>
		private void InitCustomerClinicalQuestionAnswerEntityMappings()
		{
			base.AddElementMapping( "CustomerClinicalQuestionAnswerEntity", "Falcon", @"dbo", "TblCustomerClinicalQuestionAnswer", 11 );
			base.AddElementFieldMapping( "CustomerClinicalQuestionAnswerEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerClinicalQuestionAnswerEntity", "Guid", "Guid", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "CustomerClinicalQuestionAnswerEntity", "ClinicalQuestionTemplateId", "ClinicalQuestionTemplateId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CustomerClinicalQuestionAnswerEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "CustomerClinicalQuestionAnswerEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "CustomerClinicalQuestionAnswerEntity", "ClinicalHealthQuestionId", "ClinicalHealthQuestionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "CustomerClinicalQuestionAnswerEntity", "HealthQuestionAnswer", "HealthQuestionAnswer", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "CustomerClinicalQuestionAnswerEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "CustomerClinicalQuestionAnswerEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "CustomerClinicalQuestionAnswerEntity", "ModifiedOn", "ModifiedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "CustomerClinicalQuestionAnswerEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
		}
		/// <summary>Inits CustomerEligibilityEntity's mappings</summary>
		private void InitCustomerEligibilityEntityMappings()
		{
			base.AddElementMapping( "CustomerEligibilityEntity", "Falcon", @"dbo", "TblCustomerEligibility", 8 );
			base.AddElementFieldMapping( "CustomerEligibilityEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerEligibilityEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerEligibilityEntity", "ForYear", "ForYear", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 2 );
			base.AddElementFieldMapping( "CustomerEligibilityEntity", "IsEligible", "IsEligible", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "CustomerEligibilityEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "CustomerEligibilityEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "CustomerEligibilityEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "CustomerEligibilityEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
		}
		/// <summary>Inits CustomerEventCriticalTestDataEntity's mappings</summary>
		private void InitCustomerEventCriticalTestDataEntityMappings()
		{
			base.AddElementMapping( "CustomerEventCriticalTestDataEntity", "Falcon", @"dbo", "TblCustomerEventCriticalTestData", 15 );
			base.AddElementFieldMapping( "CustomerEventCriticalTestDataEntity", "CustomerEventScreeningTestId", "CustomerEventScreeningTestID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerEventCriticalTestDataEntity", "ContactNumber", "ContactNumber", false, (int)SqlDbType.NVarChar, 30, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "CustomerEventCriticalTestDataEntity", "TechnicianNotes", "TechnicianNotes", false, (int)SqlDbType.NVarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CustomerEventCriticalTestDataEntity", "TechnicianNotesForPhysician", "TechnicianNotesForPhysician", false, (int)SqlDbType.NVarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "CustomerEventCriticalTestDataEntity", "IsCustomerSigned", "IsCustomerSigned", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "CustomerEventCriticalTestDataEntity", "IsTechnicianSigned", "IsTechnicianSigned", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "CustomerEventCriticalTestDataEntity", "DateOfSubmission", "DateOfSubmission", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "CustomerEventCriticalTestDataEntity", "IsActive", "IsActive", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "CustomerEventCriticalTestDataEntity", "TechnicianId", "TechnicianId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "CustomerEventCriticalTestDataEntity", "ValidatingTechnicianId", "ValidatingTechnicianId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "CustomerEventCriticalTestDataEntity", "HasPcp", "HasPCP", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 10 );
			base.AddElementFieldMapping( "CustomerEventCriticalTestDataEntity", "IsDefaultFollowup", "IsDefaultFollowup", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 11 );
			base.AddElementFieldMapping( "CustomerEventCriticalTestDataEntity", "IsPatientReceivedImages", "IsPatientReceivedImages", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 12 );
			base.AddElementFieldMapping( "CustomerEventCriticalTestDataEntity", "Symptoms", "Symptoms", true, (int)SqlDbType.NVarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "CustomerEventCriticalTestDataEntity", "Physician", "Physician", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 14 );
		}
		/// <summary>Inits CustomerEventPriorityInQueueDataEntity's mappings</summary>
		private void InitCustomerEventPriorityInQueueDataEntityMappings()
		{
			base.AddElementMapping( "CustomerEventPriorityInQueueDataEntity", "Falcon", @"dbo", "TblCustomerEventPriorityInQueueData", 7 );
			base.AddElementFieldMapping( "CustomerEventPriorityInQueueDataEntity", "CustomerEventScreeningTestId", "CustomerEventScreeningTestID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerEventPriorityInQueueDataEntity", "Note", "Note", false, (int)SqlDbType.NVarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "CustomerEventPriorityInQueueDataEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "CustomerEventPriorityInQueueDataEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "CustomerEventPriorityInQueueDataEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "CustomerEventPriorityInQueueDataEntity", "ModifiedByOrgRoleUserId", "ModifiedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "CustomerEventPriorityInQueueDataEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
		}
		/// <summary>Inits CustomerEventReadingEntity's mappings</summary>
		private void InitCustomerEventReadingEntityMappings()
		{
			base.AddElementMapping( "CustomerEventReadingEntity", "Falcon", @"dbo", "TblCustomerEventReading", 10 );
			base.AddElementFieldMapping( "CustomerEventReadingEntity", "CustomerEventReadingId", "CustomerEventReadingId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerEventReadingEntity", "CustomerEventScreeningTestId", "CustomerEventScreeningTestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerEventReadingEntity", "TestReadingId", "TestReadingId", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 2 );
			base.AddElementFieldMapping( "CustomerEventReadingEntity", "Value", "Value", true, (int)SqlDbType.VarChar, 8000, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "CustomerEventReadingEntity", "StandardFindingTestReadingId", "StandardFindingTestReadingId", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 4 );
			base.AddElementFieldMapping( "CustomerEventReadingEntity", "IsManual", "IsManual", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "CustomerEventReadingEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "CustomerEventReadingEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "CustomerEventReadingEntity", "UpdatedByOrgRoleUserId", "UpdatedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "CustomerEventReadingEntity", "UpdatedOn", "UpdatedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
		}
		/// <summary>Inits CustomerEventScreeningTestsEntity's mappings</summary>
		private void InitCustomerEventScreeningTestsEntityMappings()
		{
			base.AddElementMapping( "CustomerEventScreeningTestsEntity", "Falcon", @"dbo", "TblCustomerEventScreeningTests", 3 );
			base.AddElementFieldMapping( "CustomerEventScreeningTestsEntity", "CustomerEventScreeningTestId", "CustomerEventScreeningTestID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerEventScreeningTestsEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerEventScreeningTestsEntity", "EventCustomerResultId", "EventCustomerResultId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
		}
		/// <summary>Inits CustomerEventTestFindingEntity's mappings</summary>
		private void InitCustomerEventTestFindingEntityMappings()
		{
			base.AddElementMapping( "CustomerEventTestFindingEntity", "Falcon", @"dbo", "TblCustomerEventTestFinding", 4 );
			base.AddElementFieldMapping( "CustomerEventTestFindingEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerEventTestFindingEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerEventTestFindingEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CustomerEventTestFindingEntity", "Finding", "Finding", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 3 );
		}
		/// <summary>Inits CustomerEventTestIncidentalFindingEntity's mappings</summary>
		private void InitCustomerEventTestIncidentalFindingEntityMappings()
		{
			base.AddElementMapping( "CustomerEventTestIncidentalFindingEntity", "Falcon", @"dbo", "TblCustomerEventTestIncidentalFinding", 5 );
			base.AddElementFieldMapping( "CustomerEventTestIncidentalFindingEntity", "CustomerEventTestIncidentalFindingId", "CustomerEventTestIncidentalFindingId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerEventTestIncidentalFindingEntity", "CustomerEventScreeningTestId", "CustomerEventScreeningTestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerEventTestIncidentalFindingEntity", "IncidentalFindingId", "IncidentalFindingId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CustomerEventTestIncidentalFindingEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "CustomerEventTestIncidentalFindingEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
		}
		/// <summary>Inits CustomerEventTestIncidentalFindingDetailEntity's mappings</summary>
		private void InitCustomerEventTestIncidentalFindingDetailEntityMappings()
		{
			base.AddElementMapping( "CustomerEventTestIncidentalFindingDetailEntity", "Falcon", @"dbo", "TblCustomerEventTestIncidentalFindingDetail", 9 );
			base.AddElementFieldMapping( "CustomerEventTestIncidentalFindingDetailEntity", "CustomerEventTestIncidentalFindingDetailId", "CustomerEventTestIncidentalFindingDetailId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerEventTestIncidentalFindingDetailEntity", "CustomerEventTestIncidentalFindingId", "CustomerEventTestIncidentalFindingId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerEventTestIncidentalFindingDetailEntity", "GroupItemId", "GroupItemId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CustomerEventTestIncidentalFindingDetailEntity", "Value", "Value", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "CustomerEventTestIncidentalFindingDetailEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "CustomerEventTestIncidentalFindingDetailEntity", "CreatedOn", "CreatedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "CustomerEventTestIncidentalFindingDetailEntity", "UpdatedByOrgRoleUserId", "UpdatedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "CustomerEventTestIncidentalFindingDetailEntity", "UpdatedOn", "UpdatedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "CustomerEventTestIncidentalFindingDetailEntity", "Location", "Location", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 8 );
		}
		/// <summary>Inits CustomerEventTestPhysicianEvaluationEntity's mappings</summary>
		private void InitCustomerEventTestPhysicianEvaluationEntityMappings()
		{
			base.AddElementMapping( "CustomerEventTestPhysicianEvaluationEntity", "Falcon", @"dbo", "TblCustomerEventTestPhysicianEvaluation", 9 );
			base.AddElementFieldMapping( "CustomerEventTestPhysicianEvaluationEntity", "CustomerEventTestPhysicianEvaluationId", "CustomerEventTestPhysicianEvaluationId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerEventTestPhysicianEvaluationEntity", "CustomerEventScreeningTestId", "CustomerEventScreeningTestID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerEventTestPhysicianEvaluationEntity", "PhysicianRemarks", "PhysicianRemarks", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CustomerEventTestPhysicianEvaluationEntity", "IsCritical", "IsCritical", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "CustomerEventTestPhysicianEvaluationEntity", "IsFollowUpWithPhysician", "IsFollowUpWithPhysician", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "CustomerEventTestPhysicianEvaluationEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "CustomerEventTestPhysicianEvaluationEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "CustomerEventTestPhysicianEvaluationEntity", "UpdatedByOrgRoleUserId", "UpdatedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "CustomerEventTestPhysicianEvaluationEntity", "UpdatedOn", "UpdatedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
		}
		/// <summary>Inits CustomerEventTestPhysicianNoteEntity's mappings</summary>
		private void InitCustomerEventTestPhysicianNoteEntityMappings()
		{
			base.AddElementMapping( "CustomerEventTestPhysicianNoteEntity", "Falcon", @"dbo", "TblCustomerEventTestPhysicianNote", 3 );
			base.AddElementFieldMapping( "CustomerEventTestPhysicianNoteEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerEventTestPhysicianNoteEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerEventTestPhysicianNoteEntity", "PhysicianNotes", "PhysicianNotes", false, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 2 );
		}
		/// <summary>Inits CustomerEventTestStandardFindingEntity's mappings</summary>
		private void InitCustomerEventTestStandardFindingEntityMappings()
		{
			base.AddElementMapping( "CustomerEventTestStandardFindingEntity", "Falcon", @"dbo", "TblCustomerEventTestStandardFinding", 3 );
			base.AddElementFieldMapping( "CustomerEventTestStandardFindingEntity", "CustomerEventTestStandardFindingId", "CustomerEventTestStandardFindingId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerEventTestStandardFindingEntity", "CustomerEventScreeningTestId", "CustomerEventScreeningTestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerEventTestStandardFindingEntity", "StandardFindingTestReadingId", "StandardFindingTestReadingId", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 2 );
		}
		/// <summary>Inits CustomerEventTestStateEntity's mappings</summary>
		private void InitCustomerEventTestStateEntityMappings()
		{
			base.AddElementMapping( "CustomerEventTestStateEntity", "Falcon", @"dbo", "TblCustomerEventTestState", 18 );
			base.AddElementFieldMapping( "CustomerEventTestStateEntity", "CustomerEventTestStateId", "CustomerEventTestStateId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerEventTestStateEntity", "CustomerEventScreeningTestId", "CustomerEventScreeningTestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerEventTestStateEntity", "EvaluationState", "EvaluationState", false, (int)SqlDbType.TinyInt, 0, 0, 3, false, "", null, typeof(System.Byte), 2 );
			base.AddElementFieldMapping( "CustomerEventTestStateEntity", "IsPartial", "IsPartial", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "CustomerEventTestStateEntity", "IsCritical", "IsCritical", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "CustomerEventTestStateEntity", "SelfPresent", "SelfPresent", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "CustomerEventTestStateEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "CustomerEventTestStateEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "CustomerEventTestStateEntity", "IsTestNotPerformed", "IsTestNotPerformed", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
			base.AddElementFieldMapping( "CustomerEventTestStateEntity", "ConductedByOrgRoleUserId", "ConductedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "CustomerEventTestStateEntity", "EvaluatedByOrgRoleUserId", "EvaluatedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
			base.AddElementFieldMapping( "CustomerEventTestStateEntity", "TechnicianNotes", "TechnicianNotes", true, (int)SqlDbType.VarChar, 2000, 0, 0, false, "", null, typeof(System.String), 11 );
			base.AddElementFieldMapping( "CustomerEventTestStateEntity", "UpdatedByOrgRoleUserId", "UpdatedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "CustomerEventTestStateEntity", "UpdatedOn", "UpdatedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 13 );
			base.AddElementFieldMapping( "CustomerEventTestStateEntity", "IsNoteManualEntered", "IsNoteManualEntered", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 14 );
			base.AddElementFieldMapping( "CustomerEventTestStateEntity", "TestSummary", "TestSummary", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 15 );
			base.AddElementFieldMapping( "CustomerEventTestStateEntity", "PathwayRecommendation", "PathwayRecommendation", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 16 );
			base.AddElementFieldMapping( "CustomerEventTestStateEntity", "IsPriorityInQueue", "IsPriorityInQueue", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 17 );
		}
		/// <summary>Inits CustomerEventUnableScreenReasonEntity's mappings</summary>
		private void InitCustomerEventUnableScreenReasonEntityMappings()
		{
			base.AddElementMapping( "CustomerEventUnableScreenReasonEntity", "Falcon", @"dbo", "TblCustomerEventUnableScreenReason", 8 );
			base.AddElementFieldMapping( "CustomerEventUnableScreenReasonEntity", "CustomerEventUnableScreenReasonId", "CustomerEventUnableScreenReasonId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerEventUnableScreenReasonEntity", "CustomerEventScreeningTestId", "CustomerEventScreeningTestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerEventUnableScreenReasonEntity", "TestUnableScreenReasonId", "TestUnableScreenReasonId", true, (int)SqlDbType.TinyInt, 0, 0, 3, false, "", null, typeof(System.Byte), 2 );
			base.AddElementFieldMapping( "CustomerEventUnableScreenReasonEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "CustomerEventUnableScreenReasonEntity", "CreatedOn", "CreatedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "CustomerEventUnableScreenReasonEntity", "UpdatedByOrgRoleUserId", "UpdatedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "CustomerEventUnableScreenReasonEntity", "UpdatedOn", "UpdatedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "CustomerEventUnableScreenReasonEntity", "IsManual", "IsManual", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
		}
		/// <summary>Inits CustomerHealthInfoEntity's mappings</summary>
		private void InitCustomerHealthInfoEntityMappings()
		{
			base.AddElementMapping( "CustomerHealthInfoEntity", "Falcon", @"dbo", "TblCustomerHealthInfo", 7 );
			base.AddElementFieldMapping( "CustomerHealthInfoEntity", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerHealthInfoEntity", "CustomerHealthQuestionId", "CustomerHealthQuestionID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerHealthInfoEntity", "HealthQuestionAnswer", "HealthQuestionAnswer", true, (int)SqlDbType.NVarChar, 4000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CustomerHealthInfoEntity", "DateCreated", "DateCreated", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "CustomerHealthInfoEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "CustomerHealthInfoEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "CustomerHealthInfoEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
		}
		/// <summary>Inits CustomerHealthInfoArchiveEntity's mappings</summary>
		private void InitCustomerHealthInfoArchiveEntityMappings()
		{
			base.AddElementMapping( "CustomerHealthInfoArchiveEntity", "Falcon", @"dbo", "TblCustomerHealthInfoArchive", 9 );
			base.AddElementFieldMapping( "CustomerHealthInfoArchiveEntity", "CustomerHealthInfoArchiveId", "CustomerHealthInfoArchiveID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerHealthInfoArchiveEntity", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerHealthInfoArchiveEntity", "CustomerHealthQuestionId", "CustomerHealthQuestionID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CustomerHealthInfoArchiveEntity", "HealthQuestionAnswer", "HealthQuestionAnswer", true, (int)SqlDbType.NVarChar, 4000, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "CustomerHealthInfoArchiveEntity", "ArchiveDate", "ArchiveDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "CustomerHealthInfoArchiveEntity", "Version", "Version", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "CustomerHealthInfoArchiveEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "CustomerHealthInfoArchiveEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "CustomerHealthInfoArchiveEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
		}
		/// <summary>Inits CustomerHealthQuestionGroupEntity's mappings</summary>
		private void InitCustomerHealthQuestionGroupEntityMappings()
		{
			base.AddElementMapping( "CustomerHealthQuestionGroupEntity", "Falcon", @"dbo", "TblCustomerHealthQuestionGroup", 6 );
			base.AddElementFieldMapping( "CustomerHealthQuestionGroupEntity", "CustomerHealthQuestionGroupId", "CustomerHealthQuestionGroupID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerHealthQuestionGroupEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "CustomerHealthQuestionGroupEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CustomerHealthQuestionGroupEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "CustomerHealthQuestionGroupEntity", "IsClinicalQuestions", "IsClinicalQuestions", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "CustomerHealthQuestionGroupEntity", "TestId", "TestId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
		}
		/// <summary>Inits CustomerHealthQuestionsEntity's mappings</summary>
		private void InitCustomerHealthQuestionsEntityMappings()
		{
			base.AddElementMapping( "CustomerHealthQuestionsEntity", "Falcon", @"dbo", "TblCustomerHealthQuestions", 13 );
			base.AddElementFieldMapping( "CustomerHealthQuestionsEntity", "CustomerHealthQuestionId", "CustomerHealthQuestionID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerHealthQuestionsEntity", "CustomerHealthQuestionGroupId", "CustomerHealthQuestionGroupID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerHealthQuestionsEntity", "Question", "Question", false, (int)SqlDbType.VarChar, 2000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CustomerHealthQuestionsEntity", "Label", "Label", true, (int)SqlDbType.VarChar, 2000, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "CustomerHealthQuestionsEntity", "ControlType", "ControlType", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "CustomerHealthQuestionsEntity", "ControlValues", "ControlValues", true, (int)SqlDbType.VarChar, 5000, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "CustomerHealthQuestionsEntity", "ControlValueDelimiter", "ControlValueDelimiter", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "CustomerHealthQuestionsEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "CustomerHealthQuestionsEntity", "IsRequired", "IsRequired", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
			base.AddElementFieldMapping( "CustomerHealthQuestionsEntity", "DisplaySequence", "DisplaySequence", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 9 );
			base.AddElementFieldMapping( "CustomerHealthQuestionsEntity", "DefaultValue", "DefaultValue", true, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "CustomerHealthQuestionsEntity", "ParentQuestionId", "ParentQuestionId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 11 );
			base.AddElementFieldMapping( "CustomerHealthQuestionsEntity", "IsForFemale", "IsForFemale", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 12 );
		}
		/// <summary>Inits CustomerIcdCodeEntity's mappings</summary>
		private void InitCustomerIcdCodeEntityMappings()
		{
			base.AddElementMapping( "CustomerIcdCodeEntity", "Falcon", @"dbo", "TblCustomerIcdCode", 7 );
			base.AddElementFieldMapping( "CustomerIcdCodeEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerIcdCodeEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerIcdCodeEntity", "IcdCodeId", "IcdCodeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CustomerIcdCodeEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "CustomerIcdCodeEntity", "DateEnd", "DateEnd", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "CustomerIcdCodeEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "CustomerIcdCodeEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
		}
		/// <summary>Inits CustomerLockForCallEntity's mappings</summary>
		private void InitCustomerLockForCallEntityMappings()
		{
			base.AddElementMapping( "CustomerLockForCallEntity", "Falcon", @"dbo", "TblCustomerLockForCall", 3 );
			base.AddElementFieldMapping( "CustomerLockForCallEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerLockForCallEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 1 );
			base.AddElementFieldMapping( "CustomerLockForCallEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
		}
		/// <summary>Inits CustomerMedicareQuestionAnswerEntity's mappings</summary>
		private void InitCustomerMedicareQuestionAnswerEntityMappings()
		{
			base.AddElementMapping( "CustomerMedicareQuestionAnswerEntity", "Falcon", @"dbo", "TblCustomerMedicareQuestionAnswer", 5 );
			base.AddElementFieldMapping( "CustomerMedicareQuestionAnswerEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerMedicareQuestionAnswerEntity", "QuestionId", "QuestionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerMedicareQuestionAnswerEntity", "Answer", "Answer", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CustomerMedicareQuestionAnswerEntity", "CreateOn", "CreateOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "CustomerMedicareQuestionAnswerEntity", "CreateBy", "CreateBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
		}
		/// <summary>Inits CustomerOrderHistoryEntity's mappings</summary>
		private void InitCustomerOrderHistoryEntityMappings()
		{
			base.AddElementMapping( "CustomerOrderHistoryEntity", "Falcon", @"dbo", "TblCustomerOrderHistory", 7 );
			base.AddElementFieldMapping( "CustomerOrderHistoryEntity", "UploadId", "UploadId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerOrderHistoryEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerOrderHistoryEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CustomerOrderHistoryEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "CustomerOrderHistoryEntity", "EventPackageId", "EventPackageId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "CustomerOrderHistoryEntity", "EventTestId", "EventTestId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "CustomerOrderHistoryEntity", "OrderItemStatusId", "OrderItemStatusId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
		}
		/// <summary>Inits CustomerPhoneNumberUpdateUploadEntity's mappings</summary>
		private void InitCustomerPhoneNumberUpdateUploadEntityMappings()
		{
			base.AddElementMapping( "CustomerPhoneNumberUpdateUploadEntity", "Falcon", @"dbo", "TblCustomerPhoneNumberUpdateUpload", 10 );
			base.AddElementFieldMapping( "CustomerPhoneNumberUpdateUploadEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerPhoneNumberUpdateUploadEntity", "FileId", "FileId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerPhoneNumberUpdateUploadEntity", "StatusId", "StatusId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CustomerPhoneNumberUpdateUploadEntity", "SuccessUploadCount", "SuccessUploadCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "CustomerPhoneNumberUpdateUploadEntity", "FailedUploadCount", "FailedUploadCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "CustomerPhoneNumberUpdateUploadEntity", "UploadTime", "UploadTime", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "CustomerPhoneNumberUpdateUploadEntity", "ParseStartTime", "ParseStartTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "CustomerPhoneNumberUpdateUploadEntity", "ParseEndTime", "ParseEndTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "CustomerPhoneNumberUpdateUploadEntity", "UploadedByOrgRoleUserId", "UploadedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "CustomerPhoneNumberUpdateUploadEntity", "LogFileId", "LogFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
		}
		/// <summary>Inits CustomerPhoneNumberUpdateUploadLogEntity's mappings</summary>
		private void InitCustomerPhoneNumberUpdateUploadLogEntityMappings()
		{
			base.AddElementMapping( "CustomerPhoneNumberUpdateUploadLogEntity", "Falcon", @"dbo", "TblCustomerPhoneNumberUpdateUploadLog", 11 );
			base.AddElementFieldMapping( "CustomerPhoneNumberUpdateUploadLogEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerPhoneNumberUpdateUploadLogEntity", "UploadId", "UploadId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerPhoneNumberUpdateUploadLogEntity", "CustomerId", "CustomerId", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CustomerPhoneNumberUpdateUploadLogEntity", "FirstName", "FirstName", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "CustomerPhoneNumberUpdateUploadLogEntity", "LastName", "LastName", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "CustomerPhoneNumberUpdateUploadLogEntity", "Dob", "DOB", true, (int)SqlDbType.VarChar, 20, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "CustomerPhoneNumberUpdateUploadLogEntity", "MemberId", "MemberId", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "CustomerPhoneNumberUpdateUploadLogEntity", "PhoneNumber", "PhoneNumber", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "CustomerPhoneNumberUpdateUploadLogEntity", "PhoneType", "PhoneType", true, (int)SqlDbType.VarChar, 20, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "CustomerPhoneNumberUpdateUploadLogEntity", "IsSuccessful", "IsSuccessful", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 9 );
			base.AddElementFieldMapping( "CustomerPhoneNumberUpdateUploadLogEntity", "ErrorMessage", "ErrorMessage", true, (int)SqlDbType.NVarChar, 2048, 0, 0, false, "", null, typeof(System.String), 10 );
		}
		/// <summary>Inits CustomerPredictedZipEntity's mappings</summary>
		private void InitCustomerPredictedZipEntityMappings()
		{
			base.AddElementMapping( "CustomerPredictedZipEntity", "Falcon", @"dbo", "TblCustomerPredictedZip", 5 );
			base.AddElementFieldMapping( "CustomerPredictedZipEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerPredictedZipEntity", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerPredictedZipEntity", "PredictedZip", "PredictedZip", true, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CustomerPredictedZipEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "CustomerPredictedZipEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
		}
		/// <summary>Inits CustomerPrimaryCarePhysicianEntity's mappings</summary>
		private void InitCustomerPrimaryCarePhysicianEntityMappings()
		{
			base.AddElementMapping( "CustomerPrimaryCarePhysicianEntity", "Falcon", @"dbo", "TblCustomerPrimaryCarePhysician", 28 );
			base.AddElementFieldMapping( "CustomerPrimaryCarePhysicianEntity", "PrimaryCarePhysicianId", "PrimaryCarePhysicianID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerPrimaryCarePhysicianEntity", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerPrimaryCarePhysicianEntity", "FirstName", "FirstName", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CustomerPrimaryCarePhysicianEntity", "MiddleName", "MiddleName", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "CustomerPrimaryCarePhysicianEntity", "LastName", "LastName", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "CustomerPrimaryCarePhysicianEntity", "Pcpaddress", "Address", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "CustomerPrimaryCarePhysicianEntity", "PhoneNumber", "PhoneNumber", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "CustomerPrimaryCarePhysicianEntity", "Email", "EMail", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "CustomerPrimaryCarePhysicianEntity", "SendEmail", "SendEMail", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
			base.AddElementFieldMapping( "CustomerPrimaryCarePhysicianEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "CustomerPrimaryCarePhysicianEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 10 );
			base.AddElementFieldMapping( "CustomerPrimaryCarePhysicianEntity", "PhoneOther", "PhoneOther", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 11 );
			base.AddElementFieldMapping( "CustomerPrimaryCarePhysicianEntity", "EmailOther", "EmailOther", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "CustomerPrimaryCarePhysicianEntity", "Website", "Website", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "CustomerPrimaryCarePhysicianEntity", "UpdatedByOrganizationRoleUserId", "UpdatedByOrganizationRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 14 );
			base.AddElementFieldMapping( "CustomerPrimaryCarePhysicianEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 15 );
			base.AddElementFieldMapping( "CustomerPrimaryCarePhysicianEntity", "Npi", "NPI", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 16 );
			base.AddElementFieldMapping( "CustomerPrimaryCarePhysicianEntity", "Fax", "Fax", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 17 );
			base.AddElementFieldMapping( "CustomerPrimaryCarePhysicianEntity", "PrefixText", "PrefixText", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 18 );
			base.AddElementFieldMapping( "CustomerPrimaryCarePhysicianEntity", "SuffixText", "SuffixText", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 19 );
			base.AddElementFieldMapping( "CustomerPrimaryCarePhysicianEntity", "CredentialText", "CredentialText", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 20 );
			base.AddElementFieldMapping( "CustomerPrimaryCarePhysicianEntity", "PhysicianMasterId", "PhysicianMasterId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 21 );
			base.AddElementFieldMapping( "CustomerPrimaryCarePhysicianEntity", "MailingAddressId", "MailingAddressId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 22 );
			base.AddElementFieldMapping( "CustomerPrimaryCarePhysicianEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 23 );
			base.AddElementFieldMapping( "CustomerPrimaryCarePhysicianEntity", "IsPcpAddressVerified", "IsPcpAddressVerified", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 24 );
			base.AddElementFieldMapping( "CustomerPrimaryCarePhysicianEntity", "PcpAddressVerifiedBy", "PcpAddressVerifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 25 );
			base.AddElementFieldMapping( "CustomerPrimaryCarePhysicianEntity", "PcpAddressVerifiedOn", "PcpAddressVerifiedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 26 );
			base.AddElementFieldMapping( "CustomerPrimaryCarePhysicianEntity", "Source", "Source", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 27 );
		}
		/// <summary>Inits CustomerProfileEntity's mappings</summary>
		private void InitCustomerProfileEntityMappings()
		{
			base.AddElementMapping( "CustomerProfileEntity", "Falcon", @"dbo", "TblCustomerProfile", 69 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "DisplayId", "DisplayID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "BillingAddressId", "BillingAddressID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "IsActive", "IsActive", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "Height", "Height", true, (int)SqlDbType.NVarChar, 20, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "Weight", "Weight", true, (int)SqlDbType.Float, 0, 0, 38, false, "", null, typeof(System.Double), 5 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "Gender", "Gender", true, (int)SqlDbType.NVarChar, 20, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "Race", "Race", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "Age", "Age", true, (int)SqlDbType.TinyInt, 0, 0, 3, false, "", null, typeof(System.Byte), 8 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 10 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "TrackingMarketingId", "TrackingMarketingID", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 11 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "AddedByRoleId", "AddedByRoleID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "Employer", "Employer", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "EmergencyContactName", "EmergencyContactName", true, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 14 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "EmergencyContactRelationship", "EmergencyContactRelationship", true, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 15 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "EmergencyContactPhoneNumber", "EmergencyContactPhoneNumber", true, (int)SqlDbType.VarChar, 20, 0, 0, false, "", null, typeof(System.String), 16 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "DoNotContactReasonId", "DoNotContactReasonId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 17 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "DoNotContactReasonNotesId", "DoNotContactReasonNotesId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 18 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "RequestNewsLetter", "RequestNewsLetter", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 19 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "EmployeeId", "EmployeeId", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 20 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "InsuranceId", "InsuranceId", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 21 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "PreferredLanguage", "PreferredLanguage", true, (int)SqlDbType.VarChar, 250, 0, 0, false, "", null, typeof(System.String), 22 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "BestTimeToCall", "BestTimeToCall", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 23 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "Waist", "Waist", true, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 24 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "Hicn", "HICN", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 25 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "EnableTexting", "EnableTexting", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 26 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "MedicareAdvantageNumber", "MedicareAdvantageNumber", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 27 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "Tag", "Tag", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 28 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "MedicareAdvantagePlanName", "MedicareAdvantagePlanName", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 29 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "LanguageId", "LanguageId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 30 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "LabId", "LabId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 31 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "Copay", "Copay", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 32 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "Lpi", "Lpi", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 33 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "Market", "Market", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 34 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "Mrn", "Mrn", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 35 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "GroupName", "GroupName", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 36 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "IsIncorrectPhoneNumber", "IsIncorrectPhoneNumber", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 37 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "IsLanguageBarrier", "IsLanguageBarrier", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 38 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "DoNotContactTypeId", "DoNotContactTypeId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 39 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "EnableVoiceMail", "EnableVoiceMail", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 40 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "AdditionalField1", "AdditionalField1", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 41 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "AdditionalField2", "AdditionalField2", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 42 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "AdditionalField3", "AdditionalField3", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 43 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "AdditionalField4", "AdditionalField4", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 44 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "ActivityId", "ActivityId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 45 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "DoNotContactUpdateDate", "DoNotContactUpdateDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 46 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "DoNotContactUpdateSource", "DoNotContactUpdateSource", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 47 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "IsSubscribed", "IsSubscribed", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 48 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "IncorrectPhoneNumberMarkedDate", "IncorrectPhoneNumberMarkedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 49 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "LanguageBarrierMarkedDate", "LanguageBarrierMarkedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 50 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "PreferredContactType", "PreferredContactType", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 51 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "Mbi", "Mbi", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 52 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "AcesId", "AcesId", true, (int)SqlDbType.VarChar, 128, 0, 0, false, "", null, typeof(System.String), 53 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "PhoneHomeConsentId", "PhoneHomeConsentId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 54 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "PhoneHomeConsentUpdateDate", "PhoneHomeConsentUpdateDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 55 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "PhoneCellConsentId", "PhoneCellConsentId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 56 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "PhoneCellConsentUpdateDate", "PhoneCellConsentUpdateDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 57 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "PhoneOfficeConsentId", "PhoneOfficeConsentId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 58 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "PhoneOfficeConsentUpdateDate", "PhoneOfficeConsentUpdateDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 59 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "BillingMemberId", "BillingMemberId", true, (int)SqlDbType.VarChar, 128, 0, 0, false, "", null, typeof(System.String), 60 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "BillingMemberPlan", "BillingMemberPlan", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 61 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "BillingMemberPlanYear", "BillingMemberPlanYear", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 62 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "EnableEmail", "EnableEmail", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 63 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "EnableEmailUpdateDate", "EnableEmailUpdateDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 64 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "MemberUploadSourceId", "MemberUploadSourceId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 65 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "ActivityTypeIsManual", "ActivityTypeIsManual", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 66 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "ProductTypeId", "ProductTypeId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 67 );
			base.AddElementFieldMapping( "CustomerProfileEntity", "AcesClientId", "AcesClientId", true, (int)SqlDbType.VarChar, 250, 0, 0, false, "", null, typeof(System.String), 68 );
		}
		/// <summary>Inits CustomerProfileHistoryEntity's mappings</summary>
		private void InitCustomerProfileHistoryEntityMappings()
		{
			base.AddElementMapping( "CustomerProfileHistoryEntity", "Falcon", @"dbo", "TblCustomerProfileHistory", 99 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "FirstName", "FirstName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "MiddleName", "MiddleName", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "LastName", "LastName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "HomeAddress1", "HomeAddress1", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "HomeAddress2", "HomeAddress2", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "HomeCity", "HomeCity", false, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "HomeState", "HomeState", false, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "HomeZipCode", "HomeZipCode", false, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "HomeCountry", "HomeCountry", false, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "PhoneOffice", "PhoneOffice", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 11 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "PhoneCell", "PhoneCell", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "PhoneHome", "PhoneHome", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "Email1", "EMail1", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 14 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "Email2", "EMail2", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 15 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "Picture", "Picture", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 16 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "Dob", "DOB", true, (int)SqlDbType.SmallDateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 17 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "DefaultRoleId", "DefaultRoleID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 18 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "PhoneOfficeExtension", "PhoneOfficeExtension", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 19 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "Ssn", "SSN", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 20 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "DisplayId", "DisplayID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 21 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "BillingAddress1", "BillingAddress1", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 22 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "BillingAddress2", "BillingAddress2", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 23 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "BillingCity", "BillingCity", true, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 24 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "BillingState", "BillingState", true, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 25 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "BillingZipCode", "BillingZipCode", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 26 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "BillingCountry", "BillingCountry", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 27 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "Height", "Height", true, (int)SqlDbType.NVarChar, 40, 0, 0, false, "", null, typeof(System.String), 28 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "Weight", "Weight", true, (int)SqlDbType.Float, 0, 0, 38, false, "", null, typeof(System.Double), 29 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "Gender", "Gender", true, (int)SqlDbType.NVarChar, 40, 0, 0, false, "", null, typeof(System.String), 30 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "Race", "Race", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 31 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "TrackingMarketingId", "TrackingMarketingID", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 32 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "AddedByRoleId", "AddedByRoleID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 33 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "Employer", "Employer", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 34 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "EmergencyContactName", "EmergencyContactName", true, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 35 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "EmergencyContactRelationship", "EmergencyContactRelationship", true, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 36 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "EmergencyContactPhoneNumber", "EmergencyContactPhoneNumber", true, (int)SqlDbType.VarChar, 20, 0, 0, false, "", null, typeof(System.String), 37 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "DoNotContactReasonId", "DoNotContactReasonId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 38 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "DoNotContactReasonNotesId", "DoNotContactReasonNotesId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 39 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "RequestNewsLetter", "RequestNewsLetter", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 40 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "EmployeeId", "EmployeeId", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 41 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "InsuranceId", "InsuranceId", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 42 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "PreferredLanguage", "PreferredLanguage", true, (int)SqlDbType.VarChar, 250, 0, 0, false, "", null, typeof(System.String), 43 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "BestTimeToCall", "BestTimeToCall", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 44 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "Waist", "Waist", true, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 45 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "Hicn", "HICN", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 46 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "EnableTexting", "EnableTexting", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 47 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "MedicareAdvantageNumber", "MedicareAdvantageNumber", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 48 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "Tag", "Tag", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 49 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "MedicareAdvantagePlanName", "MedicareAdvantagePlanName", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 50 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "IsEligble", "IsEligble", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 51 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "LanguageId", "LanguageId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 52 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "LabId", "LabId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 53 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "Copay", "Copay", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 54 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "Lpi", "Lpi", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 55 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "Market", "Market", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 56 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "Mrn", "Mrn", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 57 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "GroupName", "GroupName", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 58 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "IsIncorrectPhoneNumber", "IsIncorrectPhoneNumber", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 59 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "IsLanguageBarrier", "IsLanguageBarrier", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 60 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "DoNotContactTypeId", "DoNotContactTypeId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 61 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "EnableVoiceMail", "EnableVoiceMail", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 62 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "AdditionalField1", "AdditionalField1", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 63 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "AdditionalField2", "AdditionalField2", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 64 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "AdditionalField3", "AdditionalField3", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 65 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "AdditionalField4", "AdditionalField4", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 66 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "ActivityId", "ActivityId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 67 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "DoNotContactUpdateDate", "DoNotContactUpdateDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 68 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 69 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 70 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "DoNotContactUpdateSource", "DoNotContactUpdateSource", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 71 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "IsSubscribed", "IsSubscribed", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 72 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "IncorrectPhoneNumberMarkedDate", "IncorrectPhoneNumberMarkedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 73 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "LanguageBarrierMarkedDate", "LanguageBarrierMarkedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 74 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "PreferredContactType", "PreferredContactType", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 75 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "Mbi", "Mbi", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 76 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "AcesId", "AcesId", true, (int)SqlDbType.VarChar, 128, 0, 0, false, "", null, typeof(System.String), 77 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "PhoneHomeConsentId", "PhoneHomeConsentId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 78 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "PhoneHomeConsentUpdateDate", "PhoneHomeConsentUpdateDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 79 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "PhoneCellConsentId", "PhoneCellConsentId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 80 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "PhoneCellConsentUpdateDate", "PhoneCellConsentUpdateDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 81 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "PhoneOfficeConsentId", "PhoneOfficeConsentId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 82 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "PhoneOfficeConsentUpdateDate", "PhoneOfficeConsentUpdateDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 83 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "BillingMemberId", "BillingMemberId", true, (int)SqlDbType.VarChar, 128, 0, 0, false, "", null, typeof(System.String), 84 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "BillingMemberPlan", "BillingMemberPlan", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 85 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "BillingMemberPlanYear", "BillingMemberPlanYear", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 86 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "EnableEmail", "EnableEmail", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 87 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "EnableEmailUpdateDate", "EnableEmailUpdateDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 88 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "MergedCustomerId", "MergedCustomerId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 89 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "EligibilityForYear", "EligibilityForYear", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 90 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "IsWarmTransfer", "IsWarmTransfer", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 91 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "WarmTransferYear", "WarmTransferYear", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 92 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "MemberUploadSourceId", "MemberUploadSourceId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 93 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "ActivityTypeIsManual", "ActivityTypeIsManual", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 94 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "TargetedYear", "TargetedYear", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 95 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "IsTargeted", "IsTargeted", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 96 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "ProductTypeId", "ProductTypeId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 97 );
			base.AddElementFieldMapping( "CustomerProfileHistoryEntity", "AcesClientId", "AcesClientId", true, (int)SqlDbType.VarChar, 250, 0, 0, false, "", null, typeof(System.String), 98 );
		}
		/// <summary>Inits CustomerRegistrationNotesEntity's mappings</summary>
		private void InitCustomerRegistrationNotesEntityMappings()
		{
			base.AddElementMapping( "CustomerRegistrationNotesEntity", "Falcon", @"dbo", "TblCustomerRegistrationNotes", 10 );
			base.AddElementFieldMapping( "CustomerRegistrationNotesEntity", "CustomerRegistrationNotesId", "CustomerRegistrationNotesID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerRegistrationNotesEntity", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerRegistrationNotesEntity", "Notes", "Notes", true, (int)SqlDbType.VarChar, 5000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CustomerRegistrationNotesEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "CustomerRegistrationNotesEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "CustomerRegistrationNotesEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "CustomerRegistrationNotesEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "CustomerRegistrationNotesEntity", "EventId", "EventId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "CustomerRegistrationNotesEntity", "NoteType", "NoteType", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 8 );
			base.AddElementFieldMapping( "CustomerRegistrationNotesEntity", "ReasonId", "ReasonId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
		}
		/// <summary>Inits CustomerResultPostedEntity's mappings</summary>
		private void InitCustomerResultPostedEntityMappings()
		{
			base.AddElementMapping( "CustomerResultPostedEntity", "Falcon", @"dbo", "TblCustomerResultPosted", 2 );
			base.AddElementFieldMapping( "CustomerResultPostedEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerResultPostedEntity", "ResultPostId", "ResultPostId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits CustomerResultScreeningCommunicationEntity's mappings</summary>
		private void InitCustomerResultScreeningCommunicationEntityMappings()
		{
			base.AddElementMapping( "CustomerResultScreeningCommunicationEntity", "Falcon", @"dbo", "TblCustomerResultScreeningCommunication", 9 );
			base.AddElementFieldMapping( "CustomerResultScreeningCommunicationEntity", "CommunicationId", "CommunicationId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerResultScreeningCommunicationEntity", "PhysicianComment", "PhysicianComment", true, (int)SqlDbType.VarChar, 2000, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "CustomerResultScreeningCommunicationEntity", "FranchiseeComment", "FranchiseeComment", true, (int)SqlDbType.VarChar, 2000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CustomerResultScreeningCommunicationEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "CustomerResultScreeningCommunicationEntity", "DateResponded", "DateResponded", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "CustomerResultScreeningCommunicationEntity", "CommunicationInitiatedByOrgRoleUserId", "CommunicationInitiatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "CustomerResultScreeningCommunicationEntity", "PhysicianOrgRoleUserId", "PhysicianOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "CustomerResultScreeningCommunicationEntity", "FranchiseeAdminOrgRoleUserId", "FranchiseeAdminOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "CustomerResultScreeningCommunicationEntity", "EventCustomerResultId", "EventCustomerResultId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
		}
		/// <summary>Inits CustomerSkipReviewEntity's mappings</summary>
		private void InitCustomerSkipReviewEntityMappings()
		{
			base.AddElementMapping( "CustomerSkipReviewEntity", "Falcon", @"dbo", "TblCustomerSkipReview", 6 );
			base.AddElementFieldMapping( "CustomerSkipReviewEntity", "EventCustomerId", "EventCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerSkipReviewEntity", "DefaultPhysicianId", "DefaultPhysicianID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerSkipReviewEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CustomerSkipReviewEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "CustomerSkipReviewEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "CustomerSkipReviewEntity", "IsSkipEvaluation", "IsSkipEvaluation", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits CustomerSurveyEntity's mappings</summary>
		private void InitCustomerSurveyEntityMappings()
		{
			base.AddElementMapping( "CustomerSurveyEntity", "Falcon", @"dbo", "TblCustomerSurvey", 7 );
			base.AddElementFieldMapping( "CustomerSurveyEntity", "CustomerSurveyId", "CustomerSurveyID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerSurveyEntity", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerSurveyEntity", "CustomerSurveyQuestionAnswerId", "CustomerSurveyQuestionAnswerID", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 2 );
			base.AddElementFieldMapping( "CustomerSurveyEntity", "TextBoxValue", "TextBoxValue", true, (int)SqlDbType.NVarChar, 1000, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "CustomerSurveyEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "CustomerSurveyEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "CustomerSurveyEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
		}
		/// <summary>Inits CustomerSurveyQuestionEntity's mappings</summary>
		private void InitCustomerSurveyQuestionEntityMappings()
		{
			base.AddElementMapping( "CustomerSurveyQuestionEntity", "Falcon", @"dbo", "TblCustomerSurveyQuestion", 5 );
			base.AddElementFieldMapping( "CustomerSurveyQuestionEntity", "CustomerSurveyQuestionId", "CustomerSurveyQuestionID", false, (int)SqlDbType.Int, 0, 0, 10, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0 );
			base.AddElementFieldMapping( "CustomerSurveyQuestionEntity", "Question", "Question", false, (int)SqlDbType.NVarChar, 4000, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "CustomerSurveyQuestionEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
			base.AddElementFieldMapping( "CustomerSurveyQuestionEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "CustomerSurveyQuestionEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
		}
		/// <summary>Inits CustomerSurveyQuestionAnswerEntity's mappings</summary>
		private void InitCustomerSurveyQuestionAnswerEntityMappings()
		{
			base.AddElementMapping( "CustomerSurveyQuestionAnswerEntity", "Falcon", @"dbo", "TblCustomerSurveyQuestionAnswer", 7 );
			base.AddElementFieldMapping( "CustomerSurveyQuestionAnswerEntity", "CustomerSurveyQuestionAnswerId", "CustomerSurveyQuestionAnswerID", false, (int)SqlDbType.Int, 0, 0, 10, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0 );
			base.AddElementFieldMapping( "CustomerSurveyQuestionAnswerEntity", "CustomerSurveyQuestionId", "CustomerSurveyQuestionID", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 1 );
			base.AddElementFieldMapping( "CustomerSurveyQuestionAnswerEntity", "Answer", "Answer", false, (int)SqlDbType.NVarChar, 4000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CustomerSurveyQuestionAnswerEntity", "IsShowTextBox", "IsShowTextBox", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "CustomerSurveyQuestionAnswerEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "CustomerSurveyQuestionAnswerEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "CustomerSurveyQuestionAnswerEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
		}
		/// <summary>Inits CustomerTagEntity's mappings</summary>
		private void InitCustomerTagEntityMappings()
		{
			base.AddElementMapping( "CustomerTagEntity", "Falcon", @"dbo", "TblCustomerTag", 8 );
			base.AddElementFieldMapping( "CustomerTagEntity", "CustomerTagId", "CustomerTagId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerTagEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerTagEntity", "Tag", "Tag", true, (int)SqlDbType.NVarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CustomerTagEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "CustomerTagEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "CustomerTagEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "CustomerTagEntity", "ModifiedByOrgRoleUserId", "ModifiedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "CustomerTagEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
		}
		/// <summary>Inits CustomerTargetedEntity's mappings</summary>
		private void InitCustomerTargetedEntityMappings()
		{
			base.AddElementMapping( "CustomerTargetedEntity", "Falcon", @"dbo", "TblCustomerTargeted", 8 );
			base.AddElementFieldMapping( "CustomerTargetedEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerTargetedEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerTargetedEntity", "ForYear", "ForYear", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 2 );
			base.AddElementFieldMapping( "CustomerTargetedEntity", "IsTargated", "IsTargated", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "CustomerTargetedEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "CustomerTargetedEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "CustomerTargetedEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "CustomerTargetedEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
		}
		/// <summary>Inits CustomerTraleEntity's mappings</summary>
		private void InitCustomerTraleEntityMappings()
		{
			base.AddElementMapping( "CustomerTraleEntity", "Falcon", @"dbo", "TblCustomerTrale", 3 );
			base.AddElementFieldMapping( "CustomerTraleEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerTraleEntity", "UserId", "UserId", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "CustomerTraleEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
		}
		/// <summary>Inits CustomerUnsubscribedSmsNotificationEntity's mappings</summary>
		private void InitCustomerUnsubscribedSmsNotificationEntityMappings()
		{
			base.AddElementMapping( "CustomerUnsubscribedSmsNotificationEntity", "Falcon", @"dbo", "TblCustomerUnsubscribedSmsNotification", 5 );
			base.AddElementFieldMapping( "CustomerUnsubscribedSmsNotificationEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerUnsubscribedSmsNotificationEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerUnsubscribedSmsNotificationEntity", "SmsReceivedId", "SmsReceivedId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CustomerUnsubscribedSmsNotificationEntity", "StatusId", "StatusId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "CustomerUnsubscribedSmsNotificationEntity", "DateCreated", "DateCreated", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
		}
		/// <summary>Inits CustomerWarmTransferEntity's mappings</summary>
		private void InitCustomerWarmTransferEntityMappings()
		{
			base.AddElementMapping( "CustomerWarmTransferEntity", "Falcon", @"dbo", "TblCustomerWarmTransfer", 8 );
			base.AddElementFieldMapping( "CustomerWarmTransferEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerWarmTransferEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerWarmTransferEntity", "WarmTransferYear", "WarmTransferYear", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 2 );
			base.AddElementFieldMapping( "CustomerWarmTransferEntity", "IsWarmTransfer", "IsWarmTransfer", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "CustomerWarmTransferEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "CustomerWarmTransferEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "CustomerWarmTransferEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "CustomerWarmTransferEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
		}
		/// <summary>Inits CustomEventNotificationEntity's mappings</summary>
		private void InitCustomEventNotificationEntityMappings()
		{
			base.AddElementMapping( "CustomEventNotificationEntity", "Falcon", @"dbo", "TblCustomEventNotification", 8 );
			base.AddElementFieldMapping( "CustomEventNotificationEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomEventNotificationEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomEventNotificationEntity", "AccountId", "AccountId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CustomEventNotificationEntity", "Body", "Body", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "CustomEventNotificationEntity", "CreatedDate", "CreatedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "CustomEventNotificationEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "CustomEventNotificationEntity", "ServiceStatus", "ServiceStatus", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "CustomEventNotificationEntity", "ServiceDate", "ServiceDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
		}
		/// <summary>Inits DemandDraftPaymentDetailsEntity's mappings</summary>
		private void InitDemandDraftPaymentDetailsEntityMappings()
		{
			base.AddElementMapping( "DemandDraftPaymentDetailsEntity", "Falcon", @"dbo", "TblDemandDraftPaymentDetails", 7 );
			base.AddElementFieldMapping( "DemandDraftPaymentDetailsEntity", "DemandDraftId", "DemandDraftID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "DemandDraftPaymentDetailsEntity", "Ddnumber", "DDNumber", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 1 );
			base.AddElementFieldMapping( "DemandDraftPaymentDetailsEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "DemandDraftPaymentDetailsEntity", "PaymentId", "PaymentID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "DemandDraftPaymentDetailsEntity", "PaymentStatus", "PaymentStatus", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "DemandDraftPaymentDetailsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "DemandDraftPaymentDetailsEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
		}
		/// <summary>Inits DependentDisqualifiedTestEntity's mappings</summary>
		private void InitDependentDisqualifiedTestEntityMappings()
		{
			base.AddElementMapping( "DependentDisqualifiedTestEntity", "Falcon", @"dbo", "TblDependentDisqualifiedTest", 6 );
			base.AddElementFieldMapping( "DependentDisqualifiedTestEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "DependentDisqualifiedTestEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "DependentDisqualifiedTestEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "DependentDisqualifiedTestEntity", "Version", "Version", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 3 );
			base.AddElementFieldMapping( "DependentDisqualifiedTestEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "DependentDisqualifiedTestEntity", "EventCustomerId", "EventCustomerId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
		}
		/// <summary>Inits DiabeticRetinopathyParserlogEntity's mappings</summary>
		private void InitDiabeticRetinopathyParserlogEntityMappings()
		{
			base.AddElementMapping( "DiabeticRetinopathyParserlogEntity", "Falcon", @"dbo", "TblDiabeticRetinopathyParserlog", 6 );
			base.AddElementFieldMapping( "DiabeticRetinopathyParserlogEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "DiabeticRetinopathyParserlogEntity", "CustomerId", "CustomerId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "DiabeticRetinopathyParserlogEntity", "EventId", "EventId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "DiabeticRetinopathyParserlogEntity", "FileName", "FileName", false, (int)SqlDbType.VarChar, 2000, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "DiabeticRetinopathyParserlogEntity", "ErrorMessage", "ErrorMessage", true, (int)SqlDbType.VarChar, 4000, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "DiabeticRetinopathyParserlogEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
		}
		/// <summary>Inits DigitalAssetAccessLogEntity's mappings</summary>
		private void InitDigitalAssetAccessLogEntityMappings()
		{
			base.AddElementMapping( "DigitalAssetAccessLogEntity", "Falcon", @"dbo", "TblDigitalAssetAccessLog", 6 );
			base.AddElementFieldMapping( "DigitalAssetAccessLogEntity", "DigitalAssetAccessLogId", "DigitalAssetAccessLogId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "DigitalAssetAccessLogEntity", "OrganisationRoleUserId", "OrganisationRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "DigitalAssetAccessLogEntity", "UserLoginLogId", "UserLoginLogId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "DigitalAssetAccessLogEntity", "AccessedOn", "AccessedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "DigitalAssetAccessLogEntity", "DigitalAssetType", "DigitalAssetType", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "DigitalAssetAccessLogEntity", "DigitalAsset", "DigitalAsset", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 5 );
		}
		/// <summary>Inits DirectMailEntity's mappings</summary>
		private void InitDirectMailEntityMappings()
		{
			base.AddElementMapping( "DirectMailEntity", "Falcon", @"dbo", "TblDirectMail", 9 );
			base.AddElementFieldMapping( "DirectMailEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "DirectMailEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "DirectMailEntity", "MailDate", "MailDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "DirectMailEntity", "MailedBy", "MailedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "DirectMailEntity", "CallUploadId", "CallUploadId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "DirectMailEntity", "CampaignId", "CampaignId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "DirectMailEntity", "DirectMailTypeId", "DirectMailTypeId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "DirectMailEntity", "IsInvalidAddress", "IsInvalidAddress", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "DirectMailEntity", "Notes", "Notes", true, (int)SqlDbType.NVarChar, 500, 0, 0, false, "", null, typeof(System.String), 8 );
		}
		/// <summary>Inits DirectMailTypeEntity's mappings</summary>
		private void InitDirectMailTypeEntityMappings()
		{
			base.AddElementMapping( "DirectMailTypeEntity", "Falcon", @"dbo", "TblDirectMailType", 7 );
			base.AddElementFieldMapping( "DirectMailTypeEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "DirectMailTypeEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "DirectMailTypeEntity", "Alias", "Alias", false, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "DirectMailTypeEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "DirectMailTypeEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "DirectMailTypeEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "DirectMailTypeEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
		}
		/// <summary>Inits DisqualifiedTestEntity's mappings</summary>
		private void InitDisqualifiedTestEntityMappings()
		{
			base.AddElementMapping( "DisqualifiedTestEntity", "Falcon", @"dbo", "TblDisqualifiedTest", 12 );
			base.AddElementFieldMapping( "DisqualifiedTestEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "DisqualifiedTestEntity", "EventCustomerId", "EventCustomerId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "DisqualifiedTestEntity", "QuestionId", "QuestionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "DisqualifiedTestEntity", "Answer", "Answer", true, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "DisqualifiedTestEntity", "Version", "Version", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "DisqualifiedTestEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "DisqualifiedTestEntity", "CreatedBy", "CreatedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "DisqualifiedTestEntity", "CreatedDate", "CreatedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "DisqualifiedTestEntity", "UpdatedBy", "UpdatedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "DisqualifiedTestEntity", "UpdatedDate", "UpdatedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "DisqualifiedTestEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
			base.AddElementFieldMapping( "DisqualifiedTestEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 11 );
		}
		/// <summary>Inits EcheckPaymentEntity's mappings</summary>
		private void InitEcheckPaymentEntityMappings()
		{
			base.AddElementMapping( "EcheckPaymentEntity", "Falcon", @"dbo", "TblECheckPayment", 4 );
			base.AddElementFieldMapping( "EcheckPaymentEntity", "PaymentId", "PaymentID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EcheckPaymentEntity", "EcheckId", "ECheckID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EcheckPaymentEntity", "ProcessorResponse", "ProcessorResponse", false, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "EcheckPaymentEntity", "Status", "Status", false, (int)SqlDbType.TinyInt, 0, 0, 3, false, "", null, typeof(System.Byte), 3 );
		}
		/// <summary>Inits EligibilityEntity's mappings</summary>
		private void InitEligibilityEntityMappings()
		{
			base.AddElementMapping( "EligibilityEntity", "Falcon", @"dbo", "TblEligibility", 11 );
			base.AddElementFieldMapping( "EligibilityEntity", "EligibilityId", "EligibilityId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EligibilityEntity", "Guid", "Guid", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "EligibilityEntity", "InsuranceCompanyId", "InsuranceCompanyId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "EligibilityEntity", "PlanName", "PlanName", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "EligibilityEntity", "GroupName", "GroupName", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "EligibilityEntity", "CoPayment", "CoPayment", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 5 );
			base.AddElementFieldMapping( "EligibilityEntity", "CoInsurance", "CoInsurance", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 6 );
			base.AddElementFieldMapping( "EligibilityEntity", "Request", "Request", false, (int)SqlDbType.VarChar, 4000, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "EligibilityEntity", "Response", "Response", false, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "EligibilityEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "EligibilityEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
		}
		/// <summary>Inits EligibilityUploadEntity's mappings</summary>
		private void InitEligibilityUploadEntityMappings()
		{
			base.AddElementMapping( "EligibilityUploadEntity", "Falcon", @"dbo", "TblEligibilityUpload", 11 );
			base.AddElementFieldMapping( "EligibilityUploadEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EligibilityUploadEntity", "FileId", "FileId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EligibilityUploadEntity", "SuccessfullUploadCount", "SuccessfullUploadCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "EligibilityUploadEntity", "FailedUploadCount", "FailedUploadCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "EligibilityUploadEntity", "UploadTime", "UploadTime", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "EligibilityUploadEntity", "UploadedBy", "UploadedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "EligibilityUploadEntity", "LogFileId", "LogFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "EligibilityUploadEntity", "AccountId", "AccountId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "EligibilityUploadEntity", "StatusId", "StatusId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "EligibilityUploadEntity", "ParseStartTime", "ParseStartTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "EligibilityUploadEntity", "ParseEndTime", "ParseEndTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 10 );
		}
		/// <summary>Inits EmailTemplateEntity's mappings</summary>
		private void InitEmailTemplateEntityMappings()
		{
			base.AddElementMapping( "EmailTemplateEntity", "Falcon", @"dbo", "TblEmailTemplate", 11 );
			base.AddElementFieldMapping( "EmailTemplateEntity", "EmailTemplateId", "EmailTemplateID", false, (int)SqlDbType.Int, 0, 0, 10, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0 );
			base.AddElementFieldMapping( "EmailTemplateEntity", "EmailTitle", "EmailTitle", false, (int)SqlDbType.VarChar, 256, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "EmailTemplateEntity", "EmailSubject", "EmailSubject", false, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "EmailTemplateEntity", "EmailBody", "EmailBody", false, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "EmailTemplateEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "EmailTemplateEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "EmailTemplateEntity", "ModifiedByOrgRoleUserId", "ModifiedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "EmailTemplateEntity", "TemplateType", "TemplateType", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "EmailTemplateEntity", "NotificationTypeId", "NotificationTypeId", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 8 );
			base.AddElementFieldMapping( "EmailTemplateEntity", "IsEditable", "IsEditable", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 9 );
			base.AddElementFieldMapping( "EmailTemplateEntity", "CoverLetterTypeLookupId", "CoverLetterTypeLookupId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
		}
		/// <summary>Inits EmailTemplateMacroEntity's mappings</summary>
		private void InitEmailTemplateMacroEntityMappings()
		{
			base.AddElementMapping( "EmailTemplateMacroEntity", "Falcon", @"dbo", "TblEmailTemplateMacro", 4 );
			base.AddElementFieldMapping( "EmailTemplateMacroEntity", "EmailTemplateId", "EmailTemplateId", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 0 );
			base.AddElementFieldMapping( "EmailTemplateMacroEntity", "TemplateMacroId", "TemplateMacroId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EmailTemplateMacroEntity", "Sequence", "Sequence", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 2 );
			base.AddElementFieldMapping( "EmailTemplateMacroEntity", "ParameterValue", "ParameterValue", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 3 );
		}
		/// <summary>Inits EncounterEntity's mappings</summary>
		private void InitEncounterEntityMappings()
		{
			base.AddElementMapping( "EncounterEntity", "Falcon", @"dbo", "TblEncounter", 3 );
			base.AddElementFieldMapping( "EncounterEntity", "EncounterId", "EncounterId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EncounterEntity", "BillingAccountId", "BillingAccountId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EncounterEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
		}
		/// <summary>Inits EventAccountEntity's mappings</summary>
		private void InitEventAccountEntityMappings()
		{
			base.AddElementMapping( "EventAccountEntity", "Falcon", @"dbo", "TblEventAccount", 2 );
			base.AddElementFieldMapping( "EventAccountEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventAccountEntity", "AccountId", "AccountID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits EventAccountTestHcpcsCodeEntity's mappings</summary>
		private void InitEventAccountTestHcpcsCodeEntityMappings()
		{
			base.AddElementMapping( "EventAccountTestHcpcsCodeEntity", "Falcon", @"dbo", "TblEventAccountTestHcpcsCode", 9 );
			base.AddElementFieldMapping( "EventAccountTestHcpcsCodeEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventAccountTestHcpcsCodeEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventAccountTestHcpcsCodeEntity", "AccountId", "AccountId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "EventAccountTestHcpcsCodeEntity", "TestHcpcsCodeId", "TestHcpcsCodeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "EventAccountTestHcpcsCodeEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "EventAccountTestHcpcsCodeEntity", "CreatedDate", "CreatedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "EventAccountTestHcpcsCodeEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "EventAccountTestHcpcsCodeEntity", "ModifiedDate", "ModifiedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "EventAccountTestHcpcsCodeEntity", "IsDeleted", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
		}
		/// <summary>Inits EventActivityTemplateEntity's mappings</summary>
		private void InitEventActivityTemplateEntityMappings()
		{
			base.AddElementMapping( "EventActivityTemplateEntity", "Falcon", @"dbo", "TblEventActivityTemplate", 7 );
			base.AddElementFieldMapping( "EventActivityTemplateEntity", "EventActivityTemplateId", "EventActivityTemplateID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventActivityTemplateEntity", "TemplateName", "TemplateName", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "EventActivityTemplateEntity", "IsGlobal", "IsGlobal", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
			base.AddElementFieldMapping( "EventActivityTemplateEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "EventActivityTemplateEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "EventActivityTemplateEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "EventActivityTemplateEntity", "OrganizationRoleUserId", "OrganizationRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
		}
		/// <summary>Inits EventActivityTemplateCallEntity's mappings</summary>
		private void InitEventActivityTemplateCallEntityMappings()
		{
			base.AddElementMapping( "EventActivityTemplateCallEntity", "Falcon", @"dbo", "TblEventActivityTemplateCall", 9 );
			base.AddElementFieldMapping( "EventActivityTemplateCallEntity", "EventActivityTemplateCallId", "EventActivityTemplateCallID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventActivityTemplateCallEntity", "EventActivityTemplateId", "EventActivityTemplateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventActivityTemplateCallEntity", "Subject", "Subject", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "EventActivityTemplateCallEntity", "Notes", "Notes", true, (int)SqlDbType.VarChar, 2000, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "EventActivityTemplateCallEntity", "CallingDay", "CallingDay", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 4 );
			base.AddElementFieldMapping( "EventActivityTemplateCallEntity", "ForAfterEvent", "ForAfterEvent", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "EventActivityTemplateCallEntity", "ResponsibleRoleId", "ResponsibleRoleID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "EventActivityTemplateCallEntity", "ResponsibleEmailSpecified", "ResponsibleEmailSpecified", true, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "EventActivityTemplateCallEntity", "ResponsibleOrgRoleUserId", "ResponsibleOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
		}
		/// <summary>Inits EventActivityTemplateEmailEntity's mappings</summary>
		private void InitEventActivityTemplateEmailEntityMappings()
		{
			base.AddElementMapping( "EventActivityTemplateEmailEntity", "Falcon", @"dbo", "TblEventActivityTemplateEmail", 9 );
			base.AddElementFieldMapping( "EventActivityTemplateEmailEntity", "EventActivityTemplateEmailId", "EventActivityTemplateEmailID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventActivityTemplateEmailEntity", "EventActivityTemplateId", "EventActivityTemplateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventActivityTemplateEmailEntity", "Subject", "Subject", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "EventActivityTemplateEmailEntity", "EmailContent", "EmailContent", true, (int)SqlDbType.VarChar, 2000, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "EventActivityTemplateEmailEntity", "EmailSentDay", "EmailSentDay", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 4 );
			base.AddElementFieldMapping( "EventActivityTemplateEmailEntity", "ForAfterEvent", "ForAfterEvent", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "EventActivityTemplateEmailEntity", "ResponsibleRoleId", "ResponsibleRoleID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "EventActivityTemplateEmailEntity", "ResponsibleEmailSpecified", "ResponsibleEmailSpecified", true, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "EventActivityTemplateEmailEntity", "ResponsibleOrgRoleUserId", "ResponsibleOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
		}
		/// <summary>Inits EventActivityTemplateHostEntity's mappings</summary>
		private void InitEventActivityTemplateHostEntityMappings()
		{
			base.AddElementMapping( "EventActivityTemplateHostEntity", "Falcon", @"dbo", "TblEventActivityTemplateHost", 4 );
			base.AddElementFieldMapping( "EventActivityTemplateHostEntity", "EventActivityTemplateHostId", "EventActivityTemplateHostID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventActivityTemplateHostEntity", "EventActivityTemplateId", "EventActivityTemplateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventActivityTemplateHostEntity", "HostId", "HostID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "EventActivityTemplateHostEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
		}
		/// <summary>Inits EventActivityTemplateMeetingEntity's mappings</summary>
		private void InitEventActivityTemplateMeetingEntityMappings()
		{
			base.AddElementMapping( "EventActivityTemplateMeetingEntity", "Falcon", @"dbo", "TblEventActivityTemplateMeeting", 9 );
			base.AddElementFieldMapping( "EventActivityTemplateMeetingEntity", "EventActivityTemplateMeetingId", "EventActivityTemplateMeetingID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventActivityTemplateMeetingEntity", "EventActivityTemplateId", "EventActivityTemplateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventActivityTemplateMeetingEntity", "Subject", "Subject", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "EventActivityTemplateMeetingEntity", "Notes", "Notes", true, (int)SqlDbType.VarChar, 2000, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "EventActivityTemplateMeetingEntity", "MeetingDay", "MeetingDay", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 4 );
			base.AddElementFieldMapping( "EventActivityTemplateMeetingEntity", "ForAfterEvent", "ForAfterEvent", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "EventActivityTemplateMeetingEntity", "ResponsibleRoleId", "ResponsibleRoleID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "EventActivityTemplateMeetingEntity", "ResponsibleEmailSpecified", "ResponsibleEmailSpecified", true, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "EventActivityTemplateMeetingEntity", "ResponsibleOrgRoleUserId", "ResponsibleOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
		}
		/// <summary>Inits EventActivityTemplateTaskEntity's mappings</summary>
		private void InitEventActivityTemplateTaskEntityMappings()
		{
			base.AddElementMapping( "EventActivityTemplateTaskEntity", "Falcon", @"dbo", "TblEventActivityTemplateTask", 9 );
			base.AddElementFieldMapping( "EventActivityTemplateTaskEntity", "EventActivityTemplateTaskId", "EventActivityTemplateTaskID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventActivityTemplateTaskEntity", "EventActivityTemplateId", "EventActivityTemplateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventActivityTemplateTaskEntity", "Subject", "Subject", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "EventActivityTemplateTaskEntity", "Notes", "Notes", true, (int)SqlDbType.VarChar, 2000, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "EventActivityTemplateTaskEntity", "TaskDuration", "TaskDuration", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 4 );
			base.AddElementFieldMapping( "EventActivityTemplateTaskEntity", "ForAfterEvent", "ForAfterEvent", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "EventActivityTemplateTaskEntity", "ResponsibleRoleId", "ResponsibleRoleID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "EventActivityTemplateTaskEntity", "ResponsibleEmailSpecified", "ResponsibleEmailSpecified", true, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "EventActivityTemplateTaskEntity", "ResponsibleOrgRoleUserId", "ResponsibleOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
		}
		/// <summary>Inits EventAffiliateDetailsEntity's mappings</summary>
		private void InitEventAffiliateDetailsEntityMappings()
		{
			base.AddElementMapping( "EventAffiliateDetailsEntity", "Falcon", @"dbo", "TblEventAffiliateDetails", 10 );
			base.AddElementFieldMapping( "EventAffiliateDetailsEntity", "EventAffiliateId", "EventAffiliateID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventAffiliateDetailsEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventAffiliateDetailsEntity", "AffiliateId", "AffiliateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "EventAffiliateDetailsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "EventAffiliateDetailsEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "EventAffiliateDetailsEntity", "CampaignId", "CampaignID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "EventAffiliateDetailsEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "EventAffiliateDetailsEntity", "IsAdvocate", "IsAdvocate", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "EventAffiliateDetailsEntity", "IsHost", "IsHost", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
			base.AddElementFieldMapping( "EventAffiliateDetailsEntity", "IsSalesRep", "IsSalesRep", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 9 );
		}
		/// <summary>Inits EventAppointmentEntity's mappings</summary>
		private void InitEventAppointmentEntityMappings()
		{
			base.AddElementMapping( "EventAppointmentEntity", "Falcon", @"dbo", "TblEventAppointment", 9 );
			base.AddElementFieldMapping( "EventAppointmentEntity", "AppointmentId", "AppointmentID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventAppointmentEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventAppointmentEntity", "StartTime", "StartTime", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "EventAppointmentEntity", "EndTime", "EndTime", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "EventAppointmentEntity", "CheckinTime", "CheckinTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "EventAppointmentEntity", "CheckoutTime", "CheckoutTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "EventAppointmentEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "EventAppointmentEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "EventAppointmentEntity", "ScheduledByOrgRoleUserId", "ScheduledByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
		}
		/// <summary>Inits EventAppointmentCancellationLogEntity's mappings</summary>
		private void InitEventAppointmentCancellationLogEntityMappings()
		{
			base.AddElementMapping( "EventAppointmentCancellationLogEntity", "Falcon", @"dbo", "TblEventAppointmentCancellationLog", 9 );
			base.AddElementFieldMapping( "EventAppointmentCancellationLogEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventAppointmentCancellationLogEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventAppointmentCancellationLogEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "EventAppointmentCancellationLogEntity", "ReasonId", "ReasonId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "EventAppointmentCancellationLogEntity", "NoteId", "NoteId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "EventAppointmentCancellationLogEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "EventAppointmentCancellationLogEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "EventAppointmentCancellationLogEntity", "RefundRequestId", "RefundRequestId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "EventAppointmentCancellationLogEntity", "SubReasonId", "SubReasonId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
		}
		/// <summary>Inits EventAppointmentChangeLogEntity's mappings</summary>
		private void InitEventAppointmentChangeLogEntityMappings()
		{
			base.AddElementMapping( "EventAppointmentChangeLogEntity", "Falcon", @"dbo", "TblEventAppointmentChangeLog", 11 );
			base.AddElementFieldMapping( "EventAppointmentChangeLogEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventAppointmentChangeLogEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventAppointmentChangeLogEntity", "OldEventId", "OldEventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "EventAppointmentChangeLogEntity", "OldAppointmentTime", "OldAppointmentTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "EventAppointmentChangeLogEntity", "NewEventId", "NewEventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "EventAppointmentChangeLogEntity", "NewAppointmentTime", "NewAppointmentTime", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "EventAppointmentChangeLogEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "EventAppointmentChangeLogEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "EventAppointmentChangeLogEntity", "ReasonId", "ReasonId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "EventAppointmentChangeLogEntity", "Notes", "Notes", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "EventAppointmentChangeLogEntity", "SubReasonId", "SubReasonId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
		}
		/// <summary>Inits EventCallDetailsEntity's mappings</summary>
		private void InitEventCallDetailsEntityMappings()
		{
			base.AddElementMapping( "EventCallDetailsEntity", "Falcon", @"dbo", "TblEventCallDetails", 2 );
			base.AddElementFieldMapping( "EventCallDetailsEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCallDetailsEntity", "CallId", "CallID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits EventCampaignDetailsEntity's mappings</summary>
		private void InitEventCampaignDetailsEntityMappings()
		{
			base.AddElementMapping( "EventCampaignDetailsEntity", "Falcon", @"dbo", "TblEventCampaignDetails", 8 );
			base.AddElementFieldMapping( "EventCampaignDetailsEntity", "EventCampaignId", "EventCampaignID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCampaignDetailsEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventCampaignDetailsEntity", "AffiliateId", "AffiliateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "EventCampaignDetailsEntity", "CampaignId", "CampaignID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "EventCampaignDetailsEntity", "MarketingPrintOrderItemId", "MarketingPrintOrderItemID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "EventCampaignDetailsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "EventCampaignDetailsEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "EventCampaignDetailsEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
		}
		/// <summary>Inits EventChecklistTemplateEntity's mappings</summary>
		private void InitEventChecklistTemplateEntityMappings()
		{
			base.AddElementMapping( "EventChecklistTemplateEntity", "Falcon", @"dbo", "TblEventChecklistTemplate", 2 );
			base.AddElementFieldMapping( "EventChecklistTemplateEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventChecklistTemplateEntity", "ChecklistTemplateId", "ChecklistTemplateId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits EventCouponsEntity's mappings</summary>
		private void InitEventCouponsEntityMappings()
		{
			base.AddElementMapping( "EventCouponsEntity", "Falcon", @"dbo", "TblEventCoupons", 2 );
			base.AddElementFieldMapping( "EventCouponsEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCouponsEntity", "CouponId", "CouponID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits EventCustomerBarrierEntity's mappings</summary>
		private void InitEventCustomerBarrierEntityMappings()
		{
			base.AddElementMapping( "EventCustomerBarrierEntity", "Falcon", @"dbo", "TblEventCustomerBarrier", 4 );
			base.AddElementFieldMapping( "EventCustomerBarrierEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCustomerBarrierEntity", "BarrierId", "BarrierId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventCustomerBarrierEntity", "Reason", "Reason", false, (int)SqlDbType.VarChar, 1020, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "EventCustomerBarrierEntity", "Resolution", "Resolution", true, (int)SqlDbType.VarChar, 2040, 0, 0, false, "", null, typeof(System.String), 3 );
		}
		/// <summary>Inits EventCustomerBasicBioMetricEntity's mappings</summary>
		private void InitEventCustomerBasicBioMetricEntityMappings()
		{
			base.AddElementMapping( "EventCustomerBasicBioMetricEntity", "Falcon", @"dbo", "TblEventCustomerBasicBioMetric", 9 );
			base.AddElementFieldMapping( "EventCustomerBasicBioMetricEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCustomerBasicBioMetricEntity", "SystolicPressure", "SystolicPressure", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 1 );
			base.AddElementFieldMapping( "EventCustomerBasicBioMetricEntity", "DiastolicPressure", "DiastolicPressure", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 2 );
			base.AddElementFieldMapping( "EventCustomerBasicBioMetricEntity", "IsRightArmBpMeasurement", "IsRightArmBpMeasurement", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "EventCustomerBasicBioMetricEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "EventCustomerBasicBioMetricEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "EventCustomerBasicBioMetricEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "EventCustomerBasicBioMetricEntity", "IsBloodPressureElevated", "IsBloodPressureElevated", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "EventCustomerBasicBioMetricEntity", "PulseRate", "PulseRate", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 8 );
		}
		/// <summary>Inits EventCustomerCriticalQuestionEntity's mappings</summary>
		private void InitEventCustomerCriticalQuestionEntityMappings()
		{
			base.AddElementMapping( "EventCustomerCriticalQuestionEntity", "Falcon", @"dbo", "TblEventCustomerCriticalQuestion", 4 );
			base.AddElementFieldMapping( "EventCustomerCriticalQuestionEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCustomerCriticalQuestionEntity", "QuestionId", "QuestionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventCustomerCriticalQuestionEntity", "Answer", "Answer", false, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "EventCustomerCriticalQuestionEntity", "Note", "Note", true, (int)SqlDbType.NVarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 3 );
		}
		/// <summary>Inits EventCustomerCurrentMedicationEntity's mappings</summary>
		private void InitEventCustomerCurrentMedicationEntityMappings()
		{
			base.AddElementMapping( "EventCustomerCurrentMedicationEntity", "Falcon", @"dbo", "TblEventCustomerCurrentMedication", 4 );
			base.AddElementFieldMapping( "EventCustomerCurrentMedicationEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCustomerCurrentMedicationEntity", "NdcId", "NdcId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventCustomerCurrentMedicationEntity", "IsPrescribed", "IsPrescribed", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
			base.AddElementFieldMapping( "EventCustomerCurrentMedicationEntity", "IsOtc", "IsOtc", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
		}
		/// <summary>Inits EventCustomerCustomNotificationEntity's mappings</summary>
		private void InitEventCustomerCustomNotificationEntityMappings()
		{
			base.AddElementMapping( "EventCustomerCustomNotificationEntity", "Falcon", @"dbo", "TblEventCustomerCustomNotification", 3 );
			base.AddElementFieldMapping( "EventCustomerCustomNotificationEntity", "CustomEventNotificationId", "CustomEventNotificationId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCustomerCustomNotificationEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventCustomerCustomNotificationEntity", "Message", "Message", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 2 );
		}
		/// <summary>Inits EventCustomerDiagnosisEntity's mappings</summary>
		private void InitEventCustomerDiagnosisEntityMappings()
		{
			base.AddElementMapping( "EventCustomerDiagnosisEntity", "Falcon", @"dbo", "TblEventCustomerDiagnosis", 12 );
			base.AddElementFieldMapping( "EventCustomerDiagnosisEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCustomerDiagnosisEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventCustomerDiagnosisEntity", "Diagnosis", "Diagnosis", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "EventCustomerDiagnosisEntity", "Accepted", "Accepted", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "EventCustomerDiagnosisEntity", "ClinicalMonitor", "ClinicalMonitor", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "EventCustomerDiagnosisEntity", "ClinicalEvaluation", "ClinicalEvaluation", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "EventCustomerDiagnosisEntity", "ClinicalAssessment", "ClinicalAssessment", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "EventCustomerDiagnosisEntity", "ClinicalTreatment", "ClinicalTreatment", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "EventCustomerDiagnosisEntity", "ClinicalComment", "ClinicalComment", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "EventCustomerDiagnosisEntity", "Icd", "Icd", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "EventCustomerDiagnosisEntity", "IsIcd10", "IsIcd10", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 10 );
			base.AddElementFieldMapping( "EventCustomerDiagnosisEntity", "DateCreated", "DateCreated", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
		}
		/// <summary>Inits EventCustomerEligibilityEntity's mappings</summary>
		private void InitEventCustomerEligibilityEntityMappings()
		{
			base.AddElementMapping( "EventCustomerEligibilityEntity", "Falcon", @"dbo", "TblEventCustomerEligibility", 3 );
			base.AddElementFieldMapping( "EventCustomerEligibilityEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCustomerEligibilityEntity", "EligibilityId", "EligibilityId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventCustomerEligibilityEntity", "ChargeCardId", "ChargeCardId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
		}
		/// <summary>Inits EventCustomerEncounterEntity's mappings</summary>
		private void InitEventCustomerEncounterEntityMappings()
		{
			base.AddElementMapping( "EventCustomerEncounterEntity", "Falcon", @"dbo", "TblEventCustomerEncounter", 2 );
			base.AddElementFieldMapping( "EventCustomerEncounterEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCustomerEncounterEntity", "EncounterId", "EncounterId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits EventCustomerEvaluationLockEntity's mappings</summary>
		private void InitEventCustomerEvaluationLockEntityMappings()
		{
			base.AddElementMapping( "EventCustomerEvaluationLockEntity", "Falcon", @"dbo", "TblEventCustomerEvaluationLock", 3 );
			base.AddElementFieldMapping( "EventCustomerEvaluationLockEntity", "EventCustomerId", "EventCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCustomerEvaluationLockEntity", "PhysicianId", "PhysicianID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventCustomerEvaluationLockEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
		}
		/// <summary>Inits EventCustomerGiftCardEntity's mappings</summary>
		private void InitEventCustomerGiftCardEntityMappings()
		{
			base.AddElementMapping( "EventCustomerGiftCardEntity", "Falcon", @"dbo", "TblEventCustomerGiftCard", 9 );
			base.AddElementFieldMapping( "EventCustomerGiftCardEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCustomerGiftCardEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventCustomerGiftCardEntity", "GiftCardReceived", "GiftCardReceived", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
			base.AddElementFieldMapping( "EventCustomerGiftCardEntity", "PatientSignatureFileId", "PatientSignatureFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "EventCustomerGiftCardEntity", "TechnicianSignatureFileId", "TechnicianSignatureFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "EventCustomerGiftCardEntity", "Version", "Version", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 5 );
			base.AddElementFieldMapping( "EventCustomerGiftCardEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "EventCustomerGiftCardEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "EventCustomerGiftCardEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
		}
		/// <summary>Inits EventCustomerIcdCodesEntity's mappings</summary>
		private void InitEventCustomerIcdCodesEntityMappings()
		{
			base.AddElementMapping( "EventCustomerIcdCodesEntity", "Falcon", @"dbo", "TblEventCustomerIcdCodes", 2 );
			base.AddElementFieldMapping( "EventCustomerIcdCodesEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCustomerIcdCodesEntity", "IcdCodeId", "IcdCodeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits EventCustomerNotificationEntity's mappings</summary>
		private void InitEventCustomerNotificationEntityMappings()
		{
			base.AddElementMapping( "EventCustomerNotificationEntity", "Falcon", @"dbo", "TblEventCustomerNotification", 3 );
			base.AddElementFieldMapping( "EventCustomerNotificationEntity", "EventCustomerId", "EventCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCustomerNotificationEntity", "NotificationId", "NotificationID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventCustomerNotificationEntity", "NotificationTypeId", "NotificationTypeId", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 2 );
		}
		/// <summary>Inits EventCustomerOrderDetailEntity's mappings</summary>
		private void InitEventCustomerOrderDetailEntityMappings()
		{
			base.AddElementMapping( "EventCustomerOrderDetailEntity", "Falcon", @"dbo", "TblEventCustomerOrderDetail", 3 );
			base.AddElementFieldMapping( "EventCustomerOrderDetailEntity", "OrderDetailId", "OrderDetailID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCustomerOrderDetailEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventCustomerOrderDetailEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
		}
		/// <summary>Inits EventCustomerPaymentEntity's mappings</summary>
		private void InitEventCustomerPaymentEntityMappings()
		{
			base.AddElementMapping( "EventCustomerPaymentEntity", "Falcon", @"dbo", "vw_EventCustomerPayment", 9 );
			base.AddElementFieldMapping( "EventCustomerPaymentEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCustomerPaymentEntity", "OrderId", "OrderId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventCustomerPaymentEntity", "OrderCost", "OrderCost", false, (int)SqlDbType.Money, 0, 4, 19, false, "", null, typeof(System.Decimal), 2 );
			base.AddElementFieldMapping( "EventCustomerPaymentEntity", "OrderTotal", "OrderTotal", false, (int)SqlDbType.Money, 0, 4, 19, false, "", null, typeof(System.Decimal), 3 );
			base.AddElementFieldMapping( "EventCustomerPaymentEntity", "NetPayment", "NetPayment", false, (int)SqlDbType.Decimal, 0, 4, 38, false, "", null, typeof(System.Decimal), 4 );
			base.AddElementFieldMapping( "EventCustomerPaymentEntity", "DiscountAmount", "DiscountAmount", false, (int)SqlDbType.Money, 0, 4, 19, false, "", null, typeof(System.Decimal), 5 );
			base.AddElementFieldMapping( "EventCustomerPaymentEntity", "IsShipping", "IsShipping", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 6 );
			base.AddElementFieldMapping( "EventCustomerPaymentEntity", "IsPaid", "IsPaid", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 7 );
			base.AddElementFieldMapping( "EventCustomerPaymentEntity", "CouponCode", "CouponCode", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 8 );
		}
		/// <summary>Inits EventCustomerPdfgenerationErrorLogEntity's mappings</summary>
		private void InitEventCustomerPdfgenerationErrorLogEntityMappings()
		{
			base.AddElementMapping( "EventCustomerPdfgenerationErrorLogEntity", "Falcon", @"dbo", "TblEventCustomerPDFGenerationErrorLog", 4 );
			base.AddElementFieldMapping( "EventCustomerPdfgenerationErrorLogEntity", "ErrorLogId", "ErrorLogId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCustomerPdfgenerationErrorLogEntity", "ErrorMessage", "ErrorMessage", false, (int)SqlDbType.NVarChar, 2000, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "EventCustomerPdfgenerationErrorLogEntity", "IsRectified", "IsRectified", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
			base.AddElementFieldMapping( "EventCustomerPdfgenerationErrorLogEntity", "EventCustomerResultId", "EventCustomerResultId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
		}
		/// <summary>Inits EventCustomerPreApprovedPackageTestEntity's mappings</summary>
		private void InitEventCustomerPreApprovedPackageTestEntityMappings()
		{
			base.AddElementMapping( "EventCustomerPreApprovedPackageTestEntity", "Falcon", @"dbo", "TblEventCustomerPreApprovedPackageTest", 3 );
			base.AddElementFieldMapping( "EventCustomerPreApprovedPackageTestEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCustomerPreApprovedPackageTestEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventCustomerPreApprovedPackageTestEntity", "PackageId", "PackageId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
		}
		/// <summary>Inits EventCustomerPreApprovedTestEntity's mappings</summary>
		private void InitEventCustomerPreApprovedTestEntityMappings()
		{
			base.AddElementMapping( "EventCustomerPreApprovedTestEntity", "Falcon", @"dbo", "TblEventCustomerPreApprovedTest", 2 );
			base.AddElementFieldMapping( "EventCustomerPreApprovedTestEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCustomerPreApprovedTestEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits EventCustomerPrimaryCarePhysicianEntity's mappings</summary>
		private void InitEventCustomerPrimaryCarePhysicianEntityMappings()
		{
			base.AddElementMapping( "EventCustomerPrimaryCarePhysicianEntity", "Falcon", @"dbo", "TblEventCustomerPrimaryCarePhysician", 5 );
			base.AddElementFieldMapping( "EventCustomerPrimaryCarePhysicianEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCustomerPrimaryCarePhysicianEntity", "PrimaryCarePhysicianId", "PrimaryCarePhysicianId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventCustomerPrimaryCarePhysicianEntity", "IsPcpAddressVerified", "IsPcpAddressVerified", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
			base.AddElementFieldMapping( "EventCustomerPrimaryCarePhysicianEntity", "PcpAddressVerifiedBy", "PcpAddressVerifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "EventCustomerPrimaryCarePhysicianEntity", "PcpAddressVerifiedOn", "PcpAddressVerifiedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
		}
		/// <summary>Inits EventCustomerQuestionAnswerEntity's mappings</summary>
		private void InitEventCustomerQuestionAnswerEntityMappings()
		{
			base.AddElementMapping( "EventCustomerQuestionAnswerEntity", "Falcon", @"dbo", "TblEventCustomerQuestionAnswer", 11 );
			base.AddElementFieldMapping( "EventCustomerQuestionAnswerEntity", "EventCustomerId", "EventCustomerId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCustomerQuestionAnswerEntity", "QuestionId", "QuestionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventCustomerQuestionAnswerEntity", "Answer", "Answer", true, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "EventCustomerQuestionAnswerEntity", "Version", "Version", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "EventCustomerQuestionAnswerEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "EventCustomerQuestionAnswerEntity", "CreatedBy", "CreatedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "EventCustomerQuestionAnswerEntity", "CreatedDate", "CreatedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "EventCustomerQuestionAnswerEntity", "UpdatedBy", "UpdatedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "EventCustomerQuestionAnswerEntity", "UpdatedDate", "UpdatedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "EventCustomerQuestionAnswerEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "EventCustomerQuestionAnswerEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
		}
		/// <summary>Inits EventCustomerRequiredTestEntity's mappings</summary>
		private void InitEventCustomerRequiredTestEntityMappings()
		{
			base.AddElementMapping( "EventCustomerRequiredTestEntity", "Falcon", @"dbo", "TblEventCustomerRequiredTest", 2 );
			base.AddElementFieldMapping( "EventCustomerRequiredTestEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCustomerRequiredTestEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits EventCustomerResultEntity's mappings</summary>
		private void InitEventCustomerResultEntityMappings()
		{
			base.AddElementMapping( "EventCustomerResultEntity", "Falcon", @"dbo", "TblEventCustomerResult", 31 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "EventCustomerResultId", "EventCustomerResultId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "IsClinicalFormGenerated", "IsClinicalFormGenerated", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "IsResultPdfgenerated", "IsResultPDFGenerated", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "ModifiedByOrgRoleUserId", "ModifiedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "ResultState", "ResultState", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 9 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "IsPartial", "IsPartial", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 10 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "ResultSummary", "ResultSummary", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 11 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "PathwayRecommendation", "PathwayRecommendation", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "RegenerationDate", "RegenerationDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 13 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "RegeneratedBy", "RegeneratedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 14 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "IsFasting", "IsFasting", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 15 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "IsRevertedToEvaluation", "IsRevertedToEvaluation", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 16 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "IsPennedBack", "IsPennedBack", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 17 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "SignedOffBy", "SignedOffBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 18 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "SignedOffOn", "SignedOffOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 19 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "VerifiedBy", "VerifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 20 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "VerifiedOn", "VerifiedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 21 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "CodedBy", "CodedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 22 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "CodedOn", "CodedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 23 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "AcesApprovedOn", "AcesApprovedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 24 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "InvoiceDateUpdatedBy", "InvoiceDateUpdatedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 25 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "IsIpResultGenerated", "IsIpResultGenerated", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 26 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "ChatPdfReviewedByPhysicianId", "ChatPdfReviewedByPhysicianId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 27 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "ChatPdfReviewedByPhysicianDate", "ChatPdfReviewedByPhysicianDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 28 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "ChatPdfReviewedByOverreadPhysicianId", "ChatPdfReviewedByOverreadPhysicianId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 29 );
			base.AddElementFieldMapping( "EventCustomerResultEntity", "ChatPdfReviewedByOverreadPhysicianDate", "ChatPdfReviewedByOverreadPhysicianDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 30 );
		}
		/// <summary>Inits EventCustomerResultBloodLabEntity's mappings</summary>
		private void InitEventCustomerResultBloodLabEntityMappings()
		{
			base.AddElementMapping( "EventCustomerResultBloodLabEntity", "Falcon", @"dbo", "TblEventCustomerResultBloodLab", 5 );
			base.AddElementFieldMapping( "EventCustomerResultBloodLabEntity", "EventCustomerResultId", "EventCustomerResultId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCustomerResultBloodLabEntity", "IsFromNewLab", "IsFromNewLab", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 1 );
			base.AddElementFieldMapping( "EventCustomerResultBloodLabEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "EventCustomerResultBloodLabEntity", "CreatedByOrgRoleUserid", "CreatedByOrgRoleUserid", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "EventCustomerResultBloodLabEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
		}
		/// <summary>Inits EventCustomerResultBloodLabParserEntity's mappings</summary>
		private void InitEventCustomerResultBloodLabParserEntityMappings()
		{
			base.AddElementMapping( "EventCustomerResultBloodLabParserEntity", "Falcon", @"dbo", "TblEventCustomerResultBloodLabParser", 3 );
			base.AddElementFieldMapping( "EventCustomerResultBloodLabParserEntity", "EventCustomerResultId", "EventCustomerResultId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCustomerResultBloodLabParserEntity", "BloodLabId", "BloodLabId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventCustomerResultBloodLabParserEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
		}
		/// <summary>Inits EventCustomerResultHistoryEntity's mappings</summary>
		private void InitEventCustomerResultHistoryEntityMappings()
		{
			base.AddElementMapping( "EventCustomerResultHistoryEntity", "Falcon", @"dbo", "TblEventCustomerResultHistory", 32 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "EventCustomerResultId", "EventCustomerResultId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "IsClinicalFormGenerated", "IsClinicalFormGenerated", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "IsResultPdfgenerated", "IsResultPDFGenerated", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "ModifiedByOrgRoleUserId", "ModifiedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "ResultState", "ResultState", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 10 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "IsPartial", "IsPartial", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 11 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "ResultSummary", "ResultSummary", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "PathwayRecommendation", "PathwayRecommendation", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 13 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "RegenerationDate", "RegenerationDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 14 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "RegeneratedBy", "RegeneratedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 15 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "IsFasting", "IsFasting", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 16 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "IsRevertedToEvaluation", "IsRevertedToEvaluation", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 17 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "IsPennedBack", "IsPennedBack", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 18 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "SignedOffBy", "SignedOffBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 19 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "SignedOffOn", "SignedOffOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 20 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "VerifiedBy", "VerifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 21 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "VerifiedOn", "VerifiedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 22 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "CodedBy", "CodedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 23 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "CodedOn", "CodedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 24 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "AcesApprovedOn", "AcesApprovedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 25 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "InvoiceDateUpdatedBy", "InvoiceDateUpdatedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 26 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "IsIpResultGenerated", "IsIpResultGenerated", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 27 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "ChatPdfReviewedByPhysicianId", "ChatPdfReviewedByPhysicianId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 28 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "ChatPdfReviewedByPhysicianDate", "ChatPdfReviewedByPhysicianDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 29 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "ChatPdfReviewedByOverreadPhysicianId", "ChatPdfReviewedByOverreadPhysicianId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 30 );
			base.AddElementFieldMapping( "EventCustomerResultHistoryEntity", "ChatPdfReviewedByOverreadPhysicianDate", "ChatPdfReviewedByOverreadPhysicianDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 31 );
		}
		/// <summary>Inits EventCustomerResultTraleEntity's mappings</summary>
		private void InitEventCustomerResultTraleEntityMappings()
		{
			base.AddElementMapping( "EventCustomerResultTraleEntity", "Falcon", @"dbo", "TblEventCustomerResultTrale", 3 );
			base.AddElementFieldMapping( "EventCustomerResultTraleEntity", "EventCustomerResultId", "EventCustomerResultId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCustomerResultTraleEntity", "ResponseId", "ResponseId", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "EventCustomerResultTraleEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
		}
		/// <summary>Inits EventCustomerRetestEntity's mappings</summary>
		private void InitEventCustomerRetestEntityMappings()
		{
			base.AddElementMapping( "EventCustomerRetestEntity", "Falcon", @"dbo", "TblEventCustomerRetest", 5 );
			base.AddElementFieldMapping( "EventCustomerRetestEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCustomerRetestEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventCustomerRetestEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "EventCustomerRetestEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "EventCustomerRetestEntity", "MailSentDate", "MailSentDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
		}
		/// <summary>Inits EventCustomersEntity's mappings</summary>
		private void InitEventCustomersEntityMappings()
		{
			base.AddElementMapping( "EventCustomersEntity", "Falcon", @"dbo", "TblEventCustomers", 42 );
			base.AddElementFieldMapping( "EventCustomersEntity", "EventCustomerId", "EventCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCustomersEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventCustomersEntity", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "EventCustomersEntity", "IsPaymentOnline", "IsPaymentOnline", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "EventCustomersEntity", "AppointmentId", "AppointmentID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "EventCustomersEntity", "IsTestConducted", "IsTestConducted", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "EventCustomersEntity", "BMailReports", "bMailReports", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "EventCustomersEntity", "Notes", "Notes", true, (int)SqlDbType.VarChar, 5000, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "EventCustomersEntity", "NoShow", "NoShow", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
			base.AddElementFieldMapping( "EventCustomersEntity", "DateCreated", "DateCreated", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "EventCustomersEntity", "OfflineCustomerId", "OfflineCustomerID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
			base.AddElementFieldMapping( "EventCustomersEntity", "AffiliateCampaignId", "AffiliateCampaignID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 11 );
			base.AddElementFieldMapping( "EventCustomersEntity", "SignInSource", "SignInSource", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "EventCustomersEntity", "AdvocateId", "AdvocateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 13 );
			base.AddElementFieldMapping( "EventCustomersEntity", "Hipaastatus", "HIPAAStatus", false, (int)SqlDbType.SmallInt, 0, 0, 5, false, "", null, typeof(System.Int16), 14 );
			base.AddElementFieldMapping( "EventCustomersEntity", "MarketingSource", "MarketingSource", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 15 );
			base.AddElementFieldMapping( "EventCustomersEntity", "ClickId", "ClickID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 16 );
			base.AddElementFieldMapping( "EventCustomersEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 17 );
			base.AddElementFieldMapping( "EventCustomersEntity", "PartnerRelease", "PartnerRelease", false, (int)SqlDbType.SmallInt, 0, 0, 5, false, "", null, typeof(System.Int16), 18 );
			base.AddElementFieldMapping( "EventCustomersEntity", "HospitalFacilityId", "HospitalFacilityId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 19 );
			base.AddElementFieldMapping( "EventCustomersEntity", "AbnStatus", "ABNStatus", false, (int)SqlDbType.SmallInt, 0, 0, 5, false, "", null, typeof(System.Int16), 20 );
			base.AddElementFieldMapping( "EventCustomersEntity", "PcpConsentStatus", "PCPConsentStatus", false, (int)SqlDbType.SmallInt, 0, 0, 5, false, "", null, typeof(System.Int16), 21 );
			base.AddElementFieldMapping( "EventCustomersEntity", "InsuranceReleaseStatus", "InsuranceReleaseStatus", false, (int)SqlDbType.SmallInt, 0, 0, 5, false, "", null, typeof(System.Int16), 22 );
			base.AddElementFieldMapping( "EventCustomersEntity", "CampaignId", "CampaignId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 23 );
			base.AddElementFieldMapping( "EventCustomersEntity", "AwvVisitId", "AwvVisitId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 24 );
			base.AddElementFieldMapping( "EventCustomersEntity", "LeftWithoutScreeningReasonId", "LeftWithoutScreeningReasonId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 25 );
			base.AddElementFieldMapping( "EventCustomersEntity", "EnableTexting", "EnableTexting", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 26 );
			base.AddElementFieldMapping( "EventCustomersEntity", "IsGiftCertificateDelivered", "IsGiftCertificateDelivered", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 27 );
			base.AddElementFieldMapping( "EventCustomersEntity", "GiftCode", "GiftCode", true, (int)SqlDbType.NVarChar, 512, 0, 0, false, "", null, typeof(System.String), 28 );
			base.AddElementFieldMapping( "EventCustomersEntity", "PatientDetailId", "PatientDetailId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 29 );
			base.AddElementFieldMapping( "EventCustomersEntity", "LeftWithoutScreeningNotesId", "LeftWithoutScreeningNotesId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 30 );
			base.AddElementFieldMapping( "EventCustomersEntity", "CustomerProfileHistoryId", "CustomerProfileHistoryId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 31 );
			base.AddElementFieldMapping( "EventCustomersEntity", "IsAppointmentConfirmed", "IsAppointmentConfirmed", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 32 );
			base.AddElementFieldMapping( "EventCustomersEntity", "ConfirmedBy", "ConfirmedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 33 );
			base.AddElementFieldMapping( "EventCustomersEntity", "IsForRetest", "IsForRetest", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 34 );
			base.AddElementFieldMapping( "EventCustomersEntity", "PreferredContactType", "PreferredContactType", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 35 );
			base.AddElementFieldMapping( "EventCustomersEntity", "GcNotGivenReasonId", "GcNotGivenReasonId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 36 );
			base.AddElementFieldMapping( "EventCustomersEntity", "NoShowDate", "NoShowDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 37 );
			base.AddElementFieldMapping( "EventCustomersEntity", "SingleTestOverride", "SingleTestOverride", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 38 );
			base.AddElementFieldMapping( "EventCustomersEntity", "IsParticipationConsentSigned", "IsParticipationConsentSigned", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 39 );
			base.AddElementFieldMapping( "EventCustomersEntity", "IsPhysicianRecordRequestSigned", "IsPhysicianRecordRequestSigned", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 40 );
			base.AddElementFieldMapping( "EventCustomersEntity", "IsFluVaccineConsentSigned", "IsFluVaccineConsentSigned", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 41 );
		}
		/// <summary>Inits EventCustomerTestNotPerformedNotificationEntity's mappings</summary>
		private void InitEventCustomerTestNotPerformedNotificationEntityMappings()
		{
			base.AddElementMapping( "EventCustomerTestNotPerformedNotificationEntity", "Falcon", @"dbo", "TblEventCustomerTestNotPerformedNotification", 6 );
			base.AddElementFieldMapping( "EventCustomerTestNotPerformedNotificationEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventCustomerTestNotPerformedNotificationEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventCustomerTestNotPerformedNotificationEntity", "NotificationTypeId", "NotificationTypeId", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 2 );
			base.AddElementFieldMapping( "EventCustomerTestNotPerformedNotificationEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "EventCustomerTestNotPerformedNotificationEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "EventCustomerTestNotPerformedNotificationEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
		}
		/// <summary>Inits EventFluConsentTemplateEntity's mappings</summary>
		private void InitEventFluConsentTemplateEntityMappings()
		{
			base.AddElementMapping( "EventFluConsentTemplateEntity", "Falcon", @"dbo", "TblEventFluConsentTemplate", 2 );
			base.AddElementFieldMapping( "EventFluConsentTemplateEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventFluConsentTemplateEntity", "TemplateId", "TemplateId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits EventHospitalFacilityEntity's mappings</summary>
		private void InitEventHospitalFacilityEntityMappings()
		{
			base.AddElementMapping( "EventHospitalFacilityEntity", "Falcon", @"dbo", "TblEventHospitalFacility", 2 );
			base.AddElementFieldMapping( "EventHospitalFacilityEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventHospitalFacilityEntity", "HospitalFacilityId", "HospitalFacilityId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits EventHospitalPartnerEntity's mappings</summary>
		private void InitEventHospitalPartnerEntityMappings()
		{
			base.AddElementMapping( "EventHospitalPartnerEntity", "Falcon", @"dbo", "TblEventHospitalPartner", 5 );
			base.AddElementFieldMapping( "EventHospitalPartnerEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventHospitalPartnerEntity", "HospitalPartnerId", "HospitalPartnerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventHospitalPartnerEntity", "AttachHospitalMaterial", "AttachHospitalMaterial", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
			base.AddElementFieldMapping( "EventHospitalPartnerEntity", "CaptureSsn", "CaptureSsn", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "EventHospitalPartnerEntity", "RestrictEvaluation", "RestrictEvaluation", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
		}
		/// <summary>Inits EventHostPromotionsEntity's mappings</summary>
		private void InitEventHostPromotionsEntityMappings()
		{
			base.AddElementMapping( "EventHostPromotionsEntity", "Falcon", @"dbo", "TblEventHostPromotions", 26 );
			base.AddElementFieldMapping( "EventHostPromotionsEntity", "EventPromotionId", "EventPromotionID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventHostPromotionsEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventHostPromotionsEntity", "BHostAllowPostersAndFlyers", "bHostAllowPostersAndFlyers", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
			base.AddElementFieldMapping( "EventHostPromotionsEntity", "TotalPosters", "TotalPosters", true, (int)SqlDbType.Decimal, 0, 0, 18, false, "", null, typeof(System.Decimal), 3 );
			base.AddElementFieldMapping( "EventHostPromotionsEntity", "TotalHostPosters", "TotalHostPosters", true, (int)SqlDbType.Decimal, 0, 0, 18, false, "", null, typeof(System.Decimal), 4 );
			base.AddElementFieldMapping( "EventHostPromotionsEntity", "TotalRepPosters", "TotalRepPosters", true, (int)SqlDbType.Decimal, 0, 0, 18, false, "", null, typeof(System.Decimal), 5 );
			base.AddElementFieldMapping( "EventHostPromotionsEntity", "BPosterPlacementDiscussedWithHost", "bPosterPlacementDiscussedWithHost", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "EventHostPromotionsEntity", "BHostWillPostAnnouncement", "bHostWillPostAnnouncement", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "EventHostPromotionsEntity", "BAnnouncementStartDate", "bAnnouncementStartDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "EventHostPromotionsEntity", "BAnnouncemcentEndDate", "bAnnouncemcentEndDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "EventHostPromotionsEntity", "BHostAllowBulletinInserts", "bHostAllowBulletinInserts", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 10 );
			base.AddElementFieldMapping( "EventHostPromotionsEntity", "BInsertDate1", "bInsertDate1", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "EventHostPromotionsEntity", "BInsertDate2", "bInsertDate2", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 12 );
			base.AddElementFieldMapping( "EventHostPromotionsEntity", "NumberofInserts", "NumberofInserts", true, (int)SqlDbType.Decimal, 0, 0, 18, false, "", null, typeof(System.Decimal), 13 );
			base.AddElementFieldMapping( "EventHostPromotionsEntity", "BHostAllowVerbalAnnnouncements", "bHostAllowVerbalAnnnouncements", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 14 );
			base.AddElementFieldMapping( "EventHostPromotionsEntity", "BVerbalAnnouncementByRepresentative", "bVerbalAnnouncementByRepresentative", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 15 );
			base.AddElementFieldMapping( "EventHostPromotionsEntity", "BVerbalAnnouncementBySalesRep", "bVerbalAnnouncementBySalesRep", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 16 );
			base.AddElementFieldMapping( "EventHostPromotionsEntity", "VerbalAnnouncementBySalesRepDate", "VerbalAnnouncementBySalesRepDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 17 );
			base.AddElementFieldMapping( "EventHostPromotionsEntity", "BHostAllowsDirectMailsToMembers", "bHostAllowsDirectMailsToMembers", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 18 );
			base.AddElementFieldMapping( "EventHostPromotionsEntity", "BProvidedWithMailingInformation", "bProvidedWithMailingInformation", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 19 );
			base.AddElementFieldMapping( "EventHostPromotionsEntity", "DirectMailingListArrivalDate", "DirectMailingListArrivalDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 20 );
			base.AddElementFieldMapping( "EventHostPromotionsEntity", "BHostAllowEmailingtheMembersOfTheOrganisation", "bHostAllowEmailingtheMembersOfTheOrganisation", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 21 );
			base.AddElementFieldMapping( "EventHostPromotionsEntity", "DateEmailsProvided", "DateEmailsProvided", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 22 );
			base.AddElementFieldMapping( "EventHostPromotionsEntity", "DateCreated", "DateCreated", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 23 );
			base.AddElementFieldMapping( "EventHostPromotionsEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 24 );
			base.AddElementFieldMapping( "EventHostPromotionsEntity", "IsActive", "IsActive", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 25 );
		}
		/// <summary>Inits EventMarketingOffersEntity's mappings</summary>
		private void InitEventMarketingOffersEntityMappings()
		{
			base.AddElementMapping( "EventMarketingOffersEntity", "Falcon", @"dbo", "TblEventMarketingOffers", 7 );
			base.AddElementFieldMapping( "EventMarketingOffersEntity", "EventMarketingOfferId", "EventMarketingOfferID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventMarketingOffersEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventMarketingOffersEntity", "MarketingOfferId", "MarketingOfferID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "EventMarketingOffersEntity", "NumberOfTimesUsed", "NumberOfTimesUsed", false, (int)SqlDbType.Decimal, 0, 0, 18, false, "", null, typeof(System.Decimal), 3 );
			base.AddElementFieldMapping( "EventMarketingOffersEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "EventMarketingOffersEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "EventMarketingOffersEntity", "IsActive", "IsActive", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
		}
		/// <summary>Inits EventMeetingDetailsEntity's mappings</summary>
		private void InitEventMeetingDetailsEntityMappings()
		{
			base.AddElementMapping( "EventMeetingDetailsEntity", "Falcon", @"dbo", "TblEventMeetingDetails", 2 );
			base.AddElementFieldMapping( "EventMeetingDetailsEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventMeetingDetailsEntity", "MeetingId", "MeetingID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits EventNoteEntity's mappings</summary>
		private void InitEventNoteEntityMappings()
		{
			base.AddElementMapping( "EventNoteEntity", "Falcon", @"dbo", "TblEventNote", 11 );
			base.AddElementFieldMapping( "EventNoteEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventNoteEntity", "Note", "Note", true, (int)SqlDbType.NVarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "EventNoteEntity", "HealthPlanId", "HealthPlanId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "EventNoteEntity", "EventDateFrom", "EventDateFrom", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "EventNoteEntity", "EventDateTo", "EventDateTo", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "EventNoteEntity", "IsPublished", "IsPublished", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "EventNoteEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "EventNoteEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "EventNoteEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "EventNoteEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "EventNoteEntity", "PodId", "PodId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
		}
		/// <summary>Inits EventNotesLogEntity's mappings</summary>
		private void InitEventNotesLogEntityMappings()
		{
			base.AddElementMapping( "EventNotesLogEntity", "Falcon", @"dbo", "TblEventNotesLog", 2 );
			base.AddElementFieldMapping( "EventNotesLogEntity", "EventNoteId", "EventNoteId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventNotesLogEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits EventNotificationEntity's mappings</summary>
		private void InitEventNotificationEntityMappings()
		{
			base.AddElementMapping( "EventNotificationEntity", "Falcon", @"dbo", "TblEventNotification", 3 );
			base.AddElementFieldMapping( "EventNotificationEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventNotificationEntity", "NotificationId", "NotificationId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventNotificationEntity", "IsForCorporateAccount", "IsForCorporateAccount", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
		}
		/// <summary>Inits EventPackageDetailsEntity's mappings</summary>
		private void InitEventPackageDetailsEntityMappings()
		{
			base.AddElementMapping( "EventPackageDetailsEntity", "Falcon", @"dbo", "TblEventPackageDetails", 17 );
			base.AddElementFieldMapping( "EventPackageDetailsEntity", "EventPackageId", "EventPackageID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventPackageDetailsEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventPackageDetailsEntity", "PackageId", "PackageID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "EventPackageDetailsEntity", "PackagePrice", "PackagePrice", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 3 );
			base.AddElementFieldMapping( "EventPackageDetailsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "EventPackageDetailsEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "EventPackageDetailsEntity", "AvailableThroughOnline", "AvailableThroughOnline", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "EventPackageDetailsEntity", "AvailableThroughCallCenter", "AvailableThroughCallCenter", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "EventPackageDetailsEntity", "AvailableThroughTechnician", "AvailableThroughTechnician", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
			base.AddElementFieldMapping( "EventPackageDetailsEntity", "AvailableThroughAdmin", "AvailableThroughAdmin", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 9 );
			base.AddElementFieldMapping( "EventPackageDetailsEntity", "ScreeningTime", "ScreeningTime", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 10 );
			base.AddElementFieldMapping( "EventPackageDetailsEntity", "HafTemplateId", "HAFTemplateId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 11 );
			base.AddElementFieldMapping( "EventPackageDetailsEntity", "IsRecommended", "IsRecommended", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 12 );
			base.AddElementFieldMapping( "EventPackageDetailsEntity", "Gender", "Gender", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 13 );
			base.AddElementFieldMapping( "EventPackageDetailsEntity", "MostPopular", "MostPopular", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 14 );
			base.AddElementFieldMapping( "EventPackageDetailsEntity", "BestValue", "BestValue", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 15 );
			base.AddElementFieldMapping( "EventPackageDetailsEntity", "PodRoomId", "PodRoomID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 16 );
		}
		/// <summary>Inits EventPackageOrderItemEntity's mappings</summary>
		private void InitEventPackageOrderItemEntityMappings()
		{
			base.AddElementMapping( "EventPackageOrderItemEntity", "Falcon", @"dbo", "TblEventPackageOrderItem", 2 );
			base.AddElementFieldMapping( "EventPackageOrderItemEntity", "OrderItemId", "OrderItemID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventPackageOrderItemEntity", "EventPackageId", "EventPackageID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits EventPackageTestEntity's mappings</summary>
		private void InitEventPackageTestEntityMappings()
		{
			base.AddElementMapping( "EventPackageTestEntity", "Falcon", @"dbo", "TblEventPackageTest", 6 );
			base.AddElementFieldMapping( "EventPackageTestEntity", "EventPackageId", "EventPackageId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventPackageTestEntity", "EventTestId", "EventTestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventPackageTestEntity", "Price", "Price", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 2 );
			base.AddElementFieldMapping( "EventPackageTestEntity", "RefundPrice", "RefundPrice", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 3 );
			base.AddElementFieldMapping( "EventPackageTestEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "EventPackageTestEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
		}
		/// <summary>Inits EventPaymentDetailsEntity's mappings</summary>
		private void InitEventPaymentDetailsEntityMappings()
		{
			base.AddElementMapping( "EventPaymentDetailsEntity", "Falcon", @"dbo", "TblEventPaymentDetails", 8 );
			base.AddElementFieldMapping( "EventPaymentDetailsEntity", "EventPaymentId", "EventPaymentID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventPaymentDetailsEntity", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventPaymentDetailsEntity", "PaymentId", "PaymentID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "EventPaymentDetailsEntity", "PayReceivedUserId", "PayReceivedUserID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "EventPaymentDetailsEntity", "IsOnsite", "IsOnsite", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "EventPaymentDetailsEntity", "EventPackageId", "EventPackageID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "EventPaymentDetailsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "EventPaymentDetailsEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
		}
		/// <summary>Inits EventPerformanceMailStatusEntity's mappings</summary>
		private void InitEventPerformanceMailStatusEntityMappings()
		{
			base.AddElementMapping( "EventPerformanceMailStatusEntity", "Falcon", @"dbo", "TblEventPerformanceMailStatus", 6 );
			base.AddElementFieldMapping( "EventPerformanceMailStatusEntity", "SalesRepEventId", "SalesRepEventID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventPerformanceMailStatusEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventPerformanceMailStatusEntity", "MailCount", "MailCount", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 2 );
			base.AddElementFieldMapping( "EventPerformanceMailStatusEntity", "DateCreated", "DateCreated", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "EventPerformanceMailStatusEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "EventPerformanceMailStatusEntity", "IsEventSlot", "IsEventSlot", false, (int)SqlDbType.TinyInt, 0, 0, 3, false, "", null, typeof(System.Byte), 5 );
		}
		/// <summary>Inits EventPhysicianTestEntity's mappings</summary>
		private void InitEventPhysicianTestEntityMappings()
		{
			base.AddElementMapping( "EventPhysicianTestEntity", "Falcon", @"dbo", "TblEventPhysicianTest", 8 );
			base.AddElementFieldMapping( "EventPhysicianTestEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventPhysicianTestEntity", "PhysicianId", "PhysicianId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventPhysicianTestEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "EventPhysicianTestEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "EventPhysicianTestEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "EventPhysicianTestEntity", "AssignedByOrgRoleUserId", "AssignedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "EventPhysicianTestEntity", "ModifiedByOrgRoleUserId", "ModifiedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "EventPhysicianTestEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
		}
		/// <summary>Inits EventPodEntity's mappings</summary>
		private void InitEventPodEntityMappings()
		{
			base.AddElementMapping( "EventPodEntity", "Falcon", @"dbo", "TblEventPod", 9 );
			base.AddElementFieldMapping( "EventPodEntity", "EventPodId", "EventPodID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventPodEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventPodEntity", "PodId", "PodID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "EventPodEntity", "TerritoryId", "TerritoryId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "EventPodEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "EventPodEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "EventPodEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "EventPodEntity", "EnableKynIntegration", "EnableKynIntegration", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "EventPodEntity", "IsBloodworkFormAttached", "IsBloodworkFormAttached", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
		}
		/// <summary>Inits EventPodRoomEntity's mappings</summary>
		private void InitEventPodRoomEntityMappings()
		{
			base.AddElementMapping( "EventPodRoomEntity", "Falcon", @"dbo", "TblEventPodRoom", 4 );
			base.AddElementFieldMapping( "EventPodRoomEntity", "EventPodRoomId", "EventPodRoomId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventPodRoomEntity", "EventPodId", "EventPodId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventPodRoomEntity", "RoomNo", "RoomNo", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 2 );
			base.AddElementFieldMapping( "EventPodRoomEntity", "Duration", "Duration", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 3 );
		}
		/// <summary>Inits EventPodRoomTestEntity's mappings</summary>
		private void InitEventPodRoomTestEntityMappings()
		{
			base.AddElementMapping( "EventPodRoomTestEntity", "Falcon", @"dbo", "TblEventPodRoomTest", 2 );
			base.AddElementFieldMapping( "EventPodRoomTestEntity", "EventPodRoomId", "EventPodRoomId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventPodRoomTestEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits EventProductExclusionEntity's mappings</summary>
		private void InitEventProductExclusionEntityMappings()
		{
			base.AddElementMapping( "EventProductExclusionEntity", "Falcon", @"dbo", "TblEventProductExclusion", 2 );
			base.AddElementFieldMapping( "EventProductExclusionEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventProductExclusionEntity", "ProductId", "ProductId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits EventProductTypeEntity's mappings</summary>
		private void InitEventProductTypeEntityMappings()
		{
			base.AddElementMapping( "EventProductTypeEntity", "Falcon", @"dbo", "TblEventProductType", 7 );
			base.AddElementFieldMapping( "EventProductTypeEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventProductTypeEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventProductTypeEntity", "ProductTypeId", "ProductTypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "EventProductTypeEntity", "StartDate", "StartDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "EventProductTypeEntity", "EndDate", "EndDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "EventProductTypeEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "EventProductTypeEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
		}
		/// <summary>Inits EventPublicationEntity's mappings</summary>
		private void InitEventPublicationEntityMappings()
		{
			base.AddElementMapping( "EventPublicationEntity", "Falcon", @"dbo", "TblEventPublication", 9 );
			base.AddElementFieldMapping( "EventPublicationEntity", "EventPublicationId", "EventPublicationID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventPublicationEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventPublicationEntity", "PublicationName", "PublicationName", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "EventPublicationEntity", "ContactName", "ContactName", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "EventPublicationEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "EventPublicationEntity", "ContactInfo", "ContactInfo", true, (int)SqlDbType.VarChar, 5000, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "EventPublicationEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "EventPublicationEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "EventPublicationEntity", "IsActive", "IsActive", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
		}
		/// <summary>Inits EventsEntity's mappings</summary>
		private void InitEventsEntityMappings()
		{
			base.AddElementMapping( "EventsEntity", "Falcon", @"dbo", "TblEvents", 60 );
			base.AddElementFieldMapping( "EventsEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventsEntity", "EventName", "EventName", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "EventsEntity", "EventDate", "EventDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "EventsEntity", "EventStartTime", "EventStartTime", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "EventsEntity", "EventEndTime", "EventEndTime", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "EventsEntity", "TimeZone", "TimeZone", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "EventsEntity", "EventTypeId", "EventTypeID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "EventsEntity", "ScheduleMethodId", "ScheduleMethodID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "EventsEntity", "IsRescheduled", "IsRescheduled", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
			base.AddElementFieldMapping( "EventsEntity", "CosttoUseHostSite", "CosttoUseHostSite", false, (int)SqlDbType.Decimal, 0, 0, 18, false, "", null, typeof(System.Decimal), 9 );
			base.AddElementFieldMapping( "EventsEntity", "CommunicationModeId", "CommunicationModeID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
			base.AddElementFieldMapping( "EventsEntity", "EventNotes", "EventNotes", true, (int)SqlDbType.VarChar, 5000, 0, 0, false, "", null, typeof(System.String), 11 );
			base.AddElementFieldMapping( "EventsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 12 );
			base.AddElementFieldMapping( "EventsEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 13 );
			base.AddElementFieldMapping( "EventsEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 14 );
			base.AddElementFieldMapping( "EventsEntity", "Googleuri", "Googleuri", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 15 );
			base.AddElementFieldMapping( "EventsEntity", "EventActivityTemplateId", "EventActivityTemplateID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 16 );
			base.AddElementFieldMapping( "EventsEntity", "InvitationCode", "InvitationCode", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 17 );
			base.AddElementFieldMapping( "EventsEntity", "TeamArrivalTime", "TeamArrivalTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 18 );
			base.AddElementFieldMapping( "EventsEntity", "TeamDepartureTime", "TeamDepartureTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 19 );
			base.AddElementFieldMapping( "EventsEntity", "EventStatus", "EventStatus", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 20 );
			base.AddElementFieldMapping( "EventsEntity", "IsSignoff", "IsSignoff", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 21 );
			base.AddElementFieldMapping( "EventsEntity", "SignoffDatetime", "SignoffDatetime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 22 );
			base.AddElementFieldMapping( "EventsEntity", "UpdatedByOrganizationRoleUser", "UpdatedByOrganizationRoleUser", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 23 );
			base.AddElementFieldMapping( "EventsEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 24 );
			base.AddElementFieldMapping( "EventsEntity", "AssignedToOrgRoleUserId", "AssignedToOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 25 );
			base.AddElementFieldMapping( "EventsEntity", "EventActivityOrgRoleUserId", "EventActivityOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 26 );
			base.AddElementFieldMapping( "EventsEntity", "SignOffOrgRoleUserId", "SignOffOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 27 );
			base.AddElementFieldMapping( "EventsEntity", "GenerateHealthAssesmentForm", "GenerateHealthAssesmentForm", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 28 );
			base.AddElementFieldMapping( "EventsEntity", "EmrNotesId", "EmrNotesId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 29 );
			base.AddElementFieldMapping( "EventsEntity", "EnableAlaCarteOnline", "EnableAlaCarteOnline", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 30 );
			base.AddElementFieldMapping( "EventsEntity", "EnableAlaCarteCallCenter", "EnableAlaCarteCallCenter", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 31 );
			base.AddElementFieldMapping( "EventsEntity", "EnableAlaCarteTechnician", "EnableAlaCarteTechnician", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 32 );
			base.AddElementFieldMapping( "EventsEntity", "IsDynamicScheduling", "IsDynamicScheduling", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 33 );
			base.AddElementFieldMapping( "EventsEntity", "SlotInterval", "SlotInterval", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 34 );
			base.AddElementFieldMapping( "EventsEntity", "ServerRooms", "ServerRooms", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 35 );
			base.AddElementFieldMapping( "EventsEntity", "LunchStartTime", "LunchStartTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 36 );
			base.AddElementFieldMapping( "EventsEntity", "LunchDuration", "LunchDuration", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 37 );
			base.AddElementFieldMapping( "EventsEntity", "HafTemplateId", "HAFTemplateId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 38 );
			base.AddElementFieldMapping( "EventsEntity", "NotifyResultReady", "NotifyResultReady", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 39 );
			base.AddElementFieldMapping( "EventsEntity", "CaptureInsuranceId", "CaptureInsuranceId", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 40 );
			base.AddElementFieldMapping( "EventsEntity", "InsuranceIdRequired", "InsuranceIdRequired", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 41 );
			base.AddElementFieldMapping( "EventsEntity", "IsFemaleOnly", "IsFemaleOnly", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 42 );
			base.AddElementFieldMapping( "EventsEntity", "GenerateKynXml", "GenerateKynXml", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 43 );
			base.AddElementFieldMapping( "EventsEntity", "RecommendPackage", "RecommendPackage", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 44 );
			base.AddElementFieldMapping( "EventsEntity", "AskPreQualifierQuestion", "AskPreQualifierQuestion", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 45 );
			base.AddElementFieldMapping( "EventsEntity", "FixedGroupScreeningTime", "FixedGroupScreeningTime", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 46 );
			base.AddElementFieldMapping( "EventsEntity", "BloodPackageTracking", "BloodPackageTracking", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 47 );
			base.AddElementFieldMapping( "EventsEntity", "RecordsPackageTracking", "RecordsPackageTracking", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 48 );
			base.AddElementFieldMapping( "EventsEntity", "EventCancellationReasonId", "EventCancellationReasonId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 49 );
			base.AddElementFieldMapping( "EventsEntity", "EnableForCallCenter", "EnableForCallCenter", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 50 );
			base.AddElementFieldMapping( "EventsEntity", "EnableForTechnician", "EnableForTechnician", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 51 );
			base.AddElementFieldMapping( "EventsEntity", "IsLocked", "IsLocked", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 52 );
			base.AddElementFieldMapping( "EventsEntity", "IsPackageTimeOnly", "IsPackageTimeOnly", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 53 );
			base.AddElementFieldMapping( "EventsEntity", "GenerateHkynXml", "GenerateHkynXml", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 54 );
			base.AddElementFieldMapping( "EventsEntity", "GenerateMyBioCheckAssessment", "GenerateMyBioCheckAssessment", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 55 );
			base.AddElementFieldMapping( "EventsEntity", "UpdatedByAdmin", "UpdatedByAdmin", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 56 );
			base.AddElementFieldMapping( "EventsEntity", "IsManual", "IsManual", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 57 );
			base.AddElementFieldMapping( "EventsEntity", "GenerateHealthAssesmentFormStatus", "GenerateHealthAssesmentFormStatus", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 58 );
			base.AddElementFieldMapping( "EventsEntity", "AllowNonMammoPatients", "AllowNonMammoPatients", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 59 );
		}
		/// <summary>Inits EventScheduleTemplateEntity's mappings</summary>
		private void InitEventScheduleTemplateEntityMappings()
		{
			base.AddElementMapping( "EventScheduleTemplateEntity", "Falcon", @"dbo", "TblEventScheduleTemplate", 6 );
			base.AddElementFieldMapping( "EventScheduleTemplateEntity", "EventScheduleTemplateId", "EventScheduleTemplateID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventScheduleTemplateEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventScheduleTemplateEntity", "ScheduleTemplateId", "ScheduleTemplateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "EventScheduleTemplateEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "EventScheduleTemplateEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "EventScheduleTemplateEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits EventSchedulingSlotEntity's mappings</summary>
		private void InitEventSchedulingSlotEntityMappings()
		{
			base.AddElementMapping( "EventSchedulingSlotEntity", "Falcon", @"dbo", "TblEventSchedulingSlot", 9 );
			base.AddElementFieldMapping( "EventSchedulingSlotEntity", "SlotId", "SlotId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventSchedulingSlotEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventSchedulingSlotEntity", "StartTime", "StartTime", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "EventSchedulingSlotEntity", "EndTime", "EndTime", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "EventSchedulingSlotEntity", "Reason", "Reason", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "EventSchedulingSlotEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "EventSchedulingSlotEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "EventSchedulingSlotEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "EventSchedulingSlotEntity", "EventPodRoomId", "EventPodRoomId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
		}
		/// <summary>Inits EventSlotAppointmentEntity's mappings</summary>
		private void InitEventSlotAppointmentEntityMappings()
		{
			base.AddElementMapping( "EventSlotAppointmentEntity", "Falcon", @"dbo", "TblEventSlotAppointment", 2 );
			base.AddElementFieldMapping( "EventSlotAppointmentEntity", "SlotId", "SlotId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventSlotAppointmentEntity", "AppointmentId", "AppointmentId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits EventStaffAssignmentEntity's mappings</summary>
		private void InitEventStaffAssignmentEntityMappings()
		{
			base.AddElementMapping( "EventStaffAssignmentEntity", "Falcon", @"dbo", "TblEventStaffAssignment", 10 );
			base.AddElementFieldMapping( "EventStaffAssignmentEntity", "EventStaffAssignmentId", "EventStaffAssignmentID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventStaffAssignmentEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventStaffAssignmentEntity", "PodId", "PodID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "EventStaffAssignmentEntity", "ScheduledStaffOrgRoleUserId", "ScheduledStaffOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "EventStaffAssignmentEntity", "ActualStaffOrgRoleUserId", "ActualStaffOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "EventStaffAssignmentEntity", "Notes", "Notes", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "EventStaffAssignmentEntity", "StaffEventRoleId", "StaffEventRoleID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "EventStaffAssignmentEntity", "ScheduledOn", "ScheduledOn", false, (int)SqlDbType.SmallDateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "EventStaffAssignmentEntity", "ScheduledByOrgRoleUserId", "ScheduledByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "EventStaffAssignmentEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 9 );
		}
		/// <summary>Inits EventSurveyTemplateEntity's mappings</summary>
		private void InitEventSurveyTemplateEntityMappings()
		{
			base.AddElementMapping( "EventSurveyTemplateEntity", "Falcon", @"dbo", "TblEventSurveyTemplate", 2 );
			base.AddElementFieldMapping( "EventSurveyTemplateEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventSurveyTemplateEntity", "SurveyTemplateId", "SurveyTemplateId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits EventTaskDetailsEntity's mappings</summary>
		private void InitEventTaskDetailsEntityMappings()
		{
			base.AddElementMapping( "EventTaskDetailsEntity", "Falcon", @"dbo", "TblEventTaskDetails", 2 );
			base.AddElementFieldMapping( "EventTaskDetailsEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventTaskDetailsEntity", "TaskId", "TaskID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits EventTestEntity's mappings</summary>
		private void InitEventTestEntityMappings()
		{
			base.AddElementMapping( "EventTestEntity", "Falcon", @"dbo", "TblEventTest", 17 );
			base.AddElementFieldMapping( "EventTestEntity", "EventTestId", "EventTestID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventTestEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventTestEntity", "TestId", "TestID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "EventTestEntity", "Price", "Price", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 3 );
			base.AddElementFieldMapping( "EventTestEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "EventTestEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "EventTestEntity", "RefundPrice", "RefundPrice", false, (int)SqlDbType.Decimal, 0, 2, 10, false, "", null, typeof(System.Decimal), 6 );
			base.AddElementFieldMapping( "EventTestEntity", "ShowInAlaCarte", "ShowInAlaCarte", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "EventTestEntity", "ScreeningTime", "ScreeningTime", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 8 );
			base.AddElementFieldMapping( "EventTestEntity", "HafTemplateId", "HAFTemplateId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "EventTestEntity", "WithPackagePrice", "WithPackagePrice", false, (int)SqlDbType.Decimal, 0, 2, 10, false, "", null, typeof(System.Decimal), 10 );
			base.AddElementFieldMapping( "EventTestEntity", "Gender", "Gender", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 11 );
			base.AddElementFieldMapping( "EventTestEntity", "GroupId", "GroupId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "EventTestEntity", "ReimbursementRate", "ReimbursementRate", false, (int)SqlDbType.Decimal, 0, 0, 10, false, "", null, typeof(System.Decimal), 13 );
			base.AddElementFieldMapping( "EventTestEntity", "IsTestReviewableByPhysician", "IsTestReviewableByPhysician", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 14 );
			base.AddElementFieldMapping( "EventTestEntity", "PreQualificationQuestionTemplateId", "PreQualificationQuestionTemplateId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 15 );
			base.AddElementFieldMapping( "EventTestEntity", "ResultEntryTypeId", "ResultEntryTypeId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 16 );
		}
		/// <summary>Inits EventTestOrderItemEntity's mappings</summary>
		private void InitEventTestOrderItemEntityMappings()
		{
			base.AddElementMapping( "EventTestOrderItemEntity", "Falcon", @"dbo", "TblEventTestOrderItem", 2 );
			base.AddElementFieldMapping( "EventTestOrderItemEntity", "OrderItemId", "OrderItemID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventTestOrderItemEntity", "EventTestId", "EventTestID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits EventTypeEntity's mappings</summary>
		private void InitEventTypeEntityMappings()
		{
			base.AddElementMapping( "EventTypeEntity", "Falcon", @"dbo", "TblEventType", 6 );
			base.AddElementFieldMapping( "EventTypeEntity", "EventTypeId", "EventTypeID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventTypeEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "EventTypeEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "EventTypeEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "EventTypeEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "EventTypeEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits EventZipEntity's mappings</summary>
		private void InitEventZipEntityMappings()
		{
			base.AddElementMapping( "EventZipEntity", "Falcon", @"dbo", "TblEventZip", 2 );
			base.AddElementFieldMapping( "EventZipEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventZipEntity", "ZipId", "ZipId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits EventZipProductTypeEntity's mappings</summary>
		private void InitEventZipProductTypeEntityMappings()
		{
			base.AddElementMapping( "EventZipProductTypeEntity", "Falcon", @"dbo", "TblEventZipProductType", 3 );
			base.AddElementFieldMapping( "EventZipProductTypeEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventZipProductTypeEntity", "ZipId", "ZipID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventZipProductTypeEntity", "ProductTypeId", "ProductTypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
		}
		/// <summary>Inits EventZipProductTypeSubstituteEntity's mappings</summary>
		private void InitEventZipProductTypeSubstituteEntityMappings()
		{
			base.AddElementMapping( "EventZipProductTypeSubstituteEntity", "Falcon", @"dbo", "TblEventZipProductTypeSubstitute", 3 );
			base.AddElementFieldMapping( "EventZipProductTypeSubstituteEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "EventZipProductTypeSubstituteEntity", "ZipId", "ZipID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "EventZipProductTypeSubstituteEntity", "ProductTypeId", "ProductTypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
		}
		/// <summary>Inits ExitInterviewAnswerEntity's mappings</summary>
		private void InitExitInterviewAnswerEntityMappings()
		{
			base.AddElementMapping( "ExitInterviewAnswerEntity", "Falcon", @"dbo", "TblExitInterviewAnswer", 9 );
			base.AddElementFieldMapping( "ExitInterviewAnswerEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ExitInterviewAnswerEntity", "QuestionId", "QuestionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ExitInterviewAnswerEntity", "Answer", "Answer", false, (int)SqlDbType.VarChar, 128, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ExitInterviewAnswerEntity", "Version", "Version", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 3 );
			base.AddElementFieldMapping( "ExitInterviewAnswerEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "ExitInterviewAnswerEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "ExitInterviewAnswerEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "ExitInterviewAnswerEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "ExitInterviewAnswerEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
		}
		/// <summary>Inits ExitInterviewQuestionEntity's mappings</summary>
		private void InitExitInterviewQuestionEntityMappings()
		{
			base.AddElementMapping( "ExitInterviewQuestionEntity", "Falcon", @"dbo", "TblExitInterviewQuestion", 8 );
			base.AddElementFieldMapping( "ExitInterviewQuestionEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ExitInterviewQuestionEntity", "Question", "Question", false, (int)SqlDbType.VarChar, 2048, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ExitInterviewQuestionEntity", "TypeId", "TypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "ExitInterviewQuestionEntity", "Gender", "Gender", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "ExitInterviewQuestionEntity", "ParentId", "ParentId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "ExitInterviewQuestionEntity", "ControlValues", "ControlValues", true, (int)SqlDbType.VarChar, 128, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "ExitInterviewQuestionEntity", "ControlValueDelimiter", "ControlValueDelimiter", true, (int)SqlDbType.VarChar, 1, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "ExitInterviewQuestionEntity", "Index", "Index", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 7 );
		}
		/// <summary>Inits ExitInterviewSignatureEntity's mappings</summary>
		private void InitExitInterviewSignatureEntityMappings()
		{
			base.AddElementMapping( "ExitInterviewSignatureEntity", "Falcon", @"dbo", "TblExitInterviewSignature", 7 );
			base.AddElementFieldMapping( "ExitInterviewSignatureEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ExitInterviewSignatureEntity", "QuestionId", "QuestionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ExitInterviewSignatureEntity", "SignatureFileId", "SignatureFileId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "ExitInterviewSignatureEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "ExitInterviewSignatureEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "ExitInterviewSignatureEntity", "Version", "Version", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 5 );
			base.AddElementFieldMapping( "ExitInterviewSignatureEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
		}
		/// <summary>Inits ExportableReportsEntity's mappings</summary>
		private void InitExportableReportsEntityMappings()
		{
			base.AddElementMapping( "ExportableReportsEntity", "Falcon", @"dbo", "TblExportableReports", 4 );
			base.AddElementFieldMapping( "ExportableReportsEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ExportableReportsEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ExportableReportsEntity", "Alias", "Alias", false, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ExportableReportsEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
		}
		/// <summary>Inits ExportableReportsQueueEntity's mappings</summary>
		private void InitExportableReportsQueueEntityMappings()
		{
			base.AddElementMapping( "ExportableReportsQueueEntity", "Falcon", @"dbo", "TblExportableReportsQueue", 9 );
			base.AddElementFieldMapping( "ExportableReportsQueueEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ExportableReportsQueueEntity", "ReportId", "ReportId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ExportableReportsQueueEntity", "FilterData", "FilterData", true, (int)SqlDbType.NVarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ExportableReportsQueueEntity", "RequestedBy", "RequestedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "ExportableReportsQueueEntity", "RequestedOn", "RequestedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "ExportableReportsQueueEntity", "FileId", "FileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "ExportableReportsQueueEntity", "StartedOn", "StartedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "ExportableReportsQueueEntity", "EndedOn", "EndedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "ExportableReportsQueueEntity", "StatusId", "StatusId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
		}
		/// <summary>Inits FileEntity's mappings</summary>
		private void InitFileEntityMappings()
		{
			base.AddElementMapping( "FileEntity", "Falcon", @"dbo", "TblFile", 7 );
			base.AddElementFieldMapping( "FileEntity", "FileId", "FileId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "FileEntity", "Path", "Path", false, (int)SqlDbType.VarChar, 2000, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "FileEntity", "Type", "Type", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "FileEntity", "Size", "Size", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 3 );
			base.AddElementFieldMapping( "FileEntity", "CreatedDate", "CreatedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "FileEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "FileEntity", "IsArchived", "IsArchived", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
		}
		/// <summary>Inits FillEventCallQueueEntity's mappings</summary>
		private void InitFillEventCallQueueEntityMappings()
		{
			base.AddElementMapping( "FillEventCallQueueEntity", "Falcon", @"dbo", "TblFillEventCallQueue", 9 );
			base.AddElementFieldMapping( "FillEventCallQueueEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "FillEventCallQueueEntity", "HealthPlanId", "HealthPlanId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "FillEventCallQueueEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "FillEventCallQueueEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "FillEventCallQueueEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "FillEventCallQueueEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "FillEventCallQueueEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "FillEventCallQueueEntity", "CallDate", "CallDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "FillEventCallQueueEntity", "EventIds", "EventIds", true, (int)SqlDbType.VarChar, 2048, 0, 0, false, "", null, typeof(System.String), 8 );
		}
		/// <summary>Inits FillEventCallQueueCriteriaAssignmentEntity's mappings</summary>
		private void InitFillEventCallQueueCriteriaAssignmentEntityMappings()
		{
			base.AddElementMapping( "FillEventCallQueueCriteriaAssignmentEntity", "Falcon", @"dbo", "TblFillEventCallQueueCriteriaAssignment", 2 );
			base.AddElementFieldMapping( "FillEventCallQueueCriteriaAssignmentEntity", "FillEventCallQueueId", "FillEventCallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "FillEventCallQueueCriteriaAssignmentEntity", "CriteriaId", "CriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits FluConsentAnswerEntity's mappings</summary>
		private void InitFluConsentAnswerEntityMappings()
		{
			base.AddElementMapping( "FluConsentAnswerEntity", "Falcon", @"dbo", "TblFluConsentAnswer", 9 );
			base.AddElementFieldMapping( "FluConsentAnswerEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "FluConsentAnswerEntity", "QuestionId", "QuestionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "FluConsentAnswerEntity", "Answer", "Answer", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "FluConsentAnswerEntity", "Version", "Version", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 3 );
			base.AddElementFieldMapping( "FluConsentAnswerEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "FluConsentAnswerEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "FluConsentAnswerEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "FluConsentAnswerEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "FluConsentAnswerEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
		}
		/// <summary>Inits FluConsentQuestionEntity's mappings</summary>
		private void InitFluConsentQuestionEntityMappings()
		{
			base.AddElementMapping( "FluConsentQuestionEntity", "Falcon", @"dbo", "TblFluConsentQuestion", 9 );
			base.AddElementFieldMapping( "FluConsentQuestionEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "FluConsentQuestionEntity", "Question", "Question", false, (int)SqlDbType.VarChar, 4000, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "FluConsentQuestionEntity", "TypeId", "TypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "FluConsentQuestionEntity", "Gender", "Gender", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "FluConsentQuestionEntity", "ParentId", "ParentId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "FluConsentQuestionEntity", "ControlValues", "ControlValues", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "FluConsentQuestionEntity", "ControlValueDelimiter", "ControlValueDelimiter", true, (int)SqlDbType.VarChar, 5, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "FluConsentQuestionEntity", "Index", "Index", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "FluConsentQuestionEntity", "FluConsentQuestionType", "FluConsentQuestionType", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
		}
		/// <summary>Inits FluConsentSignatureEntity's mappings</summary>
		private void InitFluConsentSignatureEntityMappings()
		{
			base.AddElementMapping( "FluConsentSignatureEntity", "Falcon", @"dbo", "TblFluConsentSignature", 8 );
			base.AddElementFieldMapping( "FluConsentSignatureEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "FluConsentSignatureEntity", "SignatureFileId", "SignatureFileId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "FluConsentSignatureEntity", "ConsentSignedDate", "ConsentSignedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "FluConsentSignatureEntity", "ClinicalProviderSignatureFileId", "ClinicalProviderSignatureFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "FluConsentSignatureEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "FluConsentSignatureEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "FluConsentSignatureEntity", "Version", "Version", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 6 );
			base.AddElementFieldMapping( "FluConsentSignatureEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
		}
		/// <summary>Inits FluConsentTemplateEntity's mappings</summary>
		private void InitFluConsentTemplateEntityMappings()
		{
			base.AddElementMapping( "FluConsentTemplateEntity", "Falcon", @"dbo", "TblFluConsentTemplate", 8 );
			base.AddElementFieldMapping( "FluConsentTemplateEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "FluConsentTemplateEntity", "Name", "Name", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "FluConsentTemplateEntity", "IsPublished", "IsPublished", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
			base.AddElementFieldMapping( "FluConsentTemplateEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "FluConsentTemplateEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "FluConsentTemplateEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "FluConsentTemplateEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "FluConsentTemplateEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
		}
		/// <summary>Inits FluConsentTemplateQuestionEntity's mappings</summary>
		private void InitFluConsentTemplateQuestionEntityMappings()
		{
			base.AddElementMapping( "FluConsentTemplateQuestionEntity", "Falcon", @"dbo", "TblFluConsentTemplateQuestion", 2 );
			base.AddElementFieldMapping( "FluConsentTemplateQuestionEntity", "TemplateId", "TemplateId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "FluConsentTemplateQuestionEntity", "QuestionId", "QuestionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits FraminghamCalculationSourceEntity's mappings</summary>
		private void InitFraminghamCalculationSourceEntityMappings()
		{
			base.AddElementMapping( "FraminghamCalculationSourceEntity", "Falcon", @"dbo", "TblFraminghamCalculationSource", 6 );
			base.AddElementFieldMapping( "FraminghamCalculationSourceEntity", "CalculationSourceId", "CalculationSourceId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "FraminghamCalculationSourceEntity", "ReadingId", "ReadingId", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 1 );
			base.AddElementFieldMapping( "FraminghamCalculationSourceEntity", "MinValue", "MinValue", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 2 );
			base.AddElementFieldMapping( "FraminghamCalculationSourceEntity", "MaxValue", "MaxValue", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 3 );
			base.AddElementFieldMapping( "FraminghamCalculationSourceEntity", "MaleScore", "MaleScore", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 4 );
			base.AddElementFieldMapping( "FraminghamCalculationSourceEntity", "FemaleScore", "FemaleScore", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 5 );
		}
		/// <summary>Inits FraminghamScoreRangeEntity's mappings</summary>
		private void InitFraminghamScoreRangeEntityMappings()
		{
			base.AddElementMapping( "FraminghamScoreRangeEntity", "Falcon", @"dbo", "TblFraminghamScoreRange", 5 );
			base.AddElementFieldMapping( "FraminghamScoreRangeEntity", "ScoreRangeId", "ScoreRangeId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "FraminghamScoreRangeEntity", "MinValue", "MinValue", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 1 );
			base.AddElementFieldMapping( "FraminghamScoreRangeEntity", "MaxValue", "MaxValue", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 2 );
			base.AddElementFieldMapping( "FraminghamScoreRangeEntity", "MaleRiskScore", "MaleRiskScore", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 3 );
			base.AddElementFieldMapping( "FraminghamScoreRangeEntity", "FemaleRiskScore", "FemaleRiskScore", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 4 );
		}
		/// <summary>Inits FranchiseeApplicationEntity's mappings</summary>
		private void InitFranchiseeApplicationEntityMappings()
		{
			base.AddElementMapping( "FranchiseeApplicationEntity", "Falcon", @"dbo", "TblFranchiseeApplication", 26 );
			base.AddElementFieldMapping( "FranchiseeApplicationEntity", "ApplicationId", "ApplicationID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "FranchiseeApplicationEntity", "BusinessName", "BusinessName", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "FranchiseeApplicationEntity", "BusinessAddressId", "BusinessAddressID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "FranchiseeApplicationEntity", "ContactAddressId", "ContactAddressID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "FranchiseeApplicationEntity", "FirstName", "FirstName", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "FranchiseeApplicationEntity", "MiddleName", "MiddleName", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "FranchiseeApplicationEntity", "LastName", "LastName", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "FranchiseeApplicationEntity", "PhoneCell", "PhoneCell", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "FranchiseeApplicationEntity", "PhoneHome", "PhoneHome", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "FranchiseeApplicationEntity", "PhoneOffice", "PhoneOffice", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "FranchiseeApplicationEntity", "Email1", "EMail1", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "FranchiseeApplicationEntity", "Email2", "EMail2", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 11 );
			base.AddElementFieldMapping( "FranchiseeApplicationEntity", "Reference1Name", "Reference1Name", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "FranchiseeApplicationEntity", "Reference1Email", "Reference1EMail", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "FranchiseeApplicationEntity", "Reference2Name", "Reference2Name", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 14 );
			base.AddElementFieldMapping( "FranchiseeApplicationEntity", "Reference2Email", "Reference2EMail", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 15 );
			base.AddElementFieldMapping( "FranchiseeApplicationEntity", "Reference3Name", "Reference3Name", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 16 );
			base.AddElementFieldMapping( "FranchiseeApplicationEntity", "Reference3Email", "Reference3EMail", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 17 );
			base.AddElementFieldMapping( "FranchiseeApplicationEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 18 );
			base.AddElementFieldMapping( "FranchiseeApplicationEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 19 );
			base.AddElementFieldMapping( "FranchiseeApplicationEntity", "WorkFlowStageId", "WorkFlowStageID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 20 );
			base.AddElementFieldMapping( "FranchiseeApplicationEntity", "WorkFlowStageTriggerId", "WorkFlowStageTriggerID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 21 );
			base.AddElementFieldMapping( "FranchiseeApplicationEntity", "WorkFlowStageActivityTriggerId", "WorkFlowStageActivityTriggerID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 22 );
			base.AddElementFieldMapping( "FranchiseeApplicationEntity", "BusinessPhone", "BusinessPhone", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 23 );
			base.AddElementFieldMapping( "FranchiseeApplicationEntity", "BusinessFax", "BusinessFax", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 24 );
			base.AddElementFieldMapping( "FranchiseeApplicationEntity", "BillingAddressId", "BillingAddressID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 25 );
		}
		/// <summary>Inits FranchiseeTerritoryEntity's mappings</summary>
		private void InitFranchiseeTerritoryEntityMappings()
		{
			base.AddElementMapping( "FranchiseeTerritoryEntity", "Falcon", @"dbo", "TblFranchiseeTerritory", 2 );
			base.AddElementFieldMapping( "FranchiseeTerritoryEntity", "OrganizationId", "OrganizationID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "FranchiseeTerritoryEntity", "TerritoryId", "TerritoryID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits FranchiseeWiringInstructionsEntity's mappings</summary>
		private void InitFranchiseeWiringInstructionsEntityMappings()
		{
			base.AddElementMapping( "FranchiseeWiringInstructionsEntity", "Falcon", @"dbo", "TblFranchiseeWiringInstructions", 5 );
			base.AddElementFieldMapping( "FranchiseeWiringInstructionsEntity", "FranchisingWiringId", "FranchisingWiringID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "FranchiseeWiringInstructionsEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "FranchiseeWiringInstructionsEntity", "PaymentFrequencyId", "PaymentFrequencyID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "FranchiseeWiringInstructionsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "FranchiseeWiringInstructionsEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
		}
		/// <summary>Inits GcNotGivenReasonEntity's mappings</summary>
		private void InitGcNotGivenReasonEntityMappings()
		{
			base.AddElementMapping( "GcNotGivenReasonEntity", "Falcon", @"dbo", "TblGcNotGivenReason", 8 );
			base.AddElementFieldMapping( "GcNotGivenReasonEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "GcNotGivenReasonEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "GcNotGivenReasonEntity", "Alias", "Alias", false, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "GcNotGivenReasonEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "GcNotGivenReasonEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "GcNotGivenReasonEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "GcNotGivenReasonEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "GcNotGivenReasonEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
		}
		/// <summary>Inits GiftCertificateEntity's mappings</summary>
		private void InitGiftCertificateEntityMappings()
		{
			base.AddElementMapping( "GiftCertificateEntity", "Falcon", @"dbo", "TblGiftCertificate", 13 );
			base.AddElementFieldMapping( "GiftCertificateEntity", "GiftCertificateId", "GiftCertificateID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "GiftCertificateEntity", "TypeId", "TypeID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "GiftCertificateEntity", "ClaimCode", "ClaimCode", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "GiftCertificateEntity", "Amount", "Amount", false, (int)SqlDbType.Money, 0, 4, 19, false, "", null, typeof(System.Decimal), 3 );
			base.AddElementFieldMapping( "GiftCertificateEntity", "FromName", "FromName", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "GiftCertificateEntity", "ToName", "ToName", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "GiftCertificateEntity", "Message", "Message", true, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "GiftCertificateEntity", "ExpirationDate", "ExpirationDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "GiftCertificateEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "GiftCertificateEntity", "OrgazizationRoleUserCreatorId", "OrgazizationRoleUserCreatorID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "GiftCertificateEntity", "ApplicablePackageId", "ApplicablePackageID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
			base.AddElementFieldMapping( "GiftCertificateEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 11 );
			base.AddElementFieldMapping( "GiftCertificateEntity", "ToEmail", "ToEmail", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 12 );
		}
		/// <summary>Inits GiftCertificateOrderItemEntity's mappings</summary>
		private void InitGiftCertificateOrderItemEntityMappings()
		{
			base.AddElementMapping( "GiftCertificateOrderItemEntity", "Falcon", @"dbo", "TblGiftCertificateOrderItem", 2 );
			base.AddElementFieldMapping( "GiftCertificateOrderItemEntity", "OrderItemId", "OrderItemID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "GiftCertificateOrderItemEntity", "GiftCertificateId", "GiftCertificateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits GiftCertificatePaymentEntity's mappings</summary>
		private void InitGiftCertificatePaymentEntityMappings()
		{
			base.AddElementMapping( "GiftCertificatePaymentEntity", "Falcon", @"dbo", "TblGiftCertificatePayment", 3 );
			base.AddElementFieldMapping( "GiftCertificatePaymentEntity", "PaymentId", "PaymentID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "GiftCertificatePaymentEntity", "GiftCertificateId", "GiftCertificateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "GiftCertificatePaymentEntity", "Amount", "Amount", false, (int)SqlDbType.Money, 0, 4, 19, false, "", null, typeof(System.Decimal), 2 );
		}
		/// <summary>Inits GiftCertificateTypeEntity's mappings</summary>
		private void InitGiftCertificateTypeEntityMappings()
		{
			base.AddElementMapping( "GiftCertificateTypeEntity", "Falcon", @"dbo", "TblGiftCertificateType", 6 );
			base.AddElementFieldMapping( "GiftCertificateTypeEntity", "GiftCertificateTypeId", "GiftCertificateTypeID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "GiftCertificateTypeEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "GiftCertificateTypeEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1025, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "GiftCertificateTypeEntity", "ImageId", "ImageID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "GiftCertificateTypeEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "GiftCertificateTypeEntity", "OrganizationRoleUserCreatorId", "OrganizationRoleUserCreatorID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
		}
		/// <summary>Inits GlobalConfigurationEntity's mappings</summary>
		private void InitGlobalConfigurationEntityMappings()
		{
			base.AddElementMapping( "GlobalConfigurationEntity", "Falcon", @"dbo", "TblGlobalConfiguration", 12 );
			base.AddElementFieldMapping( "GlobalConfigurationEntity", "GlobalConfigurationId", "GlobalConfigurationID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "GlobalConfigurationEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "GlobalConfigurationEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "GlobalConfigurationEntity", "Value", "Value", false, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "GlobalConfigurationEntity", "RoleTypeId", "RoleTypeID", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "GlobalConfigurationEntity", "UserId", "UserID", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "GlobalConfigurationEntity", "SettingGroupName", "SettingGroupName", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "GlobalConfigurationEntity", "DataType", "DataType", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "GlobalConfigurationEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
			base.AddElementFieldMapping( "GlobalConfigurationEntity", "Delimiter", "Delimiter", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "GlobalConfigurationEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 10 );
			base.AddElementFieldMapping( "GlobalConfigurationEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
		}
		/// <summary>Inits GuardianDetailsEntity's mappings</summary>
		private void InitGuardianDetailsEntityMappings()
		{
			base.AddElementMapping( "GuardianDetailsEntity", "Falcon", @"dbo", "TblGuardianDetails", 16 );
			base.AddElementFieldMapping( "GuardianDetailsEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "GuardianDetailsEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "GuardianDetailsEntity", "RelationshipId", "RelationshipId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "GuardianDetailsEntity", "FirstName", "FirstName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "GuardianDetailsEntity", "MiddleName", "MiddleName", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "GuardianDetailsEntity", "LastName", "LastName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "GuardianDetailsEntity", "AddressId", "AddressId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "GuardianDetailsEntity", "PhoneCell", "PhoneCell", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "GuardianDetailsEntity", "PhoneOffice", "PhoneOffice", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "GuardianDetailsEntity", "PhoneHome", "PhoneHome", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "GuardianDetailsEntity", "EmailId", "EMailId", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "GuardianDetailsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "GuardianDetailsEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "GuardianDetailsEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 13 );
			base.AddElementFieldMapping( "GuardianDetailsEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 14 );
			base.AddElementFieldMapping( "GuardianDetailsEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 15 );
		}
		/// <summary>Inits HafTemplateEntity's mappings</summary>
		private void InitHafTemplateEntityMappings()
		{
			base.AddElementMapping( "HafTemplateEntity", "Falcon", @"dbo", "TblHAFTemplate", 13 );
			base.AddElementFieldMapping( "HafTemplateEntity", "HaftemplateId", "HAFTemplateId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HafTemplateEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "HafTemplateEntity", "Type", "Type", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "HafTemplateEntity", "IsDefault", "IsDefault", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "HafTemplateEntity", "IsPublished", "IsPublished", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "HafTemplateEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "HafTemplateEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "HafTemplateEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "HafTemplateEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "HafTemplateEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 9 );
			base.AddElementFieldMapping( "HafTemplateEntity", "PublicationDate", "PublicationDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 10 );
			base.AddElementFieldMapping( "HafTemplateEntity", "Notes", "Notes", true, (int)SqlDbType.VarChar, 4000, 0, 0, false, "", null, typeof(System.String), 11 );
			base.AddElementFieldMapping( "HafTemplateEntity", "Category", "Category", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
		}
		/// <summary>Inits HafTemplateQuestionEntity's mappings</summary>
		private void InitHafTemplateQuestionEntityMappings()
		{
			base.AddElementMapping( "HafTemplateQuestionEntity", "Falcon", @"dbo", "TblHAFTemplateQuestion", 2 );
			base.AddElementFieldMapping( "HafTemplateQuestionEntity", "HaftemplateId", "HAFTemplateId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HafTemplateQuestionEntity", "QuestionId", "QuestionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits HcpcsCodeEntity's mappings</summary>
		private void InitHcpcsCodeEntityMappings()
		{
			base.AddElementMapping( "HcpcsCodeEntity", "Falcon", @"dbo", "TblHcpcsCode", 11 );
			base.AddElementFieldMapping( "HcpcsCodeEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HcpcsCodeEntity", "Code", "Code", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "HcpcsCodeEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "HcpcsCodeEntity", "Cost", "Cost", true, (int)SqlDbType.Decimal, 0, 2, 9, false, "", null, typeof(System.Decimal), 3 );
			base.AddElementFieldMapping( "HcpcsCodeEntity", "CopayCost", "CopayCost", true, (int)SqlDbType.Decimal, 0, 2, 9, false, "", null, typeof(System.Decimal), 4 );
			base.AddElementFieldMapping( "HcpcsCodeEntity", "IsRetired", "IsRetired", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "HcpcsCodeEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "HcpcsCodeEntity", "CreatedDate", "CreatedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "HcpcsCodeEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "HcpcsCodeEntity", "ModifiedDate", "ModifiedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "HcpcsCodeEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 10 );
		}
		/// <summary>Inits HealthPlanCallQueueCriteriaEntity's mappings</summary>
		private void InitHealthPlanCallQueueCriteriaEntityMappings()
		{
			base.AddElementMapping( "HealthPlanCallQueueCriteriaEntity", "Falcon", @"dbo", "TblHealthPlanCallQueueCriteria", 22 );
			base.AddElementFieldMapping( "HealthPlanCallQueueCriteriaEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HealthPlanCallQueueCriteriaEntity", "CallQueueId", "CallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "HealthPlanCallQueueCriteriaEntity", "Percentage", "Percentage", true, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 2 );
			base.AddElementFieldMapping( "HealthPlanCallQueueCriteriaEntity", "NoOfDays", "NoOfDays", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 3 );
			base.AddElementFieldMapping( "HealthPlanCallQueueCriteriaEntity", "RoundOfCalls", "RoundOfCalls", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 4 );
			base.AddElementFieldMapping( "HealthPlanCallQueueCriteriaEntity", "StartDate", "StartDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "HealthPlanCallQueueCriteriaEntity", "EndDate", "EndDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "HealthPlanCallQueueCriteriaEntity", "HealthPlanId", "HealthPlanId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "HealthPlanCallQueueCriteriaEntity", "CustomTags", "CustomTags", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "HealthPlanCallQueueCriteriaEntity", "IsDefault", "IsDefault", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 9 );
			base.AddElementFieldMapping( "HealthPlanCallQueueCriteriaEntity", "IsQueueGenerated", "IsQueueGenerated", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 10 );
			base.AddElementFieldMapping( "HealthPlanCallQueueCriteriaEntity", "LastQueueGeneratedDate", "LastQueueGeneratedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "HealthPlanCallQueueCriteriaEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 12 );
			base.AddElementFieldMapping( "HealthPlanCallQueueCriteriaEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 13 );
			base.AddElementFieldMapping( "HealthPlanCallQueueCriteriaEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 14 );
			base.AddElementFieldMapping( "HealthPlanCallQueueCriteriaEntity", "ModifiedByOrgRoleUserId", "ModifiedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 15 );
			base.AddElementFieldMapping( "HealthPlanCallQueueCriteriaEntity", "ZipCode", "ZipCode", true, (int)SqlDbType.VarChar, 55, 0, 0, false, "", null, typeof(System.String), 16 );
			base.AddElementFieldMapping( "HealthPlanCallQueueCriteriaEntity", "Radius", "Radius", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 17 );
			base.AddElementFieldMapping( "HealthPlanCallQueueCriteriaEntity", "IsDeleted", "IsDeleted", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 18 );
			base.AddElementFieldMapping( "HealthPlanCallQueueCriteriaEntity", "CampaignId", "CampaignId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 19 );
			base.AddElementFieldMapping( "HealthPlanCallQueueCriteriaEntity", "CriteriaName", "CriteriaName", true, (int)SqlDbType.NVarChar, 255, 0, 0, false, "", null, typeof(System.String), 20 );
			base.AddElementFieldMapping( "HealthPlanCallQueueCriteriaEntity", "LanguageId", "LanguageId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 21 );
		}
		/// <summary>Inits HealthPlanCallQueueCriteriaAssignmentEntity's mappings</summary>
		private void InitHealthPlanCallQueueCriteriaAssignmentEntityMappings()
		{
			base.AddElementMapping( "HealthPlanCallQueueCriteriaAssignmentEntity", "Falcon", @"dbo", "TblHealthPlanCallQueueCriteriaAssignment", 3 );
			base.AddElementFieldMapping( "HealthPlanCallQueueCriteriaAssignmentEntity", "CallQueueCustomerId", "CallQueueCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HealthPlanCallQueueCriteriaAssignmentEntity", "CallQueueId", "CallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "HealthPlanCallQueueCriteriaAssignmentEntity", "CriteriaId", "CriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
		}
		/// <summary>Inits HealthPlanCriteriaAssignmentEntity's mappings</summary>
		private void InitHealthPlanCriteriaAssignmentEntityMappings()
		{
			base.AddElementMapping( "HealthPlanCriteriaAssignmentEntity", "Falcon", @"dbo", "TblHealthPlanCriteriaAssignment", 10 );
			base.AddElementFieldMapping( "HealthPlanCriteriaAssignmentEntity", "HealthPlanCriteriaId", "HealthPlanCriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HealthPlanCriteriaAssignmentEntity", "AssignedToOrgRoleUserId", "AssignedToOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "HealthPlanCriteriaAssignmentEntity", "EventId", "EventId", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "HealthPlanCriteriaAssignmentEntity", "CustomTagId", "CustomTagId", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "HealthPlanCriteriaAssignmentEntity", "StartDate", "StartDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "HealthPlanCriteriaAssignmentEntity", "EndDate", "EndDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "HealthPlanCriteriaAssignmentEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "HealthPlanCriteriaAssignmentEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "HealthPlanCriteriaAssignmentEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "HealthPlanCriteriaAssignmentEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
		}
		/// <summary>Inits HealthPlanCriteriaAssignmentUploadEntity's mappings</summary>
		private void InitHealthPlanCriteriaAssignmentUploadEntityMappings()
		{
			base.AddElementMapping( "HealthPlanCriteriaAssignmentUploadEntity", "Falcon", @"dbo", "TblHealthPlanCriteriaAssignmentUpload", 5 );
			base.AddElementFieldMapping( "HealthPlanCriteriaAssignmentUploadEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HealthPlanCriteriaAssignmentUploadEntity", "FileId", "FileId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "HealthPlanCriteriaAssignmentUploadEntity", "UploadTime", "UploadTime", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "HealthPlanCriteriaAssignmentUploadEntity", "UploadedByOrgRoleUserId", "UploadedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "HealthPlanCriteriaAssignmentUploadEntity", "CriteriaId", "CriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
		}
		/// <summary>Inits HealthPlanCriteriaDirectMailEntity's mappings</summary>
		private void InitHealthPlanCriteriaDirectMailEntityMappings()
		{
			base.AddElementMapping( "HealthPlanCriteriaDirectMailEntity", "Falcon", @"dbo", "TblHealthPlanCriteriaDirectMail", 2 );
			base.AddElementFieldMapping( "HealthPlanCriteriaDirectMailEntity", "CriteriaId", "CriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HealthPlanCriteriaDirectMailEntity", "CampaignActivityId", "CampaignActivityId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits HealthPlanCriteriaTeamAssignmentEntity's mappings</summary>
		private void InitHealthPlanCriteriaTeamAssignmentEntityMappings()
		{
			base.AddElementMapping( "HealthPlanCriteriaTeamAssignmentEntity", "Falcon", @"dbo", "TblHealthPlanCriteriaTeamAssignment", 9 );
			base.AddElementFieldMapping( "HealthPlanCriteriaTeamAssignmentEntity", "HealthPlanCriteriaId", "HealthPlanCriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HealthPlanCriteriaTeamAssignmentEntity", "TeamId", "TeamId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "HealthPlanCriteriaTeamAssignmentEntity", "StartDate", "StartDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "HealthPlanCriteriaTeamAssignmentEntity", "EndDate", "EndDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "HealthPlanCriteriaTeamAssignmentEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "HealthPlanCriteriaTeamAssignmentEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "HealthPlanCriteriaTeamAssignmentEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "HealthPlanCriteriaTeamAssignmentEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "HealthPlanCriteriaTeamAssignmentEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
		}
		/// <summary>Inits HealthPlanEventZipEntity's mappings</summary>
		private void InitHealthPlanEventZipEntityMappings()
		{
			base.AddElementMapping( "HealthPlanEventZipEntity", "Falcon", @"dbo", "TblHealthPlanEventZip", 4 );
			base.AddElementFieldMapping( "HealthPlanEventZipEntity", "AccountId", "AccountID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HealthPlanEventZipEntity", "AccountTag", "AccountTag", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "HealthPlanEventZipEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "HealthPlanEventZipEntity", "IsQueueGenerated", "IsQueueGenerated", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
		}
		/// <summary>Inits HealthPlanFillEventCallQueueEntity's mappings</summary>
		private void InitHealthPlanFillEventCallQueueEntityMappings()
		{
			base.AddElementMapping( "HealthPlanFillEventCallQueueEntity", "Falcon", @"dbo", "TblHealthPlanFillEventCallQueue", 2 );
			base.AddElementFieldMapping( "HealthPlanFillEventCallQueueEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HealthPlanFillEventCallQueueEntity", "CriteriaId", "CriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits HealthPlanRevenueEntity's mappings</summary>
		private void InitHealthPlanRevenueEntityMappings()
		{
			base.AddElementMapping( "HealthPlanRevenueEntity", "Falcon", @"dbo", "TblHealthPlanRevenue", 9 );
			base.AddElementFieldMapping( "HealthPlanRevenueEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HealthPlanRevenueEntity", "AccountId", "AccountId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "HealthPlanRevenueEntity", "RevenueItemTypeId", "RevenueItemTypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "HealthPlanRevenueEntity", "DateFrom", "DateFrom", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "HealthPlanRevenueEntity", "DateTo", "DateTo", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "HealthPlanRevenueEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "HealthPlanRevenueEntity", "CreatedDate", "CreatedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "HealthPlanRevenueEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "HealthPlanRevenueEntity", "ModifiedDate", "ModifiedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
		}
		/// <summary>Inits HealthPlanRevenueItemEntity's mappings</summary>
		private void InitHealthPlanRevenueItemEntityMappings()
		{
			base.AddElementMapping( "HealthPlanRevenueItemEntity", "Falcon", @"dbo", "TblHealthPlanRevenueItem", 5 );
			base.AddElementFieldMapping( "HealthPlanRevenueItemEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HealthPlanRevenueItemEntity", "HealthPlanRevenueId", "HealthPlanRevenueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "HealthPlanRevenueItemEntity", "PackageId", "PackageId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "HealthPlanRevenueItemEntity", "TestId", "TestId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "HealthPlanRevenueItemEntity", "Price", "Price", false, (int)SqlDbType.Money, 0, 4, 19, false, "", null, typeof(System.Decimal), 4 );
		}
		/// <summary>Inits HealthQuestionDependencyRuleEntity's mappings</summary>
		private void InitHealthQuestionDependencyRuleEntityMappings()
		{
			base.AddElementMapping( "HealthQuestionDependencyRuleEntity", "Falcon", @"dbo", "TblHealthQuestionDependencyRule", 3 );
			base.AddElementFieldMapping( "HealthQuestionDependencyRuleEntity", "QuestionId", "QuestionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HealthQuestionDependencyRuleEntity", "DependantQuestionId", "DependantQuestionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "HealthQuestionDependencyRuleEntity", "DependencyRule", "DependencyRule", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 2 );
		}
		/// <summary>Inits HospitalFacilityEntity's mappings</summary>
		private void InitHospitalFacilityEntityMappings()
		{
			base.AddElementMapping( "HospitalFacilityEntity", "Falcon", @"dbo", "TblHospitalFacility", 4 );
			base.AddElementFieldMapping( "HospitalFacilityEntity", "HospitalFacilityId", "HospitalFacilityId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HospitalFacilityEntity", "ContractId", "ContractId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "HospitalFacilityEntity", "ResultLetterFileId", "ResultLetterFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "HospitalFacilityEntity", "CannedMessage", "CannedMessage", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 3 );
		}
		/// <summary>Inits HospitalFacilityCampaignEntity's mappings</summary>
		private void InitHospitalFacilityCampaignEntityMappings()
		{
			base.AddElementMapping( "HospitalFacilityCampaignEntity", "Falcon", @"dbo", "TblHospitalFacilityCampaign", 6 );
			base.AddElementFieldMapping( "HospitalFacilityCampaignEntity", "FacilityCampaignId", "FacilityCampaignID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HospitalFacilityCampaignEntity", "FacilityId", "FacilityId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "HospitalFacilityCampaignEntity", "CampaignId", "CampaignId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "HospitalFacilityCampaignEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "HospitalFacilityCampaignEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "HospitalFacilityCampaignEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits HospitalPartnerEntity's mappings</summary>
		private void InitHospitalPartnerEntityMappings()
		{
			base.AddElementMapping( "HospitalPartnerEntity", "Falcon", @"dbo", "TblHospitalPartner", 16 );
			base.AddElementFieldMapping( "HospitalPartnerEntity", "HospitalPartnerId", "HospitalPartnerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HospitalPartnerEntity", "AssociatedPhoneNumber", "AssociatedPhoneNumber", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "HospitalPartnerEntity", "AdvocateId", "AdvocateID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "HospitalPartnerEntity", "IsGlobal", "IsGlobal", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "HospitalPartnerEntity", "NormalResultValidityPeriod", "NormalResultValidityPeriod", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 4 );
			base.AddElementFieldMapping( "HospitalPartnerEntity", "AbnormalResultValidityPeriod", "AbnormalResultValidityPeriod", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 5 );
			base.AddElementFieldMapping( "HospitalPartnerEntity", "CriticalResultValidityPeriod", "CriticalResultValidityPeriod", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 6 );
			base.AddElementFieldMapping( "HospitalPartnerEntity", "MailTransitDays", "MailTransitDays", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 7 );
			base.AddElementFieldMapping( "HospitalPartnerEntity", "HafTemplateId", "HAFTemplateId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "HospitalPartnerEntity", "CannedMessage", "CannedMessage", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "HospitalPartnerEntity", "CaptureSsn", "CaptureSsn", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 10 );
			base.AddElementFieldMapping( "HospitalPartnerEntity", "RecommendPackage", "RecommendPackage", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 11 );
			base.AddElementFieldMapping( "HospitalPartnerEntity", "AskPreQualificationQuestion", "AskPreQualificationQuestion", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 12 );
			base.AddElementFieldMapping( "HospitalPartnerEntity", "AttachDoctorLetter", "AttachDoctorLetter", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 13 );
			base.AddElementFieldMapping( "HospitalPartnerEntity", "RestrictEvaluation", "RestrictEvaluation", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 14 );
			base.AddElementFieldMapping( "HospitalPartnerEntity", "ShowOnlineShipping", "ShowOnlineShipping", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 15 );
		}
		/// <summary>Inits HospitalPartnerCustomerEntity's mappings</summary>
		private void InitHospitalPartnerCustomerEntityMappings()
		{
			base.AddElementMapping( "HospitalPartnerCustomerEntity", "Falcon", @"dbo", "TblHospitalPartnerCustomer", 11 );
			base.AddElementFieldMapping( "HospitalPartnerCustomerEntity", "HospitalPartnerCustomerId", "HospitalPartnerCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HospitalPartnerCustomerEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "HospitalPartnerCustomerEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "HospitalPartnerCustomerEntity", "Status", "Status", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 3 );
			base.AddElementFieldMapping( "HospitalPartnerCustomerEntity", "Outcome", "Outcome", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 4 );
			base.AddElementFieldMapping( "HospitalPartnerCustomerEntity", "CareCoordinatorOrgRoleUserId", "CareCoordinatorOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "HospitalPartnerCustomerEntity", "Notes", "Notes", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "HospitalPartnerCustomerEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "HospitalPartnerCustomerEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "HospitalPartnerCustomerEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "HospitalPartnerCustomerEntity", "ModifiedByOrgRoleUserId", "ModifiedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
		}
		/// <summary>Inits HospitalPartnerEventNotesEntity's mappings</summary>
		private void InitHospitalPartnerEventNotesEntityMappings()
		{
			base.AddElementMapping( "HospitalPartnerEventNotesEntity", "Falcon", @"dbo", "TblHospitalPartnerEventNotes", 2 );
			base.AddElementFieldMapping( "HospitalPartnerEventNotesEntity", "NotesId", "NotesId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HospitalPartnerEventNotesEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits HospitalPartnerHospitalFacilityEntity's mappings</summary>
		private void InitHospitalPartnerHospitalFacilityEntityMappings()
		{
			base.AddElementMapping( "HospitalPartnerHospitalFacilityEntity", "Falcon", @"dbo", "TblHospitalPartnerHospitalFacility", 2 );
			base.AddElementFieldMapping( "HospitalPartnerHospitalFacilityEntity", "HospitalPartnerId", "HospitalPartnerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HospitalPartnerHospitalFacilityEntity", "HospitalFacilityId", "HospitalFacilityId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits HospitalPartnerPackageEntity's mappings</summary>
		private void InitHospitalPartnerPackageEntityMappings()
		{
			base.AddElementMapping( "HospitalPartnerPackageEntity", "Falcon", @"dbo", "TblHospitalPartnerPackage", 3 );
			base.AddElementFieldMapping( "HospitalPartnerPackageEntity", "HospitalpartnerId", "HospitalpartnerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HospitalPartnerPackageEntity", "PackageId", "PackageId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "HospitalPartnerPackageEntity", "IsRecommended", "IsRecommended", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
		}
		/// <summary>Inits HospitalPartnerShippingOptionEntity's mappings</summary>
		private void InitHospitalPartnerShippingOptionEntityMappings()
		{
			base.AddElementMapping( "HospitalPartnerShippingOptionEntity", "Falcon", @"dbo", "TblHospitalPartnerShippingOption", 2 );
			base.AddElementFieldMapping( "HospitalPartnerShippingOptionEntity", "HospitalPartnerId", "HospitalPartnerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HospitalPartnerShippingOptionEntity", "ShippingOptionId", "ShippingOptionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits HospitalPartnerTerritoryEntity's mappings</summary>
		private void InitHospitalPartnerTerritoryEntityMappings()
		{
			base.AddElementMapping( "HospitalPartnerTerritoryEntity", "Falcon", @"dbo", "TblHospitalPartnerTerritory", 2 );
			base.AddElementFieldMapping( "HospitalPartnerTerritoryEntity", "HospitalPartnerId", "HospitalPartnerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HospitalPartnerTerritoryEntity", "TerritoryId", "TerritoryID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits HostAdvocateDetailEntity's mappings</summary>
		private void InitHostAdvocateDetailEntityMappings()
		{
			base.AddElementMapping( "HostAdvocateDetailEntity", "Falcon", @"dbo", "TblHostAdvocateDetail", 2 );
			base.AddElementFieldMapping( "HostAdvocateDetailEntity", "HostId", "HostID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HostAdvocateDetailEntity", "AffiliateId", "AffiliateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits HostEventDetailsEntity's mappings</summary>
		private void InitHostEventDetailsEntityMappings()
		{
			base.AddElementMapping( "HostEventDetailsEntity", "Falcon", @"dbo", "TblHostEventDetails", 15 );
			base.AddElementFieldMapping( "HostEventDetailsEntity", "HostEventId", "HostEventID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HostEventDetailsEntity", "HostId", "HostID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "HostEventDetailsEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "HostEventDetailsEntity", "BConfirmMinRequirements", "bConfirmMinRequirements", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "HostEventDetailsEntity", "BConfirmedVisually", "bConfirmedVisually", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "HostEventDetailsEntity", "ConfirmedVisuallyComments", "ConfirmedVisuallyComments", true, (int)SqlDbType.VarChar, 5000, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "HostEventDetailsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "HostEventDetailsEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "HostEventDetailsEntity", "DepositAmount", "DepositAmount", true, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 8 );
			base.AddElementFieldMapping( "HostEventDetailsEntity", "PayByCheck", "PayByCheck", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 9 );
			base.AddElementFieldMapping( "HostEventDetailsEntity", "PayByCreditCard", "PayByCreditCard", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 10 );
			base.AddElementFieldMapping( "HostEventDetailsEntity", "PaymentDueDate", "PaymentDueDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "HostEventDetailsEntity", "DepositDueDate", "DepositDueDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 12 );
			base.AddElementFieldMapping( "HostEventDetailsEntity", "InstructionForCallCenter", "InstructionForCallCenter", true, (int)SqlDbType.VarChar, 5000, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "HostEventDetailsEntity", "IsHostRatedbyTechnician", "IsHostRatedbyTechnician", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 14 );
		}
		/// <summary>Inits HostFacilityRankingEntity's mappings</summary>
		private void InitHostFacilityRankingEntityMappings()
		{
			base.AddElementMapping( "HostFacilityRankingEntity", "Falcon", @"dbo", "TblHostFacilityRanking", 13 );
			base.AddElementFieldMapping( "HostFacilityRankingEntity", "HostFacilityRankingId", "HostFacilityRankingId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HostFacilityRankingEntity", "HostId", "HostId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "HostFacilityRankingEntity", "Ranking", "Ranking", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "HostFacilityRankingEntity", "RankedByRole", "RankedByRole", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "HostFacilityRankingEntity", "InternetAccess", "InternetAccess", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "HostFacilityRankingEntity", "NumberOfPlugPoint", "NumberOfPlugPoint", true, (int)SqlDbType.TinyInt, 0, 0, 3, false, "", null, typeof(System.Byte), 5 );
			base.AddElementFieldMapping( "HostFacilityRankingEntity", "RoomSize", "RoomSize", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "HostFacilityRankingEntity", "RoomNeedsCleared", "RoomNeedsCleared", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "HostFacilityRankingEntity", "Notes", "Notes", true, (int)SqlDbType.VarChar, 2000, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "HostFacilityRankingEntity", "RankedByOrganizationRoleUserId", "RankedByOrganizationRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "HostFacilityRankingEntity", "CreatedDate", "CreatedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 10 );
			base.AddElementFieldMapping( "HostFacilityRankingEntity", "IsCurrentForRole", "IsCurrentForRole", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 11 );
			base.AddElementFieldMapping( "HostFacilityRankingEntity", "IsConfirmedVisually", "IsConfirmedVisually", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 12 );
		}
		/// <summary>Inits HostImageEntity's mappings</summary>
		private void InitHostImageEntityMappings()
		{
			base.AddElementMapping( "HostImageEntity", "Falcon", @"dbo", "TblHostImage", 3 );
			base.AddElementFieldMapping( "HostImageEntity", "HostId", "HostId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HostImageEntity", "ImageId", "ImageId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "HostImageEntity", "HostImageType", "HostImageType", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
		}
		/// <summary>Inits HostNotesEntity's mappings</summary>
		private void InitHostNotesEntityMappings()
		{
			base.AddElementMapping( "HostNotesEntity", "Falcon", @"dbo", "TblHostNotes", 3 );
			base.AddElementFieldMapping( "HostNotesEntity", "HostId", "HostId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HostNotesEntity", "CallCenterInstructions", "CallCenterInstructions", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "HostNotesEntity", "TechnicianInstructions", "TechnicianInstructions", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 2 );
		}
		/// <summary>Inits HostPaymentEntity's mappings</summary>
		private void InitHostPaymentEntityMappings()
		{
			base.AddElementMapping( "HostPaymentEntity", "Falcon", @"dbo", "TblHostPayment", 17 );
			base.AddElementFieldMapping( "HostPaymentEntity", "HostPaymentId", "HostPaymentID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HostPaymentEntity", "IsDeposit", "IsDeposit", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 1 );
			base.AddElementFieldMapping( "HostPaymentEntity", "HostId", "HostID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "HostPaymentEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "HostPaymentEntity", "Amount", "Amount", false, (int)SqlDbType.Money, 0, 4, 19, false, "", null, typeof(System.Decimal), 4 );
			base.AddElementFieldMapping( "HostPaymentEntity", "PaymentMode", "PaymentMode", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "HostPaymentEntity", "PayableTo", "PayableTo", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "HostPaymentEntity", "MailingOrganizationName", "MailingOrganizationName", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "HostPaymentEntity", "MailingAttentionOf", "MailingAttentionOf", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "HostPaymentEntity", "MailingAddressId", "MailingAddressID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "HostPaymentEntity", "DueDate", "DueDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 10 );
			base.AddElementFieldMapping( "HostPaymentEntity", "CreatorOrganizationRoleUserId", "CreatorOrganizationRoleUserID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 11 );
			base.AddElementFieldMapping( "HostPaymentEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 12 );
			base.AddElementFieldMapping( "HostPaymentEntity", "DepositType", "DepositType", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 13 );
			base.AddElementFieldMapping( "HostPaymentEntity", "DepositFullRefundDays", "DepositFullRefundDays", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 14 );
			base.AddElementFieldMapping( "HostPaymentEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 15 );
			base.AddElementFieldMapping( "HostPaymentEntity", "Status", "Status", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 16 );
		}
		/// <summary>Inits HostPaymentTransactionEntity's mappings</summary>
		private void InitHostPaymentTransactionEntityMappings()
		{
			base.AddElementMapping( "HostPaymentTransactionEntity", "Falcon", @"dbo", "TblHostPaymentTransaction", 7 );
			base.AddElementFieldMapping( "HostPaymentTransactionEntity", "HostPaymentId", "HostPaymentID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "HostPaymentTransactionEntity", "TransactionType", "TransactionType", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "HostPaymentTransactionEntity", "PaymentMethod", "PaymentMethod", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "HostPaymentTransactionEntity", "Amount", "Amount", false, (int)SqlDbType.Money, 0, 4, 19, false, "", null, typeof(System.Decimal), 3 );
			base.AddElementFieldMapping( "HostPaymentTransactionEntity", "Notes", "Notes", false, (int)SqlDbType.VarChar, 5000, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "HostPaymentTransactionEntity", "TransactionDate", "TransactionDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "HostPaymentTransactionEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
		}
		/// <summary>Inits IcdCodesEntity's mappings</summary>
		private void InitIcdCodesEntityMappings()
		{
			base.AddElementMapping( "IcdCodesEntity", "Falcon", @"dbo", "TblIcdCodes", 7 );
			base.AddElementFieldMapping( "IcdCodesEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "IcdCodesEntity", "IcdCode", "IcdCode", false, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "IcdCodesEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "IcdCodesEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "IcdCodesEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "IcdCodesEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "IcdCodesEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
		}
		/// <summary>Inits IflocationMasterEntity's mappings</summary>
		private void InitIflocationMasterEntityMappings()
		{
			base.AddElementMapping( "IflocationMasterEntity", "Falcon", @"dbo", "TblIFLocationMaster", 3 );
			base.AddElementFieldMapping( "IflocationMasterEntity", "LocationId", "LocationID", false, (int)SqlDbType.TinyInt, 0, 0, 3, true, "SCOPE_IDENTITY()", null, typeof(System.Byte), 0 );
			base.AddElementFieldMapping( "IflocationMasterEntity", "Label", "Label", false, (int)SqlDbType.NVarChar, 100, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "IflocationMasterEntity", "IncidentalFindingsId", "IncidentalFindingsID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
		}
		/// <summary>Inits IncidentalFindingIncidentalFindingReadingGroupEntity's mappings</summary>
		private void InitIncidentalFindingIncidentalFindingReadingGroupEntityMappings()
		{
			base.AddElementMapping( "IncidentalFindingIncidentalFindingReadingGroupEntity", "Falcon", @"dbo", "TblIncidentalFindingIncidentalFindingReadingGroup", 2 );
			base.AddElementFieldMapping( "IncidentalFindingIncidentalFindingReadingGroupEntity", "IncidentalFindingId", "IncidentalFindingId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "IncidentalFindingIncidentalFindingReadingGroupEntity", "GroupId", "GroupId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits IncidentalFindingReadingGroupEntity's mappings</summary>
		private void InitIncidentalFindingReadingGroupEntityMappings()
		{
			base.AddElementMapping( "IncidentalFindingReadingGroupEntity", "Falcon", @"dbo", "TblIncidentalFindingReadingGroup", 5 );
			base.AddElementFieldMapping( "IncidentalFindingReadingGroupEntity", "GroupId", "GroupId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "IncidentalFindingReadingGroupEntity", "GroupName", "GroupName", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "IncidentalFindingReadingGroupEntity", "DisplayControlType", "DisplayControlType", true, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "IncidentalFindingReadingGroupEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "IncidentalFindingReadingGroupEntity", "CreatedOn", "CreatedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
		}
		/// <summary>Inits IncidentalFindingReadingGroupItemEntity's mappings</summary>
		private void InitIncidentalFindingReadingGroupItemEntityMappings()
		{
			base.AddElementMapping( "IncidentalFindingReadingGroupItemEntity", "Falcon", @"dbo", "TblIncidentalFindingReadingGroupItem", 5 );
			base.AddElementFieldMapping( "IncidentalFindingReadingGroupItemEntity", "GroupItemId", "GroupItemId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "IncidentalFindingReadingGroupItemEntity", "GroupId", "GroupId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "IncidentalFindingReadingGroupItemEntity", "Label", "Label", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "IncidentalFindingReadingGroupItemEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "IncidentalFindingReadingGroupItemEntity", "CreatedOn", "CreatedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
		}
		/// <summary>Inits IncidentalFindingsEntity's mappings</summary>
		private void InitIncidentalFindingsEntityMappings()
		{
			base.AddElementMapping( "IncidentalFindingsEntity", "Falcon", @"dbo", "TblIncidentalFindings", 7 );
			base.AddElementFieldMapping( "IncidentalFindingsEntity", "IncidentalFindingsId", "IncidentalFindingsID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "IncidentalFindingsEntity", "Label", "Label", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "IncidentalFindingsEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "IncidentalFindingsEntity", "LocationCount", "LocationCount", true, (int)SqlDbType.TinyInt, 0, 0, 3, false, "", null, typeof(System.Byte), 3 );
			base.AddElementFieldMapping( "IncidentalFindingsEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "IncidentalFindingsEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "IncidentalFindingsEntity", "DateCreated", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
		}
		/// <summary>Inits IncomingPhoneNumberResolverRuleEntity's mappings</summary>
		private void InitIncomingPhoneNumberResolverRuleEntityMappings()
		{
			base.AddElementMapping( "IncomingPhoneNumberResolverRuleEntity", "Falcon", @"dbo", "TblIncomingPhoneNumberResolverRule", 6 );
			base.AddElementFieldMapping( "IncomingPhoneNumberResolverRuleEntity", "Id", "ID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "IncomingPhoneNumberResolverRuleEntity", "MarketingMaterialTypeId", "MarketingMaterialTypeID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "IncomingPhoneNumberResolverRuleEntity", "AdvocateTypeId", "AdvocateTypeID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "IncomingPhoneNumberResolverRuleEntity", "AdvocateId", "AdvocateID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "IncomingPhoneNumberResolverRuleEntity", "Tag", "Tag", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "IncomingPhoneNumberResolverRuleEntity", "PhoneNumber", "PhoneNumber", false, (int)SqlDbType.VarChar, 20, 0, 0, false, "", null, typeof(System.String), 5 );
		}
		/// <summary>Inits InsuranceCompanyEntity's mappings</summary>
		private void InitInsuranceCompanyEntityMappings()
		{
			base.AddElementMapping( "InsuranceCompanyEntity", "Falcon", @"dbo", "TblInsuranceCompany", 7 );
			base.AddElementFieldMapping( "InsuranceCompanyEntity", "InsuranceCompanyId", "InsuranceCompanyId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "InsuranceCompanyEntity", "Code", "Code", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "InsuranceCompanyEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 2000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "InsuranceCompanyEntity", "EdiPayerNumber", "EdiPayerNumber", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "InsuranceCompanyEntity", "Address", "Address", true, (int)SqlDbType.VarChar, 4000, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "InsuranceCompanyEntity", "InNetwork", "InNetwork", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "InsuranceCompanyEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
		}
		/// <summary>Inits InsurancePaymentEntity's mappings</summary>
		private void InitInsurancePaymentEntityMappings()
		{
			base.AddElementMapping( "InsurancePaymentEntity", "Falcon", @"dbo", "TblInsurancePayment", 4 );
			base.AddElementFieldMapping( "InsurancePaymentEntity", "InsurancePaymentId", "InsurancePaymentId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "InsurancePaymentEntity", "PaymentId", "PaymentId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "InsurancePaymentEntity", "AmountToBePaid", "AmountToBePaid", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 2 );
			base.AddElementFieldMapping( "InsurancePaymentEntity", "Amount", "Amount", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 3 );
		}
		/// <summary>Inits InsuranceServiceTypeEntity's mappings</summary>
		private void InitInsuranceServiceTypeEntityMappings()
		{
			base.AddElementMapping( "InsuranceServiceTypeEntity", "Falcon", @"dbo", "TblInsuranceServiceType", 4 );
			base.AddElementFieldMapping( "InsuranceServiceTypeEntity", "InsuranceServiceTypeId", "InsuranceServiceTypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "InsuranceServiceTypeEntity", "Code", "Code", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "InsuranceServiceTypeEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "InsuranceServiceTypeEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
		}
		/// <summary>Inits InventoryItemEntity's mappings</summary>
		private void InitInventoryItemEntityMappings()
		{
			base.AddElementMapping( "InventoryItemEntity", "Falcon", @"dbo", "TblInventoryItem", 8 );
			base.AddElementFieldMapping( "InventoryItemEntity", "InventoryItemId", "InventoryItemID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "InventoryItemEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "InventoryItemEntity", "ItemType", "ItemType", false, (int)SqlDbType.SmallInt, 0, 0, 5, false, "", null, typeof(System.Int16), 2 );
			base.AddElementFieldMapping( "InventoryItemEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "InventoryItemEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "InventoryItemEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "InventoryItemEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "InventoryItemEntity", "Count", "Count", false, (int)SqlDbType.SmallInt, 0, 0, 5, false, "", null, typeof(System.Int16), 7 );
		}
		/// <summary>Inits InventoryItemTestEntity's mappings</summary>
		private void InitInventoryItemTestEntityMappings()
		{
			base.AddElementMapping( "InventoryItemTestEntity", "Falcon", @"dbo", "TblInventoryItemTest", 6 );
			base.AddElementFieldMapping( "InventoryItemTestEntity", "InventoryItemTestId", "InventoryItemTestID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "InventoryItemTestEntity", "InventoryItemId", "InventoryItemID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "InventoryItemTestEntity", "TestId", "TestID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "InventoryItemTestEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "InventoryItemTestEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "InventoryItemTestEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
		}
		/// <summary>Inits ItemEntity's mappings</summary>
		private void InitItemEntityMappings()
		{
			base.AddElementMapping( "ItemEntity", "Falcon", @"dbo", "TblItem", 11 );
			base.AddElementFieldMapping( "ItemEntity", "ItemId", "ItemID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ItemEntity", "InventoryItemId", "InventoryItemID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ItemEntity", "ItemCode", "ItemCode", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ItemEntity", "Skucode", "SKUCode", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "ItemEntity", "ManufacturerName", "ManufacturerName", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "ItemEntity", "ManufacturerId", "ManufacturerID", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "ItemEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "ItemEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "ItemEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
			base.AddElementFieldMapping( "ItemEntity", "IsAllocated", "IsAllocated", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 9 );
			base.AddElementFieldMapping( "ItemEntity", "Notes", "Notes", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 10 );
		}
		/// <summary>Inits ItemTypeEntity's mappings</summary>
		private void InitItemTypeEntityMappings()
		{
			base.AddElementMapping( "ItemTypeEntity", "Falcon", @"dbo", "TblItemType", 7 );
			base.AddElementFieldMapping( "ItemTypeEntity", "ItemTypeId", "ItemTypeID", false, (int)SqlDbType.TinyInt, 0, 0, 3, true, "SCOPE_IDENTITY()", null, typeof(System.Byte), 0 );
			base.AddElementFieldMapping( "ItemTypeEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ItemTypeEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ItemTypeEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "ItemTypeEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "ItemTypeEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "ItemTypeEntity", "IsTestAssociated", "IsTestAssociated", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
		}
		/// <summary>Inits KynLabValuesEntity's mappings</summary>
		private void InitKynLabValuesEntityMappings()
		{
			base.AddElementMapping( "KynLabValuesEntity", "Falcon", @"dbo", "TblKynLabValues", 23 );
			base.AddElementFieldMapping( "KynLabValuesEntity", "EventCustomerResultId", "EventCustomerResultId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "KynLabValuesEntity", "Glucose", "Glucose", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 1 );
			base.AddElementFieldMapping( "KynLabValuesEntity", "TotalCholesterol", "TotalCholesterol", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 2 );
			base.AddElementFieldMapping( "KynLabValuesEntity", "Triglycerides", "Triglycerides", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 3 );
			base.AddElementFieldMapping( "KynLabValuesEntity", "Hdl", "Hdl", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 4 );
			base.AddElementFieldMapping( "KynLabValuesEntity", "FastingStatus", "FastingStatus", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "KynLabValuesEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "KynLabValuesEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "KynLabValuesEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "KynLabValuesEntity", "ModifiedByOrgRoleUserId", "ModifiedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "KynLabValuesEntity", "ManualSystolic", "ManualSystolic", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 10 );
			base.AddElementFieldMapping( "KynLabValuesEntity", "ManualDiastolic", "ManualDiastolic", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 11 );
			base.AddElementFieldMapping( "KynLabValuesEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "KynLabValuesEntity", "A1c", "A1c", true, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 13 );
			base.AddElementFieldMapping( "KynLabValuesEntity", "BodyFat", "BodyFat", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 14 );
			base.AddElementFieldMapping( "KynLabValuesEntity", "BoneDensity", "BoneDensity", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 15 );
			base.AddElementFieldMapping( "KynLabValuesEntity", "Psa", "Psa", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 16 );
			base.AddElementFieldMapping( "KynLabValuesEntity", "NonHdlCholestrol", "NonHdlCholestrol", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 17 );
			base.AddElementFieldMapping( "KynLabValuesEntity", "Nicotine", "Nicotine", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 18 );
			base.AddElementFieldMapping( "KynLabValuesEntity", "Cotinine", "Cotinine", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 19 );
			base.AddElementFieldMapping( "KynLabValuesEntity", "Smoker", "Smoker", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 20 );
			base.AddElementFieldMapping( "KynLabValuesEntity", "LdlCholestrol", "LdlCholestrol", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 21 );
			base.AddElementFieldMapping( "KynLabValuesEntity", "Notes", "Notes", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 22 );
		}
		/// <summary>Inits LabEntity's mappings</summary>
		private void InitLabEntityMappings()
		{
			base.AddElementMapping( "LabEntity", "Falcon", @"dbo", "TblLab", 6 );
			base.AddElementFieldMapping( "LabEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "LabEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "LabEntity", "Alias", "Alias", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "LabEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "LabEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "LabEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits LanguageEntity's mappings</summary>
		private void InitLanguageEntityMappings()
		{
			base.AddElementMapping( "LanguageEntity", "Falcon", @"dbo", "TblLanguage", 6 );
			base.AddElementFieldMapping( "LanguageEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "LanguageEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "LanguageEntity", "Alias", "Alias", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "LanguageEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "LanguageEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "LanguageEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits LanguageBarrierCallQueueEntity's mappings</summary>
		private void InitLanguageBarrierCallQueueEntityMappings()
		{
			base.AddElementMapping( "LanguageBarrierCallQueueEntity", "Falcon", @"dbo", "TblLanguageBarrierCallQueue", 8 );
			base.AddElementFieldMapping( "LanguageBarrierCallQueueEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "LanguageBarrierCallQueueEntity", "HealthPlanId", "HealthPlanId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "LanguageBarrierCallQueueEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "LanguageBarrierCallQueueEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "LanguageBarrierCallQueueEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "LanguageBarrierCallQueueEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "LanguageBarrierCallQueueEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "LanguageBarrierCallQueueEntity", "CallDate", "CallDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
		}
		/// <summary>Inits LanguageBarrierCallQueueCriteriaAssignmentEntity's mappings</summary>
		private void InitLanguageBarrierCallQueueCriteriaAssignmentEntityMappings()
		{
			base.AddElementMapping( "LanguageBarrierCallQueueCriteriaAssignmentEntity", "Falcon", @"dbo", "TblLanguageBarrierCallQueueCriteriaAssignment", 2 );
			base.AddElementFieldMapping( "LanguageBarrierCallQueueCriteriaAssignmentEntity", "LanguageBarrierCallQueueId", "LanguageBarrierCallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "LanguageBarrierCallQueueCriteriaAssignmentEntity", "CriteriaId", "CriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits LoginOtpEntity's mappings</summary>
		private void InitLoginOtpEntityMappings()
		{
			base.AddElementMapping( "LoginOtpEntity", "Falcon", @"dbo", "TblLoginOtp", 4 );
			base.AddElementFieldMapping( "LoginOtpEntity", "UserLoginId", "UserLoginId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "LoginOtpEntity", "Otp", "Otp", false, (int)SqlDbType.VarChar, 20, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "LoginOtpEntity", "AttemptCount", "AttemptCount", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 2 );
			base.AddElementFieldMapping( "LoginOtpEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
		}
		/// <summary>Inits LoginSettingsEntity's mappings</summary>
		private void InitLoginSettingsEntityMappings()
		{
			base.AddElementMapping( "LoginSettingsEntity", "Falcon", @"dbo", "TblLoginSettings", 5 );
			base.AddElementFieldMapping( "LoginSettingsEntity", "UserLoginId", "UserLoginId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "LoginSettingsEntity", "GoogleAuthenticatorSecretKey", "GoogleAuthenticatorSecretKey", true, (int)SqlDbType.NVarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "LoginSettingsEntity", "DownloadFilePin", "DownloadFilePin", true, (int)SqlDbType.VarChar, 10, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "LoginSettingsEntity", "AuthenticationModeId", "AuthenticationModeId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "LoginSettingsEntity", "IsFirstLogin", "IsFirstLogin", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
		}
		/// <summary>Inits LoincCrosswalkEntity's mappings</summary>
		private void InitLoincCrosswalkEntityMappings()
		{
			base.AddElementMapping( "LoincCrosswalkEntity", "Falcon", @"dbo", "TblLoincCrosswalk", 22 );
			base.AddElementFieldMapping( "LoincCrosswalkEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "LoincCrosswalkEntity", "LoincNumber", "LoincNumber", true, (int)SqlDbType.NVarChar, 50, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "LoincCrosswalkEntity", "Component", "Component", true, (int)SqlDbType.NVarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "LoincCrosswalkEntity", "System", "System", true, (int)SqlDbType.NVarChar, 256, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "LoincCrosswalkEntity", "MethodType", "MethodType", true, (int)SqlDbType.NVarChar, 256, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "LoincCrosswalkEntity", "VersionLastChanged", "VersionLastChanged", true, (int)SqlDbType.NVarChar, 50, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "LoincCrosswalkEntity", "DefinitionDescription", "DefinitionDescription", true, (int)SqlDbType.NVarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "LoincCrosswalkEntity", "Formula", "Formula", true, (int)SqlDbType.NVarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "LoincCrosswalkEntity", "Species", "Species", true, (int)SqlDbType.NVarChar, 100, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "LoincCrosswalkEntity", "ExampleAnswers", "ExampleAnswers", true, (int)SqlDbType.NVarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "LoincCrosswalkEntity", "SurveyQuestionText", "SurveyQuestionText", true, (int)SqlDbType.NVarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "LoincCrosswalkEntity", "SurveyQuestionSource", "SurveyQuestionSource", true, (int)SqlDbType.NVarChar, 256, 0, 0, false, "", null, typeof(System.String), 11 );
			base.AddElementFieldMapping( "LoincCrosswalkEntity", "UnitsRequired", "UnitsRequired", true, (int)SqlDbType.NVarChar, 10, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "LoincCrosswalkEntity", "SubmittedUnits", "SubmittedUnits", true, (int)SqlDbType.NVarChar, 100, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "LoincCrosswalkEntity", "CdiscCommonTests", "CdiscCommonTests", true, (int)SqlDbType.NVarChar, 50, 0, 0, false, "", null, typeof(System.String), 14 );
			base.AddElementFieldMapping( "LoincCrosswalkEntity", "Hl7FieldSubfieldId", "Hl7FieldSubfieldId", true, (int)SqlDbType.NVarChar, 100, 0, 0, false, "", null, typeof(System.String), 15 );
			base.AddElementFieldMapping( "LoincCrosswalkEntity", "ExternalCopyrightNotice", "ExternalCopyrightNotice", true, (int)SqlDbType.NVarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 16 );
			base.AddElementFieldMapping( "LoincCrosswalkEntity", "ExampleUnits", "ExampleUnits", true, (int)SqlDbType.NVarChar, 100, 0, 0, false, "", null, typeof(System.String), 17 );
			base.AddElementFieldMapping( "LoincCrosswalkEntity", "LongCommonName", "LongCommonName", true, (int)SqlDbType.NVarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 18 );
			base.AddElementFieldMapping( "LoincCrosswalkEntity", "UploadId", "UploadId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 19 );
			base.AddElementFieldMapping( "LoincCrosswalkEntity", "Year", "Year", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 20 );
			base.AddElementFieldMapping( "LoincCrosswalkEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 21 );
		}
		/// <summary>Inits LoincLabDataEntity's mappings</summary>
		private void InitLoincLabDataEntityMappings()
		{
			base.AddElementMapping( "LoincLabDataEntity", "Falcon", @"dbo", "TblLoincLabData", 12 );
			base.AddElementFieldMapping( "LoincLabDataEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "LoincLabDataEntity", "MemberId", "MemberId", true, (int)SqlDbType.NVarChar, 100, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "LoincLabDataEntity", "Gmpi", "Gmpi", true, (int)SqlDbType.NVarChar, 100, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "LoincLabDataEntity", "Loinc", "Loinc", true, (int)SqlDbType.NVarChar, 50, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "LoincLabDataEntity", "LoincDescription", "LoincDescription", true, (int)SqlDbType.NVarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "LoincLabDataEntity", "ResultValue", "ResultValue", true, (int)SqlDbType.NVarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "LoincLabDataEntity", "ResultUnits", "ResultUnits", true, (int)SqlDbType.NVarChar, 100, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "LoincLabDataEntity", "RefRange", "RefRange", true, (int)SqlDbType.NVarChar, 100, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "LoincLabDataEntity", "UploadId", "UploadId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "LoincLabDataEntity", "Year", "Year", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 9 );
			base.AddElementFieldMapping( "LoincLabDataEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 10 );
			base.AddElementFieldMapping( "LoincLabDataEntity", "DateOfService", "DateOfService", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
		}
		/// <summary>Inits LookupEntity's mappings</summary>
		private void InitLookupEntityMappings()
		{
			base.AddElementMapping( "LookupEntity", "Falcon", @"dbo", "TblLookup", 11 );
			base.AddElementFieldMapping( "LookupEntity", "LookupId", "LookupId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "LookupEntity", "LookupTypeId", "LookupTypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "LookupEntity", "Alias", "Alias", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "LookupEntity", "DisplayName", "DisplayName", false, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "LookupEntity", "Description", "Description", true, (int)SqlDbType.NText, 1073741823, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "LookupEntity", "RelativeOrder", "RelativeOrder", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 5 );
			base.AddElementFieldMapping( "LookupEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "LookupEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "LookupEntity", "DataRecorderCreatorId", "DataRecorderCreatorID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "LookupEntity", "DataRecorderModifierId", "DataRecorderModifierID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "LookupEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 10 );
		}
		/// <summary>Inits LookupTypeEntity's mappings</summary>
		private void InitLookupTypeEntityMappings()
		{
			base.AddElementMapping( "LookupTypeEntity", "Falcon", @"dbo", "TblLookupType", 6 );
			base.AddElementFieldMapping( "LookupTypeEntity", "LookupTypeId", "LookupTypeID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "LookupTypeEntity", "Alias", "Alias", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "LookupTypeEntity", "DisplayName", "DisplayName", false, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "LookupTypeEntity", "Description", "Description", true, (int)SqlDbType.NText, 1073741823, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "LookupTypeEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "LookupTypeEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
		}
		/// <summary>Inits MailRoundCallQueueEntity's mappings</summary>
		private void InitMailRoundCallQueueEntityMappings()
		{
			base.AddElementMapping( "MailRoundCallQueueEntity", "Falcon", @"dbo", "TblMailRoundCallQueue", 8 );
			base.AddElementFieldMapping( "MailRoundCallQueueEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MailRoundCallQueueEntity", "HealthPlanId", "HealthPlanId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "MailRoundCallQueueEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "MailRoundCallQueueEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "MailRoundCallQueueEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "MailRoundCallQueueEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "MailRoundCallQueueEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "MailRoundCallQueueEntity", "CallDate", "CallDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
		}
		/// <summary>Inits MailRoundCallQueueCriteriaAssignmentEntity's mappings</summary>
		private void InitMailRoundCallQueueCriteriaAssignmentEntityMappings()
		{
			base.AddElementMapping( "MailRoundCallQueueCriteriaAssignmentEntity", "Falcon", @"dbo", "TblMailRoundCallQueueCriteriaAssignment", 2 );
			base.AddElementFieldMapping( "MailRoundCallQueueCriteriaAssignmentEntity", "MailRoundCallQueueId", "MailRoundCallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MailRoundCallQueueCriteriaAssignmentEntity", "CriteriaId", "CriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits MarketingOfferRoleMappingEntity's mappings</summary>
		private void InitMarketingOfferRoleMappingEntityMappings()
		{
			base.AddElementMapping( "MarketingOfferRoleMappingEntity", "Falcon", @"dbo", "TblMarketingOfferRoleMapping", 4 );
			base.AddElementFieldMapping( "MarketingOfferRoleMappingEntity", "MarketingOfferRoleMappingId", "MarketingOfferRoleMappingID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MarketingOfferRoleMappingEntity", "MarketingOfferId", "MarketingOfferID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "MarketingOfferRoleMappingEntity", "RoleId", "RoleID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "MarketingOfferRoleMappingEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
		}
		/// <summary>Inits MarketingOffersEntity's mappings</summary>
		private void InitMarketingOffersEntityMappings()
		{
			base.AddElementMapping( "MarketingOffersEntity", "Falcon", @"dbo", "TblMarketingOffers", 19 );
			base.AddElementFieldMapping( "MarketingOffersEntity", "MarketingOfferId", "MarketingOfferID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MarketingOffersEntity", "MarketingOfferTypeId", "MarketingOfferTypeID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "MarketingOffersEntity", "IsGlobal", "IsGlobal", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
			base.AddElementFieldMapping( "MarketingOffersEntity", "IsPercentage", "IsPercentage", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "MarketingOffersEntity", "DiscountType", "DiscountType", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "MarketingOffersEntity", "MarketingOfferValue", "MarketingOfferValue", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 5 );
			base.AddElementFieldMapping( "MarketingOffersEntity", "MarketingOfferDescription", "MarketingOfferDescription", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "MarketingOffersEntity", "IsFree", "IsFree", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "MarketingOffersEntity", "IsEventbased", "IsEventbased", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
			base.AddElementFieldMapping( "MarketingOffersEntity", "MinimumPurchaseAmount", "MinimumPurchaseAmount", true, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 9 );
			base.AddElementFieldMapping( "MarketingOffersEntity", "CreatedUserId", "CreatedUserID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
			base.AddElementFieldMapping( "MarketingOffersEntity", "ValidityStartDate", "ValidityStartDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "MarketingOffersEntity", "ValidityEndDate", "ValidityEndDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 12 );
			base.AddElementFieldMapping( "MarketingOffersEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 13 );
			base.AddElementFieldMapping( "MarketingOffersEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 14 );
			base.AddElementFieldMapping( "MarketingOffersEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 15 );
			base.AddElementFieldMapping( "MarketingOffersEntity", "MaximumNumberTimesUsed", "MaximumNumberTimesUsed", false, (int)SqlDbType.Decimal, 0, 0, 18, false, "", null, typeof(System.Decimal), 16 );
			base.AddElementFieldMapping( "MarketingOffersEntity", "MarketingOfferCode", "MarketingOfferCode", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 17 );
			base.AddElementFieldMapping( "MarketingOffersEntity", "CustomerRange", "CustomerRange", false, (int)SqlDbType.TinyInt, 0, 0, 3, false, "", null, typeof(System.Byte), 18 );
		}
		/// <summary>Inits MarketingOfferSignUpModeEntity's mappings</summary>
		private void InitMarketingOfferSignUpModeEntityMappings()
		{
			base.AddElementMapping( "MarketingOfferSignUpModeEntity", "Falcon", @"dbo", "TblMarketingOfferSignUpMode", 4 );
			base.AddElementFieldMapping( "MarketingOfferSignUpModeEntity", "MarketingOfferSignUpModeId", "MarketingOfferSignUpModeID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MarketingOfferSignUpModeEntity", "MarketingOfferId", "MarketingOfferID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "MarketingOfferSignUpModeEntity", "SignUpMode", "SignUpMode", false, (int)SqlDbType.TinyInt, 0, 0, 3, false, "", null, typeof(System.Byte), 2 );
			base.AddElementFieldMapping( "MarketingOfferSignUpModeEntity", "IsActive", "IsActive", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
		}
		/// <summary>Inits MarketingOfferTypeEntity's mappings</summary>
		private void InitMarketingOfferTypeEntityMappings()
		{
			base.AddElementMapping( "MarketingOfferTypeEntity", "Falcon", @"dbo", "TblMarketingOfferType", 7 );
			base.AddElementFieldMapping( "MarketingOfferTypeEntity", "MarketingOfferTypeId", "MarketingOfferTypeID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MarketingOfferTypeEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "MarketingOfferTypeEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 5000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "MarketingOfferTypeEntity", "IsEventCoupon", "IsEventCoupon", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "MarketingOfferTypeEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "MarketingOfferTypeEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "MarketingOfferTypeEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
		}
		/// <summary>Inits MarketingOrderShippingInfoEntity's mappings</summary>
		private void InitMarketingOrderShippingInfoEntityMappings()
		{
			base.AddElementMapping( "MarketingOrderShippingInfoEntity", "Falcon", @"dbo", "tblMarketingOrderShippingInfo", 14 );
			base.AddElementFieldMapping( "MarketingOrderShippingInfoEntity", "MarketingOrderShippingInfoId", "MarketingOrderShippingInfoID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MarketingOrderShippingInfoEntity", "OrganizationName", "OrganizationName", false, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "MarketingOrderShippingInfoEntity", "FirstName", "FirstName", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "MarketingOrderShippingInfoEntity", "MiddleName", "MiddleName", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "MarketingOrderShippingInfoEntity", "LastName", "LastName", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "MarketingOrderShippingInfoEntity", "Address1", "Address1", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "MarketingOrderShippingInfoEntity", "Address2", "Address2", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "MarketingOrderShippingInfoEntity", "City", "City", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "MarketingOrderShippingInfoEntity", "State", "State", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "MarketingOrderShippingInfoEntity", "ZipCode", "ZipCode", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "MarketingOrderShippingInfoEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 10 );
			base.AddElementFieldMapping( "MarketingOrderShippingInfoEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "MarketingOrderShippingInfoEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 12 );
			base.AddElementFieldMapping( "MarketingOrderShippingInfoEntity", "PhoneNumber", "PhoneNumber", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 13 );
		}
		/// <summary>Inits MarketingPrintOrderEntity's mappings</summary>
		private void InitMarketingPrintOrderEntityMappings()
		{
			base.AddElementMapping( "MarketingPrintOrderEntity", "Falcon", @"dbo", "tblMarketingPrintOrder", 11 );
			base.AddElementFieldMapping( "MarketingPrintOrderEntity", "MarketingPrintOrderId", "MarketingPrintOrderID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MarketingPrintOrderEntity", "OrderDate", "OrderDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 1 );
			base.AddElementFieldMapping( "MarketingPrintOrderEntity", "Status", "Status", true, (int)SqlDbType.NVarChar, 50, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "MarketingPrintOrderEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "MarketingPrintOrderEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "MarketingPrintOrderEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "MarketingPrintOrderEntity", "DatePlaced", "DatePlaced", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "MarketingPrintOrderEntity", "DateAssigned", "DateAssigned", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "MarketingPrintOrderEntity", "FranchiseeOrganizationId", "FranchiseeOrganizationId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "MarketingPrintOrderEntity", "PrintVendorOrganizationId", "PrintVendorOrganizationId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "MarketingPrintOrderEntity", "OrgRoleUserId", "OrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
		}
		/// <summary>Inits MarketingPrintOrderEventMappingEntity's mappings</summary>
		private void InitMarketingPrintOrderEventMappingEntityMappings()
		{
			base.AddElementMapping( "MarketingPrintOrderEventMappingEntity", "Falcon", @"dbo", "TblMarketingPrintOrderEventMapping", 6 );
			base.AddElementFieldMapping( "MarketingPrintOrderEventMappingEntity", "MarketingPrintOrderEventId", "MarketingPrintOrderEventID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MarketingPrintOrderEventMappingEntity", "MarketingPrintOrderId", "MarketingPrintOrderID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "MarketingPrintOrderEventMappingEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "MarketingPrintOrderEventMappingEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "MarketingPrintOrderEventMappingEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "MarketingPrintOrderEventMappingEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
		}
		/// <summary>Inits MarketingPrintOrderItemEntity's mappings</summary>
		private void InitMarketingPrintOrderItemEntityMappings()
		{
			base.AddElementMapping( "MarketingPrintOrderItemEntity", "Falcon", @"dbo", "tblMarketingPrintOrderItem", 15 );
			base.AddElementFieldMapping( "MarketingPrintOrderItemEntity", "MarketingPrintOrderItemId", "MarketingPrintOrderItemID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MarketingPrintOrderItemEntity", "MarketingPrintOrderId", "MarketingPrintOrderID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "MarketingPrintOrderItemEntity", "MarketingMaterialId", "MarketingMaterialId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "MarketingPrintOrderItemEntity", "PhoneNumber", "PhoneNumber", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "MarketingPrintOrderItemEntity", "Sourcecode", "Sourcecode", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "MarketingPrintOrderItemEntity", "Quantity", "Quantity", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 5 );
			base.AddElementFieldMapping( "MarketingPrintOrderItemEntity", "ShippingMethod", "ShippingMethod", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "MarketingPrintOrderItemEntity", "Logo", "Logo", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "MarketingPrintOrderItemEntity", "MarketingOrderShippingInfoId", "MarketingOrderShippingInfoID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "MarketingPrintOrderItemEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 9 );
			base.AddElementFieldMapping( "MarketingPrintOrderItemEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 10 );
			base.AddElementFieldMapping( "MarketingPrintOrderItemEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "MarketingPrintOrderItemEntity", "AffiliateId", "AffiliateId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "MarketingPrintOrderItemEntity", "SourceCodeId", "SourceCodeId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 13 );
			base.AddElementFieldMapping( "MarketingPrintOrderItemEntity", "Status", "Status", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 14 );
		}
		/// <summary>Inits MarketingPrintOrderProspectListMappingEntity's mappings</summary>
		private void InitMarketingPrintOrderProspectListMappingEntityMappings()
		{
			base.AddElementMapping( "MarketingPrintOrderProspectListMappingEntity", "Falcon", @"dbo", "TblMarketingPrintOrderProspectListMapping", 6 );
			base.AddElementFieldMapping( "MarketingPrintOrderProspectListMappingEntity", "MarketingPrintOrderProspectLlistMappingId", "MarketingPrintOrderProspectLlistMappingID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MarketingPrintOrderProspectListMappingEntity", "MarketingPrintOrderItemId", "MarketingPrintOrderItemID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "MarketingPrintOrderProspectListMappingEntity", "ProspectFileId", "ProspectFileID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "MarketingPrintOrderProspectListMappingEntity", "IsActive", "IsActive", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "MarketingPrintOrderProspectListMappingEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "MarketingPrintOrderProspectListMappingEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
		}
		/// <summary>Inits MarketingSourceEntity's mappings</summary>
		private void InitMarketingSourceEntityMappings()
		{
			base.AddElementMapping( "MarketingSourceEntity", "Falcon", @"dbo", "TblMarketingSource", 7 );
			base.AddElementFieldMapping( "MarketingSourceEntity", "MarketingSourceId", "MarketingSourceID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MarketingSourceEntity", "Label", "Label", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "MarketingSourceEntity", "Notes", "Notes", true, (int)SqlDbType.VarChar, 2000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "MarketingSourceEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "MarketingSourceEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "MarketingSourceEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "MarketingSourceEntity", "ShowOnline", "ShowOnline", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
		}
		/// <summary>Inits MarketingSourceTerritoryEntity's mappings</summary>
		private void InitMarketingSourceTerritoryEntityMappings()
		{
			base.AddElementMapping( "MarketingSourceTerritoryEntity", "Falcon", @"dbo", "TblMarketingSourceTerritory", 2 );
			base.AddElementFieldMapping( "MarketingSourceTerritoryEntity", "MarketingSourceId", "MarketingSourceID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MarketingSourceTerritoryEntity", "TerritoryId", "TerritoryID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits MedicalHistoryReadingAssosciationEntity's mappings</summary>
		private void InitMedicalHistoryReadingAssosciationEntityMappings()
		{
			base.AddElementMapping( "MedicalHistoryReadingAssosciationEntity", "Falcon", @"dbo", "TblMedicalHistoryReadingAssosciation", 2 );
			base.AddElementFieldMapping( "MedicalHistoryReadingAssosciationEntity", "ReadingId", "ReadingId", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 0 );
			base.AddElementFieldMapping( "MedicalHistoryReadingAssosciationEntity", "MedicalHistoryQuestionId", "MedicalHistoryQuestionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits MedicalVendorProfileEntity's mappings</summary>
		private void InitMedicalVendorProfileEntityMappings()
		{
			base.AddElementMapping( "MedicalVendorProfileEntity", "Falcon", @"dbo", "TblMedicalVendorProfile", 6 );
			base.AddElementFieldMapping( "MedicalVendorProfileEntity", "OrganizationId", "OrganizationID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MedicalVendorProfileEntity", "TypeId", "TypeID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "MedicalVendorProfileEntity", "ContractId", "ContractID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "MedicalVendorProfileEntity", "IsHospitalPartner", "IsHospitalPartner", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "MedicalVendorProfileEntity", "ResultLetterCoBrandingFileId", "ResultLetterCoBrandingFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "MedicalVendorProfileEntity", "DoctorLetterFileId", "DoctorLetterFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
		}
		/// <summary>Inits MedicalVendorTypeEntity's mappings</summary>
		private void InitMedicalVendorTypeEntityMappings()
		{
			base.AddElementMapping( "MedicalVendorTypeEntity", "Falcon", @"dbo", "TblMedicalVendorType", 6 );
			base.AddElementFieldMapping( "MedicalVendorTypeEntity", "MedicalVendorTypeId", "MedicalVendorTypeID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MedicalVendorTypeEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "MedicalVendorTypeEntity", "Description", "Description", false, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "MedicalVendorTypeEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "MedicalVendorTypeEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "MedicalVendorTypeEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits MedicareGroupDependencyRuleEntity's mappings</summary>
		private void InitMedicareGroupDependencyRuleEntityMappings()
		{
			base.AddElementMapping( "MedicareGroupDependencyRuleEntity", "Falcon", @"dbo", "TblMedicareGroupDependencyRule", 4 );
			base.AddElementFieldMapping( "MedicareGroupDependencyRuleEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MedicareGroupDependencyRuleEntity", "QuestionId", "QuestionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "MedicareGroupDependencyRuleEntity", "DependentGroupId", "DependentGroupId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "MedicareGroupDependencyRuleEntity", "DependencyValue", "DependencyValue", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 3 );
		}
		/// <summary>Inits MedicareQuestionEntity's mappings</summary>
		private void InitMedicareQuestionEntityMappings()
		{
			base.AddElementMapping( "MedicareQuestionEntity", "Falcon", @"dbo", "TblMedicareQuestion", 12 );
			base.AddElementFieldMapping( "MedicareQuestionEntity", "QuestionId", "QuestionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MedicareQuestionEntity", "GroupId", "GroupId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "MedicareQuestionEntity", "Question", "Question", false, (int)SqlDbType.VarChar, 2000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "MedicareQuestionEntity", "ControlValue", "ControlValue", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "MedicareQuestionEntity", "ControlType", "ControlType", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "MedicareQuestionEntity", "Delimiter", "Delimiter", false, (int)SqlDbType.NChar, 10, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "MedicareQuestionEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "MedicareQuestionEntity", "IsRequired", "IsRequired", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "MedicareQuestionEntity", "DisplaySequence", "DisplaySequence", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 8 );
			base.AddElementFieldMapping( "MedicareQuestionEntity", "ParentQuestionId", "ParentQuestionId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "MedicareQuestionEntity", "IsDefault", "IsDefault", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 10 );
			base.AddElementFieldMapping( "MedicareQuestionEntity", "DefaultValue", "DefaultValue", true, (int)SqlDbType.NChar, 10, 0, 0, false, "", null, typeof(System.String), 11 );
		}
		/// <summary>Inits MedicareQuestionDependencyRuleEntity's mappings</summary>
		private void InitMedicareQuestionDependencyRuleEntityMappings()
		{
			base.AddElementMapping( "MedicareQuestionDependencyRuleEntity", "Falcon", @"dbo", "TblMedicareQuestionDependencyRule", 4 );
			base.AddElementFieldMapping( "MedicareQuestionDependencyRuleEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MedicareQuestionDependencyRuleEntity", "QuestionId", "QuestionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "MedicareQuestionDependencyRuleEntity", "DependentQuestionId", "DependentQuestionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "MedicareQuestionDependencyRuleEntity", "DependencyValue", "DependencyValue", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 3 );
		}
		/// <summary>Inits MedicareQuestionGroupEntity's mappings</summary>
		private void InitMedicareQuestionGroupEntityMappings()
		{
			base.AddElementMapping( "MedicareQuestionGroupEntity", "Falcon", @"dbo", "TblMedicareQuestionGroup", 5 );
			base.AddElementFieldMapping( "MedicareQuestionGroupEntity", "GroupId", "GroupId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MedicareQuestionGroupEntity", "GroupName", "GroupName", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "MedicareQuestionGroupEntity", "GroupAlias", "GroupAlias", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "MedicareQuestionGroupEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "MedicareQuestionGroupEntity", "IsDefault", "IsDefault", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
		}
		/// <summary>Inits MedicareQuestionsRemarksEntity's mappings</summary>
		private void InitMedicareQuestionsRemarksEntityMappings()
		{
			base.AddElementMapping( "MedicareQuestionsRemarksEntity", "Falcon", @"dbo", "TblMedicareQuestionsRemarks", 9 );
			base.AddElementFieldMapping( "MedicareQuestionsRemarksEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MedicareQuestionsRemarksEntity", "QuestionId", "QuestionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "MedicareQuestionsRemarksEntity", "QuestionValue", "QuestionValue", false, (int)SqlDbType.VarChar, 20, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "MedicareQuestionsRemarksEntity", "DependentQuestionId", "DependentQuestionId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "MedicareQuestionsRemarksEntity", "DependentQuestionValue", "DependentQuestionValue", true, (int)SqlDbType.VarChar, 20, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "MedicareQuestionsRemarksEntity", "CombinedQuestionId", "CombinedQuestionId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "MedicareQuestionsRemarksEntity", "CombinedQuestionValue", "CombinedQuestionValue", true, (int)SqlDbType.VarChar, 20, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "MedicareQuestionsRemarksEntity", "IsDefault", "IsDefault", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "MedicareQuestionsRemarksEntity", "Remarks", "Remarks", false, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 8 );
		}
		/// <summary>Inits MedicationEntity's mappings</summary>
		private void InitMedicationEntityMappings()
		{
			base.AddElementMapping( "MedicationEntity", "Falcon", @"dbo", "TblMedication", 21 );
			base.AddElementFieldMapping( "MedicationEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MedicationEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "MedicationEntity", "ServiceDate", "ServiceDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "MedicationEntity", "Hicn", "Hicn", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "MedicationEntity", "MemberId", "MemberId", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "MedicationEntity", "MemberDob", "MemberDob", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "MedicationEntity", "NdcProductCode", "NdcProductCode", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "MedicationEntity", "ProprietaryName", "ProprietaryName", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "MedicationEntity", "Dose", "Dose", true, (int)SqlDbType.VarChar, 20, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "MedicationEntity", "Unit", "Unit", true, (int)SqlDbType.VarChar, 4096, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "MedicationEntity", "Frequency", "Frequency", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "MedicationEntity", "IsPrescribed", "IsPrescribed", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 11 );
			base.AddElementFieldMapping( "MedicationEntity", "IsOtc", "IsOtc", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 12 );
			base.AddElementFieldMapping( "MedicationEntity", "Indication", "Indication", true, (int)SqlDbType.VarChar, 2000, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "MedicationEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 14 );
			base.AddElementFieldMapping( "MedicationEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 15 );
			base.AddElementFieldMapping( "MedicationEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 16 );
			base.AddElementFieldMapping( "MedicationEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 17 );
			base.AddElementFieldMapping( "MedicationEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 18 );
			base.AddElementFieldMapping( "MedicationEntity", "IsManual", "IsManual", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 19 );
			base.AddElementFieldMapping( "MedicationEntity", "IsSynced", "IsSynced", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 20 );
		}
		/// <summary>Inits MedicationUploadEntity's mappings</summary>
		private void InitMedicationUploadEntityMappings()
		{
			base.AddElementMapping( "MedicationUploadEntity", "Falcon", @"dbo", "TblMedicationUpload", 11 );
			base.AddElementFieldMapping( "MedicationUploadEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MedicationUploadEntity", "FileId", "FileId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "MedicationUploadEntity", "StatusId", "StatusId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "MedicationUploadEntity", "SuccessfullUploadCount", "SuccessfullUploadCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "MedicationUploadEntity", "FailedUploadCount", "FailedUploadCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "MedicationUploadEntity", "UploadTime", "UploadTime", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "MedicationUploadEntity", "UploadedBy", "UploadedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "MedicationUploadEntity", "ParseStartTime", "ParseStartTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "MedicationUploadEntity", "ParseEndTime", "ParseEndTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "MedicationUploadEntity", "LogFileId", "LogFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "MedicationUploadEntity", "TotalCount", "TotalCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
		}
		/// <summary>Inits MedicationUploadLogEntity's mappings</summary>
		private void InitMedicationUploadLogEntityMappings()
		{
			base.AddElementMapping( "MedicationUploadLogEntity", "Falcon", @"dbo", "TblMedicationUploadLog", 9 );
			base.AddElementFieldMapping( "MedicationUploadLogEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MedicationUploadLogEntity", "MedicationUploadId", "MedicationUploadId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "MedicationUploadLogEntity", "ServiceDate", "ServiceDate", true, (int)SqlDbType.VarChar, 25, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "MedicationUploadLogEntity", "CmsHicn", "CmsHicn", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "MedicationUploadLogEntity", "MemberId", "MemberId", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "MedicationUploadLogEntity", "MemberDob", "MemberDob", true, (int)SqlDbType.VarChar, 25, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "MedicationUploadLogEntity", "NdcProductCode", "NdcProductCode", true, (int)SqlDbType.VarChar, 20, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "MedicationUploadLogEntity", "IsSuccessFull", "IsSuccessFull", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "MedicationUploadLogEntity", "ErrorMessage", "ErrorMessage", true, (int)SqlDbType.VarChar, 4000, 0, 0, false, "", null, typeof(System.String), 8 );
		}
		/// <summary>Inits MemberUploadLogEntity's mappings</summary>
		private void InitMemberUploadLogEntityMappings()
		{
			base.AddElementMapping( "MemberUploadLogEntity", "Falcon", @"dbo", "TblMemberUploadLog", 8 );
			base.AddElementFieldMapping( "MemberUploadLogEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MemberUploadLogEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "MemberUploadLogEntity", "CorporateUploadId", "CorporateUploadId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "MemberUploadLogEntity", "IsCustomerZipInvalid", "IsCustomerZipInvalid", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "MemberUploadLogEntity", "IsPcpzipInvalid", "IsPCPZipInvalid", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "MemberUploadLogEntity", "IsPcpmailingZipInvalid", "IsPCPMailingZipInvalid", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "MemberUploadLogEntity", "NewInsertedZipIds", "NewInsertedZipIds", true, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "MemberUploadLogEntity", "NewInsertedCityIds", "NewInsertedCityIds", true, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 7 );
		}
		/// <summary>Inits MemberUploadParseDetailEntity's mappings</summary>
		private void InitMemberUploadParseDetailEntityMappings()
		{
			base.AddElementMapping( "MemberUploadParseDetailEntity", "Falcon", @"dbo", "TblMemberUploadParseDetail", 70 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "CorporateUploadId", "CorporateUploadId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "CustomerId", "CustomerId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "MemberId", "MemberID", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "FirstName", "FirstName", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "MiddleName", "MiddleName", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "LastName", "LastName", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "Gender", "Gender", true, (int)SqlDbType.VarChar, 128, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "Dob", "Dob", true, (int)SqlDbType.VarChar, 128, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "Email", "Email", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "AlternateEmail", "AlternateEmail", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "PhoneCell", "PhoneCell", true, (int)SqlDbType.VarChar, 128, 0, 0, false, "", null, typeof(System.String), 11 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "PhoneHome", "PhoneHome", true, (int)SqlDbType.VarChar, 128, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "Address1", "Address1", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "Address2", "Address2", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 14 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "City", "City", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 15 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "State", "State", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 16 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "Zip", "Zip", true, (int)SqlDbType.VarChar, 128, 0, 0, false, "", null, typeof(System.String), 17 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "Hicn", "Hicn", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 18 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "PcpFirstName", "PcpFirstName", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 19 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "PcpLastName", "PcpLastName", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 20 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "PcpPhone", "PcpPhone", true, (int)SqlDbType.VarChar, 128, 0, 0, false, "", null, typeof(System.String), 21 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "PcpFax", "PcpFax", true, (int)SqlDbType.VarChar, 128, 0, 0, false, "", null, typeof(System.String), 22 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "PcpEmail", "PcpEmail", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 23 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "PcpAddress1", "PcpAddress1", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 24 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "PcpAddress2", "PcpAddress2", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 25 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "PcpCity", "PcpCity", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 26 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "PcpState", "PcpState", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 27 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "PcpZip", "PcpZip", true, (int)SqlDbType.VarChar, 128, 0, 0, false, "", null, typeof(System.String), 28 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "PcpNpi", "PcpNpi", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 29 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "PreApprovedTest", "PreApprovedTest", true, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 30 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "IsEligible", "IsEligible", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 31 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "TargetYear", "TargetYear", true, (int)SqlDbType.VarChar, 64, 0, 0, false, "", null, typeof(System.String), 32 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "Language", "Language", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 33 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "Lab", "Lab", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 34 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "Copay", "Copay", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 35 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "MedicareAdvantagePlanName", "MedicareAdvantagePlanName", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 36 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "Lpi", "Lpi", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 37 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "Market", "Market", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 38 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "Mrn", "Mrn", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 39 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "GroupName", "GroupName", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 40 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "IcdCodes", "IcdCodes", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 41 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "PreApprovedPackage", "PreApprovedPackage", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 42 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "PreApprovedPackageId", "PreApprovedPackageId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 43 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "PcpmailingAddress1", "PCPMailingAddress1", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 44 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "PcpmailingAddress2", "PCPMailingAddress2", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 45 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "PcpmailingCity", "PCPMailingCity", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 46 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "PcpmailingState", "PCPMailingState", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 47 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "PcpmailingZip", "PCPMailingZip", true, (int)SqlDbType.VarChar, 128, 0, 0, false, "", null, typeof(System.String), 48 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "CurrentMedication", "CurrentMedication", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 49 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "CurrentMedicationSource", "CurrentMedicationSource", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 50 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "AdditionalField1", "AdditionalField1", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 51 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "AdditionalField2", "AdditionalField2", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 52 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "AdditionalField3", "AdditionalField3", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 53 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "AdditionalField4", "AdditionalField4", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 54 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "Activity", "Activity", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 55 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "PredictedZip", "PredictedZip", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 56 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "Mbi", "Mbi", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 57 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "BillingMemberId", "BillingMemberId", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 58 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "BillingMemberPlan", "BillingMemberPlan", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 59 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "BillingMemberPlanYear", "BillingMemberPlanYear", true, (int)SqlDbType.VarChar, 64, 0, 0, false, "", null, typeof(System.String), 60 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "WarmTransferAllowed", "WarmTransferAllowed", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 61 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "WarmTransferYear", "WarmTransferYear", true, (int)SqlDbType.VarChar, 64, 0, 0, false, "", null, typeof(System.String), 62 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "AcesId", "AcesId", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 63 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "EligibilityYear", "EligibilityYear", true, (int)SqlDbType.VarChar, 64, 0, 0, false, "", null, typeof(System.String), 64 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "ErrorMessage", "ErrorMessage", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 65 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "IsSuccessful", "IsSuccessful", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 66 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "Dnc", "DNC", true, (int)SqlDbType.VarChar, 64, 0, 0, false, "", null, typeof(System.String), 67 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "ProductType", "ProductType", true, (int)SqlDbType.VarChar, 64, 0, 0, false, "", null, typeof(System.String), 68 );
			base.AddElementFieldMapping( "MemberUploadParseDetailEntity", "AcesClientId", "AcesClientId", true, (int)SqlDbType.VarChar, 250, 0, 0, false, "", null, typeof(System.String), 69 );
		}
		/// <summary>Inits MergeCustomerUploadEntity's mappings</summary>
		private void InitMergeCustomerUploadEntityMappings()
		{
			base.AddElementMapping( "MergeCustomerUploadEntity", "Falcon", @"dbo", "TblMergeCustomerUpload", 10 );
			base.AddElementFieldMapping( "MergeCustomerUploadEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MergeCustomerUploadEntity", "FileId", "FileId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "MergeCustomerUploadEntity", "StatusId", "StatusId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "MergeCustomerUploadEntity", "UploadedBy", "UploadedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "MergeCustomerUploadEntity", "UploadTime", "UploadTime", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "MergeCustomerUploadEntity", "SuccessUploadCount", "SuccessUploadCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "MergeCustomerUploadEntity", "FailedUploadCount", "FailedUploadCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "MergeCustomerUploadEntity", "ParseStartTime", "ParseStartTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "MergeCustomerUploadEntity", "ParseEndTime", "ParseEndTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "MergeCustomerUploadEntity", "LogFileId", "LogFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
		}
		/// <summary>Inits MergeCustomerUploadLogEntity's mappings</summary>
		private void InitMergeCustomerUploadLogEntityMappings()
		{
			base.AddElementMapping( "MergeCustomerUploadLogEntity", "Falcon", @"dbo", "TblMergeCustomerUploadLog", 7 );
			base.AddElementFieldMapping( "MergeCustomerUploadLogEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MergeCustomerUploadLogEntity", "UploadId", "UploadId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "MergeCustomerUploadLogEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "MergeCustomerUploadLogEntity", "DuplicateCustomerId", "DuplicateCustomerId", true, (int)SqlDbType.VarChar, 256, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "MergeCustomerUploadLogEntity", "StatusId", "StatusId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "MergeCustomerUploadLogEntity", "IsSuccessful", "IsSuccessful", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "MergeCustomerUploadLogEntity", "ErrorMessage", "ErrorMessage", true, (int)SqlDbType.NVarChar, 2048, 0, 0, false, "", null, typeof(System.String), 6 );
		}
		/// <summary>Inits MolinaAttestationEntity's mappings</summary>
		private void InitMolinaAttestationEntityMappings()
		{
			base.AddElementMapping( "MolinaAttestationEntity", "Falcon", @"dbo", "TblMolinaAttestation", 10 );
			base.AddElementFieldMapping( "MolinaAttestationEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MolinaAttestationEntity", "EventCustomerResultId", "EventCustomerResultId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "MolinaAttestationEntity", "Icd9Code", "Icd9Code", true, (int)SqlDbType.VarChar, 256, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "MolinaAttestationEntity", "Icd9CodeDescription", "Icd9CodeDescription", true, (int)SqlDbType.VarChar, 5120, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "MolinaAttestationEntity", "Icd10Code", "Icd10Code", true, (int)SqlDbType.VarChar, 256, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "MolinaAttestationEntity", "Icd10CodeDescription", "Icd10CodeDescription", true, (int)SqlDbType.VarChar, 5120, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "MolinaAttestationEntity", "Condition", "Condition", true, (int)SqlDbType.VarChar, 5120, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "MolinaAttestationEntity", "StatusId", "StatusId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "MolinaAttestationEntity", "WhyNoDiagnosis", "WhyNoDiagnosis", true, (int)SqlDbType.VarChar, 5120, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "MolinaAttestationEntity", "DateResolved", "DateResolved", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
		}
		/// <summary>Inits MVPaymentCheckDetailsEntity's mappings</summary>
		private void InitMVPaymentCheckDetailsEntityMappings()
		{
			base.AddElementMapping( "MVPaymentCheckDetailsEntity", "Falcon", @"dbo", "TblPhysicianPaymentCheckDetails", 2 );
			base.AddElementFieldMapping( "MVPaymentCheckDetailsEntity", "CheckId", "CheckID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MVPaymentCheckDetailsEntity", "MvpaymentId", "PhysicianPaymentId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits MvuserClassificationEntity's mappings</summary>
		private void InitMvuserClassificationEntityMappings()
		{
			base.AddElementMapping( "MvuserClassificationEntity", "Falcon", @"dbo", "TblMVUserClassification", 6 );
			base.AddElementFieldMapping( "MvuserClassificationEntity", "MvuserClassificationId", "MVUserClassificationID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MvuserClassificationEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "MvuserClassificationEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "MvuserClassificationEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "MvuserClassificationEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "MvuserClassificationEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits NdcEntity's mappings</summary>
		private void InitNdcEntityMappings()
		{
			base.AddElementMapping( "NdcEntity", "Falcon", @"dbo", "TblNdc", 7 );
			base.AddElementFieldMapping( "NdcEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "NdcEntity", "ProductName", "ProductName", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "NdcEntity", "NdcCode", "NdcCode", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "NdcEntity", "Route", "Route", true, (int)SqlDbType.NVarChar, 512, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "NdcEntity", "Dose", "Dose", true, (int)SqlDbType.NVarChar, 100, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "NdcEntity", "ActiveNumeratorStrength", "ActiveNumeratorStrength", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "NdcEntity", "ActiveIngredUnit", "ActiveIngredUnit", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 6 );
		}
		/// <summary>Inits NoShowCallQueueEntity's mappings</summary>
		private void InitNoShowCallQueueEntityMappings()
		{
			base.AddElementMapping( "NoShowCallQueueEntity", "Falcon", @"dbo", "TblNoShowCallQueue", 8 );
			base.AddElementFieldMapping( "NoShowCallQueueEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "NoShowCallQueueEntity", "HealthPlanId", "HealthPlanId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "NoShowCallQueueEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "NoShowCallQueueEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "NoShowCallQueueEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "NoShowCallQueueEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "NoShowCallQueueEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "NoShowCallQueueEntity", "CallDate", "CallDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
		}
		/// <summary>Inits NoShowCallQueueCriteriaAssignmentEntity's mappings</summary>
		private void InitNoShowCallQueueCriteriaAssignmentEntityMappings()
		{
			base.AddElementMapping( "NoShowCallQueueCriteriaAssignmentEntity", "Falcon", @"dbo", "TblNoShowCallQueueCriteriaAssignment", 2 );
			base.AddElementFieldMapping( "NoShowCallQueueCriteriaAssignmentEntity", "NoShowCallQueueId", "NoShowCallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "NoShowCallQueueCriteriaAssignmentEntity", "CriteriaId", "CriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits NoteEntity's mappings</summary>
		private void InitNoteEntityMappings()
		{
			base.AddElementMapping( "NoteEntity", "Falcon", @"dbo", "TblNote", 2 );
			base.AddElementFieldMapping( "NoteEntity", "NoteId", "NoteId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "NoteEntity", "Note", "Note", false, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 1 );
		}
		/// <summary>Inits NotesDetailsEntity's mappings</summary>
		private void InitNotesDetailsEntityMappings()
		{
			base.AddElementMapping( "NotesDetailsEntity", "Falcon", @"dbo", "TblNotesDetails", 7 );
			base.AddElementFieldMapping( "NotesDetailsEntity", "NoteId", "NoteID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "NotesDetailsEntity", "Notes", "Notes", true, (int)SqlDbType.VarChar, 5000, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "NotesDetailsEntity", "DateCreated", "DateCreated", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "NotesDetailsEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "NotesDetailsEntity", "Active", "Active", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "NotesDetailsEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "NotesDetailsEntity", "ModifiedByOrgRoleUserId", "ModifiedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
		}
		/// <summary>Inits NotificationEntity's mappings</summary>
		private void InitNotificationEntityMappings()
		{
			base.AddElementMapping( "NotificationEntity", "Falcon", @"dbo", "TblNotification", 13 );
			base.AddElementFieldMapping( "NotificationEntity", "NotificationId", "NotificationID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "NotificationEntity", "UserId", "UserID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "NotificationEntity", "NotificationDate", "NotificationDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "NotificationEntity", "NotificationMediumId", "NotificationMediumID", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 3 );
			base.AddElementFieldMapping( "NotificationEntity", "NotificationTypeId", "NotificationTypeID", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 4 );
			base.AddElementFieldMapping( "NotificationEntity", "ClientLabel", "Source", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "NotificationEntity", "Priority", "Priority", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 6 );
			base.AddElementFieldMapping( "NotificationEntity", "AttemptCount", "AttemptCount", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 7 );
			base.AddElementFieldMapping( "NotificationEntity", "ServiceStatus", "ServiceStatus", true, (int)SqlDbType.TinyInt, 0, 0, 3, false, "", null, typeof(System.Byte), 8 );
			base.AddElementFieldMapping( "NotificationEntity", "ServicedDate", "ServicedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "NotificationEntity", "DateCreated", "DateCreated", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 10 );
			base.AddElementFieldMapping( "NotificationEntity", "Notes", "Notes", true, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 11 );
			base.AddElementFieldMapping( "NotificationEntity", "RequestedByOrgRoleUserId", "RequestedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
		}
		/// <summary>Inits NotificationEmailEntity's mappings</summary>
		private void InitNotificationEmailEntityMappings()
		{
			base.AddElementMapping( "NotificationEmailEntity", "Falcon", @"dbo", "TblNotificationEmail", 9 );
			base.AddElementFieldMapping( "NotificationEmailEntity", "NotificationEmailId", "EmailNotificationID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "NotificationEmailEntity", "ToEmail", "ToEmail", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "NotificationEmailEntity", "Subject", "Subject", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "NotificationEmailEntity", "Body", "Body", true, (int)SqlDbType.Text, 2147483647, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "NotificationEmailEntity", "FromEmail", "FromEmail", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "NotificationEmailEntity", "FromName", "FromName", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "NotificationEmailEntity", "OpenedDate", "OpenedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "NotificationEmailEntity", "OpenCount", "OpenCount", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 7 );
			base.AddElementFieldMapping( "NotificationEmailEntity", "AttachmentPath", "AttachmentPath", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 8 );
		}
		/// <summary>Inits NotificationMediumEntity's mappings</summary>
		private void InitNotificationMediumEntityMappings()
		{
			base.AddElementMapping( "NotificationMediumEntity", "Falcon", @"dbo", "TblNotificationMedium", 5 );
			base.AddElementFieldMapping( "NotificationMediumEntity", "NotificationMediumId", "NotificationMediumID", false, (int)SqlDbType.Int, 0, 0, 10, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0 );
			base.AddElementFieldMapping( "NotificationMediumEntity", "NotificationMedium", "NotificationMedium", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "NotificationMediumEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "NotificationMediumEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "NotificationMediumEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
		}
		/// <summary>Inits NotificationPhoneEntity's mappings</summary>
		private void InitNotificationPhoneEntityMappings()
		{
			base.AddElementMapping( "NotificationPhoneEntity", "Falcon", @"dbo", "TblNotificationPhone", 4 );
			base.AddElementFieldMapping( "NotificationPhoneEntity", "NotificationPhoneId", "PhoneNotificationID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "NotificationPhoneEntity", "PhoneCell", "PhoneCell", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "NotificationPhoneEntity", "Message", "Message", true, (int)SqlDbType.Text, 2147483647, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "NotificationPhoneEntity", "ServicedBy", "ServicedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
		}
		/// <summary>Inits NotificationSubscribersEntity's mappings</summary>
		private void InitNotificationSubscribersEntityMappings()
		{
			base.AddElementMapping( "NotificationSubscribersEntity", "Falcon", @"dbo", "TblNotificationSubscribers", 9 );
			base.AddElementFieldMapping( "NotificationSubscribersEntity", "NotificationSubscriberId", "NotificationSubscriberID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "NotificationSubscribersEntity", "NotificationTypeId", "NotificationTypeID", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 1 );
			base.AddElementFieldMapping( "NotificationSubscribersEntity", "Name", "Name", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "NotificationSubscribersEntity", "Email", "Email", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "NotificationSubscribersEntity", "Phone", "Phone", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "NotificationSubscribersEntity", "UserId", "UserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "NotificationSubscribersEntity", "DateCreated", "DateCreated", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "NotificationSubscribersEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "NotificationSubscribersEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
		}
		/// <summary>Inits NotificationTypeEntity's mappings</summary>
		private void InitNotificationTypeEntityMappings()
		{
			base.AddElementMapping( "NotificationTypeEntity", "Falcon", @"dbo", "TblNotificationType", 13 );
			base.AddElementFieldMapping( "NotificationTypeEntity", "NotificationTypeId", "NotificationTypeID", false, (int)SqlDbType.Int, 0, 0, 10, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0 );
			base.AddElementFieldMapping( "NotificationTypeEntity", "NotificationTypeName", "NotificationTypeName", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "NotificationTypeEntity", "NotificationTypeNameAlias", "NotificationTypeNameAlias", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "NotificationTypeEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "NotificationTypeEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "NotificationTypeEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "NotificationTypeEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "NotificationTypeEntity", "NoOfAttempts", "NoOfAttempts", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 7 );
			base.AddElementFieldMapping( "NotificationTypeEntity", "NotificationMediumId", "NotificationMediumId", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 8 );
			base.AddElementFieldMapping( "NotificationTypeEntity", "AllowTemplateCreation", "AllowTemplateCreation", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 9 );
			base.AddElementFieldMapping( "NotificationTypeEntity", "IsServiceEnabled", "IsServiceEnabled", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 10 );
			base.AddElementFieldMapping( "NotificationTypeEntity", "IsQueuingEnabled", "IsQueuingEnabled", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 11 );
			base.AddElementFieldMapping( "NotificationTypeEntity", "ModifiedByOrgRoleUserId", "ModifiedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
		}
		/// <summary>Inits OrderEntity's mappings</summary>
		private void InitOrderEntityMappings()
		{
			base.AddElementMapping( "OrderEntity", "Falcon", @"dbo", "TblOrder", 4 );
			base.AddElementFieldMapping( "OrderEntity", "OrderId", "OrderID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "OrderEntity", "Type", "Type", false, (int)SqlDbType.TinyInt, 0, 0, 3, false, "", null, typeof(System.Byte), 1 );
			base.AddElementFieldMapping( "OrderEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "OrderEntity", "OrganizationRoleUserCreatorId", "OrganizationRoleUserCreatorID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
		}
		/// <summary>Inits OrderDetailEntity's mappings</summary>
		private void InitOrderDetailEntityMappings()
		{
			base.AddElementMapping( "OrderDetailEntity", "Falcon", @"dbo", "TblOrderDetail", 11 );
			base.AddElementFieldMapping( "OrderDetailEntity", "OrderDetailId", "OrderDetailID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "OrderDetailEntity", "OrderId", "OrderID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "OrderDetailEntity", "ForOrganizationRoleUserId", "ForOrganizationRoleUserID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "OrderDetailEntity", "OrderItemId", "OrderItemID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "OrderDetailEntity", "Description", "Description", false, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "OrderDetailEntity", "Quantity", "Quantity", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 5 );
			base.AddElementFieldMapping( "OrderDetailEntity", "Price", "Price", false, (int)SqlDbType.Money, 0, 4, 19, false, "", null, typeof(System.Decimal), 6 );
			base.AddElementFieldMapping( "OrderDetailEntity", "Status", "Status", false, (int)SqlDbType.SmallInt, 0, 0, 5, false, "", null, typeof(System.Int16), 7 );
			base.AddElementFieldMapping( "OrderDetailEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "OrderDetailEntity", "OrganizationRoleUserCreatorId", "OrganizationRoleUserCreatorID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "OrderDetailEntity", "SourceId", "SourceId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
		}
		/// <summary>Inits OrderItemEntity's mappings</summary>
		private void InitOrderItemEntityMappings()
		{
			base.AddElementMapping( "OrderItemEntity", "Falcon", @"dbo", "TblOrderItem", 2 );
			base.AddElementFieldMapping( "OrderItemEntity", "OrderItemId", "OrderItemID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "OrderItemEntity", "Type", "Type", false, (int)SqlDbType.SmallInt, 0, 0, 5, false, "", null, typeof(System.Int16), 1 );
		}
		/// <summary>Inits OrganizationEntity's mappings</summary>
		private void InitOrganizationEntityMappings()
		{
			base.AddElementMapping( "OrganizationEntity", "Falcon", @"dbo", "TblOrganization", 16 );
			base.AddElementFieldMapping( "OrganizationEntity", "OrganizationId", "OrganizationID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "OrganizationEntity", "OrganizationTypeId", "OrganizationTypeID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "OrganizationEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "OrganizationEntity", "Description", "Description", false, (int)SqlDbType.Text, 2147483647, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "OrganizationEntity", "BusinessAddressId", "BusinessAddressId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "OrganizationEntity", "BillingAddressId", "BillingAddressId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "OrganizationEntity", "PhoneNumber", "PhoneNumber", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "OrganizationEntity", "FaxNumber", "FaxNumber", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "OrganizationEntity", "Email", "Email", true, (int)SqlDbType.VarChar, 128, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "OrganizationEntity", "LogoImageId", "LogoImageID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "OrganizationEntity", "TeamImageId", "TeamImageID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
			base.AddElementFieldMapping( "OrganizationEntity", "DateCreated", "DateCreated", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "OrganizationEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 12 );
			base.AddElementFieldMapping( "OrganizationEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 13 );
			base.AddElementFieldMapping( "OrganizationEntity", "ModifiedByOrgRoleUserId", "ModifiedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 14 );
			base.AddElementFieldMapping( "OrganizationEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 15 );
		}
		/// <summary>Inits OrganizationRoleUserEntity's mappings</summary>
		private void InitOrganizationRoleUserEntityMappings()
		{
			base.AddElementMapping( "OrganizationRoleUserEntity", "Falcon", @"dbo", "TblOrganizationRoleUser", 5 );
			base.AddElementFieldMapping( "OrganizationRoleUserEntity", "OrganizationRoleUserId", "OrganizationRoleUserID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "OrganizationRoleUserEntity", "UserId", "UserID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "OrganizationRoleUserEntity", "RoleId", "RoleID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "OrganizationRoleUserEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "OrganizationRoleUserEntity", "OrganizationId", "OrganizationId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
		}
		/// <summary>Inits OrganizationRoleUserTerritoryEntity's mappings</summary>
		private void InitOrganizationRoleUserTerritoryEntityMappings()
		{
			base.AddElementMapping( "OrganizationRoleUserTerritoryEntity", "Falcon", @"dbo", "TblOrganizationRoleUserTerritory", 3 );
			base.AddElementFieldMapping( "OrganizationRoleUserTerritoryEntity", "TerritoryId", "TerritoryID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "OrganizationRoleUserTerritoryEntity", "OrganizationRoleUserId", "OrganizationRoleUserID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "OrganizationRoleUserTerritoryEntity", "EventTypeSetupPermission", "EventTypeSetupPermission", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 2 );
		}
		/// <summary>Inits OrganizationTypeEntity's mappings</summary>
		private void InitOrganizationTypeEntityMappings()
		{
			base.AddElementMapping( "OrganizationTypeEntity", "Falcon", @"dbo", "TblOrganizationType", 3 );
			base.AddElementFieldMapping( "OrganizationTypeEntity", "OrganizationTypeId", "OrganizationTypeID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "OrganizationTypeEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 128, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "OrganizationTypeEntity", "Alias", "Alias", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 2 );
		}
		/// <summary>Inits OrgRoleUserActivityEntity's mappings</summary>
		private void InitOrgRoleUserActivityEntityMappings()
		{
			base.AddElementMapping( "OrgRoleUserActivityEntity", "Falcon", @"dbo", "TblOrgRoleUserActivity", 2 );
			base.AddElementFieldMapping( "OrgRoleUserActivityEntity", "ActivityId", "ActivityId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "OrgRoleUserActivityEntity", "OrgRoleUserId", "OrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits OutboundUploadEntity's mappings</summary>
		private void InitOutboundUploadEntityMappings()
		{
			base.AddElementMapping( "OutboundUploadEntity", "Falcon", @"dbo", "TblOutboundUpload", 10 );
			base.AddElementFieldMapping( "OutboundUploadEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "OutboundUploadEntity", "FileId", "FileId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "OutboundUploadEntity", "TypeId", "TypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "OutboundUploadEntity", "StatusId", "StatusId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "OutboundUploadEntity", "SuccessUploadCount", "SuccessUploadCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "OutboundUploadEntity", "FailedUploadCount", "FailedUploadCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "OutboundUploadEntity", "UploadTime", "UploadTime", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "OutboundUploadEntity", "ParseStartTime", "ParseStartTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "OutboundUploadEntity", "ParseEndTime", "ParseEndTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "OutboundUploadEntity", "LogFileId", "LogFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
		}
		/// <summary>Inits PackageEntity's mappings</summary>
		private void InitPackageEntityMappings()
		{
			base.AddElementMapping( "PackageEntity", "Falcon", @"dbo", "TblPackage", 19 );
			base.AddElementFieldMapping( "PackageEntity", "PackageId", "PackageID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PackageEntity", "PackageName", "PackageName", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "PackageEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "PackageEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "PackageEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "PackageEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "PackageEntity", "Price", "Price", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 6 );
			base.AddElementFieldMapping( "PackageEntity", "PackageTypeId", "PackageTypeID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "PackageEntity", "RelativeOrder", "RelativeOrder", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "PackageEntity", "DescriptiononPublicWebsite", "DescriptiononPublicWebsite", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 9 );
			base.AddElementFieldMapping( "PackageEntity", "IsSelectedByDefaultForEvent", "IsSelectedByDefaultForEvent", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 10 );
			base.AddElementFieldMapping( "PackageEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 11 );
			base.AddElementFieldMapping( "PackageEntity", "UpdatedByOrgRoleUserId", "UpdatedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "PackageEntity", "ForOrderDisplayFileId", "ForOrderDisplayFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 13 );
			base.AddElementFieldMapping( "PackageEntity", "PackageInfoUrl", "PackageInfoUrl", true, (int)SqlDbType.VarChar, 2000, 0, 0, false, "", null, typeof(System.String), 14 );
			base.AddElementFieldMapping( "PackageEntity", "DescriptiononUpsellSection", "DescriptiononUpsellSection", true, (int)SqlDbType.VarChar, 2000, 0, 0, false, "", null, typeof(System.String), 15 );
			base.AddElementFieldMapping( "PackageEntity", "ScreeningTime", "ScreeningTime", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 16 );
			base.AddElementFieldMapping( "PackageEntity", "HafTemplateId", "HAFTemplateId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 17 );
			base.AddElementFieldMapping( "PackageEntity", "Gender", "Gender", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 18 );
		}
		/// <summary>Inits PackageAvailabilityToRolesEntity's mappings</summary>
		private void InitPackageAvailabilityToRolesEntityMappings()
		{
			base.AddElementMapping( "PackageAvailabilityToRolesEntity", "Falcon", @"dbo", "TblPackageAvailabilityToRoles", 2 );
			base.AddElementFieldMapping( "PackageAvailabilityToRolesEntity", "PackageId", "PackageID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PackageAvailabilityToRolesEntity", "RoleId", "RoleID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits PackageMarketingOfferDiscountEntity's mappings</summary>
		private void InitPackageMarketingOfferDiscountEntityMappings()
		{
			base.AddElementMapping( "PackageMarketingOfferDiscountEntity", "Falcon", @"dbo", "TblPackageMarketingOfferDiscount", 6 );
			base.AddElementFieldMapping( "PackageMarketingOfferDiscountEntity", "PackageMarketingOfferDiscountId", "PackageMarketingOfferDiscountID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PackageMarketingOfferDiscountEntity", "PackageId", "PackageID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PackageMarketingOfferDiscountEntity", "MarketingOfferId", "MarketingOfferID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "PackageMarketingOfferDiscountEntity", "Discount", "Discount", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 3 );
			base.AddElementFieldMapping( "PackageMarketingOfferDiscountEntity", "IsPercentage", "IsPercentage", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "PackageMarketingOfferDiscountEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits PackageSourceCodeDiscountEntity's mappings</summary>
		private void InitPackageSourceCodeDiscountEntityMappings()
		{
			base.AddElementMapping( "PackageSourceCodeDiscountEntity", "Falcon", @"dbo", "TblPackageSourceCodeDiscount", 4 );
			base.AddElementFieldMapping( "PackageSourceCodeDiscountEntity", "PackageId", "PackageID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PackageSourceCodeDiscountEntity", "SourceCodeId", "SourceCodeID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PackageSourceCodeDiscountEntity", "Discount", "Discount", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 2 );
			base.AddElementFieldMapping( "PackageSourceCodeDiscountEntity", "IsPercentage", "IsPercentage", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
		}
		/// <summary>Inits PackageTestEntity's mappings</summary>
		private void InitPackageTestEntityMappings()
		{
			base.AddElementMapping( "PackageTestEntity", "Falcon", @"dbo", "TblPackageTest", 7 );
			base.AddElementFieldMapping( "PackageTestEntity", "PackageId", "PackageID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PackageTestEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 1 );
			base.AddElementFieldMapping( "PackageTestEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "PackageTestEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "PackageTestEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "PackageTestEntity", "Price", "Price", false, (int)SqlDbType.Decimal, 0, 2, 10, false, "", null, typeof(System.Decimal), 5 );
			base.AddElementFieldMapping( "PackageTestEntity", "RefundPrice", "RefundPrice", false, (int)SqlDbType.Decimal, 0, 2, 10, false, "", null, typeof(System.Decimal), 6 );
		}
		/// <summary>Inits ParticipationConsentSignatureEntity's mappings</summary>
		private void InitParticipationConsentSignatureEntityMappings()
		{
			base.AddElementMapping( "ParticipationConsentSignatureEntity", "Falcon", @"dbo", "TblParticipationConsentSignature", 9 );
			base.AddElementFieldMapping( "ParticipationConsentSignatureEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ParticipationConsentSignatureEntity", "SignatureFileId", "SignatureFileId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ParticipationConsentSignatureEntity", "ConsentSignedDate", "ConsentSignedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "ParticipationConsentSignatureEntity", "InsuranceSignatureFileId", "InsuranceSignatureFileId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "ParticipationConsentSignatureEntity", "InsuranceConsentSignedDate", "InsuranceConsentSignedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "ParticipationConsentSignatureEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "ParticipationConsentSignatureEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "ParticipationConsentSignatureEntity", "Version", "Version", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 7 );
			base.AddElementFieldMapping( "ParticipationConsentSignatureEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
		}
		/// <summary>Inits PasswordChangelogEntity's mappings</summary>
		private void InitPasswordChangelogEntityMappings()
		{
			base.AddElementMapping( "PasswordChangelogEntity", "Falcon", @"dbo", "TblPasswordChangelog", 7 );
			base.AddElementFieldMapping( "PasswordChangelogEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PasswordChangelogEntity", "UserLoginId", "UserLoginId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PasswordChangelogEntity", "Password", "Password", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "PasswordChangelogEntity", "Salt", "Salt", false, (int)SqlDbType.NVarChar, 128, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "PasswordChangelogEntity", "Sequence", "Sequence", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 4 );
			base.AddElementFieldMapping( "PasswordChangelogEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "PasswordChangelogEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
		}
		/// <summary>Inits PaymentEntity's mappings</summary>
		private void InitPaymentEntityMappings()
		{
			base.AddElementMapping( "PaymentEntity", "Falcon", @"dbo", "TblPayment", 4 );
			base.AddElementFieldMapping( "PaymentEntity", "PaymentId", "PaymentID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PaymentEntity", "Notes", "Notes", true, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "PaymentEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "PaymentEntity", "OrganizationRoleUserCreatorId", "OrganizationRoleUserCreatorID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
		}
		/// <summary>Inits PaymentFrequencyEntity's mappings</summary>
		private void InitPaymentFrequencyEntityMappings()
		{
			base.AddElementMapping( "PaymentFrequencyEntity", "Falcon", @"dbo", "TblPaymentFrequency", 8 );
			base.AddElementFieldMapping( "PaymentFrequencyEntity", "PaymentFrequencyId", "PaymentFrequencyID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PaymentFrequencyEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "PaymentFrequencyEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "PaymentFrequencyEntity", "FrequencyName", "FrequencyName", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "PaymentFrequencyEntity", "Interval", "Interval", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 4 );
			base.AddElementFieldMapping( "PaymentFrequencyEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "PaymentFrequencyEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "PaymentFrequencyEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
		}
		/// <summary>Inits PaymentInstructionsEntity's mappings</summary>
		private void InitPaymentInstructionsEntityMappings()
		{
			base.AddElementMapping( "PaymentInstructionsEntity", "Falcon", @"dbo", "TblPaymentInstructions", 13 );
			base.AddElementFieldMapping( "PaymentInstructionsEntity", "PaymentInstructionId", "PaymentInstructionID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PaymentInstructionsEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "PaymentInstructionsEntity", "PaymentFrequencyId", "PaymentFrequencyID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "PaymentInstructionsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "PaymentInstructionsEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "PaymentInstructionsEntity", "BankName", "BankName", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "PaymentInstructionsEntity", "RoutingNumber", "RoutingNumber", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "PaymentInstructionsEntity", "AccountType", "AccountType", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "PaymentInstructionsEntity", "AccountHolderName", "AccountHolderName", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "PaymentInstructionsEntity", "PaymentMode", "PaymentMode", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 9 );
			base.AddElementFieldMapping( "PaymentInstructionsEntity", "AccountNumber", "AccountNumber", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "PaymentInstructionsEntity", "Memo", "Memo", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 11 );
			base.AddElementFieldMapping( "PaymentInstructionsEntity", "SpecialInstructions", "SpecialInstructions", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 12 );
		}
		/// <summary>Inits PaymentOrderEntity's mappings</summary>
		private void InitPaymentOrderEntityMappings()
		{
			base.AddElementMapping( "PaymentOrderEntity", "Falcon", @"dbo", "TblPaymentOrder", 2 );
			base.AddElementFieldMapping( "PaymentOrderEntity", "OrderId", "OrderID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PaymentOrderEntity", "PaymentId", "PaymentID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits PaymentTypeEntity's mappings</summary>
		private void InitPaymentTypeEntityMappings()
		{
			base.AddElementMapping( "PaymentTypeEntity", "Falcon", @"dbo", "TblPaymentType", 7 );
			base.AddElementFieldMapping( "PaymentTypeEntity", "PaymentTypeId", "PaymentTypeID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PaymentTypeEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "PaymentTypeEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "PaymentTypeEntity", "Alias", "Alias", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "PaymentTypeEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "PaymentTypeEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "PaymentTypeEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
		}
		/// <summary>Inits PayPeriodEntity's mappings</summary>
		private void InitPayPeriodEntityMappings()
		{
			base.AddElementMapping( "PayPeriodEntity", "Falcon", @"dbo", "TblPayPeriod", 10 );
			base.AddElementFieldMapping( "PayPeriodEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PayPeriodEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "PayPeriodEntity", "StartDate", "StartDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "PayPeriodEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "PayPeriodEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "PayPeriodEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "PayPeriodEntity", "ModifiedOn", "ModifiedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "PayPeriodEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "PayPeriodEntity", "IsPublished", "IsPublished", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
			base.AddElementFieldMapping( "PayPeriodEntity", "NumberOfWeeks", "NumberOfWeeks", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 9 );
		}
		/// <summary>Inits PayPeriodCriteriaEntity's mappings</summary>
		private void InitPayPeriodCriteriaEntityMappings()
		{
			base.AddElementMapping( "PayPeriodCriteriaEntity", "Falcon", @"dbo", "TblPayPeriodCriteria", 6 );
			base.AddElementFieldMapping( "PayPeriodCriteriaEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PayPeriodCriteriaEntity", "PayPeriodId", "PayPeriodId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PayPeriodCriteriaEntity", "MinCustomer", "MinCustomer", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "PayPeriodCriteriaEntity", "MaxCustomer", "MaxCustomer", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "PayPeriodCriteriaEntity", "TypeId", "TypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "PayPeriodCriteriaEntity", "Ammount", "Ammount", true, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 5 );
		}
		/// <summary>Inits PcpAppointmentEntity's mappings</summary>
		private void InitPcpAppointmentEntityMappings()
		{
			base.AddElementMapping( "PcpAppointmentEntity", "Falcon", @"dbo", "TblPcpAppointment", 7 );
			base.AddElementFieldMapping( "PcpAppointmentEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PcpAppointmentEntity", "AppointmentOn", "AppointmentOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 1 );
			base.AddElementFieldMapping( "PcpAppointmentEntity", "CreatedBy", "CreatedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "PcpAppointmentEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "PcpAppointmentEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "PcpAppointmentEntity", "ModifiedOn", "ModifiedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "PcpAppointmentEntity", "PreferredContactMethod", "PreferredContactMethod", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
		}
		/// <summary>Inits PcpDispositionEntity's mappings</summary>
		private void InitPcpDispositionEntityMappings()
		{
			base.AddElementMapping( "PcpDispositionEntity", "Falcon", @"dbo", "TblPcpDisposition", 8 );
			base.AddElementFieldMapping( "PcpDispositionEntity", "PcpDispositionId", "PcpDispositionId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PcpDispositionEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PcpDispositionEntity", "DispositionId", "DispositionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "PcpDispositionEntity", "Notes", "Notes", true, (int)SqlDbType.Text, 2147483647, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "PcpDispositionEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "PcpDispositionEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "PcpDispositionEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "PcpDispositionEntity", "ModifiedOn", "ModifiedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
		}
		/// <summary>Inits PhysicianCustomerAssignmentEntity's mappings</summary>
		private void InitPhysicianCustomerAssignmentEntityMappings()
		{
			base.AddElementMapping( "PhysicianCustomerAssignmentEntity", "Falcon", @"dbo", "TblPhysicianCustomerAssignment", 7 );
			base.AddElementFieldMapping( "PhysicianCustomerAssignmentEntity", "PhysicianId", "PhysicianID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PhysicianCustomerAssignmentEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PhysicianCustomerAssignmentEntity", "OverReadPhysicianId", "OverReadPhysicianID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "PhysicianCustomerAssignmentEntity", "AssignedByOrgRoleUserId", "AssignedByOrgRoleUserID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "PhysicianCustomerAssignmentEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "PhysicianCustomerAssignmentEntity", "Notes", "Notes", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "PhysicianCustomerAssignmentEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
		}
		/// <summary>Inits PhysicianCustomerPayRateEntity's mappings</summary>
		private void InitPhysicianCustomerPayRateEntityMappings()
		{
			base.AddElementMapping( "PhysicianCustomerPayRateEntity", "Falcon", @"dbo", "TblPhysicianCustomerPayRate", 3 );
			base.AddElementFieldMapping( "PhysicianCustomerPayRateEntity", "PhysicianId", "PhysicianID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PhysicianCustomerPayRateEntity", "StandardRate", "StandardRate", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 1 );
			base.AddElementFieldMapping( "PhysicianCustomerPayRateEntity", "OverReadRate", "OverReadRate", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 2 );
		}
		/// <summary>Inits PhysicianEarningsEntity's mappings</summary>
		private void InitPhysicianEarningsEntityMappings()
		{
			base.AddElementMapping( "PhysicianEarningsEntity", "Falcon", @"dbo", "TblPhysicianEarnings", 8 );
			base.AddElementFieldMapping( "PhysicianEarningsEntity", "PhysicianEarningId", "PhysicianEarningID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PhysicianEarningsEntity", "PhysicianEvaluationId", "PhysicianEvaluationID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PhysicianEarningsEntity", "PhysicianId", "PhysicianID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "PhysicianEarningsEntity", "AmountEarned", "AmountEarned", false, (int)SqlDbType.Money, 0, 4, 19, false, "", null, typeof(System.Decimal), 3 );
			base.AddElementFieldMapping( "PhysicianEarningsEntity", "DataRecoderCreatorId", "DataRecoderCreatorID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "PhysicianEarningsEntity", "DataRecoderModifierId", "DataRecoderModifierID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "PhysicianEarningsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "PhysicianEarningsEntity", "DateModifed", "DateModifed", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
		}
		/// <summary>Inits PhysicianEvaluationEntity's mappings</summary>
		private void InitPhysicianEvaluationEntityMappings()
		{
			base.AddElementMapping( "PhysicianEvaluationEntity", "Falcon", @"dbo", "TblPhysicianEvaluation", 7 );
			base.AddElementFieldMapping( "PhysicianEvaluationEntity", "PhysicianEvaluationId", "PhysicianEvaluationID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PhysicianEvaluationEntity", "PhysicianId", "PhysicianID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PhysicianEvaluationEntity", "EventCustomerId", "EventCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "PhysicianEvaluationEntity", "EvaluationStartTime", "EvaluationStartTime", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "PhysicianEvaluationEntity", "EvaluationEndTime", "EvaluationEndTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "PhysicianEvaluationEntity", "Ipaddress", "IPAddress", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "PhysicianEvaluationEntity", "IsPrimaryEvaluator", "IsPrimaryEvaluator", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
		}
		/// <summary>Inits PhysicianEventAssignmentEntity's mappings</summary>
		private void InitPhysicianEventAssignmentEntityMappings()
		{
			base.AddElementMapping( "PhysicianEventAssignmentEntity", "Falcon", @"dbo", "TblPhysicianEventAssignment", 7 );
			base.AddElementFieldMapping( "PhysicianEventAssignmentEntity", "PhysicianId", "PhysicianID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PhysicianEventAssignmentEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PhysicianEventAssignmentEntity", "OverReadPhysicianId", "OverReadPhysicianID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "PhysicianEventAssignmentEntity", "AssignedByOrgRoleUserId", "AssignedByOrgRoleUserID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "PhysicianEventAssignmentEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "PhysicianEventAssignmentEntity", "Notes", "Notes", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "PhysicianEventAssignmentEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
		}
		/// <summary>Inits PhysicianInvoiceEntity's mappings</summary>
		private void InitPhysicianInvoiceEntityMappings()
		{
			base.AddElementMapping( "PhysicianInvoiceEntity", "Falcon", @"dbo", "TblPhysicianInvoice", 13 );
			base.AddElementFieldMapping( "PhysicianInvoiceEntity", "PhysicianInvoiceId", "PhysicianInvoiceID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PhysicianInvoiceEntity", "PhysicianId", "PhysicianId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PhysicianInvoiceEntity", "PhysicianName", "PhysicianName", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "PhysicianInvoiceEntity", "ApprovalGuid", "ApprovalGuid", false, (int)SqlDbType.UniqueIdentifier, 0, 0, 0, false, "", null, typeof(System.Guid), 3 );
			base.AddElementFieldMapping( "PhysicianInvoiceEntity", "ApprovalStatus", "ApprovalStatus", false, (int)SqlDbType.TinyInt, 0, 0, 3, false, "", null, typeof(System.Byte), 4 );
			base.AddElementFieldMapping( "PhysicianInvoiceEntity", "PaymentStatus", "PaymentStatus", false, (int)SqlDbType.TinyInt, 0, 0, 3, false, "", null, typeof(System.Byte), 5 );
			base.AddElementFieldMapping( "PhysicianInvoiceEntity", "MedicalVendorName", "MedicalVendorName", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "PhysicianInvoiceEntity", "MedicalVendorAddress", "MedicalVendorAddress", false, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "PhysicianInvoiceEntity", "PayPeriodStartDate", "PayPeriodStartDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "PhysicianInvoiceEntity", "PayPeriodEndDate", "PayPeriodEndDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "PhysicianInvoiceEntity", "DateGenerated", "DateGenerated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 10 );
			base.AddElementFieldMapping( "PhysicianInvoiceEntity", "DateApproved", "DateApproved", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "PhysicianInvoiceEntity", "DatePaid", "DatePaid", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 12 );
		}
		/// <summary>Inits PhysicianInvoiceItemEntity's mappings</summary>
		private void InitPhysicianInvoiceItemEntityMappings()
		{
			base.AddElementMapping( "PhysicianInvoiceItemEntity", "Falcon", @"dbo", "TblPhysicianInvoiceItem", 13 );
			base.AddElementFieldMapping( "PhysicianInvoiceItemEntity", "PhysicianInvoiceItemId", "PhysicianInvoiceItemID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PhysicianInvoiceItemEntity", "PhysicianInvoiceId", "PhysicianInvoiceID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PhysicianInvoiceItemEntity", "PhysicianEvaluationId", "PhysicianEvaluationID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "PhysicianInvoiceItemEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "PhysicianInvoiceItemEntity", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "PhysicianInvoiceItemEntity", "ReviewDate", "ReviewDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "PhysicianInvoiceItemEntity", "EventDate", "EventDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "PhysicianInvoiceItemEntity", "PodName", "PodName", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "PhysicianInvoiceItemEntity", "EventName", "EventName", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "PhysicianInvoiceItemEntity", "CustomerName", "CustomerName", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "PhysicianInvoiceItemEntity", "PackageName", "PackageName", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "PhysicianInvoiceItemEntity", "AmountEarned", "AmountEarned", false, (int)SqlDbType.Money, 0, 4, 19, false, "", null, typeof(System.Decimal), 11 );
			base.AddElementFieldMapping( "PhysicianInvoiceItemEntity", "PodId", "PodID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
		}
		/// <summary>Inits PhysicianLabTestEntity's mappings</summary>
		private void InitPhysicianLabTestEntityMappings()
		{
			base.AddElementMapping( "PhysicianLabTestEntity", "Falcon", @"dbo", "TblPhysicianLabTest", 9 );
			base.AddElementFieldMapping( "PhysicianLabTestEntity", "LabTestLicenseId", "LabTestLicenseId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PhysicianLabTestEntity", "PhysicianId", "PhysicianId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PhysicianLabTestEntity", "StateId", "StateId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "PhysicianLabTestEntity", "IfobtLicenseNo", "IfobtLicenseNo", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "PhysicianLabTestEntity", "MicroalbumineLicenseNo", "MicroalbumineLicenseNo", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "PhysicianLabTestEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "PhysicianLabTestEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "PhysicianLabTestEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "PhysicianLabTestEntity", "IsDefault", "IsDefault", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
		}
		/// <summary>Inits PhysicianLicenseEntity's mappings</summary>
		private void InitPhysicianLicenseEntityMappings()
		{
			base.AddElementMapping( "PhysicianLicenseEntity", "Falcon", @"dbo", "TblPhysicianLicense", 8 );
			base.AddElementFieldMapping( "PhysicianLicenseEntity", "LicenseId", "LicenseID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PhysicianLicenseEntity", "PhysicianId", "PhysicianID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PhysicianLicenseEntity", "StateId", "StateId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "PhysicianLicenseEntity", "LicenseNo", "LicenseNo", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "PhysicianLicenseEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "PhysicianLicenseEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "PhysicianLicenseEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "PhysicianLicenseEntity", "ExpiryDate", "ExpiryDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
		}
		/// <summary>Inits PhysicianMasterEntity's mappings</summary>
		private void InitPhysicianMasterEntityMappings()
		{
			base.AddElementMapping( "PhysicianMasterEntity", "Falcon", @"dbo", "TblPhysicianMaster", 24 );
			base.AddElementFieldMapping( "PhysicianMasterEntity", "PhysicianMasterId", "PhysicianMasterID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PhysicianMasterEntity", "Npi", "NPI", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "PhysicianMasterEntity", "LastName", "LastName", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "PhysicianMasterEntity", "FirstName", "FirstName", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "PhysicianMasterEntity", "MiddleName", "MiddleName", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "PhysicianMasterEntity", "PrefixText", "PrefixText", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "PhysicianMasterEntity", "SuffixText", "SuffixText", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "PhysicianMasterEntity", "CredentialText", "CredentialText", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "PhysicianMasterEntity", "PracticeAddress1", "PracticeAddress1", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "PhysicianMasterEntity", "PracticeAddress2", "PracticeAddress2", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "PhysicianMasterEntity", "PracticeCity", "PracticeCity", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "PhysicianMasterEntity", "PracticeState", "PracticeState", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 11 );
			base.AddElementFieldMapping( "PhysicianMasterEntity", "PracticeZip", "PracticeZip", true, (int)SqlDbType.VarChar, 10, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "PhysicianMasterEntity", "PracticePhone", "PracticePhone", true, (int)SqlDbType.VarChar, 10, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "PhysicianMasterEntity", "PracticeFax", "PracticeFax", true, (int)SqlDbType.VarChar, 10, 0, 0, false, "", null, typeof(System.String), 14 );
			base.AddElementFieldMapping( "PhysicianMasterEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 15 );
			base.AddElementFieldMapping( "PhysicianMasterEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 16 );
			base.AddElementFieldMapping( "PhysicianMasterEntity", "IsImported", "IsImported", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 17 );
			base.AddElementFieldMapping( "PhysicianMasterEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 18 );
			base.AddElementFieldMapping( "PhysicianMasterEntity", "MailingAddress1", "MailingAddress1", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 19 );
			base.AddElementFieldMapping( "PhysicianMasterEntity", "MailingAddress2", "MailingAddress2", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 20 );
			base.AddElementFieldMapping( "PhysicianMasterEntity", "MailingCity", "MailingCity", true, (int)SqlDbType.VarChar, 225, 0, 0, false, "", null, typeof(System.String), 21 );
			base.AddElementFieldMapping( "PhysicianMasterEntity", "MailingState", "MailingState", true, (int)SqlDbType.VarChar, 225, 0, 0, false, "", null, typeof(System.String), 22 );
			base.AddElementFieldMapping( "PhysicianMasterEntity", "MailingZip", "MailingZip", true, (int)SqlDbType.VarChar, 10, 0, 0, false, "", null, typeof(System.String), 23 );
		}
		/// <summary>Inits PhysicianPaymentEntity's mappings</summary>
		private void InitPhysicianPaymentEntityMappings()
		{
			base.AddElementMapping( "PhysicianPaymentEntity", "Falcon", @"dbo", "TblPhysicianPayment", 8 );
			base.AddElementFieldMapping( "PhysicianPaymentEntity", "PhysicianPaymentId", "PhysicianPaymentID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PhysicianPaymentEntity", "ReferenceNumber", "ReferenceNumber", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "PhysicianPaymentEntity", "PaymentStatus", "PaymentStatus", false, (int)SqlDbType.TinyInt, 0, 0, 3, false, "", null, typeof(System.Byte), 2 );
			base.AddElementFieldMapping( "PhysicianPaymentEntity", "Notes", "Notes", true, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "PhysicianPaymentEntity", "DataRecoderCreatorId", "DataRecoderCreatorID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "PhysicianPaymentEntity", "DataRecoderModifierId", "DataRecoderModifierID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "PhysicianPaymentEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "PhysicianPaymentEntity", "DateModifed", "DateModifed", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
		}
		/// <summary>Inits PhysicianPaymentInvoiceEntity's mappings</summary>
		private void InitPhysicianPaymentInvoiceEntityMappings()
		{
			base.AddElementMapping( "PhysicianPaymentInvoiceEntity", "Falcon", @"dbo", "TblPhysicianPaymentInvoice", 2 );
			base.AddElementFieldMapping( "PhysicianPaymentInvoiceEntity", "PhysicianPaymentId", "PhysicianPaymentID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PhysicianPaymentInvoiceEntity", "PhysicianInvoiceId", "PhysicianInvoiceID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits PhysicianPermittedTestEntity's mappings</summary>
		private void InitPhysicianPermittedTestEntityMappings()
		{
			base.AddElementMapping( "PhysicianPermittedTestEntity", "Falcon", @"dbo", "TblPhysicianPermittedTest", 2 );
			base.AddElementFieldMapping( "PhysicianPermittedTestEntity", "OrganizationRoleUserId", "PhysicianID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PhysicianPermittedTestEntity", "TestId", "TestID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits PhysicianPodEntity's mappings</summary>
		private void InitPhysicianPodEntityMappings()
		{
			base.AddElementMapping( "PhysicianPodEntity", "Falcon", @"dbo", "TblPhysicianPod", 2 );
			base.AddElementFieldMapping( "PhysicianPodEntity", "PhysicianId", "PhysicianID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PhysicianPodEntity", "PodId", "PodID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits PhysicianProfileEntity's mappings</summary>
		private void InitPhysicianProfileEntityMappings()
		{
			base.AddElementMapping( "PhysicianProfileEntity", "Falcon", @"dbo", "TblPhysicianProfile", 13 );
			base.AddElementFieldMapping( "PhysicianProfileEntity", "PhysicianId", "PhysicianID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PhysicianProfileEntity", "ResumeFileId", "ResumeFileID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PhysicianProfileEntity", "DigitalSignatureFileId", "DigitalSignatureFileID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "PhysicianProfileEntity", "SpecializationId", "SpecializationID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "PhysicianProfileEntity", "ClassificationId", "ClassificationID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "PhysicianProfileEntity", "ShowEarningAmount", "ShowEarningAmount", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "PhysicianProfileEntity", "IsAuthorizationAllowed", "IsAuthorizationAllowed", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "PhysicianProfileEntity", "SkipAudit", "SkipAudit", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "PhysicianProfileEntity", "CutOffDate", "CutOffDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "PhysicianProfileEntity", "IsDefaultPhysician", "IsDefaultPhysician", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 9 );
			base.AddElementFieldMapping( "PhysicianProfileEntity", "DisplayName", "DisplayName", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "PhysicianProfileEntity", "UpdateResultEntry", "UpdateResultEntry", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 11 );
			base.AddElementFieldMapping( "PhysicianProfileEntity", "Npi", "Npi", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 12 );
		}
		/// <summary>Inits PhysicianRecordRequestSignatureEntity's mappings</summary>
		private void InitPhysicianRecordRequestSignatureEntityMappings()
		{
			base.AddElementMapping( "PhysicianRecordRequestSignatureEntity", "Falcon", @"dbo", "TblPhysicianRecordRequestSignature", 7 );
			base.AddElementFieldMapping( "PhysicianRecordRequestSignatureEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PhysicianRecordRequestSignatureEntity", "SignatureFileId", "SignatureFileId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PhysicianRecordRequestSignatureEntity", "ConsentSignedDate", "ConsentSignedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "PhysicianRecordRequestSignatureEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "PhysicianRecordRequestSignatureEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "PhysicianRecordRequestSignatureEntity", "Version", "Version", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 5 );
			base.AddElementFieldMapping( "PhysicianRecordRequestSignatureEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
		}
		/// <summary>Inits PhysicianSpecializationEntity's mappings</summary>
		private void InitPhysicianSpecializationEntityMappings()
		{
			base.AddElementMapping( "PhysicianSpecializationEntity", "Falcon", @"dbo", "TblPhysicianSpecialization", 6 );
			base.AddElementFieldMapping( "PhysicianSpecializationEntity", "PhysicianSpecializationId", "PhysicianSpecializationId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PhysicianSpecializationEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "PhysicianSpecializationEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "PhysicianSpecializationEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "PhysicianSpecializationEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "PhysicianSpecializationEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits PinChangelogEntity's mappings</summary>
		private void InitPinChangelogEntityMappings()
		{
			base.AddElementMapping( "PinChangelogEntity", "Falcon", @"dbo", "TblPinChangelog", 6 );
			base.AddElementFieldMapping( "PinChangelogEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PinChangelogEntity", "TechnicianId", "TechnicianId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PinChangelogEntity", "Pin", "Pin", false, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "PinChangelogEntity", "Sequence", "Sequence", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 3 );
			base.AddElementFieldMapping( "PinChangelogEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "PinChangelogEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
		}
		/// <summary>Inits PodDefaultTeamEntity's mappings</summary>
		private void InitPodDefaultTeamEntityMappings()
		{
			base.AddElementMapping( "PodDefaultTeamEntity", "Falcon", @"dbo", "TblPodDefaultTeam", 7 );
			base.AddElementFieldMapping( "PodDefaultTeamEntity", "PodTeamId", "PodTeamID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PodDefaultTeamEntity", "PodId", "PodID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PodDefaultTeamEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "PodDefaultTeamEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "PodDefaultTeamEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "PodDefaultTeamEntity", "EventRoleId", "StaffEventRoleID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "PodDefaultTeamEntity", "OrgnizationRoleUserId", "OrganizationRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
		}
		/// <summary>Inits PodDetailsEntity's mappings</summary>
		private void InitPodDetailsEntityMappings()
		{
			base.AddElementMapping( "PodDetailsEntity", "Falcon", @"dbo", "TblPodDetails", 14 );
			base.AddElementFieldMapping( "PodDetailsEntity", "PodId", "PodID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PodDetailsEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "PodDetailsEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "PodDetailsEntity", "VanId", "VanID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "PodDetailsEntity", "PodProcessingCapacity", "PodProcessingCapacity", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 4 );
			base.AddElementFieldMapping( "PodDetailsEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "PodDetailsEntity", "IsDefault", "IsDefault", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "PodDetailsEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "PodDetailsEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "PodDetailsEntity", "UpdatedByOrgRoleUserId", "UpdatedByOrgRoleUserID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "PodDetailsEntity", "UpdatedOn", "UpdatedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 10 );
			base.AddElementFieldMapping( "PodDetailsEntity", "OrganizationId", "OrganizationId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 11 );
			base.AddElementFieldMapping( "PodDetailsEntity", "EnableKynIntegration", "EnableKynIntegration", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 12 );
			base.AddElementFieldMapping( "PodDetailsEntity", "IsBloodworkFormAttached", "IsBloodworkFormAttached", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 13 );
		}
		/// <summary>Inits PodInventoryItemEntity's mappings</summary>
		private void InitPodInventoryItemEntityMappings()
		{
			base.AddElementMapping( "PodInventoryItemEntity", "Falcon", @"dbo", "TblPodInventoryItem", 8 );
			base.AddElementFieldMapping( "PodInventoryItemEntity", "PodInventoryId", "PodInventoryID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PodInventoryItemEntity", "ItemId", "ItemID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PodInventoryItemEntity", "PodId", "PodID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "PodInventoryItemEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "PodInventoryItemEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "PodInventoryItemEntity", "FromDate", "FromDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "PodInventoryItemEntity", "ToDate", "ToDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "PodInventoryItemEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
		}
		/// <summary>Inits PodPackageEntity's mappings</summary>
		private void InitPodPackageEntityMappings()
		{
			base.AddElementMapping( "PodPackageEntity", "Falcon", @"dbo", "TblPodPackage", 5 );
			base.AddElementFieldMapping( "PodPackageEntity", "PodId", "PodId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PodPackageEntity", "PackageId", "PackageId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PodPackageEntity", "IsDefaultSelected", "IsDefaultSelected", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
			base.AddElementFieldMapping( "PodPackageEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "PodPackageEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
		}
		/// <summary>Inits PodRoomEntity's mappings</summary>
		private void InitPodRoomEntityMappings()
		{
			base.AddElementMapping( "PodRoomEntity", "Falcon", @"dbo", "TblPodRoom", 4 );
			base.AddElementFieldMapping( "PodRoomEntity", "PodRoomId", "PodRoomId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PodRoomEntity", "PodId", "PodId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PodRoomEntity", "RoomNo", "RoomNo", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 2 );
			base.AddElementFieldMapping( "PodRoomEntity", "Duration", "Duration", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 3 );
		}
		/// <summary>Inits PodRoomTestEntity's mappings</summary>
		private void InitPodRoomTestEntityMappings()
		{
			base.AddElementMapping( "PodRoomTestEntity", "Falcon", @"dbo", "TblPodRoomTest", 2 );
			base.AddElementFieldMapping( "PodRoomTestEntity", "PodRoomId", "PodRoomId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PodRoomTestEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits PodTerritoryEntity's mappings</summary>
		private void InitPodTerritoryEntityMappings()
		{
			base.AddElementMapping( "PodTerritoryEntity", "Falcon", @"dbo", "TblPodTerritory", 2 );
			base.AddElementFieldMapping( "PodTerritoryEntity", "PodId", "PodID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PodTerritoryEntity", "TerritoryId", "TerritoryID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits PodTestEntity's mappings</summary>
		private void InitPodTestEntityMappings()
		{
			base.AddElementMapping( "PodTestEntity", "Falcon", @"dbo", "TblPodTest", 5 );
			base.AddElementFieldMapping( "PodTestEntity", "PodId", "PodId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PodTestEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PodTestEntity", "IsDefaultSelected", "IsDefaultSelected", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
			base.AddElementFieldMapping( "PodTestEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "PodTestEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
		}
		/// <summary>Inits PreApprovedPackageEntity's mappings</summary>
		private void InitPreApprovedPackageEntityMappings()
		{
			base.AddElementMapping( "PreApprovedPackageEntity", "Falcon", @"dbo", "TblPreApprovedPackage", 7 );
			base.AddElementFieldMapping( "PreApprovedPackageEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PreApprovedPackageEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PreApprovedPackageEntity", "PackageId", "PackageId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "PreApprovedPackageEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "PreApprovedPackageEntity", "DateEnd", "DateEnd", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "PreApprovedPackageEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "PreApprovedPackageEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
		}
		/// <summary>Inits PreApprovedTestEntity's mappings</summary>
		private void InitPreApprovedTestEntityMappings()
		{
			base.AddElementMapping( "PreApprovedTestEntity", "Falcon", @"dbo", "TblPreApprovedTest", 7 );
			base.AddElementFieldMapping( "PreApprovedTestEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PreApprovedTestEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PreApprovedTestEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "PreApprovedTestEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "PreApprovedTestEntity", "DateEnd", "DateEnd", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "PreApprovedTestEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "PreApprovedTestEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
		}
		/// <summary>Inits PreAssessmentCallQueueCustomerLockEntity's mappings</summary>
		private void InitPreAssessmentCallQueueCustomerLockEntityMappings()
		{
			base.AddElementMapping( "PreAssessmentCallQueueCustomerLockEntity", "Falcon", @"dbo", "TblPreAssessmentCallQueueCustomerLock", 5 );
			base.AddElementFieldMapping( "PreAssessmentCallQueueCustomerLockEntity", "PreAssessmentCustomerId", "PreAssessmentCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PreAssessmentCallQueueCustomerLockEntity", "ProspectCustomerId", "ProspectCustomerId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PreAssessmentCallQueueCustomerLockEntity", "CustomerId", "CustomerId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "PreAssessmentCallQueueCustomerLockEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "PreAssessmentCallQueueCustomerLockEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
		}
		/// <summary>Inits PreAssessmentCustomerCallQueueCallAttemptEntity's mappings</summary>
		private void InitPreAssessmentCustomerCallQueueCallAttemptEntityMappings()
		{
			base.AddElementMapping( "PreAssessmentCustomerCallQueueCallAttemptEntity", "Falcon", @"dbo", "TblPreAssessmentCustomerCallQueueCallAttempt", 9 );
			base.AddElementFieldMapping( "PreAssessmentCustomerCallQueueCallAttemptEntity", "PreAssessmentCallAttemptId", "PreAssessmentCallAttemptID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PreAssessmentCustomerCallQueueCallAttemptEntity", "CallId", "CallID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PreAssessmentCustomerCallQueueCallAttemptEntity", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "PreAssessmentCustomerCallQueueCallAttemptEntity", "IsCallSkipped", "IsCallSkipped", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "PreAssessmentCustomerCallQueueCallAttemptEntity", "IsNotesReadAndUnderstood", "IsNotesReadAndUnderstood", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "PreAssessmentCustomerCallQueueCallAttemptEntity", "NotInterestedReasonId", "NotInterestedReasonID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "PreAssessmentCustomerCallQueueCallAttemptEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "PreAssessmentCustomerCallQueueCallAttemptEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "PreAssessmentCustomerCallQueueCallAttemptEntity", "SkipCallNote", "SkipCallNote", true, (int)SqlDbType.VarChar, 5000, 0, 0, false, "", null, typeof(System.String), 8 );
		}
		/// <summary>Inits PreQualificationQuestionEntity's mappings</summary>
		private void InitPreQualificationQuestionEntityMappings()
		{
			base.AddElementMapping( "PreQualificationQuestionEntity", "Falcon", @"dbo", "TblPreQualificationQuestion", 12 );
			base.AddElementFieldMapping( "PreQualificationQuestionEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PreQualificationQuestionEntity", "Question", "Question", false, (int)SqlDbType.VarChar, 4000, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "PreQualificationQuestionEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "PreQualificationQuestionEntity", "ControlValues", "ControlValues", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "PreQualificationQuestionEntity", "ControlValueDelimiter", "ControlValueDelimiter", true, (int)SqlDbType.VarChar, 10, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "PreQualificationQuestionEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "PreQualificationQuestionEntity", "Index", "Index", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 6 );
			base.AddElementFieldMapping( "PreQualificationQuestionEntity", "CreatedBy", "CreatedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "PreQualificationQuestionEntity", "CreatedDate", "CreatedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "PreQualificationQuestionEntity", "DisqualifiedReason", "DisqualifiedReason", true, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "PreQualificationQuestionEntity", "ParentId", "ParentId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
			base.AddElementFieldMapping( "PreQualificationQuestionEntity", "TypeId", "TypeId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 11 );
		}
		/// <summary>Inits PreQualificationQuestionRuleEntity's mappings</summary>
		private void InitPreQualificationQuestionRuleEntityMappings()
		{
			base.AddElementMapping( "PreQualificationQuestionRuleEntity", "Falcon", @"dbo", "TblPreQualificationQuestionRule", 4 );
			base.AddElementFieldMapping( "PreQualificationQuestionRuleEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PreQualificationQuestionRuleEntity", "QuestionId", "QuestionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PreQualificationQuestionRuleEntity", "DependentQuestionId", "DependentQuestionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "PreQualificationQuestionRuleEntity", "DependencyValue", "DependencyValue", true, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 3 );
		}
		/// <summary>Inits PreQualificationResultEntity's mappings</summary>
		private void InitPreQualificationResultEntityMappings()
		{
			base.AddElementMapping( "PreQualificationResultEntity", "Falcon", @"dbo", "TblPreQualificationResult", 19 );
			base.AddElementFieldMapping( "PreQualificationResultEntity", "PreQualificationResultId", "PreQualificationResultId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PreQualificationResultEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PreQualificationResultEntity", "CustomerId", "CustomerId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "PreQualificationResultEntity", "TempCartId", "TempCartId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "PreQualificationResultEntity", "SignUpModeId", "SignUpModeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "PreQualificationResultEntity", "CallId", "CallId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "PreQualificationResultEntity", "HighBloodPressure", "HighBloodPressure", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "PreQualificationResultEntity", "Smoker", "Smoker", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "PreQualificationResultEntity", "HeartDisease", "HeartDisease", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "PreQualificationResultEntity", "Diabetic", "Diabetic", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "PreQualificationResultEntity", "ChestPain", "ChestPain", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
			base.AddElementFieldMapping( "PreQualificationResultEntity", "DiagnosedHeartProblem", "DiagnosedHeartProblem", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 11 );
			base.AddElementFieldMapping( "PreQualificationResultEntity", "HighCholestrol", "HighCholestrol", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "PreQualificationResultEntity", "OverWeight", "OverWeight", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 13 );
			base.AddElementFieldMapping( "PreQualificationResultEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 14 );
			base.AddElementFieldMapping( "PreQualificationResultEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 15 );
			base.AddElementFieldMapping( "PreQualificationResultEntity", "AgreedWithPrequalificationQuestion", "AgreedWithPrequalificationQuestion", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 16 );
			base.AddElementFieldMapping( "PreQualificationResultEntity", "SkipPreQualificationQuestion", "SkipPreQualificationQuestion", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 17 );
			base.AddElementFieldMapping( "PreQualificationResultEntity", "AgeOverPreQualificationQuestion", "AgeOverPreQualificationQuestion", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 18 );
		}
		/// <summary>Inits PreQualificationTemplateDependentTestEntity's mappings</summary>
		private void InitPreQualificationTemplateDependentTestEntityMappings()
		{
			base.AddElementMapping( "PreQualificationTemplateDependentTestEntity", "Falcon", @"dbo", "TblPreQualificationTemplateDependentTest", 3 );
			base.AddElementFieldMapping( "PreQualificationTemplateDependentTestEntity", "TemplateId", "TemplateId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PreQualificationTemplateDependentTestEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PreQualificationTemplateDependentTestEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
		}
		/// <summary>Inits PreQualificationTemplateQuestionEntity's mappings</summary>
		private void InitPreQualificationTemplateQuestionEntityMappings()
		{
			base.AddElementMapping( "PreQualificationTemplateQuestionEntity", "Falcon", @"dbo", "TblPreQualificationTemplateQuestion", 2 );
			base.AddElementFieldMapping( "PreQualificationTemplateQuestionEntity", "QuestionId", "QuestionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PreQualificationTemplateQuestionEntity", "TemplateId", "TemplateId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits PreQualificationTestTemplateEntity's mappings</summary>
		private void InitPreQualificationTestTemplateEntityMappings()
		{
			base.AddElementMapping( "PreQualificationTestTemplateEntity", "Falcon", @"dbo", "TblPreQualificationTestTemplate", 9 );
			base.AddElementFieldMapping( "PreQualificationTestTemplateEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PreQualificationTestTemplateEntity", "TemplateName", "TemplateName", false, (int)SqlDbType.VarChar, 250, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "PreQualificationTestTemplateEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "PreQualificationTestTemplateEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "PreQualificationTestTemplateEntity", "IsPublished", "IsPublished", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "PreQualificationTestTemplateEntity", "CreatedBy", "CreatedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "PreQualificationTestTemplateEntity", "CreatedDate", "CreatedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "PreQualificationTestTemplateEntity", "UpdatedBy", "UpdatedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "PreQualificationTestTemplateEntity", "UpdatedDate", "UpdatedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
		}
		/// <summary>Inits PrintOrderItemTrackingEntity's mappings</summary>
		private void InitPrintOrderItemTrackingEntityMappings()
		{
			base.AddElementMapping( "PrintOrderItemTrackingEntity", "Falcon", @"dbo", "TblPrintOrderItemTracking", 22 );
			base.AddElementFieldMapping( "PrintOrderItemTrackingEntity", "PrintOrderItemShippingId", "PrintOrderItemShippingID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PrintOrderItemTrackingEntity", "PrintOrderItemId", "PrintOrderItemId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PrintOrderItemTrackingEntity", "TrackingNumber", "TrackingNumber", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "PrintOrderItemTrackingEntity", "ShippingService", "ShippingService", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "PrintOrderItemTrackingEntity", "ScheduledDeliveryDate", "ScheduledDeliveryDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "PrintOrderItemTrackingEntity", "ShipToName", "ShipToName", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "PrintOrderItemTrackingEntity", "ShipToAttentionOf", "ShipToAttentionOf", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "PrintOrderItemTrackingEntity", "Address1", "Address1", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "PrintOrderItemTrackingEntity", "Address2", "Address2", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "PrintOrderItemTrackingEntity", "City", "City", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "PrintOrderItemTrackingEntity", "State", "State", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "PrintOrderItemTrackingEntity", "Zip", "Zip", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 11 );
			base.AddElementFieldMapping( "PrintOrderItemTrackingEntity", "ConfirmationMode", "ConfirmationMode", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "PrintOrderItemTrackingEntity", "ConfirmedBy", "ConfirmedBy", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "PrintOrderItemTrackingEntity", "ActualDeliveryDate", "ActualDeliveryDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 14 );
			base.AddElementFieldMapping( "PrintOrderItemTrackingEntity", "PackageReference1", "PackageReference1", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 15 );
			base.AddElementFieldMapping( "PrintOrderItemTrackingEntity", "PackageReference2", "PackageReference2", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 16 );
			base.AddElementFieldMapping( "PrintOrderItemTrackingEntity", "PackageReference3", "PackageReference3", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 17 );
			base.AddElementFieldMapping( "PrintOrderItemTrackingEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 18 );
			base.AddElementFieldMapping( "PrintOrderItemTrackingEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 19 );
			base.AddElementFieldMapping( "PrintOrderItemTrackingEntity", "DateUpdated", "DateUpdated", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 20 );
			base.AddElementFieldMapping( "PrintOrderItemTrackingEntity", "UpdatedByOrgRoleUserId", "UpdatedByOrgRoleUserID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 21 );
		}
		/// <summary>Inits PriorityInQueueEntity's mappings</summary>
		private void InitPriorityInQueueEntityMappings()
		{
			base.AddElementMapping( "PriorityInQueueEntity", "Falcon", @"dbo", "TblPriorityInQueue", 9 );
			base.AddElementFieldMapping( "PriorityInQueueEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "PriorityInQueueEntity", "EventCustomerResultId", "EventCustomerResultId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "PriorityInQueueEntity", "NoteId", "NoteId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "PriorityInQueueEntity", "InQueuePriority", "InQueuePriority", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "PriorityInQueueEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "PriorityInQueueEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "PriorityInQueueEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "PriorityInQueueEntity", "ModifiedByOrgRoleUserId", "ModifiedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "PriorityInQueueEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
		}
		/// <summary>Inits ProductEntity's mappings</summary>
		private void InitProductEntityMappings()
		{
			base.AddElementMapping( "ProductEntity", "Falcon", @"dbo", "TblProduct", 12 );
			base.AddElementFieldMapping( "ProductEntity", "ProductId", "ProductID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ProductEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ProductEntity", "ShortDescription", "ShortDescription", true, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ProductEntity", "Description", "Description", true, (int)SqlDbType.Text, 2147483647, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "ProductEntity", "Price", "Price", false, (int)SqlDbType.Money, 0, 4, 19, false, "", null, typeof(System.Decimal), 4 );
			base.AddElementFieldMapping( "ProductEntity", "Weight", "Weight", true, (int)SqlDbType.Float, 0, 0, 38, false, "", null, typeof(System.Double), 5 );
			base.AddElementFieldMapping( "ProductEntity", "Height", "Height", true, (int)SqlDbType.Float, 0, 0, 38, false, "", null, typeof(System.Double), 6 );
			base.AddElementFieldMapping( "ProductEntity", "Width", "Width", true, (int)SqlDbType.Float, 0, 0, 38, false, "", null, typeof(System.Double), 7 );
			base.AddElementFieldMapping( "ProductEntity", "Depth", "Depth", true, (int)SqlDbType.Float, 0, 0, 38, false, "", null, typeof(System.Double), 8 );
			base.AddElementFieldMapping( "ProductEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "ProductEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 10 );
			base.AddElementFieldMapping( "ProductEntity", "ForOrderDisplayHtmlString", "ForOrderDisplayHtmlString", true, (int)SqlDbType.NText, 1073741823, 0, 0, false, "", null, typeof(System.String), 11 );
		}
		/// <summary>Inits ProductOrderItemEntity's mappings</summary>
		private void InitProductOrderItemEntityMappings()
		{
			base.AddElementMapping( "ProductOrderItemEntity", "Falcon", @"dbo", "TblProductOrderItem", 2 );
			base.AddElementFieldMapping( "ProductOrderItemEntity", "OrderItemId", "OrderItemID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ProductOrderItemEntity", "ProductId", "ProductID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits ProductShippingOptionEntity's mappings</summary>
		private void InitProductShippingOptionEntityMappings()
		{
			base.AddElementMapping( "ProductShippingOptionEntity", "Falcon", @"dbo", "TblProductShippingOption", 4 );
			base.AddElementFieldMapping( "ProductShippingOptionEntity", "ProductId", "ProductId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ProductShippingOptionEntity", "ShippingOptionId", "ShippingOptionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ProductShippingOptionEntity", "IsShowVisible", "IsShowVisible", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
			base.AddElementFieldMapping( "ProductShippingOptionEntity", "IsForPcp", "IsForPcp", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
		}
		/// <summary>Inits ProductSourceCodeDiscountEntity's mappings</summary>
		private void InitProductSourceCodeDiscountEntityMappings()
		{
			base.AddElementMapping( "ProductSourceCodeDiscountEntity", "Falcon", @"dbo", "TblProductSourceCodeDiscount", 4 );
			base.AddElementFieldMapping( "ProductSourceCodeDiscountEntity", "ProductId", "ProductId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ProductSourceCodeDiscountEntity", "SourceCodeId", "SourceCodeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ProductSourceCodeDiscountEntity", "Discount", "Discount", false, (int)SqlDbType.Decimal, 0, 2, 10, false, "", null, typeof(System.Decimal), 2 );
			base.AddElementFieldMapping( "ProductSourceCodeDiscountEntity", "IsPercentage", "IsPercentage", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
		}
		/// <summary>Inits ProspectActivityEntity's mappings</summary>
		private void InitProspectActivityEntityMappings()
		{
			base.AddElementMapping( "ProspectActivityEntity", "Falcon", @"dbo", "TblTestOrderItem", 2 );
			base.AddElementFieldMapping( "ProspectActivityEntity", "ProspectId", "OrderItemID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ProspectActivityEntity", "ActivityId", "TestID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits ProspectActivityDetailsEntity's mappings</summary>
		private void InitProspectActivityDetailsEntityMappings()
		{
			base.AddElementMapping( "ProspectActivityDetailsEntity", "Falcon", @"dbo", "TblProspectActivityDetails", 8 );
			base.AddElementFieldMapping( "ProspectActivityDetailsEntity", "ProspectActivityDetailsId", "ProspectActivityDetailsID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ProspectActivityDetailsEntity", "ProspectId", "ProspectID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ProspectActivityDetailsEntity", "WfsequenceId", "WFSequenceID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "ProspectActivityDetailsEntity", "ActivityDetails", "ActivityDetails", false, (int)SqlDbType.VarChar, 5000, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "ProspectActivityDetailsEntity", "ActvityResultId", "ActvityResultID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "ProspectActivityDetailsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "ProspectActivityDetailsEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "ProspectActivityDetailsEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
		}
		/// <summary>Inits ProspectAddressEntity's mappings</summary>
		private void InitProspectAddressEntityMappings()
		{
			base.AddElementMapping( "ProspectAddressEntity", "Falcon", @"dbo", "TblProspectAddress", 13 );
			base.AddElementFieldMapping( "ProspectAddressEntity", "ProspectAddressId", "ProspectAddressID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ProspectAddressEntity", "ProspectId", "ProspectID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ProspectAddressEntity", "Address1", "Address1", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ProspectAddressEntity", "Address2", "Address2", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "ProspectAddressEntity", "City", "City", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "ProspectAddressEntity", "State", "State", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "ProspectAddressEntity", "Country", "Country", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "ProspectAddressEntity", "Zip", "Zip", true, (int)SqlDbType.VarChar, 10, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "ProspectAddressEntity", "Fax", "Fax", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "ProspectAddressEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "ProspectAddressEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 10 );
			base.AddElementFieldMapping( "ProspectAddressEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 11 );
			base.AddElementFieldMapping( "ProspectAddressEntity", "IsMailing", "IsMailing", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 12 );
		}
		/// <summary>Inits ProspectCallDetailsEntity's mappings</summary>
		private void InitProspectCallDetailsEntityMappings()
		{
			base.AddElementMapping( "ProspectCallDetailsEntity", "Falcon", @"dbo", "TblProspectCallDetails", 8 );
			base.AddElementFieldMapping( "ProspectCallDetailsEntity", "CallId", "CallID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ProspectCallDetailsEntity", "CallerId", "CallerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ProspectCallDetailsEntity", "ProspectsId", "ProspectsID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "ProspectCallDetailsEntity", "ProspectStage", "ProspectStage", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "ProspectCallDetailsEntity", "CallResponse", "CallResponse", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "ProspectCallDetailsEntity", "NextCallDate", "NextCallDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "ProspectCallDetailsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "ProspectCallDetailsEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
		}
		/// <summary>Inits ProspectCallsEntity's mappings</summary>
		private void InitProspectCallsEntityMappings()
		{
			base.AddElementMapping( "ProspectCallsEntity", "Falcon", @"dbo", "TblProspectCalls", 3 );
			base.AddElementFieldMapping( "ProspectCallsEntity", "ProspectCallId", "ProspectCallID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ProspectCallsEntity", "ProspectId", "ProspectID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ProspectCallsEntity", "CallId", "CallID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
		}
		/// <summary>Inits ProspectContactEntity's mappings</summary>
		private void InitProspectContactEntityMappings()
		{
			base.AddElementMapping( "ProspectContactEntity", "Falcon", @"dbo", "TblProspectContact", 6 );
			base.AddElementFieldMapping( "ProspectContactEntity", "ProspectContactId", "ProspectContactID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ProspectContactEntity", "ProspectId", "ProspectID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ProspectContactEntity", "ContactId", "ContactID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "ProspectContactEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "ProspectContactEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "ProspectContactEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits ProspectContactCallsEntity's mappings</summary>
		private void InitProspectContactCallsEntityMappings()
		{
			base.AddElementMapping( "ProspectContactCallsEntity", "Falcon", @"dbo", "TblProspectContactCalls", 3 );
			base.AddElementFieldMapping( "ProspectContactCallsEntity", "ProspectContactCallId", "ProspectContactCallID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ProspectContactCallsEntity", "ProspectContactId", "ProspectContactID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ProspectContactCallsEntity", "CallId", "CallID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
		}
		/// <summary>Inits ProspectContactMeetingsEntity's mappings</summary>
		private void InitProspectContactMeetingsEntityMappings()
		{
			base.AddElementMapping( "ProspectContactMeetingsEntity", "Falcon", @"dbo", "TblProspectContactMeetings", 3 );
			base.AddElementFieldMapping( "ProspectContactMeetingsEntity", "ProspectContactMeetingId", "ProspectContactMeetingID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ProspectContactMeetingsEntity", "ProspectContactId", "ProspectContactID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ProspectContactMeetingsEntity", "MeetingId", "MeetingID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
		}
		/// <summary>Inits ProspectContactRoleEntity's mappings</summary>
		private void InitProspectContactRoleEntityMappings()
		{
			base.AddElementMapping( "ProspectContactRoleEntity", "Falcon", @"dbo", "TblProspectContactRole", 2 );
			base.AddElementFieldMapping( "ProspectContactRoleEntity", "ProspectContactRoleId", "ProspectContactRoleID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ProspectContactRoleEntity", "ProspectContactRoleName", "ProspectContactRoleName", false, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 1 );
		}
		/// <summary>Inits ProspectContactRoleMappingEntity's mappings</summary>
		private void InitProspectContactRoleMappingEntityMappings()
		{
			base.AddElementMapping( "ProspectContactRoleMappingEntity", "Falcon", @"dbo", "TblProspectContactRoleMapping", 4 );
			base.AddElementFieldMapping( "ProspectContactRoleMappingEntity", "ProspectContactRoleMappingId", "ProspectContactRoleMappingID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ProspectContactRoleMappingEntity", "ProspectContactId", "ProspectContactID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ProspectContactRoleMappingEntity", "ProspectContactRoleId", "ProspectContactRoleID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "ProspectContactRoleMappingEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
		}
		/// <summary>Inits ProspectContactTasksEntity's mappings</summary>
		private void InitProspectContactTasksEntityMappings()
		{
			base.AddElementMapping( "ProspectContactTasksEntity", "Falcon", @"dbo", "TblProspectContactTasks", 3 );
			base.AddElementFieldMapping( "ProspectContactTasksEntity", "ProspectContactTaskId", "ProspectContactTaskID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ProspectContactTasksEntity", "ProspectContactId", "ProspectContactID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ProspectContactTasksEntity", "TaskId", "TaskID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
		}
		/// <summary>Inits ProspectCustomerEntity's mappings</summary>
		private void InitProspectCustomerEntityMappings()
		{
			base.AddElementMapping( "ProspectCustomerEntity", "Falcon", @"dbo", "TblProspectCustomer", 32 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "ProspectCustomerId", "ProspectCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "FirstName", "FirstName", true, (int)SqlDbType.NVarChar, 100, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "LastName", "LastName", true, (int)SqlDbType.NVarChar, 100, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "ZipCode", "ZipCode", true, (int)SqlDbType.NVarChar, 50, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "CallbackNo", "CallbackNo", true, (int)SqlDbType.NVarChar, 50, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "CustomerId", "CustomerID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "Address1", "Address1", true, (int)SqlDbType.NVarChar, 200, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "Address2", "Address2", true, (int)SqlDbType.NVarChar, 200, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "City", "City", true, (int)SqlDbType.NVarChar, 100, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "State", "State", true, (int)SqlDbType.NVarChar, 100, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "Dob", "DOB", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "Email", "Email", true, (int)SqlDbType.NVarChar, 100, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "Phone2", "Phone2", true, (int)SqlDbType.NVarChar, 50, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "IsConverted", "IsConverted", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 14 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "DateConverted", "DateConverted", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 15 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "Source", "Source", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 16 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "Tag", "Tag", false, (int)SqlDbType.NVarChar, 200, 0, 0, false, "", null, typeof(System.String), 17 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "AffiliateCampaignMarketingMaterialId", "AffiliateCampaignMarketingMaterialID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 18 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "MarketingSource", "MarketingSource", true, (int)SqlDbType.NVarChar, 200, 0, 0, false, "", null, typeof(System.String), 19 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "IsQueuedForCallBack", "IsQueuedForCallBack", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 20 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "SourceCodeId", "SourceCodeID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 21 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "IncomingPhoneLine", "IncomingPhoneLine", true, (int)SqlDbType.VarChar, 20, 0, 0, false, "", null, typeof(System.String), 22 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "ProspectListId", "ProspectListID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 23 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "Gender", "Gender", true, (int)SqlDbType.VarChar, 10, 0, 0, false, "", null, typeof(System.String), 24 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 25 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "IsContacted", "IsContacted", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 26 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "ContactedDate", "ContactedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 27 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "ContactedBy", "ContactedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 28 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "CallBackRequestedOn", "CallBackRequestedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 29 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "CallBackRequestedDate", "CallBackRequestedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 30 );
			base.AddElementFieldMapping( "ProspectCustomerEntity", "TagUpdateDate", "TagUpdateDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 31 );
		}
		/// <summary>Inits ProspectCustomerCallEntity's mappings</summary>
		private void InitProspectCustomerCallEntityMappings()
		{
			base.AddElementMapping( "ProspectCustomerCallEntity", "Falcon", @"dbo", "TblProspectCustomerCall", 2 );
			base.AddElementFieldMapping( "ProspectCustomerCallEntity", "ProspectCustomerId", "ProspectCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ProspectCustomerCallEntity", "CallId", "CallId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits ProspectCustomerDeletedEntity's mappings</summary>
		private void InitProspectCustomerDeletedEntityMappings()
		{
			base.AddElementMapping( "ProspectCustomerDeletedEntity", "Falcon", @"dbo", "TblProspectCustomerDeleted", 26 );
			base.AddElementFieldMapping( "ProspectCustomerDeletedEntity", "ProspectCustomerId", "ProspectCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ProspectCustomerDeletedEntity", "FirstName", "FirstName", true, (int)SqlDbType.NVarChar, 100, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ProspectCustomerDeletedEntity", "LastName", "LastName", true, (int)SqlDbType.NVarChar, 100, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ProspectCustomerDeletedEntity", "ZipCode", "ZipCode", true, (int)SqlDbType.NVarChar, 50, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "ProspectCustomerDeletedEntity", "CallbackNo", "CallbackNo", true, (int)SqlDbType.NVarChar, 50, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "ProspectCustomerDeletedEntity", "CustomerId", "CustomerID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "ProspectCustomerDeletedEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "ProspectCustomerDeletedEntity", "Address1", "Address1", true, (int)SqlDbType.NVarChar, 200, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "ProspectCustomerDeletedEntity", "Address2", "Address2", true, (int)SqlDbType.NVarChar, 200, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "ProspectCustomerDeletedEntity", "City", "City", true, (int)SqlDbType.NVarChar, 100, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "ProspectCustomerDeletedEntity", "State", "State", true, (int)SqlDbType.NVarChar, 100, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "ProspectCustomerDeletedEntity", "Dob", "DOB", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "ProspectCustomerDeletedEntity", "Email", "Email", true, (int)SqlDbType.NVarChar, 100, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "ProspectCustomerDeletedEntity", "Phone2", "Phone2", true, (int)SqlDbType.NVarChar, 50, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "ProspectCustomerDeletedEntity", "IsConverted", "IsConverted", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 14 );
			base.AddElementFieldMapping( "ProspectCustomerDeletedEntity", "DateConverted", "DateConverted", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 15 );
			base.AddElementFieldMapping( "ProspectCustomerDeletedEntity", "Source", "Source", false, (int)SqlDbType.NVarChar, 100, 0, 0, false, "", null, typeof(System.String), 16 );
			base.AddElementFieldMapping( "ProspectCustomerDeletedEntity", "Tag", "Tag", true, (int)SqlDbType.NVarChar, 100, 0, 0, false, "", null, typeof(System.String), 17 );
			base.AddElementFieldMapping( "ProspectCustomerDeletedEntity", "AffiliateCampaignMarketingMaterialId", "AffiliateCampaignMarketingMaterialID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 18 );
			base.AddElementFieldMapping( "ProspectCustomerDeletedEntity", "MarketingSource", "MarketingSource", true, (int)SqlDbType.NVarChar, 200, 0, 0, false, "", null, typeof(System.String), 19 );
			base.AddElementFieldMapping( "ProspectCustomerDeletedEntity", "IsQueuedForCallBack", "IsQueuedForCallBack", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 20 );
			base.AddElementFieldMapping( "ProspectCustomerDeletedEntity", "SourceCodeId", "SourceCodeID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 21 );
			base.AddElementFieldMapping( "ProspectCustomerDeletedEntity", "IncomingPhoneLine", "IncomingPhoneLine", true, (int)SqlDbType.VarChar, 20, 0, 0, false, "", null, typeof(System.String), 22 );
			base.AddElementFieldMapping( "ProspectCustomerDeletedEntity", "ProspectListId", "ProspectListID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 23 );
			base.AddElementFieldMapping( "ProspectCustomerDeletedEntity", "Gender", "Gender", true, (int)SqlDbType.VarChar, 10, 0, 0, false, "", null, typeof(System.String), 24 );
			base.AddElementFieldMapping( "ProspectCustomerDeletedEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 25 );
		}
		/// <summary>Inits ProspectCustomerNotificationEntity's mappings</summary>
		private void InitProspectCustomerNotificationEntityMappings()
		{
			base.AddElementMapping( "ProspectCustomerNotificationEntity", "Falcon", @"dbo", "TblProspectCustomerNotification", 2 );
			base.AddElementFieldMapping( "ProspectCustomerNotificationEntity", "ProspectCustomerId", "ProspectCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ProspectCustomerNotificationEntity", "NotificationId", "NotificationID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits ProspectDetailsEntity's mappings</summary>
		private void InitProspectDetailsEntityMappings()
		{
			base.AddElementMapping( "ProspectDetailsEntity", "Falcon", @"dbo", "TblProspectDetails", 17 );
			base.AddElementFieldMapping( "ProspectDetailsEntity", "ProspectDetailsId", "ProspectDetailsID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ProspectDetailsEntity", "ProspectId", "ProspectID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ProspectDetailsEntity", "FacilitiesFee", "FacilitiesFee", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ProspectDetailsEntity", "PaymentMethod", "PaymentMethod", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "ProspectDetailsEntity", "DepositsRequire", "DepositsRequire", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 4 );
			base.AddElementFieldMapping( "ProspectDetailsEntity", "DepositsAmount", "DepositsAmount", true, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 5 );
			base.AddElementFieldMapping( "ProspectDetailsEntity", "ViableHostSite", "ViableHostSite", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 6 );
			base.AddElementFieldMapping( "ProspectDetailsEntity", "HostedInPast", "HostedInPast", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 7 );
			base.AddElementFieldMapping( "ProspectDetailsEntity", "HostedInPastWith", "HostedInPastWith", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "ProspectDetailsEntity", "WillHost", "WillHost", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 9 );
			base.AddElementFieldMapping( "ProspectDetailsEntity", "DateCreated", "DateCreated", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 10 );
			base.AddElementFieldMapping( "ProspectDetailsEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "ProspectDetailsEntity", "IsActive", "IsActive", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 12 );
			base.AddElementFieldMapping( "ProspectDetailsEntity", "ReasonViableHostSite", "ReasonViableHostSite", true, (int)SqlDbType.Text, 2147483647, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "ProspectDetailsEntity", "ReasonHostedInPast", "ReasonHostedInPast", true, (int)SqlDbType.Text, 2147483647, 0, 0, false, "", null, typeof(System.String), 14 );
			base.AddElementFieldMapping( "ProspectDetailsEntity", "ReasonHostedInPastWith", "ReasonHostedInPastWith", true, (int)SqlDbType.Text, 2147483647, 0, 0, false, "", null, typeof(System.String), 15 );
			base.AddElementFieldMapping( "ProspectDetailsEntity", "ReasonWillHost", "ReasonWillHost", true, (int)SqlDbType.Text, 2147483647, 0, 0, false, "", null, typeof(System.String), 16 );
		}
		/// <summary>Inits ProspectFaliureReportEntity's mappings</summary>
		private void InitProspectFaliureReportEntityMappings()
		{
			base.AddElementMapping( "ProspectFaliureReportEntity", "Falcon", @"dbo", "TblProspectFaliureReport", 17 );
			base.AddElementFieldMapping( "ProspectFaliureReportEntity", "ProspectFaliureId", "ProspectFaliureID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ProspectFaliureReportEntity", "FirstName", "FirstName", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ProspectFaliureReportEntity", "LastName", "LastName", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ProspectFaliureReportEntity", "Organisation", "Organisation", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "ProspectFaliureReportEntity", "Email", "EMail", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "ProspectFaliureReportEntity", "PhoneOffice", "PhoneOffice", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "ProspectFaliureReportEntity", "PhoneCell", "PhoneCell", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "ProspectFaliureReportEntity", "Website", "Website", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "ProspectFaliureReportEntity", "Notes", "Notes", true, (int)SqlDbType.VarChar, 5000, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "ProspectFaliureReportEntity", "ProspectListId", "ProspectListID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "ProspectFaliureReportEntity", "Address1", "Address1", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "ProspectFaliureReportEntity", "CountryId", "CountryID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 11 );
			base.AddElementFieldMapping( "ProspectFaliureReportEntity", "StateId", "StateID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "ProspectFaliureReportEntity", "City", "City", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "ProspectFaliureReportEntity", "ZipId", "ZipID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 14 );
			base.AddElementFieldMapping( "ProspectFaliureReportEntity", "DateCreated", "DateCreated", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 15 );
			base.AddElementFieldMapping( "ProspectFaliureReportEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 16 );
		}
		/// <summary>Inits ProspectListDetailsEntity's mappings</summary>
		private void InitProspectListDetailsEntityMappings()
		{
			base.AddElementMapping( "ProspectListDetailsEntity", "Falcon", @"dbo", "TblProspectListDetails", 16 );
			base.AddElementFieldMapping( "ProspectListDetailsEntity", "ProspectFileId", "ProspectFileID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ProspectListDetailsEntity", "FileName", "FileName", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ProspectListDetailsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "ProspectListDetailsEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "ProspectListDetailsEntity", "IsActive", "IsActive", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "ProspectListDetailsEntity", "ListName", "ListName", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "ProspectListDetailsEntity", "ListSource", "ListSource", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "ProspectListDetailsEntity", "ListType", "ListType", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 7 );
			base.AddElementFieldMapping( "ProspectListDetailsEntity", "AddedBy", "AddedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "ProspectListDetailsEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "ProspectListDetailsEntity", "LogList", "LOG_LIST", true, (int)SqlDbType.NText, 1073741823, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "ProspectListDetailsEntity", "RoleId", "RoleId", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 11 );
			base.AddElementFieldMapping( "ProspectListDetailsEntity", "FileSize", "FileSize", true, (int)SqlDbType.VarChar, 20, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "ProspectListDetailsEntity", "UploadTime", "UploadTime", true, (int)SqlDbType.VarChar, 10, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "ProspectListDetailsEntity", "Assigned", "Assigned", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 14 );
			base.AddElementFieldMapping( "ProspectListDetailsEntity", "OrganizationId", "OrganizationId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 15 );
		}
		/// <summary>Inits ProspectListTypeEntity's mappings</summary>
		private void InitProspectListTypeEntityMappings()
		{
			base.AddElementMapping( "ProspectListTypeEntity", "Falcon", @"dbo", "TblProspectListType", 3 );
			base.AddElementFieldMapping( "ProspectListTypeEntity", "ProspectListTypeId", "ProspectListTypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ProspectListTypeEntity", "ProspectListType", "ProspectListType", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ProspectListTypeEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
		}
		/// <summary>Inits ProspectMeetingsEntity's mappings</summary>
		private void InitProspectMeetingsEntityMappings()
		{
			base.AddElementMapping( "ProspectMeetingsEntity", "Falcon", @"dbo", "TblProspectMeetings", 3 );
			base.AddElementFieldMapping( "ProspectMeetingsEntity", "ProspectMeetingId", "ProspectMeetingID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ProspectMeetingsEntity", "ProspectId", "ProspectID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ProspectMeetingsEntity", "MeetingId", "MeetingID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
		}
		/// <summary>Inits ProspectNotesDetailsEntity's mappings</summary>
		private void InitProspectNotesDetailsEntityMappings()
		{
			base.AddElementMapping( "ProspectNotesDetailsEntity", "Falcon", @"dbo", "TblProspectNotesDetails", 3 );
			base.AddElementFieldMapping( "ProspectNotesDetailsEntity", "ProspectNoteId", "ProspectNoteID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ProspectNotesDetailsEntity", "ProspectId", "ProspectID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ProspectNotesDetailsEntity", "NoteId", "NoteID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
		}
		/// <summary>Inits ProspectsEntity's mappings</summary>
		private void InitProspectsEntityMappings()
		{
			base.AddElementMapping( "ProspectsEntity", "Falcon", @"dbo", "TblProspects", 41 );
			base.AddElementFieldMapping( "ProspectsEntity", "ProspectId", "ProspectID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ProspectsEntity", "ProspectListId", "ProspectListID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ProspectsEntity", "ProspectStage", "ProspectStage", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "ProspectsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "ProspectsEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "ProspectsEntity", "PropectsState", "PropectsState", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "ProspectsEntity", "IsHost", "IsHost", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "ProspectsEntity", "Status", "Status", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "ProspectsEntity", "ProspectTypeId", "ProspectTypeID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "ProspectsEntity", "EmailId", "EMailID", true, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "ProspectsEntity", "PhoneOffice", "PhoneOffice", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "ProspectsEntity", "PhoneCell", "PhoneCell", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 11 );
			base.AddElementFieldMapping( "ProspectsEntity", "PhoneOther", "PhoneOther", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "ProspectsEntity", "WebSite", "WebSite", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "ProspectsEntity", "OrganizationName", "OrganizationName", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 14 );
			base.AddElementFieldMapping( "ProspectsEntity", "Notes", "Notes", true, (int)SqlDbType.VarChar, 5000, 0, 0, false, "", null, typeof(System.String), 15 );
			base.AddElementFieldMapping( "ProspectsEntity", "AddressId", "AddressID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 16 );
			base.AddElementFieldMapping( "ProspectsEntity", "AddressIdmailling", "AddressIDMailling", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 17 );
			base.AddElementFieldMapping( "ProspectsEntity", "ActualMembersHip", "ActualMembersHIP", true, (int)SqlDbType.Decimal, 0, 0, 18, false, "", null, typeof(System.Decimal), 18 );
			base.AddElementFieldMapping( "ProspectsEntity", "ActualAttendance", "ActualAttendance", true, (int)SqlDbType.Decimal, 0, 0, 18, false, "", null, typeof(System.Decimal), 19 );
			base.AddElementFieldMapping( "ProspectsEntity", "WillPromote", "WillPromote", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 20 );
			base.AddElementFieldMapping( "ProspectsEntity", "Mapurl", "MAPUrl", true, (int)SqlDbType.VarChar, 3000, 0, 0, false, "", null, typeof(System.String), 21 );
			base.AddElementFieldMapping( "ProspectsEntity", "OtherEmail", "OtherEmail", true, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 22 );
			base.AddElementFieldMapping( "ProspectsEntity", "MethodObtainedId", "MethodObtainedID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 23 );
			base.AddElementFieldMapping( "ProspectsEntity", "County", "County", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 24 );
			base.AddElementFieldMapping( "ProspectsEntity", "DateHostConverted", "DateHostConverted", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 25 );
			base.AddElementFieldMapping( "ProspectsEntity", "Fudate", "FUDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 26 );
			base.AddElementFieldMapping( "ProspectsEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 27 );
			base.AddElementFieldMapping( "ProspectsEntity", "ReasonWillPromote", "ReasonWillPromote", true, (int)SqlDbType.Text, 2147483647, 0, 0, false, "", null, typeof(System.String), 28 );
			base.AddElementFieldMapping( "ProspectsEntity", "TaxIdNumber", "TaxIdNumber", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 29 );
			base.AddElementFieldMapping( "ProspectsEntity", "CompanyId", "CompanyID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 30 );
			base.AddElementFieldMapping( "ProspectsEntity", "Department", "Department", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 31 );
			base.AddElementFieldMapping( "ProspectsEntity", "Ext", "Ext", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 32 );
			base.AddElementFieldMapping( "ProspectsEntity", "Small", "Small", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 33 );
			base.AddElementFieldMapping( "ProspectsEntity", "Industry", "Industry", true, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 34 );
			base.AddElementFieldMapping( "ProspectsEntity", "WebsiteJobOpenings", "WebsiteJobOpenings", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 35 );
			base.AddElementFieldMapping( "ProspectsEntity", "YearlyRevRange", "YearlyRevRange", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 36 );
			base.AddElementFieldMapping( "ProspectsEntity", "EmployeeRange", "EmployeeRange", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 37 );
			base.AddElementFieldMapping( "ProspectsEntity", "GroupDescription", "GroupDescription", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 38 );
			base.AddElementFieldMapping( "ProspectsEntity", "OrgRoleUserId", "OrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 39 );
			base.AddElementFieldMapping( "ProspectsEntity", "Fax", "Fax", true, (int)SqlDbType.VarChar, 20, 0, 0, false, "", null, typeof(System.String), 40 );
		}
		/// <summary>Inits ProspectTasksEntity's mappings</summary>
		private void InitProspectTasksEntityMappings()
		{
			base.AddElementMapping( "ProspectTasksEntity", "Falcon", @"dbo", "TblProspectTasks", 3 );
			base.AddElementFieldMapping( "ProspectTasksEntity", "ProspectTaskId", "ProspectTaskID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ProspectTasksEntity", "ProspectId", "ProspectID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ProspectTasksEntity", "TaskId", "TaskID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
		}
		/// <summary>Inits ProspectTypeEntity's mappings</summary>
		private void InitProspectTypeEntityMappings()
		{
			base.AddElementMapping( "ProspectTypeEntity", "Falcon", @"dbo", "TblProspectType", 6 );
			base.AddElementFieldMapping( "ProspectTypeEntity", "ProspectTypeId", "ProspectTypeID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ProspectTypeEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ProspectTypeEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ProspectTypeEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "ProspectTypeEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "ProspectTypeEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits RapsEntity's mappings</summary>
		private void InitRapsEntityMappings()
		{
			base.AddElementMapping( "RapsEntity", "Falcon", @"dbo", "TblRaps", 12 );
			base.AddElementFieldMapping( "RapsEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "RapsEntity", "RapsUploadId", "RapsUploadId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "RapsEntity", "CmsHicn", "CmsHicn", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "RapsEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "RapsEntity", "MemberDob", "MemberDob", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "RapsEntity", "MemberId", "MemberId", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "RapsEntity", "IcdVersion", "IcdVersion", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 6 );
			base.AddElementFieldMapping( "RapsEntity", "ServiceDate", "ServiceDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "RapsEntity", "IcdCode", "IcdCode", true, (int)SqlDbType.VarChar, 8, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "RapsEntity", "FirstName", "FirstName", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "RapsEntity", "SecondName", "SecondName", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "RapsEntity", "IsSynced", "IsSynced", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 11 );
		}
		/// <summary>Inits RapsUploadEntity's mappings</summary>
		private void InitRapsUploadEntityMappings()
		{
			base.AddElementMapping( "RapsUploadEntity", "Falcon", @"dbo", "TblRapsUpload", 11 );
			base.AddElementFieldMapping( "RapsUploadEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "RapsUploadEntity", "FileId", "FileId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "RapsUploadEntity", "StatusId", "StatusId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "RapsUploadEntity", "SuccessfullUploadCount", "SuccessfullUploadCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "RapsUploadEntity", "FailedUploadCount", "FailedUploadCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "RapsUploadEntity", "UploadTime", "UploadTime", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "RapsUploadEntity", "UploadedBy", "UploadedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "RapsUploadEntity", "ParseStartTime", "ParseStartTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "RapsUploadEntity", "ParseEndTime", "ParseEndTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "RapsUploadEntity", "LogFileId", "LogFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "RapsUploadEntity", "TotalCount", "TotalCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
		}
		/// <summary>Inits RapsUploadLogEntity's mappings</summary>
		private void InitRapsUploadLogEntityMappings()
		{
			base.AddElementMapping( "RapsUploadLogEntity", "Falcon", @"dbo", "TblRapsUploadLog", 12 );
			base.AddElementFieldMapping( "RapsUploadLogEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "RapsUploadLogEntity", "RapsUploadId", "RapsUploadId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "RapsUploadLogEntity", "CmsHicn", "CmsHicn", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "RapsUploadLogEntity", "MemberDob", "MemberDob", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "RapsUploadLogEntity", "IsSuccessFull", "IsSuccessFull", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "RapsUploadLogEntity", "ErrorMessage", "ErrorMessage", true, (int)SqlDbType.VarChar, 4000, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "RapsUploadLogEntity", "MemberId", "MemberId", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "RapsUploadLogEntity", "IcdVersion", "IcdVersion", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 7 );
			base.AddElementFieldMapping( "RapsUploadLogEntity", "ServiceDate", "ServiceDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "RapsUploadLogEntity", "IcdCode", "IcdCode", true, (int)SqlDbType.VarChar, 8, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "RapsUploadLogEntity", "FirstName", "FirstName", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "RapsUploadLogEntity", "SecondName", "SecondName", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 11 );
		}
		/// <summary>Inits ReadingEntity's mappings</summary>
		private void InitReadingEntityMappings()
		{
			base.AddElementMapping( "ReadingEntity", "Falcon", @"dbo", "TblReading", 7 );
			base.AddElementFieldMapping( "ReadingEntity", "ReadingId", "ReadingId", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 0 );
			base.AddElementFieldMapping( "ReadingEntity", "Label", "Label", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ReadingEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "ReadingEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "ReadingEntity", "MeasurementUnit", "MeasurementUnit", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "ReadingEntity", "DefaultInputSource", "DefaultInputSource", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "ReadingEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
		}
		/// <summary>Inits ReferralEntity's mappings</summary>
		private void InitReferralEntityMappings()
		{
			base.AddElementMapping( "ReferralEntity", "Falcon", @"dbo", "TblReferral", 9 );
			base.AddElementFieldMapping( "ReferralEntity", "ReferralId", "ReferralID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ReferralEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ReferralEntity", "Email", "Email", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ReferralEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "ReferralEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "ReferralEntity", "ReferedCustomerId", "ReferedCustomerID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "ReferralEntity", "ReferrelPage", "ReferrelPage", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "ReferralEntity", "EventCustomerId", "EventCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "ReferralEntity", "ReferedByOrgRoleUserId", "ReferedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
		}
		/// <summary>Inits RefundEntity's mappings</summary>
		private void InitRefundEntityMappings()
		{
			base.AddElementMapping( "RefundEntity", "Falcon", @"dbo", "TblRefund", 6 );
			base.AddElementFieldMapping( "RefundEntity", "RefundId", "RefundID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "RefundEntity", "ReasonId", "ReasonID", false, (int)SqlDbType.SmallInt, 0, 0, 5, false, "", null, typeof(System.Int16), 1 );
			base.AddElementFieldMapping( "RefundEntity", "Amount", "Amount", false, (int)SqlDbType.Money, 0, 4, 19, false, "", null, typeof(System.Decimal), 2 );
			base.AddElementFieldMapping( "RefundEntity", "Notes", "Notes", true, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "RefundEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "RefundEntity", "OrganizationRoleUserCreatorId", "OrganizationRoleUserCreatorID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
		}
		/// <summary>Inits RefundOrderItemEntity's mappings</summary>
		private void InitRefundOrderItemEntityMappings()
		{
			base.AddElementMapping( "RefundOrderItemEntity", "Falcon", @"dbo", "TblRefundOrderItem", 2 );
			base.AddElementFieldMapping( "RefundOrderItemEntity", "OrderItemId", "OrderItemID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "RefundOrderItemEntity", "RefundId", "RefundID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits RefundRequestEntity's mappings</summary>
		private void InitRefundRequestEntityMappings()
		{
			base.AddElementMapping( "RefundRequestEntity", "Falcon", @"dbo", "TblRefundRequest", 14 );
			base.AddElementFieldMapping( "RefundRequestEntity", "RefundRequestId", "RefundRequestID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "RefundRequestEntity", "ReasonType", "ReasonType", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "RefundRequestEntity", "ReasonComment", "ReasonComment", false, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "RefundRequestEntity", "OrderId", "OrderID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "RefundRequestEntity", "RequestedRefundAmount", "RequestedRefundAmount", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 4 );
			base.AddElementFieldMapping( "RefundRequestEntity", "FinalRefundAmount", "FinalRefundAmount", true, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 5 );
			base.AddElementFieldMapping( "RefundRequestEntity", "RequestedByOrgRoleUserId", "RequestedByOrgRoleUserID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "RefundRequestEntity", "ProcessedByOrgRoleUserId", "ProcessedByOrgRoleUserID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "RefundRequestEntity", "ProcessorNotes", "ProcessorNotes", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "RefundRequestEntity", "RequestedOn", "RequestedOn", false, (int)SqlDbType.SmallDateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "RefundRequestEntity", "ProcessedOn", "ProcessedOn", true, (int)SqlDbType.SmallDateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 10 );
			base.AddElementFieldMapping( "RefundRequestEntity", "RequestResult", "RequestResult", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 11 );
			base.AddElementFieldMapping( "RefundRequestEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 12 );
			base.AddElementFieldMapping( "RefundRequestEntity", "RequestStatus", "RequestStatus", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 13 );
		}
		/// <summary>Inits RefundRequestGiftCertificateEntity's mappings</summary>
		private void InitRefundRequestGiftCertificateEntityMappings()
		{
			base.AddElementMapping( "RefundRequestGiftCertificateEntity", "Falcon", @"dbo", "TblRefundRequestGiftCertificate", 2 );
			base.AddElementFieldMapping( "RefundRequestGiftCertificateEntity", "GiftCertificateId", "GiftCertificateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "RefundRequestGiftCertificateEntity", "RefundRequestId", "RefundRequestID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits RelationshipEntity's mappings</summary>
		private void InitRelationshipEntityMappings()
		{
			base.AddElementMapping( "RelationshipEntity", "Falcon", @"dbo", "TblRelationship", 4 );
			base.AddElementFieldMapping( "RelationshipEntity", "RelationshipId", "RelationshipId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "RelationshipEntity", "Code", "Code", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "RelationshipEntity", "Description", "Description", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "RelationshipEntity", "Alias", "Alias", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 3 );
		}
		/// <summary>Inits RequiredTestEntity's mappings</summary>
		private void InitRequiredTestEntityMappings()
		{
			base.AddElementMapping( "RequiredTestEntity", "Falcon", @"dbo", "TblRequiredTest", 8 );
			base.AddElementFieldMapping( "RequiredTestEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "RequiredTestEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "RequiredTestEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "RequiredTestEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "RequiredTestEntity", "CreatedBy", "CreatedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "RequiredTestEntity", "CreatedDate", "CreatedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "RequiredTestEntity", "ForYear", "ForYear", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 6 );
			base.AddElementFieldMapping( "RequiredTestEntity", "EndDate", "EndDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
		}
		/// <summary>Inits RescheduleCancelDispositionEntity's mappings</summary>
		private void InitRescheduleCancelDispositionEntityMappings()
		{
			base.AddElementMapping( "RescheduleCancelDispositionEntity", "Falcon", @"dbo", "TblRescheduleCancelDisposition", 9 );
			base.AddElementFieldMapping( "RescheduleCancelDispositionEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "RescheduleCancelDispositionEntity", "LookupId", "LookupId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "RescheduleCancelDispositionEntity", "Alias", "Alias", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "RescheduleCancelDispositionEntity", "DisplayName", "DisplayName", false, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "RescheduleCancelDispositionEntity", "Description", "Description", true, (int)SqlDbType.NText, 1073741823, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "RescheduleCancelDispositionEntity", "RelativeOrder", "RelativeOrder", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 5 );
			base.AddElementFieldMapping( "RescheduleCancelDispositionEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "RescheduleCancelDispositionEntity", "DataRecorderCreatorId", "DataRecorderCreatorID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "RescheduleCancelDispositionEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
		}
		/// <summary>Inits ResultArchiveUploadEntity's mappings</summary>
		private void InitResultArchiveUploadEntityMappings()
		{
			base.AddElementMapping( "ResultArchiveUploadEntity", "Falcon", @"dbo", "TblResultArchiveUpload", 12 );
			base.AddElementFieldMapping( "ResultArchiveUploadEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ResultArchiveUploadEntity", "UploadStartTime", "UploadStartTime", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 1 );
			base.AddElementFieldMapping( "ResultArchiveUploadEntity", "UploadEndTime", "UploadEndTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "ResultArchiveUploadEntity", "ParseStartTime", "ParseStartTime", true, (int)SqlDbType.SmallDateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "ResultArchiveUploadEntity", "ParseEndTime", "ParseEndTime", true, (int)SqlDbType.SmallDateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "ResultArchiveUploadEntity", "CustomerRecordsFound", "CustomerRecordsFound", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 5 );
			base.AddElementFieldMapping( "ResultArchiveUploadEntity", "Status", "Status", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 6 );
			base.AddElementFieldMapping( "ResultArchiveUploadEntity", "ResultArchiveUploadId", "ResultArchiveUploadID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "ResultArchiveUploadEntity", "FileId", "FileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "ResultArchiveUploadEntity", "UploadPercentage", "UploadPercentage", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 9 );
			base.AddElementFieldMapping( "ResultArchiveUploadEntity", "ParsePercentage", "ParsePercentage", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 10 );
			base.AddElementFieldMapping( "ResultArchiveUploadEntity", "UploadedByOrgRoleUserId", "UploadedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 11 );
		}
		/// <summary>Inits ResultArchiveUploadLogEntity's mappings</summary>
		private void InitResultArchiveUploadLogEntityMappings()
		{
			base.AddElementMapping( "ResultArchiveUploadLogEntity", "Falcon", @"dbo", "TblResultArchiveUploadLog", 8 );
			base.AddElementFieldMapping( "ResultArchiveUploadLogEntity", "ResultArchiveUploadLogId", "ResultArchiveUploadLogID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ResultArchiveUploadLogEntity", "ResultArchiveUploadId", "ResultArchiveUploadID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ResultArchiveUploadLogEntity", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "ResultArchiveUploadLogEntity", "TestId", "TestID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "ResultArchiveUploadLogEntity", "MedicalEquipmentTag", "MedicalEquipmentTag", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "ResultArchiveUploadLogEntity", "IsSuccessful", "IsSuccessful", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "ResultArchiveUploadLogEntity", "CreatedDate", "CreatedDate", false, (int)SqlDbType.SmallDateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "ResultArchiveUploadLogEntity", "Note", "Note", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 7 );
		}
		/// <summary>Inits RoleEntity's mappings</summary>
		private void InitRoleEntityMappings()
		{
			base.AddElementMapping( "RoleEntity", "Falcon", @"dbo", "TblRole", 14 );
			base.AddElementFieldMapping( "RoleEntity", "RoleId", "RoleID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "RoleEntity", "OrganizationTypeId", "OrganizationTypeID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "RoleEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "RoleEntity", "Alias", "Alias", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "RoleEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "RoleEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "RoleEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "RoleEntity", "DefaultPage", "DefaultPage", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "RoleEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
			base.AddElementFieldMapping( "RoleEntity", "ShellType", "ShellType", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "RoleEntity", "ParentId", "ParentId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
			base.AddElementFieldMapping( "RoleEntity", "IsSystemRole", "IsSystemRole", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 11 );
			base.AddElementFieldMapping( "RoleEntity", "IsTwoFactorAuthrequired", "IsTwoFactorAuthrequired", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 12 );
			base.AddElementFieldMapping( "RoleEntity", "IsPinRequired", "IsPinRequired", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 13 );
		}
		/// <summary>Inits RoleAccessControlObjectEntity's mappings</summary>
		private void InitRoleAccessControlObjectEntityMappings()
		{
			base.AddElementMapping( "RoleAccessControlObjectEntity", "Falcon", @"dbo", "TblRoleAccessControlObject", 4 );
			base.AddElementFieldMapping( "RoleAccessControlObjectEntity", "RoleId", "RoleId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "RoleAccessControlObjectEntity", "AccessControlObjectId", "AccessControlObjectId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "RoleAccessControlObjectEntity", "PermissionTypeId", "PermissionTypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "RoleAccessControlObjectEntity", "ScopeId", "ScopeId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
		}
		/// <summary>Inits RolePermisibleAccessControlObjectEntity's mappings</summary>
		private void InitRolePermisibleAccessControlObjectEntityMappings()
		{
			base.AddElementMapping( "RolePermisibleAccessControlObjectEntity", "Falcon", @"dbo", "TblRolePermisibleAccessControlObject", 2 );
			base.AddElementFieldMapping( "RolePermisibleAccessControlObjectEntity", "RoleId", "RoleId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "RolePermisibleAccessControlObjectEntity", "AccessControlObjectId", "AccessControlObjectId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits RoleScopeOptionEntity's mappings</summary>
		private void InitRoleScopeOptionEntityMappings()
		{
			base.AddElementMapping( "RoleScopeOptionEntity", "Falcon", @"dbo", "TblRoleScopeOption", 2 );
			base.AddElementFieldMapping( "RoleScopeOptionEntity", "RoleId", "RoleId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "RoleScopeOptionEntity", "ScopeId", "ScopeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits SafeComputerHistoryEntity's mappings</summary>
		private void InitSafeComputerHistoryEntityMappings()
		{
			base.AddElementMapping( "SafeComputerHistoryEntity", "Falcon", @"dbo", "TblSafeComputerHistory", 7 );
			base.AddElementFieldMapping( "SafeComputerHistoryEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "SafeComputerHistoryEntity", "UserLoginId", "UserLoginId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "SafeComputerHistoryEntity", "BrowserType", "BrowserType", false, (int)SqlDbType.NVarChar, 300, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "SafeComputerHistoryEntity", "ComputerIp", "ComputerIp", false, (int)SqlDbType.NVarChar, 30, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "SafeComputerHistoryEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "SafeComputerHistoryEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "SafeComputerHistoryEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
		}
		/// <summary>Inits SalesRepPodAssigmentsEntity's mappings</summary>
		private void InitSalesRepPodAssigmentsEntityMappings()
		{
			base.AddElementMapping( "SalesRepPodAssigmentsEntity", "Falcon", @"dbo", "TblSalesRepPodAssigments", 2 );
			base.AddElementFieldMapping( "SalesRepPodAssigmentsEntity", "OrganizationRoleUserId", "OrganizationRoleUserID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "SalesRepPodAssigmentsEntity", "PodId", "PodID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits ScheduleMethodEntity's mappings</summary>
		private void InitScheduleMethodEntityMappings()
		{
			base.AddElementMapping( "ScheduleMethodEntity", "Falcon", @"dbo", "TblScheduleMethod", 6 );
			base.AddElementFieldMapping( "ScheduleMethodEntity", "ScheduleMethodId", "ScheduleMethodID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ScheduleMethodEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ScheduleMethodEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ScheduleMethodEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "ScheduleMethodEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "ScheduleMethodEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits ScheduleTemplateEntity's mappings</summary>
		private void InitScheduleTemplateEntityMappings()
		{
			base.AddElementMapping( "ScheduleTemplateEntity", "Falcon", @"dbo", "TblScheduleTemplate", 9 );
			base.AddElementFieldMapping( "ScheduleTemplateEntity", "ScheduleTemplateId", "ScheduleTemplateID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ScheduleTemplateEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ScheduleTemplateEntity", "Description", "Description", false, (int)SqlDbType.VarChar, 5000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ScheduleTemplateEntity", "IsGlobal", "IsGlobal", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "ScheduleTemplateEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "ScheduleTemplateEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "ScheduleTemplateEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "ScheduleTemplateEntity", "ModifiedBy", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "ScheduleTemplateEntity", "ModifiedByOrgRoleUserId", "ModifiedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
		}
		/// <summary>Inits ScheduleTemplateFranchiseeAccessEntity's mappings</summary>
		private void InitScheduleTemplateFranchiseeAccessEntityMappings()
		{
			base.AddElementMapping( "ScheduleTemplateFranchiseeAccessEntity", "Falcon", @"dbo", "TblScheduleTemplateFranchiseeAccess", 6 );
			base.AddElementFieldMapping( "ScheduleTemplateFranchiseeAccessEntity", "ScheduleTemplateFranchiseeAccessId", "ScheduleTemplateFranchiseeAccessID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ScheduleTemplateFranchiseeAccessEntity", "ScheduleTemplateId", "ScheduleTemplateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ScheduleTemplateFranchiseeAccessEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "ScheduleTemplateFranchiseeAccessEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "ScheduleTemplateFranchiseeAccessEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "ScheduleTemplateFranchiseeAccessEntity", "OrganizationId", "OrganizationId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
		}
		/// <summary>Inits ScheduleTemplateTimeEntity's mappings</summary>
		private void InitScheduleTemplateTimeEntityMappings()
		{
			base.AddElementMapping( "ScheduleTemplateTimeEntity", "Falcon", @"dbo", "TblScheduleTemplateTime", 6 );
			base.AddElementFieldMapping( "ScheduleTemplateTimeEntity", "ScheduleTemplateTimeId", "ScheduleTemplateTimeID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ScheduleTemplateTimeEntity", "ScheduleTemplateId", "ScheduleTemplateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ScheduleTemplateTimeEntity", "StartTime", "StartTime", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ScheduleTemplateTimeEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "ScheduleTemplateTimeEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "ScheduleTemplateTimeEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits ScreeningAuthorizationEntity's mappings</summary>
		private void InitScreeningAuthorizationEntityMappings()
		{
			base.AddElementMapping( "ScreeningAuthorizationEntity", "Falcon", @"dbo", "TblScreeningAuthorization", 5 );
			base.AddElementFieldMapping( "ScreeningAuthorizationEntity", "EventCustomerId", "EventCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ScreeningAuthorizationEntity", "Initials", "Initials", false, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ScreeningAuthorizationEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "ScreeningAuthorizationEntity", "Signature", "Signature", false, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "ScreeningAuthorizationEntity", "PhysicianOrgRoleUserId", "PhysicianOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
		}
		/// <summary>Inits ScriptsEntity's mappings</summary>
		private void InitScriptsEntityMappings()
		{
			base.AddElementMapping( "ScriptsEntity", "Falcon", @"dbo", "TblScripts", 9 );
			base.AddElementFieldMapping( "ScriptsEntity", "ScriptId", "ScriptID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ScriptsEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ScriptsEntity", "Description", "Description", false, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ScriptsEntity", "ScriptText", "ScriptText", true, (int)SqlDbType.VarChar, 8000, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "ScriptsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "ScriptsEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "ScriptsEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "ScriptsEntity", "IsDefault", "IsDefault", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "ScriptsEntity", "ScriptTypeId", "ScriptTypeID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
		}
		/// <summary>Inits ScriptTypeEntity's mappings</summary>
		private void InitScriptTypeEntityMappings()
		{
			base.AddElementMapping( "ScriptTypeEntity", "Falcon", @"dbo", "TblScriptType", 6 );
			base.AddElementFieldMapping( "ScriptTypeEntity", "ScriptTypeId", "ScriptTypeID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ScriptTypeEntity", "ScriptName", "ScriptName", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ScriptTypeEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ScriptTypeEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "ScriptTypeEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "ScriptTypeEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits SecurityQuestionEntity's mappings</summary>
		private void InitSecurityQuestionEntityMappings()
		{
			base.AddElementMapping( "SecurityQuestionEntity", "Falcon", @"dbo", "TblSecurityQuestion", 6 );
			base.AddElementFieldMapping( "SecurityQuestionEntity", "SecurityQuestionId", "SecurityQuestionID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "SecurityQuestionEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "SecurityQuestionEntity", "Description", "Description", false, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "SecurityQuestionEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "SecurityQuestionEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "SecurityQuestionEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits SeminarCampaignDetailsEntity's mappings</summary>
		private void InitSeminarCampaignDetailsEntityMappings()
		{
			base.AddElementMapping( "SeminarCampaignDetailsEntity", "Falcon", @"dbo", "TblSeminarCampaignDetails", 3 );
			base.AddElementFieldMapping( "SeminarCampaignDetailsEntity", "SeminarId", "SeminarID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "SeminarCampaignDetailsEntity", "CampaignId", "CampaignID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "SeminarCampaignDetailsEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
		}
		/// <summary>Inits SeminarsEntity's mappings</summary>
		private void InitSeminarsEntityMappings()
		{
			base.AddElementMapping( "SeminarsEntity", "Falcon", @"dbo", "TblSeminars", 17 );
			base.AddElementFieldMapping( "SeminarsEntity", "SeminarId", "SeminarID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "SeminarsEntity", "EventId", "EventID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "SeminarsEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "SeminarsEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "SeminarsEntity", "HostId", "HostID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "SeminarsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "SeminarsEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "SeminarsEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "SeminarsEntity", "SeminarDate", "SeminarDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "SeminarsEntity", "SeminarTimeFrom", "SeminarTimeFrom", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "SeminarsEntity", "SeminarTimeTo", "SeminarTimeTo", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 10 );
			base.AddElementFieldMapping( "SeminarsEntity", "AddressId", "AddressID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 11 );
			base.AddElementFieldMapping( "SeminarsEntity", "AttendeesCount", "AttendeesCount", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "SeminarsEntity", "Type", "Type", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "SeminarsEntity", "Organizationname", "Organizationname", true, (int)SqlDbType.NChar, 100, 0, 0, false, "", null, typeof(System.String), 14 );
			base.AddElementFieldMapping( "SeminarsEntity", "HscprospectNotificationSend", "HSCProspectNotificationSend", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 15 );
			base.AddElementFieldMapping( "SeminarsEntity", "OrgRoleUserId", "OrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 16 );
		}
		/// <summary>Inits ShippingDetailEntity's mappings</summary>
		private void InitShippingDetailEntityMappings()
		{
			base.AddElementMapping( "ShippingDetailEntity", "Falcon", @"dbo", "TblShippingDetail", 12 );
			base.AddElementFieldMapping( "ShippingDetailEntity", "ShippingDetailId", "ShippingDetailID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ShippingDetailEntity", "ShippingOptionId", "ShippingOptionID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ShippingDetailEntity", "ShippingAddressId", "ShippingAddressID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "ShippingDetailEntity", "ShipmentDate", "ShipmentDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "ShippingDetailEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "ShippingDetailEntity", "OrganizationRoleUserCreatorId", "OrganizationRoleUserCreatorID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "ShippingDetailEntity", "Status", "Status", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 6 );
			base.AddElementFieldMapping( "ShippingDetailEntity", "ActualPrice", "ActualPrice", false, (int)SqlDbType.Money, 0, 4, 19, false, "", null, typeof(System.Decimal), 7 );
			base.AddElementFieldMapping( "ShippingDetailEntity", "IsExclusivelyRequested", "IsExclusivelyRequested", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
			base.AddElementFieldMapping( "ShippingDetailEntity", "ShippedByOrgRoleUserId", "ShippedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "ShippingDetailEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
			base.AddElementFieldMapping( "ShippingDetailEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
		}
		/// <summary>Inits ShippingDetailOrderDetailEntity's mappings</summary>
		private void InitShippingDetailOrderDetailEntityMappings()
		{
			base.AddElementMapping( "ShippingDetailOrderDetailEntity", "Falcon", @"dbo", "TblShippingDetailOrderDetail", 3 );
			base.AddElementFieldMapping( "ShippingDetailOrderDetailEntity", "OrderDetailId", "OrderDetailID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ShippingDetailOrderDetailEntity", "ShippingDetailId", "ShippingDetailID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ShippingDetailOrderDetailEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
		}
		/// <summary>Inits ShippingOptionEntity's mappings</summary>
		private void InitShippingOptionEntityMappings()
		{
			base.AddElementMapping( "ShippingOptionEntity", "Falcon", @"dbo", "TblShippingOption", 13 );
			base.AddElementFieldMapping( "ShippingOptionEntity", "ShippingOptionId", "ShippingOptionID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ShippingOptionEntity", "Type", "Type", false, (int)SqlDbType.TinyInt, 0, 0, 3, false, "", null, typeof(System.Byte), 1 );
			base.AddElementFieldMapping( "ShippingOptionEntity", "CarrierId", "CarrierID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "ShippingOptionEntity", "Description", "Description", false, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "ShippingOptionEntity", "Price", "Price", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 4 );
			base.AddElementFieldMapping( "ShippingOptionEntity", "CostToCompany", "CostToCompany", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 5 );
			base.AddElementFieldMapping( "ShippingOptionEntity", "Disclaimer", "Disclaimer", false, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "ShippingOptionEntity", "ShippableToPobox", "ShippableToPOBox", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "ShippingOptionEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
			base.AddElementFieldMapping( "ShippingOptionEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "ShippingOptionEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 10 );
			base.AddElementFieldMapping( "ShippingOptionEntity", "Name", "Name", true, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 11 );
			base.AddElementFieldMapping( "ShippingOptionEntity", "ForOrderDisplayHtmlString", "ForOrderDisplayHtmlString", true, (int)SqlDbType.NText, 1073741823, 0, 0, false, "", null, typeof(System.String), 12 );
		}
		/// <summary>Inits ShippingOptionOrderItemEntity's mappings</summary>
		private void InitShippingOptionOrderItemEntityMappings()
		{
			base.AddElementMapping( "ShippingOptionOrderItemEntity", "Falcon", @"dbo", "TblShippingOptionOrderItem", 2 );
			base.AddElementFieldMapping( "ShippingOptionOrderItemEntity", "OrderItemId", "OrderItemID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ShippingOptionOrderItemEntity", "ShippingOptionId", "ShippingOptionID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits ShippingOptionSourceCodeDiscountEntity's mappings</summary>
		private void InitShippingOptionSourceCodeDiscountEntityMappings()
		{
			base.AddElementMapping( "ShippingOptionSourceCodeDiscountEntity", "Falcon", @"dbo", "TblShippingOptionSourceCodeDiscount", 4 );
			base.AddElementFieldMapping( "ShippingOptionSourceCodeDiscountEntity", "ShippingOptionId", "ShippingOptionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ShippingOptionSourceCodeDiscountEntity", "SourceCodeId", "SourceCodeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ShippingOptionSourceCodeDiscountEntity", "Discount", "Discount", false, (int)SqlDbType.Decimal, 0, 2, 10, false, "", null, typeof(System.Decimal), 2 );
			base.AddElementFieldMapping( "ShippingOptionSourceCodeDiscountEntity", "IsPercentage", "IsPercentage", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
		}
		/// <summary>Inits SmsReceivedEntity's mappings</summary>
		private void InitSmsReceivedEntityMappings()
		{
			base.AddElementMapping( "SmsReceivedEntity", "Falcon", @"dbo", "TblSmsReceived", 4 );
			base.AddElementFieldMapping( "SmsReceivedEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "SmsReceivedEntity", "PhoneNumber", "PhoneNumber", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "SmsReceivedEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "SmsReceivedEntity", "Message", "Message", true, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 3 );
		}
		/// <summary>Inits SourceCodeChangeLogEntity's mappings</summary>
		private void InitSourceCodeChangeLogEntityMappings()
		{
			base.AddElementMapping( "SourceCodeChangeLogEntity", "Falcon", @"dbo", "tblSourceCodeChangeLog", 7 );
			base.AddElementFieldMapping( "SourceCodeChangeLogEntity", "SourceCodeChangeId", "SourceCodeChangeId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "SourceCodeChangeLogEntity", "OldSourceCodeId", "OldSourceCodeId", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "SourceCodeChangeLogEntity", "NewSourceCodeId", "NewSourceCodeId", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "SourceCodeChangeLogEntity", "IsPriceChange", "IsPriceChange", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "SourceCodeChangeLogEntity", "CreatedDate", "CreatedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "SourceCodeChangeLogEntity", "EventCustomerId", "EventCustomerId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "SourceCodeChangeLogEntity", "Shellid", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
		}
		/// <summary>Inits SourceCodeOrderDetailEntity's mappings</summary>
		private void InitSourceCodeOrderDetailEntityMappings()
		{
			base.AddElementMapping( "SourceCodeOrderDetailEntity", "Falcon", @"dbo", "TblSourceCodeOrderDetail", 6 );
			base.AddElementFieldMapping( "SourceCodeOrderDetailEntity", "OrderDetailId", "OrderDetailID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "SourceCodeOrderDetailEntity", "SourceCodeId", "SourceCodeID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "SourceCodeOrderDetailEntity", "Amount", "Amount", false, (int)SqlDbType.Money, 0, 4, 19, false, "", null, typeof(System.Decimal), 2 );
			base.AddElementFieldMapping( "SourceCodeOrderDetailEntity", "OrganizationRoleUserCreatorId", "OrganizationRoleUserCreatorID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "SourceCodeOrderDetailEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "SourceCodeOrderDetailEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits StaffEventRoleEntity's mappings</summary>
		private void InitStaffEventRoleEntityMappings()
		{
			base.AddElementMapping( "StaffEventRoleEntity", "Falcon", @"dbo", "TblStaffEventRole", 8 );
			base.AddElementFieldMapping( "StaffEventRoleEntity", "StaffEventRoleId", "StaffEventRoleID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "StaffEventRoleEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "StaffEventRoleEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "StaffEventRoleEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "StaffEventRoleEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "StaffEventRoleEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "StaffEventRoleEntity", "UpdatedByOrgRoleUserId", "UpdatedByOrgRoleUserID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "StaffEventRoleEntity", "UpdatedOn", "UpdatedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
		}
		/// <summary>Inits StaffEventRoleTestEntity's mappings</summary>
		private void InitStaffEventRoleTestEntityMappings()
		{
			base.AddElementMapping( "StaffEventRoleTestEntity", "Falcon", @"dbo", "TblStaffEventRoleTest", 2 );
			base.AddElementFieldMapping( "StaffEventRoleTestEntity", "StaffEventRoleId", "StaffEventRoleID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "StaffEventRoleTestEntity", "TestId", "TestID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits StaffEventScheduleUploadEntity's mappings</summary>
		private void InitStaffEventScheduleUploadEntityMappings()
		{
			base.AddElementMapping( "StaffEventScheduleUploadEntity", "Falcon", @"dbo", "TblStaffEventScheduleUpload", 10 );
			base.AddElementFieldMapping( "StaffEventScheduleUploadEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "StaffEventScheduleUploadEntity", "FileId", "FileId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "StaffEventScheduleUploadEntity", "StatusId", "StatusId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "StaffEventScheduleUploadEntity", "SuccessUploadCount", "SuccessUploadCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "StaffEventScheduleUploadEntity", "FailedUploadCount", "FailedUploadCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "StaffEventScheduleUploadEntity", "UploadTime", "UploadTime", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "StaffEventScheduleUploadEntity", "ParseStartTime", "ParseStartTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "StaffEventScheduleUploadEntity", "ParseEndTime", "ParseEndTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "StaffEventScheduleUploadEntity", "UploadedByOrgRoleUserId", "UploadedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "StaffEventScheduleUploadEntity", "LogFileId", "LogFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
		}
		/// <summary>Inits StaffEventScheduleUploadLogEntity's mappings</summary>
		private void InitStaffEventScheduleUploadLogEntityMappings()
		{
			base.AddElementMapping( "StaffEventScheduleUploadLogEntity", "Falcon", @"dbo", "TblStaffEventScheduleUploadLog", 9 );
			base.AddElementFieldMapping( "StaffEventScheduleUploadLogEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "StaffEventScheduleUploadLogEntity", "UploadId", "UploadId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "StaffEventScheduleUploadLogEntity", "StaffName", "StaffName", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "StaffEventScheduleUploadLogEntity", "Pod", "Pod", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "StaffEventScheduleUploadLogEntity", "Role", "Role", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "StaffEventScheduleUploadLogEntity", "EventDate", "EventDate", true, (int)SqlDbType.VarChar, 20, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "StaffEventScheduleUploadLogEntity", "IsSuccessful", "IsSuccessful", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "StaffEventScheduleUploadLogEntity", "ErrorMessage", "ErrorMessage", true, (int)SqlDbType.NVarChar, 2048, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "StaffEventScheduleUploadLogEntity", "EmployeeId", "EmployeeId", true, (int)SqlDbType.VarChar, 64, 0, 0, false, "", null, typeof(System.String), 8 );
		}
		/// <summary>Inits StandardFindingEntity's mappings</summary>
		private void InitStandardFindingEntityMappings()
		{
			base.AddElementMapping( "StandardFindingEntity", "Falcon", @"dbo", "TblStandardFinding", 14 );
			base.AddElementFieldMapping( "StandardFindingEntity", "StandardFindingId", "StandardFindingId", false, (int)SqlDbType.Int, 0, 0, 10, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0 );
			base.AddElementFieldMapping( "StandardFindingEntity", "Label", "Label", false, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "StandardFindingEntity", "Description", "Description", false, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "StandardFindingEntity", "MinValue", "MinValue", true, (int)SqlDbType.Decimal, 0, 2, 10, false, "", null, typeof(System.Decimal), 3 );
			base.AddElementFieldMapping( "StandardFindingEntity", "MaxValue", "MaxValue", true, (int)SqlDbType.Decimal, 0, 2, 10, false, "", null, typeof(System.Decimal), 4 );
			base.AddElementFieldMapping( "StandardFindingEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "StandardFindingEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "StandardFindingEntity", "UpdatedByOrgRoleUserId", "UpdatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "StandardFindingEntity", "UpdatedOn", "UpdatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "StandardFindingEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 9 );
			base.AddElementFieldMapping( "StandardFindingEntity", "ResultInterpretation", "Interpretation", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
			base.AddElementFieldMapping( "StandardFindingEntity", "LongDescription", "LongDescription", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 11 );
			base.AddElementFieldMapping( "StandardFindingEntity", "WorstCaseOrder", "WorstCaseOrder", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 12 );
			base.AddElementFieldMapping( "StandardFindingEntity", "PathwayRecommendation", "PathwayRecommendation", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 13 );
		}
		/// <summary>Inits StandardFindingTestReadingEntity's mappings</summary>
		private void InitStandardFindingTestReadingEntityMappings()
		{
			base.AddElementMapping( "StandardFindingTestReadingEntity", "Falcon", @"dbo", "TblStandardFindingTestReading", 6 );
			base.AddElementFieldMapping( "StandardFindingTestReadingEntity", "StandardFindingTestReadingId", "StandardFindingTestReadingId", false, (int)SqlDbType.Int, 0, 0, 10, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0 );
			base.AddElementFieldMapping( "StandardFindingTestReadingEntity", "StandardFindingId", "StandardFindingId", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 1 );
			base.AddElementFieldMapping( "StandardFindingTestReadingEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "StandardFindingTestReadingEntity", "ReadingId", "ReadingId", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 3 );
			base.AddElementFieldMapping( "StandardFindingTestReadingEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "StandardFindingTestReadingEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
		}
		/// <summary>Inits StateEntity's mappings</summary>
		private void InitStateEntityMappings()
		{
			base.AddElementMapping( "StateEntity", "Falcon", @"dbo", "TblState", 8 );
			base.AddElementFieldMapping( "StateEntity", "StateId", "StateID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "StateEntity", "Name", "Name", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "StateEntity", "DateCreated", "DateCreated", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "StateEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "StateEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "StateEntity", "IsActive", "IsActive", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "StateEntity", "CountryId", "CountryID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "StateEntity", "StateCode", "StateCode", true, (int)SqlDbType.VarChar, 2, 0, 0, false, "", null, typeof(System.String), 7 );
		}
		/// <summary>Inits SurveyAnswerEntity's mappings</summary>
		private void InitSurveyAnswerEntityMappings()
		{
			base.AddElementMapping( "SurveyAnswerEntity", "Falcon", @"dbo", "TblSurveyAnswer", 9 );
			base.AddElementFieldMapping( "SurveyAnswerEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "SurveyAnswerEntity", "QuestionId", "QuestionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "SurveyAnswerEntity", "Answer", "Answer", false, (int)SqlDbType.NVarChar, 4000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "SurveyAnswerEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "SurveyAnswerEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "SurveyAnswerEntity", "Version", "Version", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 5 );
			base.AddElementFieldMapping( "SurveyAnswerEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "SurveyAnswerEntity", "ModifiedOn", "ModifiedOn", true, (int)SqlDbType.Date, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "SurveyAnswerEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
		}
		/// <summary>Inits SurveyQuestionEntity's mappings</summary>
		private void InitSurveyQuestionEntityMappings()
		{
			base.AddElementMapping( "SurveyQuestionEntity", "Falcon", @"dbo", "TblSurveyQuestion", 9 );
			base.AddElementFieldMapping( "SurveyQuestionEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "SurveyQuestionEntity", "Question", "Question", false, (int)SqlDbType.VarChar, 4000, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "SurveyQuestionEntity", "TypeId", "TypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "SurveyQuestionEntity", "ParentId", "ParentId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "SurveyQuestionEntity", "Gender", "Gender", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "SurveyQuestionEntity", "ControlValues", "ControlValues", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "SurveyQuestionEntity", "ControlValueDelimiter", "ControlValueDelimiter", true, (int)SqlDbType.VarChar, 5, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "SurveyQuestionEntity", "Index", "Index", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 7 );
			base.AddElementFieldMapping( "SurveyQuestionEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
		}
		/// <summary>Inits SurveyTemplateEntity's mappings</summary>
		private void InitSurveyTemplateEntityMappings()
		{
			base.AddElementMapping( "SurveyTemplateEntity", "Falcon", @"dbo", "TblSurveyTemplate", 9 );
			base.AddElementFieldMapping( "SurveyTemplateEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "SurveyTemplateEntity", "Name", "Name", true, (int)SqlDbType.NVarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "SurveyTemplateEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
			base.AddElementFieldMapping( "SurveyTemplateEntity", "IsPublished", "IsPublished", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "SurveyTemplateEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "SurveyTemplateEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "SurveyTemplateEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "SurveyTemplateEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "SurveyTemplateEntity", "IsDefault", "IsDefault", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
		}
		/// <summary>Inits SurveyTemplateQuestionEntity's mappings</summary>
		private void InitSurveyTemplateQuestionEntityMappings()
		{
			base.AddElementMapping( "SurveyTemplateQuestionEntity", "Falcon", @"dbo", "TblSurveyTemplateQuestion", 2 );
			base.AddElementFieldMapping( "SurveyTemplateQuestionEntity", "TemplateId", "TemplateId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "SurveyTemplateQuestionEntity", "QuestionId", "QuestionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits SuspectConditionEntity's mappings</summary>
		private void InitSuspectConditionEntityMappings()
		{
			base.AddElementMapping( "SuspectConditionEntity", "Falcon", @"dbo", "TblSuspectCondition", 21 );
			base.AddElementFieldMapping( "SuspectConditionEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "SuspectConditionEntity", "SuspectConditionUploadId", "SuspectConditionUploadId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "SuspectConditionEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "SuspectConditionEntity", "Gmpi", "GMPI", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "SuspectConditionEntity", "SubscriberId", "SubscriberID", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "SuspectConditionEntity", "FirstName", "FirstName", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "SuspectConditionEntity", "MiddleName", "MiddleName", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "SuspectConditionEntity", "LastName", "LastName", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "SuspectConditionEntity", "Dob", "DOB", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "SuspectConditionEntity", "Icdcode", "ICDCode", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "SuspectConditionEntity", "Icddesc", "ICDDesc", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "SuspectConditionEntity", "IcdcodeVersion", "ICDCodeVersion", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 11 );
			base.AddElementFieldMapping( "SuspectConditionEntity", "Hcc", "HCC", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "SuspectConditionEntity", "Hccdesc", "HCCDesc", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "SuspectConditionEntity", "CaptureAction", "CaptureAction", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 14 );
			base.AddElementFieldMapping( "SuspectConditionEntity", "CaptureLocation", "CaptureLocation", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 15 );
			base.AddElementFieldMapping( "SuspectConditionEntity", "CaptureReasonDescription", "CaptureReasonDescription", true, (int)SqlDbType.NVarChar, 4000, 0, 0, false, "", null, typeof(System.String), 16 );
			base.AddElementFieldMapping( "SuspectConditionEntity", "CaptureReferenceDate", "CaptureReferenceDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 17 );
			base.AddElementFieldMapping( "SuspectConditionEntity", "SectionName", "SectionName", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 18 );
			base.AddElementFieldMapping( "SuspectConditionEntity", "IsSynced", "IsSynced", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 19 );
			base.AddElementFieldMapping( "SuspectConditionEntity", "MemberId", "MemberId", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 20 );
		}
		/// <summary>Inits SuspectConditionUploadEntity's mappings</summary>
		private void InitSuspectConditionUploadEntityMappings()
		{
			base.AddElementMapping( "SuspectConditionUploadEntity", "Falcon", @"dbo", "TblSuspectConditionUpload", 11 );
			base.AddElementFieldMapping( "SuspectConditionUploadEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "SuspectConditionUploadEntity", "FileId", "FileId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "SuspectConditionUploadEntity", "StatusId", "StatusId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "SuspectConditionUploadEntity", "SuccessfullUploadCount", "SuccessfullUploadCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "SuspectConditionUploadEntity", "FailedUploadCount", "FailedUploadCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "SuspectConditionUploadEntity", "UploadTime", "UploadTime", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "SuspectConditionUploadEntity", "UploadedBy", "UploadedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "SuspectConditionUploadEntity", "ParseStartTime", "ParseStartTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "SuspectConditionUploadEntity", "ParseEndTime", "ParseEndTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "SuspectConditionUploadEntity", "LogFileId", "LogFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "SuspectConditionUploadEntity", "TotalCount", "TotalCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
		}
		/// <summary>Inits SuspectConditionUploadLogEntity's mappings</summary>
		private void InitSuspectConditionUploadLogEntityMappings()
		{
			base.AddElementMapping( "SuspectConditionUploadLogEntity", "Falcon", @"dbo", "TblSuspectConditionUploadLog", 19 );
			base.AddElementFieldMapping( "SuspectConditionUploadLogEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "SuspectConditionUploadLogEntity", "SuspectConditionUploadId", "SuspectConditionUploadId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "SuspectConditionUploadLogEntity", "Gmpi", "GMPI", true, (int)SqlDbType.VarChar, 25, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "SuspectConditionUploadLogEntity", "SubscriberId", "SubscriberID", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "SuspectConditionUploadLogEntity", "MemberName", "MemberName", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "SuspectConditionUploadLogEntity", "Dob", "DOB", true, (int)SqlDbType.VarChar, 25, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "SuspectConditionUploadLogEntity", "Icdcode", "ICDCode", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "SuspectConditionUploadLogEntity", "Icddesc", "ICDDesc", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "SuspectConditionUploadLogEntity", "IcdcodeVersion", "ICDCodeVersion", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "SuspectConditionUploadLogEntity", "Hcc", "HCC", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "SuspectConditionUploadLogEntity", "Hccdesc", "HCCDesc", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "SuspectConditionUploadLogEntity", "CaptureAction", "CaptureAction", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 11 );
			base.AddElementFieldMapping( "SuspectConditionUploadLogEntity", "CaptureLocation", "CaptureLocation", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "SuspectConditionUploadLogEntity", "CaptureReasonDescription", "CaptureReasonDescription", true, (int)SqlDbType.NVarChar, 4000, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "SuspectConditionUploadLogEntity", "CaptureReferenceDate", "CaptureReferenceDate", true, (int)SqlDbType.VarChar, 25, 0, 0, false, "", null, typeof(System.String), 14 );
			base.AddElementFieldMapping( "SuspectConditionUploadLogEntity", "SectionName", "SectionName", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 15 );
			base.AddElementFieldMapping( "SuspectConditionUploadLogEntity", "IsSuccessFull", "IsSuccessFull", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 16 );
			base.AddElementFieldMapping( "SuspectConditionUploadLogEntity", "ErrorMessage", "ErrorMessage", true, (int)SqlDbType.VarChar, 4000, 0, 0, false, "", null, typeof(System.String), 17 );
			base.AddElementFieldMapping( "SuspectConditionUploadLogEntity", "MemberId", "MemberId", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 18 );
		}
		/// <summary>Inits SystemGeneratedCallQueueAssignmentEntity's mappings</summary>
		private void InitSystemGeneratedCallQueueAssignmentEntityMappings()
		{
			base.AddElementMapping( "SystemGeneratedCallQueueAssignmentEntity", "Falcon", @"dbo", "TblSystemGeneratedCallQueueAssignment", 3 );
			base.AddElementFieldMapping( "SystemGeneratedCallQueueAssignmentEntity", "CallQueueCustomerId", "CallQueueCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "SystemGeneratedCallQueueAssignmentEntity", "CallQueueId", "CallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "SystemGeneratedCallQueueAssignmentEntity", "CriteriaId", "CriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
		}
		/// <summary>Inits SystemGeneratedCallQueueCriteriaEntity's mappings</summary>
		private void InitSystemGeneratedCallQueueCriteriaEntityMappings()
		{
			base.AddElementMapping( "SystemGeneratedCallQueueCriteriaEntity", "Falcon", @"dbo", "TblSystemGeneratedCallQueueCriteria", 13 );
			base.AddElementFieldMapping( "SystemGeneratedCallQueueCriteriaEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "SystemGeneratedCallQueueCriteriaEntity", "CallQueueId", "CallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "SystemGeneratedCallQueueCriteriaEntity", "Amount", "Amount", true, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 2 );
			base.AddElementFieldMapping( "SystemGeneratedCallQueueCriteriaEntity", "Percentage", "Percentage", true, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 3 );
			base.AddElementFieldMapping( "SystemGeneratedCallQueueCriteriaEntity", "NoOfDays", "NoOfDays", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 4 );
			base.AddElementFieldMapping( "SystemGeneratedCallQueueCriteriaEntity", "IsDefault", "IsDefault", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "SystemGeneratedCallQueueCriteriaEntity", "IsQueueGenerated", "IsQueueGenerated", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "SystemGeneratedCallQueueCriteriaEntity", "LastQueueGeneratedDate", "LastQueueGeneratedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "SystemGeneratedCallQueueCriteriaEntity", "AssignedToOrgRoleUserId", "AssignedToOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "SystemGeneratedCallQueueCriteriaEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "SystemGeneratedCallQueueCriteriaEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 10 );
			base.AddElementFieldMapping( "SystemGeneratedCallQueueCriteriaEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 11 );
			base.AddElementFieldMapping( "SystemGeneratedCallQueueCriteriaEntity", "ModifiedByOrgRoleUserId", "ModifiedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
		}
		/// <summary>Inits SystemUserInfoEntity's mappings</summary>
		private void InitSystemUserInfoEntityMappings()
		{
			base.AddElementMapping( "SystemUserInfoEntity", "Falcon", @"dbo", "TblSystemUserInfo", 2 );
			base.AddElementFieldMapping( "SystemUserInfoEntity", "UserId", "UserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "SystemUserInfoEntity", "EmployeeId", "EmployeeId", false, (int)SqlDbType.VarChar, 64, 0, 0, false, "", null, typeof(System.String), 1 );
		}
		/// <summary>Inits TagEntity's mappings</summary>
		private void InitTagEntityMappings()
		{
			base.AddElementMapping( "TagEntity", "Falcon", @"dbo", "TblTag", 11 );
			base.AddElementFieldMapping( "TagEntity", "TagId", "TagId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "TagEntity", "Source", "Source", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "TagEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "TagEntity", "Alias", "Alias", false, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "TagEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "TagEntity", "IsSystemDefined", "IsSystemDefined", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "TagEntity", "IsHealthPlanTag", "IsHealthPlanTag", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "TagEntity", "ForAppointmentConfirmation", "ForAppointmentConfirmation", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "TagEntity", "CallStatus", "CallStatus", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "TagEntity", "ForWarmTransfer", "ForWarmTransfer", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 9 );
			base.AddElementFieldMapping( "TagEntity", "ForPreAssessment", "ForPreAssessment", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 10 );
		}
		/// <summary>Inits TaskEntity's mappings</summary>
		private void InitTaskEntityMappings()
		{
			base.AddElementMapping( "TaskEntity", "Falcon", @"dbo", "TblTask", 9 );
			base.AddElementFieldMapping( "TaskEntity", "TaskId", "TaskId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "TaskEntity", "Task", "Task", false, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "TaskEntity", "Details", "Details", false, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "TaskEntity", "StartDate", "StartDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "TaskEntity", "StartTime", "StartTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "TaskEntity", "DueDate", "DueDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "TaskEntity", "DueTime", "DueTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "TaskEntity", "TaskPriorityId", "TaskPriorityId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "TaskEntity", "TaskStatusId", "TaskStatusId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
		}
		/// <summary>Inits TaskDetailsEntity's mappings</summary>
		private void InitTaskDetailsEntityMappings()
		{
			base.AddElementMapping( "TaskDetailsEntity", "Falcon", @"dbo", "TblTaskDetails", 16 );
			base.AddElementFieldMapping( "TaskDetailsEntity", "TaskId", "TaskID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "TaskDetailsEntity", "Subject", "Subject", false, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "TaskDetailsEntity", "Notes", "Notes", true, (int)SqlDbType.VarChar, 5000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "TaskDetailsEntity", "StartDate", "StartDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "TaskDetailsEntity", "StartTime", "StartTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "TaskDetailsEntity", "DueDate", "DueDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "TaskDetailsEntity", "DueTime", "DueTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "TaskDetailsEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "TaskDetailsEntity", "TaskPriorityId", "TaskPriorityID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "TaskDetailsEntity", "TaskStatusId", "TaskStatusID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "TaskDetailsEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 10 );
			base.AddElementFieldMapping( "TaskDetailsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "TaskDetailsEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 12 );
			base.AddElementFieldMapping( "TaskDetailsEntity", "AssignedToOrgRoleUserId", "AssignedToOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 13 );
			base.AddElementFieldMapping( "TaskDetailsEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 14 );
			base.AddElementFieldMapping( "TaskDetailsEntity", "ModifiedByOrgRoleUserId", "ModifiedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 15 );
		}
		/// <summary>Inits TaskPriorityTypesEntity's mappings</summary>
		private void InitTaskPriorityTypesEntityMappings()
		{
			base.AddElementMapping( "TaskPriorityTypesEntity", "Falcon", @"dbo", "TblTaskPriorityTypes", 6 );
			base.AddElementFieldMapping( "TaskPriorityTypesEntity", "TaskPriorityId", "TaskPriorityID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "TaskPriorityTypesEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "TaskPriorityTypesEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "TaskPriorityTypesEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "TaskPriorityTypesEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "TaskPriorityTypesEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits TaskStatusTypesEntity's mappings</summary>
		private void InitTaskStatusTypesEntityMappings()
		{
			base.AddElementMapping( "TaskStatusTypesEntity", "Falcon", @"dbo", "TblTaskStatusTypes", 6 );
			base.AddElementFieldMapping( "TaskStatusTypesEntity", "TaskStatusId", "TaskStatusID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "TaskStatusTypesEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "TaskStatusTypesEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "TaskStatusTypesEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "TaskStatusTypesEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "TaskStatusTypesEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits TechnicianProfileEntity's mappings</summary>
		private void InitTechnicianProfileEntityMappings()
		{
			base.AddElementMapping( "TechnicianProfileEntity", "Falcon", @"dbo", "TblTechnicianProfile", 5 );
			base.AddElementFieldMapping( "TechnicianProfileEntity", "OrganizationRoleUserId", "OrganizationRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "TechnicianProfileEntity", "CanCompletePreAudit", "CanCompletePreAudit", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 1 );
			base.AddElementFieldMapping( "TechnicianProfileEntity", "IsTeamLead", "IsTeamLead", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
			base.AddElementFieldMapping( "TechnicianProfileEntity", "Pin", "Pin", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "TechnicianProfileEntity", "PinChangeDate", "PinChangeDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
		}
		/// <summary>Inits TempCartEntity's mappings</summary>
		private void InitTempCartEntityMappings()
		{
			base.AddElementMapping( "TempCartEntity", "Falcon", @"dbo", "TblTempCart", 39 );
			base.AddElementFieldMapping( "TempCartEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "TempCartEntity", "Guid", "Guid", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "TempCartEntity", "ZipCode", "ZipCode", false, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "TempCartEntity", "EventId", "EventId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "TempCartEntity", "CustomerId", "CustomerId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "TempCartEntity", "ProspectCustomerId", "ProspectCustomerId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "TempCartEntity", "AppointmentId", "AppointmentId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "TempCartEntity", "EventPackageId", "EventPackageId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "TempCartEntity", "SourceCodeId", "SourceCodeId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "TempCartEntity", "TestId", "TestId", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "TempCartEntity", "ProductId", "ProductId", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "TempCartEntity", "Shippingid", "Shippingid", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 11 );
			base.AddElementFieldMapping( "TempCartEntity", "PaymentMode", "PaymentMode", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "TempCartEntity", "PaymentAmount", "PaymentAmount", true, (int)SqlDbType.Decimal, 0, 2, 10, false, "", null, typeof(System.Decimal), 13 );
			base.AddElementFieldMapping( "TempCartEntity", "IsPaymentSuccessful", "IsPaymentSuccessful", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 14 );
			base.AddElementFieldMapping( "TempCartEntity", "IsHafFilled", "IsHafFilled", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 15 );
			base.AddElementFieldMapping( "TempCartEntity", "EntryPage", "EntryPage", false, (int)SqlDbType.VarChar, 2000, 0, 0, false, "", null, typeof(System.String), 16 );
			base.AddElementFieldMapping( "TempCartEntity", "ExitPage", "ExitPage", false, (int)SqlDbType.VarChar, 2000, 0, 0, false, "", null, typeof(System.String), 17 );
			base.AddElementFieldMapping( "TempCartEntity", "Ipaddress", "IPAddress", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 18 );
			base.AddElementFieldMapping( "TempCartEntity", "ScreenResolution", "ScreenResolution", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 19 );
			base.AddElementFieldMapping( "TempCartEntity", "Browser", "Browser", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 20 );
			base.AddElementFieldMapping( "TempCartEntity", "IsCompleted", "IsCompleted", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 21 );
			base.AddElementFieldMapping( "TempCartEntity", "IsExistingCustomer", "IsExistingCustomer", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 22 );
			base.AddElementFieldMapping( "TempCartEntity", "LoginAtempt", "LoginAttempt", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 23 );
			base.AddElementFieldMapping( "TempCartEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 24 );
			base.AddElementFieldMapping( "TempCartEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 25 );
			base.AddElementFieldMapping( "TempCartEntity", "ShippingAddressId", "ShippingAddressId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 26 );
			base.AddElementFieldMapping( "TempCartEntity", "InvitationCode", "InvitationCode", true, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 27 );
			base.AddElementFieldMapping( "TempCartEntity", "CorpCode", "CorpCode", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 28 );
			base.AddElementFieldMapping( "TempCartEntity", "Radius", "Radius", true, (int)SqlDbType.Decimal, 0, 2, 10, false, "", null, typeof(System.Decimal), 29 );
			base.AddElementFieldMapping( "TempCartEntity", "IsUsedAppointmentSlotExpiryExtension", "IsUsedAppointmentSlotExpiryExtension", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 30 );
			base.AddElementFieldMapping( "TempCartEntity", "MarketingSource", "MarketingSource", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 31 );
			base.AddElementFieldMapping( "TempCartEntity", "InChainAppointmentSlots", "InChainAppointmentSlots", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 32 );
			base.AddElementFieldMapping( "TempCartEntity", "PreliminarySelectedTime", "PreliminarySelectedTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 33 );
			base.AddElementFieldMapping( "TempCartEntity", "Gender", "Gender", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 34 );
			base.AddElementFieldMapping( "TempCartEntity", "Dob", "Dob", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 35 );
			base.AddElementFieldMapping( "TempCartEntity", "Version", "Version", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 36 );
			base.AddElementFieldMapping( "TempCartEntity", "EligibilityId", "EligibilityId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 37 );
			base.AddElementFieldMapping( "TempCartEntity", "ChargeCardId", "ChargeCardId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 38 );
		}
		/// <summary>Inits TemplateEntity's mappings</summary>
		private void InitTemplateEntityMappings()
		{
			base.AddElementMapping( "TemplateEntity", "Falcon", @"dbo", "TblTemplate", 2 );
			base.AddElementFieldMapping( "TemplateEntity", "TemplateId", "TemplateId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "TemplateEntity", "TemplateText", "TemplateText", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 1 );
		}
		/// <summary>Inits TemplateMacroEntity's mappings</summary>
		private void InitTemplateMacroEntityMappings()
		{
			base.AddElementMapping( "TemplateMacroEntity", "Falcon", @"dbo", "TblTemplateMacro", 3 );
			base.AddElementFieldMapping( "TemplateMacroEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "TemplateMacroEntity", "IdentifierName", "IdentifierName", false, (int)SqlDbType.VarChar, 200, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "TemplateMacroEntity", "CodeString", "CodeString", false, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 2 );
		}
		/// <summary>Inits TemplateTagEntity's mappings</summary>
		private void InitTemplateTagEntityMappings()
		{
			base.AddElementMapping( "TemplateTagEntity", "Falcon", @"dbo", "TblTemplateTag", 3 );
			base.AddElementFieldMapping( "TemplateTagEntity", "TemplateTagId", "TemplateTagId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "TemplateTagEntity", "TemplateTagName", "TemplateTagName", false, (int)SqlDbType.NVarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "TemplateTagEntity", "TemplateTagFormula", "TemplateTagFormula", false, (int)SqlDbType.NVarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 2 );
		}
		/// <summary>Inits TerritoryEntity's mappings</summary>
		private void InitTerritoryEntityMappings()
		{
			base.AddElementMapping( "TerritoryEntity", "Falcon", @"dbo", "TblTerritory", 9 );
			base.AddElementFieldMapping( "TerritoryEntity", "TerritoryId", "TerritoryID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "TerritoryEntity", "Name", "Name", false, (int)SqlDbType.NVarChar, 100, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "TerritoryEntity", "Description", "Description", true, (int)SqlDbType.NVarChar, 1000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "TerritoryEntity", "Type", "Type", false, (int)SqlDbType.TinyInt, 0, 0, 3, false, "", null, typeof(System.Byte), 3 );
			base.AddElementFieldMapping( "TerritoryEntity", "ParentTerritoryId", "ParentTerritoryID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "TerritoryEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "TerritoryEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "TerritoryEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "TerritoryEntity", "CreatedBy", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
		}
		/// <summary>Inits TerritoryPackageEntity's mappings</summary>
		private void InitTerritoryPackageEntityMappings()
		{
			base.AddElementMapping( "TerritoryPackageEntity", "Falcon", @"dbo", "TblTerritoryPackage", 2 );
			base.AddElementFieldMapping( "TerritoryPackageEntity", "TerritoryId", "TerritoryID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "TerritoryPackageEntity", "PackageId", "PackageID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits TerritoryZipEntity's mappings</summary>
		private void InitTerritoryZipEntityMappings()
		{
			base.AddElementMapping( "TerritoryZipEntity", "Falcon", @"dbo", "TblTerritoryZip", 2 );
			base.AddElementFieldMapping( "TerritoryZipEntity", "TerritoryId", "TerritoryID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "TerritoryZipEntity", "ZipId", "ZipID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits TestEntity's mappings</summary>
		private void InitTestEntityMappings()
		{
			base.AddElementMapping( "TestEntity", "Falcon", @"dbo", "TblTest", 35 );
			base.AddElementFieldMapping( "TestEntity", "TestId", "TestID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "TestEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "TestEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "TestEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "TestEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "TestEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "TestEntity", "Alias", "Alias", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "TestEntity", "Version", "Version", false, (int)SqlDbType.SmallInt, 0, 0, 5, false, "", null, typeof(System.Int16), 7 );
			base.AddElementFieldMapping( "TestEntity", "RelativeOrder", "RelativeOrder", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 8 );
			base.AddElementFieldMapping( "TestEntity", "Cptcode", "CPTCode", true, (int)SqlDbType.VarChar, 250, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "TestEntity", "IsRecordable", "IsRecordable", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 10 );
			base.AddElementFieldMapping( "TestEntity", "IsTestReviewableByPhysician", "IsTestReviewableByPhysician", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 11 );
			base.AddElementFieldMapping( "TestEntity", "ShowInCustomerPdf", "ShowInCustomerPDF", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 12 );
			base.AddElementFieldMapping( "TestEntity", "Price", "Price", false, (int)SqlDbType.Decimal, 0, 2, 10, false, "", null, typeof(System.Decimal), 13 );
			base.AddElementFieldMapping( "TestEntity", "DefaultPackagePrice", "DefaultPackagePrice", false, (int)SqlDbType.Decimal, 0, 2, 10, false, "", null, typeof(System.Decimal), 14 );
			base.AddElementFieldMapping( "TestEntity", "RefundPrice", "RefundPrice", false, (int)SqlDbType.Decimal, 0, 2, 10, false, "", null, typeof(System.Decimal), 15 );
			base.AddElementFieldMapping( "TestEntity", "DefaultPackageRefundPrice", "DefaultPackageRefundPrice", false, (int)SqlDbType.Decimal, 0, 2, 10, false, "", null, typeof(System.Decimal), 16 );
			base.AddElementFieldMapping( "TestEntity", "MinAge", "MinAge", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 17 );
			base.AddElementFieldMapping( "TestEntity", "MaxAge", "MaxAge", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 18 );
			base.AddElementFieldMapping( "TestEntity", "ShowInAlaCarte", "ShowInAlaCarte", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 19 );
			base.AddElementFieldMapping( "TestEntity", "DiagnosisCode", "DiagnosisCode", true, (int)SqlDbType.VarChar, 250, 0, 0, false, "", null, typeof(System.String), 20 );
			base.AddElementFieldMapping( "TestEntity", "ScreeningTime", "ScreeningTime", true, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 21 );
			base.AddElementFieldMapping( "TestEntity", "HafTemplateId", "HAFTemplateId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 22 );
			base.AddElementFieldMapping( "TestEntity", "IsSelectedByDefaultForEvent", "IsSelectedByDefaultForEvent", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 23 );
			base.AddElementFieldMapping( "TestEntity", "Gender", "Gender", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 24 );
			base.AddElementFieldMapping( "TestEntity", "GroupId", "GroupId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 25 );
			base.AddElementFieldMapping( "TestEntity", "ReimbursementRate", "ReimbursementRate", false, (int)SqlDbType.Decimal, 0, 0, 10, false, "", null, typeof(System.Decimal), 26 );
			base.AddElementFieldMapping( "TestEntity", "WithPackagePrice", "WithPackagePrice", false, (int)SqlDbType.Decimal, 0, 2, 10, false, "", null, typeof(System.Decimal), 27 );
			base.AddElementFieldMapping( "TestEntity", "IsDefaultSelectionForPackage", "IsDefaultSelectionForPackage", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 28 );
			base.AddElementFieldMapping( "TestEntity", "IsDefaultSelectionForOrder", "IsDefaultSelectionForOrder", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 29 );
			base.AddElementFieldMapping( "TestEntity", "MediaUrl", "MediaUrl", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 30 );
			base.AddElementFieldMapping( "TestEntity", "IsBillableToHealthPlan", "IsBillableToHealthPlan", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 31 );
			base.AddElementFieldMapping( "TestEntity", "PreQualificationQuestionTemplateId", "PreQualificationQuestionTemplateId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 32 );
			base.AddElementFieldMapping( "TestEntity", "ResultEntryTypeId", "ResultEntryTypeId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 33 );
			base.AddElementFieldMapping( "TestEntity", "ChatStartDate", "ChatStartDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 34 );
		}
		/// <summary>Inits TestAvailabilityToRolesEntity's mappings</summary>
		private void InitTestAvailabilityToRolesEntityMappings()
		{
			base.AddElementMapping( "TestAvailabilityToRolesEntity", "Falcon", @"dbo", "TblTestAvailabilityToRoles", 2 );
			base.AddElementFieldMapping( "TestAvailabilityToRolesEntity", "TestId", "TestID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "TestAvailabilityToRolesEntity", "RoleId", "RoleID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits TestDependencyRuleEntity's mappings</summary>
		private void InitTestDependencyRuleEntityMappings()
		{
			base.AddElementMapping( "TestDependencyRuleEntity", "Falcon", @"dbo", "TblTestDependencyRule", 2 );
			base.AddElementFieldMapping( "TestDependencyRuleEntity", "DependantTestId", "DependantTestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "TestDependencyRuleEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits TestHcpcsCodeEntity's mappings</summary>
		private void InitTestHcpcsCodeEntityMappings()
		{
			base.AddElementMapping( "TestHcpcsCodeEntity", "Falcon", @"dbo", "TblTestHcpcsCode", 9 );
			base.AddElementFieldMapping( "TestHcpcsCodeEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "TestHcpcsCodeEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "TestHcpcsCodeEntity", "HcpcsCodeId", "HcpcsCodeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "TestHcpcsCodeEntity", "IsRetired", "IsRetired", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "TestHcpcsCodeEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "TestHcpcsCodeEntity", "CreatedDate", "CreatedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "TestHcpcsCodeEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "TestHcpcsCodeEntity", "ModifiedDate", "ModifiedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "TestHcpcsCodeEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
		}
		/// <summary>Inits TestimonialEntity's mappings</summary>
		private void InitTestimonialEntityMappings()
		{
			base.AddElementMapping( "TestimonialEntity", "Falcon", @"dbo", "TblTestimonial", 11 );
			base.AddElementFieldMapping( "TestimonialEntity", "TestimonialId", "TestimonialId", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "TestimonialEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "TestimonialEntity", "TestimonialText", "TestimonialText", true, (int)SqlDbType.NText, 1073741823, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "TestimonialEntity", "FileId", "FileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "TestimonialEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "TestimonialEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "TestimonialEntity", "IsAccepted", "IsAccepted", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "TestimonialEntity", "Rank", "Rank", true, (int)SqlDbType.SmallInt, 0, 0, 5, false, "", null, typeof(System.Int16), 7 );
			base.AddElementFieldMapping( "TestimonialEntity", "ReviewedBy", "ReviewedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "TestimonialEntity", "ReviewedOn", "ReviewedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "TestimonialEntity", "Comment", "Comment", true, (int)SqlDbType.NText, 1073741823, 0, 0, false, "", null, typeof(System.String), 10 );
		}
		/// <summary>Inits TestIncidentalFindingEntity's mappings</summary>
		private void InitTestIncidentalFindingEntityMappings()
		{
			base.AddElementMapping( "TestIncidentalFindingEntity", "Falcon", @"dbo", "TblTestIncidentalFinding", 3 );
			base.AddElementFieldMapping( "TestIncidentalFindingEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "TestIncidentalFindingEntity", "IncidentalFindingId", "IncidentalFindingId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "TestIncidentalFindingEntity", "Sequence", "Sequence", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 2 );
		}
		/// <summary>Inits TestMediaEntity's mappings</summary>
		private void InitTestMediaEntityMappings()
		{
			base.AddElementMapping( "TestMediaEntity", "Falcon", @"dbo", "TblTestMedia", 7 );
			base.AddElementFieldMapping( "TestMediaEntity", "MediaId", "MediaID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "TestMediaEntity", "CustomerEventScreeningTestId", "CustomerEventScreeningTestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "TestMediaEntity", "FileId", "FileId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "TestMediaEntity", "ThumbnailFileId", "ThumbnailFileId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "TestMediaEntity", "IsManual", "IsManual", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "TestMediaEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "TestMediaEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
		}
		/// <summary>Inits TestNotPerformedEntity's mappings</summary>
		private void InitTestNotPerformedEntityMappings()
		{
			base.AddElementMapping( "TestNotPerformedEntity", "Falcon", @"dbo", "TblTestNotPerformed", 9 );
			base.AddElementFieldMapping( "TestNotPerformedEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "TestNotPerformedEntity", "CustomerEventScreeningTestId", "CustomerEventScreeningTestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "TestNotPerformedEntity", "TestNotPerformedReasonId", "TestNotPerformedReasonId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "TestNotPerformedEntity", "Notes", "Notes", true, (int)SqlDbType.NVarChar, 2048, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "TestNotPerformedEntity", "IsManual", "IsManual", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "TestNotPerformedEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "TestNotPerformedEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "TestNotPerformedEntity", "UpdatedBy", "UpdatedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "TestNotPerformedEntity", "UpdatedOn", "UpdatedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
		}
		/// <summary>Inits TestNotPerformedReasonEntity's mappings</summary>
		private void InitTestNotPerformedReasonEntityMappings()
		{
			base.AddElementMapping( "TestNotPerformedReasonEntity", "Falcon", @"dbo", "TblTestNotPerformedReason", 5 );
			base.AddElementFieldMapping( "TestNotPerformedReasonEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "TestNotPerformedReasonEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "TestNotPerformedReasonEntity", "Alias", "Alias", false, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "TestNotPerformedReasonEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "TestNotPerformedReasonEntity", "CreatedOn", "CreatedOn", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
		}
		/// <summary>Inits TestOrderItemEntity's mappings</summary>
		private void InitTestOrderItemEntityMappings()
		{
			base.AddElementMapping( "TestOrderItemEntity", "Falcon", @"dbo", "TblPaymentOrderDetail", 2 );
			base.AddElementFieldMapping( "TestOrderItemEntity", "OrderItemId", "OrderDetailID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "TestOrderItemEntity", "TestId", "PaymentID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits TestPerformedExternallyEntity's mappings</summary>
		private void InitTestPerformedExternallyEntityMappings()
		{
			base.AddElementMapping( "TestPerformedExternallyEntity", "Falcon", @"dbo", "TblTestPerformedExternally", 8 );
			base.AddElementFieldMapping( "TestPerformedExternallyEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "TestPerformedExternallyEntity", "CustomerEventScreeningTestId", "CustomerEventScreeningTestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "TestPerformedExternallyEntity", "EntryCompleted", "EntryCompleted", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
			base.AddElementFieldMapping( "TestPerformedExternallyEntity", "ResultEntryTypeId", "ResultEntryTypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "TestPerformedExternallyEntity", "CreatedBy", "CreatedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "TestPerformedExternallyEntity", "CreatedDate", "CreatedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "TestPerformedExternallyEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "TestPerformedExternallyEntity", "ModifiedDate", "ModifiedDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
		}
		/// <summary>Inits TestReadingEntity's mappings</summary>
		private void InitTestReadingEntityMappings()
		{
			base.AddElementMapping( "TestReadingEntity", "Falcon", @"dbo", "TblTestReading", 5 );
			base.AddElementFieldMapping( "TestReadingEntity", "TestReadingId", "TestReadingId", false, (int)SqlDbType.Int, 0, 0, 10, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0 );
			base.AddElementFieldMapping( "TestReadingEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "TestReadingEntity", "ReadingId", "ReadingId", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 2 );
			base.AddElementFieldMapping( "TestReadingEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "TestReadingEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
		}
		/// <summary>Inits TestSourceCodeDiscountEntity's mappings</summary>
		private void InitTestSourceCodeDiscountEntityMappings()
		{
			base.AddElementMapping( "TestSourceCodeDiscountEntity", "Falcon", @"dbo", "TblTestSourceCodeDiscount", 4 );
			base.AddElementFieldMapping( "TestSourceCodeDiscountEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "TestSourceCodeDiscountEntity", "SourceCodeId", "SourceCodeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "TestSourceCodeDiscountEntity", "Discount", "Discount", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 2 );
			base.AddElementFieldMapping( "TestSourceCodeDiscountEntity", "IsPercentage", "IsPercentage", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
		}
		/// <summary>Inits TestUnableScreenReasonEntity's mappings</summary>
		private void InitTestUnableScreenReasonEntityMappings()
		{
			base.AddElementMapping( "TestUnableScreenReasonEntity", "Falcon", @"dbo", "TblTestUnableScreenReason", 4 );
			base.AddElementFieldMapping( "TestUnableScreenReasonEntity", "TestUnableScreenReasonId", "TestUnableScreenReasonId", false, (int)SqlDbType.TinyInt, 0, 0, 3, true, "SCOPE_IDENTITY()", null, typeof(System.Byte), 0 );
			base.AddElementFieldMapping( "TestUnableScreenReasonEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "TestUnableScreenReasonEntity", "UnableScreenReasonId", "UnableScreenReasonId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "TestUnableScreenReasonEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 3 );
		}
		/// <summary>Inits ToolTipEntity's mappings</summary>
		private void InitToolTipEntityMappings()
		{
			base.AddElementMapping( "ToolTipEntity", "Falcon", @"dbo", "TblToolTip", 3 );
			base.AddElementFieldMapping( "ToolTipEntity", "TagId", "TagID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ToolTipEntity", "Tag", "Tag", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ToolTipEntity", "Content", "Content", false, (int)SqlDbType.Text, 2147483647, 0, 0, false, "", null, typeof(System.String), 2 );
		}
		/// <summary>Inits TrackingMarketingEntity's mappings</summary>
		private void InitTrackingMarketingEntityMappings()
		{
			base.AddElementMapping( "TrackingMarketingEntity", "Falcon", @"dbo", "TblTrackingMarketing", 5 );
			base.AddElementFieldMapping( "TrackingMarketingEntity", "TrackingMarketingId", "TrackingMarketingID", false, (int)SqlDbType.Int, 0, 0, 10, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0 );
			base.AddElementFieldMapping( "TrackingMarketingEntity", "SourceName", "SourceName", false, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "TrackingMarketingEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 2 );
			base.AddElementFieldMapping( "TrackingMarketingEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "TrackingMarketingEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
		}
		/// <summary>Inits UncontactedCustomerCallQueueEntity's mappings</summary>
		private void InitUncontactedCustomerCallQueueEntityMappings()
		{
			base.AddElementMapping( "UncontactedCustomerCallQueueEntity", "Falcon", @"dbo", "TblUncontactedCustomerCallQueue", 8 );
			base.AddElementFieldMapping( "UncontactedCustomerCallQueueEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "UncontactedCustomerCallQueueEntity", "HealthPlanId", "HealthPlanId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "UncontactedCustomerCallQueueEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "UncontactedCustomerCallQueueEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "UncontactedCustomerCallQueueEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "UncontactedCustomerCallQueueEntity", "ModifiedBy", "ModifiedBy", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "UncontactedCustomerCallQueueEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "UncontactedCustomerCallQueueEntity", "CallDate", "CallDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
		}
		/// <summary>Inits UncontactedCustomerCallQueueCriteriaAssignmentEntity's mappings</summary>
		private void InitUncontactedCustomerCallQueueCriteriaAssignmentEntityMappings()
		{
			base.AddElementMapping( "UncontactedCustomerCallQueueCriteriaAssignmentEntity", "Falcon", @"dbo", "TblUncontactedCustomerCallQueueCriteriaAssignment", 2 );
			base.AddElementFieldMapping( "UncontactedCustomerCallQueueCriteriaAssignmentEntity", "UncontactedCustomerId", "UncontactedCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "UncontactedCustomerCallQueueCriteriaAssignmentEntity", "CriteriaId", "CriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits UnitEntity's mappings</summary>
		private void InitUnitEntityMappings()
		{
			base.AddElementMapping( "UnitEntity", "Falcon", @"dbo", "TblUnit", 4 );
			base.AddElementFieldMapping( "UnitEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "UnitEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "UnitEntity", "Alias", "Alias", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "UnitEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
		}
		/// <summary>Inits UploadTestInfoEntity's mappings</summary>
		private void InitUploadTestInfoEntityMappings()
		{
			base.AddElementMapping( "UploadTestInfoEntity", "Falcon", @"dbo", "TblUploadTestInfo", 10 );
			base.AddElementFieldMapping( "UploadTestInfoEntity", "UploadTestInfoId", "UploadTestInfoID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "UploadTestInfoEntity", "UploadZipInfoId", "UploadZipInfoID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "UploadTestInfoEntity", "PatientId", "PatientID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "UploadTestInfoEntity", "GeneralReason", "GeneralReason", true, (int)SqlDbType.NText, 1073741823, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "UploadTestInfoEntity", "ActualReason", "ActualReason", true, (int)SqlDbType.NText, 1073741823, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "UploadTestInfoEntity", "FailedRecord", "FailedRecord", true, (int)SqlDbType.NVarChar, 500, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "UploadTestInfoEntity", "TestId", "TestID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "UploadTestInfoEntity", "IsSuccessful", "IsSuccessful", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "UploadTestInfoEntity", "DateCreated", "DateCreated", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "UploadTestInfoEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
		}
		/// <summary>Inits UploadZipInfoEntity's mappings</summary>
		private void InitUploadZipInfoEntityMappings()
		{
			base.AddElementMapping( "UploadZipInfoEntity", "Falcon", @"dbo", "TblUploadZipInfo", 15 );
			base.AddElementFieldMapping( "UploadZipInfoEntity", "UploadZipInfoId", "UploadZipInfoID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "UploadZipInfoEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "UploadZipInfoEntity", "FileName", "FileName", true, (int)SqlDbType.NVarChar, 256, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "UploadZipInfoEntity", "FileSize", "FileSize", false, (int)SqlDbType.Decimal, 0, 2, 10, false, "", null, typeof(System.Decimal), 3 );
			base.AddElementFieldMapping( "UploadZipInfoEntity", "IsUploadSuccessful", "IsUploadSuccessful", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "UploadZipInfoEntity", "IsParseSuccessful", "IsParseSuccessful", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "UploadZipInfoEntity", "FailureCount", "FailureCount", true, (int)SqlDbType.TinyInt, 0, 0, 3, false, "", null, typeof(System.Byte), 6 );
			base.AddElementFieldMapping( "UploadZipInfoEntity", "RecordsNotInZip", "RecordsNotInZip", true, (int)SqlDbType.TinyInt, 0, 0, 3, false, "", null, typeof(System.Byte), 7 );
			base.AddElementFieldMapping( "UploadZipInfoEntity", "UploadStartTime", "UploadStartTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "UploadZipInfoEntity", "UploadEndTime", "UploadEndTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "UploadZipInfoEntity", "ParseStartTime", "ParseStartTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 10 );
			base.AddElementFieldMapping( "UploadZipInfoEntity", "ParseEndTime", "ParseEndTime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "UploadZipInfoEntity", "LogFilePath", "LogFilePath", true, (int)SqlDbType.NVarChar, 256, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "UploadZipInfoEntity", "PreviousFileDiscarded", "PreviousFileDiscarded", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 13 );
			base.AddElementFieldMapping( "UploadZipInfoEntity", "UploadedByOrgRoleUserId", "UploadedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 14 );
		}
		/// <summary>Inits UserEntity's mappings</summary>
		private void InitUserEntityMappings()
		{
			base.AddElementMapping( "UserEntity", "Falcon", @"dbo", "TblUser", 21 );
			base.AddElementFieldMapping( "UserEntity", "UserId", "UserID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "UserEntity", "FirstName", "FirstName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "UserEntity", "MiddleName", "MiddleName", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "UserEntity", "LastName", "LastName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "UserEntity", "HomeAddressId", "HomeAddressID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "UserEntity", "PhoneOffice", "PhoneOffice", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "UserEntity", "PhoneCell", "PhoneCell", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "UserEntity", "PhoneHome", "PhoneHome", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "UserEntity", "Email1", "EMail1", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "UserEntity", "Email2", "EMail2", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "UserEntity", "Picture", "Picture", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "UserEntity", "Dob", "DOB", true, (int)SqlDbType.SmallDateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "UserEntity", "Ssn", "SSN", true, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "UserEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 13 );
			base.AddElementFieldMapping( "UserEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 14 );
			base.AddElementFieldMapping( "UserEntity", "TempUserName", "TempUserName", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 15 );
			base.AddElementFieldMapping( "UserEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 16 );
			base.AddElementFieldMapping( "UserEntity", "DefaultRoleId", "DefaultRoleID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 17 );
			base.AddElementFieldMapping( "UserEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 18 );
			base.AddElementFieldMapping( "UserEntity", "ModifiedByOrgRoleUserId", "ModifiedByOrgRoleUserId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 19 );
			base.AddElementFieldMapping( "UserEntity", "PhoneOfficeExtension", "PhoneOfficeExtension", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 20 );
		}
		/// <summary>Inits UserLoginEntity's mappings</summary>
		private void InitUserLoginEntityMappings()
		{
			base.AddElementMapping( "UserLoginEntity", "Falcon", @"dbo", "TblUserLogin", 20 );
			base.AddElementFieldMapping( "UserLoginEntity", "UserLoginId", "UserLoginID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "UserLoginEntity", "UserName", "UserName", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "UserLoginEntity", "Password", "Password", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "UserLoginEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "UserLoginEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "UserLoginEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "UserLoginEntity", "IsLocked", "IsLocked", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "UserLoginEntity", "LoginAttempts", "LoginAttempts", false, (int)SqlDbType.Decimal, 0, 0, 18, false, "", null, typeof(System.Decimal), 7 );
			base.AddElementFieldMapping( "UserLoginEntity", "LastLogged", "LastLogged", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "UserLoginEntity", "UserSecurityQuestionId", "UserSecurityQuestionID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "UserLoginEntity", "BrowserSessionId", "BrowserSessionId", true, (int)SqlDbType.NVarChar, 100, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "UserLoginEntity", "UserVerified", "UserVerified", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 11 );
			base.AddElementFieldMapping( "UserLoginEntity", "HintQuestion", "HintQuestion", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "UserLoginEntity", "HintAnswer", "HintAnswer", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "UserLoginEntity", "IsSecurityQuestionVerified", "IsSecurityQuestionVerified", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 14 );
			base.AddElementFieldMapping( "UserLoginEntity", "ResetPwdQueryString", "ResetPwdQueryString", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 15 );
			base.AddElementFieldMapping( "UserLoginEntity", "LastLoginAttemptAt", "LastLoginAttemptAt", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 16 );
			base.AddElementFieldMapping( "UserLoginEntity", "Salt", "Salt", false, (int)SqlDbType.NVarChar, 64, 0, 0, false, "", null, typeof(System.String), 17 );
			base.AddElementFieldMapping( "UserLoginEntity", "LastPasswordChangeDate", "LastPasswordChangeDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 18 );
			base.AddElementFieldMapping( "UserLoginEntity", "IsTwoFactorAuthrequired", "IsTwoFactorAuthrequired", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 19 );
		}
		/// <summary>Inits UserLoginLogEntity's mappings</summary>
		private void InitUserLoginLogEntityMappings()
		{
			base.AddElementMapping( "UserLoginLogEntity", "Falcon", @"dbo", "TblUserLoginLog", 10 );
			base.AddElementFieldMapping( "UserLoginLogEntity", "UserLoginLogId", "UserLoginLogID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "UserLoginLogEntity", "UserId", "UserID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "UserLoginLogEntity", "LoginDatetime", "LoginDatetime", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "UserLoginLogEntity", "LogoutDatetime", "LogoutDatetime", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "UserLoginLogEntity", "BrowserSessionId", "BrowserSessionID", false, (int)SqlDbType.NVarChar, 500, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "UserLoginLogEntity", "BrowserType", "BrowserType", false, (int)SqlDbType.NVarChar, 500, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "UserLoginLogEntity", "SessionIp", "SessionIP", false, (int)SqlDbType.NVarChar, 255, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "UserLoginLogEntity", "ReferredlUrl", "ReferredlUrl", true, (int)SqlDbType.NVarChar, 1000, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "UserLoginLogEntity", "DeviceKey", "DeviceKey", true, (int)SqlDbType.NVarChar, 255, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "UserLoginLogEntity", "MedicareToken", "MedicareToken", true, (int)SqlDbType.NVarChar, 1024, 0, 0, false, "", null, typeof(System.String), 9 );
		}
		/// <summary>Inits UserNpiInfoEntity's mappings</summary>
		private void InitUserNpiInfoEntityMappings()
		{
			base.AddElementMapping( "UserNpiInfoEntity", "Falcon", @"dbo", "TblUserNpiInfo", 3 );
			base.AddElementFieldMapping( "UserNpiInfoEntity", "UserId", "UserID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "UserNpiInfoEntity", "Npi", "Npi", true, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "UserNpiInfoEntity", "Credential", "Credential", true, (int)SqlDbType.VarChar, 20, 0, 0, false, "", null, typeof(System.String), 2 );
		}
		/// <summary>Inits UserSecurityQuestionEntity's mappings</summary>
		private void InitUserSecurityQuestionEntityMappings()
		{
			base.AddElementMapping( "UserSecurityQuestionEntity", "Falcon", @"dbo", "TblUserSecurityQuestion", 10 );
			base.AddElementFieldMapping( "UserSecurityQuestionEntity", "UserQuestionId", "UserQuestionID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "UserSecurityQuestionEntity", "Question1", "Question1", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "UserSecurityQuestionEntity", "Answer1", "Answer1", false, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "UserSecurityQuestionEntity", "Question2", "Question2", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "UserSecurityQuestionEntity", "Answer2", "Answer2", false, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "UserSecurityQuestionEntity", "Question3", "Question3", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "UserSecurityQuestionEntity", "Answer3", "Answer3", false, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "UserSecurityQuestionEntity", "DateCreation", "DateCreation", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "UserSecurityQuestionEntity", "DateModification", "DateModification", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "UserSecurityQuestionEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 9 );
		}
		/// <summary>Inits VanDetailsEntity's mappings</summary>
		private void InitVanDetailsEntityMappings()
		{
			base.AddElementMapping( "VanDetailsEntity", "Falcon", @"dbo", "TblVanDetails", 10 );
			base.AddElementFieldMapping( "VanDetailsEntity", "VanId", "VanID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VanDetailsEntity", "RegistrationNumber", "RegistrationNumber", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "VanDetailsEntity", "StateId", "StateID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VanDetailsEntity", "Vin", "VIN", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "VanDetailsEntity", "Name", "Name", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "VanDetailsEntity", "Make", "Make", true, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "VanDetailsEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "VanDetailsEntity", "DateCreated", "DateCreated", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "VanDetailsEntity", "DateModified", "DateModified", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "VanDetailsEntity", "IsActive", "IsActive", true, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 9 );
		}
		/// <summary>Inits VwCallCenterCallReportEntity's mappings</summary>
		private void InitVwCallCenterCallReportEntityMappings()
		{
			base.AddElementMapping( "VwCallCenterCallReportEntity", "Falcon", @"dbo", "Vw_CallCenterCallReport", 24 );
			base.AddElementFieldMapping( "VwCallCenterCallReportEntity", "CallId", "CallID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwCallCenterCallReportEntity", "IsNewCustomer", "IsNewCustomer", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 1 );
			base.AddElementFieldMapping( "VwCallCenterCallReportEntity", "CalledCustomerId", "CalledCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwCallCenterCallReportEntity", "TimeCreated", "TimeCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "VwCallCenterCallReportEntity", "TimeEnd", "TimeEnd", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "VwCallCenterCallReportEntity", "CallStatus", "CallStatus", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "VwCallCenterCallReportEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "VwCallCenterCallReportEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "VwCallCenterCallReportEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "VwCallCenterCallReportEntity", "CallBackNumber", "CallBackNumber", false, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "VwCallCenterCallReportEntity", "IncomingPhoneLine", "IncomingPhoneLine", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "VwCallCenterCallReportEntity", "CallersPhoneNumber", "CallersPhoneNumber", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 11 );
			base.AddElementFieldMapping( "VwCallCenterCallReportEntity", "OutBound", "OutBound", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 12 );
			base.AddElementFieldMapping( "VwCallCenterCallReportEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 13 );
			base.AddElementFieldMapping( "VwCallCenterCallReportEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 14 );
			base.AddElementFieldMapping( "VwCallCenterCallReportEntity", "Disposition", "Disposition", false, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 15 );
			base.AddElementFieldMapping( "VwCallCenterCallReportEntity", "ReadAndUnderstoodNotes", "ReadAndUnderstoodNotes", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 16 );
			base.AddElementFieldMapping( "VwCallCenterCallReportEntity", "IsUploaded", "IsUploaded", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 17 );
			base.AddElementFieldMapping( "VwCallCenterCallReportEntity", "CampaignId", "CampaignId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 18 );
			base.AddElementFieldMapping( "VwCallCenterCallReportEntity", "NotInterestedReasonId", "NotInterestedReasonId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 19 );
			base.AddElementFieldMapping( "VwCallCenterCallReportEntity", "CustomTags", "CustomTags", false, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 20 );
			base.AddElementFieldMapping( "VwCallCenterCallReportEntity", "AccountId", "AccountId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 21 );
			base.AddElementFieldMapping( "VwCallCenterCallReportEntity", "Tag", "Tag", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 22 );
			base.AddElementFieldMapping( "VwCallCenterCallReportEntity", "CallQueueId", "CallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 23 );
		}
		/// <summary>Inits VwCallQueueCustomerCallDetailsEntity's mappings</summary>
		private void InitVwCallQueueCustomerCallDetailsEntityMappings()
		{
			base.AddElementMapping( "VwCallQueueCustomerCallDetailsEntity", "Falcon", @"dbo", "Vw_CallQueueCustomerCallDetails", 25 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCallDetailsEntity", "CallId", "CallID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCallDetailsEntity", "CalledCustomerId", "CalledCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCallDetailsEntity", "TimeCreated", "TimeCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCallDetailsEntity", "TimeEnd", "TimeEnd", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCallDetailsEntity", "CallStatus", "CallStatus", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCallDetailsEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCallDetailsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCallDetailsEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCallDetailsEntity", "CallBackNumber", "CallBackNumber", false, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCallDetailsEntity", "IncomingPhoneLine", "IncomingPhoneLine", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCallDetailsEntity", "CallersPhoneNumber", "CallersPhoneNumber", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCallDetailsEntity", "CallerName", "CallerName", false, (int)SqlDbType.NChar, 50, 0, 0, false, "", null, typeof(System.String), 11 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCallDetailsEntity", "PromoCodeId", "PromoCodeID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCallDetailsEntity", "AffiliateId", "AffiliateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 13 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCallDetailsEntity", "OutBound", "OutBound", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 14 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCallDetailsEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 15 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCallDetailsEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 16 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCallDetailsEntity", "Disposition", "Disposition", false, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 17 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCallDetailsEntity", "ReadAndUnderstoodNotes", "ReadAndUnderstoodNotes", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 18 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCallDetailsEntity", "IsUploaded", "IsUploaded", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 19 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCallDetailsEntity", "CampaignId", "CampaignId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 20 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCallDetailsEntity", "NotInterestedReasonId", "NotInterestedReasonId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 21 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCallDetailsEntity", "CallQueueCustomerId", "CallQueueCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 22 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCallDetailsEntity", "CallQueueId", "CallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 23 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCallDetailsEntity", "HealthPlanId", "HealthPlanId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 24 );
		}
		/// <summary>Inits VwCallQueueCustomerCriteraAssignmentEntity's mappings</summary>
		private void InitVwCallQueueCustomerCriteraAssignmentEntityMappings()
		{
			base.AddElementMapping( "VwCallQueueCustomerCriteraAssignmentEntity", "Falcon", @"dbo", "Vw_CallQueueCustomerCriteraAssignment", 22 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentEntity", "CallQueueCustomerId", "CallQueueCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentEntity", "CriteriaId", "CriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentEntity", "CallQueueId", "CallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentEntity", "Attempts", "Attempts", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 5 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentEntity", "ModifiedByOrgRoleUserId", "ModifiedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentEntity", "AssignedToOrgRoleUserId", "AssignedToOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 11 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentEntity", "CallQueueCriteriaId", "CallQueueCriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentEntity", "CallDate", "CallDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 13 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentEntity", "HealthPlanId", "HealthPlanId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 14 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentEntity", "CampaignId", "CampaignId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 15 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentEntity", "EventIds", "EventIds", false, (int)SqlDbType.VarChar, 1, 0, 0, false, "", null, typeof(System.String), 16 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentEntity", "CallCount", "CallCount", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 17 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentEntity", "Tag", "Tag", false, (int)SqlDbType.VarChar, 1, 0, 0, false, "", null, typeof(System.String), 18 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentEntity", "CallBackRequestedDate", "CallBackRequestedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 19 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentEntity", "LastContactedDate", "LastContactedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 20 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentEntity", "CallStatus", "CallStatus", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 21 );
		}
		/// <summary>Inits VwCallQueueCustomerCriteraAssignmentForGmsEntity's mappings</summary>
		private void InitVwCallQueueCustomerCriteraAssignmentForGmsEntityMappings()
		{
			base.AddElementMapping( "VwCallQueueCustomerCriteraAssignmentForGmsEntity", "Falcon", @"dbo", "Vw_CallQueueCustomerCriteraAssignmentForGms", 28 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsEntity", "CallQueueCustomerId", "CallQueueCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsEntity", "CriteriaId", "CriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsEntity", "CallQueueId", "CallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsEntity", "Attempts", "Attempts", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 5 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsEntity", "CallDate", "CallDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsEntity", "CallCount", "CallCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsEntity", "ZipId", "ZipId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsEntity", "HealthPlanId", "HealthPlanId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsEntity", "CampaignId", "CampaignId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 13 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsEntity", "EventIds", "EventIds", false, (int)SqlDbType.VarChar, 1, 0, 0, false, "", null, typeof(System.String), 14 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsEntity", "FirstName", "FirstName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 15 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsEntity", "MiddleName", "MiddleName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 16 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsEntity", "LastName", "LastName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 17 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsEntity", "ZipCode", "ZipCode", false, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 18 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsEntity", "IsLanguageBarrier", "IsLanguageBarrier", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 19 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsEntity", "CallStatus", "CallStatus", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 20 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsEntity", "ContactedDate", "ContactedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 21 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsEntity", "Disposition", "Disposition", false, (int)SqlDbType.NVarChar, 400, 0, 0, false, "", null, typeof(System.String), 22 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsEntity", "AppointmentDate", "AppointmentDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 23 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsEntity", "AppointmentCancellationDate", "AppointmentCancellationDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 24 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsEntity", "LanguageBarrierMarkedDate", "LanguageBarrierMarkedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 25 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsEntity", "IncorrectPhoneNumberMarkedDate", "IncorrectPhoneNumberMarkedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 26 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsEntity", "NoShowDate", "NoShowDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 27 );
		}
		/// <summary>Inits VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity's mappings</summary>
		private void InitVwCallQueueCustomerCriteraAssignmentForGmsStatsEntityMappings()
		{
			base.AddElementMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "Falcon", @"dbo", "Vw_CallQueueCustomerCriteraAssignmentForGmsStats", 40 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "CallQueueCustomerId", "CallQueueCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "CriteriaId", "CriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "CallQueueId", "CallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "Attempts", "Attempts", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 5 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "CallDate", "CallDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "CallCount", "CallCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "ZipId", "ZipId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "HealthPlanId", "HealthPlanId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "CampaignId", "CampaignId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 13 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "EventIds", "EventIds", false, (int)SqlDbType.VarChar, 1, 0, 0, false, "", null, typeof(System.String), 14 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "FirstName", "FirstName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 15 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "MiddleName", "MiddleName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 16 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "LastName", "LastName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 17 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "ZipCode", "ZipCode", false, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 18 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "IsLanguageBarrier", "IsLanguageBarrier", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 19 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "CallStatus", "CallStatus", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 20 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "ContactedDate", "ContactedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 21 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "Disposition", "Disposition", false, (int)SqlDbType.NVarChar, 400, 0, 0, false, "", null, typeof(System.String), 22 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "AppointmentDate", "AppointmentDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 23 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "AppointmentCancellationDate", "AppointmentCancellationDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 24 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "IsEligble", "IsEligble", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 25 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "ActivityId", "ActivityId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 26 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "PhoneCell", "PhoneCell", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 27 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "PhoneHome", "PhoneHome", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 28 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "PhoneOffice", "PhoneOffice", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 29 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "IsIncorrectPhoneNumber", "IsIncorrectPhoneNumber", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 30 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "DoNotContactTypeId", "DoNotContactTypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 31 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "CallBackRequestedDate", "CallBackRequestedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 32 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "DoNotContactUpdateDate", "DoNotContactUpdateDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 33 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "DoNotContactUpdateSource", "DoNotContactUpdateSource", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 34 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "LanguageBarrierMarkedDate", "LanguageBarrierMarkedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 35 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "IncorrectPhoneNumberMarkedDate", "IncorrectPhoneNumberMarkedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 36 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "NoShowDate", "NoShowDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 37 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "TargetedYear", "TargetedYear", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 38 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity", "IsTargeted", "IsTargeted", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 39 );
		}
		/// <summary>Inits VwCallQueueCustomerCriteraAssignmentForStatsEntity's mappings</summary>
		private void InitVwCallQueueCustomerCriteraAssignmentForStatsEntityMappings()
		{
			base.AddElementMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "Falcon", @"dbo", "Vw_CallQueueCustomerCriteraAssignmentForStats", 40 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "CallQueueCustomerId", "CallQueueCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "CriteriaId", "CriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "CallQueueId", "CallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "Attempts", "Attempts", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 5 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "CallDate", "CallDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "CallCount", "CallCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "ZipId", "ZipId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "HealthPlanId", "HealthPlanId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "CampaignId", "CampaignId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 13 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "EventIds", "EventIds", false, (int)SqlDbType.VarChar, 1, 0, 0, false, "", null, typeof(System.String), 14 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "FirstName", "FirstName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 15 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "MiddleName", "MiddleName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 16 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "LastName", "LastName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 17 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "ZipCode", "ZipCode", false, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 18 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "IsLanguageBarrier", "IsLanguageBarrier", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 19 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "CallStatus", "CallStatus", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 20 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "ContactedDate", "ContactedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 21 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "Disposition", "Disposition", false, (int)SqlDbType.NVarChar, 400, 0, 0, false, "", null, typeof(System.String), 22 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "AppointmentDate", "AppointmentDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 23 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "AppointmentCancellationDate", "AppointmentCancellationDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 24 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "IsEligble", "IsEligble", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 25 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "ActivityId", "ActivityId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 26 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "PhoneCell", "PhoneCell", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 27 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "PhoneHome", "PhoneHome", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 28 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "PhoneOffice", "PhoneOffice", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 29 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "IsIncorrectPhoneNumber", "IsIncorrectPhoneNumber", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 30 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "DoNotContactTypeId", "DoNotContactTypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 31 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "CallBackRequestedDate", "CallBackRequestedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 32 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "DoNotContactUpdateDate", "DoNotContactUpdateDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 33 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "DoNotContactUpdateSource", "DoNotContactUpdateSource", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 34 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "LanguageBarrierMarkedDate", "LanguageBarrierMarkedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 35 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "IncorrectPhoneNumberMarkedDate", "IncorrectPhoneNumberMarkedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 36 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "NoShowDate", "NoShowDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 37 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "TargetedYear", "TargetedYear", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 38 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentForStatsEntity", "IsTargeted", "IsTargeted", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 39 );
		}
		/// <summary>Inits VwCallQueueCustomerCriteraAssignmentWithCustomerEntity's mappings</summary>
		private void InitVwCallQueueCustomerCriteraAssignmentWithCustomerEntityMappings()
		{
			base.AddElementMapping( "VwCallQueueCustomerCriteraAssignmentWithCustomerEntity", "Falcon", @"dbo", "Vw_CallQueueCustomerCriteraAssignmentWithCustomer", 20 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentWithCustomerEntity", "CallQueueCustomerId", "CallQueueCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentWithCustomerEntity", "CriteriaId", "CriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentWithCustomerEntity", "CallQueueId", "CallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentWithCustomerEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentWithCustomerEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentWithCustomerEntity", "Attempts", "Attempts", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 5 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentWithCustomerEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentWithCustomerEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentWithCustomerEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentWithCustomerEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentWithCustomerEntity", "ModifiedByOrgRoleUserId", "ModifiedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentWithCustomerEntity", "AssignedToOrgRoleUserId", "AssignedToOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 11 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentWithCustomerEntity", "CallQueueCriteriaId", "CallQueueCriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentWithCustomerEntity", "CallDate", "CallDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 13 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentWithCustomerEntity", "HealthPlanId", "HealthPlanId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 14 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentWithCustomerEntity", "CampaignId", "CampaignId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 15 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentWithCustomerEntity", "EventIds", "EventIds", false, (int)SqlDbType.VarChar, 1, 0, 0, false, "", null, typeof(System.String), 16 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentWithCustomerEntity", "CallCount", "CallCount", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 17 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentWithCustomerEntity", "ZipId", "ZipID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 18 );
			base.AddElementFieldMapping( "VwCallQueueCustomerCriteraAssignmentWithCustomerEntity", "IsLanguageBarrier", "IsLanguageBarrier", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 19 );
		}
		/// <summary>Inits VwCallRoundCallQueueCriteraAssignmentEntity's mappings</summary>
		private void InitVwCallRoundCallQueueCriteraAssignmentEntityMappings()
		{
			base.AddElementMapping( "VwCallRoundCallQueueCriteraAssignmentEntity", "Falcon", @"dbo", "Vw_CallRoundCallQueueCriteraAssignment", 14 );
			base.AddElementFieldMapping( "VwCallRoundCallQueueCriteraAssignmentEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwCallRoundCallQueueCriteraAssignmentEntity", "CriteriaId", "CriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwCallRoundCallQueueCriteraAssignmentEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwCallRoundCallQueueCriteraAssignmentEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "VwCallRoundCallQueueCriteraAssignmentEntity", "Attempt", "Attempt", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "VwCallRoundCallQueueCriteraAssignmentEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "VwCallRoundCallQueueCriteraAssignmentEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "VwCallRoundCallQueueCriteraAssignmentEntity", "ModifiedBy", "ModifiedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "VwCallRoundCallQueueCriteraAssignmentEntity", "CallDate", "CallDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "VwCallRoundCallQueueCriteraAssignmentEntity", "HealthPlanId", "HealthPlanId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "VwCallRoundCallQueueCriteraAssignmentEntity", "CallCount", "CallCount", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 10 );
			base.AddElementFieldMapping( "VwCallRoundCallQueueCriteraAssignmentEntity", "TagCount", "TagCount", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 11 );
			base.AddElementFieldMapping( "VwCallRoundCallQueueCriteraAssignmentEntity", "Tags", "Tags", false, (int)SqlDbType.NVarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "VwCallRoundCallQueueCriteraAssignmentEntity", "ZipId", "ZipID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 13 );
		}
		/// <summary>Inits VwCampaignClickConversionEntity's mappings</summary>
		private void InitVwCampaignClickConversionEntityMappings()
		{
			base.AddElementMapping( "VwCampaignClickConversionEntity", "Falcon", @"dbo", "vw_CampaignClickConversion", 17 );
			base.AddElementFieldMapping( "VwCampaignClickConversionEntity", "CampaignId", "CampaignID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwCampaignClickConversionEntity", "CampaignName", "CampaignName", false, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "VwCampaignClickConversionEntity", "ClickId", "ClickID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwCampaignClickConversionEntity", "Keyword", "Keyword", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "VwCampaignClickConversionEntity", "ProspectCustomerId", "ProspectCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "VwCampaignClickConversionEntity", "EventCustomerId", "EventCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "VwCampaignClickConversionEntity", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "VwCampaignClickConversionEntity", "ClickConversionId", "ClickConversionID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "VwCampaignClickConversionEntity", "MarketingMaterialId", "MarketingMaterialID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "VwCampaignClickConversionEntity", "Timestamp", "Timestamp", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "VwCampaignClickConversionEntity", "IpAddress", "IpAddress", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "VwCampaignClickConversionEntity", "PriorReferrer", "PriorReferrer", false, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 11 );
			base.AddElementFieldMapping( "VwCampaignClickConversionEntity", "Referrer", "Referrer", false, (int)SqlDbType.VarChar, 1024, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "VwCampaignClickConversionEntity", "BrowserClient", "BrowserClient", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "VwCampaignClickConversionEntity", "ResolutionHeight", "ResolutionHeight", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 14 );
			base.AddElementFieldMapping( "VwCampaignClickConversionEntity", "ResolutionWidth", "ResolutionWidth", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 15 );
			base.AddElementFieldMapping( "VwCampaignClickConversionEntity", "KeywordClickId", "KeywordClickID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 16 );
		}
		/// <summary>Inits VwCustomerAggregateResultSummaryEntity's mappings</summary>
		private void InitVwCustomerAggregateResultSummaryEntityMappings()
		{
			base.AddElementMapping( "VwCustomerAggregateResultSummaryEntity", "Falcon", @"dbo", "vw_CustomerAggregateResultSummary", 29 );
			base.AddElementFieldMapping( "VwCustomerAggregateResultSummaryEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwCustomerAggregateResultSummaryEntity", "NoShow", "NoShow", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 1 );
			base.AddElementFieldMapping( "VwCustomerAggregateResultSummaryEntity", "HiPaastatus", "HiPAAStatus", false, (int)SqlDbType.SmallInt, 0, 0, 5, false, "", null, typeof(System.Int16), 2 );
			base.AddElementFieldMapping( "VwCustomerAggregateResultSummaryEntity", "PartnerRelease", "PartnerRelease", false, (int)SqlDbType.SmallInt, 0, 0, 5, false, "", null, typeof(System.Int16), 3 );
			base.AddElementFieldMapping( "VwCustomerAggregateResultSummaryEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "VwCustomerAggregateResultSummaryEntity", "AppointmentId", "AppointmentId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "VwCustomerAggregateResultSummaryEntity", "ResultState", "ResultState", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 6 );
			base.AddElementFieldMapping( "VwCustomerAggregateResultSummaryEntity", "ResultSummary", "ResultSummary", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "VwCustomerAggregateResultSummaryEntity", "ResultStatusUpdatedDate", "ResultStatusUpdatedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "VwCustomerAggregateResultSummaryEntity", "ResultSummaryOrder", "ResultSummaryOrder", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 9 );
			base.AddElementFieldMapping( "VwCustomerAggregateResultSummaryEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
			base.AddElementFieldMapping( "VwCustomerAggregateResultSummaryEntity", "EventDate", "EventDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "VwCustomerAggregateResultSummaryEntity", "EventTypeId", "EventTypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "VwCustomerAggregateResultSummaryEntity", "FirstName", "FirstName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "VwCustomerAggregateResultSummaryEntity", "MiddleName", "MiddleName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 14 );
			base.AddElementFieldMapping( "VwCustomerAggregateResultSummaryEntity", "LastName", "LastName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 15 );
			base.AddElementFieldMapping( "VwCustomerAggregateResultSummaryEntity", "Dob", "DOB", false, (int)SqlDbType.SmallDateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 16 );
			base.AddElementFieldMapping( "VwCustomerAggregateResultSummaryEntity", "PhoneHome", "PhoneHome", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 17 );
			base.AddElementFieldMapping( "VwCustomerAggregateResultSummaryEntity", "PhoneCell", "PhoneCell", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 18 );
			base.AddElementFieldMapping( "VwCustomerAggregateResultSummaryEntity", "PhoneOffice", "PhoneOffice", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 19 );
			base.AddElementFieldMapping( "VwCustomerAggregateResultSummaryEntity", "CorporateAccountId", "CorporateAccountId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 20 );
			base.AddElementFieldMapping( "VwCustomerAggregateResultSummaryEntity", "HospitalPartnerId", "HospitalPartnerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 21 );
			base.AddElementFieldMapping( "VwCustomerAggregateResultSummaryEntity", "HospitalPartnerStatus", "HospitalPartnerStatus", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 22 );
			base.AddElementFieldMapping( "VwCustomerAggregateResultSummaryEntity", "HospitalPartnerStatusOrder", "HospitalPartnerStatusOrder", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 23 );
			base.AddElementFieldMapping( "VwCustomerAggregateResultSummaryEntity", "HospitalPartnerLastModifiedDate", "HospitalPartnerLastModifiedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 24 );
			base.AddElementFieldMapping( "VwCustomerAggregateResultSummaryEntity", "ShippingStatus", "ShippingStatus", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 25 );
			base.AddElementFieldMapping( "VwCustomerAggregateResultSummaryEntity", "ShipmentDate", "ShipmentDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 26 );
			base.AddElementFieldMapping( "VwCustomerAggregateResultSummaryEntity", "InitialCallDate", "InitialCallDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 27 );
			base.AddElementFieldMapping( "VwCustomerAggregateResultSummaryEntity", "HospitalFacilityId", "HospitalFacilityId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 28 );
		}
		/// <summary>Inits VwEventAppointmentEntity's mappings</summary>
		private void InitVwEventAppointmentEntityMappings()
		{
			base.AddElementMapping( "VwEventAppointmentEntity", "Falcon", @"dbo", "Vw_EventAppointment", 9 );
			base.AddElementFieldMapping( "VwEventAppointmentEntity", "AppointmentId", "AppointmentID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwEventAppointmentEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwEventAppointmentEntity", "StartTime", "StartTime", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "VwEventAppointmentEntity", "EndTime", "EndTime", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "VwEventAppointmentEntity", "CheckinTime", "CheckinTime", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "VwEventAppointmentEntity", "CheckoutTime", "CheckoutTime", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "VwEventAppointmentEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "VwEventAppointmentEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "VwEventAppointmentEntity", "ScheduledByOrgRoleUserId", "ScheduledByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
		}
		/// <summary>Inits VwEventCustomerPreApprovedTestListEntity's mappings</summary>
		private void InitVwEventCustomerPreApprovedTestListEntityMappings()
		{
			base.AddElementMapping( "VwEventCustomerPreApprovedTestListEntity", "Falcon", @"dbo", "vw_EventCustomerPreApprovedTestList", 2 );
			base.AddElementFieldMapping( "VwEventCustomerPreApprovedTestListEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwEventCustomerPreApprovedTestListEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits VwEventCustomersAccountEntity's mappings</summary>
		private void InitVwEventCustomersAccountEntityMappings()
		{
			base.AddElementMapping( "VwEventCustomersAccountEntity", "Falcon", @"dbo", "Vw_EventCustomersAccount", 37 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "EventCustomerId", "EventCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "IsPaymentOnline", "IsPaymentOnline", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "AppointmentId", "AppointmentId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "IsTestConducted", "IsTestConducted", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "BMailReports", "bMailReports", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "Notes", "Notes", false, (int)SqlDbType.VarChar, 5000, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "NoShow", "NoShow", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "OfflineCustomerId", "OfflineCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "AffiliateCampaignId", "AffiliateCampaignID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 11 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "SignInSource", "SignInSource", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "AdvocateId", "AdvocateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 13 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "Hipaastatus", "HIPAAStatus", false, (int)SqlDbType.SmallInt, 0, 0, 5, false, "", null, typeof(System.Int16), 14 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "MarketingSource", "MarketingSource", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 15 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "ClickId", "ClickID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 16 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 17 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "PartnerRelease", "PartnerRelease", false, (int)SqlDbType.SmallInt, 0, 0, 5, false, "", null, typeof(System.Int16), 18 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "HospitalFacilityId", "HospitalFacilityId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 19 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "Abnstatus", "ABNStatus", false, (int)SqlDbType.SmallInt, 0, 0, 5, false, "", null, typeof(System.Int16), 20 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "PcpconsentStatus", "PCPConsentStatus", false, (int)SqlDbType.SmallInt, 0, 0, 5, false, "", null, typeof(System.Int16), 21 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "InsuranceReleaseStatus", "InsuranceReleaseStatus", false, (int)SqlDbType.SmallInt, 0, 0, 5, false, "", null, typeof(System.Int16), 22 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "CampaignId", "CampaignId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 23 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "LeftWithoutScreeningReasonId", "LeftWithoutScreeningReasonId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 24 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "AwvVisitId", "AwvVisitId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 25 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "EnableTexting", "EnableTexting", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 26 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "IsGiftCertificateDelivered", "IsGiftCertificateDelivered", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 27 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "GiftCode", "GiftCode", false, (int)SqlDbType.NVarChar, 512, 0, 0, false, "", null, typeof(System.String), 28 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "PatientDetailId", "PatientDetailId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 29 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "EventDate", "EventDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 30 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "EventStatus", "EventStatus", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 31 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "EventTypeId", "EventTypeID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 32 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "AccountId", "AccountID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 33 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "IsAppointmentConfirmed", "IsAppointmentConfirmed", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 34 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "ConfirmedBy", "ConfirmedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 35 );
			base.AddElementFieldMapping( "VwEventCustomersAccountEntity", "PreferredContactType", "PreferredContactType", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 36 );
		}
		/// <summary>Inits VwEventCustomersViewServiceReportEntity's mappings</summary>
		private void InitVwEventCustomersViewServiceReportEntityMappings()
		{
			base.AddElementMapping( "VwEventCustomersViewServiceReportEntity", "Falcon", @"dbo", "Vw_EventCustomersViewServiceReport", 6 );
			base.AddElementFieldMapping( "VwEventCustomersViewServiceReportEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwEventCustomersViewServiceReportEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwEventCustomersViewServiceReportEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwEventCustomersViewServiceReportEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "VwEventCustomersViewServiceReportEntity", "AccountId", "AccountId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "VwEventCustomersViewServiceReportEntity", "EventDate", "EventDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
		}
		/// <summary>Inits VwFillEventCallQueueCriteraAssignmentEntity's mappings</summary>
		private void InitVwFillEventCallQueueCriteraAssignmentEntityMappings()
		{
			base.AddElementMapping( "VwFillEventCallQueueCriteraAssignmentEntity", "Falcon", @"dbo", "Vw_FillEventCallQueueCriteraAssignment", 15 );
			base.AddElementFieldMapping( "VwFillEventCallQueueCriteraAssignmentEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwFillEventCallQueueCriteraAssignmentEntity", "CriteriaId", "CriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwFillEventCallQueueCriteraAssignmentEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwFillEventCallQueueCriteraAssignmentEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "VwFillEventCallQueueCriteraAssignmentEntity", "Attempt", "Attempt", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "VwFillEventCallQueueCriteraAssignmentEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "VwFillEventCallQueueCriteraAssignmentEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "VwFillEventCallQueueCriteraAssignmentEntity", "ModifiedBy", "ModifiedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "VwFillEventCallQueueCriteraAssignmentEntity", "CallDate", "CallDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "VwFillEventCallQueueCriteraAssignmentEntity", "HealthPlanId", "HealthPlanId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "VwFillEventCallQueueCriteraAssignmentEntity", "EventIds", "EventIds", false, (int)SqlDbType.VarChar, 2048, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "VwFillEventCallQueueCriteraAssignmentEntity", "CallCount", "CallCount", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 11 );
			base.AddElementFieldMapping( "VwFillEventCallQueueCriteraAssignmentEntity", "TagCount", "TagCount", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 12 );
			base.AddElementFieldMapping( "VwFillEventCallQueueCriteraAssignmentEntity", "Tags", "Tags", false, (int)SqlDbType.NVarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "VwFillEventCallQueueCriteraAssignmentEntity", "ZipId", "ZipID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 14 );
		}
		/// <summary>Inits VwGetAllTestForCustomersEntity's mappings</summary>
		private void InitVwGetAllTestForCustomersEntityMappings()
		{
			base.AddElementMapping( "VwGetAllTestForCustomersEntity", "Falcon", @"dbo", "vw_GetAllTestForCustomers", 2 );
			base.AddElementFieldMapping( "VwGetAllTestForCustomersEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwGetAllTestForCustomersEntity", "TestId", "TestID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits VwGetBookedAppointmentForCalculatingBonusEntity's mappings</summary>
		private void InitVwGetBookedAppointmentForCalculatingBonusEntityMappings()
		{
			base.AddElementMapping( "VwGetBookedAppointmentForCalculatingBonusEntity", "Falcon", @"dbo", "Vw_GetBookedAppointmentForCalculatingBonus", 3 );
			base.AddElementFieldMapping( "VwGetBookedAppointmentForCalculatingBonusEntity", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwGetBookedAppointmentForCalculatingBonusEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 1 );
			base.AddElementFieldMapping( "VwGetBookedAppointmentForCalculatingBonusEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
		}
		/// <summary>Inits VwGetCallCenterAgentsForConversionReportEntity's mappings</summary>
		private void InitVwGetCallCenterAgentsForConversionReportEntityMappings()
		{
			base.AddElementMapping( "VwGetCallCenterAgentsForConversionReportEntity", "Falcon", @"dbo", "Vw_GetCallCenterAgentsForConversionReport", 4 );
			base.AddElementFieldMapping( "VwGetCallCenterAgentsForConversionReportEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwGetCallCenterAgentsForConversionReportEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 1 );
			base.AddElementFieldMapping( "VwGetCallCenterAgentsForConversionReportEntity", "HealthPlanId", "HealthPlanId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwGetCallCenterAgentsForConversionReportEntity", "CallQueueId", "CallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
		}
		/// <summary>Inits VwGetCallQueueCustomersEntity's mappings</summary>
		private void InitVwGetCallQueueCustomersEntityMappings()
		{
			base.AddElementMapping( "VwGetCallQueueCustomersEntity", "Falcon", @"dbo", "Vw_GetCallQueueCustomers", 19 );
			base.AddElementFieldMapping( "VwGetCallQueueCustomersEntity", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwGetCallQueueCustomersEntity", "Gender", "Gender", false, (int)SqlDbType.NVarChar, 20, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "VwGetCallQueueCustomersEntity", "Race", "Race", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "VwGetCallQueueCustomersEntity", "DoNotContactReasonId", "DoNotContactReasonId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "VwGetCallQueueCustomersEntity", "DoNotContactReasonNotesId", "DoNotContactReasonNotesId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "VwGetCallQueueCustomersEntity", "RequestNewsLetter", "RequestNewsLetter", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "VwGetCallQueueCustomersEntity", "IsEligble", "IsEligble", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "VwGetCallQueueCustomersEntity", "IsIncorrectPhoneNumber", "IsIncorrectPhoneNumber", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "VwGetCallQueueCustomersEntity", "IsLanguageBarrier", "IsLanguageBarrier", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
			base.AddElementFieldMapping( "VwGetCallQueueCustomersEntity", "ActivityId", "ActivityId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "VwGetCallQueueCustomersEntity", "DoNotContactTypeId", "DoNotContactTypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
			base.AddElementFieldMapping( "VwGetCallQueueCustomersEntity", "BillingAddressId", "BillingAddressID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 11 );
			base.AddElementFieldMapping( "VwGetCallQueueCustomersEntity", "InsuranceId", "InsuranceId", false, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "VwGetCallQueueCustomersEntity", "Tag", "Tag", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "VwGetCallQueueCustomersEntity", "ZipId", "ZipID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 14 );
			base.AddElementFieldMapping( "VwGetCallQueueCustomersEntity", "HealthPlanId", "HealthPlanId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 15 );
			base.AddElementFieldMapping( "VwGetCallQueueCustomersEntity", "CallQueueId", "CallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 16 );
			base.AddElementFieldMapping( "VwGetCallQueueCustomersEntity", "CriteriaId", "CriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 17 );
			base.AddElementFieldMapping( "VwGetCallQueueCustomersEntity", "CampaignId", "CampaignId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 18 );
		}
		/// <summary>Inits VwGetCallQueueExcludedCustomersEntity's mappings</summary>
		private void InitVwGetCallQueueExcludedCustomersEntityMappings()
		{
			base.AddElementMapping( "VwGetCallQueueExcludedCustomersEntity", "Falcon", @"dbo", "Vw_GetCallQueueExcludedCustomers", 9 );
			base.AddElementFieldMapping( "VwGetCallQueueExcludedCustomersEntity", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwGetCallQueueExcludedCustomersEntity", "Tag", "Tag", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "VwGetCallQueueExcludedCustomersEntity", "ActivityId", "ActivityId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwGetCallQueueExcludedCustomersEntity", "IsEligble", "IsEligble", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "VwGetCallQueueExcludedCustomersEntity", "IsIncorrectPhoneNumber", "IsIncorrectPhoneNumber", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "VwGetCallQueueExcludedCustomersEntity", "InsuranceId", "InsuranceId", false, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "VwGetCallQueueExcludedCustomersEntity", "DoNotContactTypeId", "DoNotContactTypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "VwGetCallQueueExcludedCustomersEntity", "DoNotContactUpdateDate", "DoNotContactUpdateDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "VwGetCallQueueExcludedCustomersEntity", "ZipCode", "ZipCode", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 8 );
		}
		/// <summary>Inits VwGetCallsEntity's mappings</summary>
		private void InitVwGetCallsEntityMappings()
		{
			base.AddElementMapping( "VwGetCallsEntity", "Falcon", @"dbo", "Vw_GetCalls", 27 );
			base.AddElementFieldMapping( "VwGetCallsEntity", "CallId", "CallID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwGetCallsEntity", "IsNewCustomer", "IsNewCustomer", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 1 );
			base.AddElementFieldMapping( "VwGetCallsEntity", "CalledCustomerId", "CalledCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwGetCallsEntity", "TimeCreated", "TimeCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "VwGetCallsEntity", "TimeEnd", "TimeEnd", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "VwGetCallsEntity", "CallStatus", "CallStatus", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "VwGetCallsEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "VwGetCallsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "VwGetCallsEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "VwGetCallsEntity", "CallBackNumber", "CallBackNumber", false, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "VwGetCallsEntity", "IncomingPhoneLine", "IncomingPhoneLine", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "VwGetCallsEntity", "CallersPhoneNumber", "CallersPhoneNumber", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 11 );
			base.AddElementFieldMapping( "VwGetCallsEntity", "CallerName", "CallerName", false, (int)SqlDbType.NChar, 50, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "VwGetCallsEntity", "PromoCodeId", "PromoCodeID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 13 );
			base.AddElementFieldMapping( "VwGetCallsEntity", "AffiliateId", "AffiliateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 14 );
			base.AddElementFieldMapping( "VwGetCallsEntity", "OutBound", "OutBound", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 15 );
			base.AddElementFieldMapping( "VwGetCallsEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 16 );
			base.AddElementFieldMapping( "VwGetCallsEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 17 );
			base.AddElementFieldMapping( "VwGetCallsEntity", "Disposition", "Disposition", false, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 18 );
			base.AddElementFieldMapping( "VwGetCallsEntity", "ReadAndUnderstoodNotes", "ReadAndUnderstoodNotes", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 19 );
			base.AddElementFieldMapping( "VwGetCallsEntity", "IsUploaded", "IsUploaded", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 20 );
			base.AddElementFieldMapping( "VwGetCallsEntity", "CampaignId", "CampaignId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 21 );
			base.AddElementFieldMapping( "VwGetCallsEntity", "NotInterestedReasonId", "NotInterestedReasonId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 22 );
			base.AddElementFieldMapping( "VwGetCallsEntity", "HealthPlanId", "HealthPlanId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 23 );
			base.AddElementFieldMapping( "VwGetCallsEntity", "CallQueueId", "CallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 24 );
			base.AddElementFieldMapping( "VwGetCallsEntity", "CustomTags", "CustomTags", false, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 25 );
			base.AddElementFieldMapping( "VwGetCallsEntity", "IsContacted", "IsContacted", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 26 );
		}
		/// <summary>Inits VwGetCallsForCalculatingBonusEntity's mappings</summary>
		private void InitVwGetCallsForCalculatingBonusEntityMappings()
		{
			base.AddElementMapping( "VwGetCallsForCalculatingBonusEntity", "Falcon", @"dbo", "Vw_GetCallsForCalculatingBonus", 9 );
			base.AddElementFieldMapping( "VwGetCallsForCalculatingBonusEntity", "CallId", "CallID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwGetCallsForCalculatingBonusEntity", "CalledCustomerId", "CalledCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwGetCallsForCalculatingBonusEntity", "TimeCreated", "TimeCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "VwGetCallsForCalculatingBonusEntity", "TimeEnd", "TimeEnd", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "VwGetCallsForCalculatingBonusEntity", "CallStatus", "CallStatus", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "VwGetCallsForCalculatingBonusEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "VwGetCallsForCalculatingBonusEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "VwGetCallsForCalculatingBonusEntity", "OutBound", "OutBound", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "VwGetCallsForCalculatingBonusEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
		}
		/// <summary>Inits VwGetCallsForCallQueueEntity's mappings</summary>
		private void InitVwGetCallsForCallQueueEntityMappings()
		{
			base.AddElementMapping( "VwGetCallsForCallQueueEntity", "Falcon", @"dbo", "Vw_GetCallsForCallQueue", 14 );
			base.AddElementFieldMapping( "VwGetCallsForCallQueueEntity", "CallId", "CallID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwGetCallsForCallQueueEntity", "CalledCustomerId", "CalledCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwGetCallsForCallQueueEntity", "TimeCreated", "TimeCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "VwGetCallsForCallQueueEntity", "TimeEnd", "TimeEnd", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "VwGetCallsForCallQueueEntity", "CallStatus", "CallStatus", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "VwGetCallsForCallQueueEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "VwGetCallsForCallQueueEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "VwGetCallsForCallQueueEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "VwGetCallsForCallQueueEntity", "OutBound", "OutBound", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
			base.AddElementFieldMapping( "VwGetCallsForCallQueueEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "VwGetCallsForCallQueueEntity", "Disposition", "Disposition", false, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "VwGetCallsForCallQueueEntity", "CampaignId", "CampaignId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 11 );
			base.AddElementFieldMapping( "VwGetCallsForCallQueueEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "VwGetCallsForCallQueueEntity", "Tag", "Tag", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 13 );
		}
		/// <summary>Inits VwGetCallsForSuppressionEntity's mappings</summary>
		private void InitVwGetCallsForSuppressionEntityMappings()
		{
			base.AddElementMapping( "VwGetCallsForSuppressionEntity", "Falcon", @"dbo", "Vw_GetCallsForSuppression", 15 );
			base.AddElementFieldMapping( "VwGetCallsForSuppressionEntity", "CallId", "CallID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwGetCallsForSuppressionEntity", "CalledCustomerId", "CalledCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwGetCallsForSuppressionEntity", "TimeCreated", "TimeCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "VwGetCallsForSuppressionEntity", "TimeEnd", "TimeEnd", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "VwGetCallsForSuppressionEntity", "CallStatus", "CallStatus", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "VwGetCallsForSuppressionEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "VwGetCallsForSuppressionEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "VwGetCallsForSuppressionEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "VwGetCallsForSuppressionEntity", "OutBound", "OutBound", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
			base.AddElementFieldMapping( "VwGetCallsForSuppressionEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "VwGetCallsForSuppressionEntity", "Disposition", "Disposition", false, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "VwGetCallsForSuppressionEntity", "CampaignId", "CampaignId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 11 );
			base.AddElementFieldMapping( "VwGetCallsForSuppressionEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "VwGetCallsForSuppressionEntity", "AccountId", "AccountId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 13 );
			base.AddElementFieldMapping( "VwGetCallsForSuppressionEntity", "MaxDays", "maxDays", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 14 );
		}
		/// <summary>Inits VwGetConfirmationCallQueueCustomersWithoutSuppressionEntity's mappings</summary>
		private void InitVwGetConfirmationCallQueueCustomersWithoutSuppressionEntityMappings()
		{
			base.AddElementMapping( "VwGetConfirmationCallQueueCustomersWithoutSuppressionEntity", "Falcon", @"dbo", "Vw_GetConfirmationCallQueueCustomersWithoutSuppression", 20 );
			base.AddElementFieldMapping( "VwGetConfirmationCallQueueCustomersWithoutSuppressionEntity", "CallQueueCustomerId", "CallQueueCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwGetConfirmationCallQueueCustomersWithoutSuppressionEntity", "CriteriaId", "CriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwGetConfirmationCallQueueCustomersWithoutSuppressionEntity", "CallQueueId", "CallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwGetConfirmationCallQueueCustomersWithoutSuppressionEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "VwGetConfirmationCallQueueCustomersWithoutSuppressionEntity", "FirstName", "FirstName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "VwGetConfirmationCallQueueCustomersWithoutSuppressionEntity", "MiddleName", "MiddleName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "VwGetConfirmationCallQueueCustomersWithoutSuppressionEntity", "LastName", "LastName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "VwGetConfirmationCallQueueCustomersWithoutSuppressionEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "VwGetConfirmationCallQueueCustomersWithoutSuppressionEntity", "Attempts", "Attempts", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 8 );
			base.AddElementFieldMapping( "VwGetConfirmationCallQueueCustomersWithoutSuppressionEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 9 );
			base.AddElementFieldMapping( "VwGetConfirmationCallQueueCustomersWithoutSuppressionEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 10 );
			base.AddElementFieldMapping( "VwGetConfirmationCallQueueCustomersWithoutSuppressionEntity", "CallDate", "CallDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "VwGetConfirmationCallQueueCustomersWithoutSuppressionEntity", "CallCount", "CallCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "VwGetConfirmationCallQueueCustomersWithoutSuppressionEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 13 );
			base.AddElementFieldMapping( "VwGetConfirmationCallQueueCustomersWithoutSuppressionEntity", "HealthPlanId", "HealthPlanId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 14 );
			base.AddElementFieldMapping( "VwGetConfirmationCallQueueCustomersWithoutSuppressionEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 15 );
			base.AddElementFieldMapping( "VwGetConfirmationCallQueueCustomersWithoutSuppressionEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 16 );
			base.AddElementFieldMapping( "VwGetConfirmationCallQueueCustomersWithoutSuppressionEntity", "AppointmentDate", "AppointmentDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 17 );
			base.AddElementFieldMapping( "VwGetConfirmationCallQueueCustomersWithoutSuppressionEntity", "AppointmentDateTimeWithTimeZone", "AppointmentDateTimeWithTimeZone", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 18 );
			base.AddElementFieldMapping( "VwGetConfirmationCallQueueCustomersWithoutSuppressionEntity", "LanguageId", "LanguageId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 19 );
		}
		/// <summary>Inits VwGetCustomerForMailRoundInsertionEntity's mappings</summary>
		private void InitVwGetCustomerForMailRoundInsertionEntityMappings()
		{
			base.AddElementMapping( "VwGetCustomerForMailRoundInsertionEntity", "Falcon", @"dbo", "Vw_GetCustomerForMailRoundInsertion", 10 );
			base.AddElementFieldMapping( "VwGetCustomerForMailRoundInsertionEntity", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwGetCustomerForMailRoundInsertionEntity", "DoNotContactReasonId", "DoNotContactReasonId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwGetCustomerForMailRoundInsertionEntity", "DoNotContactReasonNotesId", "DoNotContactReasonNotesId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwGetCustomerForMailRoundInsertionEntity", "IsEligble", "IsEligble", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 3 );
			base.AddElementFieldMapping( "VwGetCustomerForMailRoundInsertionEntity", "IsIncorrectPhoneNumber", "IsIncorrectPhoneNumber", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "VwGetCustomerForMailRoundInsertionEntity", "IsLanguageBarrier", "IsLanguageBarrier", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "VwGetCustomerForMailRoundInsertionEntity", "ActivityId", "ActivityId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "VwGetCustomerForMailRoundInsertionEntity", "DoNotContactTypeId", "DoNotContactTypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "VwGetCustomerForMailRoundInsertionEntity", "Tag", "Tag", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "VwGetCustomerForMailRoundInsertionEntity", "ZipId", "ZipID", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 9 );
		}
		/// <summary>Inits VwGetCustomerIdsHavingSingleTagForCallQueueEntity's mappings</summary>
		private void InitVwGetCustomerIdsHavingSingleTagForCallQueueEntityMappings()
		{
			base.AddElementMapping( "VwGetCustomerIdsHavingSingleTagForCallQueueEntity", "Falcon", @"dbo", "Vw_GetCustomerIdsHavingSingleTagForCallQueue", 1 );
			base.AddElementFieldMapping( "VwGetCustomerIdsHavingSingleTagForCallQueueEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
		}
		/// <summary>Inits VwGetCustomersForCallQueueWithCustomerEntity's mappings</summary>
		private void InitVwGetCustomersForCallQueueWithCustomerEntityMappings()
		{
			base.AddElementMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "Falcon", @"dbo", "Vw_GetCustomersForCallQueueWithCustomer", 29 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "CallQueueCustomerId", "CallQueueCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "CriteriaId", "CriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "CallQueueId", "CallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "Attempts", "Attempts", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 5 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "CallDate", "CallDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "CallCount", "CallCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "ZipId", "ZipId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "HealthPlanId", "HealthPlanId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "CampaignId", "CampaignId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 13 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "EventIds", "EventIds", false, (int)SqlDbType.VarChar, 1, 0, 0, false, "", null, typeof(System.String), 14 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "FirstName", "FirstName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 15 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "MiddleName", "MiddleName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 16 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "LastName", "LastName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 17 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "ZipCode", "ZipCode", false, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 18 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "IsLanguageBarrier", "IsLanguageBarrier", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 19 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "CallStatus", "CallStatus", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 20 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "ContactedDate", "ContactedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 21 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "Disposition", "Disposition", false, (int)SqlDbType.NVarChar, 400, 0, 0, false, "", null, typeof(System.String), 22 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "AppointmentDate", "AppointmentDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 23 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "AppointmentCancellationDate", "AppointmentCancellationDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 24 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "LanguageBarrierMarkedDate", "LanguageBarrierMarkedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 25 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "IncorrectPhoneNumberMarkedDate", "IncorrectPhoneNumberMarkedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 26 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "NoShowDate", "NoShowDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 27 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerEntity", "ProductTypeId", "ProductTypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 28 );
		}
		/// <summary>Inits VwGetCustomersForCallQueueWithCustomerViciEntity's mappings</summary>
		private void InitVwGetCustomersForCallQueueWithCustomerViciEntityMappings()
		{
			base.AddElementMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "Falcon", @"dbo", "Vw_GetCustomersForCallQueueWithCustomerVici", 29 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "CallQueueCustomerId", "CallQueueCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "CriteriaId", "CriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "CallQueueId", "CallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "Attempts", "Attempts", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 5 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "CallDate", "CallDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "CallCount", "CallCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "ZipId", "ZipId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "HealthPlanId", "HealthPlanId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "CampaignId", "CampaignId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 13 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "EventIds", "EventIds", false, (int)SqlDbType.VarChar, 1, 0, 0, false, "", null, typeof(System.String), 14 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "FirstName", "FirstName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 15 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "MiddleName", "MiddleName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 16 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "LastName", "LastName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 17 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "ZipCode", "ZipCode", false, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 18 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "IsLanguageBarrier", "IsLanguageBarrier", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 19 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "CallStatus", "CallStatus", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 20 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "ContactedDate", "ContactedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 21 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "Disposition", "Disposition", false, (int)SqlDbType.NVarChar, 400, 0, 0, false, "", null, typeof(System.String), 22 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "AppointmentDate", "AppointmentDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 23 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "AppointmentCancellationDate", "AppointmentCancellationDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 24 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "LanguageBarrierMarkedDate", "LanguageBarrierMarkedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 25 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "IncorrectPhoneNumberMarkedDate", "IncorrectPhoneNumberMarkedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 26 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "NoShowDate", "NoShowDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 27 );
			base.AddElementFieldMapping( "VwGetCustomersForCallQueueWithCustomerViciEntity", "ProductTypeId", "ProductTypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 28 );
		}
		/// <summary>Inits VwGetCustomersForConfirmationCallQueueEntity's mappings</summary>
		private void InitVwGetCustomersForConfirmationCallQueueEntityMappings()
		{
			base.AddElementMapping( "VwGetCustomersForConfirmationCallQueueEntity", "Falcon", @"dbo", "Vw_GetCustomersForConfirmationCallQueue", 20 );
			base.AddElementFieldMapping( "VwGetCustomersForConfirmationCallQueueEntity", "CallQueueCustomerId", "CallQueueCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwGetCustomersForConfirmationCallQueueEntity", "CriteriaId", "CriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwGetCustomersForConfirmationCallQueueEntity", "CallQueueId", "CallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwGetCustomersForConfirmationCallQueueEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "VwGetCustomersForConfirmationCallQueueEntity", "FirstName", "FirstName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "VwGetCustomersForConfirmationCallQueueEntity", "MiddleName", "MiddleName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "VwGetCustomersForConfirmationCallQueueEntity", "LastName", "LastName", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "VwGetCustomersForConfirmationCallQueueEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "VwGetCustomersForConfirmationCallQueueEntity", "Attempts", "Attempts", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 8 );
			base.AddElementFieldMapping( "VwGetCustomersForConfirmationCallQueueEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 9 );
			base.AddElementFieldMapping( "VwGetCustomersForConfirmationCallQueueEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 10 );
			base.AddElementFieldMapping( "VwGetCustomersForConfirmationCallQueueEntity", "CallDate", "CallDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "VwGetCustomersForConfirmationCallQueueEntity", "CallCount", "CallCount", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "VwGetCustomersForConfirmationCallQueueEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 13 );
			base.AddElementFieldMapping( "VwGetCustomersForConfirmationCallQueueEntity", "HealthPlanId", "HealthPlanId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 14 );
			base.AddElementFieldMapping( "VwGetCustomersForConfirmationCallQueueEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 15 );
			base.AddElementFieldMapping( "VwGetCustomersForConfirmationCallQueueEntity", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 16 );
			base.AddElementFieldMapping( "VwGetCustomersForConfirmationCallQueueEntity", "AppointmentDate", "AppointmentDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 17 );
			base.AddElementFieldMapping( "VwGetCustomersForConfirmationCallQueueEntity", "AppointmentDateTimeWithTimeZone", "AppointmentDateTimeWithTimeZone", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 18 );
			base.AddElementFieldMapping( "VwGetCustomersForConfirmationCallQueueEntity", "LanguageId", "LanguageId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 19 );
		}
		/// <summary>Inits VwGetCustomersForNotInCallQueueEntity's mappings</summary>
		private void InitVwGetCustomersForNotInCallQueueEntityMappings()
		{
			base.AddElementMapping( "VwGetCustomersForNotInCallQueueEntity", "Falcon", @"dbo", "Vw_GetCustomersForNotInCallQueue", 17 );
			base.AddElementFieldMapping( "VwGetCustomersForNotInCallQueueEntity", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwGetCustomersForNotInCallQueueEntity", "Gender", "Gender", false, (int)SqlDbType.NVarChar, 20, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "VwGetCustomersForNotInCallQueueEntity", "Race", "Race", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "VwGetCustomersForNotInCallQueueEntity", "DoNotContactReasonId", "DoNotContactReasonId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "VwGetCustomersForNotInCallQueueEntity", "DoNotContactReasonNotesId", "DoNotContactReasonNotesId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "VwGetCustomersForNotInCallQueueEntity", "RequestNewsLetter", "RequestNewsLetter", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "VwGetCustomersForNotInCallQueueEntity", "IsEligble", "IsEligble", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "VwGetCustomersForNotInCallQueueEntity", "IsIncorrectPhoneNumber", "IsIncorrectPhoneNumber", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "VwGetCustomersForNotInCallQueueEntity", "IsLanguageBarrier", "IsLanguageBarrier", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
			base.AddElementFieldMapping( "VwGetCustomersForNotInCallQueueEntity", "ActivityId", "ActivityId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "VwGetCustomersForNotInCallQueueEntity", "DoNotContactTypeId", "DoNotContactTypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
			base.AddElementFieldMapping( "VwGetCustomersForNotInCallQueueEntity", "BillingAddressId", "BillingAddressID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 11 );
			base.AddElementFieldMapping( "VwGetCustomersForNotInCallQueueEntity", "InsuranceId", "InsuranceId", false, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "VwGetCustomersForNotInCallQueueEntity", "Tag", "Tag", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "VwGetCustomersForNotInCallQueueEntity", "ZipId", "ZipID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 14 );
			base.AddElementFieldMapping( "VwGetCustomersForNotInCallQueueEntity", "AccountId", "AccountID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 15 );
			base.AddElementFieldMapping( "VwGetCustomersForNotInCallQueueEntity", "ZipCode", "ZipCode", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 16 );
		}
		/// <summary>Inits VwGetCustomersToGenerateCallQueueEntity's mappings</summary>
		private void InitVwGetCustomersToGenerateCallQueueEntityMappings()
		{
			base.AddElementMapping( "VwGetCustomersToGenerateCallQueueEntity", "Falcon", @"dbo", "Vw_GetCustomersToGenerateCallQueue", 17 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateCallQueueEntity", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateCallQueueEntity", "Gender", "Gender", false, (int)SqlDbType.NVarChar, 20, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateCallQueueEntity", "Race", "Race", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateCallQueueEntity", "DoNotContactReasonId", "DoNotContactReasonId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateCallQueueEntity", "DoNotContactReasonNotesId", "DoNotContactReasonNotesId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateCallQueueEntity", "RequestNewsLetter", "RequestNewsLetter", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateCallQueueEntity", "IsEligble", "IsEligble", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 6 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateCallQueueEntity", "IsIncorrectPhoneNumber", "IsIncorrectPhoneNumber", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateCallQueueEntity", "IsLanguageBarrier", "IsLanguageBarrier", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 8 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateCallQueueEntity", "ActivityId", "ActivityId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateCallQueueEntity", "DoNotContactTypeId", "DoNotContactTypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateCallQueueEntity", "BillingAddressId", "BillingAddressID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 11 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateCallQueueEntity", "InsuranceId", "InsuranceId", false, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateCallQueueEntity", "Tag", "Tag", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateCallQueueEntity", "ZipId", "ZipID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 14 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateCallQueueEntity", "LanguageBarrierMarkedDate", "LanguageBarrierMarkedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 15 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateCallQueueEntity", "IncorrectPhoneNumberMarkedDate", "IncorrectPhoneNumberMarkedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 16 );
		}
		/// <summary>Inits VwGetCustomersToGenerateConfirmationCallQueueEntity's mappings</summary>
		private void InitVwGetCustomersToGenerateConfirmationCallQueueEntityMappings()
		{
			base.AddElementMapping( "VwGetCustomersToGenerateConfirmationCallQueueEntity", "Falcon", @"dbo", "Vw_GetCustomersToGenerateConfirmationCallQueue", 10 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateConfirmationCallQueueEntity", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateConfirmationCallQueueEntity", "Tag", "Tag", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateConfirmationCallQueueEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateConfirmationCallQueueEntity", "EventDate", "EventDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateConfirmationCallQueueEntity", "EventCustomerId", "EventCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateConfirmationCallQueueEntity", "AppointmentTime", "AppointmentTime", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateConfirmationCallQueueEntity", "TimeZone", "TimeZone", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateConfirmationCallQueueEntity", "StateId", "StateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateConfirmationCallQueueEntity", "StateCode", "StateCode", false, (int)SqlDbType.VarChar, 2, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateConfirmationCallQueueEntity", "LanguageId", "LanguageId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
		}
		/// <summary>Inits VwGetCustomersToGenerateFillEventCallQueueEntity's mappings</summary>
		private void InitVwGetCustomersToGenerateFillEventCallQueueEntityMappings()
		{
			base.AddElementMapping( "VwGetCustomersToGenerateFillEventCallQueueEntity", "Falcon", @"dbo", "Vw_GetCustomersToGenerateFillEventCallQueue", 7 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateFillEventCallQueueEntity", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateFillEventCallQueueEntity", "IsLanguageBarrier", "IsLanguageBarrier", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 1 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateFillEventCallQueueEntity", "Tag", "Tag", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateFillEventCallQueueEntity", "LanguageBarrierMarkedDate", "LanguageBarrierMarkedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateFillEventCallQueueEntity", "IsMammoPatient", "IsMammoPatient", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateFillEventCallQueueEntity", "ZipId", "ZipID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateFillEventCallQueueEntity", "ProductTypeId", "ProductTypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
		}
		/// <summary>Inits VwGetCustomersToGenerateFillEventCallQueue_Entity's mappings</summary>
		private void InitVwGetCustomersToGenerateFillEventCallQueue_EntityMappings()
		{
			base.AddElementMapping( "VwGetCustomersToGenerateFillEventCallQueue_Entity", "Falcon", @"dbo", "Vw_GetCustomersToGenerateFillEventCallQueue", 7 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateFillEventCallQueue_Entity", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateFillEventCallQueue_Entity", "IsLanguageBarrier", "IsLanguageBarrier", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 1 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateFillEventCallQueue_Entity", "Tag", "Tag", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateFillEventCallQueue_Entity", "LanguageBarrierMarkedDate", "LanguageBarrierMarkedDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateFillEventCallQueue_Entity", "IsMammoPatient", "IsMammoPatient", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateFillEventCallQueue_Entity", "ZipId", "ZipID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "VwGetCustomersToGenerateFillEventCallQueue_Entity", "ProductTypeId", "ProductTypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
		}
		/// <summary>Inits VwGetCustomerTagForCallQueueEntity's mappings</summary>
		private void InitVwGetCustomerTagForCallQueueEntityMappings()
		{
			base.AddElementMapping( "VwGetCustomerTagForCallQueueEntity", "Falcon", @"dbo", "Vw_GetCustomerTagForCallQueue", 8 );
			base.AddElementFieldMapping( "VwGetCustomerTagForCallQueueEntity", "CustomerTagId", "CustomerTagId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwGetCustomerTagForCallQueueEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwGetCustomerTagForCallQueueEntity", "Tag", "Tag", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "VwGetCustomerTagForCallQueueEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "VwGetCustomerTagForCallQueueEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "VwGetCustomerTagForCallQueueEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "VwGetCustomerTagForCallQueueEntity", "ModifiedByOrgRoleUserId", "ModifiedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "VwGetCustomerTagForCallQueueEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
		}
		/// <summary>Inits VwGetDataForSkippedCallReportEntity's mappings</summary>
		private void InitVwGetDataForSkippedCallReportEntityMappings()
		{
			base.AddElementMapping( "VwGetDataForSkippedCallReportEntity", "Falcon", @"dbo", "vw_GetDataForSkippedCallReport", 9 );
			base.AddElementFieldMapping( "VwGetDataForSkippedCallReportEntity", "CallId", "CallId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwGetDataForSkippedCallReportEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwGetDataForSkippedCallReportEntity", "AgentId", "AgentId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwGetDataForSkippedCallReportEntity", "CallQueueCustomerId", "CallQueueCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "VwGetDataForSkippedCallReportEntity", "CallAttemptId", "CallAttemptId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "VwGetDataForSkippedCallReportEntity", "SkipCallNote", "SkipCallNote", false, (int)SqlDbType.VarChar, 5000, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "VwGetDataForSkippedCallReportEntity", "HealthPlanId", "HealthPlanId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "VwGetDataForSkippedCallReportEntity", "CallQueueId", "CallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "VwGetDataForSkippedCallReportEntity", "SkipCallDate", "SkipCallDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
		}
		/// <summary>Inits VwGetDirectMailForCallQueueEntity's mappings</summary>
		private void InitVwGetDirectMailForCallQueueEntityMappings()
		{
			base.AddElementMapping( "VwGetDirectMailForCallQueueEntity", "Falcon", @"dbo", "Vw_GetDirectMailForCallQueue", 9 );
			base.AddElementFieldMapping( "VwGetDirectMailForCallQueueEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwGetDirectMailForCallQueueEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwGetDirectMailForCallQueueEntity", "MailDate", "MailDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "VwGetDirectMailForCallQueueEntity", "MailedBy", "MailedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "VwGetDirectMailForCallQueueEntity", "CallUploadId", "CallUploadId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "VwGetDirectMailForCallQueueEntity", "CampaignId", "CampaignId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "VwGetDirectMailForCallQueueEntity", "DirectMailTypeId", "DirectMailTypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "VwGetDirectMailForCallQueueEntity", "IsInvalidAddress", "IsInvalidAddress", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "VwGetDirectMailForCallQueueEntity", "Notes", "Notes", false, (int)SqlDbType.NVarChar, 500, 0, 0, false, "", null, typeof(System.String), 8 );
		}
		/// <summary>Inits VwGetEventCustomerEawvTestInOrderEntity's mappings</summary>
		private void InitVwGetEventCustomerEawvTestInOrderEntityMappings()
		{
			base.AddElementMapping( "VwGetEventCustomerEawvTestInOrderEntity", "Falcon", @"dbo", "Vw_GetEventCustomerEawvTestInOrder", 4 );
			base.AddElementFieldMapping( "VwGetEventCustomerEawvTestInOrderEntity", "EventCustomerId", "EventCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwGetEventCustomerEawvTestInOrderEntity", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwGetEventCustomerEawvTestInOrderEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwGetEventCustomerEawvTestInOrderEntity", "OrderId", "OrderID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
		}
		/// <summary>Inits VwGetHkynTestCustomersEntity's mappings</summary>
		private void InitVwGetHkynTestCustomersEntityMappings()
		{
			base.AddElementMapping( "VwGetHkynTestCustomersEntity", "Falcon", @"dbo", "vw_GetHkynTestCustomers", 2 );
			base.AddElementFieldMapping( "VwGetHkynTestCustomersEntity", "EventCustomerId", "EventCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwGetHkynTestCustomersEntity", "OrderId", "OrderID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits VwGetKynTestCustomersEntity's mappings</summary>
		private void InitVwGetKynTestCustomersEntityMappings()
		{
			base.AddElementMapping( "VwGetKynTestCustomersEntity", "Falcon", @"dbo", "vw_GetKynTestCustomers", 2 );
			base.AddElementFieldMapping( "VwGetKynTestCustomersEntity", "EventCustomerId", "EventCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwGetKynTestCustomersEntity", "OrderId", "OrderID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits VwGetMyBioCheckTestCustomersEntity's mappings</summary>
		private void InitVwGetMyBioCheckTestCustomersEntityMappings()
		{
			base.AddElementMapping( "VwGetMyBioCheckTestCustomersEntity", "Falcon", @"dbo", "vw_GetMyBioCheckTestCustomers", 2 );
			base.AddElementFieldMapping( "VwGetMyBioCheckTestCustomersEntity", "EventCustomerId", "EventCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwGetMyBioCheckTestCustomersEntity", "OrderId", "OrderID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
		}
		/// <summary>Inits VwGetOutboundCallsEntity's mappings</summary>
		private void InitVwGetOutboundCallsEntityMappings()
		{
			base.AddElementMapping( "VwGetOutboundCallsEntity", "Falcon", @"dbo", "Vw_GetOutboundCalls", 25 );
			base.AddElementFieldMapping( "VwGetOutboundCallsEntity", "CallId", "CallID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwGetOutboundCallsEntity", "IsNewCustomer", "IsNewCustomer", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 1 );
			base.AddElementFieldMapping( "VwGetOutboundCallsEntity", "CalledCustomerId", "CalledCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwGetOutboundCallsEntity", "TimeCreated", "TimeCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "VwGetOutboundCallsEntity", "TimeEnd", "TimeEnd", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "VwGetOutboundCallsEntity", "CallStatus", "CallStatus", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "VwGetOutboundCallsEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "VwGetOutboundCallsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "VwGetOutboundCallsEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "VwGetOutboundCallsEntity", "CallBackNumber", "CallBackNumber", false, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "VwGetOutboundCallsEntity", "IncomingPhoneLine", "IncomingPhoneLine", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "VwGetOutboundCallsEntity", "CallersPhoneNumber", "CallersPhoneNumber", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 11 );
			base.AddElementFieldMapping( "VwGetOutboundCallsEntity", "CallerName", "CallerName", false, (int)SqlDbType.NChar, 50, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "VwGetOutboundCallsEntity", "PromoCodeId", "PromoCodeID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 13 );
			base.AddElementFieldMapping( "VwGetOutboundCallsEntity", "AffiliateId", "AffiliateID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 14 );
			base.AddElementFieldMapping( "VwGetOutboundCallsEntity", "OutBound", "OutBound", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 15 );
			base.AddElementFieldMapping( "VwGetOutboundCallsEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 16 );
			base.AddElementFieldMapping( "VwGetOutboundCallsEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 17 );
			base.AddElementFieldMapping( "VwGetOutboundCallsEntity", "Disposition", "Disposition", false, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 18 );
			base.AddElementFieldMapping( "VwGetOutboundCallsEntity", "ReadAndUnderstoodNotes", "ReadAndUnderstoodNotes", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 19 );
			base.AddElementFieldMapping( "VwGetOutboundCallsEntity", "IsUploaded", "IsUploaded", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 20 );
			base.AddElementFieldMapping( "VwGetOutboundCallsEntity", "CampaignId", "CampaignId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 21 );
			base.AddElementFieldMapping( "VwGetOutboundCallsEntity", "NotInterestedReasonId", "NotInterestedReasonId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 22 );
			base.AddElementFieldMapping( "VwGetOutboundCallsEntity", "HealthPlanId", "HealthPlanId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 23 );
			base.AddElementFieldMapping( "VwGetOutboundCallsEntity", "CallQueueId", "CallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 24 );
		}
		/// <summary>Inits VwGetTestPerformedReportEntity's mappings</summary>
		private void InitVwGetTestPerformedReportEntityMappings()
		{
			base.AddElementMapping( "VwGetTestPerformedReportEntity", "Falcon", @"dbo", "Vw_GetTestPerformedReport", 26 );
			base.AddElementFieldMapping( "VwGetTestPerformedReportEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwGetTestPerformedReportEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwGetTestPerformedReportEntity", "EventDate", "EventDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "VwGetTestPerformedReportEntity", "Pod", "Pod", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "VwGetTestPerformedReportEntity", "AccountId", "AccountId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "VwGetTestPerformedReportEntity", "IsHealthPlan", "IsHealthPlan", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "VwGetTestPerformedReportEntity", "CustomerEventTestStateId", "CustomerEventTestStateId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "VwGetTestPerformedReportEntity", "CustomerEventScreeningTestId", "CustomerEventScreeningTestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "VwGetTestPerformedReportEntity", "EvaluationState", "EvaluationState", false, (int)SqlDbType.TinyInt, 0, 0, 3, false, "", null, typeof(System.Byte), 8 );
			base.AddElementFieldMapping( "VwGetTestPerformedReportEntity", "IsPartial", "IsPartial", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 9 );
			base.AddElementFieldMapping( "VwGetTestPerformedReportEntity", "IsCritical", "IsCritical", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 10 );
			base.AddElementFieldMapping( "VwGetTestPerformedReportEntity", "SelfPresent", "SelfPresent", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 11 );
			base.AddElementFieldMapping( "VwGetTestPerformedReportEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 12 );
			base.AddElementFieldMapping( "VwGetTestPerformedReportEntity", "CreatedOn", "CreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 13 );
			base.AddElementFieldMapping( "VwGetTestPerformedReportEntity", "IsTestNotPerformed", "IsTestNotPerformed", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 14 );
			base.AddElementFieldMapping( "VwGetTestPerformedReportEntity", "ConductedByOrgRoleUserId", "ConductedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 15 );
			base.AddElementFieldMapping( "VwGetTestPerformedReportEntity", "EvaluatedByOrgRoleUserId", "EvaluatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 16 );
			base.AddElementFieldMapping( "VwGetTestPerformedReportEntity", "TechnicianNotes", "TechnicianNotes", false, (int)SqlDbType.VarChar, 2000, 0, 0, false, "", null, typeof(System.String), 17 );
			base.AddElementFieldMapping( "VwGetTestPerformedReportEntity", "UpdatedByOrgRoleUserId", "UpdatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 18 );
			base.AddElementFieldMapping( "VwGetTestPerformedReportEntity", "UpdatedOn", "UpdatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 19 );
			base.AddElementFieldMapping( "VwGetTestPerformedReportEntity", "IsNoteManualEntered", "IsNoteManualEntered", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 20 );
			base.AddElementFieldMapping( "VwGetTestPerformedReportEntity", "TestSummary", "TestSummary", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 21 );
			base.AddElementFieldMapping( "VwGetTestPerformedReportEntity", "PathwayRecommendation", "PathwayRecommendation", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 22 );
			base.AddElementFieldMapping( "VwGetTestPerformedReportEntity", "IsPriorityInQueue", "IsPriorityInQueue", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 23 );
			base.AddElementFieldMapping( "VwGetTestPerformedReportEntity", "TestId", "TestId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 24 );
			base.AddElementFieldMapping( "VwGetTestPerformedReportEntity", "IsPdfGenerated", "IsPdfGenerated", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 25 );
		}
		/// <summary>Inits VwHospitalPartnerCustomersEntity's mappings</summary>
		private void InitVwHospitalPartnerCustomersEntityMappings()
		{
			base.AddElementMapping( "VwHospitalPartnerCustomersEntity", "Falcon", @"dbo", "vw_HospitalPartnerCustomers", 11 );
			base.AddElementFieldMapping( "VwHospitalPartnerCustomersEntity", "HospitalPartnerCustomerId", "HospitalPartnerCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwHospitalPartnerCustomersEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwHospitalPartnerCustomersEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwHospitalPartnerCustomersEntity", "Status", "Status", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 3 );
			base.AddElementFieldMapping( "VwHospitalPartnerCustomersEntity", "Outcome", "Outcome", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 4 );
			base.AddElementFieldMapping( "VwHospitalPartnerCustomersEntity", "CareCoordinatorOrgRoleUserId", "CareCoordinatorOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "VwHospitalPartnerCustomersEntity", "Notes", "Notes", false, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "VwHospitalPartnerCustomersEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "VwHospitalPartnerCustomersEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "VwHospitalPartnerCustomersEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "VwHospitalPartnerCustomersEntity", "ModifiedByOrgRoleUserId", "ModifiedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 10 );
		}
		/// <summary>Inits VwHostEventDetailsEntity's mappings</summary>
		private void InitVwHostEventDetailsEntityMappings()
		{
			base.AddElementMapping( "VwHostEventDetailsEntity", "Falcon", @"dbo", "Vw_HostEventDetails", 15 );
			base.AddElementFieldMapping( "VwHostEventDetailsEntity", "HostEventId", "HostEventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwHostEventDetailsEntity", "HostId", "HostID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwHostEventDetailsEntity", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwHostEventDetailsEntity", "BConfirmMinRequirements", "bConfirmMinRequirements", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 3 );
			base.AddElementFieldMapping( "VwHostEventDetailsEntity", "BConfirmedVisually", "bConfirmedVisually", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 4 );
			base.AddElementFieldMapping( "VwHostEventDetailsEntity", "ConfirmedVisuallyComments", "ConfirmedVisuallyComments", false, (int)SqlDbType.VarChar, 5000, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "VwHostEventDetailsEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "VwHostEventDetailsEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "VwHostEventDetailsEntity", "DepositAmount", "DepositAmount", false, (int)SqlDbType.Decimal, 0, 2, 18, false, "", null, typeof(System.Decimal), 8 );
			base.AddElementFieldMapping( "VwHostEventDetailsEntity", "PayByCheck", "PayByCheck", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 9 );
			base.AddElementFieldMapping( "VwHostEventDetailsEntity", "PayByCreditCard", "PayByCreditCard", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 10 );
			base.AddElementFieldMapping( "VwHostEventDetailsEntity", "PaymentDueDate", "PaymentDueDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "VwHostEventDetailsEntity", "DepositDueDate", "DepositDueDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 12 );
			base.AddElementFieldMapping( "VwHostEventDetailsEntity", "InstructionForCallCenter", "InstructionForCallCenter", false, (int)SqlDbType.VarChar, 5000, 0, 0, false, "", null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "VwHostEventDetailsEntity", "IsHostRatedbyTechnician", "IsHostRatedbyTechnician", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 14 );
		}
		/// <summary>Inits VwLanguageBarrierCallQueueCriteraAssignmentEntity's mappings</summary>
		private void InitVwLanguageBarrierCallQueueCriteraAssignmentEntityMappings()
		{
			base.AddElementMapping( "VwLanguageBarrierCallQueueCriteraAssignmentEntity", "Falcon", @"dbo", "Vw_LanguageBarrierCallQueueCriteraAssignment", 14 );
			base.AddElementFieldMapping( "VwLanguageBarrierCallQueueCriteraAssignmentEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwLanguageBarrierCallQueueCriteraAssignmentEntity", "CriteriaId", "CriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwLanguageBarrierCallQueueCriteraAssignmentEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwLanguageBarrierCallQueueCriteraAssignmentEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "VwLanguageBarrierCallQueueCriteraAssignmentEntity", "Attempt", "Attempt", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "VwLanguageBarrierCallQueueCriteraAssignmentEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "VwLanguageBarrierCallQueueCriteraAssignmentEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "VwLanguageBarrierCallQueueCriteraAssignmentEntity", "ModifiedBy", "ModifiedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "VwLanguageBarrierCallQueueCriteraAssignmentEntity", "CallDate", "CallDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "VwLanguageBarrierCallQueueCriteraAssignmentEntity", "HealthPlanId", "HealthPlanId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "VwLanguageBarrierCallQueueCriteraAssignmentEntity", "CallCount", "CallCount", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 10 );
			base.AddElementFieldMapping( "VwLanguageBarrierCallQueueCriteraAssignmentEntity", "TagCount", "TagCount", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 11 );
			base.AddElementFieldMapping( "VwLanguageBarrierCallQueueCriteraAssignmentEntity", "Tags", "Tags", false, (int)SqlDbType.NVarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "VwLanguageBarrierCallQueueCriteraAssignmentEntity", "ZipId", "ZipID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 13 );
		}
		/// <summary>Inits VwMailRoundCallQueueCriteraAssignmentEntity's mappings</summary>
		private void InitVwMailRoundCallQueueCriteraAssignmentEntityMappings()
		{
			base.AddElementMapping( "VwMailRoundCallQueueCriteraAssignmentEntity", "Falcon", @"dbo", "Vw_MailRoundCallQueueCriteraAssignment", 14 );
			base.AddElementFieldMapping( "VwMailRoundCallQueueCriteraAssignmentEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwMailRoundCallQueueCriteraAssignmentEntity", "CriteriaId", "CriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwMailRoundCallQueueCriteraAssignmentEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwMailRoundCallQueueCriteraAssignmentEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "VwMailRoundCallQueueCriteraAssignmentEntity", "Attempt", "Attempt", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "VwMailRoundCallQueueCriteraAssignmentEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "VwMailRoundCallQueueCriteraAssignmentEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "VwMailRoundCallQueueCriteraAssignmentEntity", "ModifiedBy", "ModifiedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "VwMailRoundCallQueueCriteraAssignmentEntity", "CallDate", "CallDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "VwMailRoundCallQueueCriteraAssignmentEntity", "HealthPlanId", "HealthPlanId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "VwMailRoundCallQueueCriteraAssignmentEntity", "CallCount", "CallCount", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 10 );
			base.AddElementFieldMapping( "VwMailRoundCallQueueCriteraAssignmentEntity", "TagCount", "TagCount", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 11 );
			base.AddElementFieldMapping( "VwMailRoundCallQueueCriteraAssignmentEntity", "Tags", "Tags", false, (int)SqlDbType.NVarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "VwMailRoundCallQueueCriteraAssignmentEntity", "ZipId", "ZipID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 13 );
		}
		/// <summary>Inits VwOutreachCallReportEntity's mappings</summary>
		private void InitVwOutreachCallReportEntityMappings()
		{
			base.AddElementMapping( "VwOutreachCallReportEntity", "Falcon", @"dbo", "Vw_OutreachCallReport", 26 );
			base.AddElementFieldMapping( "VwOutreachCallReportEntity", "CallId", "CallID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwOutreachCallReportEntity", "IsNewCustomer", "IsNewCustomer", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 1 );
			base.AddElementFieldMapping( "VwOutreachCallReportEntity", "CalledCustomerId", "CalledCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwOutreachCallReportEntity", "TimeCreated", "TimeCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "VwOutreachCallReportEntity", "TimeEnd", "TimeEnd", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "VwOutreachCallReportEntity", "CallStatus", "CallStatus", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "VwOutreachCallReportEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "VwOutreachCallReportEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "VwOutreachCallReportEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "VwOutreachCallReportEntity", "CallBackNumber", "CallBackNumber", false, (int)SqlDbType.VarChar, 100, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "VwOutreachCallReportEntity", "IncomingPhoneLine", "IncomingPhoneLine", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "VwOutreachCallReportEntity", "CallersPhoneNumber", "CallersPhoneNumber", false, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 11 );
			base.AddElementFieldMapping( "VwOutreachCallReportEntity", "OutBound", "OutBound", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 12 );
			base.AddElementFieldMapping( "VwOutreachCallReportEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 13 );
			base.AddElementFieldMapping( "VwOutreachCallReportEntity", "CreatedByOrgRoleUserId", "CreatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 14 );
			base.AddElementFieldMapping( "VwOutreachCallReportEntity", "Disposition", "Disposition", false, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 15 );
			base.AddElementFieldMapping( "VwOutreachCallReportEntity", "ReadAndUnderstoodNotes", "ReadAndUnderstoodNotes", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 16 );
			base.AddElementFieldMapping( "VwOutreachCallReportEntity", "IsUploaded", "IsUploaded", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 17 );
			base.AddElementFieldMapping( "VwOutreachCallReportEntity", "CampaignId", "CampaignId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 18 );
			base.AddElementFieldMapping( "VwOutreachCallReportEntity", "NotInterestedReasonId", "NotInterestedReasonId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 19 );
			base.AddElementFieldMapping( "VwOutreachCallReportEntity", "CustomTags", "CustomTags", false, (int)SqlDbType.VarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 20 );
			base.AddElementFieldMapping( "VwOutreachCallReportEntity", "AccountId", "AccountId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 21 );
			base.AddElementFieldMapping( "VwOutreachCallReportEntity", "Tag", "Tag", false, (int)SqlDbType.VarChar, 255, 0, 0, false, "", null, typeof(System.String), 22 );
			base.AddElementFieldMapping( "VwOutreachCallReportEntity", "CallQueueId", "CallQueueId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 23 );
			base.AddElementFieldMapping( "VwOutreachCallReportEntity", "IsContacted", "IsContacted", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 24 );
			base.AddElementFieldMapping( "VwOutreachCallReportEntity", "ProductTypeId", "ProductTypeId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 25 );
		}
		/// <summary>Inits VwPcpAppointmetnDispositionEntity's mappings</summary>
		private void InitVwPcpAppointmetnDispositionEntityMappings()
		{
			base.AddElementMapping( "VwPcpAppointmetnDispositionEntity", "Falcon", @"dbo", "vw_PcpAppointmetnDisposition", 6 );
			base.AddElementFieldMapping( "VwPcpAppointmetnDispositionEntity", "EventCustomerId", "EventCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwPcpAppointmetnDispositionEntity", "PcpAppointment", "PcpAppointment", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 1 );
			base.AddElementFieldMapping( "VwPcpAppointmetnDispositionEntity", "PcpAppointmentLastModified", "PcpAppointmentLastModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 2 );
			base.AddElementFieldMapping( "VwPcpAppointmetnDispositionEntity", "PcpDispositionId", "PcpDispositionId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "VwPcpAppointmetnDispositionEntity", "PcpDispositionLastModified", "PcpDispositionLastModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "VwPcpAppointmetnDispositionEntity", "LastModified", "LastModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
		}
		/// <summary>Inits VwPhysicianQueueRecordEntity's mappings</summary>
		private void InitVwPhysicianQueueRecordEntityMappings()
		{
			base.AddElementMapping( "VwPhysicianQueueRecordEntity", "Falcon", @"dbo", "vw_PhysicianQueueRecord", 16 );
			base.AddElementFieldMapping( "VwPhysicianQueueRecordEntity", "EventCustomerResultId", "EventCustomerResultId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwPhysicianQueueRecordEntity", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwPhysicianQueueRecordEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwPhysicianQueueRecordEntity", "PhysicianId", "PhysicianId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "VwPhysicianQueueRecordEntity", "OverreadPhysicianId", "OverreadPhysicianId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "VwPhysicianQueueRecordEntity", "IsAtOverreadState", "IsAtOverreadState", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
			base.AddElementFieldMapping( "VwPhysicianQueueRecordEntity", "EvaluatedByOrgRoleUserId", "EvaluatedByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "VwPhysicianQueueRecordEntity", "CriticalMarkedByTechnician", "CriticalMarkedByTechnician", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 7 );
			base.AddElementFieldMapping( "VwPhysicianQueueRecordEntity", "ResultSummary", "ResultSummary", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "VwPhysicianQueueRecordEntity", "SentBackatPrimaryEval", "SentBackatPrimaryEval", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 9 );
			base.AddElementFieldMapping( "VwPhysicianQueueRecordEntity", "SentBackatOverread", "SentBackatOverread", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 10 );
			base.AddElementFieldMapping( "VwPhysicianQueueRecordEntity", "InQueuePriority", "InQueuePriority", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 11 );
			base.AddElementFieldMapping( "VwPhysicianQueueRecordEntity", "UpdatedOn", "UpdatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 12 );
			base.AddElementFieldMapping( "VwPhysicianQueueRecordEntity", "CriticalChatTest", "CriticalChatTest", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 13 );
			base.AddElementFieldMapping( "VwPhysicianQueueRecordEntity", "CriticalChatDate", "CriticalChatDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 14 );
			base.AddElementFieldMapping( "VwPhysicianQueueRecordEntity", "CriticalHiptest", "CriticalHIPTest", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 15 );
		}
		/// <summary>Inits VwUncontactedCustomerCallQueueCriteraAssignmentEntity's mappings</summary>
		private void InitVwUncontactedCustomerCallQueueCriteraAssignmentEntityMappings()
		{
			base.AddElementMapping( "VwUncontactedCustomerCallQueueCriteraAssignmentEntity", "Falcon", @"dbo", "Vw_UncontactedCustomerCallQueueCriteraAssignment", 14 );
			base.AddElementFieldMapping( "VwUncontactedCustomerCallQueueCriteraAssignmentEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "VwUncontactedCustomerCallQueueCriteraAssignmentEntity", "CriteriaId", "CriteriaId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "VwUncontactedCustomerCallQueueCriteraAssignmentEntity", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "VwUncontactedCustomerCallQueueCriteraAssignmentEntity", "Status", "Status", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "VwUncontactedCustomerCallQueueCriteraAssignmentEntity", "Attempt", "Attempt", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "VwUncontactedCustomerCallQueueCriteraAssignmentEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "VwUncontactedCustomerCallQueueCriteraAssignmentEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 6 );
			base.AddElementFieldMapping( "VwUncontactedCustomerCallQueueCriteraAssignmentEntity", "ModifiedBy", "ModifiedBy", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 7 );
			base.AddElementFieldMapping( "VwUncontactedCustomerCallQueueCriteraAssignmentEntity", "CallDate", "CallDate", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "VwUncontactedCustomerCallQueueCriteraAssignmentEntity", "HealthPlanId", "HealthPlanId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "VwUncontactedCustomerCallQueueCriteraAssignmentEntity", "CallCount", "CallCount", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 10 );
			base.AddElementFieldMapping( "VwUncontactedCustomerCallQueueCriteraAssignmentEntity", "TagCount", "TagCount", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 11 );
			base.AddElementFieldMapping( "VwUncontactedCustomerCallQueueCriteraAssignmentEntity", "Tags", "Tags", false, (int)SqlDbType.NVarChar, 2147483647, 0, 0, false, "", null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "VwUncontactedCustomerCallQueueCriteraAssignmentEntity", "ZipId", "ZipID", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 13 );
		}
		/// <summary>Inits WellMedAttestationEntity's mappings</summary>
		private void InitWellMedAttestationEntityMappings()
		{
			base.AddElementMapping( "WellMedAttestationEntity", "Falcon", @"dbo", "TblWellMedAttestation", 8 );
			base.AddElementFieldMapping( "WellMedAttestationEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "WellMedAttestationEntity", "EventCustomerResultId", "EventCustomerResultId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "WellMedAttestationEntity", "DiagnosisCode", "DiagnosisCode", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "WellMedAttestationEntity", "ReferenceDate", "ReferenceDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "WellMedAttestationEntity", "StatusId", "StatusId", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "WellMedAttestationEntity", "ProviderSignatureFileId", "ProviderSignatureFileID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "WellMedAttestationEntity", "FullPrintedName", "FullPrintedName", true, (int)SqlDbType.VarChar, 512, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "WellMedAttestationEntity", "DiagnosisDate", "DiagnosisDate", true, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 7 );
		}
		/// <summary>Inits WfEntity's mappings</summary>
		private void InitWfEntityMappings()
		{
			base.AddElementMapping( "WfEntity", "Falcon", @"dbo", "TblTestimonialType", 6 );
			base.AddElementFieldMapping( "WfEntity", "Wfid", "TestimonialTypeID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "WfEntity", "Name", "Name", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "WfEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "WfEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "WfEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 4 );
			base.AddElementFieldMapping( "WfEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 5 );
		}
		/// <summary>Inits WidgetEntity's mappings</summary>
		private void InitWidgetEntityMappings()
		{
			base.AddElementMapping( "WidgetEntity", "Falcon", @"dbo", "TblWidget", 3 );
			base.AddElementFieldMapping( "WidgetEntity", "WidgetId", "WidgetID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "WidgetEntity", "MarketingMaterialId", "MarketingMaterialId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "WidgetEntity", "WidgetAbbreviation", "WidgetAbbreviation", false, (int)SqlDbType.VarChar, 16, 0, 0, false, "", null, typeof(System.String), 2 );
		}
		/// <summary>Inits ZipEntity's mappings</summary>
		private void InitZipEntityMappings()
		{
			base.AddElementMapping( "ZipEntity", "Falcon", @"dbo", "TblZip", 11 );
			base.AddElementFieldMapping( "ZipEntity", "ZipId", "ZipID", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ZipEntity", "ZipCode", "ZipCode", false, (int)SqlDbType.VarChar, 500, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ZipEntity", "CityId", "CityID", true, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "ZipEntity", "Latitude", "Latitude", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "ZipEntity", "Longitude", "Longitude", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "ZipEntity", "TimeZone", "TimeZone", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "ZipEntity", "DayLightSaving", "DayLightSaving", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "ZipEntity", "Description", "Description", true, (int)SqlDbType.VarChar, 1000, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "ZipEntity", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "ZipEntity", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0, false, "", null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "ZipEntity", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0, false, "", null, typeof(System.Boolean), 10 );
		}
		/// <summary>Inits ZipDataEntity's mappings</summary>
		private void InitZipDataEntityMappings()
		{
			base.AddElementMapping( "ZipDataEntity", "Falcon", @"dbo", "ZipData", 13 );
			base.AddElementFieldMapping( "ZipDataEntity", "Id", "Id", false, (int)SqlDbType.BigInt, 0, 0, 19, true, "SCOPE_IDENTITY()", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ZipDataEntity", "ZipCode", "ZipCode", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "ZipDataEntity", "CityAliasName", "CityAliasName", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "ZipDataEntity", "State", "State", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "ZipDataEntity", "County", "County", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "ZipDataEntity", "CityType", "CityType", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "ZipDataEntity", "Latitude", "Latitude", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "ZipDataEntity", "Longitude", "Longitude", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "ZipDataEntity", "TimeZone", "TimeZone", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "ZipDataEntity", "DayLightSaving", "DayLightSaving", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "ZipDataEntity", "PreferredLastLineKey", "PreferredLastLineKey", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "ZipDataEntity", "CityMixedCase", "CityMixedCase", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 11 );
			base.AddElementFieldMapping( "ZipDataEntity", "CityAliasMixedCase", "CityAliasMixedCase", true, (int)SqlDbType.VarChar, 50, 0, 0, false, "", null, typeof(System.String), 12 );
		}
		/// <summary>Inits ZipRadiusDistanceEntity's mappings</summary>
		private void InitZipRadiusDistanceEntityMappings()
		{
			base.AddElementMapping( "ZipRadiusDistanceEntity", "Falcon", @"dbo", "TblZipRadiusDistance", 4 );
			base.AddElementFieldMapping( "ZipRadiusDistanceEntity", "SourceZipId", "SourceZipId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "ZipRadiusDistanceEntity", "DestinationZipId", "DestinationZipId", false, (int)SqlDbType.BigInt, 0, 0, 19, false, "", null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "ZipRadiusDistanceEntity", "Radius", "Radius", false, (int)SqlDbType.Int, 0, 0, 10, false, "", null, typeof(System.Int32), 2 );
			base.AddElementFieldMapping( "ZipRadiusDistanceEntity", "Distance", "Distance", false, (int)SqlDbType.Float, 0, 0, 38, false, "", null, typeof(System.Double), 3 );
		}

		/// <summary>Inits View's mappings</summary>
		private void InitAddressViewTypedViewMappings()
		{
			base.AddElementMapping( "AddressViewTypedView", "Falcon", @"dbo", "vw_Address", 24 );
			base.AddElementFieldMapping( "AddressViewTypedView", "AddressId", "AddressID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "AddressViewTypedView", "Address1", "Address1", false, (int)SqlDbType.VarChar, 500, 0, 0,false, string.Empty, null, typeof(System.String), 1 );
			base.AddElementFieldMapping( "AddressViewTypedView", "Address2", "Address2", false, (int)SqlDbType.VarChar, 500, 0, 0,false, string.Empty, null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "AddressViewTypedView", "CityId", "CityID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "AddressViewTypedView", "City", "City", false, (int)SqlDbType.VarChar, 500, 0, 0,false, string.Empty, null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "AddressViewTypedView", "StateId", "StateID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "AddressViewTypedView", "State", "State", false, (int)SqlDbType.VarChar, 500, 0, 0,false, string.Empty, null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "AddressViewTypedView", "StateCode", "StateCode", false, (int)SqlDbType.VarChar, 2, 0, 0,false, string.Empty, null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "AddressViewTypedView", "CountryId", "CountryID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "AddressViewTypedView", "Country", "Country", false, (int)SqlDbType.VarChar, 500, 0, 0,false, string.Empty, null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "AddressViewTypedView", "ZipId", "ZipID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 10 );
			base.AddElementFieldMapping( "AddressViewTypedView", "ZipCode", "ZipCode", false, (int)SqlDbType.VarChar, 500, 0, 0,false, string.Empty, null, typeof(System.String), 11 );
			base.AddElementFieldMapping( "AddressViewTypedView", "PhoneNumber", "PhoneNumber", false, (int)SqlDbType.VarChar, 1, 0, 0,false, string.Empty, null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "AddressViewTypedView", "Fax", "Fax", false, (int)SqlDbType.VarChar, 1, 0, 0,false, string.Empty, null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "AddressViewTypedView", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0,false, string.Empty, null, typeof(System.Boolean), 14 );
			base.AddElementFieldMapping( "AddressViewTypedView", "DateCreated", "DateCreated", false, (int)SqlDbType.DateTime, 0, 0, 0,false, string.Empty, null, typeof(System.DateTime), 15 );
			base.AddElementFieldMapping( "AddressViewTypedView", "DateModified", "DateModified", false, (int)SqlDbType.DateTime, 0, 0, 0,false, string.Empty, null, typeof(System.DateTime), 16 );
			base.AddElementFieldMapping( "AddressViewTypedView", "Latitude", "Latitude", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 17 );
			base.AddElementFieldMapping( "AddressViewTypedView", "Longitude", "Longitude", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 18 );
			base.AddElementFieldMapping( "AddressViewTypedView", "VerificationOrgRoleUserId", "VerificationOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 19 );
			base.AddElementFieldMapping( "AddressViewTypedView", "IsManuallyVerified", "IsManuallyVerified", false, (int)SqlDbType.Bit, 0, 0, 0,false, string.Empty, null, typeof(System.Boolean), 20 );
			base.AddElementFieldMapping( "AddressViewTypedView", "UseLatLogForMapping", "UseLatLogForMapping", false, (int)SqlDbType.Bit, 0, 0, 0,false, string.Empty, null, typeof(System.Boolean), 21 );
			base.AddElementFieldMapping( "AddressViewTypedView", "ZipLatitiude", "ZipLatitiude", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 22 );
			base.AddElementFieldMapping( "AddressViewTypedView", "ZipLongitude", "ZipLongitude", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 23 );
		}
		/// <summary>Inits View's mappings</summary>
		private void InitCcrepMetricesTypedViewMappings()
		{
			base.AddElementMapping( "CcrepMetricesTypedView", "Falcon", @"dbo", "vw_CCRepMetrices", 15 );
			base.AddElementFieldMapping( "CcrepMetricesTypedView", "EventCustomerId", "EventCustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CcrepMetricesTypedView", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CcrepMetricesTypedView", "CustomerId", "CustomerId", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CcrepMetricesTypedView", "RegisteredDate", "RegisteredDate", false, (int)SqlDbType.DateTime, 0, 0, 0,false, string.Empty, null, typeof(System.DateTime), 3 );
			base.AddElementFieldMapping( "CcrepMetricesTypedView", "OrganizationRoleUserId", "OrganizationRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 4 );
			base.AddElementFieldMapping( "CcrepMetricesTypedView", "CcrepUserId", "CCRepUserId", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "CcrepMetricesTypedView", "OrderId", "OrderID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "CcrepMetricesTypedView", "PaymentDate", "PaymentDate", false, (int)SqlDbType.DateTime, 0, 0, 0,false, string.Empty, null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "CcrepMetricesTypedView", "PaymentRecievedBy", "PaymentRecievedBy", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "CcrepMetricesTypedView", "PaymentRecievedByUserId", "PaymentRecievedByUserId", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "CcrepMetricesTypedView", "RoleId", "RoleId", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 10 );
			base.AddElementFieldMapping( "CcrepMetricesTypedView", "PaidAmount", "PaidAmount", false, (int)SqlDbType.Money, 0, 4, 19,false, string.Empty, null, typeof(System.Decimal), 11 );
			base.AddElementFieldMapping( "CcrepMetricesTypedView", "DiscountAmount", "DiscountAmount", false, (int)SqlDbType.Money, 0, 4, 19,false, string.Empty, null, typeof(System.Decimal), 12 );
			base.AddElementFieldMapping( "CcrepMetricesTypedView", "ShippingAmount", "ShippingAmount", false, (int)SqlDbType.Money, 0, 4, 19,false, string.Empty, null, typeof(System.Decimal), 13 );
			base.AddElementFieldMapping( "CcrepMetricesTypedView", "OrderAmount", "OrderAmount", false, (int)SqlDbType.Money, 0, 4, 19,false, string.Empty, null, typeof(System.Decimal), 14 );
		}
		/// <summary>Inits View's mappings</summary>
		private void InitCustomerEventBasicInfoTypedViewMappings()
		{
			base.AddElementMapping( "CustomerEventBasicInfoTypedView", "Falcon", @"dbo", "vw_CustomerEventBasicInfo", 41 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "EventCustomerId", "EventCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "FirstName", "FirstName", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "LastName", "LastName", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "SignUpMarketingSource", "SignUpMarketingSource", false, (int)SqlDbType.VarChar, 500, 0, 0,false, string.Empty, null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "CustomerSignupMode", "CustomerSignupMode", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 5 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "EventSignupMode", "EventSignupMode", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "EventSignupDate", "EventSignupDate", false, (int)SqlDbType.DateTime, 0, 0, 0,false, string.Empty, null, typeof(System.DateTime), 7 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 8 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "EventName", "EventName", false, (int)SqlDbType.VarChar, 500, 0, 0,false, string.Empty, null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "EventDate", "EventDate", false, (int)SqlDbType.DateTime, 0, 0, 0,false, string.Empty, null, typeof(System.DateTime), 10 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "CustomerSignupDate", "CustomerSignupDate", false, (int)SqlDbType.DateTime, 0, 0, 0,false, string.Empty, null, typeof(System.DateTime), 11 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "PackageName", "PackageName", false, (int)SqlDbType.NVarChar, 2147483647, 0, 0,false, string.Empty, null, typeof(System.String), 12 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "PodName", "PodName", false, (int)SqlDbType.VarChar, 500, 0, 0,false, string.Empty, null, typeof(System.String), 13 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "AssignedToOrgRoleUserId", "AssignedToOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 14 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "PaymentTotalAmount", "PaymentTotalAmount", false, (int)SqlDbType.Money, 0, 4, 19,false, string.Empty, null, typeof(System.Decimal), 15 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "IsPaid", "IsPaid", false, (int)SqlDbType.Bit, 0, 0, 0,false, string.Empty, null, typeof(System.Boolean), 16 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "DrOrCr", "DrOrCr", false, (int)SqlDbType.Bit, 0, 0, 0,false, string.Empty, null, typeof(System.Boolean), 17 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "CouponCode", "CouponCode", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 18 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "IncomingPhoneLine", "IncomingPhoneLine", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 19 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "CallersPhoneNumber", "CallersPhoneNumber", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 20 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "CallStatus", "CallStatus", false, (int)SqlDbType.VarChar, 500, 0, 0,false, string.Empty, null, typeof(System.String), 21 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "IsPodActive", "IsPodActive", false, (int)SqlDbType.Bit, 0, 0, 0,false, string.Empty, null, typeof(System.Boolean), 22 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "SalesRepFirstName", "SalesRepFirstName", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 23 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "SalesRepMiddleName", "SalesRepMiddleName", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 24 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "SalesRepLastName", "SalesRepLastName", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 25 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "MarketingSource", "MarketingSource", false, (int)SqlDbType.VarChar, 500, 0, 0,false, string.Empty, null, typeof(System.String), 26 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "HomeAddressId", "HomeAddressID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 27 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "Address1", "Address1", false, (int)SqlDbType.VarChar, 500, 0, 0,false, string.Empty, null, typeof(System.String), 28 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "Address2", "Address2", false, (int)SqlDbType.VarChar, 500, 0, 0,false, string.Empty, null, typeof(System.String), 29 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "CityId", "CityID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 30 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "City", "City", false, (int)SqlDbType.VarChar, 500, 0, 0,false, string.Empty, null, typeof(System.String), 31 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "StateId", "StateID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 32 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "State", "State", false, (int)SqlDbType.VarChar, 500, 0, 0,false, string.Empty, null, typeof(System.String), 33 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "ZipId", "ZipID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 34 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "ZipCode", "ZipCode", false, (int)SqlDbType.VarChar, 500, 0, 0,false, string.Empty, null, typeof(System.String), 35 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "PaidAmount", "PaidAmount", false, (int)SqlDbType.Decimal, 0, 2, 38,false, string.Empty, null, typeof(System.Decimal), 36 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "UnpaidAmount", "UnpaidAmount", false, (int)SqlDbType.Decimal, 0, 2, 38,false, string.Empty, null, typeof(System.Decimal), 37 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "PaymentNet", "PaymentNet", false, (int)SqlDbType.Money, 0, 4, 19,false, string.Empty, null, typeof(System.Decimal), 38 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "EventStatus", "EventStatus", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 39 );
			base.AddElementFieldMapping( "CustomerEventBasicInfoTypedView", "PackagePrice", "PackagePrice", false, (int)SqlDbType.Money, 0, 4, 19,false, string.Empty, null, typeof(System.Decimal), 40 );
		}
		/// <summary>Inits View's mappings</summary>
		private void InitCustomerOrderBasicInfoTypedViewMappings()
		{
			base.AddElementMapping( "CustomerOrderBasicInfoTypedView", "Falcon", @"dbo", "vw_CustomerOrderBasicInfo", 86 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "EventCustomerId", "EventCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "OrderId", "OrderID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "OrderDetailId", "OrderDetailID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "FirstName", "FirstName", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "MiddleName", "MiddleName", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "LastName", "LastName", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "Email1", "Email1", false, (int)SqlDbType.VarChar, 100, 0, 0,false, string.Empty, null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "Phone", "Phone", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "EventSignupDate", "EventSignupDate", false, (int)SqlDbType.DateTime, 0, 0, 0,false, string.Empty, null, typeof(System.DateTime), 9 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "EventSignupRoleId", "EventSignupRoleId", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 10 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "AppointmentId", "AppointmentID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 11 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "AppointmentStartTime", "AppointmentStartTime", false, (int)SqlDbType.DateTime, 0, 0, 0,false, string.Empty, null, typeof(System.DateTime), 12 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "AppointmentEndTime", "AppointmentEndTime", false, (int)SqlDbType.DateTime, 0, 0, 0,false, string.Empty, null, typeof(System.DateTime), 13 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "Noshow", "Noshow", false, (int)SqlDbType.Bit, 0, 0, 0,false, string.Empty, null, typeof(System.Boolean), 14 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "Hipaastatus", "HIPAAStatus", false, (int)SqlDbType.SmallInt, 0, 0, 5,false, string.Empty, null, typeof(System.Int16), 15 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "EventPackageId", "EventPackageID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 16 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "EventName", "EventName", false, (int)SqlDbType.VarChar, 500, 0, 0,false, string.Empty, null, typeof(System.String), 17 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "EventDate", "EventDate", false, (int)SqlDbType.DateTime, 0, 0, 0,false, string.Empty, null, typeof(System.DateTime), 18 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 19 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "FranchiseeName", "FranchiseeName", false, (int)SqlDbType.VarChar, 512, 0, 0,false, string.Empty, null, typeof(System.String), 20 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "OrganizationName", "OrganizationName", false, (int)SqlDbType.VarChar, 500, 0, 0,false, string.Empty, null, typeof(System.String), 21 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "HostAddress", "HostAddress", false, (int)SqlDbType.VarChar, 500, 0, 0,false, string.Empty, null, typeof(System.String), 22 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "HostState", "HostState", false, (int)SqlDbType.VarChar, 500, 0, 0,false, string.Empty, null, typeof(System.String), 23 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "HostCity", "HostCity", false, (int)SqlDbType.VarChar, 500, 0, 0,false, string.Empty, null, typeof(System.String), 24 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "HostZip", "HostZip", false, (int)SqlDbType.VarChar, 500, 0, 0,false, string.Empty, null, typeof(System.String), 25 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "Latitude", "Latitude", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 26 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "Longitude", "Longitude", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 27 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "IsManuallyVerified", "IsManuallyVerified", false, (int)SqlDbType.Bit, 0, 0, 0,false, string.Empty, null, typeof(System.Boolean), 28 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "UseLatLogForMapping", "UseLatLogForMapping", false, (int)SqlDbType.Bit, 0, 0, 0,false, string.Empty, null, typeof(System.Boolean), 29 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "CheckinTime", "CheckinTime", false, (int)SqlDbType.DateTime, 0, 0, 0,false, string.Empty, null, typeof(System.DateTime), 30 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "CheckoutTime", "CheckoutTime", false, (int)SqlDbType.DateTime, 0, 0, 0,false, string.Empty, null, typeof(System.DateTime), 31 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "LeftWithoutScreeningReasonId", "LeftWithoutScreeningReasonId", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 32 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "PackagePrice", "PackagePrice", false, (int)SqlDbType.Money, 0, 4, 19,false, string.Empty, null, typeof(System.Decimal), 33 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "EffectiveCost", "EffectiveCost", false, (int)SqlDbType.Money, 0, 4, 19,false, string.Empty, null, typeof(System.Decimal), 34 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "PackageName", "PackageName", false, (int)SqlDbType.VarChar, 500, 0, 0,false, string.Empty, null, typeof(System.String), 35 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "PackageId", "PackageID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 36 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "AdditionalTest", "AdditionalTest", false, (int)SqlDbType.VarChar, 2000, 0, 0,false, string.Empty, null, typeof(System.String), 37 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "EventSignupMarketingSource", "EventSignupMarketingSource", false, (int)SqlDbType.VarChar, 500, 0, 0,false, string.Empty, null, typeof(System.String), 38 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "EventStatus", "EventStatus", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 39 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "SourceCodeId", "SourceCodeID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 40 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "SourceCode", "SourceCode", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 41 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "SourceCodeAmount", "SourceCodeAmount", false, (int)SqlDbType.Money, 0, 4, 19,false, string.Empty, null, typeof(System.Decimal), 42 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "ShippingCost", "ShippingCost", false, (int)SqlDbType.Money, 0, 4, 19,false, string.Empty, null, typeof(System.Decimal), 43 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "CreditCard", "CreditCard", false, (int)SqlDbType.Money, 0, 4, 19,false, string.Empty, null, typeof(System.Decimal), 44 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "Check", "Check", false, (int)SqlDbType.Money, 0, 4, 19,false, string.Empty, null, typeof(System.Decimal), 45 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "Echeck", "ECheck", false, (int)SqlDbType.Money, 0, 4, 19,false, string.Empty, null, typeof(System.Decimal), 46 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "Cash", "Cash", false, (int)SqlDbType.Money, 0, 4, 19,false, string.Empty, null, typeof(System.Decimal), 47 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "Gc", "GC", false, (int)SqlDbType.Money, 0, 4, 19,false, string.Empty, null, typeof(System.Decimal), 48 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "IsAuthorized", "IsAuthorized", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 49 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "CustomerEventTestId", "CustomerEventTestID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 50 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "IsResultPdfgenerated", "IsResultPDFGenerated", false, (int)SqlDbType.Bit, 0, 0, 0,false, string.Empty, null, typeof(System.Boolean), 51 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "IsPdfgenerated", "IsPDFGenerated", false, (int)SqlDbType.Bit, 0, 0, 0,false, string.Empty, null, typeof(System.Boolean), 52 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "IsResultReady", "IsResultReady", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 53 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "IsColoractelResultReady", "IsColoractelResultReady", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 54 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "TestStatus", "TestStatus", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 55 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "AaatestEvaluation", "AAATestEvaluation", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 56 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "AsitestEvaluation", "ASITestEvaluation", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 57 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "CarotidTestEvaluation", "CarotidTestEvaluation", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 58 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "OsteoTestEvaluation", "OsteoTestEvaluation", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 59 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "PadtestEvaluation", "PADTestEvaluation", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 60 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "EkgtestEvaluation", "EKGTestEvaluation", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 61 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "LipidTestEvaluation", "LipidTestEvaluation", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 62 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "LiverTestEvaluation", "LiverTestEvaluation", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 63 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "FraminghamTestEvaluation", "FraminghamTestEvaluation", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 64 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "AaapartialState", "AAAPartialState", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 65 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "AsipartialState", "ASIPartialState", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 66 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "CarotidPartialState", "CarotidPartialState", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 67 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "OsteoPartialState", "OsteoPartialState", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 68 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "PadpartialState", "PADPartialState", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 69 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "EkgpartialState", "EKGPartialState", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 70 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "LipidPartialState", "LipidPartialState", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 71 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "LiverPartialState", "LiverPartialState", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 72 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "FraminghamPartialState", "FraminghamPartialState", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 73 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "EventCount", "EventCount", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 74 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "ScheduledByOrgRoleUserId", "ScheduledByOrgRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 75 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "AppointBlockReason", "AppointBlockReason", false, (int)SqlDbType.VarChar, 1, 0, 0,false, string.Empty, null, typeof(System.String), 76 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "UserCreatedOn", "UserCreatedOn", false, (int)SqlDbType.DateTime, 0, 0, 0,false, string.Empty, null, typeof(System.DateTime), 77 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "CustomerHealthInfo", "CustomerHealthInfo", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 78 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "IsRegistered", "IsRegistered", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 79 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "IsTestAttended", "IsTestAttended", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 80 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "IsPaid", "IsPaid", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 81 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "IsShippingApplied", "isShippingApplied", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 82 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "PartnerRelease", "PartnerRelease", false, (int)SqlDbType.SmallInt, 0, 0, 5,false, string.Empty, null, typeof(System.Int16), 83 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "InsurancePayment", "InsurancePayment", false, (int)SqlDbType.Decimal, 0, 2, 38,false, string.Empty, null, typeof(System.Decimal), 84 );
			base.AddElementFieldMapping( "CustomerOrderBasicInfoTypedView", "AwvVisitId", "AwvVisitId", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 85 );
		}
		/// <summary>Inits View's mappings</summary>
		private void InitFranchiseeFranchiseeUserTypedViewMappings()
		{
			base.AddElementMapping( "FranchiseeFranchiseeUserTypedView", "Falcon", @"dbo", "vw_FranchiseeFranchiseeUser", 5 );
			base.AddElementFieldMapping( "FranchiseeFranchiseeUserTypedView", "OrganizationRoleUserId", "OrganizationRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "FranchiseeFranchiseeUserTypedView", "UserId", "UserID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "FranchiseeFranchiseeUserTypedView", "OrganizationId", "OrganizationId", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "FranchiseeFranchiseeUserTypedView", "RoleId", "RoleID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "FranchiseeFranchiseeUserTypedView", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0,false, string.Empty, null, typeof(System.Boolean), 4 );
		}
		/// <summary>Inits View's mappings</summary>
		private void InitGetRecordsReadyforCustomerViewTypedViewMappings()
		{
			base.AddElementMapping( "GetRecordsReadyforCustomerViewTypedView", "Falcon", @"dbo", "vw_GetRecordsReadyforCustomerView", 15 );
			base.AddElementFieldMapping( "GetRecordsReadyforCustomerViewTypedView", "EventCustomerId", "EventCustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "GetRecordsReadyforCustomerViewTypedView", "CustomerEventTestId", "CustomerEventTestID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "GetRecordsReadyforCustomerViewTypedView", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "GetRecordsReadyforCustomerViewTypedView", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "GetRecordsReadyforCustomerViewTypedView", "AaatestEvaluation", "AAATestEvaluation", false, (int)SqlDbType.TinyInt, 0, 0, 3,false, string.Empty, null, typeof(System.Byte), 4 );
			base.AddElementFieldMapping( "GetRecordsReadyforCustomerViewTypedView", "AsitestEvaluation", "ASITestEvaluation", false, (int)SqlDbType.TinyInt, 0, 0, 3,false, string.Empty, null, typeof(System.Byte), 5 );
			base.AddElementFieldMapping( "GetRecordsReadyforCustomerViewTypedView", "CarotidTestEvaluation", "CarotidTestEvaluation", false, (int)SqlDbType.TinyInt, 0, 0, 3,false, string.Empty, null, typeof(System.Byte), 6 );
			base.AddElementFieldMapping( "GetRecordsReadyforCustomerViewTypedView", "OsteoTestEvaluation", "OsteoTestEvaluation", false, (int)SqlDbType.TinyInt, 0, 0, 3,false, string.Empty, null, typeof(System.Byte), 7 );
			base.AddElementFieldMapping( "GetRecordsReadyforCustomerViewTypedView", "PadtestEvaluation", "PADTestEvaluation", false, (int)SqlDbType.TinyInt, 0, 0, 3,false, string.Empty, null, typeof(System.Byte), 8 );
			base.AddElementFieldMapping( "GetRecordsReadyforCustomerViewTypedView", "EkgtestEvaluation", "EKGTestEvaluation", false, (int)SqlDbType.TinyInt, 0, 0, 3,false, string.Empty, null, typeof(System.Byte), 9 );
			base.AddElementFieldMapping( "GetRecordsReadyforCustomerViewTypedView", "LipidTestEvaluation", "LipidTestEvaluation", false, (int)SqlDbType.TinyInt, 0, 0, 3,false, string.Empty, null, typeof(System.Byte), 10 );
			base.AddElementFieldMapping( "GetRecordsReadyforCustomerViewTypedView", "LiverTestEvaluation", "LiverTestEvaluation", false, (int)SqlDbType.TinyInt, 0, 0, 3,false, string.Empty, null, typeof(System.Byte), 11 );
			base.AddElementFieldMapping( "GetRecordsReadyforCustomerViewTypedView", "FraminghamTestEvaluation", "FraminghamTestEvaluation", false, (int)SqlDbType.TinyInt, 0, 0, 3,false, string.Empty, null, typeof(System.Byte), 12 );
			base.AddElementFieldMapping( "GetRecordsReadyforCustomerViewTypedView", "IsPdfgenerated", "IsPDFGenerated", false, (int)SqlDbType.Bit, 0, 0, 0,false, string.Empty, null, typeof(System.Boolean), 13 );
			base.AddElementFieldMapping( "GetRecordsReadyforCustomerViewTypedView", "IsResultPdfgenerated", "IsResultPDFGenerated", false, (int)SqlDbType.Bit, 0, 0, 0,false, string.Empty, null, typeof(System.Boolean), 14 );
		}
		/// <summary>Inits View's mappings</summary>
		private void InitMedicalVendorEarningCustomerTypedViewMappings()
		{
			base.AddElementMapping( "MedicalVendorEarningCustomerTypedView", "Falcon", @"dbo", "vw_MedicalVendorEarningCustomer", 12 );
			base.AddElementFieldMapping( "MedicalVendorEarningCustomerTypedView", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MedicalVendorEarningCustomerTypedView", "EventId", "EventId", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "MedicalVendorEarningCustomerTypedView", "OrganizationId", "OrganizationId", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 2 );
			base.AddElementFieldMapping( "MedicalVendorEarningCustomerTypedView", "OrganizationRoleUserId", "OrganizationRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 3 );
			base.AddElementFieldMapping( "MedicalVendorEarningCustomerTypedView", "MvamountEarned", "MVAmountEarned", false, (int)SqlDbType.Money, 0, 4, 19,false, string.Empty, null, typeof(System.Decimal), 4 );
			base.AddElementFieldMapping( "MedicalVendorEarningCustomerTypedView", "EvaluationDate", "EvaluationDate", false, (int)SqlDbType.DateTime, 0, 0, 0,false, string.Empty, null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "MedicalVendorEarningCustomerTypedView", "CustomerFirstName", "CustomerFirstName", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "MedicalVendorEarningCustomerTypedView", "CustomerMiddleName", "CustomerMiddleName", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "MedicalVendorEarningCustomerTypedView", "CustomerLastName", "CustomerLastName", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 8 );
			base.AddElementFieldMapping( "MedicalVendorEarningCustomerTypedView", "PhysicianFirstName", "PhysicianFirstName", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 9 );
			base.AddElementFieldMapping( "MedicalVendorEarningCustomerTypedView", "PhysicianMiddleName", "PhysicianMiddleName", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "MedicalVendorEarningCustomerTypedView", "PhysicianLastName", "PhysicianLastName", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 11 );
		}
		/// <summary>Inits View's mappings</summary>
		private void InitMedicalVendorEarningInfoTypedViewMappings()
		{
			base.AddElementMapping( "MedicalVendorEarningInfoTypedView", "Falcon", @"dbo", "vw_MedicalVendorEarningInfo", 3 );
			base.AddElementFieldMapping( "MedicalVendorEarningInfoTypedView", "OrganizationRoleUserId", "OrganizationRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MedicalVendorEarningInfoTypedView", "OrganizationId", "OrganizationId", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "MedicalVendorEarningInfoTypedView", "PhysicianAmountEarned", "PhysicianAmountEarned", false, (int)SqlDbType.Decimal, 0, 2, 18,false, string.Empty, null, typeof(System.Decimal), 2 );
		}
		/// <summary>Inits View's mappings</summary>
		private void InitMedicalVendorInvoiceItemTypedViewMappings()
		{
			base.AddElementMapping( "MedicalVendorInvoiceItemTypedView", "Falcon", @"dbo", "vw_MedicalVendorInvoiceItem", 15 );
			base.AddElementFieldMapping( "MedicalVendorInvoiceItemTypedView", "OrganizationRoleUserId", "OrganizationRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MedicalVendorInvoiceItemTypedView", "CustomerId", "CustomerID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "MedicalVendorInvoiceItemTypedView", "FirstName", "FirstName", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "MedicalVendorInvoiceItemTypedView", "MiddleName", "MiddleName", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "MedicalVendorInvoiceItemTypedView", "LastName", "LastName", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "MedicalVendorInvoiceItemTypedView", "ReviewDate", "ReviewDate", false, (int)SqlDbType.DateTime, 0, 0, 0,false, string.Empty, null, typeof(System.DateTime), 5 );
			base.AddElementFieldMapping( "MedicalVendorInvoiceItemTypedView", "EventId", "EventID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 6 );
			base.AddElementFieldMapping( "MedicalVendorInvoiceItemTypedView", "EventName", "EventName", false, (int)SqlDbType.VarChar, 500, 0, 0,false, string.Empty, null, typeof(System.String), 7 );
			base.AddElementFieldMapping( "MedicalVendorInvoiceItemTypedView", "EventDate", "EventDate", false, (int)SqlDbType.DateTime, 0, 0, 0,false, string.Empty, null, typeof(System.DateTime), 8 );
			base.AddElementFieldMapping( "MedicalVendorInvoiceItemTypedView", "PodId", "PodID", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 9 );
			base.AddElementFieldMapping( "MedicalVendorInvoiceItemTypedView", "PodName", "PodName", false, (int)SqlDbType.VarChar, 500, 0, 0,false, string.Empty, null, typeof(System.String), 10 );
			base.AddElementFieldMapping( "MedicalVendorInvoiceItemTypedView", "MedicalVendorAmountEarned", "MedicalVendorAmountEarned", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 11 );
			base.AddElementFieldMapping( "MedicalVendorInvoiceItemTypedView", "OrganizationRoleUserAmountEarned", "OrganizationRoleUserAmountEarned", false, (int)SqlDbType.Money, 0, 4, 19,false, string.Empty, null, typeof(System.Decimal), 12 );
			base.AddElementFieldMapping( "MedicalVendorInvoiceItemTypedView", "EvaluationStartTime", "EvaluationStartTime", false, (int)SqlDbType.DateTime, 0, 0, 0,false, string.Empty, null, typeof(System.DateTime), 13 );
			base.AddElementFieldMapping( "MedicalVendorInvoiceItemTypedView", "EvaluationEndTime", "EvaluationEndTime", false, (int)SqlDbType.DateTime, 0, 0, 0,false, string.Empty, null, typeof(System.DateTime), 14 );
		}
		/// <summary>Inits View's mappings</summary>
		private void InitMedicalVendorMedicalVendorUserTypedViewMappings()
		{
			base.AddElementMapping( "MedicalVendorMedicalVendorUserTypedView", "Falcon", @"dbo", "vw_MedicalVendorMedicalVendorUser", 8 );
			base.AddElementFieldMapping( "MedicalVendorMedicalVendorUserTypedView", "OrganizationRoleUserId", "OrganizationRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MedicalVendorMedicalVendorUserTypedView", "OrganizationId", "OrganizationId", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "MedicalVendorMedicalVendorUserTypedView", "MedicalVendorName", "MedicalVendorName", false, (int)SqlDbType.VarChar, 512, 0, 0,false, string.Empty, null, typeof(System.String), 2 );
			base.AddElementFieldMapping( "MedicalVendorMedicalVendorUserTypedView", "RoleName", "RoleName", false, (int)SqlDbType.VarChar, 512, 0, 0,false, string.Empty, null, typeof(System.String), 3 );
			base.AddElementFieldMapping( "MedicalVendorMedicalVendorUserTypedView", "FirstName", "FirstName", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 4 );
			base.AddElementFieldMapping( "MedicalVendorMedicalVendorUserTypedView", "MiddleName", "MiddleName", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 5 );
			base.AddElementFieldMapping( "MedicalVendorMedicalVendorUserTypedView", "LastName", "LastName", false, (int)SqlDbType.VarChar, 50, 0, 0,false, string.Empty, null, typeof(System.String), 6 );
			base.AddElementFieldMapping( "MedicalVendorMedicalVendorUserTypedView", "IsActive", "IsActive", false, (int)SqlDbType.Bit, 0, 0, 0,false, string.Empty, null, typeof(System.Boolean), 7 );
		}
		/// <summary>Inits View's mappings</summary>
		private void InitMedicalVendorMvuserEarningAndPayRateTypedViewMappings()
		{
			base.AddElementMapping( "MedicalVendorMvuserEarningAndPayRateTypedView", "Falcon", @"dbo", "vw_MedicalVendorMVUserEarningAndPayRate", 5 );
			base.AddElementFieldMapping( "MedicalVendorMvuserEarningAndPayRateTypedView", "OrganizationRoleUserId", "OrganizationRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MedicalVendorMvuserEarningAndPayRateTypedView", "OrganizationId", "OrganizationId", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "MedicalVendorMvuserEarningAndPayRateTypedView", "OfferRate", "OfferRate", false, (int)SqlDbType.Decimal, 0, 2, 18,false, string.Empty, null, typeof(System.Decimal), 2 );
			base.AddElementFieldMapping( "MedicalVendorMvuserEarningAndPayRateTypedView", "NumberOfEvaluations", "NumberOfEvaluations", false, (int)SqlDbType.Int, 0, 0, 10,false, string.Empty, null, typeof(System.Int32), 3 );
			base.AddElementFieldMapping( "MedicalVendorMvuserEarningAndPayRateTypedView", "AmountEarned", "AmountEarned", false, (int)SqlDbType.Money, 0, 4, 19,false, string.Empty, null, typeof(System.Decimal), 4 );
		}
		/// <summary>Inits View's mappings</summary>
		private void InitMedicalVendorMvuserPaymentTypedViewMappings()
		{
			base.AddElementMapping( "MedicalVendorMvuserPaymentTypedView", "Falcon", @"dbo", "vw_MedicalVendorMVUserPayment", 3 );
			base.AddElementFieldMapping( "MedicalVendorMvuserPaymentTypedView", "OrganizationRoleUserId", "OrganizationRoleUserId", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 0 );
			base.AddElementFieldMapping( "MedicalVendorMvuserPaymentTypedView", "OrganizationId", "OrganizationId", false, (int)SqlDbType.BigInt, 0, 0, 19,false, string.Empty, null, typeof(System.Int64), 1 );
			base.AddElementFieldMapping( "MedicalVendorMvuserPaymentTypedView", "AmountPaid", "AmountPaid", false, (int)SqlDbType.Money, 0, 4, 19,false, string.Empty, null, typeof(System.Decimal), 2 );
		}
	}
}













