///////////////////////////////////////////////////////////////
// This is generated code. 
//////////////////////////////////////////////////////////////
// Code is generated using LLBLGen Pro version: 2.6
// Code is generated on: 27 June 2019 17:22:47
// Code is generated using templates: SD.TemplateBindings.SharedTemplates.NET20
// Templates vendor: Solutions Design.
// Templates version: 
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
#if !CF
using System.Runtime.Serialization;
#endif
using System.Xml.Serialization;
using Falcon.Data;
using Falcon.Data.HelperClasses;
using Falcon.Data.FactoryClasses;
using Falcon.Data.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace Falcon.Data.EntityClasses
{
	
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END

	/// <summary>
	/// Entity class which represents the entity 'File'.<br/><br/>
	/// 
	/// </summary>
	[Serializable]
	public partial class FileEntity : CommonEntityBase, ISerializable
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{
		#region Class Member Declarations
		private EntityCollection<AccountEntity> _account______;
		private EntityCollection<AccountEntity> _account_____;
		private EntityCollection<AccountEntity> _account________;
		private EntityCollection<AccountEntity> _account_______;
		private EntityCollection<AccountEntity> _account____;
		private EntityCollection<AccountEntity> _account_;
		private EntityCollection<AccountEntity> _account;
		private EntityCollection<AccountEntity> _account___;
		private EntityCollection<AccountEntity> _account__;
		private EntityCollection<CallUploadEntity> _callUpload_;
		private EntityCollection<CallUploadEntity> _callUpload;
		private EntityCollection<ChaperoneSignatureEntity> _chaperoneSignature_;
		private EntityCollection<ChaperoneSignatureEntity> _chaperoneSignature;
		private EntityCollection<CorporateUploadEntity> _corporateUpload_;
		private EntityCollection<CorporateUploadEntity> _corporateUpload;
		private EntityCollection<CorporateUploadEntity> _corporateUpload__;
		private EntityCollection<CustomerActivityTypeUploadEntity> _customerActivityTypeUpload_;
		private EntityCollection<CustomerActivityTypeUploadEntity> _customerActivityTypeUpload;
		private EntityCollection<CustomerPhoneNumberUpdateUploadEntity> _customerPhoneNumberUpdateUpload_;
		private EntityCollection<CustomerPhoneNumberUpdateUploadEntity> _customerPhoneNumberUpdateUpload;
		private EntityCollection<EligibilityUploadEntity> _eligibilityUpload_;
		private EntityCollection<EligibilityUploadEntity> _eligibilityUpload;
		private EntityCollection<EventCustomerGiftCardEntity> _eventCustomerGiftCard_;
		private EntityCollection<EventCustomerGiftCardEntity> _eventCustomerGiftCard;
		private EntityCollection<ExitInterviewSignatureEntity> _exitInterviewSignature;
		private EntityCollection<ExportableReportsQueueEntity> _exportableReportsQueue;
		private EntityCollection<FluConsentSignatureEntity> _fluConsentSignature_;
		private EntityCollection<FluConsentSignatureEntity> _fluConsentSignature;
		private EntityCollection<HealthPlanCriteriaAssignmentUploadEntity> _healthPlanCriteriaAssignmentUpload;
		private EntityCollection<HostImageEntity> _hostImage;
		private EntityCollection<MedicalVendorProfileEntity> _medicalVendorProfile_;
		private EntityCollection<MedicalVendorProfileEntity> _medicalVendorProfile;
		private EntityCollection<MedicationUploadEntity> _medicationUpload_;
		private EntityCollection<MedicationUploadEntity> _medicationUpload;
		private EntityCollection<MergeCustomerUploadEntity> _mergeCustomerUpload_;
		private EntityCollection<MergeCustomerUploadEntity> _mergeCustomerUpload;
		private EntityCollection<OrganizationEntity> _organization_;
		private EntityCollection<OrganizationEntity> _organization;
		private EntityCollection<OutboundUploadEntity> _outboundUpload_;
		private EntityCollection<OutboundUploadEntity> _outboundUpload;
		private EntityCollection<PackageEntity> _package;
		private EntityCollection<ParticipationConsentSignatureEntity> _participationConsentSignature_;
		private EntityCollection<ParticipationConsentSignatureEntity> _participationConsentSignature;
		private EntityCollection<PhysicianProfileEntity> _physicianProfile_;
		private EntityCollection<PhysicianProfileEntity> _physicianProfile;
		private EntityCollection<PhysicianRecordRequestSignatureEntity> _physicianRecordRequestSignature;
		private EntityCollection<RapsUploadEntity> _rapsUpload_;
		private EntityCollection<RapsUploadEntity> _rapsUpload;
		private EntityCollection<ResultArchiveUploadEntity> _resultArchiveUpload;
		private EntityCollection<StaffEventScheduleUploadEntity> _staffEventScheduleUpload_;
		private EntityCollection<StaffEventScheduleUploadEntity> _staffEventScheduleUpload;
		private EntityCollection<SuspectConditionUploadEntity> _suspectConditionUpload_;
		private EntityCollection<SuspectConditionUploadEntity> _suspectConditionUpload;
		private EntityCollection<TestimonialEntity> _testimonial;
		private EntityCollection<TestMediaEntity> _testMedia;
		private EntityCollection<WellMedAttestationEntity> _wellMedAttestation;
		private EntityCollection<AccountEntity> _accountCollectionViaEligibilityUpload_;
		private EntityCollection<AccountEntity> _accountCollectionViaCorporateUpload;
		private EntityCollection<AccountEntity> _accountCollectionViaCorporateUpload__;
		private EntityCollection<AccountEntity> _accountCollectionViaCorporateUpload_;
		private EntityCollection<AccountEntity> _accountCollectionViaEligibilityUpload;
		private EntityCollection<AddressEntity> _addressCollectionViaOrganization_;
		private EntityCollection<AddressEntity> _addressCollectionViaOrganization;
		private EntityCollection<CheckListQuestionEntity> _checkListQuestionCollectionViaExitInterviewSignature;
		private EntityCollection<CheckListTemplateEntity> _checkListTemplateCollectionViaAccount_________________;
		private EntityCollection<CheckListTemplateEntity> _checkListTemplateCollectionViaAccount_____;
		private EntityCollection<CheckListTemplateEntity> _checkListTemplateCollectionViaAccount____;
		private EntityCollection<CheckListTemplateEntity> _checkListTemplateCollectionViaAccount_____________;
		private EntityCollection<CheckListTemplateEntity> _checkListTemplateCollectionViaAccount______;
		private EntityCollection<CheckListTemplateEntity> _checkListTemplateCollectionViaAccount_______;
		private EntityCollection<CheckListTemplateEntity> _checkListTemplateCollectionViaAccount__________;
		private EntityCollection<CheckListTemplateEntity> _checkListTemplateCollectionViaAccount_________;
		private EntityCollection<CheckListTemplateEntity> _checkListTemplateCollectionViaAccount____________;
		private EntityCollection<CheckListTemplateEntity> _checkListTemplateCollectionViaAccount___________;
		private EntityCollection<CheckListTemplateEntity> _checkListTemplateCollectionViaAccount_______________;
		private EntityCollection<CheckListTemplateEntity> _checkListTemplateCollectionViaAccount________________;
		private EntityCollection<CheckListTemplateEntity> _checkListTemplateCollectionViaAccount________;
		private EntityCollection<CheckListTemplateEntity> _checkListTemplateCollectionViaAccount______________;
		private EntityCollection<CheckListTemplateEntity> _checkListTemplateCollectionViaAccount_;
		private EntityCollection<CheckListTemplateEntity> _checkListTemplateCollectionViaAccount___;
		private EntityCollection<CheckListTemplateEntity> _checkListTemplateCollectionViaAccount__;
		private EntityCollection<CheckListTemplateEntity> _checkListTemplateCollectionViaAccount;
		private EntityCollection<ContractEntity> _contractCollectionViaMedicalVendorProfile_;
		private EntityCollection<ContractEntity> _contractCollectionViaMedicalVendorProfile;
		private EntityCollection<CustomerEventScreeningTestsEntity> _customerEventScreeningTestsCollectionViaTestMedia;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaTestimonial;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount_________________;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount__________________;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount___________________;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount_____________________________;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount___________________________________;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount________________;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount___________________________;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount__________________________;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount_________________________;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount____________________________;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount______________________________;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount_______________________________;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount________________________________;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount_________________________________;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount__________________________________;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount____________________;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount_____________________;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount________________________;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount_______________________;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount______________________;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount__;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount___;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount____________;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount____;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount________;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount_______;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount___________;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount__________;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount_;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount_____;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount_________;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount______;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount______________;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount_______________;
		private EntityCollection<EmailTemplateEntity> _emailTemplateCollectionViaAccount_____________;
		private EntityCollection<EventCustomerResultEntity> _eventCustomerResultCollectionViaWellMedAttestation;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaChaperoneSignature;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaFluConsentSignature;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaParticipationConsentSignature;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaFluConsentSignature_;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaParticipationConsentSignature_;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaExitInterviewSignature;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaEventCustomerGiftCard_;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaChaperoneSignature_;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaPhysicianRecordRequestSignature;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaEventCustomerGiftCard;
		private EntityCollection<EventsEntity> _eventsCollectionViaResultArchiveUpload;
		private EntityCollection<ExportableReportsEntity> _exportableReportsCollectionViaExportableReportsQueue;
		private EntityCollection<FluConsentTemplateEntity> _fluConsentTemplateCollectionViaAccount______;
		private EntityCollection<FluConsentTemplateEntity> _fluConsentTemplateCollectionViaAccount;
		private EntityCollection<FluConsentTemplateEntity> _fluConsentTemplateCollectionViaAccount________;
		private EntityCollection<FluConsentTemplateEntity> _fluConsentTemplateCollectionViaAccount_______;
		private EntityCollection<FluConsentTemplateEntity> _fluConsentTemplateCollectionViaAccount___;
		private EntityCollection<FluConsentTemplateEntity> _fluConsentTemplateCollectionViaAccount_____;
		private EntityCollection<FluConsentTemplateEntity> _fluConsentTemplateCollectionViaAccount__;
		private EntityCollection<FluConsentTemplateEntity> _fluConsentTemplateCollectionViaAccount_;
		private EntityCollection<FluConsentTemplateEntity> _fluConsentTemplateCollectionViaAccount____;
		private EntityCollection<HafTemplateEntity> _hafTemplateCollectionViaAccount________;
		private EntityCollection<HafTemplateEntity> _hafTemplateCollectionViaAccount______;
		private EntityCollection<HafTemplateEntity> _hafTemplateCollectionViaAccount__;
		private EntityCollection<HafTemplateEntity> _hafTemplateCollectionViaAccount____;
		private EntityCollection<HafTemplateEntity> _hafTemplateCollectionViaPackage;
		private EntityCollection<HafTemplateEntity> _hafTemplateCollectionViaAccount_;
		private EntityCollection<HafTemplateEntity> _hafTemplateCollectionViaAccount_______;
		private EntityCollection<HafTemplateEntity> _hafTemplateCollectionViaAccount_____;
		private EntityCollection<HafTemplateEntity> _hafTemplateCollectionViaAccount;
		private EntityCollection<HafTemplateEntity> _hafTemplateCollectionViaAccount___;
		private EntityCollection<HealthPlanCallQueueCriteriaEntity> _healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload;
		private EntityCollection<LookupEntity> _lookupCollectionViaStaffEventScheduleUpload_;
		private EntityCollection<LookupEntity> _lookupCollectionViaRapsUpload;
		private EntityCollection<LookupEntity> _lookupCollectionViaCustomerPhoneNumberUpdateUpload;
		private EntityCollection<LookupEntity> _lookupCollectionViaEligibilityUpload;
		private EntityCollection<LookupEntity> _lookupCollectionViaCustomerPhoneNumberUpdateUpload_;
		private EntityCollection<LookupEntity> _lookupCollectionViaEligibilityUpload_;
		private EntityCollection<LookupEntity> _lookupCollectionViaStaffEventScheduleUpload;
		private EntityCollection<LookupEntity> _lookupCollectionViaRapsUpload_;
		private EntityCollection<LookupEntity> _lookupCollectionViaMergeCustomerUpload_;
		private EntityCollection<LookupEntity> _lookupCollectionViaMergeCustomerUpload;
		private EntityCollection<LookupEntity> _lookupCollectionViaMedicationUpload_;
		private EntityCollection<LookupEntity> _lookupCollectionViaOutboundUpload__;
		private EntityCollection<LookupEntity> _lookupCollectionViaOutboundUpload;
		private EntityCollection<LookupEntity> _lookupCollectionViaOutboundUpload___;
		private EntityCollection<LookupEntity> _lookupCollectionViaPackage;
		private EntityCollection<LookupEntity> _lookupCollectionViaSuspectConditionUpload_;
		private EntityCollection<LookupEntity> _lookupCollectionViaExportableReportsQueue;
		private EntityCollection<LookupEntity> _lookupCollectionViaSuspectConditionUpload;
		private EntityCollection<LookupEntity> _lookupCollectionViaMedicationUpload;
		private EntityCollection<LookupEntity> _lookupCollectionViaHostImage;
		private EntityCollection<LookupEntity> _lookupCollectionViaOutboundUpload_;
		private EntityCollection<LookupEntity> _lookupCollectionViaWellMedAttestation;
		private EntityCollection<LookupEntity> _lookupCollectionViaAccount___;
		private EntityCollection<LookupEntity> _lookupCollectionViaAccount______;
		private EntityCollection<LookupEntity> _lookupCollectionViaAccount__;
		private EntityCollection<LookupEntity> _lookupCollectionViaCorporateUpload_;
		private EntityCollection<LookupEntity> _lookupCollectionViaAccount____;
		private EntityCollection<LookupEntity> _lookupCollectionViaAccount_____;
		private EntityCollection<LookupEntity> _lookupCollectionViaCallUpload_;
		private EntityCollection<LookupEntity> _lookupCollectionViaCorporateUpload;
		private EntityCollection<LookupEntity> _lookupCollectionViaCallUpload;
		private EntityCollection<LookupEntity> _lookupCollectionViaAccount_;
		private EntityCollection<LookupEntity> _lookupCollectionViaCustomerActivityTypeUpload_;
		private EntityCollection<LookupEntity> _lookupCollectionViaAccount;
		private EntityCollection<LookupEntity> _lookupCollectionViaAccount_______;
		private EntityCollection<LookupEntity> _lookupCollectionViaCorporateUpload__;
		private EntityCollection<LookupEntity> _lookupCollectionViaCustomerActivityTypeUpload;
		private EntityCollection<LookupEntity> _lookupCollectionViaAccount________;
		private EntityCollection<MedicalVendorTypeEntity> _medicalVendorTypeCollectionViaMedicalVendorProfile;
		private EntityCollection<MedicalVendorTypeEntity> _medicalVendorTypeCollectionViaMedicalVendorProfile_;
		private EntityCollection<MvuserClassificationEntity> _mvuserClassificationCollectionViaPhysicianProfile_;
		private EntityCollection<MvuserClassificationEntity> _mvuserClassificationCollectionViaPhysicianProfile;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaMergeCustomerUpload;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaCustomerActivityTypeUpload_;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaMergeCustomerUpload_;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaMedicationUpload_;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaStaffEventScheduleUpload_;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaStaffEventScheduleUpload;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaSuspectConditionUpload_;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaSuspectConditionUpload;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaRapsUpload_;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaParticipationConsentSignature_;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaParticipationConsentSignature;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaRapsUpload;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaPhysicianRecordRequestSignature;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaFluConsentSignature;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaCorporateUpload;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaCallUpload_;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaEligibilityUpload;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaEventCustomerGiftCard_;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaEligibilityUpload_;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaChaperoneSignature_;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaExitInterviewSignature;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaCorporateUpload__;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaExportableReportsQueue;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaChaperoneSignature;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaEventCustomerGiftCard;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaFluConsentSignature_;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaMedicationUpload;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaCustomerActivityTypeUpload;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaCallUpload;
		private EntityCollection<OrganizationRoleUserEntity> _organizationRoleUserCollectionViaCorporateUpload_;
		private EntityCollection<OrganizationTypeEntity> _organizationTypeCollectionViaOrganization;
		private EntityCollection<OrganizationTypeEntity> _organizationTypeCollectionViaOrganization_;
		private EntityCollection<PhysicianSpecializationEntity> _physicianSpecializationCollectionViaPhysicianProfile_;
		private EntityCollection<PhysicianSpecializationEntity> _physicianSpecializationCollectionViaPhysicianProfile;
		private EntityCollection<ProspectsEntity> _prospectsCollectionViaAccount;
		private EntityCollection<ProspectsEntity> _prospectsCollectionViaAccount________;
		private EntityCollection<ProspectsEntity> _prospectsCollectionViaAccount__;
		private EntityCollection<ProspectsEntity> _prospectsCollectionViaAccount_;
		private EntityCollection<ProspectsEntity> _prospectsCollectionViaAccount______;
		private EntityCollection<ProspectsEntity> _prospectsCollectionViaAccount____;
		private EntityCollection<ProspectsEntity> _prospectsCollectionViaHostImage;
		private EntityCollection<ProspectsEntity> _prospectsCollectionViaAccount___;
		private EntityCollection<ProspectsEntity> _prospectsCollectionViaAccount_____;
		private EntityCollection<ProspectsEntity> _prospectsCollectionViaAccount_______;
		private EntityCollection<SurveyTemplateEntity> _surveyTemplateCollectionViaAccount_______;
		private EntityCollection<SurveyTemplateEntity> _surveyTemplateCollectionViaAccount________;
		private EntityCollection<SurveyTemplateEntity> _surveyTemplateCollectionViaAccount;
		private EntityCollection<SurveyTemplateEntity> _surveyTemplateCollectionViaAccount______;
		private EntityCollection<SurveyTemplateEntity> _surveyTemplateCollectionViaAccount__;
		private EntityCollection<SurveyTemplateEntity> _surveyTemplateCollectionViaAccount___;
		private EntityCollection<SurveyTemplateEntity> _surveyTemplateCollectionViaAccount____;
		private EntityCollection<SurveyTemplateEntity> _surveyTemplateCollectionViaAccount_;
		private EntityCollection<SurveyTemplateEntity> _surveyTemplateCollectionViaAccount_____;
		private LookupEntity _lookup;
		private OrganizationRoleUserEntity _organizationRoleUser;

		
		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		#endregion

		#region Statics
		private static Dictionary<string, string>	_customProperties;
		private static Dictionary<string, Dictionary<string, string>>	_fieldsCustomProperties;

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name Lookup</summary>
			public static readonly string Lookup = "Lookup";
			/// <summary>Member name OrganizationRoleUser</summary>
			public static readonly string OrganizationRoleUser = "OrganizationRoleUser";
			/// <summary>Member name Account______</summary>
			public static readonly string Account______ = "Account______";
			/// <summary>Member name Account_____</summary>
			public static readonly string Account_____ = "Account_____";
			/// <summary>Member name Account________</summary>
			public static readonly string Account________ = "Account________";
			/// <summary>Member name Account_______</summary>
			public static readonly string Account_______ = "Account_______";
			/// <summary>Member name Account____</summary>
			public static readonly string Account____ = "Account____";
			/// <summary>Member name Account_</summary>
			public static readonly string Account_ = "Account_";
			/// <summary>Member name Account</summary>
			public static readonly string Account = "Account";
			/// <summary>Member name Account___</summary>
			public static readonly string Account___ = "Account___";
			/// <summary>Member name Account__</summary>
			public static readonly string Account__ = "Account__";
			/// <summary>Member name CallUpload_</summary>
			public static readonly string CallUpload_ = "CallUpload_";
			/// <summary>Member name CallUpload</summary>
			public static readonly string CallUpload = "CallUpload";
			/// <summary>Member name ChaperoneSignature_</summary>
			public static readonly string ChaperoneSignature_ = "ChaperoneSignature_";
			/// <summary>Member name ChaperoneSignature</summary>
			public static readonly string ChaperoneSignature = "ChaperoneSignature";
			/// <summary>Member name CorporateUpload_</summary>
			public static readonly string CorporateUpload_ = "CorporateUpload_";
			/// <summary>Member name CorporateUpload</summary>
			public static readonly string CorporateUpload = "CorporateUpload";
			/// <summary>Member name CorporateUpload__</summary>
			public static readonly string CorporateUpload__ = "CorporateUpload__";
			/// <summary>Member name CustomerActivityTypeUpload_</summary>
			public static readonly string CustomerActivityTypeUpload_ = "CustomerActivityTypeUpload_";
			/// <summary>Member name CustomerActivityTypeUpload</summary>
			public static readonly string CustomerActivityTypeUpload = "CustomerActivityTypeUpload";
			/// <summary>Member name CustomerPhoneNumberUpdateUpload_</summary>
			public static readonly string CustomerPhoneNumberUpdateUpload_ = "CustomerPhoneNumberUpdateUpload_";
			/// <summary>Member name CustomerPhoneNumberUpdateUpload</summary>
			public static readonly string CustomerPhoneNumberUpdateUpload = "CustomerPhoneNumberUpdateUpload";
			/// <summary>Member name EligibilityUpload_</summary>
			public static readonly string EligibilityUpload_ = "EligibilityUpload_";
			/// <summary>Member name EligibilityUpload</summary>
			public static readonly string EligibilityUpload = "EligibilityUpload";
			/// <summary>Member name EventCustomerGiftCard_</summary>
			public static readonly string EventCustomerGiftCard_ = "EventCustomerGiftCard_";
			/// <summary>Member name EventCustomerGiftCard</summary>
			public static readonly string EventCustomerGiftCard = "EventCustomerGiftCard";
			/// <summary>Member name ExitInterviewSignature</summary>
			public static readonly string ExitInterviewSignature = "ExitInterviewSignature";
			/// <summary>Member name ExportableReportsQueue</summary>
			public static readonly string ExportableReportsQueue = "ExportableReportsQueue";
			/// <summary>Member name FluConsentSignature_</summary>
			public static readonly string FluConsentSignature_ = "FluConsentSignature_";
			/// <summary>Member name FluConsentSignature</summary>
			public static readonly string FluConsentSignature = "FluConsentSignature";
			/// <summary>Member name HealthPlanCriteriaAssignmentUpload</summary>
			public static readonly string HealthPlanCriteriaAssignmentUpload = "HealthPlanCriteriaAssignmentUpload";
			/// <summary>Member name HostImage</summary>
			public static readonly string HostImage = "HostImage";
			/// <summary>Member name MedicalVendorProfile_</summary>
			public static readonly string MedicalVendorProfile_ = "MedicalVendorProfile_";
			/// <summary>Member name MedicalVendorProfile</summary>
			public static readonly string MedicalVendorProfile = "MedicalVendorProfile";
			/// <summary>Member name MedicationUpload_</summary>
			public static readonly string MedicationUpload_ = "MedicationUpload_";
			/// <summary>Member name MedicationUpload</summary>
			public static readonly string MedicationUpload = "MedicationUpload";
			/// <summary>Member name MergeCustomerUpload_</summary>
			public static readonly string MergeCustomerUpload_ = "MergeCustomerUpload_";
			/// <summary>Member name MergeCustomerUpload</summary>
			public static readonly string MergeCustomerUpload = "MergeCustomerUpload";
			/// <summary>Member name Organization_</summary>
			public static readonly string Organization_ = "Organization_";
			/// <summary>Member name Organization</summary>
			public static readonly string Organization = "Organization";
			/// <summary>Member name OutboundUpload_</summary>
			public static readonly string OutboundUpload_ = "OutboundUpload_";
			/// <summary>Member name OutboundUpload</summary>
			public static readonly string OutboundUpload = "OutboundUpload";
			/// <summary>Member name Package</summary>
			public static readonly string Package = "Package";
			/// <summary>Member name ParticipationConsentSignature_</summary>
			public static readonly string ParticipationConsentSignature_ = "ParticipationConsentSignature_";
			/// <summary>Member name ParticipationConsentSignature</summary>
			public static readonly string ParticipationConsentSignature = "ParticipationConsentSignature";
			/// <summary>Member name PhysicianProfile_</summary>
			public static readonly string PhysicianProfile_ = "PhysicianProfile_";
			/// <summary>Member name PhysicianProfile</summary>
			public static readonly string PhysicianProfile = "PhysicianProfile";
			/// <summary>Member name PhysicianRecordRequestSignature</summary>
			public static readonly string PhysicianRecordRequestSignature = "PhysicianRecordRequestSignature";
			/// <summary>Member name RapsUpload_</summary>
			public static readonly string RapsUpload_ = "RapsUpload_";
			/// <summary>Member name RapsUpload</summary>
			public static readonly string RapsUpload = "RapsUpload";
			/// <summary>Member name ResultArchiveUpload</summary>
			public static readonly string ResultArchiveUpload = "ResultArchiveUpload";
			/// <summary>Member name StaffEventScheduleUpload_</summary>
			public static readonly string StaffEventScheduleUpload_ = "StaffEventScheduleUpload_";
			/// <summary>Member name StaffEventScheduleUpload</summary>
			public static readonly string StaffEventScheduleUpload = "StaffEventScheduleUpload";
			/// <summary>Member name SuspectConditionUpload_</summary>
			public static readonly string SuspectConditionUpload_ = "SuspectConditionUpload_";
			/// <summary>Member name SuspectConditionUpload</summary>
			public static readonly string SuspectConditionUpload = "SuspectConditionUpload";
			/// <summary>Member name Testimonial</summary>
			public static readonly string Testimonial = "Testimonial";
			/// <summary>Member name TestMedia</summary>
			public static readonly string TestMedia = "TestMedia";
			/// <summary>Member name WellMedAttestation</summary>
			public static readonly string WellMedAttestation = "WellMedAttestation";
			/// <summary>Member name AccountCollectionViaEligibilityUpload_</summary>
			public static readonly string AccountCollectionViaEligibilityUpload_ = "AccountCollectionViaEligibilityUpload_";
			/// <summary>Member name AccountCollectionViaCorporateUpload</summary>
			public static readonly string AccountCollectionViaCorporateUpload = "AccountCollectionViaCorporateUpload";
			/// <summary>Member name AccountCollectionViaCorporateUpload__</summary>
			public static readonly string AccountCollectionViaCorporateUpload__ = "AccountCollectionViaCorporateUpload__";
			/// <summary>Member name AccountCollectionViaCorporateUpload_</summary>
			public static readonly string AccountCollectionViaCorporateUpload_ = "AccountCollectionViaCorporateUpload_";
			/// <summary>Member name AccountCollectionViaEligibilityUpload</summary>
			public static readonly string AccountCollectionViaEligibilityUpload = "AccountCollectionViaEligibilityUpload";
			/// <summary>Member name AddressCollectionViaOrganization_</summary>
			public static readonly string AddressCollectionViaOrganization_ = "AddressCollectionViaOrganization_";
			/// <summary>Member name AddressCollectionViaOrganization</summary>
			public static readonly string AddressCollectionViaOrganization = "AddressCollectionViaOrganization";
			/// <summary>Member name CheckListQuestionCollectionViaExitInterviewSignature</summary>
			public static readonly string CheckListQuestionCollectionViaExitInterviewSignature = "CheckListQuestionCollectionViaExitInterviewSignature";
			/// <summary>Member name CheckListTemplateCollectionViaAccount_________________</summary>
			public static readonly string CheckListTemplateCollectionViaAccount_________________ = "CheckListTemplateCollectionViaAccount_________________";
			/// <summary>Member name CheckListTemplateCollectionViaAccount_____</summary>
			public static readonly string CheckListTemplateCollectionViaAccount_____ = "CheckListTemplateCollectionViaAccount_____";
			/// <summary>Member name CheckListTemplateCollectionViaAccount____</summary>
			public static readonly string CheckListTemplateCollectionViaAccount____ = "CheckListTemplateCollectionViaAccount____";
			/// <summary>Member name CheckListTemplateCollectionViaAccount_____________</summary>
			public static readonly string CheckListTemplateCollectionViaAccount_____________ = "CheckListTemplateCollectionViaAccount_____________";
			/// <summary>Member name CheckListTemplateCollectionViaAccount______</summary>
			public static readonly string CheckListTemplateCollectionViaAccount______ = "CheckListTemplateCollectionViaAccount______";
			/// <summary>Member name CheckListTemplateCollectionViaAccount_______</summary>
			public static readonly string CheckListTemplateCollectionViaAccount_______ = "CheckListTemplateCollectionViaAccount_______";
			/// <summary>Member name CheckListTemplateCollectionViaAccount__________</summary>
			public static readonly string CheckListTemplateCollectionViaAccount__________ = "CheckListTemplateCollectionViaAccount__________";
			/// <summary>Member name CheckListTemplateCollectionViaAccount_________</summary>
			public static readonly string CheckListTemplateCollectionViaAccount_________ = "CheckListTemplateCollectionViaAccount_________";
			/// <summary>Member name CheckListTemplateCollectionViaAccount____________</summary>
			public static readonly string CheckListTemplateCollectionViaAccount____________ = "CheckListTemplateCollectionViaAccount____________";
			/// <summary>Member name CheckListTemplateCollectionViaAccount___________</summary>
			public static readonly string CheckListTemplateCollectionViaAccount___________ = "CheckListTemplateCollectionViaAccount___________";
			/// <summary>Member name CheckListTemplateCollectionViaAccount_______________</summary>
			public static readonly string CheckListTemplateCollectionViaAccount_______________ = "CheckListTemplateCollectionViaAccount_______________";
			/// <summary>Member name CheckListTemplateCollectionViaAccount________________</summary>
			public static readonly string CheckListTemplateCollectionViaAccount________________ = "CheckListTemplateCollectionViaAccount________________";
			/// <summary>Member name CheckListTemplateCollectionViaAccount________</summary>
			public static readonly string CheckListTemplateCollectionViaAccount________ = "CheckListTemplateCollectionViaAccount________";
			/// <summary>Member name CheckListTemplateCollectionViaAccount______________</summary>
			public static readonly string CheckListTemplateCollectionViaAccount______________ = "CheckListTemplateCollectionViaAccount______________";
			/// <summary>Member name CheckListTemplateCollectionViaAccount_</summary>
			public static readonly string CheckListTemplateCollectionViaAccount_ = "CheckListTemplateCollectionViaAccount_";
			/// <summary>Member name CheckListTemplateCollectionViaAccount___</summary>
			public static readonly string CheckListTemplateCollectionViaAccount___ = "CheckListTemplateCollectionViaAccount___";
			/// <summary>Member name CheckListTemplateCollectionViaAccount__</summary>
			public static readonly string CheckListTemplateCollectionViaAccount__ = "CheckListTemplateCollectionViaAccount__";
			/// <summary>Member name CheckListTemplateCollectionViaAccount</summary>
			public static readonly string CheckListTemplateCollectionViaAccount = "CheckListTemplateCollectionViaAccount";
			/// <summary>Member name ContractCollectionViaMedicalVendorProfile_</summary>
			public static readonly string ContractCollectionViaMedicalVendorProfile_ = "ContractCollectionViaMedicalVendorProfile_";
			/// <summary>Member name ContractCollectionViaMedicalVendorProfile</summary>
			public static readonly string ContractCollectionViaMedicalVendorProfile = "ContractCollectionViaMedicalVendorProfile";
			/// <summary>Member name CustomerEventScreeningTestsCollectionViaTestMedia</summary>
			public static readonly string CustomerEventScreeningTestsCollectionViaTestMedia = "CustomerEventScreeningTestsCollectionViaTestMedia";
			/// <summary>Member name CustomerProfileCollectionViaTestimonial</summary>
			public static readonly string CustomerProfileCollectionViaTestimonial = "CustomerProfileCollectionViaTestimonial";
			/// <summary>Member name EmailTemplateCollectionViaAccount_________________</summary>
			public static readonly string EmailTemplateCollectionViaAccount_________________ = "EmailTemplateCollectionViaAccount_________________";
			/// <summary>Member name EmailTemplateCollectionViaAccount__________________</summary>
			public static readonly string EmailTemplateCollectionViaAccount__________________ = "EmailTemplateCollectionViaAccount__________________";
			/// <summary>Member name EmailTemplateCollectionViaAccount___________________</summary>
			public static readonly string EmailTemplateCollectionViaAccount___________________ = "EmailTemplateCollectionViaAccount___________________";
			/// <summary>Member name EmailTemplateCollectionViaAccount_____________________________</summary>
			public static readonly string EmailTemplateCollectionViaAccount_____________________________ = "EmailTemplateCollectionViaAccount_____________________________";
			/// <summary>Member name EmailTemplateCollectionViaAccount___________________________________</summary>
			public static readonly string EmailTemplateCollectionViaAccount___________________________________ = "EmailTemplateCollectionViaAccount___________________________________";
			/// <summary>Member name EmailTemplateCollectionViaAccount________________</summary>
			public static readonly string EmailTemplateCollectionViaAccount________________ = "EmailTemplateCollectionViaAccount________________";
			/// <summary>Member name EmailTemplateCollectionViaAccount___________________________</summary>
			public static readonly string EmailTemplateCollectionViaAccount___________________________ = "EmailTemplateCollectionViaAccount___________________________";
			/// <summary>Member name EmailTemplateCollectionViaAccount__________________________</summary>
			public static readonly string EmailTemplateCollectionViaAccount__________________________ = "EmailTemplateCollectionViaAccount__________________________";
			/// <summary>Member name EmailTemplateCollectionViaAccount_________________________</summary>
			public static readonly string EmailTemplateCollectionViaAccount_________________________ = "EmailTemplateCollectionViaAccount_________________________";
			/// <summary>Member name EmailTemplateCollectionViaAccount____________________________</summary>
			public static readonly string EmailTemplateCollectionViaAccount____________________________ = "EmailTemplateCollectionViaAccount____________________________";
			/// <summary>Member name EmailTemplateCollectionViaAccount______________________________</summary>
			public static readonly string EmailTemplateCollectionViaAccount______________________________ = "EmailTemplateCollectionViaAccount______________________________";
			/// <summary>Member name EmailTemplateCollectionViaAccount_______________________________</summary>
			public static readonly string EmailTemplateCollectionViaAccount_______________________________ = "EmailTemplateCollectionViaAccount_______________________________";
			/// <summary>Member name EmailTemplateCollectionViaAccount________________________________</summary>
			public static readonly string EmailTemplateCollectionViaAccount________________________________ = "EmailTemplateCollectionViaAccount________________________________";
			/// <summary>Member name EmailTemplateCollectionViaAccount_________________________________</summary>
			public static readonly string EmailTemplateCollectionViaAccount_________________________________ = "EmailTemplateCollectionViaAccount_________________________________";
			/// <summary>Member name EmailTemplateCollectionViaAccount__________________________________</summary>
			public static readonly string EmailTemplateCollectionViaAccount__________________________________ = "EmailTemplateCollectionViaAccount__________________________________";
			/// <summary>Member name EmailTemplateCollectionViaAccount____________________</summary>
			public static readonly string EmailTemplateCollectionViaAccount____________________ = "EmailTemplateCollectionViaAccount____________________";
			/// <summary>Member name EmailTemplateCollectionViaAccount_____________________</summary>
			public static readonly string EmailTemplateCollectionViaAccount_____________________ = "EmailTemplateCollectionViaAccount_____________________";
			/// <summary>Member name EmailTemplateCollectionViaAccount________________________</summary>
			public static readonly string EmailTemplateCollectionViaAccount________________________ = "EmailTemplateCollectionViaAccount________________________";
			/// <summary>Member name EmailTemplateCollectionViaAccount_______________________</summary>
			public static readonly string EmailTemplateCollectionViaAccount_______________________ = "EmailTemplateCollectionViaAccount_______________________";
			/// <summary>Member name EmailTemplateCollectionViaAccount______________________</summary>
			public static readonly string EmailTemplateCollectionViaAccount______________________ = "EmailTemplateCollectionViaAccount______________________";
			/// <summary>Member name EmailTemplateCollectionViaAccount__</summary>
			public static readonly string EmailTemplateCollectionViaAccount__ = "EmailTemplateCollectionViaAccount__";
			/// <summary>Member name EmailTemplateCollectionViaAccount___</summary>
			public static readonly string EmailTemplateCollectionViaAccount___ = "EmailTemplateCollectionViaAccount___";
			/// <summary>Member name EmailTemplateCollectionViaAccount____________</summary>
			public static readonly string EmailTemplateCollectionViaAccount____________ = "EmailTemplateCollectionViaAccount____________";
			/// <summary>Member name EmailTemplateCollectionViaAccount____</summary>
			public static readonly string EmailTemplateCollectionViaAccount____ = "EmailTemplateCollectionViaAccount____";
			/// <summary>Member name EmailTemplateCollectionViaAccount________</summary>
			public static readonly string EmailTemplateCollectionViaAccount________ = "EmailTemplateCollectionViaAccount________";
			/// <summary>Member name EmailTemplateCollectionViaAccount_______</summary>
			public static readonly string EmailTemplateCollectionViaAccount_______ = "EmailTemplateCollectionViaAccount_______";
			/// <summary>Member name EmailTemplateCollectionViaAccount___________</summary>
			public static readonly string EmailTemplateCollectionViaAccount___________ = "EmailTemplateCollectionViaAccount___________";
			/// <summary>Member name EmailTemplateCollectionViaAccount__________</summary>
			public static readonly string EmailTemplateCollectionViaAccount__________ = "EmailTemplateCollectionViaAccount__________";
			/// <summary>Member name EmailTemplateCollectionViaAccount_</summary>
			public static readonly string EmailTemplateCollectionViaAccount_ = "EmailTemplateCollectionViaAccount_";
			/// <summary>Member name EmailTemplateCollectionViaAccount_____</summary>
			public static readonly string EmailTemplateCollectionViaAccount_____ = "EmailTemplateCollectionViaAccount_____";
			/// <summary>Member name EmailTemplateCollectionViaAccount</summary>
			public static readonly string EmailTemplateCollectionViaAccount = "EmailTemplateCollectionViaAccount";
			/// <summary>Member name EmailTemplateCollectionViaAccount_________</summary>
			public static readonly string EmailTemplateCollectionViaAccount_________ = "EmailTemplateCollectionViaAccount_________";
			/// <summary>Member name EmailTemplateCollectionViaAccount______</summary>
			public static readonly string EmailTemplateCollectionViaAccount______ = "EmailTemplateCollectionViaAccount______";
			/// <summary>Member name EmailTemplateCollectionViaAccount______________</summary>
			public static readonly string EmailTemplateCollectionViaAccount______________ = "EmailTemplateCollectionViaAccount______________";
			/// <summary>Member name EmailTemplateCollectionViaAccount_______________</summary>
			public static readonly string EmailTemplateCollectionViaAccount_______________ = "EmailTemplateCollectionViaAccount_______________";
			/// <summary>Member name EmailTemplateCollectionViaAccount_____________</summary>
			public static readonly string EmailTemplateCollectionViaAccount_____________ = "EmailTemplateCollectionViaAccount_____________";
			/// <summary>Member name EventCustomerResultCollectionViaWellMedAttestation</summary>
			public static readonly string EventCustomerResultCollectionViaWellMedAttestation = "EventCustomerResultCollectionViaWellMedAttestation";
			/// <summary>Member name EventCustomersCollectionViaChaperoneSignature</summary>
			public static readonly string EventCustomersCollectionViaChaperoneSignature = "EventCustomersCollectionViaChaperoneSignature";
			/// <summary>Member name EventCustomersCollectionViaFluConsentSignature</summary>
			public static readonly string EventCustomersCollectionViaFluConsentSignature = "EventCustomersCollectionViaFluConsentSignature";
			/// <summary>Member name EventCustomersCollectionViaParticipationConsentSignature</summary>
			public static readonly string EventCustomersCollectionViaParticipationConsentSignature = "EventCustomersCollectionViaParticipationConsentSignature";
			/// <summary>Member name EventCustomersCollectionViaFluConsentSignature_</summary>
			public static readonly string EventCustomersCollectionViaFluConsentSignature_ = "EventCustomersCollectionViaFluConsentSignature_";
			/// <summary>Member name EventCustomersCollectionViaParticipationConsentSignature_</summary>
			public static readonly string EventCustomersCollectionViaParticipationConsentSignature_ = "EventCustomersCollectionViaParticipationConsentSignature_";
			/// <summary>Member name EventCustomersCollectionViaExitInterviewSignature</summary>
			public static readonly string EventCustomersCollectionViaExitInterviewSignature = "EventCustomersCollectionViaExitInterviewSignature";
			/// <summary>Member name EventCustomersCollectionViaEventCustomerGiftCard_</summary>
			public static readonly string EventCustomersCollectionViaEventCustomerGiftCard_ = "EventCustomersCollectionViaEventCustomerGiftCard_";
			/// <summary>Member name EventCustomersCollectionViaChaperoneSignature_</summary>
			public static readonly string EventCustomersCollectionViaChaperoneSignature_ = "EventCustomersCollectionViaChaperoneSignature_";
			/// <summary>Member name EventCustomersCollectionViaPhysicianRecordRequestSignature</summary>
			public static readonly string EventCustomersCollectionViaPhysicianRecordRequestSignature = "EventCustomersCollectionViaPhysicianRecordRequestSignature";
			/// <summary>Member name EventCustomersCollectionViaEventCustomerGiftCard</summary>
			public static readonly string EventCustomersCollectionViaEventCustomerGiftCard = "EventCustomersCollectionViaEventCustomerGiftCard";
			/// <summary>Member name EventsCollectionViaResultArchiveUpload</summary>
			public static readonly string EventsCollectionViaResultArchiveUpload = "EventsCollectionViaResultArchiveUpload";
			/// <summary>Member name ExportableReportsCollectionViaExportableReportsQueue</summary>
			public static readonly string ExportableReportsCollectionViaExportableReportsQueue = "ExportableReportsCollectionViaExportableReportsQueue";
			/// <summary>Member name FluConsentTemplateCollectionViaAccount______</summary>
			public static readonly string FluConsentTemplateCollectionViaAccount______ = "FluConsentTemplateCollectionViaAccount______";
			/// <summary>Member name FluConsentTemplateCollectionViaAccount</summary>
			public static readonly string FluConsentTemplateCollectionViaAccount = "FluConsentTemplateCollectionViaAccount";
			/// <summary>Member name FluConsentTemplateCollectionViaAccount________</summary>
			public static readonly string FluConsentTemplateCollectionViaAccount________ = "FluConsentTemplateCollectionViaAccount________";
			/// <summary>Member name FluConsentTemplateCollectionViaAccount_______</summary>
			public static readonly string FluConsentTemplateCollectionViaAccount_______ = "FluConsentTemplateCollectionViaAccount_______";
			/// <summary>Member name FluConsentTemplateCollectionViaAccount___</summary>
			public static readonly string FluConsentTemplateCollectionViaAccount___ = "FluConsentTemplateCollectionViaAccount___";
			/// <summary>Member name FluConsentTemplateCollectionViaAccount_____</summary>
			public static readonly string FluConsentTemplateCollectionViaAccount_____ = "FluConsentTemplateCollectionViaAccount_____";
			/// <summary>Member name FluConsentTemplateCollectionViaAccount__</summary>
			public static readonly string FluConsentTemplateCollectionViaAccount__ = "FluConsentTemplateCollectionViaAccount__";
			/// <summary>Member name FluConsentTemplateCollectionViaAccount_</summary>
			public static readonly string FluConsentTemplateCollectionViaAccount_ = "FluConsentTemplateCollectionViaAccount_";
			/// <summary>Member name FluConsentTemplateCollectionViaAccount____</summary>
			public static readonly string FluConsentTemplateCollectionViaAccount____ = "FluConsentTemplateCollectionViaAccount____";
			/// <summary>Member name HafTemplateCollectionViaAccount________</summary>
			public static readonly string HafTemplateCollectionViaAccount________ = "HafTemplateCollectionViaAccount________";
			/// <summary>Member name HafTemplateCollectionViaAccount______</summary>
			public static readonly string HafTemplateCollectionViaAccount______ = "HafTemplateCollectionViaAccount______";
			/// <summary>Member name HafTemplateCollectionViaAccount__</summary>
			public static readonly string HafTemplateCollectionViaAccount__ = "HafTemplateCollectionViaAccount__";
			/// <summary>Member name HafTemplateCollectionViaAccount____</summary>
			public static readonly string HafTemplateCollectionViaAccount____ = "HafTemplateCollectionViaAccount____";
			/// <summary>Member name HafTemplateCollectionViaPackage</summary>
			public static readonly string HafTemplateCollectionViaPackage = "HafTemplateCollectionViaPackage";
			/// <summary>Member name HafTemplateCollectionViaAccount_</summary>
			public static readonly string HafTemplateCollectionViaAccount_ = "HafTemplateCollectionViaAccount_";
			/// <summary>Member name HafTemplateCollectionViaAccount_______</summary>
			public static readonly string HafTemplateCollectionViaAccount_______ = "HafTemplateCollectionViaAccount_______";
			/// <summary>Member name HafTemplateCollectionViaAccount_____</summary>
			public static readonly string HafTemplateCollectionViaAccount_____ = "HafTemplateCollectionViaAccount_____";
			/// <summary>Member name HafTemplateCollectionViaAccount</summary>
			public static readonly string HafTemplateCollectionViaAccount = "HafTemplateCollectionViaAccount";
			/// <summary>Member name HafTemplateCollectionViaAccount___</summary>
			public static readonly string HafTemplateCollectionViaAccount___ = "HafTemplateCollectionViaAccount___";
			/// <summary>Member name HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload</summary>
			public static readonly string HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload = "HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload";
			/// <summary>Member name LookupCollectionViaStaffEventScheduleUpload_</summary>
			public static readonly string LookupCollectionViaStaffEventScheduleUpload_ = "LookupCollectionViaStaffEventScheduleUpload_";
			/// <summary>Member name LookupCollectionViaRapsUpload</summary>
			public static readonly string LookupCollectionViaRapsUpload = "LookupCollectionViaRapsUpload";
			/// <summary>Member name LookupCollectionViaCustomerPhoneNumberUpdateUpload</summary>
			public static readonly string LookupCollectionViaCustomerPhoneNumberUpdateUpload = "LookupCollectionViaCustomerPhoneNumberUpdateUpload";
			/// <summary>Member name LookupCollectionViaEligibilityUpload</summary>
			public static readonly string LookupCollectionViaEligibilityUpload = "LookupCollectionViaEligibilityUpload";
			/// <summary>Member name LookupCollectionViaCustomerPhoneNumberUpdateUpload_</summary>
			public static readonly string LookupCollectionViaCustomerPhoneNumberUpdateUpload_ = "LookupCollectionViaCustomerPhoneNumberUpdateUpload_";
			/// <summary>Member name LookupCollectionViaEligibilityUpload_</summary>
			public static readonly string LookupCollectionViaEligibilityUpload_ = "LookupCollectionViaEligibilityUpload_";
			/// <summary>Member name LookupCollectionViaStaffEventScheduleUpload</summary>
			public static readonly string LookupCollectionViaStaffEventScheduleUpload = "LookupCollectionViaStaffEventScheduleUpload";
			/// <summary>Member name LookupCollectionViaRapsUpload_</summary>
			public static readonly string LookupCollectionViaRapsUpload_ = "LookupCollectionViaRapsUpload_";
			/// <summary>Member name LookupCollectionViaMergeCustomerUpload_</summary>
			public static readonly string LookupCollectionViaMergeCustomerUpload_ = "LookupCollectionViaMergeCustomerUpload_";
			/// <summary>Member name LookupCollectionViaMergeCustomerUpload</summary>
			public static readonly string LookupCollectionViaMergeCustomerUpload = "LookupCollectionViaMergeCustomerUpload";
			/// <summary>Member name LookupCollectionViaMedicationUpload_</summary>
			public static readonly string LookupCollectionViaMedicationUpload_ = "LookupCollectionViaMedicationUpload_";
			/// <summary>Member name LookupCollectionViaOutboundUpload__</summary>
			public static readonly string LookupCollectionViaOutboundUpload__ = "LookupCollectionViaOutboundUpload__";
			/// <summary>Member name LookupCollectionViaOutboundUpload</summary>
			public static readonly string LookupCollectionViaOutboundUpload = "LookupCollectionViaOutboundUpload";
			/// <summary>Member name LookupCollectionViaOutboundUpload___</summary>
			public static readonly string LookupCollectionViaOutboundUpload___ = "LookupCollectionViaOutboundUpload___";
			/// <summary>Member name LookupCollectionViaPackage</summary>
			public static readonly string LookupCollectionViaPackage = "LookupCollectionViaPackage";
			/// <summary>Member name LookupCollectionViaSuspectConditionUpload_</summary>
			public static readonly string LookupCollectionViaSuspectConditionUpload_ = "LookupCollectionViaSuspectConditionUpload_";
			/// <summary>Member name LookupCollectionViaExportableReportsQueue</summary>
			public static readonly string LookupCollectionViaExportableReportsQueue = "LookupCollectionViaExportableReportsQueue";
			/// <summary>Member name LookupCollectionViaSuspectConditionUpload</summary>
			public static readonly string LookupCollectionViaSuspectConditionUpload = "LookupCollectionViaSuspectConditionUpload";
			/// <summary>Member name LookupCollectionViaMedicationUpload</summary>
			public static readonly string LookupCollectionViaMedicationUpload = "LookupCollectionViaMedicationUpload";
			/// <summary>Member name LookupCollectionViaHostImage</summary>
			public static readonly string LookupCollectionViaHostImage = "LookupCollectionViaHostImage";
			/// <summary>Member name LookupCollectionViaOutboundUpload_</summary>
			public static readonly string LookupCollectionViaOutboundUpload_ = "LookupCollectionViaOutboundUpload_";
			/// <summary>Member name LookupCollectionViaWellMedAttestation</summary>
			public static readonly string LookupCollectionViaWellMedAttestation = "LookupCollectionViaWellMedAttestation";
			/// <summary>Member name LookupCollectionViaAccount___</summary>
			public static readonly string LookupCollectionViaAccount___ = "LookupCollectionViaAccount___";
			/// <summary>Member name LookupCollectionViaAccount______</summary>
			public static readonly string LookupCollectionViaAccount______ = "LookupCollectionViaAccount______";
			/// <summary>Member name LookupCollectionViaAccount__</summary>
			public static readonly string LookupCollectionViaAccount__ = "LookupCollectionViaAccount__";
			/// <summary>Member name LookupCollectionViaCorporateUpload_</summary>
			public static readonly string LookupCollectionViaCorporateUpload_ = "LookupCollectionViaCorporateUpload_";
			/// <summary>Member name LookupCollectionViaAccount____</summary>
			public static readonly string LookupCollectionViaAccount____ = "LookupCollectionViaAccount____";
			/// <summary>Member name LookupCollectionViaAccount_____</summary>
			public static readonly string LookupCollectionViaAccount_____ = "LookupCollectionViaAccount_____";
			/// <summary>Member name LookupCollectionViaCallUpload_</summary>
			public static readonly string LookupCollectionViaCallUpload_ = "LookupCollectionViaCallUpload_";
			/// <summary>Member name LookupCollectionViaCorporateUpload</summary>
			public static readonly string LookupCollectionViaCorporateUpload = "LookupCollectionViaCorporateUpload";
			/// <summary>Member name LookupCollectionViaCallUpload</summary>
			public static readonly string LookupCollectionViaCallUpload = "LookupCollectionViaCallUpload";
			/// <summary>Member name LookupCollectionViaAccount_</summary>
			public static readonly string LookupCollectionViaAccount_ = "LookupCollectionViaAccount_";
			/// <summary>Member name LookupCollectionViaCustomerActivityTypeUpload_</summary>
			public static readonly string LookupCollectionViaCustomerActivityTypeUpload_ = "LookupCollectionViaCustomerActivityTypeUpload_";
			/// <summary>Member name LookupCollectionViaAccount</summary>
			public static readonly string LookupCollectionViaAccount = "LookupCollectionViaAccount";
			/// <summary>Member name LookupCollectionViaAccount_______</summary>
			public static readonly string LookupCollectionViaAccount_______ = "LookupCollectionViaAccount_______";
			/// <summary>Member name LookupCollectionViaCorporateUpload__</summary>
			public static readonly string LookupCollectionViaCorporateUpload__ = "LookupCollectionViaCorporateUpload__";
			/// <summary>Member name LookupCollectionViaCustomerActivityTypeUpload</summary>
			public static readonly string LookupCollectionViaCustomerActivityTypeUpload = "LookupCollectionViaCustomerActivityTypeUpload";
			/// <summary>Member name LookupCollectionViaAccount________</summary>
			public static readonly string LookupCollectionViaAccount________ = "LookupCollectionViaAccount________";
			/// <summary>Member name MedicalVendorTypeCollectionViaMedicalVendorProfile</summary>
			public static readonly string MedicalVendorTypeCollectionViaMedicalVendorProfile = "MedicalVendorTypeCollectionViaMedicalVendorProfile";
			/// <summary>Member name MedicalVendorTypeCollectionViaMedicalVendorProfile_</summary>
			public static readonly string MedicalVendorTypeCollectionViaMedicalVendorProfile_ = "MedicalVendorTypeCollectionViaMedicalVendorProfile_";
			/// <summary>Member name MvuserClassificationCollectionViaPhysicianProfile_</summary>
			public static readonly string MvuserClassificationCollectionViaPhysicianProfile_ = "MvuserClassificationCollectionViaPhysicianProfile_";
			/// <summary>Member name MvuserClassificationCollectionViaPhysicianProfile</summary>
			public static readonly string MvuserClassificationCollectionViaPhysicianProfile = "MvuserClassificationCollectionViaPhysicianProfile";
			/// <summary>Member name OrganizationRoleUserCollectionViaMergeCustomerUpload</summary>
			public static readonly string OrganizationRoleUserCollectionViaMergeCustomerUpload = "OrganizationRoleUserCollectionViaMergeCustomerUpload";
			/// <summary>Member name OrganizationRoleUserCollectionViaCustomerActivityTypeUpload_</summary>
			public static readonly string OrganizationRoleUserCollectionViaCustomerActivityTypeUpload_ = "OrganizationRoleUserCollectionViaCustomerActivityTypeUpload_";
			/// <summary>Member name OrganizationRoleUserCollectionViaMergeCustomerUpload_</summary>
			public static readonly string OrganizationRoleUserCollectionViaMergeCustomerUpload_ = "OrganizationRoleUserCollectionViaMergeCustomerUpload_";
			/// <summary>Member name OrganizationRoleUserCollectionViaMedicationUpload_</summary>
			public static readonly string OrganizationRoleUserCollectionViaMedicationUpload_ = "OrganizationRoleUserCollectionViaMedicationUpload_";
			/// <summary>Member name OrganizationRoleUserCollectionViaStaffEventScheduleUpload_</summary>
			public static readonly string OrganizationRoleUserCollectionViaStaffEventScheduleUpload_ = "OrganizationRoleUserCollectionViaStaffEventScheduleUpload_";
			/// <summary>Member name OrganizationRoleUserCollectionViaStaffEventScheduleUpload</summary>
			public static readonly string OrganizationRoleUserCollectionViaStaffEventScheduleUpload = "OrganizationRoleUserCollectionViaStaffEventScheduleUpload";
			/// <summary>Member name OrganizationRoleUserCollectionViaSuspectConditionUpload_</summary>
			public static readonly string OrganizationRoleUserCollectionViaSuspectConditionUpload_ = "OrganizationRoleUserCollectionViaSuspectConditionUpload_";
			/// <summary>Member name OrganizationRoleUserCollectionViaSuspectConditionUpload</summary>
			public static readonly string OrganizationRoleUserCollectionViaSuspectConditionUpload = "OrganizationRoleUserCollectionViaSuspectConditionUpload";
			/// <summary>Member name OrganizationRoleUserCollectionViaRapsUpload_</summary>
			public static readonly string OrganizationRoleUserCollectionViaRapsUpload_ = "OrganizationRoleUserCollectionViaRapsUpload_";
			/// <summary>Member name OrganizationRoleUserCollectionViaParticipationConsentSignature_</summary>
			public static readonly string OrganizationRoleUserCollectionViaParticipationConsentSignature_ = "OrganizationRoleUserCollectionViaParticipationConsentSignature_";
			/// <summary>Member name OrganizationRoleUserCollectionViaParticipationConsentSignature</summary>
			public static readonly string OrganizationRoleUserCollectionViaParticipationConsentSignature = "OrganizationRoleUserCollectionViaParticipationConsentSignature";
			/// <summary>Member name OrganizationRoleUserCollectionViaRapsUpload</summary>
			public static readonly string OrganizationRoleUserCollectionViaRapsUpload = "OrganizationRoleUserCollectionViaRapsUpload";
			/// <summary>Member name OrganizationRoleUserCollectionViaPhysicianRecordRequestSignature</summary>
			public static readonly string OrganizationRoleUserCollectionViaPhysicianRecordRequestSignature = "OrganizationRoleUserCollectionViaPhysicianRecordRequestSignature";
			/// <summary>Member name OrganizationRoleUserCollectionViaFluConsentSignature</summary>
			public static readonly string OrganizationRoleUserCollectionViaFluConsentSignature = "OrganizationRoleUserCollectionViaFluConsentSignature";
			/// <summary>Member name OrganizationRoleUserCollectionViaCorporateUpload</summary>
			public static readonly string OrganizationRoleUserCollectionViaCorporateUpload = "OrganizationRoleUserCollectionViaCorporateUpload";
			/// <summary>Member name OrganizationRoleUserCollectionViaCallUpload_</summary>
			public static readonly string OrganizationRoleUserCollectionViaCallUpload_ = "OrganizationRoleUserCollectionViaCallUpload_";
			/// <summary>Member name OrganizationRoleUserCollectionViaEligibilityUpload</summary>
			public static readonly string OrganizationRoleUserCollectionViaEligibilityUpload = "OrganizationRoleUserCollectionViaEligibilityUpload";
			/// <summary>Member name OrganizationRoleUserCollectionViaEventCustomerGiftCard_</summary>
			public static readonly string OrganizationRoleUserCollectionViaEventCustomerGiftCard_ = "OrganizationRoleUserCollectionViaEventCustomerGiftCard_";
			/// <summary>Member name OrganizationRoleUserCollectionViaEligibilityUpload_</summary>
			public static readonly string OrganizationRoleUserCollectionViaEligibilityUpload_ = "OrganizationRoleUserCollectionViaEligibilityUpload_";
			/// <summary>Member name OrganizationRoleUserCollectionViaChaperoneSignature_</summary>
			public static readonly string OrganizationRoleUserCollectionViaChaperoneSignature_ = "OrganizationRoleUserCollectionViaChaperoneSignature_";
			/// <summary>Member name OrganizationRoleUserCollectionViaExitInterviewSignature</summary>
			public static readonly string OrganizationRoleUserCollectionViaExitInterviewSignature = "OrganizationRoleUserCollectionViaExitInterviewSignature";
			/// <summary>Member name OrganizationRoleUserCollectionViaCorporateUpload__</summary>
			public static readonly string OrganizationRoleUserCollectionViaCorporateUpload__ = "OrganizationRoleUserCollectionViaCorporateUpload__";
			/// <summary>Member name OrganizationRoleUserCollectionViaExportableReportsQueue</summary>
			public static readonly string OrganizationRoleUserCollectionViaExportableReportsQueue = "OrganizationRoleUserCollectionViaExportableReportsQueue";
			/// <summary>Member name OrganizationRoleUserCollectionViaChaperoneSignature</summary>
			public static readonly string OrganizationRoleUserCollectionViaChaperoneSignature = "OrganizationRoleUserCollectionViaChaperoneSignature";
			/// <summary>Member name OrganizationRoleUserCollectionViaEventCustomerGiftCard</summary>
			public static readonly string OrganizationRoleUserCollectionViaEventCustomerGiftCard = "OrganizationRoleUserCollectionViaEventCustomerGiftCard";
			/// <summary>Member name OrganizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload</summary>
			public static readonly string OrganizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload = "OrganizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload";
			/// <summary>Member name OrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_</summary>
			public static readonly string OrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_ = "OrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_";
			/// <summary>Member name OrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload</summary>
			public static readonly string OrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload = "OrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload";
			/// <summary>Member name OrganizationRoleUserCollectionViaFluConsentSignature_</summary>
			public static readonly string OrganizationRoleUserCollectionViaFluConsentSignature_ = "OrganizationRoleUserCollectionViaFluConsentSignature_";
			/// <summary>Member name OrganizationRoleUserCollectionViaMedicationUpload</summary>
			public static readonly string OrganizationRoleUserCollectionViaMedicationUpload = "OrganizationRoleUserCollectionViaMedicationUpload";
			/// <summary>Member name OrganizationRoleUserCollectionViaCustomerActivityTypeUpload</summary>
			public static readonly string OrganizationRoleUserCollectionViaCustomerActivityTypeUpload = "OrganizationRoleUserCollectionViaCustomerActivityTypeUpload";
			/// <summary>Member name OrganizationRoleUserCollectionViaCallUpload</summary>
			public static readonly string OrganizationRoleUserCollectionViaCallUpload = "OrganizationRoleUserCollectionViaCallUpload";
			/// <summary>Member name OrganizationRoleUserCollectionViaCorporateUpload_</summary>
			public static readonly string OrganizationRoleUserCollectionViaCorporateUpload_ = "OrganizationRoleUserCollectionViaCorporateUpload_";
			/// <summary>Member name OrganizationTypeCollectionViaOrganization</summary>
			public static readonly string OrganizationTypeCollectionViaOrganization = "OrganizationTypeCollectionViaOrganization";
			/// <summary>Member name OrganizationTypeCollectionViaOrganization_</summary>
			public static readonly string OrganizationTypeCollectionViaOrganization_ = "OrganizationTypeCollectionViaOrganization_";
			/// <summary>Member name PhysicianSpecializationCollectionViaPhysicianProfile_</summary>
			public static readonly string PhysicianSpecializationCollectionViaPhysicianProfile_ = "PhysicianSpecializationCollectionViaPhysicianProfile_";
			/// <summary>Member name PhysicianSpecializationCollectionViaPhysicianProfile</summary>
			public static readonly string PhysicianSpecializationCollectionViaPhysicianProfile = "PhysicianSpecializationCollectionViaPhysicianProfile";
			/// <summary>Member name ProspectsCollectionViaAccount</summary>
			public static readonly string ProspectsCollectionViaAccount = "ProspectsCollectionViaAccount";
			/// <summary>Member name ProspectsCollectionViaAccount________</summary>
			public static readonly string ProspectsCollectionViaAccount________ = "ProspectsCollectionViaAccount________";
			/// <summary>Member name ProspectsCollectionViaAccount__</summary>
			public static readonly string ProspectsCollectionViaAccount__ = "ProspectsCollectionViaAccount__";
			/// <summary>Member name ProspectsCollectionViaAccount_</summary>
			public static readonly string ProspectsCollectionViaAccount_ = "ProspectsCollectionViaAccount_";
			/// <summary>Member name ProspectsCollectionViaAccount______</summary>
			public static readonly string ProspectsCollectionViaAccount______ = "ProspectsCollectionViaAccount______";
			/// <summary>Member name ProspectsCollectionViaAccount____</summary>
			public static readonly string ProspectsCollectionViaAccount____ = "ProspectsCollectionViaAccount____";
			/// <summary>Member name ProspectsCollectionViaHostImage</summary>
			public static readonly string ProspectsCollectionViaHostImage = "ProspectsCollectionViaHostImage";
			/// <summary>Member name ProspectsCollectionViaAccount___</summary>
			public static readonly string ProspectsCollectionViaAccount___ = "ProspectsCollectionViaAccount___";
			/// <summary>Member name ProspectsCollectionViaAccount_____</summary>
			public static readonly string ProspectsCollectionViaAccount_____ = "ProspectsCollectionViaAccount_____";
			/// <summary>Member name ProspectsCollectionViaAccount_______</summary>
			public static readonly string ProspectsCollectionViaAccount_______ = "ProspectsCollectionViaAccount_______";
			/// <summary>Member name SurveyTemplateCollectionViaAccount_______</summary>
			public static readonly string SurveyTemplateCollectionViaAccount_______ = "SurveyTemplateCollectionViaAccount_______";
			/// <summary>Member name SurveyTemplateCollectionViaAccount________</summary>
			public static readonly string SurveyTemplateCollectionViaAccount________ = "SurveyTemplateCollectionViaAccount________";
			/// <summary>Member name SurveyTemplateCollectionViaAccount</summary>
			public static readonly string SurveyTemplateCollectionViaAccount = "SurveyTemplateCollectionViaAccount";
			/// <summary>Member name SurveyTemplateCollectionViaAccount______</summary>
			public static readonly string SurveyTemplateCollectionViaAccount______ = "SurveyTemplateCollectionViaAccount______";
			/// <summary>Member name SurveyTemplateCollectionViaAccount__</summary>
			public static readonly string SurveyTemplateCollectionViaAccount__ = "SurveyTemplateCollectionViaAccount__";
			/// <summary>Member name SurveyTemplateCollectionViaAccount___</summary>
			public static readonly string SurveyTemplateCollectionViaAccount___ = "SurveyTemplateCollectionViaAccount___";
			/// <summary>Member name SurveyTemplateCollectionViaAccount____</summary>
			public static readonly string SurveyTemplateCollectionViaAccount____ = "SurveyTemplateCollectionViaAccount____";
			/// <summary>Member name SurveyTemplateCollectionViaAccount_</summary>
			public static readonly string SurveyTemplateCollectionViaAccount_ = "SurveyTemplateCollectionViaAccount_";
			/// <summary>Member name SurveyTemplateCollectionViaAccount_____</summary>
			public static readonly string SurveyTemplateCollectionViaAccount_____ = "SurveyTemplateCollectionViaAccount_____";

		}
		#endregion
		
		/// <summary> Static CTor for setting up custom property hashtables. Is executed before the first instance of this entity class or derived classes is constructed. </summary>
		static FileEntity()
		{
			SetupCustomPropertyHashtables();
		}

		/// <summary> CTor</summary>
		public FileEntity():base("FileEntity")
		{
			InitClassEmpty(null, CreateFields());
		}

		/// <summary> CTor</summary>
		/// <remarks>For framework usage.</remarks>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public FileEntity(IEntityFields2 fields):base("FileEntity")
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this FileEntity</param>
		public FileEntity(IValidator validator):base("FileEntity")
		{
			InitClassEmpty(validator, CreateFields());
		}
				

		/// <summary> CTor</summary>
		/// <param name="fileId">PK value for File which data should be fetched into this File object</param>
		/// <remarks>The entity is not fetched by this constructor. Use a DataAccessAdapter for that.</remarks>
		public FileEntity(System.Int64 fileId):base("FileEntity")
		{
			InitClassEmpty(null, CreateFields());
			this.FileId = fileId;
		}

		/// <summary> CTor</summary>
		/// <param name="fileId">PK value for File which data should be fetched into this File object</param>
		/// <param name="validator">The custom validator object for this FileEntity</param>
		/// <remarks>The entity is not fetched by this constructor. Use a DataAccessAdapter for that.</remarks>
		public FileEntity(System.Int64 fileId, IValidator validator):base("FileEntity")
		{
			InitClassEmpty(validator, CreateFields());
			this.FileId = fileId;
		}

		/// <summary> Protected CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		[EditorBrowsable(EditorBrowsableState.Never)]
		protected FileEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			if(SerializationHelper.Optimization != SerializationOptimization.Fast) 
			{
				_account______ = (EntityCollection<AccountEntity>)info.GetValue("_account______", typeof(EntityCollection<AccountEntity>));
				_account_____ = (EntityCollection<AccountEntity>)info.GetValue("_account_____", typeof(EntityCollection<AccountEntity>));
				_account________ = (EntityCollection<AccountEntity>)info.GetValue("_account________", typeof(EntityCollection<AccountEntity>));
				_account_______ = (EntityCollection<AccountEntity>)info.GetValue("_account_______", typeof(EntityCollection<AccountEntity>));
				_account____ = (EntityCollection<AccountEntity>)info.GetValue("_account____", typeof(EntityCollection<AccountEntity>));
				_account_ = (EntityCollection<AccountEntity>)info.GetValue("_account_", typeof(EntityCollection<AccountEntity>));
				_account = (EntityCollection<AccountEntity>)info.GetValue("_account", typeof(EntityCollection<AccountEntity>));
				_account___ = (EntityCollection<AccountEntity>)info.GetValue("_account___", typeof(EntityCollection<AccountEntity>));
				_account__ = (EntityCollection<AccountEntity>)info.GetValue("_account__", typeof(EntityCollection<AccountEntity>));
				_callUpload_ = (EntityCollection<CallUploadEntity>)info.GetValue("_callUpload_", typeof(EntityCollection<CallUploadEntity>));
				_callUpload = (EntityCollection<CallUploadEntity>)info.GetValue("_callUpload", typeof(EntityCollection<CallUploadEntity>));
				_chaperoneSignature_ = (EntityCollection<ChaperoneSignatureEntity>)info.GetValue("_chaperoneSignature_", typeof(EntityCollection<ChaperoneSignatureEntity>));
				_chaperoneSignature = (EntityCollection<ChaperoneSignatureEntity>)info.GetValue("_chaperoneSignature", typeof(EntityCollection<ChaperoneSignatureEntity>));
				_corporateUpload_ = (EntityCollection<CorporateUploadEntity>)info.GetValue("_corporateUpload_", typeof(EntityCollection<CorporateUploadEntity>));
				_corporateUpload = (EntityCollection<CorporateUploadEntity>)info.GetValue("_corporateUpload", typeof(EntityCollection<CorporateUploadEntity>));
				_corporateUpload__ = (EntityCollection<CorporateUploadEntity>)info.GetValue("_corporateUpload__", typeof(EntityCollection<CorporateUploadEntity>));
				_customerActivityTypeUpload_ = (EntityCollection<CustomerActivityTypeUploadEntity>)info.GetValue("_customerActivityTypeUpload_", typeof(EntityCollection<CustomerActivityTypeUploadEntity>));
				_customerActivityTypeUpload = (EntityCollection<CustomerActivityTypeUploadEntity>)info.GetValue("_customerActivityTypeUpload", typeof(EntityCollection<CustomerActivityTypeUploadEntity>));
				_customerPhoneNumberUpdateUpload_ = (EntityCollection<CustomerPhoneNumberUpdateUploadEntity>)info.GetValue("_customerPhoneNumberUpdateUpload_", typeof(EntityCollection<CustomerPhoneNumberUpdateUploadEntity>));
				_customerPhoneNumberUpdateUpload = (EntityCollection<CustomerPhoneNumberUpdateUploadEntity>)info.GetValue("_customerPhoneNumberUpdateUpload", typeof(EntityCollection<CustomerPhoneNumberUpdateUploadEntity>));
				_eligibilityUpload_ = (EntityCollection<EligibilityUploadEntity>)info.GetValue("_eligibilityUpload_", typeof(EntityCollection<EligibilityUploadEntity>));
				_eligibilityUpload = (EntityCollection<EligibilityUploadEntity>)info.GetValue("_eligibilityUpload", typeof(EntityCollection<EligibilityUploadEntity>));
				_eventCustomerGiftCard_ = (EntityCollection<EventCustomerGiftCardEntity>)info.GetValue("_eventCustomerGiftCard_", typeof(EntityCollection<EventCustomerGiftCardEntity>));
				_eventCustomerGiftCard = (EntityCollection<EventCustomerGiftCardEntity>)info.GetValue("_eventCustomerGiftCard", typeof(EntityCollection<EventCustomerGiftCardEntity>));
				_exitInterviewSignature = (EntityCollection<ExitInterviewSignatureEntity>)info.GetValue("_exitInterviewSignature", typeof(EntityCollection<ExitInterviewSignatureEntity>));
				_exportableReportsQueue = (EntityCollection<ExportableReportsQueueEntity>)info.GetValue("_exportableReportsQueue", typeof(EntityCollection<ExportableReportsQueueEntity>));
				_fluConsentSignature_ = (EntityCollection<FluConsentSignatureEntity>)info.GetValue("_fluConsentSignature_", typeof(EntityCollection<FluConsentSignatureEntity>));
				_fluConsentSignature = (EntityCollection<FluConsentSignatureEntity>)info.GetValue("_fluConsentSignature", typeof(EntityCollection<FluConsentSignatureEntity>));
				_healthPlanCriteriaAssignmentUpload = (EntityCollection<HealthPlanCriteriaAssignmentUploadEntity>)info.GetValue("_healthPlanCriteriaAssignmentUpload", typeof(EntityCollection<HealthPlanCriteriaAssignmentUploadEntity>));
				_hostImage = (EntityCollection<HostImageEntity>)info.GetValue("_hostImage", typeof(EntityCollection<HostImageEntity>));
				_medicalVendorProfile_ = (EntityCollection<MedicalVendorProfileEntity>)info.GetValue("_medicalVendorProfile_", typeof(EntityCollection<MedicalVendorProfileEntity>));
				_medicalVendorProfile = (EntityCollection<MedicalVendorProfileEntity>)info.GetValue("_medicalVendorProfile", typeof(EntityCollection<MedicalVendorProfileEntity>));
				_medicationUpload_ = (EntityCollection<MedicationUploadEntity>)info.GetValue("_medicationUpload_", typeof(EntityCollection<MedicationUploadEntity>));
				_medicationUpload = (EntityCollection<MedicationUploadEntity>)info.GetValue("_medicationUpload", typeof(EntityCollection<MedicationUploadEntity>));
				_mergeCustomerUpload_ = (EntityCollection<MergeCustomerUploadEntity>)info.GetValue("_mergeCustomerUpload_", typeof(EntityCollection<MergeCustomerUploadEntity>));
				_mergeCustomerUpload = (EntityCollection<MergeCustomerUploadEntity>)info.GetValue("_mergeCustomerUpload", typeof(EntityCollection<MergeCustomerUploadEntity>));
				_organization_ = (EntityCollection<OrganizationEntity>)info.GetValue("_organization_", typeof(EntityCollection<OrganizationEntity>));
				_organization = (EntityCollection<OrganizationEntity>)info.GetValue("_organization", typeof(EntityCollection<OrganizationEntity>));
				_outboundUpload_ = (EntityCollection<OutboundUploadEntity>)info.GetValue("_outboundUpload_", typeof(EntityCollection<OutboundUploadEntity>));
				_outboundUpload = (EntityCollection<OutboundUploadEntity>)info.GetValue("_outboundUpload", typeof(EntityCollection<OutboundUploadEntity>));
				_package = (EntityCollection<PackageEntity>)info.GetValue("_package", typeof(EntityCollection<PackageEntity>));
				_participationConsentSignature_ = (EntityCollection<ParticipationConsentSignatureEntity>)info.GetValue("_participationConsentSignature_", typeof(EntityCollection<ParticipationConsentSignatureEntity>));
				_participationConsentSignature = (EntityCollection<ParticipationConsentSignatureEntity>)info.GetValue("_participationConsentSignature", typeof(EntityCollection<ParticipationConsentSignatureEntity>));
				_physicianProfile_ = (EntityCollection<PhysicianProfileEntity>)info.GetValue("_physicianProfile_", typeof(EntityCollection<PhysicianProfileEntity>));
				_physicianProfile = (EntityCollection<PhysicianProfileEntity>)info.GetValue("_physicianProfile", typeof(EntityCollection<PhysicianProfileEntity>));
				_physicianRecordRequestSignature = (EntityCollection<PhysicianRecordRequestSignatureEntity>)info.GetValue("_physicianRecordRequestSignature", typeof(EntityCollection<PhysicianRecordRequestSignatureEntity>));
				_rapsUpload_ = (EntityCollection<RapsUploadEntity>)info.GetValue("_rapsUpload_", typeof(EntityCollection<RapsUploadEntity>));
				_rapsUpload = (EntityCollection<RapsUploadEntity>)info.GetValue("_rapsUpload", typeof(EntityCollection<RapsUploadEntity>));
				_resultArchiveUpload = (EntityCollection<ResultArchiveUploadEntity>)info.GetValue("_resultArchiveUpload", typeof(EntityCollection<ResultArchiveUploadEntity>));
				_staffEventScheduleUpload_ = (EntityCollection<StaffEventScheduleUploadEntity>)info.GetValue("_staffEventScheduleUpload_", typeof(EntityCollection<StaffEventScheduleUploadEntity>));
				_staffEventScheduleUpload = (EntityCollection<StaffEventScheduleUploadEntity>)info.GetValue("_staffEventScheduleUpload", typeof(EntityCollection<StaffEventScheduleUploadEntity>));
				_suspectConditionUpload_ = (EntityCollection<SuspectConditionUploadEntity>)info.GetValue("_suspectConditionUpload_", typeof(EntityCollection<SuspectConditionUploadEntity>));
				_suspectConditionUpload = (EntityCollection<SuspectConditionUploadEntity>)info.GetValue("_suspectConditionUpload", typeof(EntityCollection<SuspectConditionUploadEntity>));
				_testimonial = (EntityCollection<TestimonialEntity>)info.GetValue("_testimonial", typeof(EntityCollection<TestimonialEntity>));
				_testMedia = (EntityCollection<TestMediaEntity>)info.GetValue("_testMedia", typeof(EntityCollection<TestMediaEntity>));
				_wellMedAttestation = (EntityCollection<WellMedAttestationEntity>)info.GetValue("_wellMedAttestation", typeof(EntityCollection<WellMedAttestationEntity>));
				_accountCollectionViaEligibilityUpload_ = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaEligibilityUpload_", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaCorporateUpload = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaCorporateUpload", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaCorporateUpload__ = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaCorporateUpload__", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaCorporateUpload_ = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaCorporateUpload_", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaEligibilityUpload = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaEligibilityUpload", typeof(EntityCollection<AccountEntity>));
				_addressCollectionViaOrganization_ = (EntityCollection<AddressEntity>)info.GetValue("_addressCollectionViaOrganization_", typeof(EntityCollection<AddressEntity>));
				_addressCollectionViaOrganization = (EntityCollection<AddressEntity>)info.GetValue("_addressCollectionViaOrganization", typeof(EntityCollection<AddressEntity>));
				_checkListQuestionCollectionViaExitInterviewSignature = (EntityCollection<CheckListQuestionEntity>)info.GetValue("_checkListQuestionCollectionViaExitInterviewSignature", typeof(EntityCollection<CheckListQuestionEntity>));
				_checkListTemplateCollectionViaAccount_________________ = (EntityCollection<CheckListTemplateEntity>)info.GetValue("_checkListTemplateCollectionViaAccount_________________", typeof(EntityCollection<CheckListTemplateEntity>));
				_checkListTemplateCollectionViaAccount_____ = (EntityCollection<CheckListTemplateEntity>)info.GetValue("_checkListTemplateCollectionViaAccount_____", typeof(EntityCollection<CheckListTemplateEntity>));
				_checkListTemplateCollectionViaAccount____ = (EntityCollection<CheckListTemplateEntity>)info.GetValue("_checkListTemplateCollectionViaAccount____", typeof(EntityCollection<CheckListTemplateEntity>));
				_checkListTemplateCollectionViaAccount_____________ = (EntityCollection<CheckListTemplateEntity>)info.GetValue("_checkListTemplateCollectionViaAccount_____________", typeof(EntityCollection<CheckListTemplateEntity>));
				_checkListTemplateCollectionViaAccount______ = (EntityCollection<CheckListTemplateEntity>)info.GetValue("_checkListTemplateCollectionViaAccount______", typeof(EntityCollection<CheckListTemplateEntity>));
				_checkListTemplateCollectionViaAccount_______ = (EntityCollection<CheckListTemplateEntity>)info.GetValue("_checkListTemplateCollectionViaAccount_______", typeof(EntityCollection<CheckListTemplateEntity>));
				_checkListTemplateCollectionViaAccount__________ = (EntityCollection<CheckListTemplateEntity>)info.GetValue("_checkListTemplateCollectionViaAccount__________", typeof(EntityCollection<CheckListTemplateEntity>));
				_checkListTemplateCollectionViaAccount_________ = (EntityCollection<CheckListTemplateEntity>)info.GetValue("_checkListTemplateCollectionViaAccount_________", typeof(EntityCollection<CheckListTemplateEntity>));
				_checkListTemplateCollectionViaAccount____________ = (EntityCollection<CheckListTemplateEntity>)info.GetValue("_checkListTemplateCollectionViaAccount____________", typeof(EntityCollection<CheckListTemplateEntity>));
				_checkListTemplateCollectionViaAccount___________ = (EntityCollection<CheckListTemplateEntity>)info.GetValue("_checkListTemplateCollectionViaAccount___________", typeof(EntityCollection<CheckListTemplateEntity>));
				_checkListTemplateCollectionViaAccount_______________ = (EntityCollection<CheckListTemplateEntity>)info.GetValue("_checkListTemplateCollectionViaAccount_______________", typeof(EntityCollection<CheckListTemplateEntity>));
				_checkListTemplateCollectionViaAccount________________ = (EntityCollection<CheckListTemplateEntity>)info.GetValue("_checkListTemplateCollectionViaAccount________________", typeof(EntityCollection<CheckListTemplateEntity>));
				_checkListTemplateCollectionViaAccount________ = (EntityCollection<CheckListTemplateEntity>)info.GetValue("_checkListTemplateCollectionViaAccount________", typeof(EntityCollection<CheckListTemplateEntity>));
				_checkListTemplateCollectionViaAccount______________ = (EntityCollection<CheckListTemplateEntity>)info.GetValue("_checkListTemplateCollectionViaAccount______________", typeof(EntityCollection<CheckListTemplateEntity>));
				_checkListTemplateCollectionViaAccount_ = (EntityCollection<CheckListTemplateEntity>)info.GetValue("_checkListTemplateCollectionViaAccount_", typeof(EntityCollection<CheckListTemplateEntity>));
				_checkListTemplateCollectionViaAccount___ = (EntityCollection<CheckListTemplateEntity>)info.GetValue("_checkListTemplateCollectionViaAccount___", typeof(EntityCollection<CheckListTemplateEntity>));
				_checkListTemplateCollectionViaAccount__ = (EntityCollection<CheckListTemplateEntity>)info.GetValue("_checkListTemplateCollectionViaAccount__", typeof(EntityCollection<CheckListTemplateEntity>));
				_checkListTemplateCollectionViaAccount = (EntityCollection<CheckListTemplateEntity>)info.GetValue("_checkListTemplateCollectionViaAccount", typeof(EntityCollection<CheckListTemplateEntity>));
				_contractCollectionViaMedicalVendorProfile_ = (EntityCollection<ContractEntity>)info.GetValue("_contractCollectionViaMedicalVendorProfile_", typeof(EntityCollection<ContractEntity>));
				_contractCollectionViaMedicalVendorProfile = (EntityCollection<ContractEntity>)info.GetValue("_contractCollectionViaMedicalVendorProfile", typeof(EntityCollection<ContractEntity>));
				_customerEventScreeningTestsCollectionViaTestMedia = (EntityCollection<CustomerEventScreeningTestsEntity>)info.GetValue("_customerEventScreeningTestsCollectionViaTestMedia", typeof(EntityCollection<CustomerEventScreeningTestsEntity>));
				_customerProfileCollectionViaTestimonial = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaTestimonial", typeof(EntityCollection<CustomerProfileEntity>));
				_emailTemplateCollectionViaAccount_________________ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount_________________", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount__________________ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount__________________", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount___________________ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount___________________", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount_____________________________ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount_____________________________", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount___________________________________ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount___________________________________", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount________________ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount________________", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount___________________________ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount___________________________", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount__________________________ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount__________________________", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount_________________________ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount_________________________", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount____________________________ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount____________________________", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount______________________________ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount______________________________", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount_______________________________ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount_______________________________", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount________________________________ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount________________________________", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount_________________________________ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount_________________________________", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount__________________________________ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount__________________________________", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount____________________ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount____________________", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount_____________________ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount_____________________", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount________________________ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount________________________", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount_______________________ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount_______________________", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount______________________ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount______________________", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount__ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount__", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount___ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount___", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount____________ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount____________", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount____ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount____", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount________ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount________", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount_______ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount_______", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount___________ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount___________", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount__________ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount__________", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount_ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount_", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount_____ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount_____", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount_________ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount_________", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount______ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount______", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount______________ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount______________", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount_______________ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount_______________", typeof(EntityCollection<EmailTemplateEntity>));
				_emailTemplateCollectionViaAccount_____________ = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplateCollectionViaAccount_____________", typeof(EntityCollection<EmailTemplateEntity>));
				_eventCustomerResultCollectionViaWellMedAttestation = (EntityCollection<EventCustomerResultEntity>)info.GetValue("_eventCustomerResultCollectionViaWellMedAttestation", typeof(EntityCollection<EventCustomerResultEntity>));
				_eventCustomersCollectionViaChaperoneSignature = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaChaperoneSignature", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaFluConsentSignature = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaFluConsentSignature", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaParticipationConsentSignature = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaParticipationConsentSignature", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaFluConsentSignature_ = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaFluConsentSignature_", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaParticipationConsentSignature_ = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaParticipationConsentSignature_", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaExitInterviewSignature = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaExitInterviewSignature", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaEventCustomerGiftCard_ = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaEventCustomerGiftCard_", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaChaperoneSignature_ = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaChaperoneSignature_", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaPhysicianRecordRequestSignature = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaPhysicianRecordRequestSignature", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaEventCustomerGiftCard = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaEventCustomerGiftCard", typeof(EntityCollection<EventCustomersEntity>));
				_eventsCollectionViaResultArchiveUpload = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaResultArchiveUpload", typeof(EntityCollection<EventsEntity>));
				_exportableReportsCollectionViaExportableReportsQueue = (EntityCollection<ExportableReportsEntity>)info.GetValue("_exportableReportsCollectionViaExportableReportsQueue", typeof(EntityCollection<ExportableReportsEntity>));
				_fluConsentTemplateCollectionViaAccount______ = (EntityCollection<FluConsentTemplateEntity>)info.GetValue("_fluConsentTemplateCollectionViaAccount______", typeof(EntityCollection<FluConsentTemplateEntity>));
				_fluConsentTemplateCollectionViaAccount = (EntityCollection<FluConsentTemplateEntity>)info.GetValue("_fluConsentTemplateCollectionViaAccount", typeof(EntityCollection<FluConsentTemplateEntity>));
				_fluConsentTemplateCollectionViaAccount________ = (EntityCollection<FluConsentTemplateEntity>)info.GetValue("_fluConsentTemplateCollectionViaAccount________", typeof(EntityCollection<FluConsentTemplateEntity>));
				_fluConsentTemplateCollectionViaAccount_______ = (EntityCollection<FluConsentTemplateEntity>)info.GetValue("_fluConsentTemplateCollectionViaAccount_______", typeof(EntityCollection<FluConsentTemplateEntity>));
				_fluConsentTemplateCollectionViaAccount___ = (EntityCollection<FluConsentTemplateEntity>)info.GetValue("_fluConsentTemplateCollectionViaAccount___", typeof(EntityCollection<FluConsentTemplateEntity>));
				_fluConsentTemplateCollectionViaAccount_____ = (EntityCollection<FluConsentTemplateEntity>)info.GetValue("_fluConsentTemplateCollectionViaAccount_____", typeof(EntityCollection<FluConsentTemplateEntity>));
				_fluConsentTemplateCollectionViaAccount__ = (EntityCollection<FluConsentTemplateEntity>)info.GetValue("_fluConsentTemplateCollectionViaAccount__", typeof(EntityCollection<FluConsentTemplateEntity>));
				_fluConsentTemplateCollectionViaAccount_ = (EntityCollection<FluConsentTemplateEntity>)info.GetValue("_fluConsentTemplateCollectionViaAccount_", typeof(EntityCollection<FluConsentTemplateEntity>));
				_fluConsentTemplateCollectionViaAccount____ = (EntityCollection<FluConsentTemplateEntity>)info.GetValue("_fluConsentTemplateCollectionViaAccount____", typeof(EntityCollection<FluConsentTemplateEntity>));
				_hafTemplateCollectionViaAccount________ = (EntityCollection<HafTemplateEntity>)info.GetValue("_hafTemplateCollectionViaAccount________", typeof(EntityCollection<HafTemplateEntity>));
				_hafTemplateCollectionViaAccount______ = (EntityCollection<HafTemplateEntity>)info.GetValue("_hafTemplateCollectionViaAccount______", typeof(EntityCollection<HafTemplateEntity>));
				_hafTemplateCollectionViaAccount__ = (EntityCollection<HafTemplateEntity>)info.GetValue("_hafTemplateCollectionViaAccount__", typeof(EntityCollection<HafTemplateEntity>));
				_hafTemplateCollectionViaAccount____ = (EntityCollection<HafTemplateEntity>)info.GetValue("_hafTemplateCollectionViaAccount____", typeof(EntityCollection<HafTemplateEntity>));
				_hafTemplateCollectionViaPackage = (EntityCollection<HafTemplateEntity>)info.GetValue("_hafTemplateCollectionViaPackage", typeof(EntityCollection<HafTemplateEntity>));
				_hafTemplateCollectionViaAccount_ = (EntityCollection<HafTemplateEntity>)info.GetValue("_hafTemplateCollectionViaAccount_", typeof(EntityCollection<HafTemplateEntity>));
				_hafTemplateCollectionViaAccount_______ = (EntityCollection<HafTemplateEntity>)info.GetValue("_hafTemplateCollectionViaAccount_______", typeof(EntityCollection<HafTemplateEntity>));
				_hafTemplateCollectionViaAccount_____ = (EntityCollection<HafTemplateEntity>)info.GetValue("_hafTemplateCollectionViaAccount_____", typeof(EntityCollection<HafTemplateEntity>));
				_hafTemplateCollectionViaAccount = (EntityCollection<HafTemplateEntity>)info.GetValue("_hafTemplateCollectionViaAccount", typeof(EntityCollection<HafTemplateEntity>));
				_hafTemplateCollectionViaAccount___ = (EntityCollection<HafTemplateEntity>)info.GetValue("_hafTemplateCollectionViaAccount___", typeof(EntityCollection<HafTemplateEntity>));
				_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload = (EntityCollection<HealthPlanCallQueueCriteriaEntity>)info.GetValue("_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload", typeof(EntityCollection<HealthPlanCallQueueCriteriaEntity>));
				_lookupCollectionViaStaffEventScheduleUpload_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaStaffEventScheduleUpload_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaRapsUpload = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaRapsUpload", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCustomerPhoneNumberUpdateUpload = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCustomerPhoneNumberUpdateUpload", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEligibilityUpload = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEligibilityUpload", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCustomerPhoneNumberUpdateUpload_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCustomerPhoneNumberUpdateUpload_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEligibilityUpload_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEligibilityUpload_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaStaffEventScheduleUpload = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaStaffEventScheduleUpload", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaRapsUpload_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaRapsUpload_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaMergeCustomerUpload_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaMergeCustomerUpload_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaMergeCustomerUpload = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaMergeCustomerUpload", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaMedicationUpload_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaMedicationUpload_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaOutboundUpload__ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaOutboundUpload__", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaOutboundUpload = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaOutboundUpload", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaOutboundUpload___ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaOutboundUpload___", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaPackage = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaPackage", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaSuspectConditionUpload_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaSuspectConditionUpload_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaExportableReportsQueue = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaExportableReportsQueue", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaSuspectConditionUpload = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaSuspectConditionUpload", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaMedicationUpload = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaMedicationUpload", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaHostImage = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaHostImage", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaOutboundUpload_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaOutboundUpload_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaWellMedAttestation = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaWellMedAttestation", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaAccount___ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaAccount___", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaAccount______ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaAccount______", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaAccount__ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaAccount__", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCorporateUpload_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCorporateUpload_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaAccount____ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaAccount____", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaAccount_____ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaAccount_____", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCallUpload_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCallUpload_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCorporateUpload = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCorporateUpload", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCallUpload = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCallUpload", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaAccount_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaAccount_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCustomerActivityTypeUpload_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCustomerActivityTypeUpload_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaAccount = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaAccount", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaAccount_______ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaAccount_______", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCorporateUpload__ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCorporateUpload__", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCustomerActivityTypeUpload = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCustomerActivityTypeUpload", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaAccount________ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaAccount________", typeof(EntityCollection<LookupEntity>));
				_medicalVendorTypeCollectionViaMedicalVendorProfile = (EntityCollection<MedicalVendorTypeEntity>)info.GetValue("_medicalVendorTypeCollectionViaMedicalVendorProfile", typeof(EntityCollection<MedicalVendorTypeEntity>));
				_medicalVendorTypeCollectionViaMedicalVendorProfile_ = (EntityCollection<MedicalVendorTypeEntity>)info.GetValue("_medicalVendorTypeCollectionViaMedicalVendorProfile_", typeof(EntityCollection<MedicalVendorTypeEntity>));
				_mvuserClassificationCollectionViaPhysicianProfile_ = (EntityCollection<MvuserClassificationEntity>)info.GetValue("_mvuserClassificationCollectionViaPhysicianProfile_", typeof(EntityCollection<MvuserClassificationEntity>));
				_mvuserClassificationCollectionViaPhysicianProfile = (EntityCollection<MvuserClassificationEntity>)info.GetValue("_mvuserClassificationCollectionViaPhysicianProfile", typeof(EntityCollection<MvuserClassificationEntity>));
				_organizationRoleUserCollectionViaMergeCustomerUpload = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaMergeCustomerUpload", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaCustomerActivityTypeUpload_ = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaCustomerActivityTypeUpload_", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaMergeCustomerUpload_ = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaMergeCustomerUpload_", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaMedicationUpload_ = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaMedicationUpload_", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaStaffEventScheduleUpload_ = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaStaffEventScheduleUpload_", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaStaffEventScheduleUpload = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaStaffEventScheduleUpload", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaSuspectConditionUpload_ = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaSuspectConditionUpload_", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaSuspectConditionUpload = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaSuspectConditionUpload", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaRapsUpload_ = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaRapsUpload_", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaParticipationConsentSignature_ = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaParticipationConsentSignature_", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaParticipationConsentSignature = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaParticipationConsentSignature", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaRapsUpload = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaRapsUpload", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaPhysicianRecordRequestSignature = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaPhysicianRecordRequestSignature", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaFluConsentSignature = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaFluConsentSignature", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaCorporateUpload = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaCorporateUpload", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaCallUpload_ = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaCallUpload_", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaEligibilityUpload = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaEligibilityUpload", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaEventCustomerGiftCard_ = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaEventCustomerGiftCard_", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaEligibilityUpload_ = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaEligibilityUpload_", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaChaperoneSignature_ = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaChaperoneSignature_", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaExitInterviewSignature = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaExitInterviewSignature", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaCorporateUpload__ = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaCorporateUpload__", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaExportableReportsQueue = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaExportableReportsQueue", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaChaperoneSignature = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaChaperoneSignature", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaEventCustomerGiftCard = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaEventCustomerGiftCard", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_ = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaFluConsentSignature_ = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaFluConsentSignature_", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaMedicationUpload = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaMedicationUpload", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaCustomerActivityTypeUpload = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaCustomerActivityTypeUpload", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaCallUpload = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaCallUpload", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationRoleUserCollectionViaCorporateUpload_ = (EntityCollection<OrganizationRoleUserEntity>)info.GetValue("_organizationRoleUserCollectionViaCorporateUpload_", typeof(EntityCollection<OrganizationRoleUserEntity>));
				_organizationTypeCollectionViaOrganization = (EntityCollection<OrganizationTypeEntity>)info.GetValue("_organizationTypeCollectionViaOrganization", typeof(EntityCollection<OrganizationTypeEntity>));
				_organizationTypeCollectionViaOrganization_ = (EntityCollection<OrganizationTypeEntity>)info.GetValue("_organizationTypeCollectionViaOrganization_", typeof(EntityCollection<OrganizationTypeEntity>));
				_physicianSpecializationCollectionViaPhysicianProfile_ = (EntityCollection<PhysicianSpecializationEntity>)info.GetValue("_physicianSpecializationCollectionViaPhysicianProfile_", typeof(EntityCollection<PhysicianSpecializationEntity>));
				_physicianSpecializationCollectionViaPhysicianProfile = (EntityCollection<PhysicianSpecializationEntity>)info.GetValue("_physicianSpecializationCollectionViaPhysicianProfile", typeof(EntityCollection<PhysicianSpecializationEntity>));
				_prospectsCollectionViaAccount = (EntityCollection<ProspectsEntity>)info.GetValue("_prospectsCollectionViaAccount", typeof(EntityCollection<ProspectsEntity>));
				_prospectsCollectionViaAccount________ = (EntityCollection<ProspectsEntity>)info.GetValue("_prospectsCollectionViaAccount________", typeof(EntityCollection<ProspectsEntity>));
				_prospectsCollectionViaAccount__ = (EntityCollection<ProspectsEntity>)info.GetValue("_prospectsCollectionViaAccount__", typeof(EntityCollection<ProspectsEntity>));
				_prospectsCollectionViaAccount_ = (EntityCollection<ProspectsEntity>)info.GetValue("_prospectsCollectionViaAccount_", typeof(EntityCollection<ProspectsEntity>));
				_prospectsCollectionViaAccount______ = (EntityCollection<ProspectsEntity>)info.GetValue("_prospectsCollectionViaAccount______", typeof(EntityCollection<ProspectsEntity>));
				_prospectsCollectionViaAccount____ = (EntityCollection<ProspectsEntity>)info.GetValue("_prospectsCollectionViaAccount____", typeof(EntityCollection<ProspectsEntity>));
				_prospectsCollectionViaHostImage = (EntityCollection<ProspectsEntity>)info.GetValue("_prospectsCollectionViaHostImage", typeof(EntityCollection<ProspectsEntity>));
				_prospectsCollectionViaAccount___ = (EntityCollection<ProspectsEntity>)info.GetValue("_prospectsCollectionViaAccount___", typeof(EntityCollection<ProspectsEntity>));
				_prospectsCollectionViaAccount_____ = (EntityCollection<ProspectsEntity>)info.GetValue("_prospectsCollectionViaAccount_____", typeof(EntityCollection<ProspectsEntity>));
				_prospectsCollectionViaAccount_______ = (EntityCollection<ProspectsEntity>)info.GetValue("_prospectsCollectionViaAccount_______", typeof(EntityCollection<ProspectsEntity>));
				_surveyTemplateCollectionViaAccount_______ = (EntityCollection<SurveyTemplateEntity>)info.GetValue("_surveyTemplateCollectionViaAccount_______", typeof(EntityCollection<SurveyTemplateEntity>));
				_surveyTemplateCollectionViaAccount________ = (EntityCollection<SurveyTemplateEntity>)info.GetValue("_surveyTemplateCollectionViaAccount________", typeof(EntityCollection<SurveyTemplateEntity>));
				_surveyTemplateCollectionViaAccount = (EntityCollection<SurveyTemplateEntity>)info.GetValue("_surveyTemplateCollectionViaAccount", typeof(EntityCollection<SurveyTemplateEntity>));
				_surveyTemplateCollectionViaAccount______ = (EntityCollection<SurveyTemplateEntity>)info.GetValue("_surveyTemplateCollectionViaAccount______", typeof(EntityCollection<SurveyTemplateEntity>));
				_surveyTemplateCollectionViaAccount__ = (EntityCollection<SurveyTemplateEntity>)info.GetValue("_surveyTemplateCollectionViaAccount__", typeof(EntityCollection<SurveyTemplateEntity>));
				_surveyTemplateCollectionViaAccount___ = (EntityCollection<SurveyTemplateEntity>)info.GetValue("_surveyTemplateCollectionViaAccount___", typeof(EntityCollection<SurveyTemplateEntity>));
				_surveyTemplateCollectionViaAccount____ = (EntityCollection<SurveyTemplateEntity>)info.GetValue("_surveyTemplateCollectionViaAccount____", typeof(EntityCollection<SurveyTemplateEntity>));
				_surveyTemplateCollectionViaAccount_ = (EntityCollection<SurveyTemplateEntity>)info.GetValue("_surveyTemplateCollectionViaAccount_", typeof(EntityCollection<SurveyTemplateEntity>));
				_surveyTemplateCollectionViaAccount_____ = (EntityCollection<SurveyTemplateEntity>)info.GetValue("_surveyTemplateCollectionViaAccount_____", typeof(EntityCollection<SurveyTemplateEntity>));
				_lookup = (LookupEntity)info.GetValue("_lookup", typeof(LookupEntity));
				if(_lookup!=null)
				{
					_lookup.AfterSave+=new EventHandler(OnEntityAfterSave);
				}
				_organizationRoleUser = (OrganizationRoleUserEntity)info.GetValue("_organizationRoleUser", typeof(OrganizationRoleUserEntity));
				if(_organizationRoleUser!=null)
				{
					_organizationRoleUser.AfterSave+=new EventHandler(OnEntityAfterSave);
				}

				base.FixupDeserialization(FieldInfoProviderSingleton.GetInstance());
			}
			
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		
		/// <summary>Performs the desync setup when an FK field has been changed. The entity referenced based on the FK field will be dereferenced and sync info will be removed.</summary>
		/// <param name="fieldIndex">The fieldindex.</param>
		protected override void PerformDesyncSetupFKFieldChange(int fieldIndex)
		{
			switch((FileFieldIndex)fieldIndex)
			{
				case FileFieldIndex.Type:
					DesetupSyncLookup(true, false);
					break;
				case FileFieldIndex.CreatedBy:
					DesetupSyncOrganizationRoleUser(true, false);
					break;
				default:
					base.PerformDesyncSetupFKFieldChange(fieldIndex);
					break;
			}
		}
				
		/// <summary>Gets the inheritance info provider instance of the project this entity instance is located in. </summary>
		/// <returns>ready to use inheritance info provider instance.</returns>
		protected override IInheritanceInfoProvider GetInheritanceInfoProvider()
		{
			return InheritanceInfoProviderSingleton.GetInstance();
		}
		
		/// <summary> Sets the related entity property to the entity specified. If the property is a collection, it will add the entity specified to that collection.</summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <param name="entity">Entity to set as an related entity</param>
		/// <remarks>Used by prefetch path logic.</remarks>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public override void SetRelatedEntityProperty(string propertyName, IEntity2 entity)
		{
			switch(propertyName)
			{
				case "Lookup":
					this.Lookup = (LookupEntity)entity;
					break;
				case "OrganizationRoleUser":
					this.OrganizationRoleUser = (OrganizationRoleUserEntity)entity;
					break;
				case "Account______":
					this.Account______.Add((AccountEntity)entity);
					break;
				case "Account_____":
					this.Account_____.Add((AccountEntity)entity);
					break;
				case "Account________":
					this.Account________.Add((AccountEntity)entity);
					break;
				case "Account_______":
					this.Account_______.Add((AccountEntity)entity);
					break;
				case "Account____":
					this.Account____.Add((AccountEntity)entity);
					break;
				case "Account_":
					this.Account_.Add((AccountEntity)entity);
					break;
				case "Account":
					this.Account.Add((AccountEntity)entity);
					break;
				case "Account___":
					this.Account___.Add((AccountEntity)entity);
					break;
				case "Account__":
					this.Account__.Add((AccountEntity)entity);
					break;
				case "CallUpload_":
					this.CallUpload_.Add((CallUploadEntity)entity);
					break;
				case "CallUpload":
					this.CallUpload.Add((CallUploadEntity)entity);
					break;
				case "ChaperoneSignature_":
					this.ChaperoneSignature_.Add((ChaperoneSignatureEntity)entity);
					break;
				case "ChaperoneSignature":
					this.ChaperoneSignature.Add((ChaperoneSignatureEntity)entity);
					break;
				case "CorporateUpload_":
					this.CorporateUpload_.Add((CorporateUploadEntity)entity);
					break;
				case "CorporateUpload":
					this.CorporateUpload.Add((CorporateUploadEntity)entity);
					break;
				case "CorporateUpload__":
					this.CorporateUpload__.Add((CorporateUploadEntity)entity);
					break;
				case "CustomerActivityTypeUpload_":
					this.CustomerActivityTypeUpload_.Add((CustomerActivityTypeUploadEntity)entity);
					break;
				case "CustomerActivityTypeUpload":
					this.CustomerActivityTypeUpload.Add((CustomerActivityTypeUploadEntity)entity);
					break;
				case "CustomerPhoneNumberUpdateUpload_":
					this.CustomerPhoneNumberUpdateUpload_.Add((CustomerPhoneNumberUpdateUploadEntity)entity);
					break;
				case "CustomerPhoneNumberUpdateUpload":
					this.CustomerPhoneNumberUpdateUpload.Add((CustomerPhoneNumberUpdateUploadEntity)entity);
					break;
				case "EligibilityUpload_":
					this.EligibilityUpload_.Add((EligibilityUploadEntity)entity);
					break;
				case "EligibilityUpload":
					this.EligibilityUpload.Add((EligibilityUploadEntity)entity);
					break;
				case "EventCustomerGiftCard_":
					this.EventCustomerGiftCard_.Add((EventCustomerGiftCardEntity)entity);
					break;
				case "EventCustomerGiftCard":
					this.EventCustomerGiftCard.Add((EventCustomerGiftCardEntity)entity);
					break;
				case "ExitInterviewSignature":
					this.ExitInterviewSignature.Add((ExitInterviewSignatureEntity)entity);
					break;
				case "ExportableReportsQueue":
					this.ExportableReportsQueue.Add((ExportableReportsQueueEntity)entity);
					break;
				case "FluConsentSignature_":
					this.FluConsentSignature_.Add((FluConsentSignatureEntity)entity);
					break;
				case "FluConsentSignature":
					this.FluConsentSignature.Add((FluConsentSignatureEntity)entity);
					break;
				case "HealthPlanCriteriaAssignmentUpload":
					this.HealthPlanCriteriaAssignmentUpload.Add((HealthPlanCriteriaAssignmentUploadEntity)entity);
					break;
				case "HostImage":
					this.HostImage.Add((HostImageEntity)entity);
					break;
				case "MedicalVendorProfile_":
					this.MedicalVendorProfile_.Add((MedicalVendorProfileEntity)entity);
					break;
				case "MedicalVendorProfile":
					this.MedicalVendorProfile.Add((MedicalVendorProfileEntity)entity);
					break;
				case "MedicationUpload_":
					this.MedicationUpload_.Add((MedicationUploadEntity)entity);
					break;
				case "MedicationUpload":
					this.MedicationUpload.Add((MedicationUploadEntity)entity);
					break;
				case "MergeCustomerUpload_":
					this.MergeCustomerUpload_.Add((MergeCustomerUploadEntity)entity);
					break;
				case "MergeCustomerUpload":
					this.MergeCustomerUpload.Add((MergeCustomerUploadEntity)entity);
					break;
				case "Organization_":
					this.Organization_.Add((OrganizationEntity)entity);
					break;
				case "Organization":
					this.Organization.Add((OrganizationEntity)entity);
					break;
				case "OutboundUpload_":
					this.OutboundUpload_.Add((OutboundUploadEntity)entity);
					break;
				case "OutboundUpload":
					this.OutboundUpload.Add((OutboundUploadEntity)entity);
					break;
				case "Package":
					this.Package.Add((PackageEntity)entity);
					break;
				case "ParticipationConsentSignature_":
					this.ParticipationConsentSignature_.Add((ParticipationConsentSignatureEntity)entity);
					break;
				case "ParticipationConsentSignature":
					this.ParticipationConsentSignature.Add((ParticipationConsentSignatureEntity)entity);
					break;
				case "PhysicianProfile_":
					this.PhysicianProfile_.Add((PhysicianProfileEntity)entity);
					break;
				case "PhysicianProfile":
					this.PhysicianProfile.Add((PhysicianProfileEntity)entity);
					break;
				case "PhysicianRecordRequestSignature":
					this.PhysicianRecordRequestSignature.Add((PhysicianRecordRequestSignatureEntity)entity);
					break;
				case "RapsUpload_":
					this.RapsUpload_.Add((RapsUploadEntity)entity);
					break;
				case "RapsUpload":
					this.RapsUpload.Add((RapsUploadEntity)entity);
					break;
				case "ResultArchiveUpload":
					this.ResultArchiveUpload.Add((ResultArchiveUploadEntity)entity);
					break;
				case "StaffEventScheduleUpload_":
					this.StaffEventScheduleUpload_.Add((StaffEventScheduleUploadEntity)entity);
					break;
				case "StaffEventScheduleUpload":
					this.StaffEventScheduleUpload.Add((StaffEventScheduleUploadEntity)entity);
					break;
				case "SuspectConditionUpload_":
					this.SuspectConditionUpload_.Add((SuspectConditionUploadEntity)entity);
					break;
				case "SuspectConditionUpload":
					this.SuspectConditionUpload.Add((SuspectConditionUploadEntity)entity);
					break;
				case "Testimonial":
					this.Testimonial.Add((TestimonialEntity)entity);
					break;
				case "TestMedia":
					this.TestMedia.Add((TestMediaEntity)entity);
					break;
				case "WellMedAttestation":
					this.WellMedAttestation.Add((WellMedAttestationEntity)entity);
					break;
				case "AccountCollectionViaEligibilityUpload_":
					this.AccountCollectionViaEligibilityUpload_.IsReadOnly = false;
					this.AccountCollectionViaEligibilityUpload_.Add((AccountEntity)entity);
					this.AccountCollectionViaEligibilityUpload_.IsReadOnly = true;
					break;
				case "AccountCollectionViaCorporateUpload":
					this.AccountCollectionViaCorporateUpload.IsReadOnly = false;
					this.AccountCollectionViaCorporateUpload.Add((AccountEntity)entity);
					this.AccountCollectionViaCorporateUpload.IsReadOnly = true;
					break;
				case "AccountCollectionViaCorporateUpload__":
					this.AccountCollectionViaCorporateUpload__.IsReadOnly = false;
					this.AccountCollectionViaCorporateUpload__.Add((AccountEntity)entity);
					this.AccountCollectionViaCorporateUpload__.IsReadOnly = true;
					break;
				case "AccountCollectionViaCorporateUpload_":
					this.AccountCollectionViaCorporateUpload_.IsReadOnly = false;
					this.AccountCollectionViaCorporateUpload_.Add((AccountEntity)entity);
					this.AccountCollectionViaCorporateUpload_.IsReadOnly = true;
					break;
				case "AccountCollectionViaEligibilityUpload":
					this.AccountCollectionViaEligibilityUpload.IsReadOnly = false;
					this.AccountCollectionViaEligibilityUpload.Add((AccountEntity)entity);
					this.AccountCollectionViaEligibilityUpload.IsReadOnly = true;
					break;
				case "AddressCollectionViaOrganization_":
					this.AddressCollectionViaOrganization_.IsReadOnly = false;
					this.AddressCollectionViaOrganization_.Add((AddressEntity)entity);
					this.AddressCollectionViaOrganization_.IsReadOnly = true;
					break;
				case "AddressCollectionViaOrganization":
					this.AddressCollectionViaOrganization.IsReadOnly = false;
					this.AddressCollectionViaOrganization.Add((AddressEntity)entity);
					this.AddressCollectionViaOrganization.IsReadOnly = true;
					break;
				case "CheckListQuestionCollectionViaExitInterviewSignature":
					this.CheckListQuestionCollectionViaExitInterviewSignature.IsReadOnly = false;
					this.CheckListQuestionCollectionViaExitInterviewSignature.Add((CheckListQuestionEntity)entity);
					this.CheckListQuestionCollectionViaExitInterviewSignature.IsReadOnly = true;
					break;
				case "CheckListTemplateCollectionViaAccount_________________":
					this.CheckListTemplateCollectionViaAccount_________________.IsReadOnly = false;
					this.CheckListTemplateCollectionViaAccount_________________.Add((CheckListTemplateEntity)entity);
					this.CheckListTemplateCollectionViaAccount_________________.IsReadOnly = true;
					break;
				case "CheckListTemplateCollectionViaAccount_____":
					this.CheckListTemplateCollectionViaAccount_____.IsReadOnly = false;
					this.CheckListTemplateCollectionViaAccount_____.Add((CheckListTemplateEntity)entity);
					this.CheckListTemplateCollectionViaAccount_____.IsReadOnly = true;
					break;
				case "CheckListTemplateCollectionViaAccount____":
					this.CheckListTemplateCollectionViaAccount____.IsReadOnly = false;
					this.CheckListTemplateCollectionViaAccount____.Add((CheckListTemplateEntity)entity);
					this.CheckListTemplateCollectionViaAccount____.IsReadOnly = true;
					break;
				case "CheckListTemplateCollectionViaAccount_____________":
					this.CheckListTemplateCollectionViaAccount_____________.IsReadOnly = false;
					this.CheckListTemplateCollectionViaAccount_____________.Add((CheckListTemplateEntity)entity);
					this.CheckListTemplateCollectionViaAccount_____________.IsReadOnly = true;
					break;
				case "CheckListTemplateCollectionViaAccount______":
					this.CheckListTemplateCollectionViaAccount______.IsReadOnly = false;
					this.CheckListTemplateCollectionViaAccount______.Add((CheckListTemplateEntity)entity);
					this.CheckListTemplateCollectionViaAccount______.IsReadOnly = true;
					break;
				case "CheckListTemplateCollectionViaAccount_______":
					this.CheckListTemplateCollectionViaAccount_______.IsReadOnly = false;
					this.CheckListTemplateCollectionViaAccount_______.Add((CheckListTemplateEntity)entity);
					this.CheckListTemplateCollectionViaAccount_______.IsReadOnly = true;
					break;
				case "CheckListTemplateCollectionViaAccount__________":
					this.CheckListTemplateCollectionViaAccount__________.IsReadOnly = false;
					this.CheckListTemplateCollectionViaAccount__________.Add((CheckListTemplateEntity)entity);
					this.CheckListTemplateCollectionViaAccount__________.IsReadOnly = true;
					break;
				case "CheckListTemplateCollectionViaAccount_________":
					this.CheckListTemplateCollectionViaAccount_________.IsReadOnly = false;
					this.CheckListTemplateCollectionViaAccount_________.Add((CheckListTemplateEntity)entity);
					this.CheckListTemplateCollectionViaAccount_________.IsReadOnly = true;
					break;
				case "CheckListTemplateCollectionViaAccount____________":
					this.CheckListTemplateCollectionViaAccount____________.IsReadOnly = false;
					this.CheckListTemplateCollectionViaAccount____________.Add((CheckListTemplateEntity)entity);
					this.CheckListTemplateCollectionViaAccount____________.IsReadOnly = true;
					break;
				case "CheckListTemplateCollectionViaAccount___________":
					this.CheckListTemplateCollectionViaAccount___________.IsReadOnly = false;
					this.CheckListTemplateCollectionViaAccount___________.Add((CheckListTemplateEntity)entity);
					this.CheckListTemplateCollectionViaAccount___________.IsReadOnly = true;
					break;
				case "CheckListTemplateCollectionViaAccount_______________":
					this.CheckListTemplateCollectionViaAccount_______________.IsReadOnly = false;
					this.CheckListTemplateCollectionViaAccount_______________.Add((CheckListTemplateEntity)entity);
					this.CheckListTemplateCollectionViaAccount_______________.IsReadOnly = true;
					break;
				case "CheckListTemplateCollectionViaAccount________________":
					this.CheckListTemplateCollectionViaAccount________________.IsReadOnly = false;
					this.CheckListTemplateCollectionViaAccount________________.Add((CheckListTemplateEntity)entity);
					this.CheckListTemplateCollectionViaAccount________________.IsReadOnly = true;
					break;
				case "CheckListTemplateCollectionViaAccount________":
					this.CheckListTemplateCollectionViaAccount________.IsReadOnly = false;
					this.CheckListTemplateCollectionViaAccount________.Add((CheckListTemplateEntity)entity);
					this.CheckListTemplateCollectionViaAccount________.IsReadOnly = true;
					break;
				case "CheckListTemplateCollectionViaAccount______________":
					this.CheckListTemplateCollectionViaAccount______________.IsReadOnly = false;
					this.CheckListTemplateCollectionViaAccount______________.Add((CheckListTemplateEntity)entity);
					this.CheckListTemplateCollectionViaAccount______________.IsReadOnly = true;
					break;
				case "CheckListTemplateCollectionViaAccount_":
					this.CheckListTemplateCollectionViaAccount_.IsReadOnly = false;
					this.CheckListTemplateCollectionViaAccount_.Add((CheckListTemplateEntity)entity);
					this.CheckListTemplateCollectionViaAccount_.IsReadOnly = true;
					break;
				case "CheckListTemplateCollectionViaAccount___":
					this.CheckListTemplateCollectionViaAccount___.IsReadOnly = false;
					this.CheckListTemplateCollectionViaAccount___.Add((CheckListTemplateEntity)entity);
					this.CheckListTemplateCollectionViaAccount___.IsReadOnly = true;
					break;
				case "CheckListTemplateCollectionViaAccount__":
					this.CheckListTemplateCollectionViaAccount__.IsReadOnly = false;
					this.CheckListTemplateCollectionViaAccount__.Add((CheckListTemplateEntity)entity);
					this.CheckListTemplateCollectionViaAccount__.IsReadOnly = true;
					break;
				case "CheckListTemplateCollectionViaAccount":
					this.CheckListTemplateCollectionViaAccount.IsReadOnly = false;
					this.CheckListTemplateCollectionViaAccount.Add((CheckListTemplateEntity)entity);
					this.CheckListTemplateCollectionViaAccount.IsReadOnly = true;
					break;
				case "ContractCollectionViaMedicalVendorProfile_":
					this.ContractCollectionViaMedicalVendorProfile_.IsReadOnly = false;
					this.ContractCollectionViaMedicalVendorProfile_.Add((ContractEntity)entity);
					this.ContractCollectionViaMedicalVendorProfile_.IsReadOnly = true;
					break;
				case "ContractCollectionViaMedicalVendorProfile":
					this.ContractCollectionViaMedicalVendorProfile.IsReadOnly = false;
					this.ContractCollectionViaMedicalVendorProfile.Add((ContractEntity)entity);
					this.ContractCollectionViaMedicalVendorProfile.IsReadOnly = true;
					break;
				case "CustomerEventScreeningTestsCollectionViaTestMedia":
					this.CustomerEventScreeningTestsCollectionViaTestMedia.IsReadOnly = false;
					this.CustomerEventScreeningTestsCollectionViaTestMedia.Add((CustomerEventScreeningTestsEntity)entity);
					this.CustomerEventScreeningTestsCollectionViaTestMedia.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaTestimonial":
					this.CustomerProfileCollectionViaTestimonial.IsReadOnly = false;
					this.CustomerProfileCollectionViaTestimonial.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaTestimonial.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount_________________":
					this.EmailTemplateCollectionViaAccount_________________.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount_________________.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount_________________.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount__________________":
					this.EmailTemplateCollectionViaAccount__________________.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount__________________.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount__________________.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount___________________":
					this.EmailTemplateCollectionViaAccount___________________.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount___________________.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount___________________.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount_____________________________":
					this.EmailTemplateCollectionViaAccount_____________________________.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount_____________________________.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount_____________________________.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount___________________________________":
					this.EmailTemplateCollectionViaAccount___________________________________.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount___________________________________.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount___________________________________.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount________________":
					this.EmailTemplateCollectionViaAccount________________.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount________________.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount________________.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount___________________________":
					this.EmailTemplateCollectionViaAccount___________________________.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount___________________________.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount___________________________.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount__________________________":
					this.EmailTemplateCollectionViaAccount__________________________.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount__________________________.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount__________________________.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount_________________________":
					this.EmailTemplateCollectionViaAccount_________________________.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount_________________________.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount_________________________.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount____________________________":
					this.EmailTemplateCollectionViaAccount____________________________.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount____________________________.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount____________________________.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount______________________________":
					this.EmailTemplateCollectionViaAccount______________________________.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount______________________________.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount______________________________.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount_______________________________":
					this.EmailTemplateCollectionViaAccount_______________________________.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount_______________________________.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount_______________________________.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount________________________________":
					this.EmailTemplateCollectionViaAccount________________________________.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount________________________________.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount________________________________.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount_________________________________":
					this.EmailTemplateCollectionViaAccount_________________________________.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount_________________________________.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount_________________________________.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount__________________________________":
					this.EmailTemplateCollectionViaAccount__________________________________.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount__________________________________.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount__________________________________.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount____________________":
					this.EmailTemplateCollectionViaAccount____________________.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount____________________.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount____________________.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount_____________________":
					this.EmailTemplateCollectionViaAccount_____________________.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount_____________________.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount_____________________.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount________________________":
					this.EmailTemplateCollectionViaAccount________________________.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount________________________.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount________________________.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount_______________________":
					this.EmailTemplateCollectionViaAccount_______________________.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount_______________________.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount_______________________.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount______________________":
					this.EmailTemplateCollectionViaAccount______________________.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount______________________.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount______________________.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount__":
					this.EmailTemplateCollectionViaAccount__.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount__.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount__.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount___":
					this.EmailTemplateCollectionViaAccount___.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount___.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount___.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount____________":
					this.EmailTemplateCollectionViaAccount____________.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount____________.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount____________.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount____":
					this.EmailTemplateCollectionViaAccount____.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount____.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount____.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount________":
					this.EmailTemplateCollectionViaAccount________.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount________.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount________.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount_______":
					this.EmailTemplateCollectionViaAccount_______.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount_______.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount_______.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount___________":
					this.EmailTemplateCollectionViaAccount___________.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount___________.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount___________.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount__________":
					this.EmailTemplateCollectionViaAccount__________.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount__________.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount__________.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount_":
					this.EmailTemplateCollectionViaAccount_.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount_.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount_.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount_____":
					this.EmailTemplateCollectionViaAccount_____.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount_____.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount_____.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount":
					this.EmailTemplateCollectionViaAccount.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount_________":
					this.EmailTemplateCollectionViaAccount_________.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount_________.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount_________.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount______":
					this.EmailTemplateCollectionViaAccount______.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount______.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount______.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount______________":
					this.EmailTemplateCollectionViaAccount______________.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount______________.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount______________.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount_______________":
					this.EmailTemplateCollectionViaAccount_______________.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount_______________.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount_______________.IsReadOnly = true;
					break;
				case "EmailTemplateCollectionViaAccount_____________":
					this.EmailTemplateCollectionViaAccount_____________.IsReadOnly = false;
					this.EmailTemplateCollectionViaAccount_____________.Add((EmailTemplateEntity)entity);
					this.EmailTemplateCollectionViaAccount_____________.IsReadOnly = true;
					break;
				case "EventCustomerResultCollectionViaWellMedAttestation":
					this.EventCustomerResultCollectionViaWellMedAttestation.IsReadOnly = false;
					this.EventCustomerResultCollectionViaWellMedAttestation.Add((EventCustomerResultEntity)entity);
					this.EventCustomerResultCollectionViaWellMedAttestation.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaChaperoneSignature":
					this.EventCustomersCollectionViaChaperoneSignature.IsReadOnly = false;
					this.EventCustomersCollectionViaChaperoneSignature.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaChaperoneSignature.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaFluConsentSignature":
					this.EventCustomersCollectionViaFluConsentSignature.IsReadOnly = false;
					this.EventCustomersCollectionViaFluConsentSignature.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaFluConsentSignature.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaParticipationConsentSignature":
					this.EventCustomersCollectionViaParticipationConsentSignature.IsReadOnly = false;
					this.EventCustomersCollectionViaParticipationConsentSignature.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaParticipationConsentSignature.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaFluConsentSignature_":
					this.EventCustomersCollectionViaFluConsentSignature_.IsReadOnly = false;
					this.EventCustomersCollectionViaFluConsentSignature_.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaFluConsentSignature_.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaParticipationConsentSignature_":
					this.EventCustomersCollectionViaParticipationConsentSignature_.IsReadOnly = false;
					this.EventCustomersCollectionViaParticipationConsentSignature_.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaParticipationConsentSignature_.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaExitInterviewSignature":
					this.EventCustomersCollectionViaExitInterviewSignature.IsReadOnly = false;
					this.EventCustomersCollectionViaExitInterviewSignature.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaExitInterviewSignature.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaEventCustomerGiftCard_":
					this.EventCustomersCollectionViaEventCustomerGiftCard_.IsReadOnly = false;
					this.EventCustomersCollectionViaEventCustomerGiftCard_.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaEventCustomerGiftCard_.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaChaperoneSignature_":
					this.EventCustomersCollectionViaChaperoneSignature_.IsReadOnly = false;
					this.EventCustomersCollectionViaChaperoneSignature_.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaChaperoneSignature_.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaPhysicianRecordRequestSignature":
					this.EventCustomersCollectionViaPhysicianRecordRequestSignature.IsReadOnly = false;
					this.EventCustomersCollectionViaPhysicianRecordRequestSignature.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaPhysicianRecordRequestSignature.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaEventCustomerGiftCard":
					this.EventCustomersCollectionViaEventCustomerGiftCard.IsReadOnly = false;
					this.EventCustomersCollectionViaEventCustomerGiftCard.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaEventCustomerGiftCard.IsReadOnly = true;
					break;
				case "EventsCollectionViaResultArchiveUpload":
					this.EventsCollectionViaResultArchiveUpload.IsReadOnly = false;
					this.EventsCollectionViaResultArchiveUpload.Add((EventsEntity)entity);
					this.EventsCollectionViaResultArchiveUpload.IsReadOnly = true;
					break;
				case "ExportableReportsCollectionViaExportableReportsQueue":
					this.ExportableReportsCollectionViaExportableReportsQueue.IsReadOnly = false;
					this.ExportableReportsCollectionViaExportableReportsQueue.Add((ExportableReportsEntity)entity);
					this.ExportableReportsCollectionViaExportableReportsQueue.IsReadOnly = true;
					break;
				case "FluConsentTemplateCollectionViaAccount______":
					this.FluConsentTemplateCollectionViaAccount______.IsReadOnly = false;
					this.FluConsentTemplateCollectionViaAccount______.Add((FluConsentTemplateEntity)entity);
					this.FluConsentTemplateCollectionViaAccount______.IsReadOnly = true;
					break;
				case "FluConsentTemplateCollectionViaAccount":
					this.FluConsentTemplateCollectionViaAccount.IsReadOnly = false;
					this.FluConsentTemplateCollectionViaAccount.Add((FluConsentTemplateEntity)entity);
					this.FluConsentTemplateCollectionViaAccount.IsReadOnly = true;
					break;
				case "FluConsentTemplateCollectionViaAccount________":
					this.FluConsentTemplateCollectionViaAccount________.IsReadOnly = false;
					this.FluConsentTemplateCollectionViaAccount________.Add((FluConsentTemplateEntity)entity);
					this.FluConsentTemplateCollectionViaAccount________.IsReadOnly = true;
					break;
				case "FluConsentTemplateCollectionViaAccount_______":
					this.FluConsentTemplateCollectionViaAccount_______.IsReadOnly = false;
					this.FluConsentTemplateCollectionViaAccount_______.Add((FluConsentTemplateEntity)entity);
					this.FluConsentTemplateCollectionViaAccount_______.IsReadOnly = true;
					break;
				case "FluConsentTemplateCollectionViaAccount___":
					this.FluConsentTemplateCollectionViaAccount___.IsReadOnly = false;
					this.FluConsentTemplateCollectionViaAccount___.Add((FluConsentTemplateEntity)entity);
					this.FluConsentTemplateCollectionViaAccount___.IsReadOnly = true;
					break;
				case "FluConsentTemplateCollectionViaAccount_____":
					this.FluConsentTemplateCollectionViaAccount_____.IsReadOnly = false;
					this.FluConsentTemplateCollectionViaAccount_____.Add((FluConsentTemplateEntity)entity);
					this.FluConsentTemplateCollectionViaAccount_____.IsReadOnly = true;
					break;
				case "FluConsentTemplateCollectionViaAccount__":
					this.FluConsentTemplateCollectionViaAccount__.IsReadOnly = false;
					this.FluConsentTemplateCollectionViaAccount__.Add((FluConsentTemplateEntity)entity);
					this.FluConsentTemplateCollectionViaAccount__.IsReadOnly = true;
					break;
				case "FluConsentTemplateCollectionViaAccount_":
					this.FluConsentTemplateCollectionViaAccount_.IsReadOnly = false;
					this.FluConsentTemplateCollectionViaAccount_.Add((FluConsentTemplateEntity)entity);
					this.FluConsentTemplateCollectionViaAccount_.IsReadOnly = true;
					break;
				case "FluConsentTemplateCollectionViaAccount____":
					this.FluConsentTemplateCollectionViaAccount____.IsReadOnly = false;
					this.FluConsentTemplateCollectionViaAccount____.Add((FluConsentTemplateEntity)entity);
					this.FluConsentTemplateCollectionViaAccount____.IsReadOnly = true;
					break;
				case "HafTemplateCollectionViaAccount________":
					this.HafTemplateCollectionViaAccount________.IsReadOnly = false;
					this.HafTemplateCollectionViaAccount________.Add((HafTemplateEntity)entity);
					this.HafTemplateCollectionViaAccount________.IsReadOnly = true;
					break;
				case "HafTemplateCollectionViaAccount______":
					this.HafTemplateCollectionViaAccount______.IsReadOnly = false;
					this.HafTemplateCollectionViaAccount______.Add((HafTemplateEntity)entity);
					this.HafTemplateCollectionViaAccount______.IsReadOnly = true;
					break;
				case "HafTemplateCollectionViaAccount__":
					this.HafTemplateCollectionViaAccount__.IsReadOnly = false;
					this.HafTemplateCollectionViaAccount__.Add((HafTemplateEntity)entity);
					this.HafTemplateCollectionViaAccount__.IsReadOnly = true;
					break;
				case "HafTemplateCollectionViaAccount____":
					this.HafTemplateCollectionViaAccount____.IsReadOnly = false;
					this.HafTemplateCollectionViaAccount____.Add((HafTemplateEntity)entity);
					this.HafTemplateCollectionViaAccount____.IsReadOnly = true;
					break;
				case "HafTemplateCollectionViaPackage":
					this.HafTemplateCollectionViaPackage.IsReadOnly = false;
					this.HafTemplateCollectionViaPackage.Add((HafTemplateEntity)entity);
					this.HafTemplateCollectionViaPackage.IsReadOnly = true;
					break;
				case "HafTemplateCollectionViaAccount_":
					this.HafTemplateCollectionViaAccount_.IsReadOnly = false;
					this.HafTemplateCollectionViaAccount_.Add((HafTemplateEntity)entity);
					this.HafTemplateCollectionViaAccount_.IsReadOnly = true;
					break;
				case "HafTemplateCollectionViaAccount_______":
					this.HafTemplateCollectionViaAccount_______.IsReadOnly = false;
					this.HafTemplateCollectionViaAccount_______.Add((HafTemplateEntity)entity);
					this.HafTemplateCollectionViaAccount_______.IsReadOnly = true;
					break;
				case "HafTemplateCollectionViaAccount_____":
					this.HafTemplateCollectionViaAccount_____.IsReadOnly = false;
					this.HafTemplateCollectionViaAccount_____.Add((HafTemplateEntity)entity);
					this.HafTemplateCollectionViaAccount_____.IsReadOnly = true;
					break;
				case "HafTemplateCollectionViaAccount":
					this.HafTemplateCollectionViaAccount.IsReadOnly = false;
					this.HafTemplateCollectionViaAccount.Add((HafTemplateEntity)entity);
					this.HafTemplateCollectionViaAccount.IsReadOnly = true;
					break;
				case "HafTemplateCollectionViaAccount___":
					this.HafTemplateCollectionViaAccount___.IsReadOnly = false;
					this.HafTemplateCollectionViaAccount___.Add((HafTemplateEntity)entity);
					this.HafTemplateCollectionViaAccount___.IsReadOnly = true;
					break;
				case "HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload":
					this.HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload.IsReadOnly = false;
					this.HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload.Add((HealthPlanCallQueueCriteriaEntity)entity);
					this.HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload.IsReadOnly = true;
					break;
				case "LookupCollectionViaStaffEventScheduleUpload_":
					this.LookupCollectionViaStaffEventScheduleUpload_.IsReadOnly = false;
					this.LookupCollectionViaStaffEventScheduleUpload_.Add((LookupEntity)entity);
					this.LookupCollectionViaStaffEventScheduleUpload_.IsReadOnly = true;
					break;
				case "LookupCollectionViaRapsUpload":
					this.LookupCollectionViaRapsUpload.IsReadOnly = false;
					this.LookupCollectionViaRapsUpload.Add((LookupEntity)entity);
					this.LookupCollectionViaRapsUpload.IsReadOnly = true;
					break;
				case "LookupCollectionViaCustomerPhoneNumberUpdateUpload":
					this.LookupCollectionViaCustomerPhoneNumberUpdateUpload.IsReadOnly = false;
					this.LookupCollectionViaCustomerPhoneNumberUpdateUpload.Add((LookupEntity)entity);
					this.LookupCollectionViaCustomerPhoneNumberUpdateUpload.IsReadOnly = true;
					break;
				case "LookupCollectionViaEligibilityUpload":
					this.LookupCollectionViaEligibilityUpload.IsReadOnly = false;
					this.LookupCollectionViaEligibilityUpload.Add((LookupEntity)entity);
					this.LookupCollectionViaEligibilityUpload.IsReadOnly = true;
					break;
				case "LookupCollectionViaCustomerPhoneNumberUpdateUpload_":
					this.LookupCollectionViaCustomerPhoneNumberUpdateUpload_.IsReadOnly = false;
					this.LookupCollectionViaCustomerPhoneNumberUpdateUpload_.Add((LookupEntity)entity);
					this.LookupCollectionViaCustomerPhoneNumberUpdateUpload_.IsReadOnly = true;
					break;
				case "LookupCollectionViaEligibilityUpload_":
					this.LookupCollectionViaEligibilityUpload_.IsReadOnly = false;
					this.LookupCollectionViaEligibilityUpload_.Add((LookupEntity)entity);
					this.LookupCollectionViaEligibilityUpload_.IsReadOnly = true;
					break;
				case "LookupCollectionViaStaffEventScheduleUpload":
					this.LookupCollectionViaStaffEventScheduleUpload.IsReadOnly = false;
					this.LookupCollectionViaStaffEventScheduleUpload.Add((LookupEntity)entity);
					this.LookupCollectionViaStaffEventScheduleUpload.IsReadOnly = true;
					break;
				case "LookupCollectionViaRapsUpload_":
					this.LookupCollectionViaRapsUpload_.IsReadOnly = false;
					this.LookupCollectionViaRapsUpload_.Add((LookupEntity)entity);
					this.LookupCollectionViaRapsUpload_.IsReadOnly = true;
					break;
				case "LookupCollectionViaMergeCustomerUpload_":
					this.LookupCollectionViaMergeCustomerUpload_.IsReadOnly = false;
					this.LookupCollectionViaMergeCustomerUpload_.Add((LookupEntity)entity);
					this.LookupCollectionViaMergeCustomerUpload_.IsReadOnly = true;
					break;
				case "LookupCollectionViaMergeCustomerUpload":
					this.LookupCollectionViaMergeCustomerUpload.IsReadOnly = false;
					this.LookupCollectionViaMergeCustomerUpload.Add((LookupEntity)entity);
					this.LookupCollectionViaMergeCustomerUpload.IsReadOnly = true;
					break;
				case "LookupCollectionViaMedicationUpload_":
					this.LookupCollectionViaMedicationUpload_.IsReadOnly = false;
					this.LookupCollectionViaMedicationUpload_.Add((LookupEntity)entity);
					this.LookupCollectionViaMedicationUpload_.IsReadOnly = true;
					break;
				case "LookupCollectionViaOutboundUpload__":
					this.LookupCollectionViaOutboundUpload__.IsReadOnly = false;
					this.LookupCollectionViaOutboundUpload__.Add((LookupEntity)entity);
					this.LookupCollectionViaOutboundUpload__.IsReadOnly = true;
					break;
				case "LookupCollectionViaOutboundUpload":
					this.LookupCollectionViaOutboundUpload.IsReadOnly = false;
					this.LookupCollectionViaOutboundUpload.Add((LookupEntity)entity);
					this.LookupCollectionViaOutboundUpload.IsReadOnly = true;
					break;
				case "LookupCollectionViaOutboundUpload___":
					this.LookupCollectionViaOutboundUpload___.IsReadOnly = false;
					this.LookupCollectionViaOutboundUpload___.Add((LookupEntity)entity);
					this.LookupCollectionViaOutboundUpload___.IsReadOnly = true;
					break;
				case "LookupCollectionViaPackage":
					this.LookupCollectionViaPackage.IsReadOnly = false;
					this.LookupCollectionViaPackage.Add((LookupEntity)entity);
					this.LookupCollectionViaPackage.IsReadOnly = true;
					break;
				case "LookupCollectionViaSuspectConditionUpload_":
					this.LookupCollectionViaSuspectConditionUpload_.IsReadOnly = false;
					this.LookupCollectionViaSuspectConditionUpload_.Add((LookupEntity)entity);
					this.LookupCollectionViaSuspectConditionUpload_.IsReadOnly = true;
					break;
				case "LookupCollectionViaExportableReportsQueue":
					this.LookupCollectionViaExportableReportsQueue.IsReadOnly = false;
					this.LookupCollectionViaExportableReportsQueue.Add((LookupEntity)entity);
					this.LookupCollectionViaExportableReportsQueue.IsReadOnly = true;
					break;
				case "LookupCollectionViaSuspectConditionUpload":
					this.LookupCollectionViaSuspectConditionUpload.IsReadOnly = false;
					this.LookupCollectionViaSuspectConditionUpload.Add((LookupEntity)entity);
					this.LookupCollectionViaSuspectConditionUpload.IsReadOnly = true;
					break;
				case "LookupCollectionViaMedicationUpload":
					this.LookupCollectionViaMedicationUpload.IsReadOnly = false;
					this.LookupCollectionViaMedicationUpload.Add((LookupEntity)entity);
					this.LookupCollectionViaMedicationUpload.IsReadOnly = true;
					break;
				case "LookupCollectionViaHostImage":
					this.LookupCollectionViaHostImage.IsReadOnly = false;
					this.LookupCollectionViaHostImage.Add((LookupEntity)entity);
					this.LookupCollectionViaHostImage.IsReadOnly = true;
					break;
				case "LookupCollectionViaOutboundUpload_":
					this.LookupCollectionViaOutboundUpload_.IsReadOnly = false;
					this.LookupCollectionViaOutboundUpload_.Add((LookupEntity)entity);
					this.LookupCollectionViaOutboundUpload_.IsReadOnly = true;
					break;
				case "LookupCollectionViaWellMedAttestation":
					this.LookupCollectionViaWellMedAttestation.IsReadOnly = false;
					this.LookupCollectionViaWellMedAttestation.Add((LookupEntity)entity);
					this.LookupCollectionViaWellMedAttestation.IsReadOnly = true;
					break;
				case "LookupCollectionViaAccount___":
					this.LookupCollectionViaAccount___.IsReadOnly = false;
					this.LookupCollectionViaAccount___.Add((LookupEntity)entity);
					this.LookupCollectionViaAccount___.IsReadOnly = true;
					break;
				case "LookupCollectionViaAccount______":
					this.LookupCollectionViaAccount______.IsReadOnly = false;
					this.LookupCollectionViaAccount______.Add((LookupEntity)entity);
					this.LookupCollectionViaAccount______.IsReadOnly = true;
					break;
				case "LookupCollectionViaAccount__":
					this.LookupCollectionViaAccount__.IsReadOnly = false;
					this.LookupCollectionViaAccount__.Add((LookupEntity)entity);
					this.LookupCollectionViaAccount__.IsReadOnly = true;
					break;
				case "LookupCollectionViaCorporateUpload_":
					this.LookupCollectionViaCorporateUpload_.IsReadOnly = false;
					this.LookupCollectionViaCorporateUpload_.Add((LookupEntity)entity);
					this.LookupCollectionViaCorporateUpload_.IsReadOnly = true;
					break;
				case "LookupCollectionViaAccount____":
					this.LookupCollectionViaAccount____.IsReadOnly = false;
					this.LookupCollectionViaAccount____.Add((LookupEntity)entity);
					this.LookupCollectionViaAccount____.IsReadOnly = true;
					break;
				case "LookupCollectionViaAccount_____":
					this.LookupCollectionViaAccount_____.IsReadOnly = false;
					this.LookupCollectionViaAccount_____.Add((LookupEntity)entity);
					this.LookupCollectionViaAccount_____.IsReadOnly = true;
					break;
				case "LookupCollectionViaCallUpload_":
					this.LookupCollectionViaCallUpload_.IsReadOnly = false;
					this.LookupCollectionViaCallUpload_.Add((LookupEntity)entity);
					this.LookupCollectionViaCallUpload_.IsReadOnly = true;
					break;
				case "LookupCollectionViaCorporateUpload":
					this.LookupCollectionViaCorporateUpload.IsReadOnly = false;
					this.LookupCollectionViaCorporateUpload.Add((LookupEntity)entity);
					this.LookupCollectionViaCorporateUpload.IsReadOnly = true;
					break;
				case "LookupCollectionViaCallUpload":
					this.LookupCollectionViaCallUpload.IsReadOnly = false;
					this.LookupCollectionViaCallUpload.Add((LookupEntity)entity);
					this.LookupCollectionViaCallUpload.IsReadOnly = true;
					break;
				case "LookupCollectionViaAccount_":
					this.LookupCollectionViaAccount_.IsReadOnly = false;
					this.LookupCollectionViaAccount_.Add((LookupEntity)entity);
					this.LookupCollectionViaAccount_.IsReadOnly = true;
					break;
				case "LookupCollectionViaCustomerActivityTypeUpload_":
					this.LookupCollectionViaCustomerActivityTypeUpload_.IsReadOnly = false;
					this.LookupCollectionViaCustomerActivityTypeUpload_.Add((LookupEntity)entity);
					this.LookupCollectionViaCustomerActivityTypeUpload_.IsReadOnly = true;
					break;
				case "LookupCollectionViaAccount":
					this.LookupCollectionViaAccount.IsReadOnly = false;
					this.LookupCollectionViaAccount.Add((LookupEntity)entity);
					this.LookupCollectionViaAccount.IsReadOnly = true;
					break;
				case "LookupCollectionViaAccount_______":
					this.LookupCollectionViaAccount_______.IsReadOnly = false;
					this.LookupCollectionViaAccount_______.Add((LookupEntity)entity);
					this.LookupCollectionViaAccount_______.IsReadOnly = true;
					break;
				case "LookupCollectionViaCorporateUpload__":
					this.LookupCollectionViaCorporateUpload__.IsReadOnly = false;
					this.LookupCollectionViaCorporateUpload__.Add((LookupEntity)entity);
					this.LookupCollectionViaCorporateUpload__.IsReadOnly = true;
					break;
				case "LookupCollectionViaCustomerActivityTypeUpload":
					this.LookupCollectionViaCustomerActivityTypeUpload.IsReadOnly = false;
					this.LookupCollectionViaCustomerActivityTypeUpload.Add((LookupEntity)entity);
					this.LookupCollectionViaCustomerActivityTypeUpload.IsReadOnly = true;
					break;
				case "LookupCollectionViaAccount________":
					this.LookupCollectionViaAccount________.IsReadOnly = false;
					this.LookupCollectionViaAccount________.Add((LookupEntity)entity);
					this.LookupCollectionViaAccount________.IsReadOnly = true;
					break;
				case "MedicalVendorTypeCollectionViaMedicalVendorProfile":
					this.MedicalVendorTypeCollectionViaMedicalVendorProfile.IsReadOnly = false;
					this.MedicalVendorTypeCollectionViaMedicalVendorProfile.Add((MedicalVendorTypeEntity)entity);
					this.MedicalVendorTypeCollectionViaMedicalVendorProfile.IsReadOnly = true;
					break;
				case "MedicalVendorTypeCollectionViaMedicalVendorProfile_":
					this.MedicalVendorTypeCollectionViaMedicalVendorProfile_.IsReadOnly = false;
					this.MedicalVendorTypeCollectionViaMedicalVendorProfile_.Add((MedicalVendorTypeEntity)entity);
					this.MedicalVendorTypeCollectionViaMedicalVendorProfile_.IsReadOnly = true;
					break;
				case "MvuserClassificationCollectionViaPhysicianProfile_":
					this.MvuserClassificationCollectionViaPhysicianProfile_.IsReadOnly = false;
					this.MvuserClassificationCollectionViaPhysicianProfile_.Add((MvuserClassificationEntity)entity);
					this.MvuserClassificationCollectionViaPhysicianProfile_.IsReadOnly = true;
					break;
				case "MvuserClassificationCollectionViaPhysicianProfile":
					this.MvuserClassificationCollectionViaPhysicianProfile.IsReadOnly = false;
					this.MvuserClassificationCollectionViaPhysicianProfile.Add((MvuserClassificationEntity)entity);
					this.MvuserClassificationCollectionViaPhysicianProfile.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaMergeCustomerUpload":
					this.OrganizationRoleUserCollectionViaMergeCustomerUpload.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaMergeCustomerUpload.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaMergeCustomerUpload.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaCustomerActivityTypeUpload_":
					this.OrganizationRoleUserCollectionViaCustomerActivityTypeUpload_.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaCustomerActivityTypeUpload_.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaCustomerActivityTypeUpload_.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaMergeCustomerUpload_":
					this.OrganizationRoleUserCollectionViaMergeCustomerUpload_.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaMergeCustomerUpload_.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaMergeCustomerUpload_.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaMedicationUpload_":
					this.OrganizationRoleUserCollectionViaMedicationUpload_.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaMedicationUpload_.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaMedicationUpload_.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaStaffEventScheduleUpload_":
					this.OrganizationRoleUserCollectionViaStaffEventScheduleUpload_.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaStaffEventScheduleUpload_.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaStaffEventScheduleUpload_.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaStaffEventScheduleUpload":
					this.OrganizationRoleUserCollectionViaStaffEventScheduleUpload.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaStaffEventScheduleUpload.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaStaffEventScheduleUpload.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaSuspectConditionUpload_":
					this.OrganizationRoleUserCollectionViaSuspectConditionUpload_.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaSuspectConditionUpload_.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaSuspectConditionUpload_.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaSuspectConditionUpload":
					this.OrganizationRoleUserCollectionViaSuspectConditionUpload.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaSuspectConditionUpload.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaSuspectConditionUpload.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaRapsUpload_":
					this.OrganizationRoleUserCollectionViaRapsUpload_.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaRapsUpload_.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaRapsUpload_.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaParticipationConsentSignature_":
					this.OrganizationRoleUserCollectionViaParticipationConsentSignature_.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaParticipationConsentSignature_.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaParticipationConsentSignature_.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaParticipationConsentSignature":
					this.OrganizationRoleUserCollectionViaParticipationConsentSignature.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaParticipationConsentSignature.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaParticipationConsentSignature.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaRapsUpload":
					this.OrganizationRoleUserCollectionViaRapsUpload.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaRapsUpload.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaRapsUpload.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaPhysicianRecordRequestSignature":
					this.OrganizationRoleUserCollectionViaPhysicianRecordRequestSignature.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaPhysicianRecordRequestSignature.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaPhysicianRecordRequestSignature.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaFluConsentSignature":
					this.OrganizationRoleUserCollectionViaFluConsentSignature.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaFluConsentSignature.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaFluConsentSignature.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaCorporateUpload":
					this.OrganizationRoleUserCollectionViaCorporateUpload.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaCorporateUpload.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaCorporateUpload.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaCallUpload_":
					this.OrganizationRoleUserCollectionViaCallUpload_.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaCallUpload_.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaCallUpload_.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaEligibilityUpload":
					this.OrganizationRoleUserCollectionViaEligibilityUpload.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaEligibilityUpload.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaEligibilityUpload.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaEventCustomerGiftCard_":
					this.OrganizationRoleUserCollectionViaEventCustomerGiftCard_.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaEventCustomerGiftCard_.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaEventCustomerGiftCard_.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaEligibilityUpload_":
					this.OrganizationRoleUserCollectionViaEligibilityUpload_.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaEligibilityUpload_.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaEligibilityUpload_.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaChaperoneSignature_":
					this.OrganizationRoleUserCollectionViaChaperoneSignature_.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaChaperoneSignature_.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaChaperoneSignature_.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaExitInterviewSignature":
					this.OrganizationRoleUserCollectionViaExitInterviewSignature.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaExitInterviewSignature.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaExitInterviewSignature.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaCorporateUpload__":
					this.OrganizationRoleUserCollectionViaCorporateUpload__.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaCorporateUpload__.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaCorporateUpload__.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaExportableReportsQueue":
					this.OrganizationRoleUserCollectionViaExportableReportsQueue.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaExportableReportsQueue.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaExportableReportsQueue.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaChaperoneSignature":
					this.OrganizationRoleUserCollectionViaChaperoneSignature.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaChaperoneSignature.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaChaperoneSignature.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaEventCustomerGiftCard":
					this.OrganizationRoleUserCollectionViaEventCustomerGiftCard.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaEventCustomerGiftCard.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaEventCustomerGiftCard.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload":
					this.OrganizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_":
					this.OrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload":
					this.OrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaFluConsentSignature_":
					this.OrganizationRoleUserCollectionViaFluConsentSignature_.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaFluConsentSignature_.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaFluConsentSignature_.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaMedicationUpload":
					this.OrganizationRoleUserCollectionViaMedicationUpload.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaMedicationUpload.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaMedicationUpload.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaCustomerActivityTypeUpload":
					this.OrganizationRoleUserCollectionViaCustomerActivityTypeUpload.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaCustomerActivityTypeUpload.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaCustomerActivityTypeUpload.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaCallUpload":
					this.OrganizationRoleUserCollectionViaCallUpload.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaCallUpload.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaCallUpload.IsReadOnly = true;
					break;
				case "OrganizationRoleUserCollectionViaCorporateUpload_":
					this.OrganizationRoleUserCollectionViaCorporateUpload_.IsReadOnly = false;
					this.OrganizationRoleUserCollectionViaCorporateUpload_.Add((OrganizationRoleUserEntity)entity);
					this.OrganizationRoleUserCollectionViaCorporateUpload_.IsReadOnly = true;
					break;
				case "OrganizationTypeCollectionViaOrganization":
					this.OrganizationTypeCollectionViaOrganization.IsReadOnly = false;
					this.OrganizationTypeCollectionViaOrganization.Add((OrganizationTypeEntity)entity);
					this.OrganizationTypeCollectionViaOrganization.IsReadOnly = true;
					break;
				case "OrganizationTypeCollectionViaOrganization_":
					this.OrganizationTypeCollectionViaOrganization_.IsReadOnly = false;
					this.OrganizationTypeCollectionViaOrganization_.Add((OrganizationTypeEntity)entity);
					this.OrganizationTypeCollectionViaOrganization_.IsReadOnly = true;
					break;
				case "PhysicianSpecializationCollectionViaPhysicianProfile_":
					this.PhysicianSpecializationCollectionViaPhysicianProfile_.IsReadOnly = false;
					this.PhysicianSpecializationCollectionViaPhysicianProfile_.Add((PhysicianSpecializationEntity)entity);
					this.PhysicianSpecializationCollectionViaPhysicianProfile_.IsReadOnly = true;
					break;
				case "PhysicianSpecializationCollectionViaPhysicianProfile":
					this.PhysicianSpecializationCollectionViaPhysicianProfile.IsReadOnly = false;
					this.PhysicianSpecializationCollectionViaPhysicianProfile.Add((PhysicianSpecializationEntity)entity);
					this.PhysicianSpecializationCollectionViaPhysicianProfile.IsReadOnly = true;
					break;
				case "ProspectsCollectionViaAccount":
					this.ProspectsCollectionViaAccount.IsReadOnly = false;
					this.ProspectsCollectionViaAccount.Add((ProspectsEntity)entity);
					this.ProspectsCollectionViaAccount.IsReadOnly = true;
					break;
				case "ProspectsCollectionViaAccount________":
					this.ProspectsCollectionViaAccount________.IsReadOnly = false;
					this.ProspectsCollectionViaAccount________.Add((ProspectsEntity)entity);
					this.ProspectsCollectionViaAccount________.IsReadOnly = true;
					break;
				case "ProspectsCollectionViaAccount__":
					this.ProspectsCollectionViaAccount__.IsReadOnly = false;
					this.ProspectsCollectionViaAccount__.Add((ProspectsEntity)entity);
					this.ProspectsCollectionViaAccount__.IsReadOnly = true;
					break;
				case "ProspectsCollectionViaAccount_":
					this.ProspectsCollectionViaAccount_.IsReadOnly = false;
					this.ProspectsCollectionViaAccount_.Add((ProspectsEntity)entity);
					this.ProspectsCollectionViaAccount_.IsReadOnly = true;
					break;
				case "ProspectsCollectionViaAccount______":
					this.ProspectsCollectionViaAccount______.IsReadOnly = false;
					this.ProspectsCollectionViaAccount______.Add((ProspectsEntity)entity);
					this.ProspectsCollectionViaAccount______.IsReadOnly = true;
					break;
				case "ProspectsCollectionViaAccount____":
					this.ProspectsCollectionViaAccount____.IsReadOnly = false;
					this.ProspectsCollectionViaAccount____.Add((ProspectsEntity)entity);
					this.ProspectsCollectionViaAccount____.IsReadOnly = true;
					break;
				case "ProspectsCollectionViaHostImage":
					this.ProspectsCollectionViaHostImage.IsReadOnly = false;
					this.ProspectsCollectionViaHostImage.Add((ProspectsEntity)entity);
					this.ProspectsCollectionViaHostImage.IsReadOnly = true;
					break;
				case "ProspectsCollectionViaAccount___":
					this.ProspectsCollectionViaAccount___.IsReadOnly = false;
					this.ProspectsCollectionViaAccount___.Add((ProspectsEntity)entity);
					this.ProspectsCollectionViaAccount___.IsReadOnly = true;
					break;
				case "ProspectsCollectionViaAccount_____":
					this.ProspectsCollectionViaAccount_____.IsReadOnly = false;
					this.ProspectsCollectionViaAccount_____.Add((ProspectsEntity)entity);
					this.ProspectsCollectionViaAccount_____.IsReadOnly = true;
					break;
				case "ProspectsCollectionViaAccount_______":
					this.ProspectsCollectionViaAccount_______.IsReadOnly = false;
					this.ProspectsCollectionViaAccount_______.Add((ProspectsEntity)entity);
					this.ProspectsCollectionViaAccount_______.IsReadOnly = true;
					break;
				case "SurveyTemplateCollectionViaAccount_______":
					this.SurveyTemplateCollectionViaAccount_______.IsReadOnly = false;
					this.SurveyTemplateCollectionViaAccount_______.Add((SurveyTemplateEntity)entity);
					this.SurveyTemplateCollectionViaAccount_______.IsReadOnly = true;
					break;
				case "SurveyTemplateCollectionViaAccount________":
					this.SurveyTemplateCollectionViaAccount________.IsReadOnly = false;
					this.SurveyTemplateCollectionViaAccount________.Add((SurveyTemplateEntity)entity);
					this.SurveyTemplateCollectionViaAccount________.IsReadOnly = true;
					break;
				case "SurveyTemplateCollectionViaAccount":
					this.SurveyTemplateCollectionViaAccount.IsReadOnly = false;
					this.SurveyTemplateCollectionViaAccount.Add((SurveyTemplateEntity)entity);
					this.SurveyTemplateCollectionViaAccount.IsReadOnly = true;
					break;
				case "SurveyTemplateCollectionViaAccount______":
					this.SurveyTemplateCollectionViaAccount______.IsReadOnly = false;
					this.SurveyTemplateCollectionViaAccount______.Add((SurveyTemplateEntity)entity);
					this.SurveyTemplateCollectionViaAccount______.IsReadOnly = true;
					break;
				case "SurveyTemplateCollectionViaAccount__":
					this.SurveyTemplateCollectionViaAccount__.IsReadOnly = false;
					this.SurveyTemplateCollectionViaAccount__.Add((SurveyTemplateEntity)entity);
					this.SurveyTemplateCollectionViaAccount__.IsReadOnly = true;
					break;
				case "SurveyTemplateCollectionViaAccount___":
					this.SurveyTemplateCollectionViaAccount___.IsReadOnly = false;
					this.SurveyTemplateCollectionViaAccount___.Add((SurveyTemplateEntity)entity);
					this.SurveyTemplateCollectionViaAccount___.IsReadOnly = true;
					break;
				case "SurveyTemplateCollectionViaAccount____":
					this.SurveyTemplateCollectionViaAccount____.IsReadOnly = false;
					this.SurveyTemplateCollectionViaAccount____.Add((SurveyTemplateEntity)entity);
					this.SurveyTemplateCollectionViaAccount____.IsReadOnly = true;
					break;
				case "SurveyTemplateCollectionViaAccount_":
					this.SurveyTemplateCollectionViaAccount_.IsReadOnly = false;
					this.SurveyTemplateCollectionViaAccount_.Add((SurveyTemplateEntity)entity);
					this.SurveyTemplateCollectionViaAccount_.IsReadOnly = true;
					break;
				case "SurveyTemplateCollectionViaAccount_____":
					this.SurveyTemplateCollectionViaAccount_____.IsReadOnly = false;
					this.SurveyTemplateCollectionViaAccount_____.Add((SurveyTemplateEntity)entity);
					this.SurveyTemplateCollectionViaAccount_____.IsReadOnly = true;
					break;

				default:
					break;
			}
		}
		
		/// <summary>Gets the relation objects which represent the relation the fieldName specified is mapped on. </summary>
		/// <param name="fieldName">Name of the field mapped onto the relation of which the relation objects have to be obtained.</param>
		/// <returns>RelationCollection with relation object(s) which represent the relation the field is maped on</returns>
		public override RelationCollection GetRelationsForFieldOfType(string fieldName)
		{
			return FileEntity.GetRelationsForField(fieldName);
		}

		/// <summary>Gets the relation objects which represent the relation the fieldName specified is mapped on. </summary>
		/// <param name="fieldName">Name of the field mapped onto the relation of which the relation objects have to be obtained.</param>
		/// <returns>RelationCollection with relation object(s) which represent the relation the field is maped on</returns>
		public static RelationCollection GetRelationsForField(string fieldName)
		{
			RelationCollection toReturn = new RelationCollection();
			switch(fieldName)
			{
				case "Lookup":
					toReturn.Add(FileEntity.Relations.LookupEntityUsingType);
					break;
				case "OrganizationRoleUser":
					toReturn.Add(FileEntity.Relations.OrganizationRoleUserEntityUsingCreatedBy);
					break;
				case "Account______":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingConfirmationScriptFileId);
					break;
				case "Account_____":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingCallCenterScriptFileId);
					break;
				case "Account________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingMemberLetterFileId);
					break;
				case "Account_______":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingInboundCallScriptFileId);
					break;
				case "Account____":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingFluffLetterFileId);
					break;
				case "Account_":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingParticipantLetterId);
					break;
				case "Account":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingCheckListFileId);
					break;
				case "Account___":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingSurveyPdfFileId);
					break;
				case "Account__":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingPcpLetterPdfFileId);
					break;
				case "CallUpload_":
					toReturn.Add(FileEntity.Relations.CallUploadEntityUsingLogFileId);
					break;
				case "CallUpload":
					toReturn.Add(FileEntity.Relations.CallUploadEntityUsingFileId);
					break;
				case "ChaperoneSignature_":
					toReturn.Add(FileEntity.Relations.ChaperoneSignatureEntityUsingStaffSignatureFileId);
					break;
				case "ChaperoneSignature":
					toReturn.Add(FileEntity.Relations.ChaperoneSignatureEntityUsingSignatureFileId);
					break;
				case "CorporateUpload_":
					toReturn.Add(FileEntity.Relations.CorporateUploadEntityUsingLogFileId);
					break;
				case "CorporateUpload":
					toReturn.Add(FileEntity.Relations.CorporateUploadEntityUsingFileId);
					break;
				case "CorporateUpload__":
					toReturn.Add(FileEntity.Relations.CorporateUploadEntityUsingAdjustOrderLogFileId);
					break;
				case "CustomerActivityTypeUpload_":
					toReturn.Add(FileEntity.Relations.CustomerActivityTypeUploadEntityUsingLogFileId);
					break;
				case "CustomerActivityTypeUpload":
					toReturn.Add(FileEntity.Relations.CustomerActivityTypeUploadEntityUsingFileId);
					break;
				case "CustomerPhoneNumberUpdateUpload_":
					toReturn.Add(FileEntity.Relations.CustomerPhoneNumberUpdateUploadEntityUsingLogFileId);
					break;
				case "CustomerPhoneNumberUpdateUpload":
					toReturn.Add(FileEntity.Relations.CustomerPhoneNumberUpdateUploadEntityUsingFileId);
					break;
				case "EligibilityUpload_":
					toReturn.Add(FileEntity.Relations.EligibilityUploadEntityUsingLogFileId);
					break;
				case "EligibilityUpload":
					toReturn.Add(FileEntity.Relations.EligibilityUploadEntityUsingFileId);
					break;
				case "EventCustomerGiftCard_":
					toReturn.Add(FileEntity.Relations.EventCustomerGiftCardEntityUsingTechnicianSignatureFileId);
					break;
				case "EventCustomerGiftCard":
					toReturn.Add(FileEntity.Relations.EventCustomerGiftCardEntityUsingPatientSignatureFileId);
					break;
				case "ExitInterviewSignature":
					toReturn.Add(FileEntity.Relations.ExitInterviewSignatureEntityUsingSignatureFileId);
					break;
				case "ExportableReportsQueue":
					toReturn.Add(FileEntity.Relations.ExportableReportsQueueEntityUsingFileId);
					break;
				case "FluConsentSignature_":
					toReturn.Add(FileEntity.Relations.FluConsentSignatureEntityUsingClinicalProviderSignatureFileId);
					break;
				case "FluConsentSignature":
					toReturn.Add(FileEntity.Relations.FluConsentSignatureEntityUsingSignatureFileId);
					break;
				case "HealthPlanCriteriaAssignmentUpload":
					toReturn.Add(FileEntity.Relations.HealthPlanCriteriaAssignmentUploadEntityUsingFileId);
					break;
				case "HostImage":
					toReturn.Add(FileEntity.Relations.HostImageEntityUsingImageId);
					break;
				case "MedicalVendorProfile_":
					toReturn.Add(FileEntity.Relations.MedicalVendorProfileEntityUsingDoctorLetterFileId);
					break;
				case "MedicalVendorProfile":
					toReturn.Add(FileEntity.Relations.MedicalVendorProfileEntityUsingResultLetterCoBrandingFileId);
					break;
				case "MedicationUpload_":
					toReturn.Add(FileEntity.Relations.MedicationUploadEntityUsingLogFileId);
					break;
				case "MedicationUpload":
					toReturn.Add(FileEntity.Relations.MedicationUploadEntityUsingFileId);
					break;
				case "MergeCustomerUpload_":
					toReturn.Add(FileEntity.Relations.MergeCustomerUploadEntityUsingLogFileId);
					break;
				case "MergeCustomerUpload":
					toReturn.Add(FileEntity.Relations.MergeCustomerUploadEntityUsingFileId);
					break;
				case "Organization_":
					toReturn.Add(FileEntity.Relations.OrganizationEntityUsingTeamImageId);
					break;
				case "Organization":
					toReturn.Add(FileEntity.Relations.OrganizationEntityUsingLogoImageId);
					break;
				case "OutboundUpload_":
					toReturn.Add(FileEntity.Relations.OutboundUploadEntityUsingLogFileId);
					break;
				case "OutboundUpload":
					toReturn.Add(FileEntity.Relations.OutboundUploadEntityUsingFileId);
					break;
				case "Package":
					toReturn.Add(FileEntity.Relations.PackageEntityUsingForOrderDisplayFileId);
					break;
				case "ParticipationConsentSignature_":
					toReturn.Add(FileEntity.Relations.ParticipationConsentSignatureEntityUsingSignatureFileId);
					break;
				case "ParticipationConsentSignature":
					toReturn.Add(FileEntity.Relations.ParticipationConsentSignatureEntityUsingInsuranceSignatureFileId);
					break;
				case "PhysicianProfile_":
					toReturn.Add(FileEntity.Relations.PhysicianProfileEntityUsingDigitalSignatureFileId);
					break;
				case "PhysicianProfile":
					toReturn.Add(FileEntity.Relations.PhysicianProfileEntityUsingResumeFileId);
					break;
				case "PhysicianRecordRequestSignature":
					toReturn.Add(FileEntity.Relations.PhysicianRecordRequestSignatureEntityUsingSignatureFileId);
					break;
				case "RapsUpload_":
					toReturn.Add(FileEntity.Relations.RapsUploadEntityUsingLogFileId);
					break;
				case "RapsUpload":
					toReturn.Add(FileEntity.Relations.RapsUploadEntityUsingFileId);
					break;
				case "ResultArchiveUpload":
					toReturn.Add(FileEntity.Relations.ResultArchiveUploadEntityUsingFileId);
					break;
				case "StaffEventScheduleUpload_":
					toReturn.Add(FileEntity.Relations.StaffEventScheduleUploadEntityUsingLogFileId);
					break;
				case "StaffEventScheduleUpload":
					toReturn.Add(FileEntity.Relations.StaffEventScheduleUploadEntityUsingFileId);
					break;
				case "SuspectConditionUpload_":
					toReturn.Add(FileEntity.Relations.SuspectConditionUploadEntityUsingLogFileId);
					break;
				case "SuspectConditionUpload":
					toReturn.Add(FileEntity.Relations.SuspectConditionUploadEntityUsingFileId);
					break;
				case "Testimonial":
					toReturn.Add(FileEntity.Relations.TestimonialEntityUsingFileId);
					break;
				case "TestMedia":
					toReturn.Add(FileEntity.Relations.TestMediaEntityUsingFileId);
					break;
				case "WellMedAttestation":
					toReturn.Add(FileEntity.Relations.WellMedAttestationEntityUsingProviderSignatureFileId);
					break;
				case "AccountCollectionViaEligibilityUpload_":
					toReturn.Add(FileEntity.Relations.EligibilityUploadEntityUsingLogFileId, "FileEntity__", "EligibilityUpload_", JoinHint.None);
					toReturn.Add(EligibilityUploadEntity.Relations.AccountEntityUsingAccountId, "EligibilityUpload_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaCorporateUpload":
					toReturn.Add(FileEntity.Relations.CorporateUploadEntityUsingAdjustOrderLogFileId, "FileEntity__", "CorporateUpload_", JoinHint.None);
					toReturn.Add(CorporateUploadEntity.Relations.AccountEntityUsingAccountId, "CorporateUpload_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaCorporateUpload__":
					toReturn.Add(FileEntity.Relations.CorporateUploadEntityUsingLogFileId, "FileEntity__", "CorporateUpload_", JoinHint.None);
					toReturn.Add(CorporateUploadEntity.Relations.AccountEntityUsingAccountId, "CorporateUpload_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaCorporateUpload_":
					toReturn.Add(FileEntity.Relations.CorporateUploadEntityUsingFileId, "FileEntity__", "CorporateUpload_", JoinHint.None);
					toReturn.Add(CorporateUploadEntity.Relations.AccountEntityUsingAccountId, "CorporateUpload_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaEligibilityUpload":
					toReturn.Add(FileEntity.Relations.EligibilityUploadEntityUsingFileId, "FileEntity__", "EligibilityUpload_", JoinHint.None);
					toReturn.Add(EligibilityUploadEntity.Relations.AccountEntityUsingAccountId, "EligibilityUpload_", string.Empty, JoinHint.None);
					break;
				case "AddressCollectionViaOrganization_":
					toReturn.Add(FileEntity.Relations.OrganizationEntityUsingTeamImageId, "FileEntity__", "Organization_", JoinHint.None);
					toReturn.Add(OrganizationEntity.Relations.AddressEntityUsingBusinessAddressId, "Organization_", string.Empty, JoinHint.None);
					break;
				case "AddressCollectionViaOrganization":
					toReturn.Add(FileEntity.Relations.OrganizationEntityUsingLogoImageId, "FileEntity__", "Organization_", JoinHint.None);
					toReturn.Add(OrganizationEntity.Relations.AddressEntityUsingBusinessAddressId, "Organization_", string.Empty, JoinHint.None);
					break;
				case "CheckListQuestionCollectionViaExitInterviewSignature":
					toReturn.Add(FileEntity.Relations.ExitInterviewSignatureEntityUsingSignatureFileId, "FileEntity__", "ExitInterviewSignature_", JoinHint.None);
					toReturn.Add(ExitInterviewSignatureEntity.Relations.CheckListQuestionEntityUsingQuestionId, "ExitInterviewSignature_", string.Empty, JoinHint.None);
					break;
				case "CheckListTemplateCollectionViaAccount_________________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingMemberLetterFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.CheckListTemplateEntityUsingCheckListTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "CheckListTemplateCollectionViaAccount_____":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingPcpLetterPdfFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.CheckListTemplateEntityUsingCheckListTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "CheckListTemplateCollectionViaAccount____":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingPcpLetterPdfFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.CheckListTemplateEntityUsingExitInterviewTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "CheckListTemplateCollectionViaAccount_____________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingFluffLetterFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.CheckListTemplateEntityUsingCheckListTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "CheckListTemplateCollectionViaAccount______":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingSurveyPdfFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.CheckListTemplateEntityUsingExitInterviewTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "CheckListTemplateCollectionViaAccount_______":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingSurveyPdfFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.CheckListTemplateEntityUsingCheckListTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "CheckListTemplateCollectionViaAccount__________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingConfirmationScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.CheckListTemplateEntityUsingExitInterviewTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "CheckListTemplateCollectionViaAccount_________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingCallCenterScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.CheckListTemplateEntityUsingExitInterviewTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "CheckListTemplateCollectionViaAccount____________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingMemberLetterFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.CheckListTemplateEntityUsingExitInterviewTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "CheckListTemplateCollectionViaAccount___________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingInboundCallScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.CheckListTemplateEntityUsingExitInterviewTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "CheckListTemplateCollectionViaAccount_______________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingConfirmationScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.CheckListTemplateEntityUsingCheckListTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "CheckListTemplateCollectionViaAccount________________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingInboundCallScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.CheckListTemplateEntityUsingCheckListTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "CheckListTemplateCollectionViaAccount________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingFluffLetterFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.CheckListTemplateEntityUsingExitInterviewTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "CheckListTemplateCollectionViaAccount______________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingCallCenterScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.CheckListTemplateEntityUsingCheckListTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "CheckListTemplateCollectionViaAccount_":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingCheckListFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.CheckListTemplateEntityUsingCheckListTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "CheckListTemplateCollectionViaAccount___":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingParticipantLetterId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.CheckListTemplateEntityUsingCheckListTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "CheckListTemplateCollectionViaAccount__":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingParticipantLetterId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.CheckListTemplateEntityUsingExitInterviewTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "CheckListTemplateCollectionViaAccount":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingCheckListFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.CheckListTemplateEntityUsingExitInterviewTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "ContractCollectionViaMedicalVendorProfile_":
					toReturn.Add(FileEntity.Relations.MedicalVendorProfileEntityUsingDoctorLetterFileId, "FileEntity__", "MedicalVendorProfile_", JoinHint.None);
					toReturn.Add(MedicalVendorProfileEntity.Relations.ContractEntityUsingContractId, "MedicalVendorProfile_", string.Empty, JoinHint.None);
					break;
				case "ContractCollectionViaMedicalVendorProfile":
					toReturn.Add(FileEntity.Relations.MedicalVendorProfileEntityUsingResultLetterCoBrandingFileId, "FileEntity__", "MedicalVendorProfile_", JoinHint.None);
					toReturn.Add(MedicalVendorProfileEntity.Relations.ContractEntityUsingContractId, "MedicalVendorProfile_", string.Empty, JoinHint.None);
					break;
				case "CustomerEventScreeningTestsCollectionViaTestMedia":
					toReturn.Add(FileEntity.Relations.TestMediaEntityUsingFileId, "FileEntity__", "TestMedia_", JoinHint.None);
					toReturn.Add(TestMediaEntity.Relations.CustomerEventScreeningTestsEntityUsingCustomerEventScreeningTestId, "TestMedia_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaTestimonial":
					toReturn.Add(FileEntity.Relations.TestimonialEntityUsingFileId, "FileEntity__", "Testimonial_", JoinHint.None);
					toReturn.Add(TestimonialEntity.Relations.CustomerProfileEntityUsingCustomerId, "Testimonial_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount_________________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingCallCenterScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingConfirmationSmsTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount__________________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingConfirmationScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingConfirmationSmsTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount___________________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingInboundCallScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingConfirmationSmsTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount_____________________________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingInboundCallScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingPcpCoverLetterTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount___________________________________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingMemberLetterFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingReminderSmsTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount________________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingFluffLetterFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingConfirmationSmsTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount___________________________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingCallCenterScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingPcpCoverLetterTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount__________________________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingFluffLetterFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingPcpCoverLetterTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount_________________________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingMemberLetterFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingMemberCoverLetterTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount____________________________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingConfirmationScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingPcpCoverLetterTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount______________________________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingMemberLetterFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingPcpCoverLetterTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount_______________________________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingFluffLetterFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingReminderSmsTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount________________________________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingCallCenterScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingReminderSmsTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount_________________________________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingConfirmationScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingReminderSmsTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount__________________________________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingInboundCallScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingReminderSmsTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount____________________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingMemberLetterFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingConfirmationSmsTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount_____________________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingFluffLetterFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingMemberCoverLetterTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount________________________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingInboundCallScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingMemberCoverLetterTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount_______________________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingConfirmationScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingMemberCoverLetterTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount______________________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingCallCenterScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingMemberCoverLetterTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount__":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingCheckListFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingPcpCoverLetterTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount___":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingCheckListFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingReminderSmsTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount____________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingSurveyPdfFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingConfirmationSmsTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount____":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingParticipantLetterId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingConfirmationSmsTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingPcpLetterPdfFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingConfirmationSmsTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount_______":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingParticipantLetterId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingReminderSmsTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount___________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingPcpLetterPdfFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingReminderSmsTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount__________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingPcpLetterPdfFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingPcpCoverLetterTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount_":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingCheckListFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingMemberCoverLetterTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount_____":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingParticipantLetterId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingMemberCoverLetterTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingCheckListFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingConfirmationSmsTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount_________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingPcpLetterPdfFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingMemberCoverLetterTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount______":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingParticipantLetterId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingPcpCoverLetterTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount______________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingSurveyPdfFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingPcpCoverLetterTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount_______________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingSurveyPdfFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingReminderSmsTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EmailTemplateCollectionViaAccount_____________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingSurveyPdfFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.EmailTemplateEntityUsingMemberCoverLetterTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "EventCustomerResultCollectionViaWellMedAttestation":
					toReturn.Add(FileEntity.Relations.WellMedAttestationEntityUsingProviderSignatureFileId, "FileEntity__", "WellMedAttestation_", JoinHint.None);
					toReturn.Add(WellMedAttestationEntity.Relations.EventCustomerResultEntityUsingEventCustomerResultId, "WellMedAttestation_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaChaperoneSignature":
					toReturn.Add(FileEntity.Relations.ChaperoneSignatureEntityUsingSignatureFileId, "FileEntity__", "ChaperoneSignature_", JoinHint.None);
					toReturn.Add(ChaperoneSignatureEntity.Relations.EventCustomersEntityUsingEventCustomerId, "ChaperoneSignature_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaFluConsentSignature":
					toReturn.Add(FileEntity.Relations.FluConsentSignatureEntityUsingSignatureFileId, "FileEntity__", "FluConsentSignature_", JoinHint.None);
					toReturn.Add(FluConsentSignatureEntity.Relations.EventCustomersEntityUsingEventCustomerId, "FluConsentSignature_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaParticipationConsentSignature":
					toReturn.Add(FileEntity.Relations.ParticipationConsentSignatureEntityUsingInsuranceSignatureFileId, "FileEntity__", "ParticipationConsentSignature_", JoinHint.None);
					toReturn.Add(ParticipationConsentSignatureEntity.Relations.EventCustomersEntityUsingEventCustomerId, "ParticipationConsentSignature_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaFluConsentSignature_":
					toReturn.Add(FileEntity.Relations.FluConsentSignatureEntityUsingClinicalProviderSignatureFileId, "FileEntity__", "FluConsentSignature_", JoinHint.None);
					toReturn.Add(FluConsentSignatureEntity.Relations.EventCustomersEntityUsingEventCustomerId, "FluConsentSignature_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaParticipationConsentSignature_":
					toReturn.Add(FileEntity.Relations.ParticipationConsentSignatureEntityUsingSignatureFileId, "FileEntity__", "ParticipationConsentSignature_", JoinHint.None);
					toReturn.Add(ParticipationConsentSignatureEntity.Relations.EventCustomersEntityUsingEventCustomerId, "ParticipationConsentSignature_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaExitInterviewSignature":
					toReturn.Add(FileEntity.Relations.ExitInterviewSignatureEntityUsingSignatureFileId, "FileEntity__", "ExitInterviewSignature_", JoinHint.None);
					toReturn.Add(ExitInterviewSignatureEntity.Relations.EventCustomersEntityUsingEventCustomerId, "ExitInterviewSignature_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaEventCustomerGiftCard_":
					toReturn.Add(FileEntity.Relations.EventCustomerGiftCardEntityUsingTechnicianSignatureFileId, "FileEntity__", "EventCustomerGiftCard_", JoinHint.None);
					toReturn.Add(EventCustomerGiftCardEntity.Relations.EventCustomersEntityUsingEventCustomerId, "EventCustomerGiftCard_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaChaperoneSignature_":
					toReturn.Add(FileEntity.Relations.ChaperoneSignatureEntityUsingStaffSignatureFileId, "FileEntity__", "ChaperoneSignature_", JoinHint.None);
					toReturn.Add(ChaperoneSignatureEntity.Relations.EventCustomersEntityUsingEventCustomerId, "ChaperoneSignature_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaPhysicianRecordRequestSignature":
					toReturn.Add(FileEntity.Relations.PhysicianRecordRequestSignatureEntityUsingSignatureFileId, "FileEntity__", "PhysicianRecordRequestSignature_", JoinHint.None);
					toReturn.Add(PhysicianRecordRequestSignatureEntity.Relations.EventCustomersEntityUsingEventCustomerId, "PhysicianRecordRequestSignature_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaEventCustomerGiftCard":
					toReturn.Add(FileEntity.Relations.EventCustomerGiftCardEntityUsingPatientSignatureFileId, "FileEntity__", "EventCustomerGiftCard_", JoinHint.None);
					toReturn.Add(EventCustomerGiftCardEntity.Relations.EventCustomersEntityUsingEventCustomerId, "EventCustomerGiftCard_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaResultArchiveUpload":
					toReturn.Add(FileEntity.Relations.ResultArchiveUploadEntityUsingFileId, "FileEntity__", "ResultArchiveUpload_", JoinHint.None);
					toReturn.Add(ResultArchiveUploadEntity.Relations.EventsEntityUsingEventId, "ResultArchiveUpload_", string.Empty, JoinHint.None);
					break;
				case "ExportableReportsCollectionViaExportableReportsQueue":
					toReturn.Add(FileEntity.Relations.ExportableReportsQueueEntityUsingFileId, "FileEntity__", "ExportableReportsQueue_", JoinHint.None);
					toReturn.Add(ExportableReportsQueueEntity.Relations.ExportableReportsEntityUsingReportId, "ExportableReportsQueue_", string.Empty, JoinHint.None);
					break;
				case "FluConsentTemplateCollectionViaAccount______":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingConfirmationScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.FluConsentTemplateEntityUsingFluConsentTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "FluConsentTemplateCollectionViaAccount":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingCheckListFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.FluConsentTemplateEntityUsingFluConsentTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "FluConsentTemplateCollectionViaAccount________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingMemberLetterFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.FluConsentTemplateEntityUsingFluConsentTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "FluConsentTemplateCollectionViaAccount_______":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingInboundCallScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.FluConsentTemplateEntityUsingFluConsentTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "FluConsentTemplateCollectionViaAccount___":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingSurveyPdfFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.FluConsentTemplateEntityUsingFluConsentTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "FluConsentTemplateCollectionViaAccount_____":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingCallCenterScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.FluConsentTemplateEntityUsingFluConsentTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "FluConsentTemplateCollectionViaAccount__":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingPcpLetterPdfFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.FluConsentTemplateEntityUsingFluConsentTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "FluConsentTemplateCollectionViaAccount_":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingParticipantLetterId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.FluConsentTemplateEntityUsingFluConsentTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "FluConsentTemplateCollectionViaAccount____":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingFluffLetterFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.FluConsentTemplateEntityUsingFluConsentTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "HafTemplateCollectionViaAccount________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingMemberLetterFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.HafTemplateEntityUsingClinicalQuestionTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "HafTemplateCollectionViaAccount______":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingConfirmationScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.HafTemplateEntityUsingClinicalQuestionTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "HafTemplateCollectionViaAccount__":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingPcpLetterPdfFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.HafTemplateEntityUsingClinicalQuestionTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "HafTemplateCollectionViaAccount____":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingFluffLetterFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.HafTemplateEntityUsingClinicalQuestionTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "HafTemplateCollectionViaPackage":
					toReturn.Add(FileEntity.Relations.PackageEntityUsingForOrderDisplayFileId, "FileEntity__", "Package_", JoinHint.None);
					toReturn.Add(PackageEntity.Relations.HafTemplateEntityUsingHafTemplateId, "Package_", string.Empty, JoinHint.None);
					break;
				case "HafTemplateCollectionViaAccount_":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingParticipantLetterId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.HafTemplateEntityUsingClinicalQuestionTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "HafTemplateCollectionViaAccount_______":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingInboundCallScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.HafTemplateEntityUsingClinicalQuestionTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "HafTemplateCollectionViaAccount_____":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingCallCenterScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.HafTemplateEntityUsingClinicalQuestionTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "HafTemplateCollectionViaAccount":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingCheckListFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.HafTemplateEntityUsingClinicalQuestionTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "HafTemplateCollectionViaAccount___":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingSurveyPdfFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.HafTemplateEntityUsingClinicalQuestionTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload":
					toReturn.Add(FileEntity.Relations.HealthPlanCriteriaAssignmentUploadEntityUsingFileId, "FileEntity__", "HealthPlanCriteriaAssignmentUpload_", JoinHint.None);
					toReturn.Add(HealthPlanCriteriaAssignmentUploadEntity.Relations.HealthPlanCallQueueCriteriaEntityUsingCriteriaId, "HealthPlanCriteriaAssignmentUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaStaffEventScheduleUpload_":
					toReturn.Add(FileEntity.Relations.StaffEventScheduleUploadEntityUsingLogFileId, "FileEntity__", "StaffEventScheduleUpload_", JoinHint.None);
					toReturn.Add(StaffEventScheduleUploadEntity.Relations.LookupEntityUsingStatusId, "StaffEventScheduleUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaRapsUpload":
					toReturn.Add(FileEntity.Relations.RapsUploadEntityUsingFileId, "FileEntity__", "RapsUpload_", JoinHint.None);
					toReturn.Add(RapsUploadEntity.Relations.LookupEntityUsingStatusId, "RapsUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCustomerPhoneNumberUpdateUpload":
					toReturn.Add(FileEntity.Relations.CustomerPhoneNumberUpdateUploadEntityUsingFileId, "FileEntity__", "CustomerPhoneNumberUpdateUpload_", JoinHint.None);
					toReturn.Add(CustomerPhoneNumberUpdateUploadEntity.Relations.LookupEntityUsingStatusId, "CustomerPhoneNumberUpdateUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEligibilityUpload":
					toReturn.Add(FileEntity.Relations.EligibilityUploadEntityUsingFileId, "FileEntity__", "EligibilityUpload_", JoinHint.None);
					toReturn.Add(EligibilityUploadEntity.Relations.LookupEntityUsingStatusId, "EligibilityUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCustomerPhoneNumberUpdateUpload_":
					toReturn.Add(FileEntity.Relations.CustomerPhoneNumberUpdateUploadEntityUsingLogFileId, "FileEntity__", "CustomerPhoneNumberUpdateUpload_", JoinHint.None);
					toReturn.Add(CustomerPhoneNumberUpdateUploadEntity.Relations.LookupEntityUsingStatusId, "CustomerPhoneNumberUpdateUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEligibilityUpload_":
					toReturn.Add(FileEntity.Relations.EligibilityUploadEntityUsingLogFileId, "FileEntity__", "EligibilityUpload_", JoinHint.None);
					toReturn.Add(EligibilityUploadEntity.Relations.LookupEntityUsingStatusId, "EligibilityUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaStaffEventScheduleUpload":
					toReturn.Add(FileEntity.Relations.StaffEventScheduleUploadEntityUsingFileId, "FileEntity__", "StaffEventScheduleUpload_", JoinHint.None);
					toReturn.Add(StaffEventScheduleUploadEntity.Relations.LookupEntityUsingStatusId, "StaffEventScheduleUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaRapsUpload_":
					toReturn.Add(FileEntity.Relations.RapsUploadEntityUsingLogFileId, "FileEntity__", "RapsUpload_", JoinHint.None);
					toReturn.Add(RapsUploadEntity.Relations.LookupEntityUsingStatusId, "RapsUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaMergeCustomerUpload_":
					toReturn.Add(FileEntity.Relations.MergeCustomerUploadEntityUsingLogFileId, "FileEntity__", "MergeCustomerUpload_", JoinHint.None);
					toReturn.Add(MergeCustomerUploadEntity.Relations.LookupEntityUsingStatusId, "MergeCustomerUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaMergeCustomerUpload":
					toReturn.Add(FileEntity.Relations.MergeCustomerUploadEntityUsingFileId, "FileEntity__", "MergeCustomerUpload_", JoinHint.None);
					toReturn.Add(MergeCustomerUploadEntity.Relations.LookupEntityUsingStatusId, "MergeCustomerUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaMedicationUpload_":
					toReturn.Add(FileEntity.Relations.MedicationUploadEntityUsingLogFileId, "FileEntity__", "MedicationUpload_", JoinHint.None);
					toReturn.Add(MedicationUploadEntity.Relations.LookupEntityUsingStatusId, "MedicationUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaOutboundUpload__":
					toReturn.Add(FileEntity.Relations.OutboundUploadEntityUsingLogFileId, "FileEntity__", "OutboundUpload_", JoinHint.None);
					toReturn.Add(OutboundUploadEntity.Relations.LookupEntityUsingStatusId, "OutboundUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaOutboundUpload":
					toReturn.Add(FileEntity.Relations.OutboundUploadEntityUsingFileId, "FileEntity__", "OutboundUpload_", JoinHint.None);
					toReturn.Add(OutboundUploadEntity.Relations.LookupEntityUsingStatusId, "OutboundUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaOutboundUpload___":
					toReturn.Add(FileEntity.Relations.OutboundUploadEntityUsingLogFileId, "FileEntity__", "OutboundUpload_", JoinHint.None);
					toReturn.Add(OutboundUploadEntity.Relations.LookupEntityUsingTypeId, "OutboundUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaPackage":
					toReturn.Add(FileEntity.Relations.PackageEntityUsingForOrderDisplayFileId, "FileEntity__", "Package_", JoinHint.None);
					toReturn.Add(PackageEntity.Relations.LookupEntityUsingGender, "Package_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaSuspectConditionUpload_":
					toReturn.Add(FileEntity.Relations.SuspectConditionUploadEntityUsingLogFileId, "FileEntity__", "SuspectConditionUpload_", JoinHint.None);
					toReturn.Add(SuspectConditionUploadEntity.Relations.LookupEntityUsingStatusId, "SuspectConditionUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaExportableReportsQueue":
					toReturn.Add(FileEntity.Relations.ExportableReportsQueueEntityUsingFileId, "FileEntity__", "ExportableReportsQueue_", JoinHint.None);
					toReturn.Add(ExportableReportsQueueEntity.Relations.LookupEntityUsingStatusId, "ExportableReportsQueue_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaSuspectConditionUpload":
					toReturn.Add(FileEntity.Relations.SuspectConditionUploadEntityUsingFileId, "FileEntity__", "SuspectConditionUpload_", JoinHint.None);
					toReturn.Add(SuspectConditionUploadEntity.Relations.LookupEntityUsingStatusId, "SuspectConditionUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaMedicationUpload":
					toReturn.Add(FileEntity.Relations.MedicationUploadEntityUsingFileId, "FileEntity__", "MedicationUpload_", JoinHint.None);
					toReturn.Add(MedicationUploadEntity.Relations.LookupEntityUsingStatusId, "MedicationUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaHostImage":
					toReturn.Add(FileEntity.Relations.HostImageEntityUsingImageId, "FileEntity__", "HostImage_", JoinHint.None);
					toReturn.Add(HostImageEntity.Relations.LookupEntityUsingHostImageType, "HostImage_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaOutboundUpload_":
					toReturn.Add(FileEntity.Relations.OutboundUploadEntityUsingFileId, "FileEntity__", "OutboundUpload_", JoinHint.None);
					toReturn.Add(OutboundUploadEntity.Relations.LookupEntityUsingTypeId, "OutboundUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaWellMedAttestation":
					toReturn.Add(FileEntity.Relations.WellMedAttestationEntityUsingProviderSignatureFileId, "FileEntity__", "WellMedAttestation_", JoinHint.None);
					toReturn.Add(WellMedAttestationEntity.Relations.LookupEntityUsingStatusId, "WellMedAttestation_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaAccount___":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingSurveyPdfFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.LookupEntityUsingResultFormatTypeId, "Account_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaAccount______":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingConfirmationScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.LookupEntityUsingResultFormatTypeId, "Account_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaAccount__":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingPcpLetterPdfFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.LookupEntityUsingResultFormatTypeId, "Account_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCorporateUpload_":
					toReturn.Add(FileEntity.Relations.CorporateUploadEntityUsingFileId, "FileEntity__", "CorporateUpload_", JoinHint.None);
					toReturn.Add(CorporateUploadEntity.Relations.LookupEntityUsingSourceId, "CorporateUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaAccount____":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingFluffLetterFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.LookupEntityUsingResultFormatTypeId, "Account_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaAccount_____":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingCallCenterScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.LookupEntityUsingResultFormatTypeId, "Account_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCallUpload_":
					toReturn.Add(FileEntity.Relations.CallUploadEntityUsingLogFileId, "FileEntity__", "CallUpload_", JoinHint.None);
					toReturn.Add(CallUploadEntity.Relations.LookupEntityUsingStatusId, "CallUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCorporateUpload":
					toReturn.Add(FileEntity.Relations.CorporateUploadEntityUsingAdjustOrderLogFileId, "FileEntity__", "CorporateUpload_", JoinHint.None);
					toReturn.Add(CorporateUploadEntity.Relations.LookupEntityUsingSourceId, "CorporateUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCallUpload":
					toReturn.Add(FileEntity.Relations.CallUploadEntityUsingFileId, "FileEntity__", "CallUpload_", JoinHint.None);
					toReturn.Add(CallUploadEntity.Relations.LookupEntityUsingStatusId, "CallUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaAccount_":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingParticipantLetterId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.LookupEntityUsingResultFormatTypeId, "Account_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCustomerActivityTypeUpload_":
					toReturn.Add(FileEntity.Relations.CustomerActivityTypeUploadEntityUsingLogFileId, "FileEntity__", "CustomerActivityTypeUpload_", JoinHint.None);
					toReturn.Add(CustomerActivityTypeUploadEntity.Relations.LookupEntityUsingStatusId, "CustomerActivityTypeUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaAccount":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingCheckListFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.LookupEntityUsingResultFormatTypeId, "Account_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaAccount_______":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingInboundCallScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.LookupEntityUsingResultFormatTypeId, "Account_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCorporateUpload__":
					toReturn.Add(FileEntity.Relations.CorporateUploadEntityUsingLogFileId, "FileEntity__", "CorporateUpload_", JoinHint.None);
					toReturn.Add(CorporateUploadEntity.Relations.LookupEntityUsingSourceId, "CorporateUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCustomerActivityTypeUpload":
					toReturn.Add(FileEntity.Relations.CustomerActivityTypeUploadEntityUsingFileId, "FileEntity__", "CustomerActivityTypeUpload_", JoinHint.None);
					toReturn.Add(CustomerActivityTypeUploadEntity.Relations.LookupEntityUsingStatusId, "CustomerActivityTypeUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaAccount________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingMemberLetterFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.LookupEntityUsingResultFormatTypeId, "Account_", string.Empty, JoinHint.None);
					break;
				case "MedicalVendorTypeCollectionViaMedicalVendorProfile":
					toReturn.Add(FileEntity.Relations.MedicalVendorProfileEntityUsingResultLetterCoBrandingFileId, "FileEntity__", "MedicalVendorProfile_", JoinHint.None);
					toReturn.Add(MedicalVendorProfileEntity.Relations.MedicalVendorTypeEntityUsingTypeId, "MedicalVendorProfile_", string.Empty, JoinHint.None);
					break;
				case "MedicalVendorTypeCollectionViaMedicalVendorProfile_":
					toReturn.Add(FileEntity.Relations.MedicalVendorProfileEntityUsingDoctorLetterFileId, "FileEntity__", "MedicalVendorProfile_", JoinHint.None);
					toReturn.Add(MedicalVendorProfileEntity.Relations.MedicalVendorTypeEntityUsingTypeId, "MedicalVendorProfile_", string.Empty, JoinHint.None);
					break;
				case "MvuserClassificationCollectionViaPhysicianProfile_":
					toReturn.Add(FileEntity.Relations.PhysicianProfileEntityUsingDigitalSignatureFileId, "FileEntity__", "PhysicianProfile_", JoinHint.None);
					toReturn.Add(PhysicianProfileEntity.Relations.MvuserClassificationEntityUsingClassificationId, "PhysicianProfile_", string.Empty, JoinHint.None);
					break;
				case "MvuserClassificationCollectionViaPhysicianProfile":
					toReturn.Add(FileEntity.Relations.PhysicianProfileEntityUsingResumeFileId, "FileEntity__", "PhysicianProfile_", JoinHint.None);
					toReturn.Add(PhysicianProfileEntity.Relations.MvuserClassificationEntityUsingClassificationId, "PhysicianProfile_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaMergeCustomerUpload":
					toReturn.Add(FileEntity.Relations.MergeCustomerUploadEntityUsingFileId, "FileEntity__", "MergeCustomerUpload_", JoinHint.None);
					toReturn.Add(MergeCustomerUploadEntity.Relations.OrganizationRoleUserEntityUsingUploadedBy, "MergeCustomerUpload_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaCustomerActivityTypeUpload_":
					toReturn.Add(FileEntity.Relations.CustomerActivityTypeUploadEntityUsingLogFileId, "FileEntity__", "CustomerActivityTypeUpload_", JoinHint.None);
					toReturn.Add(CustomerActivityTypeUploadEntity.Relations.OrganizationRoleUserEntityUsingUploadedBy, "CustomerActivityTypeUpload_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaMergeCustomerUpload_":
					toReturn.Add(FileEntity.Relations.MergeCustomerUploadEntityUsingLogFileId, "FileEntity__", "MergeCustomerUpload_", JoinHint.None);
					toReturn.Add(MergeCustomerUploadEntity.Relations.OrganizationRoleUserEntityUsingUploadedBy, "MergeCustomerUpload_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaMedicationUpload_":
					toReturn.Add(FileEntity.Relations.MedicationUploadEntityUsingLogFileId, "FileEntity__", "MedicationUpload_", JoinHint.None);
					toReturn.Add(MedicationUploadEntity.Relations.OrganizationRoleUserEntityUsingUploadedBy, "MedicationUpload_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaStaffEventScheduleUpload_":
					toReturn.Add(FileEntity.Relations.StaffEventScheduleUploadEntityUsingLogFileId, "FileEntity__", "StaffEventScheduleUpload_", JoinHint.None);
					toReturn.Add(StaffEventScheduleUploadEntity.Relations.OrganizationRoleUserEntityUsingUploadedByOrgRoleUserId, "StaffEventScheduleUpload_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaStaffEventScheduleUpload":
					toReturn.Add(FileEntity.Relations.StaffEventScheduleUploadEntityUsingFileId, "FileEntity__", "StaffEventScheduleUpload_", JoinHint.None);
					toReturn.Add(StaffEventScheduleUploadEntity.Relations.OrganizationRoleUserEntityUsingUploadedByOrgRoleUserId, "StaffEventScheduleUpload_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaSuspectConditionUpload_":
					toReturn.Add(FileEntity.Relations.SuspectConditionUploadEntityUsingLogFileId, "FileEntity__", "SuspectConditionUpload_", JoinHint.None);
					toReturn.Add(SuspectConditionUploadEntity.Relations.OrganizationRoleUserEntityUsingUploadedBy, "SuspectConditionUpload_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaSuspectConditionUpload":
					toReturn.Add(FileEntity.Relations.SuspectConditionUploadEntityUsingFileId, "FileEntity__", "SuspectConditionUpload_", JoinHint.None);
					toReturn.Add(SuspectConditionUploadEntity.Relations.OrganizationRoleUserEntityUsingUploadedBy, "SuspectConditionUpload_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaRapsUpload_":
					toReturn.Add(FileEntity.Relations.RapsUploadEntityUsingLogFileId, "FileEntity__", "RapsUpload_", JoinHint.None);
					toReturn.Add(RapsUploadEntity.Relations.OrganizationRoleUserEntityUsingUploadedBy, "RapsUpload_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaParticipationConsentSignature_":
					toReturn.Add(FileEntity.Relations.ParticipationConsentSignatureEntityUsingSignatureFileId, "FileEntity__", "ParticipationConsentSignature_", JoinHint.None);
					toReturn.Add(ParticipationConsentSignatureEntity.Relations.OrganizationRoleUserEntityUsingCreatedBy, "ParticipationConsentSignature_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaParticipationConsentSignature":
					toReturn.Add(FileEntity.Relations.ParticipationConsentSignatureEntityUsingInsuranceSignatureFileId, "FileEntity__", "ParticipationConsentSignature_", JoinHint.None);
					toReturn.Add(ParticipationConsentSignatureEntity.Relations.OrganizationRoleUserEntityUsingCreatedBy, "ParticipationConsentSignature_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaRapsUpload":
					toReturn.Add(FileEntity.Relations.RapsUploadEntityUsingFileId, "FileEntity__", "RapsUpload_", JoinHint.None);
					toReturn.Add(RapsUploadEntity.Relations.OrganizationRoleUserEntityUsingUploadedBy, "RapsUpload_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaPhysicianRecordRequestSignature":
					toReturn.Add(FileEntity.Relations.PhysicianRecordRequestSignatureEntityUsingSignatureFileId, "FileEntity__", "PhysicianRecordRequestSignature_", JoinHint.None);
					toReturn.Add(PhysicianRecordRequestSignatureEntity.Relations.OrganizationRoleUserEntityUsingCreatedBy, "PhysicianRecordRequestSignature_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaFluConsentSignature":
					toReturn.Add(FileEntity.Relations.FluConsentSignatureEntityUsingSignatureFileId, "FileEntity__", "FluConsentSignature_", JoinHint.None);
					toReturn.Add(FluConsentSignatureEntity.Relations.OrganizationRoleUserEntityUsingCreatedBy, "FluConsentSignature_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaCorporateUpload":
					toReturn.Add(FileEntity.Relations.CorporateUploadEntityUsingFileId, "FileEntity__", "CorporateUpload_", JoinHint.None);
					toReturn.Add(CorporateUploadEntity.Relations.OrganizationRoleUserEntityUsingUploadedBy, "CorporateUpload_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaCallUpload_":
					toReturn.Add(FileEntity.Relations.CallUploadEntityUsingLogFileId, "FileEntity__", "CallUpload_", JoinHint.None);
					toReturn.Add(CallUploadEntity.Relations.OrganizationRoleUserEntityUsingUploadedBy, "CallUpload_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaEligibilityUpload":
					toReturn.Add(FileEntity.Relations.EligibilityUploadEntityUsingFileId, "FileEntity__", "EligibilityUpload_", JoinHint.None);
					toReturn.Add(EligibilityUploadEntity.Relations.OrganizationRoleUserEntityUsingUploadedBy, "EligibilityUpload_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaEventCustomerGiftCard_":
					toReturn.Add(FileEntity.Relations.EventCustomerGiftCardEntityUsingTechnicianSignatureFileId, "FileEntity__", "EventCustomerGiftCard_", JoinHint.None);
					toReturn.Add(EventCustomerGiftCardEntity.Relations.OrganizationRoleUserEntityUsingCreatedBy, "EventCustomerGiftCard_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaEligibilityUpload_":
					toReturn.Add(FileEntity.Relations.EligibilityUploadEntityUsingLogFileId, "FileEntity__", "EligibilityUpload_", JoinHint.None);
					toReturn.Add(EligibilityUploadEntity.Relations.OrganizationRoleUserEntityUsingUploadedBy, "EligibilityUpload_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaChaperoneSignature_":
					toReturn.Add(FileEntity.Relations.ChaperoneSignatureEntityUsingStaffSignatureFileId, "FileEntity__", "ChaperoneSignature_", JoinHint.None);
					toReturn.Add(ChaperoneSignatureEntity.Relations.OrganizationRoleUserEntityUsingCreatedBy, "ChaperoneSignature_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaExitInterviewSignature":
					toReturn.Add(FileEntity.Relations.ExitInterviewSignatureEntityUsingSignatureFileId, "FileEntity__", "ExitInterviewSignature_", JoinHint.None);
					toReturn.Add(ExitInterviewSignatureEntity.Relations.OrganizationRoleUserEntityUsingCreatedBy, "ExitInterviewSignature_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaCorporateUpload__":
					toReturn.Add(FileEntity.Relations.CorporateUploadEntityUsingAdjustOrderLogFileId, "FileEntity__", "CorporateUpload_", JoinHint.None);
					toReturn.Add(CorporateUploadEntity.Relations.OrganizationRoleUserEntityUsingUploadedBy, "CorporateUpload_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaExportableReportsQueue":
					toReturn.Add(FileEntity.Relations.ExportableReportsQueueEntityUsingFileId, "FileEntity__", "ExportableReportsQueue_", JoinHint.None);
					toReturn.Add(ExportableReportsQueueEntity.Relations.OrganizationRoleUserEntityUsingRequestedBy, "ExportableReportsQueue_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaChaperoneSignature":
					toReturn.Add(FileEntity.Relations.ChaperoneSignatureEntityUsingSignatureFileId, "FileEntity__", "ChaperoneSignature_", JoinHint.None);
					toReturn.Add(ChaperoneSignatureEntity.Relations.OrganizationRoleUserEntityUsingCreatedBy, "ChaperoneSignature_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaEventCustomerGiftCard":
					toReturn.Add(FileEntity.Relations.EventCustomerGiftCardEntityUsingPatientSignatureFileId, "FileEntity__", "EventCustomerGiftCard_", JoinHint.None);
					toReturn.Add(EventCustomerGiftCardEntity.Relations.OrganizationRoleUserEntityUsingCreatedBy, "EventCustomerGiftCard_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload":
					toReturn.Add(FileEntity.Relations.HealthPlanCriteriaAssignmentUploadEntityUsingFileId, "FileEntity__", "HealthPlanCriteriaAssignmentUpload_", JoinHint.None);
					toReturn.Add(HealthPlanCriteriaAssignmentUploadEntity.Relations.OrganizationRoleUserEntityUsingUploadedByOrgRoleUserId, "HealthPlanCriteriaAssignmentUpload_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_":
					toReturn.Add(FileEntity.Relations.CustomerPhoneNumberUpdateUploadEntityUsingLogFileId, "FileEntity__", "CustomerPhoneNumberUpdateUpload_", JoinHint.None);
					toReturn.Add(CustomerPhoneNumberUpdateUploadEntity.Relations.OrganizationRoleUserEntityUsingUploadedByOrgRoleUserId, "CustomerPhoneNumberUpdateUpload_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload":
					toReturn.Add(FileEntity.Relations.CustomerPhoneNumberUpdateUploadEntityUsingFileId, "FileEntity__", "CustomerPhoneNumberUpdateUpload_", JoinHint.None);
					toReturn.Add(CustomerPhoneNumberUpdateUploadEntity.Relations.OrganizationRoleUserEntityUsingUploadedByOrgRoleUserId, "CustomerPhoneNumberUpdateUpload_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaFluConsentSignature_":
					toReturn.Add(FileEntity.Relations.FluConsentSignatureEntityUsingClinicalProviderSignatureFileId, "FileEntity__", "FluConsentSignature_", JoinHint.None);
					toReturn.Add(FluConsentSignatureEntity.Relations.OrganizationRoleUserEntityUsingCreatedBy, "FluConsentSignature_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaMedicationUpload":
					toReturn.Add(FileEntity.Relations.MedicationUploadEntityUsingFileId, "FileEntity__", "MedicationUpload_", JoinHint.None);
					toReturn.Add(MedicationUploadEntity.Relations.OrganizationRoleUserEntityUsingUploadedBy, "MedicationUpload_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaCustomerActivityTypeUpload":
					toReturn.Add(FileEntity.Relations.CustomerActivityTypeUploadEntityUsingFileId, "FileEntity__", "CustomerActivityTypeUpload_", JoinHint.None);
					toReturn.Add(CustomerActivityTypeUploadEntity.Relations.OrganizationRoleUserEntityUsingUploadedBy, "CustomerActivityTypeUpload_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaCallUpload":
					toReturn.Add(FileEntity.Relations.CallUploadEntityUsingFileId, "FileEntity__", "CallUpload_", JoinHint.None);
					toReturn.Add(CallUploadEntity.Relations.OrganizationRoleUserEntityUsingUploadedBy, "CallUpload_", string.Empty, JoinHint.None);
					break;
				case "OrganizationRoleUserCollectionViaCorporateUpload_":
					toReturn.Add(FileEntity.Relations.CorporateUploadEntityUsingLogFileId, "FileEntity__", "CorporateUpload_", JoinHint.None);
					toReturn.Add(CorporateUploadEntity.Relations.OrganizationRoleUserEntityUsingUploadedBy, "CorporateUpload_", string.Empty, JoinHint.None);
					break;
				case "OrganizationTypeCollectionViaOrganization":
					toReturn.Add(FileEntity.Relations.OrganizationEntityUsingLogoImageId, "FileEntity__", "Organization_", JoinHint.None);
					toReturn.Add(OrganizationEntity.Relations.OrganizationTypeEntityUsingOrganizationTypeId, "Organization_", string.Empty, JoinHint.None);
					break;
				case "OrganizationTypeCollectionViaOrganization_":
					toReturn.Add(FileEntity.Relations.OrganizationEntityUsingTeamImageId, "FileEntity__", "Organization_", JoinHint.None);
					toReturn.Add(OrganizationEntity.Relations.OrganizationTypeEntityUsingOrganizationTypeId, "Organization_", string.Empty, JoinHint.None);
					break;
				case "PhysicianSpecializationCollectionViaPhysicianProfile_":
					toReturn.Add(FileEntity.Relations.PhysicianProfileEntityUsingDigitalSignatureFileId, "FileEntity__", "PhysicianProfile_", JoinHint.None);
					toReturn.Add(PhysicianProfileEntity.Relations.PhysicianSpecializationEntityUsingSpecializationId, "PhysicianProfile_", string.Empty, JoinHint.None);
					break;
				case "PhysicianSpecializationCollectionViaPhysicianProfile":
					toReturn.Add(FileEntity.Relations.PhysicianProfileEntityUsingResumeFileId, "FileEntity__", "PhysicianProfile_", JoinHint.None);
					toReturn.Add(PhysicianProfileEntity.Relations.PhysicianSpecializationEntityUsingSpecializationId, "PhysicianProfile_", string.Empty, JoinHint.None);
					break;
				case "ProspectsCollectionViaAccount":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingCheckListFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.ProspectsEntityUsingConvertedHostId, "Account_", string.Empty, JoinHint.None);
					break;
				case "ProspectsCollectionViaAccount________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingMemberLetterFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.ProspectsEntityUsingConvertedHostId, "Account_", string.Empty, JoinHint.None);
					break;
				case "ProspectsCollectionViaAccount__":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingPcpLetterPdfFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.ProspectsEntityUsingConvertedHostId, "Account_", string.Empty, JoinHint.None);
					break;
				case "ProspectsCollectionViaAccount_":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingParticipantLetterId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.ProspectsEntityUsingConvertedHostId, "Account_", string.Empty, JoinHint.None);
					break;
				case "ProspectsCollectionViaAccount______":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingConfirmationScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.ProspectsEntityUsingConvertedHostId, "Account_", string.Empty, JoinHint.None);
					break;
				case "ProspectsCollectionViaAccount____":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingFluffLetterFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.ProspectsEntityUsingConvertedHostId, "Account_", string.Empty, JoinHint.None);
					break;
				case "ProspectsCollectionViaHostImage":
					toReturn.Add(FileEntity.Relations.HostImageEntityUsingImageId, "FileEntity__", "HostImage_", JoinHint.None);
					toReturn.Add(HostImageEntity.Relations.ProspectsEntityUsingHostId, "HostImage_", string.Empty, JoinHint.None);
					break;
				case "ProspectsCollectionViaAccount___":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingSurveyPdfFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.ProspectsEntityUsingConvertedHostId, "Account_", string.Empty, JoinHint.None);
					break;
				case "ProspectsCollectionViaAccount_____":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingCallCenterScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.ProspectsEntityUsingConvertedHostId, "Account_", string.Empty, JoinHint.None);
					break;
				case "ProspectsCollectionViaAccount_______":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingInboundCallScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.ProspectsEntityUsingConvertedHostId, "Account_", string.Empty, JoinHint.None);
					break;
				case "SurveyTemplateCollectionViaAccount_______":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingInboundCallScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.SurveyTemplateEntityUsingSurveyTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "SurveyTemplateCollectionViaAccount________":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingMemberLetterFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.SurveyTemplateEntityUsingSurveyTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "SurveyTemplateCollectionViaAccount":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingCheckListFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.SurveyTemplateEntityUsingSurveyTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "SurveyTemplateCollectionViaAccount______":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingConfirmationScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.SurveyTemplateEntityUsingSurveyTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "SurveyTemplateCollectionViaAccount__":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingPcpLetterPdfFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.SurveyTemplateEntityUsingSurveyTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "SurveyTemplateCollectionViaAccount___":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingSurveyPdfFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.SurveyTemplateEntityUsingSurveyTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "SurveyTemplateCollectionViaAccount____":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingFluffLetterFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.SurveyTemplateEntityUsingSurveyTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "SurveyTemplateCollectionViaAccount_":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingParticipantLetterId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.SurveyTemplateEntityUsingSurveyTemplateId, "Account_", string.Empty, JoinHint.None);
					break;
				case "SurveyTemplateCollectionViaAccount_____":
					toReturn.Add(FileEntity.Relations.AccountEntityUsingCallCenterScriptFileId, "FileEntity__", "Account_", JoinHint.None);
					toReturn.Add(AccountEntity.Relations.SurveyTemplateEntityUsingSurveyTemplateId, "Account_", string.Empty, JoinHint.None);
					break;

				default:

					break;				
			}
			return toReturn;
		}
#if !CF
		/// <summary>Checks if the relation mapped by the property with the name specified is a one way / single sided relation. If the passed in name is null, it
		/// will return true if the entity has any single-sided relation</summary>
		/// <param name="propertyName">Name of the property which is mapped onto the relation to check, or null to check if the entity has any relation/ which is single sided</param>
		/// <returns>true if the relation is single sided / one way (so the opposite relation isn't present), false otherwise</returns>
		[EditorBrowsable(EditorBrowsableState.Never)]
		protected override bool CheckOneWayRelations(string propertyName)
		{
			// use template trick to calculate the # of single-sided / oneway relations
			int numberOfOneWayRelations = 0;
			switch(propertyName)
			{
				case null:
					return ((numberOfOneWayRelations > 0) || base.CheckOneWayRelations(null));



				default:
					return base.CheckOneWayRelations(propertyName);
			}
		}
#endif
		/// <summary> Sets the internal parameter related to the fieldname passed to the instance relatedEntity. </summary>
		/// <param name="relatedEntity">Instance to set as the related entity of type entityType</param>
		/// <param name="fieldName">Name of field mapped onto the relation which resolves in the instance relatedEntity</param>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public override void SetRelatedEntity(IEntity2 relatedEntity, string fieldName)
		{
			switch(fieldName)
			{
				case "Lookup":
					SetupSyncLookup(relatedEntity);
					break;
				case "OrganizationRoleUser":
					SetupSyncOrganizationRoleUser(relatedEntity);
					break;
				case "Account______":
					this.Account______.Add((AccountEntity)relatedEntity);
					break;
				case "Account_____":
					this.Account_____.Add((AccountEntity)relatedEntity);
					break;
				case "Account________":
					this.Account________.Add((AccountEntity)relatedEntity);
					break;
				case "Account_______":
					this.Account_______.Add((AccountEntity)relatedEntity);
					break;
				case "Account____":
					this.Account____.Add((AccountEntity)relatedEntity);
					break;
				case "Account_":
					this.Account_.Add((AccountEntity)relatedEntity);
					break;
				case "Account":
					this.Account.Add((AccountEntity)relatedEntity);
					break;
				case "Account___":
					this.Account___.Add((AccountEntity)relatedEntity);
					break;
				case "Account__":
					this.Account__.Add((AccountEntity)relatedEntity);
					break;
				case "CallUpload_":
					this.CallUpload_.Add((CallUploadEntity)relatedEntity);
					break;
				case "CallUpload":
					this.CallUpload.Add((CallUploadEntity)relatedEntity);
					break;
				case "ChaperoneSignature_":
					this.ChaperoneSignature_.Add((ChaperoneSignatureEntity)relatedEntity);
					break;
				case "ChaperoneSignature":
					this.ChaperoneSignature.Add((ChaperoneSignatureEntity)relatedEntity);
					break;
				case "CorporateUpload_":
					this.CorporateUpload_.Add((CorporateUploadEntity)relatedEntity);
					break;
				case "CorporateUpload":
					this.CorporateUpload.Add((CorporateUploadEntity)relatedEntity);
					break;
				case "CorporateUpload__":
					this.CorporateUpload__.Add((CorporateUploadEntity)relatedEntity);
					break;
				case "CustomerActivityTypeUpload_":
					this.CustomerActivityTypeUpload_.Add((CustomerActivityTypeUploadEntity)relatedEntity);
					break;
				case "CustomerActivityTypeUpload":
					this.CustomerActivityTypeUpload.Add((CustomerActivityTypeUploadEntity)relatedEntity);
					break;
				case "CustomerPhoneNumberUpdateUpload_":
					this.CustomerPhoneNumberUpdateUpload_.Add((CustomerPhoneNumberUpdateUploadEntity)relatedEntity);
					break;
				case "CustomerPhoneNumberUpdateUpload":
					this.CustomerPhoneNumberUpdateUpload.Add((CustomerPhoneNumberUpdateUploadEntity)relatedEntity);
					break;
				case "EligibilityUpload_":
					this.EligibilityUpload_.Add((EligibilityUploadEntity)relatedEntity);
					break;
				case "EligibilityUpload":
					this.EligibilityUpload.Add((EligibilityUploadEntity)relatedEntity);
					break;
				case "EventCustomerGiftCard_":
					this.EventCustomerGiftCard_.Add((EventCustomerGiftCardEntity)relatedEntity);
					break;
				case "EventCustomerGiftCard":
					this.EventCustomerGiftCard.Add((EventCustomerGiftCardEntity)relatedEntity);
					break;
				case "ExitInterviewSignature":
					this.ExitInterviewSignature.Add((ExitInterviewSignatureEntity)relatedEntity);
					break;
				case "ExportableReportsQueue":
					this.ExportableReportsQueue.Add((ExportableReportsQueueEntity)relatedEntity);
					break;
				case "FluConsentSignature_":
					this.FluConsentSignature_.Add((FluConsentSignatureEntity)relatedEntity);
					break;
				case "FluConsentSignature":
					this.FluConsentSignature.Add((FluConsentSignatureEntity)relatedEntity);
					break;
				case "HealthPlanCriteriaAssignmentUpload":
					this.HealthPlanCriteriaAssignmentUpload.Add((HealthPlanCriteriaAssignmentUploadEntity)relatedEntity);
					break;
				case "HostImage":
					this.HostImage.Add((HostImageEntity)relatedEntity);
					break;
				case "MedicalVendorProfile_":
					this.MedicalVendorProfile_.Add((MedicalVendorProfileEntity)relatedEntity);
					break;
				case "MedicalVendorProfile":
					this.MedicalVendorProfile.Add((MedicalVendorProfileEntity)relatedEntity);
					break;
				case "MedicationUpload_":
					this.MedicationUpload_.Add((MedicationUploadEntity)relatedEntity);
					break;
				case "MedicationUpload":
					this.MedicationUpload.Add((MedicationUploadEntity)relatedEntity);
					break;
				case "MergeCustomerUpload_":
					this.MergeCustomerUpload_.Add((MergeCustomerUploadEntity)relatedEntity);
					break;
				case "MergeCustomerUpload":
					this.MergeCustomerUpload.Add((MergeCustomerUploadEntity)relatedEntity);
					break;
				case "Organization_":
					this.Organization_.Add((OrganizationEntity)relatedEntity);
					break;
				case "Organization":
					this.Organization.Add((OrganizationEntity)relatedEntity);
					break;
				case "OutboundUpload_":
					this.OutboundUpload_.Add((OutboundUploadEntity)relatedEntity);
					break;
				case "OutboundUpload":
					this.OutboundUpload.Add((OutboundUploadEntity)relatedEntity);
					break;
				case "Package":
					this.Package.Add((PackageEntity)relatedEntity);
					break;
				case "ParticipationConsentSignature_":
					this.ParticipationConsentSignature_.Add((ParticipationConsentSignatureEntity)relatedEntity);
					break;
				case "ParticipationConsentSignature":
					this.ParticipationConsentSignature.Add((ParticipationConsentSignatureEntity)relatedEntity);
					break;
				case "PhysicianProfile_":
					this.PhysicianProfile_.Add((PhysicianProfileEntity)relatedEntity);
					break;
				case "PhysicianProfile":
					this.PhysicianProfile.Add((PhysicianProfileEntity)relatedEntity);
					break;
				case "PhysicianRecordRequestSignature":
					this.PhysicianRecordRequestSignature.Add((PhysicianRecordRequestSignatureEntity)relatedEntity);
					break;
				case "RapsUpload_":
					this.RapsUpload_.Add((RapsUploadEntity)relatedEntity);
					break;
				case "RapsUpload":
					this.RapsUpload.Add((RapsUploadEntity)relatedEntity);
					break;
				case "ResultArchiveUpload":
					this.ResultArchiveUpload.Add((ResultArchiveUploadEntity)relatedEntity);
					break;
				case "StaffEventScheduleUpload_":
					this.StaffEventScheduleUpload_.Add((StaffEventScheduleUploadEntity)relatedEntity);
					break;
				case "StaffEventScheduleUpload":
					this.StaffEventScheduleUpload.Add((StaffEventScheduleUploadEntity)relatedEntity);
					break;
				case "SuspectConditionUpload_":
					this.SuspectConditionUpload_.Add((SuspectConditionUploadEntity)relatedEntity);
					break;
				case "SuspectConditionUpload":
					this.SuspectConditionUpload.Add((SuspectConditionUploadEntity)relatedEntity);
					break;
				case "Testimonial":
					this.Testimonial.Add((TestimonialEntity)relatedEntity);
					break;
				case "TestMedia":
					this.TestMedia.Add((TestMediaEntity)relatedEntity);
					break;
				case "WellMedAttestation":
					this.WellMedAttestation.Add((WellMedAttestationEntity)relatedEntity);
					break;

				default:
					break;
			}
		}

		/// <summary> Unsets the internal parameter related to the fieldname passed to the instance relatedEntity. Reverses the actions taken by SetRelatedEntity() </summary>
		/// <param name="relatedEntity">Instance to unset as the related entity of type entityType</param>
		/// <param name="fieldName">Name of field mapped onto the relation which resolves in the instance relatedEntity</param>
		/// <param name="signalRelatedEntityManyToOne">if set to true it will notify the manytoone side, if applicable.</param>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public override void UnsetRelatedEntity(IEntity2 relatedEntity, string fieldName, bool signalRelatedEntityManyToOne)
		{
			switch(fieldName)
			{
				case "Lookup":
					DesetupSyncLookup(false, true);
					break;
				case "OrganizationRoleUser":
					DesetupSyncOrganizationRoleUser(false, true);
					break;
				case "Account______":
					base.PerformRelatedEntityRemoval(this.Account______, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Account_____":
					base.PerformRelatedEntityRemoval(this.Account_____, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Account________":
					base.PerformRelatedEntityRemoval(this.Account________, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Account_______":
					base.PerformRelatedEntityRemoval(this.Account_______, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Account____":
					base.PerformRelatedEntityRemoval(this.Account____, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Account_":
					base.PerformRelatedEntityRemoval(this.Account_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Account":
					base.PerformRelatedEntityRemoval(this.Account, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Account___":
					base.PerformRelatedEntityRemoval(this.Account___, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Account__":
					base.PerformRelatedEntityRemoval(this.Account__, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CallUpload_":
					base.PerformRelatedEntityRemoval(this.CallUpload_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CallUpload":
					base.PerformRelatedEntityRemoval(this.CallUpload, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "ChaperoneSignature_":
					base.PerformRelatedEntityRemoval(this.ChaperoneSignature_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "ChaperoneSignature":
					base.PerformRelatedEntityRemoval(this.ChaperoneSignature, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CorporateUpload_":
					base.PerformRelatedEntityRemoval(this.CorporateUpload_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CorporateUpload":
					base.PerformRelatedEntityRemoval(this.CorporateUpload, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CorporateUpload__":
					base.PerformRelatedEntityRemoval(this.CorporateUpload__, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerActivityTypeUpload_":
					base.PerformRelatedEntityRemoval(this.CustomerActivityTypeUpload_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerActivityTypeUpload":
					base.PerformRelatedEntityRemoval(this.CustomerActivityTypeUpload, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerPhoneNumberUpdateUpload_":
					base.PerformRelatedEntityRemoval(this.CustomerPhoneNumberUpdateUpload_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerPhoneNumberUpdateUpload":
					base.PerformRelatedEntityRemoval(this.CustomerPhoneNumberUpdateUpload, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EligibilityUpload_":
					base.PerformRelatedEntityRemoval(this.EligibilityUpload_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EligibilityUpload":
					base.PerformRelatedEntityRemoval(this.EligibilityUpload, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventCustomerGiftCard_":
					base.PerformRelatedEntityRemoval(this.EventCustomerGiftCard_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventCustomerGiftCard":
					base.PerformRelatedEntityRemoval(this.EventCustomerGiftCard, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "ExitInterviewSignature":
					base.PerformRelatedEntityRemoval(this.ExitInterviewSignature, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "ExportableReportsQueue":
					base.PerformRelatedEntityRemoval(this.ExportableReportsQueue, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "FluConsentSignature_":
					base.PerformRelatedEntityRemoval(this.FluConsentSignature_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "FluConsentSignature":
					base.PerformRelatedEntityRemoval(this.FluConsentSignature, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "HealthPlanCriteriaAssignmentUpload":
					base.PerformRelatedEntityRemoval(this.HealthPlanCriteriaAssignmentUpload, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "HostImage":
					base.PerformRelatedEntityRemoval(this.HostImage, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "MedicalVendorProfile_":
					base.PerformRelatedEntityRemoval(this.MedicalVendorProfile_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "MedicalVendorProfile":
					base.PerformRelatedEntityRemoval(this.MedicalVendorProfile, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "MedicationUpload_":
					base.PerformRelatedEntityRemoval(this.MedicationUpload_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "MedicationUpload":
					base.PerformRelatedEntityRemoval(this.MedicationUpload, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "MergeCustomerUpload_":
					base.PerformRelatedEntityRemoval(this.MergeCustomerUpload_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "MergeCustomerUpload":
					base.PerformRelatedEntityRemoval(this.MergeCustomerUpload, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Organization_":
					base.PerformRelatedEntityRemoval(this.Organization_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Organization":
					base.PerformRelatedEntityRemoval(this.Organization, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "OutboundUpload_":
					base.PerformRelatedEntityRemoval(this.OutboundUpload_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "OutboundUpload":
					base.PerformRelatedEntityRemoval(this.OutboundUpload, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Package":
					base.PerformRelatedEntityRemoval(this.Package, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "ParticipationConsentSignature_":
					base.PerformRelatedEntityRemoval(this.ParticipationConsentSignature_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "ParticipationConsentSignature":
					base.PerformRelatedEntityRemoval(this.ParticipationConsentSignature, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "PhysicianProfile_":
					base.PerformRelatedEntityRemoval(this.PhysicianProfile_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "PhysicianProfile":
					base.PerformRelatedEntityRemoval(this.PhysicianProfile, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "PhysicianRecordRequestSignature":
					base.PerformRelatedEntityRemoval(this.PhysicianRecordRequestSignature, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "RapsUpload_":
					base.PerformRelatedEntityRemoval(this.RapsUpload_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "RapsUpload":
					base.PerformRelatedEntityRemoval(this.RapsUpload, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "ResultArchiveUpload":
					base.PerformRelatedEntityRemoval(this.ResultArchiveUpload, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "StaffEventScheduleUpload_":
					base.PerformRelatedEntityRemoval(this.StaffEventScheduleUpload_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "StaffEventScheduleUpload":
					base.PerformRelatedEntityRemoval(this.StaffEventScheduleUpload, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "SuspectConditionUpload_":
					base.PerformRelatedEntityRemoval(this.SuspectConditionUpload_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "SuspectConditionUpload":
					base.PerformRelatedEntityRemoval(this.SuspectConditionUpload, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Testimonial":
					base.PerformRelatedEntityRemoval(this.Testimonial, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "TestMedia":
					base.PerformRelatedEntityRemoval(this.TestMedia, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "WellMedAttestation":
					base.PerformRelatedEntityRemoval(this.WellMedAttestation, relatedEntity, signalRelatedEntityManyToOne);
					break;

				default:
					break;
			}
		}

		/// <summary> Gets a collection of related entities referenced by this entity which depend on this entity (this entity is the PK side of their FK fields). These entities will have to be persisted after this entity during a recursive save.</summary>
		/// <returns>Collection with 0 or more IEntity2 objects, referenced by this entity</returns>
		public override List<IEntity2> GetDependingRelatedEntities()
		{
			List<IEntity2> toReturn = new List<IEntity2>();

			return toReturn;
		}
		
		/// <summary> Gets a collection of related entities referenced by this entity which this entity depends on (this entity is the FK side of their PK fields). These
		/// entities will have to be persisted before this entity during a recursive save.</summary>
		/// <returns>Collection with 0 or more IEntity2 objects, referenced by this entity</returns>
		public override List<IEntity2> GetDependentRelatedEntities()
		{
			List<IEntity2> toReturn = new List<IEntity2>();
			if(_lookup!=null)
			{
				toReturn.Add(_lookup);
			}
			if(_organizationRoleUser!=null)
			{
				toReturn.Add(_organizationRoleUser);
			}

			return toReturn;
		}
		
		/// <summary>Gets a list of all entity collections stored as member variables in this entity. The contents of the ArrayList is used by the DataAccessAdapter to perform recursive saves. Only 1:n related collections are returned.</summary>
		/// <returns>Collection with 0 or more IEntityCollection2 objects, referenced by this entity</returns>
		public override List<IEntityCollection2> GetMemberEntityCollections()
		{
			List<IEntityCollection2> toReturn = new List<IEntityCollection2>();
			toReturn.Add(this.Account______);
			toReturn.Add(this.Account_____);
			toReturn.Add(this.Account________);
			toReturn.Add(this.Account_______);
			toReturn.Add(this.Account____);
			toReturn.Add(this.Account_);
			toReturn.Add(this.Account);
			toReturn.Add(this.Account___);
			toReturn.Add(this.Account__);
			toReturn.Add(this.CallUpload_);
			toReturn.Add(this.CallUpload);
			toReturn.Add(this.ChaperoneSignature_);
			toReturn.Add(this.ChaperoneSignature);
			toReturn.Add(this.CorporateUpload_);
			toReturn.Add(this.CorporateUpload);
			toReturn.Add(this.CorporateUpload__);
			toReturn.Add(this.CustomerActivityTypeUpload_);
			toReturn.Add(this.CustomerActivityTypeUpload);
			toReturn.Add(this.CustomerPhoneNumberUpdateUpload_);
			toReturn.Add(this.CustomerPhoneNumberUpdateUpload);
			toReturn.Add(this.EligibilityUpload_);
			toReturn.Add(this.EligibilityUpload);
			toReturn.Add(this.EventCustomerGiftCard_);
			toReturn.Add(this.EventCustomerGiftCard);
			toReturn.Add(this.ExitInterviewSignature);
			toReturn.Add(this.ExportableReportsQueue);
			toReturn.Add(this.FluConsentSignature_);
			toReturn.Add(this.FluConsentSignature);
			toReturn.Add(this.HealthPlanCriteriaAssignmentUpload);
			toReturn.Add(this.HostImage);
			toReturn.Add(this.MedicalVendorProfile_);
			toReturn.Add(this.MedicalVendorProfile);
			toReturn.Add(this.MedicationUpload_);
			toReturn.Add(this.MedicationUpload);
			toReturn.Add(this.MergeCustomerUpload_);
			toReturn.Add(this.MergeCustomerUpload);
			toReturn.Add(this.Organization_);
			toReturn.Add(this.Organization);
			toReturn.Add(this.OutboundUpload_);
			toReturn.Add(this.OutboundUpload);
			toReturn.Add(this.Package);
			toReturn.Add(this.ParticipationConsentSignature_);
			toReturn.Add(this.ParticipationConsentSignature);
			toReturn.Add(this.PhysicianProfile_);
			toReturn.Add(this.PhysicianProfile);
			toReturn.Add(this.PhysicianRecordRequestSignature);
			toReturn.Add(this.RapsUpload_);
			toReturn.Add(this.RapsUpload);
			toReturn.Add(this.ResultArchiveUpload);
			toReturn.Add(this.StaffEventScheduleUpload_);
			toReturn.Add(this.StaffEventScheduleUpload);
			toReturn.Add(this.SuspectConditionUpload_);
			toReturn.Add(this.SuspectConditionUpload);
			toReturn.Add(this.Testimonial);
			toReturn.Add(this.TestMedia);
			toReturn.Add(this.WellMedAttestation);

			return toReturn;
		}
		


		/// <summary>ISerializable member. Does custom serialization so event handlers do not get serialized. Serializes members of this entity class and uses the base class' implementation to serialize the rest.</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public override void GetObjectData(SerializationInfo info, StreamingContext context)
		{
			if (SerializationHelper.Optimization != SerializationOptimization.Fast) 
			{
				info.AddValue("_account______", ((_account______!=null) && (_account______.Count>0) && !this.MarkedForDeletion)?_account______:null);
				info.AddValue("_account_____", ((_account_____!=null) && (_account_____.Count>0) && !this.MarkedForDeletion)?_account_____:null);
				info.AddValue("_account________", ((_account________!=null) && (_account________.Count>0) && !this.MarkedForDeletion)?_account________:null);
				info.AddValue("_account_______", ((_account_______!=null) && (_account_______.Count>0) && !this.MarkedForDeletion)?_account_______:null);
				info.AddValue("_account____", ((_account____!=null) && (_account____.Count>0) && !this.MarkedForDeletion)?_account____:null);
				info.AddValue("_account_", ((_account_!=null) && (_account_.Count>0) && !this.MarkedForDeletion)?_account_:null);
				info.AddValue("_account", ((_account!=null) && (_account.Count>0) && !this.MarkedForDeletion)?_account:null);
				info.AddValue("_account___", ((_account___!=null) && (_account___.Count>0) && !this.MarkedForDeletion)?_account___:null);
				info.AddValue("_account__", ((_account__!=null) && (_account__.Count>0) && !this.MarkedForDeletion)?_account__:null);
				info.AddValue("_callUpload_", ((_callUpload_!=null) && (_callUpload_.Count>0) && !this.MarkedForDeletion)?_callUpload_:null);
				info.AddValue("_callUpload", ((_callUpload!=null) && (_callUpload.Count>0) && !this.MarkedForDeletion)?_callUpload:null);
				info.AddValue("_chaperoneSignature_", ((_chaperoneSignature_!=null) && (_chaperoneSignature_.Count>0) && !this.MarkedForDeletion)?_chaperoneSignature_:null);
				info.AddValue("_chaperoneSignature", ((_chaperoneSignature!=null) && (_chaperoneSignature.Count>0) && !this.MarkedForDeletion)?_chaperoneSignature:null);
				info.AddValue("_corporateUpload_", ((_corporateUpload_!=null) && (_corporateUpload_.Count>0) && !this.MarkedForDeletion)?_corporateUpload_:null);
				info.AddValue("_corporateUpload", ((_corporateUpload!=null) && (_corporateUpload.Count>0) && !this.MarkedForDeletion)?_corporateUpload:null);
				info.AddValue("_corporateUpload__", ((_corporateUpload__!=null) && (_corporateUpload__.Count>0) && !this.MarkedForDeletion)?_corporateUpload__:null);
				info.AddValue("_customerActivityTypeUpload_", ((_customerActivityTypeUpload_!=null) && (_customerActivityTypeUpload_.Count>0) && !this.MarkedForDeletion)?_customerActivityTypeUpload_:null);
				info.AddValue("_customerActivityTypeUpload", ((_customerActivityTypeUpload!=null) && (_customerActivityTypeUpload.Count>0) && !this.MarkedForDeletion)?_customerActivityTypeUpload:null);
				info.AddValue("_customerPhoneNumberUpdateUpload_", ((_customerPhoneNumberUpdateUpload_!=null) && (_customerPhoneNumberUpdateUpload_.Count>0) && !this.MarkedForDeletion)?_customerPhoneNumberUpdateUpload_:null);
				info.AddValue("_customerPhoneNumberUpdateUpload", ((_customerPhoneNumberUpdateUpload!=null) && (_customerPhoneNumberUpdateUpload.Count>0) && !this.MarkedForDeletion)?_customerPhoneNumberUpdateUpload:null);
				info.AddValue("_eligibilityUpload_", ((_eligibilityUpload_!=null) && (_eligibilityUpload_.Count>0) && !this.MarkedForDeletion)?_eligibilityUpload_:null);
				info.AddValue("_eligibilityUpload", ((_eligibilityUpload!=null) && (_eligibilityUpload.Count>0) && !this.MarkedForDeletion)?_eligibilityUpload:null);
				info.AddValue("_eventCustomerGiftCard_", ((_eventCustomerGiftCard_!=null) && (_eventCustomerGiftCard_.Count>0) && !this.MarkedForDeletion)?_eventCustomerGiftCard_:null);
				info.AddValue("_eventCustomerGiftCard", ((_eventCustomerGiftCard!=null) && (_eventCustomerGiftCard.Count>0) && !this.MarkedForDeletion)?_eventCustomerGiftCard:null);
				info.AddValue("_exitInterviewSignature", ((_exitInterviewSignature!=null) && (_exitInterviewSignature.Count>0) && !this.MarkedForDeletion)?_exitInterviewSignature:null);
				info.AddValue("_exportableReportsQueue", ((_exportableReportsQueue!=null) && (_exportableReportsQueue.Count>0) && !this.MarkedForDeletion)?_exportableReportsQueue:null);
				info.AddValue("_fluConsentSignature_", ((_fluConsentSignature_!=null) && (_fluConsentSignature_.Count>0) && !this.MarkedForDeletion)?_fluConsentSignature_:null);
				info.AddValue("_fluConsentSignature", ((_fluConsentSignature!=null) && (_fluConsentSignature.Count>0) && !this.MarkedForDeletion)?_fluConsentSignature:null);
				info.AddValue("_healthPlanCriteriaAssignmentUpload", ((_healthPlanCriteriaAssignmentUpload!=null) && (_healthPlanCriteriaAssignmentUpload.Count>0) && !this.MarkedForDeletion)?_healthPlanCriteriaAssignmentUpload:null);
				info.AddValue("_hostImage", ((_hostImage!=null) && (_hostImage.Count>0) && !this.MarkedForDeletion)?_hostImage:null);
				info.AddValue("_medicalVendorProfile_", ((_medicalVendorProfile_!=null) && (_medicalVendorProfile_.Count>0) && !this.MarkedForDeletion)?_medicalVendorProfile_:null);
				info.AddValue("_medicalVendorProfile", ((_medicalVendorProfile!=null) && (_medicalVendorProfile.Count>0) && !this.MarkedForDeletion)?_medicalVendorProfile:null);
				info.AddValue("_medicationUpload_", ((_medicationUpload_!=null) && (_medicationUpload_.Count>0) && !this.MarkedForDeletion)?_medicationUpload_:null);
				info.AddValue("_medicationUpload", ((_medicationUpload!=null) && (_medicationUpload.Count>0) && !this.MarkedForDeletion)?_medicationUpload:null);
				info.AddValue("_mergeCustomerUpload_", ((_mergeCustomerUpload_!=null) && (_mergeCustomerUpload_.Count>0) && !this.MarkedForDeletion)?_mergeCustomerUpload_:null);
				info.AddValue("_mergeCustomerUpload", ((_mergeCustomerUpload!=null) && (_mergeCustomerUpload.Count>0) && !this.MarkedForDeletion)?_mergeCustomerUpload:null);
				info.AddValue("_organization_", ((_organization_!=null) && (_organization_.Count>0) && !this.MarkedForDeletion)?_organization_:null);
				info.AddValue("_organization", ((_organization!=null) && (_organization.Count>0) && !this.MarkedForDeletion)?_organization:null);
				info.AddValue("_outboundUpload_", ((_outboundUpload_!=null) && (_outboundUpload_.Count>0) && !this.MarkedForDeletion)?_outboundUpload_:null);
				info.AddValue("_outboundUpload", ((_outboundUpload!=null) && (_outboundUpload.Count>0) && !this.MarkedForDeletion)?_outboundUpload:null);
				info.AddValue("_package", ((_package!=null) && (_package.Count>0) && !this.MarkedForDeletion)?_package:null);
				info.AddValue("_participationConsentSignature_", ((_participationConsentSignature_!=null) && (_participationConsentSignature_.Count>0) && !this.MarkedForDeletion)?_participationConsentSignature_:null);
				info.AddValue("_participationConsentSignature", ((_participationConsentSignature!=null) && (_participationConsentSignature.Count>0) && !this.MarkedForDeletion)?_participationConsentSignature:null);
				info.AddValue("_physicianProfile_", ((_physicianProfile_!=null) && (_physicianProfile_.Count>0) && !this.MarkedForDeletion)?_physicianProfile_:null);
				info.AddValue("_physicianProfile", ((_physicianProfile!=null) && (_physicianProfile.Count>0) && !this.MarkedForDeletion)?_physicianProfile:null);
				info.AddValue("_physicianRecordRequestSignature", ((_physicianRecordRequestSignature!=null) && (_physicianRecordRequestSignature.Count>0) && !this.MarkedForDeletion)?_physicianRecordRequestSignature:null);
				info.AddValue("_rapsUpload_", ((_rapsUpload_!=null) && (_rapsUpload_.Count>0) && !this.MarkedForDeletion)?_rapsUpload_:null);
				info.AddValue("_rapsUpload", ((_rapsUpload!=null) && (_rapsUpload.Count>0) && !this.MarkedForDeletion)?_rapsUpload:null);
				info.AddValue("_resultArchiveUpload", ((_resultArchiveUpload!=null) && (_resultArchiveUpload.Count>0) && !this.MarkedForDeletion)?_resultArchiveUpload:null);
				info.AddValue("_staffEventScheduleUpload_", ((_staffEventScheduleUpload_!=null) && (_staffEventScheduleUpload_.Count>0) && !this.MarkedForDeletion)?_staffEventScheduleUpload_:null);
				info.AddValue("_staffEventScheduleUpload", ((_staffEventScheduleUpload!=null) && (_staffEventScheduleUpload.Count>0) && !this.MarkedForDeletion)?_staffEventScheduleUpload:null);
				info.AddValue("_suspectConditionUpload_", ((_suspectConditionUpload_!=null) && (_suspectConditionUpload_.Count>0) && !this.MarkedForDeletion)?_suspectConditionUpload_:null);
				info.AddValue("_suspectConditionUpload", ((_suspectConditionUpload!=null) && (_suspectConditionUpload.Count>0) && !this.MarkedForDeletion)?_suspectConditionUpload:null);
				info.AddValue("_testimonial", ((_testimonial!=null) && (_testimonial.Count>0) && !this.MarkedForDeletion)?_testimonial:null);
				info.AddValue("_testMedia", ((_testMedia!=null) && (_testMedia.Count>0) && !this.MarkedForDeletion)?_testMedia:null);
				info.AddValue("_wellMedAttestation", ((_wellMedAttestation!=null) && (_wellMedAttestation.Count>0) && !this.MarkedForDeletion)?_wellMedAttestation:null);
				info.AddValue("_accountCollectionViaEligibilityUpload_", ((_accountCollectionViaEligibilityUpload_!=null) && (_accountCollectionViaEligibilityUpload_.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaEligibilityUpload_:null);
				info.AddValue("_accountCollectionViaCorporateUpload", ((_accountCollectionViaCorporateUpload!=null) && (_accountCollectionViaCorporateUpload.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaCorporateUpload:null);
				info.AddValue("_accountCollectionViaCorporateUpload__", ((_accountCollectionViaCorporateUpload__!=null) && (_accountCollectionViaCorporateUpload__.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaCorporateUpload__:null);
				info.AddValue("_accountCollectionViaCorporateUpload_", ((_accountCollectionViaCorporateUpload_!=null) && (_accountCollectionViaCorporateUpload_.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaCorporateUpload_:null);
				info.AddValue("_accountCollectionViaEligibilityUpload", ((_accountCollectionViaEligibilityUpload!=null) && (_accountCollectionViaEligibilityUpload.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaEligibilityUpload:null);
				info.AddValue("_addressCollectionViaOrganization_", ((_addressCollectionViaOrganization_!=null) && (_addressCollectionViaOrganization_.Count>0) && !this.MarkedForDeletion)?_addressCollectionViaOrganization_:null);
				info.AddValue("_addressCollectionViaOrganization", ((_addressCollectionViaOrganization!=null) && (_addressCollectionViaOrganization.Count>0) && !this.MarkedForDeletion)?_addressCollectionViaOrganization:null);
				info.AddValue("_checkListQuestionCollectionViaExitInterviewSignature", ((_checkListQuestionCollectionViaExitInterviewSignature!=null) && (_checkListQuestionCollectionViaExitInterviewSignature.Count>0) && !this.MarkedForDeletion)?_checkListQuestionCollectionViaExitInterviewSignature:null);
				info.AddValue("_checkListTemplateCollectionViaAccount_________________", ((_checkListTemplateCollectionViaAccount_________________!=null) && (_checkListTemplateCollectionViaAccount_________________.Count>0) && !this.MarkedForDeletion)?_checkListTemplateCollectionViaAccount_________________:null);
				info.AddValue("_checkListTemplateCollectionViaAccount_____", ((_checkListTemplateCollectionViaAccount_____!=null) && (_checkListTemplateCollectionViaAccount_____.Count>0) && !this.MarkedForDeletion)?_checkListTemplateCollectionViaAccount_____:null);
				info.AddValue("_checkListTemplateCollectionViaAccount____", ((_checkListTemplateCollectionViaAccount____!=null) && (_checkListTemplateCollectionViaAccount____.Count>0) && !this.MarkedForDeletion)?_checkListTemplateCollectionViaAccount____:null);
				info.AddValue("_checkListTemplateCollectionViaAccount_____________", ((_checkListTemplateCollectionViaAccount_____________!=null) && (_checkListTemplateCollectionViaAccount_____________.Count>0) && !this.MarkedForDeletion)?_checkListTemplateCollectionViaAccount_____________:null);
				info.AddValue("_checkListTemplateCollectionViaAccount______", ((_checkListTemplateCollectionViaAccount______!=null) && (_checkListTemplateCollectionViaAccount______.Count>0) && !this.MarkedForDeletion)?_checkListTemplateCollectionViaAccount______:null);
				info.AddValue("_checkListTemplateCollectionViaAccount_______", ((_checkListTemplateCollectionViaAccount_______!=null) && (_checkListTemplateCollectionViaAccount_______.Count>0) && !this.MarkedForDeletion)?_checkListTemplateCollectionViaAccount_______:null);
				info.AddValue("_checkListTemplateCollectionViaAccount__________", ((_checkListTemplateCollectionViaAccount__________!=null) && (_checkListTemplateCollectionViaAccount__________.Count>0) && !this.MarkedForDeletion)?_checkListTemplateCollectionViaAccount__________:null);
				info.AddValue("_checkListTemplateCollectionViaAccount_________", ((_checkListTemplateCollectionViaAccount_________!=null) && (_checkListTemplateCollectionViaAccount_________.Count>0) && !this.MarkedForDeletion)?_checkListTemplateCollectionViaAccount_________:null);
				info.AddValue("_checkListTemplateCollectionViaAccount____________", ((_checkListTemplateCollectionViaAccount____________!=null) && (_checkListTemplateCollectionViaAccount____________.Count>0) && !this.MarkedForDeletion)?_checkListTemplateCollectionViaAccount____________:null);
				info.AddValue("_checkListTemplateCollectionViaAccount___________", ((_checkListTemplateCollectionViaAccount___________!=null) && (_checkListTemplateCollectionViaAccount___________.Count>0) && !this.MarkedForDeletion)?_checkListTemplateCollectionViaAccount___________:null);
				info.AddValue("_checkListTemplateCollectionViaAccount_______________", ((_checkListTemplateCollectionViaAccount_______________!=null) && (_checkListTemplateCollectionViaAccount_______________.Count>0) && !this.MarkedForDeletion)?_checkListTemplateCollectionViaAccount_______________:null);
				info.AddValue("_checkListTemplateCollectionViaAccount________________", ((_checkListTemplateCollectionViaAccount________________!=null) && (_checkListTemplateCollectionViaAccount________________.Count>0) && !this.MarkedForDeletion)?_checkListTemplateCollectionViaAccount________________:null);
				info.AddValue("_checkListTemplateCollectionViaAccount________", ((_checkListTemplateCollectionViaAccount________!=null) && (_checkListTemplateCollectionViaAccount________.Count>0) && !this.MarkedForDeletion)?_checkListTemplateCollectionViaAccount________:null);
				info.AddValue("_checkListTemplateCollectionViaAccount______________", ((_checkListTemplateCollectionViaAccount______________!=null) && (_checkListTemplateCollectionViaAccount______________.Count>0) && !this.MarkedForDeletion)?_checkListTemplateCollectionViaAccount______________:null);
				info.AddValue("_checkListTemplateCollectionViaAccount_", ((_checkListTemplateCollectionViaAccount_!=null) && (_checkListTemplateCollectionViaAccount_.Count>0) && !this.MarkedForDeletion)?_checkListTemplateCollectionViaAccount_:null);
				info.AddValue("_checkListTemplateCollectionViaAccount___", ((_checkListTemplateCollectionViaAccount___!=null) && (_checkListTemplateCollectionViaAccount___.Count>0) && !this.MarkedForDeletion)?_checkListTemplateCollectionViaAccount___:null);
				info.AddValue("_checkListTemplateCollectionViaAccount__", ((_checkListTemplateCollectionViaAccount__!=null) && (_checkListTemplateCollectionViaAccount__.Count>0) && !this.MarkedForDeletion)?_checkListTemplateCollectionViaAccount__:null);
				info.AddValue("_checkListTemplateCollectionViaAccount", ((_checkListTemplateCollectionViaAccount!=null) && (_checkListTemplateCollectionViaAccount.Count>0) && !this.MarkedForDeletion)?_checkListTemplateCollectionViaAccount:null);
				info.AddValue("_contractCollectionViaMedicalVendorProfile_", ((_contractCollectionViaMedicalVendorProfile_!=null) && (_contractCollectionViaMedicalVendorProfile_.Count>0) && !this.MarkedForDeletion)?_contractCollectionViaMedicalVendorProfile_:null);
				info.AddValue("_contractCollectionViaMedicalVendorProfile", ((_contractCollectionViaMedicalVendorProfile!=null) && (_contractCollectionViaMedicalVendorProfile.Count>0) && !this.MarkedForDeletion)?_contractCollectionViaMedicalVendorProfile:null);
				info.AddValue("_customerEventScreeningTestsCollectionViaTestMedia", ((_customerEventScreeningTestsCollectionViaTestMedia!=null) && (_customerEventScreeningTestsCollectionViaTestMedia.Count>0) && !this.MarkedForDeletion)?_customerEventScreeningTestsCollectionViaTestMedia:null);
				info.AddValue("_customerProfileCollectionViaTestimonial", ((_customerProfileCollectionViaTestimonial!=null) && (_customerProfileCollectionViaTestimonial.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaTestimonial:null);
				info.AddValue("_emailTemplateCollectionViaAccount_________________", ((_emailTemplateCollectionViaAccount_________________!=null) && (_emailTemplateCollectionViaAccount_________________.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount_________________:null);
				info.AddValue("_emailTemplateCollectionViaAccount__________________", ((_emailTemplateCollectionViaAccount__________________!=null) && (_emailTemplateCollectionViaAccount__________________.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount__________________:null);
				info.AddValue("_emailTemplateCollectionViaAccount___________________", ((_emailTemplateCollectionViaAccount___________________!=null) && (_emailTemplateCollectionViaAccount___________________.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount___________________:null);
				info.AddValue("_emailTemplateCollectionViaAccount_____________________________", ((_emailTemplateCollectionViaAccount_____________________________!=null) && (_emailTemplateCollectionViaAccount_____________________________.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount_____________________________:null);
				info.AddValue("_emailTemplateCollectionViaAccount___________________________________", ((_emailTemplateCollectionViaAccount___________________________________!=null) && (_emailTemplateCollectionViaAccount___________________________________.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount___________________________________:null);
				info.AddValue("_emailTemplateCollectionViaAccount________________", ((_emailTemplateCollectionViaAccount________________!=null) && (_emailTemplateCollectionViaAccount________________.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount________________:null);
				info.AddValue("_emailTemplateCollectionViaAccount___________________________", ((_emailTemplateCollectionViaAccount___________________________!=null) && (_emailTemplateCollectionViaAccount___________________________.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount___________________________:null);
				info.AddValue("_emailTemplateCollectionViaAccount__________________________", ((_emailTemplateCollectionViaAccount__________________________!=null) && (_emailTemplateCollectionViaAccount__________________________.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount__________________________:null);
				info.AddValue("_emailTemplateCollectionViaAccount_________________________", ((_emailTemplateCollectionViaAccount_________________________!=null) && (_emailTemplateCollectionViaAccount_________________________.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount_________________________:null);
				info.AddValue("_emailTemplateCollectionViaAccount____________________________", ((_emailTemplateCollectionViaAccount____________________________!=null) && (_emailTemplateCollectionViaAccount____________________________.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount____________________________:null);
				info.AddValue("_emailTemplateCollectionViaAccount______________________________", ((_emailTemplateCollectionViaAccount______________________________!=null) && (_emailTemplateCollectionViaAccount______________________________.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount______________________________:null);
				info.AddValue("_emailTemplateCollectionViaAccount_______________________________", ((_emailTemplateCollectionViaAccount_______________________________!=null) && (_emailTemplateCollectionViaAccount_______________________________.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount_______________________________:null);
				info.AddValue("_emailTemplateCollectionViaAccount________________________________", ((_emailTemplateCollectionViaAccount________________________________!=null) && (_emailTemplateCollectionViaAccount________________________________.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount________________________________:null);
				info.AddValue("_emailTemplateCollectionViaAccount_________________________________", ((_emailTemplateCollectionViaAccount_________________________________!=null) && (_emailTemplateCollectionViaAccount_________________________________.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount_________________________________:null);
				info.AddValue("_emailTemplateCollectionViaAccount__________________________________", ((_emailTemplateCollectionViaAccount__________________________________!=null) && (_emailTemplateCollectionViaAccount__________________________________.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount__________________________________:null);
				info.AddValue("_emailTemplateCollectionViaAccount____________________", ((_emailTemplateCollectionViaAccount____________________!=null) && (_emailTemplateCollectionViaAccount____________________.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount____________________:null);
				info.AddValue("_emailTemplateCollectionViaAccount_____________________", ((_emailTemplateCollectionViaAccount_____________________!=null) && (_emailTemplateCollectionViaAccount_____________________.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount_____________________:null);
				info.AddValue("_emailTemplateCollectionViaAccount________________________", ((_emailTemplateCollectionViaAccount________________________!=null) && (_emailTemplateCollectionViaAccount________________________.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount________________________:null);
				info.AddValue("_emailTemplateCollectionViaAccount_______________________", ((_emailTemplateCollectionViaAccount_______________________!=null) && (_emailTemplateCollectionViaAccount_______________________.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount_______________________:null);
				info.AddValue("_emailTemplateCollectionViaAccount______________________", ((_emailTemplateCollectionViaAccount______________________!=null) && (_emailTemplateCollectionViaAccount______________________.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount______________________:null);
				info.AddValue("_emailTemplateCollectionViaAccount__", ((_emailTemplateCollectionViaAccount__!=null) && (_emailTemplateCollectionViaAccount__.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount__:null);
				info.AddValue("_emailTemplateCollectionViaAccount___", ((_emailTemplateCollectionViaAccount___!=null) && (_emailTemplateCollectionViaAccount___.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount___:null);
				info.AddValue("_emailTemplateCollectionViaAccount____________", ((_emailTemplateCollectionViaAccount____________!=null) && (_emailTemplateCollectionViaAccount____________.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount____________:null);
				info.AddValue("_emailTemplateCollectionViaAccount____", ((_emailTemplateCollectionViaAccount____!=null) && (_emailTemplateCollectionViaAccount____.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount____:null);
				info.AddValue("_emailTemplateCollectionViaAccount________", ((_emailTemplateCollectionViaAccount________!=null) && (_emailTemplateCollectionViaAccount________.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount________:null);
				info.AddValue("_emailTemplateCollectionViaAccount_______", ((_emailTemplateCollectionViaAccount_______!=null) && (_emailTemplateCollectionViaAccount_______.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount_______:null);
				info.AddValue("_emailTemplateCollectionViaAccount___________", ((_emailTemplateCollectionViaAccount___________!=null) && (_emailTemplateCollectionViaAccount___________.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount___________:null);
				info.AddValue("_emailTemplateCollectionViaAccount__________", ((_emailTemplateCollectionViaAccount__________!=null) && (_emailTemplateCollectionViaAccount__________.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount__________:null);
				info.AddValue("_emailTemplateCollectionViaAccount_", ((_emailTemplateCollectionViaAccount_!=null) && (_emailTemplateCollectionViaAccount_.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount_:null);
				info.AddValue("_emailTemplateCollectionViaAccount_____", ((_emailTemplateCollectionViaAccount_____!=null) && (_emailTemplateCollectionViaAccount_____.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount_____:null);
				info.AddValue("_emailTemplateCollectionViaAccount", ((_emailTemplateCollectionViaAccount!=null) && (_emailTemplateCollectionViaAccount.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount:null);
				info.AddValue("_emailTemplateCollectionViaAccount_________", ((_emailTemplateCollectionViaAccount_________!=null) && (_emailTemplateCollectionViaAccount_________.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount_________:null);
				info.AddValue("_emailTemplateCollectionViaAccount______", ((_emailTemplateCollectionViaAccount______!=null) && (_emailTemplateCollectionViaAccount______.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount______:null);
				info.AddValue("_emailTemplateCollectionViaAccount______________", ((_emailTemplateCollectionViaAccount______________!=null) && (_emailTemplateCollectionViaAccount______________.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount______________:null);
				info.AddValue("_emailTemplateCollectionViaAccount_______________", ((_emailTemplateCollectionViaAccount_______________!=null) && (_emailTemplateCollectionViaAccount_______________.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount_______________:null);
				info.AddValue("_emailTemplateCollectionViaAccount_____________", ((_emailTemplateCollectionViaAccount_____________!=null) && (_emailTemplateCollectionViaAccount_____________.Count>0) && !this.MarkedForDeletion)?_emailTemplateCollectionViaAccount_____________:null);
				info.AddValue("_eventCustomerResultCollectionViaWellMedAttestation", ((_eventCustomerResultCollectionViaWellMedAttestation!=null) && (_eventCustomerResultCollectionViaWellMedAttestation.Count>0) && !this.MarkedForDeletion)?_eventCustomerResultCollectionViaWellMedAttestation:null);
				info.AddValue("_eventCustomersCollectionViaChaperoneSignature", ((_eventCustomersCollectionViaChaperoneSignature!=null) && (_eventCustomersCollectionViaChaperoneSignature.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaChaperoneSignature:null);
				info.AddValue("_eventCustomersCollectionViaFluConsentSignature", ((_eventCustomersCollectionViaFluConsentSignature!=null) && (_eventCustomersCollectionViaFluConsentSignature.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaFluConsentSignature:null);
				info.AddValue("_eventCustomersCollectionViaParticipationConsentSignature", ((_eventCustomersCollectionViaParticipationConsentSignature!=null) && (_eventCustomersCollectionViaParticipationConsentSignature.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaParticipationConsentSignature:null);
				info.AddValue("_eventCustomersCollectionViaFluConsentSignature_", ((_eventCustomersCollectionViaFluConsentSignature_!=null) && (_eventCustomersCollectionViaFluConsentSignature_.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaFluConsentSignature_:null);
				info.AddValue("_eventCustomersCollectionViaParticipationConsentSignature_", ((_eventCustomersCollectionViaParticipationConsentSignature_!=null) && (_eventCustomersCollectionViaParticipationConsentSignature_.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaParticipationConsentSignature_:null);
				info.AddValue("_eventCustomersCollectionViaExitInterviewSignature", ((_eventCustomersCollectionViaExitInterviewSignature!=null) && (_eventCustomersCollectionViaExitInterviewSignature.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaExitInterviewSignature:null);
				info.AddValue("_eventCustomersCollectionViaEventCustomerGiftCard_", ((_eventCustomersCollectionViaEventCustomerGiftCard_!=null) && (_eventCustomersCollectionViaEventCustomerGiftCard_.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaEventCustomerGiftCard_:null);
				info.AddValue("_eventCustomersCollectionViaChaperoneSignature_", ((_eventCustomersCollectionViaChaperoneSignature_!=null) && (_eventCustomersCollectionViaChaperoneSignature_.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaChaperoneSignature_:null);
				info.AddValue("_eventCustomersCollectionViaPhysicianRecordRequestSignature", ((_eventCustomersCollectionViaPhysicianRecordRequestSignature!=null) && (_eventCustomersCollectionViaPhysicianRecordRequestSignature.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaPhysicianRecordRequestSignature:null);
				info.AddValue("_eventCustomersCollectionViaEventCustomerGiftCard", ((_eventCustomersCollectionViaEventCustomerGiftCard!=null) && (_eventCustomersCollectionViaEventCustomerGiftCard.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaEventCustomerGiftCard:null);
				info.AddValue("_eventsCollectionViaResultArchiveUpload", ((_eventsCollectionViaResultArchiveUpload!=null) && (_eventsCollectionViaResultArchiveUpload.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaResultArchiveUpload:null);
				info.AddValue("_exportableReportsCollectionViaExportableReportsQueue", ((_exportableReportsCollectionViaExportableReportsQueue!=null) && (_exportableReportsCollectionViaExportableReportsQueue.Count>0) && !this.MarkedForDeletion)?_exportableReportsCollectionViaExportableReportsQueue:null);
				info.AddValue("_fluConsentTemplateCollectionViaAccount______", ((_fluConsentTemplateCollectionViaAccount______!=null) && (_fluConsentTemplateCollectionViaAccount______.Count>0) && !this.MarkedForDeletion)?_fluConsentTemplateCollectionViaAccount______:null);
				info.AddValue("_fluConsentTemplateCollectionViaAccount", ((_fluConsentTemplateCollectionViaAccount!=null) && (_fluConsentTemplateCollectionViaAccount.Count>0) && !this.MarkedForDeletion)?_fluConsentTemplateCollectionViaAccount:null);
				info.AddValue("_fluConsentTemplateCollectionViaAccount________", ((_fluConsentTemplateCollectionViaAccount________!=null) && (_fluConsentTemplateCollectionViaAccount________.Count>0) && !this.MarkedForDeletion)?_fluConsentTemplateCollectionViaAccount________:null);
				info.AddValue("_fluConsentTemplateCollectionViaAccount_______", ((_fluConsentTemplateCollectionViaAccount_______!=null) && (_fluConsentTemplateCollectionViaAccount_______.Count>0) && !this.MarkedForDeletion)?_fluConsentTemplateCollectionViaAccount_______:null);
				info.AddValue("_fluConsentTemplateCollectionViaAccount___", ((_fluConsentTemplateCollectionViaAccount___!=null) && (_fluConsentTemplateCollectionViaAccount___.Count>0) && !this.MarkedForDeletion)?_fluConsentTemplateCollectionViaAccount___:null);
				info.AddValue("_fluConsentTemplateCollectionViaAccount_____", ((_fluConsentTemplateCollectionViaAccount_____!=null) && (_fluConsentTemplateCollectionViaAccount_____.Count>0) && !this.MarkedForDeletion)?_fluConsentTemplateCollectionViaAccount_____:null);
				info.AddValue("_fluConsentTemplateCollectionViaAccount__", ((_fluConsentTemplateCollectionViaAccount__!=null) && (_fluConsentTemplateCollectionViaAccount__.Count>0) && !this.MarkedForDeletion)?_fluConsentTemplateCollectionViaAccount__:null);
				info.AddValue("_fluConsentTemplateCollectionViaAccount_", ((_fluConsentTemplateCollectionViaAccount_!=null) && (_fluConsentTemplateCollectionViaAccount_.Count>0) && !this.MarkedForDeletion)?_fluConsentTemplateCollectionViaAccount_:null);
				info.AddValue("_fluConsentTemplateCollectionViaAccount____", ((_fluConsentTemplateCollectionViaAccount____!=null) && (_fluConsentTemplateCollectionViaAccount____.Count>0) && !this.MarkedForDeletion)?_fluConsentTemplateCollectionViaAccount____:null);
				info.AddValue("_hafTemplateCollectionViaAccount________", ((_hafTemplateCollectionViaAccount________!=null) && (_hafTemplateCollectionViaAccount________.Count>0) && !this.MarkedForDeletion)?_hafTemplateCollectionViaAccount________:null);
				info.AddValue("_hafTemplateCollectionViaAccount______", ((_hafTemplateCollectionViaAccount______!=null) && (_hafTemplateCollectionViaAccount______.Count>0) && !this.MarkedForDeletion)?_hafTemplateCollectionViaAccount______:null);
				info.AddValue("_hafTemplateCollectionViaAccount__", ((_hafTemplateCollectionViaAccount__!=null) && (_hafTemplateCollectionViaAccount__.Count>0) && !this.MarkedForDeletion)?_hafTemplateCollectionViaAccount__:null);
				info.AddValue("_hafTemplateCollectionViaAccount____", ((_hafTemplateCollectionViaAccount____!=null) && (_hafTemplateCollectionViaAccount____.Count>0) && !this.MarkedForDeletion)?_hafTemplateCollectionViaAccount____:null);
				info.AddValue("_hafTemplateCollectionViaPackage", ((_hafTemplateCollectionViaPackage!=null) && (_hafTemplateCollectionViaPackage.Count>0) && !this.MarkedForDeletion)?_hafTemplateCollectionViaPackage:null);
				info.AddValue("_hafTemplateCollectionViaAccount_", ((_hafTemplateCollectionViaAccount_!=null) && (_hafTemplateCollectionViaAccount_.Count>0) && !this.MarkedForDeletion)?_hafTemplateCollectionViaAccount_:null);
				info.AddValue("_hafTemplateCollectionViaAccount_______", ((_hafTemplateCollectionViaAccount_______!=null) && (_hafTemplateCollectionViaAccount_______.Count>0) && !this.MarkedForDeletion)?_hafTemplateCollectionViaAccount_______:null);
				info.AddValue("_hafTemplateCollectionViaAccount_____", ((_hafTemplateCollectionViaAccount_____!=null) && (_hafTemplateCollectionViaAccount_____.Count>0) && !this.MarkedForDeletion)?_hafTemplateCollectionViaAccount_____:null);
				info.AddValue("_hafTemplateCollectionViaAccount", ((_hafTemplateCollectionViaAccount!=null) && (_hafTemplateCollectionViaAccount.Count>0) && !this.MarkedForDeletion)?_hafTemplateCollectionViaAccount:null);
				info.AddValue("_hafTemplateCollectionViaAccount___", ((_hafTemplateCollectionViaAccount___!=null) && (_hafTemplateCollectionViaAccount___.Count>0) && !this.MarkedForDeletion)?_hafTemplateCollectionViaAccount___:null);
				info.AddValue("_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload", ((_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload!=null) && (_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload.Count>0) && !this.MarkedForDeletion)?_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload:null);
				info.AddValue("_lookupCollectionViaStaffEventScheduleUpload_", ((_lookupCollectionViaStaffEventScheduleUpload_!=null) && (_lookupCollectionViaStaffEventScheduleUpload_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaStaffEventScheduleUpload_:null);
				info.AddValue("_lookupCollectionViaRapsUpload", ((_lookupCollectionViaRapsUpload!=null) && (_lookupCollectionViaRapsUpload.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaRapsUpload:null);
				info.AddValue("_lookupCollectionViaCustomerPhoneNumberUpdateUpload", ((_lookupCollectionViaCustomerPhoneNumberUpdateUpload!=null) && (_lookupCollectionViaCustomerPhoneNumberUpdateUpload.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCustomerPhoneNumberUpdateUpload:null);
				info.AddValue("_lookupCollectionViaEligibilityUpload", ((_lookupCollectionViaEligibilityUpload!=null) && (_lookupCollectionViaEligibilityUpload.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEligibilityUpload:null);
				info.AddValue("_lookupCollectionViaCustomerPhoneNumberUpdateUpload_", ((_lookupCollectionViaCustomerPhoneNumberUpdateUpload_!=null) && (_lookupCollectionViaCustomerPhoneNumberUpdateUpload_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCustomerPhoneNumberUpdateUpload_:null);
				info.AddValue("_lookupCollectionViaEligibilityUpload_", ((_lookupCollectionViaEligibilityUpload_!=null) && (_lookupCollectionViaEligibilityUpload_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEligibilityUpload_:null);
				info.AddValue("_lookupCollectionViaStaffEventScheduleUpload", ((_lookupCollectionViaStaffEventScheduleUpload!=null) && (_lookupCollectionViaStaffEventScheduleUpload.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaStaffEventScheduleUpload:null);
				info.AddValue("_lookupCollectionViaRapsUpload_", ((_lookupCollectionViaRapsUpload_!=null) && (_lookupCollectionViaRapsUpload_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaRapsUpload_:null);
				info.AddValue("_lookupCollectionViaMergeCustomerUpload_", ((_lookupCollectionViaMergeCustomerUpload_!=null) && (_lookupCollectionViaMergeCustomerUpload_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaMergeCustomerUpload_:null);
				info.AddValue("_lookupCollectionViaMergeCustomerUpload", ((_lookupCollectionViaMergeCustomerUpload!=null) && (_lookupCollectionViaMergeCustomerUpload.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaMergeCustomerUpload:null);
				info.AddValue("_lookupCollectionViaMedicationUpload_", ((_lookupCollectionViaMedicationUpload_!=null) && (_lookupCollectionViaMedicationUpload_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaMedicationUpload_:null);
				info.AddValue("_lookupCollectionViaOutboundUpload__", ((_lookupCollectionViaOutboundUpload__!=null) && (_lookupCollectionViaOutboundUpload__.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaOutboundUpload__:null);
				info.AddValue("_lookupCollectionViaOutboundUpload", ((_lookupCollectionViaOutboundUpload!=null) && (_lookupCollectionViaOutboundUpload.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaOutboundUpload:null);
				info.AddValue("_lookupCollectionViaOutboundUpload___", ((_lookupCollectionViaOutboundUpload___!=null) && (_lookupCollectionViaOutboundUpload___.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaOutboundUpload___:null);
				info.AddValue("_lookupCollectionViaPackage", ((_lookupCollectionViaPackage!=null) && (_lookupCollectionViaPackage.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaPackage:null);
				info.AddValue("_lookupCollectionViaSuspectConditionUpload_", ((_lookupCollectionViaSuspectConditionUpload_!=null) && (_lookupCollectionViaSuspectConditionUpload_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaSuspectConditionUpload_:null);
				info.AddValue("_lookupCollectionViaExportableReportsQueue", ((_lookupCollectionViaExportableReportsQueue!=null) && (_lookupCollectionViaExportableReportsQueue.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaExportableReportsQueue:null);
				info.AddValue("_lookupCollectionViaSuspectConditionUpload", ((_lookupCollectionViaSuspectConditionUpload!=null) && (_lookupCollectionViaSuspectConditionUpload.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaSuspectConditionUpload:null);
				info.AddValue("_lookupCollectionViaMedicationUpload", ((_lookupCollectionViaMedicationUpload!=null) && (_lookupCollectionViaMedicationUpload.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaMedicationUpload:null);
				info.AddValue("_lookupCollectionViaHostImage", ((_lookupCollectionViaHostImage!=null) && (_lookupCollectionViaHostImage.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaHostImage:null);
				info.AddValue("_lookupCollectionViaOutboundUpload_", ((_lookupCollectionViaOutboundUpload_!=null) && (_lookupCollectionViaOutboundUpload_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaOutboundUpload_:null);
				info.AddValue("_lookupCollectionViaWellMedAttestation", ((_lookupCollectionViaWellMedAttestation!=null) && (_lookupCollectionViaWellMedAttestation.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaWellMedAttestation:null);
				info.AddValue("_lookupCollectionViaAccount___", ((_lookupCollectionViaAccount___!=null) && (_lookupCollectionViaAccount___.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaAccount___:null);
				info.AddValue("_lookupCollectionViaAccount______", ((_lookupCollectionViaAccount______!=null) && (_lookupCollectionViaAccount______.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaAccount______:null);
				info.AddValue("_lookupCollectionViaAccount__", ((_lookupCollectionViaAccount__!=null) && (_lookupCollectionViaAccount__.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaAccount__:null);
				info.AddValue("_lookupCollectionViaCorporateUpload_", ((_lookupCollectionViaCorporateUpload_!=null) && (_lookupCollectionViaCorporateUpload_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCorporateUpload_:null);
				info.AddValue("_lookupCollectionViaAccount____", ((_lookupCollectionViaAccount____!=null) && (_lookupCollectionViaAccount____.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaAccount____:null);
				info.AddValue("_lookupCollectionViaAccount_____", ((_lookupCollectionViaAccount_____!=null) && (_lookupCollectionViaAccount_____.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaAccount_____:null);
				info.AddValue("_lookupCollectionViaCallUpload_", ((_lookupCollectionViaCallUpload_!=null) && (_lookupCollectionViaCallUpload_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCallUpload_:null);
				info.AddValue("_lookupCollectionViaCorporateUpload", ((_lookupCollectionViaCorporateUpload!=null) && (_lookupCollectionViaCorporateUpload.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCorporateUpload:null);
				info.AddValue("_lookupCollectionViaCallUpload", ((_lookupCollectionViaCallUpload!=null) && (_lookupCollectionViaCallUpload.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCallUpload:null);
				info.AddValue("_lookupCollectionViaAccount_", ((_lookupCollectionViaAccount_!=null) && (_lookupCollectionViaAccount_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaAccount_:null);
				info.AddValue("_lookupCollectionViaCustomerActivityTypeUpload_", ((_lookupCollectionViaCustomerActivityTypeUpload_!=null) && (_lookupCollectionViaCustomerActivityTypeUpload_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCustomerActivityTypeUpload_:null);
				info.AddValue("_lookupCollectionViaAccount", ((_lookupCollectionViaAccount!=null) && (_lookupCollectionViaAccount.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaAccount:null);
				info.AddValue("_lookupCollectionViaAccount_______", ((_lookupCollectionViaAccount_______!=null) && (_lookupCollectionViaAccount_______.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaAccount_______:null);
				info.AddValue("_lookupCollectionViaCorporateUpload__", ((_lookupCollectionViaCorporateUpload__!=null) && (_lookupCollectionViaCorporateUpload__.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCorporateUpload__:null);
				info.AddValue("_lookupCollectionViaCustomerActivityTypeUpload", ((_lookupCollectionViaCustomerActivityTypeUpload!=null) && (_lookupCollectionViaCustomerActivityTypeUpload.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCustomerActivityTypeUpload:null);
				info.AddValue("_lookupCollectionViaAccount________", ((_lookupCollectionViaAccount________!=null) && (_lookupCollectionViaAccount________.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaAccount________:null);
				info.AddValue("_medicalVendorTypeCollectionViaMedicalVendorProfile", ((_medicalVendorTypeCollectionViaMedicalVendorProfile!=null) && (_medicalVendorTypeCollectionViaMedicalVendorProfile.Count>0) && !this.MarkedForDeletion)?_medicalVendorTypeCollectionViaMedicalVendorProfile:null);
				info.AddValue("_medicalVendorTypeCollectionViaMedicalVendorProfile_", ((_medicalVendorTypeCollectionViaMedicalVendorProfile_!=null) && (_medicalVendorTypeCollectionViaMedicalVendorProfile_.Count>0) && !this.MarkedForDeletion)?_medicalVendorTypeCollectionViaMedicalVendorProfile_:null);
				info.AddValue("_mvuserClassificationCollectionViaPhysicianProfile_", ((_mvuserClassificationCollectionViaPhysicianProfile_!=null) && (_mvuserClassificationCollectionViaPhysicianProfile_.Count>0) && !this.MarkedForDeletion)?_mvuserClassificationCollectionViaPhysicianProfile_:null);
				info.AddValue("_mvuserClassificationCollectionViaPhysicianProfile", ((_mvuserClassificationCollectionViaPhysicianProfile!=null) && (_mvuserClassificationCollectionViaPhysicianProfile.Count>0) && !this.MarkedForDeletion)?_mvuserClassificationCollectionViaPhysicianProfile:null);
				info.AddValue("_organizationRoleUserCollectionViaMergeCustomerUpload", ((_organizationRoleUserCollectionViaMergeCustomerUpload!=null) && (_organizationRoleUserCollectionViaMergeCustomerUpload.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaMergeCustomerUpload:null);
				info.AddValue("_organizationRoleUserCollectionViaCustomerActivityTypeUpload_", ((_organizationRoleUserCollectionViaCustomerActivityTypeUpload_!=null) && (_organizationRoleUserCollectionViaCustomerActivityTypeUpload_.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaCustomerActivityTypeUpload_:null);
				info.AddValue("_organizationRoleUserCollectionViaMergeCustomerUpload_", ((_organizationRoleUserCollectionViaMergeCustomerUpload_!=null) && (_organizationRoleUserCollectionViaMergeCustomerUpload_.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaMergeCustomerUpload_:null);
				info.AddValue("_organizationRoleUserCollectionViaMedicationUpload_", ((_organizationRoleUserCollectionViaMedicationUpload_!=null) && (_organizationRoleUserCollectionViaMedicationUpload_.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaMedicationUpload_:null);
				info.AddValue("_organizationRoleUserCollectionViaStaffEventScheduleUpload_", ((_organizationRoleUserCollectionViaStaffEventScheduleUpload_!=null) && (_organizationRoleUserCollectionViaStaffEventScheduleUpload_.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaStaffEventScheduleUpload_:null);
				info.AddValue("_organizationRoleUserCollectionViaStaffEventScheduleUpload", ((_organizationRoleUserCollectionViaStaffEventScheduleUpload!=null) && (_organizationRoleUserCollectionViaStaffEventScheduleUpload.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaStaffEventScheduleUpload:null);
				info.AddValue("_organizationRoleUserCollectionViaSuspectConditionUpload_", ((_organizationRoleUserCollectionViaSuspectConditionUpload_!=null) && (_organizationRoleUserCollectionViaSuspectConditionUpload_.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaSuspectConditionUpload_:null);
				info.AddValue("_organizationRoleUserCollectionViaSuspectConditionUpload", ((_organizationRoleUserCollectionViaSuspectConditionUpload!=null) && (_organizationRoleUserCollectionViaSuspectConditionUpload.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaSuspectConditionUpload:null);
				info.AddValue("_organizationRoleUserCollectionViaRapsUpload_", ((_organizationRoleUserCollectionViaRapsUpload_!=null) && (_organizationRoleUserCollectionViaRapsUpload_.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaRapsUpload_:null);
				info.AddValue("_organizationRoleUserCollectionViaParticipationConsentSignature_", ((_organizationRoleUserCollectionViaParticipationConsentSignature_!=null) && (_organizationRoleUserCollectionViaParticipationConsentSignature_.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaParticipationConsentSignature_:null);
				info.AddValue("_organizationRoleUserCollectionViaParticipationConsentSignature", ((_organizationRoleUserCollectionViaParticipationConsentSignature!=null) && (_organizationRoleUserCollectionViaParticipationConsentSignature.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaParticipationConsentSignature:null);
				info.AddValue("_organizationRoleUserCollectionViaRapsUpload", ((_organizationRoleUserCollectionViaRapsUpload!=null) && (_organizationRoleUserCollectionViaRapsUpload.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaRapsUpload:null);
				info.AddValue("_organizationRoleUserCollectionViaPhysicianRecordRequestSignature", ((_organizationRoleUserCollectionViaPhysicianRecordRequestSignature!=null) && (_organizationRoleUserCollectionViaPhysicianRecordRequestSignature.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaPhysicianRecordRequestSignature:null);
				info.AddValue("_organizationRoleUserCollectionViaFluConsentSignature", ((_organizationRoleUserCollectionViaFluConsentSignature!=null) && (_organizationRoleUserCollectionViaFluConsentSignature.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaFluConsentSignature:null);
				info.AddValue("_organizationRoleUserCollectionViaCorporateUpload", ((_organizationRoleUserCollectionViaCorporateUpload!=null) && (_organizationRoleUserCollectionViaCorporateUpload.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaCorporateUpload:null);
				info.AddValue("_organizationRoleUserCollectionViaCallUpload_", ((_organizationRoleUserCollectionViaCallUpload_!=null) && (_organizationRoleUserCollectionViaCallUpload_.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaCallUpload_:null);
				info.AddValue("_organizationRoleUserCollectionViaEligibilityUpload", ((_organizationRoleUserCollectionViaEligibilityUpload!=null) && (_organizationRoleUserCollectionViaEligibilityUpload.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaEligibilityUpload:null);
				info.AddValue("_organizationRoleUserCollectionViaEventCustomerGiftCard_", ((_organizationRoleUserCollectionViaEventCustomerGiftCard_!=null) && (_organizationRoleUserCollectionViaEventCustomerGiftCard_.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaEventCustomerGiftCard_:null);
				info.AddValue("_organizationRoleUserCollectionViaEligibilityUpload_", ((_organizationRoleUserCollectionViaEligibilityUpload_!=null) && (_organizationRoleUserCollectionViaEligibilityUpload_.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaEligibilityUpload_:null);
				info.AddValue("_organizationRoleUserCollectionViaChaperoneSignature_", ((_organizationRoleUserCollectionViaChaperoneSignature_!=null) && (_organizationRoleUserCollectionViaChaperoneSignature_.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaChaperoneSignature_:null);
				info.AddValue("_organizationRoleUserCollectionViaExitInterviewSignature", ((_organizationRoleUserCollectionViaExitInterviewSignature!=null) && (_organizationRoleUserCollectionViaExitInterviewSignature.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaExitInterviewSignature:null);
				info.AddValue("_organizationRoleUserCollectionViaCorporateUpload__", ((_organizationRoleUserCollectionViaCorporateUpload__!=null) && (_organizationRoleUserCollectionViaCorporateUpload__.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaCorporateUpload__:null);
				info.AddValue("_organizationRoleUserCollectionViaExportableReportsQueue", ((_organizationRoleUserCollectionViaExportableReportsQueue!=null) && (_organizationRoleUserCollectionViaExportableReportsQueue.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaExportableReportsQueue:null);
				info.AddValue("_organizationRoleUserCollectionViaChaperoneSignature", ((_organizationRoleUserCollectionViaChaperoneSignature!=null) && (_organizationRoleUserCollectionViaChaperoneSignature.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaChaperoneSignature:null);
				info.AddValue("_organizationRoleUserCollectionViaEventCustomerGiftCard", ((_organizationRoleUserCollectionViaEventCustomerGiftCard!=null) && (_organizationRoleUserCollectionViaEventCustomerGiftCard.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaEventCustomerGiftCard:null);
				info.AddValue("_organizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload", ((_organizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload!=null) && (_organizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload:null);
				info.AddValue("_organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_", ((_organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_!=null) && (_organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_:null);
				info.AddValue("_organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload", ((_organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload!=null) && (_organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload:null);
				info.AddValue("_organizationRoleUserCollectionViaFluConsentSignature_", ((_organizationRoleUserCollectionViaFluConsentSignature_!=null) && (_organizationRoleUserCollectionViaFluConsentSignature_.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaFluConsentSignature_:null);
				info.AddValue("_organizationRoleUserCollectionViaMedicationUpload", ((_organizationRoleUserCollectionViaMedicationUpload!=null) && (_organizationRoleUserCollectionViaMedicationUpload.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaMedicationUpload:null);
				info.AddValue("_organizationRoleUserCollectionViaCustomerActivityTypeUpload", ((_organizationRoleUserCollectionViaCustomerActivityTypeUpload!=null) && (_organizationRoleUserCollectionViaCustomerActivityTypeUpload.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaCustomerActivityTypeUpload:null);
				info.AddValue("_organizationRoleUserCollectionViaCallUpload", ((_organizationRoleUserCollectionViaCallUpload!=null) && (_organizationRoleUserCollectionViaCallUpload.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaCallUpload:null);
				info.AddValue("_organizationRoleUserCollectionViaCorporateUpload_", ((_organizationRoleUserCollectionViaCorporateUpload_!=null) && (_organizationRoleUserCollectionViaCorporateUpload_.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserCollectionViaCorporateUpload_:null);
				info.AddValue("_organizationTypeCollectionViaOrganization", ((_organizationTypeCollectionViaOrganization!=null) && (_organizationTypeCollectionViaOrganization.Count>0) && !this.MarkedForDeletion)?_organizationTypeCollectionViaOrganization:null);
				info.AddValue("_organizationTypeCollectionViaOrganization_", ((_organizationTypeCollectionViaOrganization_!=null) && (_organizationTypeCollectionViaOrganization_.Count>0) && !this.MarkedForDeletion)?_organizationTypeCollectionViaOrganization_:null);
				info.AddValue("_physicianSpecializationCollectionViaPhysicianProfile_", ((_physicianSpecializationCollectionViaPhysicianProfile_!=null) && (_physicianSpecializationCollectionViaPhysicianProfile_.Count>0) && !this.MarkedForDeletion)?_physicianSpecializationCollectionViaPhysicianProfile_:null);
				info.AddValue("_physicianSpecializationCollectionViaPhysicianProfile", ((_physicianSpecializationCollectionViaPhysicianProfile!=null) && (_physicianSpecializationCollectionViaPhysicianProfile.Count>0) && !this.MarkedForDeletion)?_physicianSpecializationCollectionViaPhysicianProfile:null);
				info.AddValue("_prospectsCollectionViaAccount", ((_prospectsCollectionViaAccount!=null) && (_prospectsCollectionViaAccount.Count>0) && !this.MarkedForDeletion)?_prospectsCollectionViaAccount:null);
				info.AddValue("_prospectsCollectionViaAccount________", ((_prospectsCollectionViaAccount________!=null) && (_prospectsCollectionViaAccount________.Count>0) && !this.MarkedForDeletion)?_prospectsCollectionViaAccount________:null);
				info.AddValue("_prospectsCollectionViaAccount__", ((_prospectsCollectionViaAccount__!=null) && (_prospectsCollectionViaAccount__.Count>0) && !this.MarkedForDeletion)?_prospectsCollectionViaAccount__:null);
				info.AddValue("_prospectsCollectionViaAccount_", ((_prospectsCollectionViaAccount_!=null) && (_prospectsCollectionViaAccount_.Count>0) && !this.MarkedForDeletion)?_prospectsCollectionViaAccount_:null);
				info.AddValue("_prospectsCollectionViaAccount______", ((_prospectsCollectionViaAccount______!=null) && (_prospectsCollectionViaAccount______.Count>0) && !this.MarkedForDeletion)?_prospectsCollectionViaAccount______:null);
				info.AddValue("_prospectsCollectionViaAccount____", ((_prospectsCollectionViaAccount____!=null) && (_prospectsCollectionViaAccount____.Count>0) && !this.MarkedForDeletion)?_prospectsCollectionViaAccount____:null);
				info.AddValue("_prospectsCollectionViaHostImage", ((_prospectsCollectionViaHostImage!=null) && (_prospectsCollectionViaHostImage.Count>0) && !this.MarkedForDeletion)?_prospectsCollectionViaHostImage:null);
				info.AddValue("_prospectsCollectionViaAccount___", ((_prospectsCollectionViaAccount___!=null) && (_prospectsCollectionViaAccount___.Count>0) && !this.MarkedForDeletion)?_prospectsCollectionViaAccount___:null);
				info.AddValue("_prospectsCollectionViaAccount_____", ((_prospectsCollectionViaAccount_____!=null) && (_prospectsCollectionViaAccount_____.Count>0) && !this.MarkedForDeletion)?_prospectsCollectionViaAccount_____:null);
				info.AddValue("_prospectsCollectionViaAccount_______", ((_prospectsCollectionViaAccount_______!=null) && (_prospectsCollectionViaAccount_______.Count>0) && !this.MarkedForDeletion)?_prospectsCollectionViaAccount_______:null);
				info.AddValue("_surveyTemplateCollectionViaAccount_______", ((_surveyTemplateCollectionViaAccount_______!=null) && (_surveyTemplateCollectionViaAccount_______.Count>0) && !this.MarkedForDeletion)?_surveyTemplateCollectionViaAccount_______:null);
				info.AddValue("_surveyTemplateCollectionViaAccount________", ((_surveyTemplateCollectionViaAccount________!=null) && (_surveyTemplateCollectionViaAccount________.Count>0) && !this.MarkedForDeletion)?_surveyTemplateCollectionViaAccount________:null);
				info.AddValue("_surveyTemplateCollectionViaAccount", ((_surveyTemplateCollectionViaAccount!=null) && (_surveyTemplateCollectionViaAccount.Count>0) && !this.MarkedForDeletion)?_surveyTemplateCollectionViaAccount:null);
				info.AddValue("_surveyTemplateCollectionViaAccount______", ((_surveyTemplateCollectionViaAccount______!=null) && (_surveyTemplateCollectionViaAccount______.Count>0) && !this.MarkedForDeletion)?_surveyTemplateCollectionViaAccount______:null);
				info.AddValue("_surveyTemplateCollectionViaAccount__", ((_surveyTemplateCollectionViaAccount__!=null) && (_surveyTemplateCollectionViaAccount__.Count>0) && !this.MarkedForDeletion)?_surveyTemplateCollectionViaAccount__:null);
				info.AddValue("_surveyTemplateCollectionViaAccount___", ((_surveyTemplateCollectionViaAccount___!=null) && (_surveyTemplateCollectionViaAccount___.Count>0) && !this.MarkedForDeletion)?_surveyTemplateCollectionViaAccount___:null);
				info.AddValue("_surveyTemplateCollectionViaAccount____", ((_surveyTemplateCollectionViaAccount____!=null) && (_surveyTemplateCollectionViaAccount____.Count>0) && !this.MarkedForDeletion)?_surveyTemplateCollectionViaAccount____:null);
				info.AddValue("_surveyTemplateCollectionViaAccount_", ((_surveyTemplateCollectionViaAccount_!=null) && (_surveyTemplateCollectionViaAccount_.Count>0) && !this.MarkedForDeletion)?_surveyTemplateCollectionViaAccount_:null);
				info.AddValue("_surveyTemplateCollectionViaAccount_____", ((_surveyTemplateCollectionViaAccount_____!=null) && (_surveyTemplateCollectionViaAccount_____.Count>0) && !this.MarkedForDeletion)?_surveyTemplateCollectionViaAccount_____:null);
				info.AddValue("_lookup", (!this.MarkedForDeletion?_lookup:null));
				info.AddValue("_organizationRoleUser", (!this.MarkedForDeletion?_organizationRoleUser:null));

			}
			
			// __LLBLGENPRO_USER_CODE_REGION_START GetObjectInfo
			// __LLBLGENPRO_USER_CODE_REGION_END
			base.GetObjectData(info, context);
		}

		/// <summary>Returns true if the original value for the field with the fieldIndex passed in, read from the persistent storage was NULL, false otherwise.
		/// Should not be used for testing if the current value is NULL, use <see cref="TestCurrentFieldValueForNull"/> for that.</summary>
		/// <param name="fieldIndex">Index of the field to test if that field was NULL in the persistent storage</param>
		/// <returns>true if the field with the passed in index was NULL in the persistent storage, false otherwise</returns>
		public bool TestOriginalFieldValueForNull(FileFieldIndex fieldIndex)
		{
			return base.Fields[(int)fieldIndex].IsNull;
		}
		
		/// <summary>Returns true if the current value for the field with the fieldIndex passed in represents null/not defined, false otherwise.
		/// Should not be used for testing if the original value (read from the db) is NULL</summary>
		/// <param name="fieldIndex">Index of the field to test if its currentvalue is null/undefined</param>
		/// <returns>true if the field's value isn't defined yet, false otherwise</returns>
		public bool TestCurrentFieldValueForNull(FileFieldIndex fieldIndex)
		{
			return base.CheckIfCurrentFieldValueIsNull((int)fieldIndex);
		}

				
		/// <summary>Gets a list of all the EntityRelation objects the type of this instance has.</summary>
		/// <returns>A list of all the EntityRelation objects the type of this instance has. Hierarchy relations are excluded.</returns>
		public override List<IEntityRelation> GetAllRelations()
		{
			return new FileRelations().GetAllRelations();
		}
		

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccount______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(AccountFields.ConfirmationScriptFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccount_____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(AccountFields.CallCenterScriptFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccount________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(AccountFields.MemberLetterFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccount_______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(AccountFields.InboundCallScriptFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccount____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(AccountFields.FluffLetterFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccount_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(AccountFields.ParticipantLetterId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccount()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(AccountFields.CheckListFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccount___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(AccountFields.SurveyPdfFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccount__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(AccountFields.PcpLetterPdfFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CallUploadFields.LogFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CallUploadFields.FileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ChaperoneSignature' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoChaperoneSignature_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ChaperoneSignatureFields.StaffSignatureFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ChaperoneSignature' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoChaperoneSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ChaperoneSignatureFields.SignatureFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CorporateUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCorporateUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CorporateUploadFields.LogFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CorporateUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCorporateUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CorporateUploadFields.FileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CorporateUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCorporateUpload__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CorporateUploadFields.AdjustOrderLogFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerActivityTypeUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerActivityTypeUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerActivityTypeUploadFields.LogFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerActivityTypeUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerActivityTypeUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerActivityTypeUploadFields.FileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerPhoneNumberUpdateUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerPhoneNumberUpdateUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerPhoneNumberUpdateUploadFields.LogFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerPhoneNumberUpdateUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerPhoneNumberUpdateUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerPhoneNumberUpdateUploadFields.FileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EligibilityUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEligibilityUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EligibilityUploadFields.LogFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EligibilityUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEligibilityUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EligibilityUploadFields.FileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerGiftCard' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerGiftCard_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventCustomerGiftCardFields.TechnicianSignatureFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerGiftCard' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerGiftCard()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventCustomerGiftCardFields.PatientSignatureFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ExitInterviewSignature' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoExitInterviewSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ExitInterviewSignatureFields.SignatureFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ExportableReportsQueue' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoExportableReportsQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ExportableReportsQueueFields.FileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'FluConsentSignature' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFluConsentSignature_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FluConsentSignatureFields.ClinicalProviderSignatureFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'FluConsentSignature' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFluConsentSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FluConsentSignatureFields.SignatureFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HealthPlanCriteriaAssignmentUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHealthPlanCriteriaAssignmentUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(HealthPlanCriteriaAssignmentUploadFields.FileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HostImage' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHostImage()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(HostImageFields.ImageId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'MedicalVendorProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoMedicalVendorProfile_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(MedicalVendorProfileFields.DoctorLetterFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'MedicalVendorProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoMedicalVendorProfile()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(MedicalVendorProfileFields.ResultLetterCoBrandingFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'MedicationUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoMedicationUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(MedicationUploadFields.LogFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'MedicationUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoMedicationUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(MedicationUploadFields.FileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'MergeCustomerUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoMergeCustomerUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(MergeCustomerUploadFields.LogFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'MergeCustomerUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoMergeCustomerUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(MergeCustomerUploadFields.FileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Organization' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganization_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationFields.TeamImageId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Organization' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganization()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationFields.LogoImageId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OutboundUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOutboundUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OutboundUploadFields.LogFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OutboundUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOutboundUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OutboundUploadFields.FileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Package' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPackage()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(PackageFields.ForOrderDisplayFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ParticipationConsentSignature' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoParticipationConsentSignature_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ParticipationConsentSignatureFields.SignatureFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ParticipationConsentSignature' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoParticipationConsentSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ParticipationConsentSignatureFields.InsuranceSignatureFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PhysicianProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPhysicianProfile_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(PhysicianProfileFields.DigitalSignatureFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PhysicianProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPhysicianProfile()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(PhysicianProfileFields.ResumeFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PhysicianRecordRequestSignature' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPhysicianRecordRequestSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(PhysicianRecordRequestSignatureFields.SignatureFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'RapsUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoRapsUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(RapsUploadFields.LogFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'RapsUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoRapsUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(RapsUploadFields.FileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ResultArchiveUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoResultArchiveUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ResultArchiveUploadFields.FileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'StaffEventScheduleUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoStaffEventScheduleUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(StaffEventScheduleUploadFields.LogFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'StaffEventScheduleUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoStaffEventScheduleUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(StaffEventScheduleUploadFields.FileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'SuspectConditionUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSuspectConditionUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(SuspectConditionUploadFields.LogFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'SuspectConditionUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSuspectConditionUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(SuspectConditionUploadFields.FileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Testimonial' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestimonial()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(TestimonialFields.FileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TestMedia' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestMedia()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(TestMediaFields.FileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'WellMedAttestation' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoWellMedAttestation()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(WellMedAttestationFields.ProviderSignatureFileId, null, ComparisonOperator.Equal, this.FileId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaEligibilityUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaEligibilityUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaCorporateUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaCorporateUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaCorporateUpload__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaCorporateUpload__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaCorporateUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaCorporateUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaEligibilityUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaEligibilityUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Address' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAddressCollectionViaOrganization_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AddressCollectionViaOrganization_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Address' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAddressCollectionViaOrganization()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AddressCollectionViaOrganization"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CheckListQuestion' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCheckListQuestionCollectionViaExitInterviewSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CheckListQuestionCollectionViaExitInterviewSignature"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CheckListTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCheckListTemplateCollectionViaAccount_________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CheckListTemplateCollectionViaAccount_________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CheckListTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCheckListTemplateCollectionViaAccount_____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CheckListTemplateCollectionViaAccount_____"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CheckListTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCheckListTemplateCollectionViaAccount____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CheckListTemplateCollectionViaAccount____"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CheckListTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCheckListTemplateCollectionViaAccount_____________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CheckListTemplateCollectionViaAccount_____________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CheckListTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCheckListTemplateCollectionViaAccount______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CheckListTemplateCollectionViaAccount______"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CheckListTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCheckListTemplateCollectionViaAccount_______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CheckListTemplateCollectionViaAccount_______"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CheckListTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCheckListTemplateCollectionViaAccount__________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CheckListTemplateCollectionViaAccount__________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CheckListTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCheckListTemplateCollectionViaAccount_________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CheckListTemplateCollectionViaAccount_________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CheckListTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCheckListTemplateCollectionViaAccount____________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CheckListTemplateCollectionViaAccount____________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CheckListTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCheckListTemplateCollectionViaAccount___________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CheckListTemplateCollectionViaAccount___________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CheckListTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCheckListTemplateCollectionViaAccount_______________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CheckListTemplateCollectionViaAccount_______________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CheckListTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCheckListTemplateCollectionViaAccount________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CheckListTemplateCollectionViaAccount________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CheckListTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCheckListTemplateCollectionViaAccount________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CheckListTemplateCollectionViaAccount________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CheckListTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCheckListTemplateCollectionViaAccount______________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CheckListTemplateCollectionViaAccount______________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CheckListTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCheckListTemplateCollectionViaAccount_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CheckListTemplateCollectionViaAccount_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CheckListTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCheckListTemplateCollectionViaAccount___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CheckListTemplateCollectionViaAccount___"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CheckListTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCheckListTemplateCollectionViaAccount__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CheckListTemplateCollectionViaAccount__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CheckListTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCheckListTemplateCollectionViaAccount()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CheckListTemplateCollectionViaAccount"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Contract' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoContractCollectionViaMedicalVendorProfile_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ContractCollectionViaMedicalVendorProfile_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Contract' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoContractCollectionViaMedicalVendorProfile()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ContractCollectionViaMedicalVendorProfile"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerEventScreeningTests' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerEventScreeningTestsCollectionViaTestMedia()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerEventScreeningTestsCollectionViaTestMedia"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaTestimonial()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaTestimonial"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount_________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount_________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount__________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount__________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount___________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount___________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount_____________________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount_____________________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount___________________________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount___________________________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount___________________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount___________________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount__________________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount__________________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount_________________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount_________________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount____________________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount____________________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount______________________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount______________________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount_______________________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount_______________________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount________________________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount________________________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount_________________________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount_________________________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount__________________________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount__________________________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount____________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount____________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount_____________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount_____________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount________________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount________________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount_______________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount_______________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount______________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount______________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount___"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount____________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount____________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount____"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount_______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount_______"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount___________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount___________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount__________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount__________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount_____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount_____"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount_________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount_________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount______"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount______________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount______________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount_______________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount_______________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplateCollectionViaAccount_____________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EmailTemplateCollectionViaAccount_____________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerResult' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerResultCollectionViaWellMedAttestation()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomerResultCollectionViaWellMedAttestation"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaChaperoneSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaChaperoneSignature"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaFluConsentSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaFluConsentSignature"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaParticipationConsentSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaParticipationConsentSignature"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaFluConsentSignature_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaFluConsentSignature_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaParticipationConsentSignature_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaParticipationConsentSignature_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaExitInterviewSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaExitInterviewSignature"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaEventCustomerGiftCard_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaEventCustomerGiftCard_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaChaperoneSignature_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaChaperoneSignature_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaPhysicianRecordRequestSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaPhysicianRecordRequestSignature"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaEventCustomerGiftCard()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaEventCustomerGiftCard"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaResultArchiveUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaResultArchiveUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ExportableReports' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoExportableReportsCollectionViaExportableReportsQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ExportableReportsCollectionViaExportableReportsQueue"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'FluConsentTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFluConsentTemplateCollectionViaAccount______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FluConsentTemplateCollectionViaAccount______"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'FluConsentTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFluConsentTemplateCollectionViaAccount()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FluConsentTemplateCollectionViaAccount"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'FluConsentTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFluConsentTemplateCollectionViaAccount________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FluConsentTemplateCollectionViaAccount________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'FluConsentTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFluConsentTemplateCollectionViaAccount_______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FluConsentTemplateCollectionViaAccount_______"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'FluConsentTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFluConsentTemplateCollectionViaAccount___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FluConsentTemplateCollectionViaAccount___"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'FluConsentTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFluConsentTemplateCollectionViaAccount_____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FluConsentTemplateCollectionViaAccount_____"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'FluConsentTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFluConsentTemplateCollectionViaAccount__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FluConsentTemplateCollectionViaAccount__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'FluConsentTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFluConsentTemplateCollectionViaAccount_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FluConsentTemplateCollectionViaAccount_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'FluConsentTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFluConsentTemplateCollectionViaAccount____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FluConsentTemplateCollectionViaAccount____"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HafTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHafTemplateCollectionViaAccount________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HafTemplateCollectionViaAccount________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HafTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHafTemplateCollectionViaAccount______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HafTemplateCollectionViaAccount______"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HafTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHafTemplateCollectionViaAccount__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HafTemplateCollectionViaAccount__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HafTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHafTemplateCollectionViaAccount____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HafTemplateCollectionViaAccount____"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HafTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHafTemplateCollectionViaPackage()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HafTemplateCollectionViaPackage"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HafTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHafTemplateCollectionViaAccount_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HafTemplateCollectionViaAccount_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HafTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHafTemplateCollectionViaAccount_______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HafTemplateCollectionViaAccount_______"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HafTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHafTemplateCollectionViaAccount_____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HafTemplateCollectionViaAccount_____"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HafTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHafTemplateCollectionViaAccount()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HafTemplateCollectionViaAccount"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HafTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHafTemplateCollectionViaAccount___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HafTemplateCollectionViaAccount___"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HealthPlanCallQueueCriteria' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaStaffEventScheduleUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaStaffEventScheduleUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaRapsUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaRapsUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCustomerPhoneNumberUpdateUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCustomerPhoneNumberUpdateUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEligibilityUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEligibilityUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCustomerPhoneNumberUpdateUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCustomerPhoneNumberUpdateUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEligibilityUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEligibilityUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaStaffEventScheduleUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaStaffEventScheduleUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaRapsUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaRapsUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaMergeCustomerUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaMergeCustomerUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaMergeCustomerUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaMergeCustomerUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaMedicationUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaMedicationUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaOutboundUpload__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaOutboundUpload__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaOutboundUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaOutboundUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaOutboundUpload___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaOutboundUpload___"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaPackage()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaPackage"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaSuspectConditionUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaSuspectConditionUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaExportableReportsQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaExportableReportsQueue"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaSuspectConditionUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaSuspectConditionUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaMedicationUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaMedicationUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaHostImage()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaHostImage"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaOutboundUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaOutboundUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaWellMedAttestation()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaWellMedAttestation"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaAccount___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaAccount___"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaAccount______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaAccount______"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaAccount__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaAccount__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCorporateUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCorporateUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaAccount____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaAccount____"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaAccount_____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaAccount_____"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCallUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCallUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCorporateUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCorporateUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCallUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCallUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaAccount_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaAccount_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCustomerActivityTypeUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCustomerActivityTypeUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaAccount()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaAccount"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaAccount_______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaAccount_______"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCorporateUpload__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCorporateUpload__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCustomerActivityTypeUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCustomerActivityTypeUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaAccount________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaAccount________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'MedicalVendorType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoMedicalVendorTypeCollectionViaMedicalVendorProfile()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("MedicalVendorTypeCollectionViaMedicalVendorProfile"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'MedicalVendorType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoMedicalVendorTypeCollectionViaMedicalVendorProfile_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("MedicalVendorTypeCollectionViaMedicalVendorProfile_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'MvuserClassification' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoMvuserClassificationCollectionViaPhysicianProfile_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("MvuserClassificationCollectionViaPhysicianProfile_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'MvuserClassification' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoMvuserClassificationCollectionViaPhysicianProfile()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("MvuserClassificationCollectionViaPhysicianProfile"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaMergeCustomerUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaMergeCustomerUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaCustomerActivityTypeUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaCustomerActivityTypeUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaMergeCustomerUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaMergeCustomerUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaMedicationUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaMedicationUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaStaffEventScheduleUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaStaffEventScheduleUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaStaffEventScheduleUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaStaffEventScheduleUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaSuspectConditionUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaSuspectConditionUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaSuspectConditionUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaSuspectConditionUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaRapsUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaRapsUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaParticipationConsentSignature_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaParticipationConsentSignature_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaParticipationConsentSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaParticipationConsentSignature"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaRapsUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaRapsUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaPhysicianRecordRequestSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaPhysicianRecordRequestSignature"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaFluConsentSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaFluConsentSignature"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaCorporateUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaCorporateUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaCallUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaCallUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaEligibilityUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaEligibilityUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaEventCustomerGiftCard_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaEventCustomerGiftCard_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaEligibilityUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaEligibilityUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaChaperoneSignature_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaChaperoneSignature_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaExitInterviewSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaExitInterviewSignature"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaCorporateUpload__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaCorporateUpload__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaExportableReportsQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaExportableReportsQueue"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaChaperoneSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaChaperoneSignature"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaEventCustomerGiftCard()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaEventCustomerGiftCard"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaFluConsentSignature_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaFluConsentSignature_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaMedicationUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaMedicationUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaCustomerActivityTypeUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaCustomerActivityTypeUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaCallUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaCallUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserCollectionViaCorporateUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationRoleUserCollectionViaCorporateUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationTypeCollectionViaOrganization()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationTypeCollectionViaOrganization"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationTypeCollectionViaOrganization_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationTypeCollectionViaOrganization_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PhysicianSpecialization' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPhysicianSpecializationCollectionViaPhysicianProfile_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("PhysicianSpecializationCollectionViaPhysicianProfile_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PhysicianSpecialization' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPhysicianSpecializationCollectionViaPhysicianProfile()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("PhysicianSpecializationCollectionViaPhysicianProfile"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Prospects' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProspectsCollectionViaAccount()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ProspectsCollectionViaAccount"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Prospects' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProspectsCollectionViaAccount________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ProspectsCollectionViaAccount________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Prospects' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProspectsCollectionViaAccount__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ProspectsCollectionViaAccount__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Prospects' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProspectsCollectionViaAccount_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ProspectsCollectionViaAccount_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Prospects' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProspectsCollectionViaAccount______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ProspectsCollectionViaAccount______"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Prospects' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProspectsCollectionViaAccount____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ProspectsCollectionViaAccount____"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Prospects' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProspectsCollectionViaHostImage()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ProspectsCollectionViaHostImage"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Prospects' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProspectsCollectionViaAccount___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ProspectsCollectionViaAccount___"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Prospects' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProspectsCollectionViaAccount_____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ProspectsCollectionViaAccount_____"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Prospects' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProspectsCollectionViaAccount_______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ProspectsCollectionViaAccount_______"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'SurveyTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSurveyTemplateCollectionViaAccount_______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("SurveyTemplateCollectionViaAccount_______"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'SurveyTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSurveyTemplateCollectionViaAccount________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("SurveyTemplateCollectionViaAccount________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'SurveyTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSurveyTemplateCollectionViaAccount()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("SurveyTemplateCollectionViaAccount"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'SurveyTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSurveyTemplateCollectionViaAccount______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("SurveyTemplateCollectionViaAccount______"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'SurveyTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSurveyTemplateCollectionViaAccount__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("SurveyTemplateCollectionViaAccount__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'SurveyTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSurveyTemplateCollectionViaAccount___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("SurveyTemplateCollectionViaAccount___"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'SurveyTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSurveyTemplateCollectionViaAccount____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("SurveyTemplateCollectionViaAccount____"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'SurveyTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSurveyTemplateCollectionViaAccount_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("SurveyTemplateCollectionViaAccount_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'SurveyTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSurveyTemplateCollectionViaAccount_____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("SurveyTemplateCollectionViaAccount_____"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.FileId, null, ComparisonOperator.Equal, this.FileId, "FileEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entity of type 'Lookup' to this entity. Use DataAccessAdapter.FetchNewEntity() to fetch this related entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookup()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(LookupFields.LookupId, null, ComparisonOperator.Equal, this.Type));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entity of type 'OrganizationRoleUser' to this entity. Use DataAccessAdapter.FetchNewEntity() to fetch this related entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUser()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.CreatedBy));
			return bucket;
		}

	
		
		/// <summary>Creates entity fields object for this entity. Used in constructor to setup this entity in a polymorphic scenario.</summary>
		protected virtual IEntityFields2 CreateFields()
		{
			return EntityFieldsFactory.CreateEntityFieldsObject(Falcon.Data.EntityType.FileEntity);
		}

		/// <summary>
		/// Creates the ITypeDefaultValue instance used to provide default values for value types which aren't of type nullable(of T)
		/// </summary>
		/// <returns></returns>
		protected override ITypeDefaultValue CreateTypeDefaultValueProvider()
		{
			return new TypeDefaultValue();
		}

		/// <summary>Creates a new instance of the factory related to this entity</summary>
		protected override IEntityFactory2 CreateEntityFactory()
		{
			return EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory));
		}
#if !CF
		/// <summary>Adds the member collections to the collections queue (base first)</summary>
		/// <param name="collectionsQueue">The collections queue.</param>
		protected override void AddToMemberEntityCollectionsQueue(Queue<IEntityCollection2> collectionsQueue) 
		{
			base.AddToMemberEntityCollectionsQueue(collectionsQueue);
			collectionsQueue.Enqueue(this._account______);
			collectionsQueue.Enqueue(this._account_____);
			collectionsQueue.Enqueue(this._account________);
			collectionsQueue.Enqueue(this._account_______);
			collectionsQueue.Enqueue(this._account____);
			collectionsQueue.Enqueue(this._account_);
			collectionsQueue.Enqueue(this._account);
			collectionsQueue.Enqueue(this._account___);
			collectionsQueue.Enqueue(this._account__);
			collectionsQueue.Enqueue(this._callUpload_);
			collectionsQueue.Enqueue(this._callUpload);
			collectionsQueue.Enqueue(this._chaperoneSignature_);
			collectionsQueue.Enqueue(this._chaperoneSignature);
			collectionsQueue.Enqueue(this._corporateUpload_);
			collectionsQueue.Enqueue(this._corporateUpload);
			collectionsQueue.Enqueue(this._corporateUpload__);
			collectionsQueue.Enqueue(this._customerActivityTypeUpload_);
			collectionsQueue.Enqueue(this._customerActivityTypeUpload);
			collectionsQueue.Enqueue(this._customerPhoneNumberUpdateUpload_);
			collectionsQueue.Enqueue(this._customerPhoneNumberUpdateUpload);
			collectionsQueue.Enqueue(this._eligibilityUpload_);
			collectionsQueue.Enqueue(this._eligibilityUpload);
			collectionsQueue.Enqueue(this._eventCustomerGiftCard_);
			collectionsQueue.Enqueue(this._eventCustomerGiftCard);
			collectionsQueue.Enqueue(this._exitInterviewSignature);
			collectionsQueue.Enqueue(this._exportableReportsQueue);
			collectionsQueue.Enqueue(this._fluConsentSignature_);
			collectionsQueue.Enqueue(this._fluConsentSignature);
			collectionsQueue.Enqueue(this._healthPlanCriteriaAssignmentUpload);
			collectionsQueue.Enqueue(this._hostImage);
			collectionsQueue.Enqueue(this._medicalVendorProfile_);
			collectionsQueue.Enqueue(this._medicalVendorProfile);
			collectionsQueue.Enqueue(this._medicationUpload_);
			collectionsQueue.Enqueue(this._medicationUpload);
			collectionsQueue.Enqueue(this._mergeCustomerUpload_);
			collectionsQueue.Enqueue(this._mergeCustomerUpload);
			collectionsQueue.Enqueue(this._organization_);
			collectionsQueue.Enqueue(this._organization);
			collectionsQueue.Enqueue(this._outboundUpload_);
			collectionsQueue.Enqueue(this._outboundUpload);
			collectionsQueue.Enqueue(this._package);
			collectionsQueue.Enqueue(this._participationConsentSignature_);
			collectionsQueue.Enqueue(this._participationConsentSignature);
			collectionsQueue.Enqueue(this._physicianProfile_);
			collectionsQueue.Enqueue(this._physicianProfile);
			collectionsQueue.Enqueue(this._physicianRecordRequestSignature);
			collectionsQueue.Enqueue(this._rapsUpload_);
			collectionsQueue.Enqueue(this._rapsUpload);
			collectionsQueue.Enqueue(this._resultArchiveUpload);
			collectionsQueue.Enqueue(this._staffEventScheduleUpload_);
			collectionsQueue.Enqueue(this._staffEventScheduleUpload);
			collectionsQueue.Enqueue(this._suspectConditionUpload_);
			collectionsQueue.Enqueue(this._suspectConditionUpload);
			collectionsQueue.Enqueue(this._testimonial);
			collectionsQueue.Enqueue(this._testMedia);
			collectionsQueue.Enqueue(this._wellMedAttestation);
			collectionsQueue.Enqueue(this._accountCollectionViaEligibilityUpload_);
			collectionsQueue.Enqueue(this._accountCollectionViaCorporateUpload);
			collectionsQueue.Enqueue(this._accountCollectionViaCorporateUpload__);
			collectionsQueue.Enqueue(this._accountCollectionViaCorporateUpload_);
			collectionsQueue.Enqueue(this._accountCollectionViaEligibilityUpload);
			collectionsQueue.Enqueue(this._addressCollectionViaOrganization_);
			collectionsQueue.Enqueue(this._addressCollectionViaOrganization);
			collectionsQueue.Enqueue(this._checkListQuestionCollectionViaExitInterviewSignature);
			collectionsQueue.Enqueue(this._checkListTemplateCollectionViaAccount_________________);
			collectionsQueue.Enqueue(this._checkListTemplateCollectionViaAccount_____);
			collectionsQueue.Enqueue(this._checkListTemplateCollectionViaAccount____);
			collectionsQueue.Enqueue(this._checkListTemplateCollectionViaAccount_____________);
			collectionsQueue.Enqueue(this._checkListTemplateCollectionViaAccount______);
			collectionsQueue.Enqueue(this._checkListTemplateCollectionViaAccount_______);
			collectionsQueue.Enqueue(this._checkListTemplateCollectionViaAccount__________);
			collectionsQueue.Enqueue(this._checkListTemplateCollectionViaAccount_________);
			collectionsQueue.Enqueue(this._checkListTemplateCollectionViaAccount____________);
			collectionsQueue.Enqueue(this._checkListTemplateCollectionViaAccount___________);
			collectionsQueue.Enqueue(this._checkListTemplateCollectionViaAccount_______________);
			collectionsQueue.Enqueue(this._checkListTemplateCollectionViaAccount________________);
			collectionsQueue.Enqueue(this._checkListTemplateCollectionViaAccount________);
			collectionsQueue.Enqueue(this._checkListTemplateCollectionViaAccount______________);
			collectionsQueue.Enqueue(this._checkListTemplateCollectionViaAccount_);
			collectionsQueue.Enqueue(this._checkListTemplateCollectionViaAccount___);
			collectionsQueue.Enqueue(this._checkListTemplateCollectionViaAccount__);
			collectionsQueue.Enqueue(this._checkListTemplateCollectionViaAccount);
			collectionsQueue.Enqueue(this._contractCollectionViaMedicalVendorProfile_);
			collectionsQueue.Enqueue(this._contractCollectionViaMedicalVendorProfile);
			collectionsQueue.Enqueue(this._customerEventScreeningTestsCollectionViaTestMedia);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaTestimonial);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount_________________);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount__________________);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount___________________);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount_____________________________);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount___________________________________);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount________________);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount___________________________);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount__________________________);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount_________________________);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount____________________________);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount______________________________);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount_______________________________);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount________________________________);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount_________________________________);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount__________________________________);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount____________________);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount_____________________);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount________________________);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount_______________________);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount______________________);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount__);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount___);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount____________);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount____);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount________);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount_______);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount___________);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount__________);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount_);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount_____);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount_________);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount______);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount______________);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount_______________);
			collectionsQueue.Enqueue(this._emailTemplateCollectionViaAccount_____________);
			collectionsQueue.Enqueue(this._eventCustomerResultCollectionViaWellMedAttestation);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaChaperoneSignature);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaFluConsentSignature);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaParticipationConsentSignature);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaFluConsentSignature_);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaParticipationConsentSignature_);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaExitInterviewSignature);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaEventCustomerGiftCard_);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaChaperoneSignature_);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaPhysicianRecordRequestSignature);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaEventCustomerGiftCard);
			collectionsQueue.Enqueue(this._eventsCollectionViaResultArchiveUpload);
			collectionsQueue.Enqueue(this._exportableReportsCollectionViaExportableReportsQueue);
			collectionsQueue.Enqueue(this._fluConsentTemplateCollectionViaAccount______);
			collectionsQueue.Enqueue(this._fluConsentTemplateCollectionViaAccount);
			collectionsQueue.Enqueue(this._fluConsentTemplateCollectionViaAccount________);
			collectionsQueue.Enqueue(this._fluConsentTemplateCollectionViaAccount_______);
			collectionsQueue.Enqueue(this._fluConsentTemplateCollectionViaAccount___);
			collectionsQueue.Enqueue(this._fluConsentTemplateCollectionViaAccount_____);
			collectionsQueue.Enqueue(this._fluConsentTemplateCollectionViaAccount__);
			collectionsQueue.Enqueue(this._fluConsentTemplateCollectionViaAccount_);
			collectionsQueue.Enqueue(this._fluConsentTemplateCollectionViaAccount____);
			collectionsQueue.Enqueue(this._hafTemplateCollectionViaAccount________);
			collectionsQueue.Enqueue(this._hafTemplateCollectionViaAccount______);
			collectionsQueue.Enqueue(this._hafTemplateCollectionViaAccount__);
			collectionsQueue.Enqueue(this._hafTemplateCollectionViaAccount____);
			collectionsQueue.Enqueue(this._hafTemplateCollectionViaPackage);
			collectionsQueue.Enqueue(this._hafTemplateCollectionViaAccount_);
			collectionsQueue.Enqueue(this._hafTemplateCollectionViaAccount_______);
			collectionsQueue.Enqueue(this._hafTemplateCollectionViaAccount_____);
			collectionsQueue.Enqueue(this._hafTemplateCollectionViaAccount);
			collectionsQueue.Enqueue(this._hafTemplateCollectionViaAccount___);
			collectionsQueue.Enqueue(this._healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload);
			collectionsQueue.Enqueue(this._lookupCollectionViaStaffEventScheduleUpload_);
			collectionsQueue.Enqueue(this._lookupCollectionViaRapsUpload);
			collectionsQueue.Enqueue(this._lookupCollectionViaCustomerPhoneNumberUpdateUpload);
			collectionsQueue.Enqueue(this._lookupCollectionViaEligibilityUpload);
			collectionsQueue.Enqueue(this._lookupCollectionViaCustomerPhoneNumberUpdateUpload_);
			collectionsQueue.Enqueue(this._lookupCollectionViaEligibilityUpload_);
			collectionsQueue.Enqueue(this._lookupCollectionViaStaffEventScheduleUpload);
			collectionsQueue.Enqueue(this._lookupCollectionViaRapsUpload_);
			collectionsQueue.Enqueue(this._lookupCollectionViaMergeCustomerUpload_);
			collectionsQueue.Enqueue(this._lookupCollectionViaMergeCustomerUpload);
			collectionsQueue.Enqueue(this._lookupCollectionViaMedicationUpload_);
			collectionsQueue.Enqueue(this._lookupCollectionViaOutboundUpload__);
			collectionsQueue.Enqueue(this._lookupCollectionViaOutboundUpload);
			collectionsQueue.Enqueue(this._lookupCollectionViaOutboundUpload___);
			collectionsQueue.Enqueue(this._lookupCollectionViaPackage);
			collectionsQueue.Enqueue(this._lookupCollectionViaSuspectConditionUpload_);
			collectionsQueue.Enqueue(this._lookupCollectionViaExportableReportsQueue);
			collectionsQueue.Enqueue(this._lookupCollectionViaSuspectConditionUpload);
			collectionsQueue.Enqueue(this._lookupCollectionViaMedicationUpload);
			collectionsQueue.Enqueue(this._lookupCollectionViaHostImage);
			collectionsQueue.Enqueue(this._lookupCollectionViaOutboundUpload_);
			collectionsQueue.Enqueue(this._lookupCollectionViaWellMedAttestation);
			collectionsQueue.Enqueue(this._lookupCollectionViaAccount___);
			collectionsQueue.Enqueue(this._lookupCollectionViaAccount______);
			collectionsQueue.Enqueue(this._lookupCollectionViaAccount__);
			collectionsQueue.Enqueue(this._lookupCollectionViaCorporateUpload_);
			collectionsQueue.Enqueue(this._lookupCollectionViaAccount____);
			collectionsQueue.Enqueue(this._lookupCollectionViaAccount_____);
			collectionsQueue.Enqueue(this._lookupCollectionViaCallUpload_);
			collectionsQueue.Enqueue(this._lookupCollectionViaCorporateUpload);
			collectionsQueue.Enqueue(this._lookupCollectionViaCallUpload);
			collectionsQueue.Enqueue(this._lookupCollectionViaAccount_);
			collectionsQueue.Enqueue(this._lookupCollectionViaCustomerActivityTypeUpload_);
			collectionsQueue.Enqueue(this._lookupCollectionViaAccount);
			collectionsQueue.Enqueue(this._lookupCollectionViaAccount_______);
			collectionsQueue.Enqueue(this._lookupCollectionViaCorporateUpload__);
			collectionsQueue.Enqueue(this._lookupCollectionViaCustomerActivityTypeUpload);
			collectionsQueue.Enqueue(this._lookupCollectionViaAccount________);
			collectionsQueue.Enqueue(this._medicalVendorTypeCollectionViaMedicalVendorProfile);
			collectionsQueue.Enqueue(this._medicalVendorTypeCollectionViaMedicalVendorProfile_);
			collectionsQueue.Enqueue(this._mvuserClassificationCollectionViaPhysicianProfile_);
			collectionsQueue.Enqueue(this._mvuserClassificationCollectionViaPhysicianProfile);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaMergeCustomerUpload);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaCustomerActivityTypeUpload_);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaMergeCustomerUpload_);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaMedicationUpload_);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaStaffEventScheduleUpload_);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaStaffEventScheduleUpload);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaSuspectConditionUpload_);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaSuspectConditionUpload);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaRapsUpload_);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaParticipationConsentSignature_);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaParticipationConsentSignature);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaRapsUpload);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaPhysicianRecordRequestSignature);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaFluConsentSignature);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaCorporateUpload);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaCallUpload_);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaEligibilityUpload);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaEventCustomerGiftCard_);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaEligibilityUpload_);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaChaperoneSignature_);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaExitInterviewSignature);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaCorporateUpload__);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaExportableReportsQueue);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaChaperoneSignature);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaEventCustomerGiftCard);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaFluConsentSignature_);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaMedicationUpload);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaCustomerActivityTypeUpload);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaCallUpload);
			collectionsQueue.Enqueue(this._organizationRoleUserCollectionViaCorporateUpload_);
			collectionsQueue.Enqueue(this._organizationTypeCollectionViaOrganization);
			collectionsQueue.Enqueue(this._organizationTypeCollectionViaOrganization_);
			collectionsQueue.Enqueue(this._physicianSpecializationCollectionViaPhysicianProfile_);
			collectionsQueue.Enqueue(this._physicianSpecializationCollectionViaPhysicianProfile);
			collectionsQueue.Enqueue(this._prospectsCollectionViaAccount);
			collectionsQueue.Enqueue(this._prospectsCollectionViaAccount________);
			collectionsQueue.Enqueue(this._prospectsCollectionViaAccount__);
			collectionsQueue.Enqueue(this._prospectsCollectionViaAccount_);
			collectionsQueue.Enqueue(this._prospectsCollectionViaAccount______);
			collectionsQueue.Enqueue(this._prospectsCollectionViaAccount____);
			collectionsQueue.Enqueue(this._prospectsCollectionViaHostImage);
			collectionsQueue.Enqueue(this._prospectsCollectionViaAccount___);
			collectionsQueue.Enqueue(this._prospectsCollectionViaAccount_____);
			collectionsQueue.Enqueue(this._prospectsCollectionViaAccount_______);
			collectionsQueue.Enqueue(this._surveyTemplateCollectionViaAccount_______);
			collectionsQueue.Enqueue(this._surveyTemplateCollectionViaAccount________);
			collectionsQueue.Enqueue(this._surveyTemplateCollectionViaAccount);
			collectionsQueue.Enqueue(this._surveyTemplateCollectionViaAccount______);
			collectionsQueue.Enqueue(this._surveyTemplateCollectionViaAccount__);
			collectionsQueue.Enqueue(this._surveyTemplateCollectionViaAccount___);
			collectionsQueue.Enqueue(this._surveyTemplateCollectionViaAccount____);
			collectionsQueue.Enqueue(this._surveyTemplateCollectionViaAccount_);
			collectionsQueue.Enqueue(this._surveyTemplateCollectionViaAccount_____);
		}
		
		/// <summary>Gets the member collections queue from the queue (base first)</summary>
		/// <param name="collectionsQueue">The collections queue.</param>
		protected override void GetFromMemberEntityCollectionsQueue(Queue<IEntityCollection2> collectionsQueue)
		{
			base.GetFromMemberEntityCollectionsQueue(collectionsQueue);
			this._account______ = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._account_____ = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._account________ = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._account_______ = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._account____ = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._account_ = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._account = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._account___ = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._account__ = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._callUpload_ = (EntityCollection<CallUploadEntity>) collectionsQueue.Dequeue();
			this._callUpload = (EntityCollection<CallUploadEntity>) collectionsQueue.Dequeue();
			this._chaperoneSignature_ = (EntityCollection<ChaperoneSignatureEntity>) collectionsQueue.Dequeue();
			this._chaperoneSignature = (EntityCollection<ChaperoneSignatureEntity>) collectionsQueue.Dequeue();
			this._corporateUpload_ = (EntityCollection<CorporateUploadEntity>) collectionsQueue.Dequeue();
			this._corporateUpload = (EntityCollection<CorporateUploadEntity>) collectionsQueue.Dequeue();
			this._corporateUpload__ = (EntityCollection<CorporateUploadEntity>) collectionsQueue.Dequeue();
			this._customerActivityTypeUpload_ = (EntityCollection<CustomerActivityTypeUploadEntity>) collectionsQueue.Dequeue();
			this._customerActivityTypeUpload = (EntityCollection<CustomerActivityTypeUploadEntity>) collectionsQueue.Dequeue();
			this._customerPhoneNumberUpdateUpload_ = (EntityCollection<CustomerPhoneNumberUpdateUploadEntity>) collectionsQueue.Dequeue();
			this._customerPhoneNumberUpdateUpload = (EntityCollection<CustomerPhoneNumberUpdateUploadEntity>) collectionsQueue.Dequeue();
			this._eligibilityUpload_ = (EntityCollection<EligibilityUploadEntity>) collectionsQueue.Dequeue();
			this._eligibilityUpload = (EntityCollection<EligibilityUploadEntity>) collectionsQueue.Dequeue();
			this._eventCustomerGiftCard_ = (EntityCollection<EventCustomerGiftCardEntity>) collectionsQueue.Dequeue();
			this._eventCustomerGiftCard = (EntityCollection<EventCustomerGiftCardEntity>) collectionsQueue.Dequeue();
			this._exitInterviewSignature = (EntityCollection<ExitInterviewSignatureEntity>) collectionsQueue.Dequeue();
			this._exportableReportsQueue = (EntityCollection<ExportableReportsQueueEntity>) collectionsQueue.Dequeue();
			this._fluConsentSignature_ = (EntityCollection<FluConsentSignatureEntity>) collectionsQueue.Dequeue();
			this._fluConsentSignature = (EntityCollection<FluConsentSignatureEntity>) collectionsQueue.Dequeue();
			this._healthPlanCriteriaAssignmentUpload = (EntityCollection<HealthPlanCriteriaAssignmentUploadEntity>) collectionsQueue.Dequeue();
			this._hostImage = (EntityCollection<HostImageEntity>) collectionsQueue.Dequeue();
			this._medicalVendorProfile_ = (EntityCollection<MedicalVendorProfileEntity>) collectionsQueue.Dequeue();
			this._medicalVendorProfile = (EntityCollection<MedicalVendorProfileEntity>) collectionsQueue.Dequeue();
			this._medicationUpload_ = (EntityCollection<MedicationUploadEntity>) collectionsQueue.Dequeue();
			this._medicationUpload = (EntityCollection<MedicationUploadEntity>) collectionsQueue.Dequeue();
			this._mergeCustomerUpload_ = (EntityCollection<MergeCustomerUploadEntity>) collectionsQueue.Dequeue();
			this._mergeCustomerUpload = (EntityCollection<MergeCustomerUploadEntity>) collectionsQueue.Dequeue();
			this._organization_ = (EntityCollection<OrganizationEntity>) collectionsQueue.Dequeue();
			this._organization = (EntityCollection<OrganizationEntity>) collectionsQueue.Dequeue();
			this._outboundUpload_ = (EntityCollection<OutboundUploadEntity>) collectionsQueue.Dequeue();
			this._outboundUpload = (EntityCollection<OutboundUploadEntity>) collectionsQueue.Dequeue();
			this._package = (EntityCollection<PackageEntity>) collectionsQueue.Dequeue();
			this._participationConsentSignature_ = (EntityCollection<ParticipationConsentSignatureEntity>) collectionsQueue.Dequeue();
			this._participationConsentSignature = (EntityCollection<ParticipationConsentSignatureEntity>) collectionsQueue.Dequeue();
			this._physicianProfile_ = (EntityCollection<PhysicianProfileEntity>) collectionsQueue.Dequeue();
			this._physicianProfile = (EntityCollection<PhysicianProfileEntity>) collectionsQueue.Dequeue();
			this._physicianRecordRequestSignature = (EntityCollection<PhysicianRecordRequestSignatureEntity>) collectionsQueue.Dequeue();
			this._rapsUpload_ = (EntityCollection<RapsUploadEntity>) collectionsQueue.Dequeue();
			this._rapsUpload = (EntityCollection<RapsUploadEntity>) collectionsQueue.Dequeue();
			this._resultArchiveUpload = (EntityCollection<ResultArchiveUploadEntity>) collectionsQueue.Dequeue();
			this._staffEventScheduleUpload_ = (EntityCollection<StaffEventScheduleUploadEntity>) collectionsQueue.Dequeue();
			this._staffEventScheduleUpload = (EntityCollection<StaffEventScheduleUploadEntity>) collectionsQueue.Dequeue();
			this._suspectConditionUpload_ = (EntityCollection<SuspectConditionUploadEntity>) collectionsQueue.Dequeue();
			this._suspectConditionUpload = (EntityCollection<SuspectConditionUploadEntity>) collectionsQueue.Dequeue();
			this._testimonial = (EntityCollection<TestimonialEntity>) collectionsQueue.Dequeue();
			this._testMedia = (EntityCollection<TestMediaEntity>) collectionsQueue.Dequeue();
			this._wellMedAttestation = (EntityCollection<WellMedAttestationEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaEligibilityUpload_ = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaCorporateUpload = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaCorporateUpload__ = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaCorporateUpload_ = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaEligibilityUpload = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._addressCollectionViaOrganization_ = (EntityCollection<AddressEntity>) collectionsQueue.Dequeue();
			this._addressCollectionViaOrganization = (EntityCollection<AddressEntity>) collectionsQueue.Dequeue();
			this._checkListQuestionCollectionViaExitInterviewSignature = (EntityCollection<CheckListQuestionEntity>) collectionsQueue.Dequeue();
			this._checkListTemplateCollectionViaAccount_________________ = (EntityCollection<CheckListTemplateEntity>) collectionsQueue.Dequeue();
			this._checkListTemplateCollectionViaAccount_____ = (EntityCollection<CheckListTemplateEntity>) collectionsQueue.Dequeue();
			this._checkListTemplateCollectionViaAccount____ = (EntityCollection<CheckListTemplateEntity>) collectionsQueue.Dequeue();
			this._checkListTemplateCollectionViaAccount_____________ = (EntityCollection<CheckListTemplateEntity>) collectionsQueue.Dequeue();
			this._checkListTemplateCollectionViaAccount______ = (EntityCollection<CheckListTemplateEntity>) collectionsQueue.Dequeue();
			this._checkListTemplateCollectionViaAccount_______ = (EntityCollection<CheckListTemplateEntity>) collectionsQueue.Dequeue();
			this._checkListTemplateCollectionViaAccount__________ = (EntityCollection<CheckListTemplateEntity>) collectionsQueue.Dequeue();
			this._checkListTemplateCollectionViaAccount_________ = (EntityCollection<CheckListTemplateEntity>) collectionsQueue.Dequeue();
			this._checkListTemplateCollectionViaAccount____________ = (EntityCollection<CheckListTemplateEntity>) collectionsQueue.Dequeue();
			this._checkListTemplateCollectionViaAccount___________ = (EntityCollection<CheckListTemplateEntity>) collectionsQueue.Dequeue();
			this._checkListTemplateCollectionViaAccount_______________ = (EntityCollection<CheckListTemplateEntity>) collectionsQueue.Dequeue();
			this._checkListTemplateCollectionViaAccount________________ = (EntityCollection<CheckListTemplateEntity>) collectionsQueue.Dequeue();
			this._checkListTemplateCollectionViaAccount________ = (EntityCollection<CheckListTemplateEntity>) collectionsQueue.Dequeue();
			this._checkListTemplateCollectionViaAccount______________ = (EntityCollection<CheckListTemplateEntity>) collectionsQueue.Dequeue();
			this._checkListTemplateCollectionViaAccount_ = (EntityCollection<CheckListTemplateEntity>) collectionsQueue.Dequeue();
			this._checkListTemplateCollectionViaAccount___ = (EntityCollection<CheckListTemplateEntity>) collectionsQueue.Dequeue();
			this._checkListTemplateCollectionViaAccount__ = (EntityCollection<CheckListTemplateEntity>) collectionsQueue.Dequeue();
			this._checkListTemplateCollectionViaAccount = (EntityCollection<CheckListTemplateEntity>) collectionsQueue.Dequeue();
			this._contractCollectionViaMedicalVendorProfile_ = (EntityCollection<ContractEntity>) collectionsQueue.Dequeue();
			this._contractCollectionViaMedicalVendorProfile = (EntityCollection<ContractEntity>) collectionsQueue.Dequeue();
			this._customerEventScreeningTestsCollectionViaTestMedia = (EntityCollection<CustomerEventScreeningTestsEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaTestimonial = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount_________________ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount__________________ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount___________________ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount_____________________________ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount___________________________________ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount________________ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount___________________________ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount__________________________ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount_________________________ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount____________________________ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount______________________________ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount_______________________________ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount________________________________ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount_________________________________ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount__________________________________ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount____________________ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount_____________________ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount________________________ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount_______________________ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount______________________ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount__ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount___ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount____________ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount____ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount________ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount_______ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount___________ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount__________ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount_ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount_____ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount_________ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount______ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount______________ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount_______________ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._emailTemplateCollectionViaAccount_____________ = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._eventCustomerResultCollectionViaWellMedAttestation = (EntityCollection<EventCustomerResultEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaChaperoneSignature = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaFluConsentSignature = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaParticipationConsentSignature = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaFluConsentSignature_ = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaParticipationConsentSignature_ = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaExitInterviewSignature = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaEventCustomerGiftCard_ = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaChaperoneSignature_ = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaPhysicianRecordRequestSignature = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaEventCustomerGiftCard = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaResultArchiveUpload = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._exportableReportsCollectionViaExportableReportsQueue = (EntityCollection<ExportableReportsEntity>) collectionsQueue.Dequeue();
			this._fluConsentTemplateCollectionViaAccount______ = (EntityCollection<FluConsentTemplateEntity>) collectionsQueue.Dequeue();
			this._fluConsentTemplateCollectionViaAccount = (EntityCollection<FluConsentTemplateEntity>) collectionsQueue.Dequeue();
			this._fluConsentTemplateCollectionViaAccount________ = (EntityCollection<FluConsentTemplateEntity>) collectionsQueue.Dequeue();
			this._fluConsentTemplateCollectionViaAccount_______ = (EntityCollection<FluConsentTemplateEntity>) collectionsQueue.Dequeue();
			this._fluConsentTemplateCollectionViaAccount___ = (EntityCollection<FluConsentTemplateEntity>) collectionsQueue.Dequeue();
			this._fluConsentTemplateCollectionViaAccount_____ = (EntityCollection<FluConsentTemplateEntity>) collectionsQueue.Dequeue();
			this._fluConsentTemplateCollectionViaAccount__ = (EntityCollection<FluConsentTemplateEntity>) collectionsQueue.Dequeue();
			this._fluConsentTemplateCollectionViaAccount_ = (EntityCollection<FluConsentTemplateEntity>) collectionsQueue.Dequeue();
			this._fluConsentTemplateCollectionViaAccount____ = (EntityCollection<FluConsentTemplateEntity>) collectionsQueue.Dequeue();
			this._hafTemplateCollectionViaAccount________ = (EntityCollection<HafTemplateEntity>) collectionsQueue.Dequeue();
			this._hafTemplateCollectionViaAccount______ = (EntityCollection<HafTemplateEntity>) collectionsQueue.Dequeue();
			this._hafTemplateCollectionViaAccount__ = (EntityCollection<HafTemplateEntity>) collectionsQueue.Dequeue();
			this._hafTemplateCollectionViaAccount____ = (EntityCollection<HafTemplateEntity>) collectionsQueue.Dequeue();
			this._hafTemplateCollectionViaPackage = (EntityCollection<HafTemplateEntity>) collectionsQueue.Dequeue();
			this._hafTemplateCollectionViaAccount_ = (EntityCollection<HafTemplateEntity>) collectionsQueue.Dequeue();
			this._hafTemplateCollectionViaAccount_______ = (EntityCollection<HafTemplateEntity>) collectionsQueue.Dequeue();
			this._hafTemplateCollectionViaAccount_____ = (EntityCollection<HafTemplateEntity>) collectionsQueue.Dequeue();
			this._hafTemplateCollectionViaAccount = (EntityCollection<HafTemplateEntity>) collectionsQueue.Dequeue();
			this._hafTemplateCollectionViaAccount___ = (EntityCollection<HafTemplateEntity>) collectionsQueue.Dequeue();
			this._healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload = (EntityCollection<HealthPlanCallQueueCriteriaEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaStaffEventScheduleUpload_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaRapsUpload = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCustomerPhoneNumberUpdateUpload = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEligibilityUpload = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCustomerPhoneNumberUpdateUpload_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEligibilityUpload_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaStaffEventScheduleUpload = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaRapsUpload_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaMergeCustomerUpload_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaMergeCustomerUpload = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaMedicationUpload_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaOutboundUpload__ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaOutboundUpload = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaOutboundUpload___ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaPackage = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaSuspectConditionUpload_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaExportableReportsQueue = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaSuspectConditionUpload = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaMedicationUpload = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaHostImage = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaOutboundUpload_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaWellMedAttestation = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaAccount___ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaAccount______ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaAccount__ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCorporateUpload_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaAccount____ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaAccount_____ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCallUpload_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCorporateUpload = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCallUpload = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaAccount_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCustomerActivityTypeUpload_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaAccount = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaAccount_______ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCorporateUpload__ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCustomerActivityTypeUpload = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaAccount________ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._medicalVendorTypeCollectionViaMedicalVendorProfile = (EntityCollection<MedicalVendorTypeEntity>) collectionsQueue.Dequeue();
			this._medicalVendorTypeCollectionViaMedicalVendorProfile_ = (EntityCollection<MedicalVendorTypeEntity>) collectionsQueue.Dequeue();
			this._mvuserClassificationCollectionViaPhysicianProfile_ = (EntityCollection<MvuserClassificationEntity>) collectionsQueue.Dequeue();
			this._mvuserClassificationCollectionViaPhysicianProfile = (EntityCollection<MvuserClassificationEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaMergeCustomerUpload = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaCustomerActivityTypeUpload_ = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaMergeCustomerUpload_ = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaMedicationUpload_ = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaStaffEventScheduleUpload_ = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaStaffEventScheduleUpload = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaSuspectConditionUpload_ = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaSuspectConditionUpload = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaRapsUpload_ = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaParticipationConsentSignature_ = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaParticipationConsentSignature = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaRapsUpload = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaPhysicianRecordRequestSignature = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaFluConsentSignature = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaCorporateUpload = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaCallUpload_ = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaEligibilityUpload = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaEventCustomerGiftCard_ = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaEligibilityUpload_ = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaChaperoneSignature_ = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaExitInterviewSignature = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaCorporateUpload__ = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaExportableReportsQueue = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaChaperoneSignature = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaEventCustomerGiftCard = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_ = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaFluConsentSignature_ = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaMedicationUpload = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaCustomerActivityTypeUpload = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaCallUpload = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserCollectionViaCorporateUpload_ = (EntityCollection<OrganizationRoleUserEntity>) collectionsQueue.Dequeue();
			this._organizationTypeCollectionViaOrganization = (EntityCollection<OrganizationTypeEntity>) collectionsQueue.Dequeue();
			this._organizationTypeCollectionViaOrganization_ = (EntityCollection<OrganizationTypeEntity>) collectionsQueue.Dequeue();
			this._physicianSpecializationCollectionViaPhysicianProfile_ = (EntityCollection<PhysicianSpecializationEntity>) collectionsQueue.Dequeue();
			this._physicianSpecializationCollectionViaPhysicianProfile = (EntityCollection<PhysicianSpecializationEntity>) collectionsQueue.Dequeue();
			this._prospectsCollectionViaAccount = (EntityCollection<ProspectsEntity>) collectionsQueue.Dequeue();
			this._prospectsCollectionViaAccount________ = (EntityCollection<ProspectsEntity>) collectionsQueue.Dequeue();
			this._prospectsCollectionViaAccount__ = (EntityCollection<ProspectsEntity>) collectionsQueue.Dequeue();
			this._prospectsCollectionViaAccount_ = (EntityCollection<ProspectsEntity>) collectionsQueue.Dequeue();
			this._prospectsCollectionViaAccount______ = (EntityCollection<ProspectsEntity>) collectionsQueue.Dequeue();
			this._prospectsCollectionViaAccount____ = (EntityCollection<ProspectsEntity>) collectionsQueue.Dequeue();
			this._prospectsCollectionViaHostImage = (EntityCollection<ProspectsEntity>) collectionsQueue.Dequeue();
			this._prospectsCollectionViaAccount___ = (EntityCollection<ProspectsEntity>) collectionsQueue.Dequeue();
			this._prospectsCollectionViaAccount_____ = (EntityCollection<ProspectsEntity>) collectionsQueue.Dequeue();
			this._prospectsCollectionViaAccount_______ = (EntityCollection<ProspectsEntity>) collectionsQueue.Dequeue();
			this._surveyTemplateCollectionViaAccount_______ = (EntityCollection<SurveyTemplateEntity>) collectionsQueue.Dequeue();
			this._surveyTemplateCollectionViaAccount________ = (EntityCollection<SurveyTemplateEntity>) collectionsQueue.Dequeue();
			this._surveyTemplateCollectionViaAccount = (EntityCollection<SurveyTemplateEntity>) collectionsQueue.Dequeue();
			this._surveyTemplateCollectionViaAccount______ = (EntityCollection<SurveyTemplateEntity>) collectionsQueue.Dequeue();
			this._surveyTemplateCollectionViaAccount__ = (EntityCollection<SurveyTemplateEntity>) collectionsQueue.Dequeue();
			this._surveyTemplateCollectionViaAccount___ = (EntityCollection<SurveyTemplateEntity>) collectionsQueue.Dequeue();
			this._surveyTemplateCollectionViaAccount____ = (EntityCollection<SurveyTemplateEntity>) collectionsQueue.Dequeue();
			this._surveyTemplateCollectionViaAccount_ = (EntityCollection<SurveyTemplateEntity>) collectionsQueue.Dequeue();
			this._surveyTemplateCollectionViaAccount_____ = (EntityCollection<SurveyTemplateEntity>) collectionsQueue.Dequeue();
		}
		
		/// <summary>Determines whether the entity has populated member collections</summary>
		/// <returns>true if the entity has populated member collections.</returns>
		protected override bool HasPopulatedMemberEntityCollections()
		{
			if (this._account______ != null)
			{
				return true;
			}
			if (this._account_____ != null)
			{
				return true;
			}
			if (this._account________ != null)
			{
				return true;
			}
			if (this._account_______ != null)
			{
				return true;
			}
			if (this._account____ != null)
			{
				return true;
			}
			if (this._account_ != null)
			{
				return true;
			}
			if (this._account != null)
			{
				return true;
			}
			if (this._account___ != null)
			{
				return true;
			}
			if (this._account__ != null)
			{
				return true;
			}
			if (this._callUpload_ != null)
			{
				return true;
			}
			if (this._callUpload != null)
			{
				return true;
			}
			if (this._chaperoneSignature_ != null)
			{
				return true;
			}
			if (this._chaperoneSignature != null)
			{
				return true;
			}
			if (this._corporateUpload_ != null)
			{
				return true;
			}
			if (this._corporateUpload != null)
			{
				return true;
			}
			if (this._corporateUpload__ != null)
			{
				return true;
			}
			if (this._customerActivityTypeUpload_ != null)
			{
				return true;
			}
			if (this._customerActivityTypeUpload != null)
			{
				return true;
			}
			if (this._customerPhoneNumberUpdateUpload_ != null)
			{
				return true;
			}
			if (this._customerPhoneNumberUpdateUpload != null)
			{
				return true;
			}
			if (this._eligibilityUpload_ != null)
			{
				return true;
			}
			if (this._eligibilityUpload != null)
			{
				return true;
			}
			if (this._eventCustomerGiftCard_ != null)
			{
				return true;
			}
			if (this._eventCustomerGiftCard != null)
			{
				return true;
			}
			if (this._exitInterviewSignature != null)
			{
				return true;
			}
			if (this._exportableReportsQueue != null)
			{
				return true;
			}
			if (this._fluConsentSignature_ != null)
			{
				return true;
			}
			if (this._fluConsentSignature != null)
			{
				return true;
			}
			if (this._healthPlanCriteriaAssignmentUpload != null)
			{
				return true;
			}
			if (this._hostImage != null)
			{
				return true;
			}
			if (this._medicalVendorProfile_ != null)
			{
				return true;
			}
			if (this._medicalVendorProfile != null)
			{
				return true;
			}
			if (this._medicationUpload_ != null)
			{
				return true;
			}
			if (this._medicationUpload != null)
			{
				return true;
			}
			if (this._mergeCustomerUpload_ != null)
			{
				return true;
			}
			if (this._mergeCustomerUpload != null)
			{
				return true;
			}
			if (this._organization_ != null)
			{
				return true;
			}
			if (this._organization != null)
			{
				return true;
			}
			if (this._outboundUpload_ != null)
			{
				return true;
			}
			if (this._outboundUpload != null)
			{
				return true;
			}
			if (this._package != null)
			{
				return true;
			}
			if (this._participationConsentSignature_ != null)
			{
				return true;
			}
			if (this._participationConsentSignature != null)
			{
				return true;
			}
			if (this._physicianProfile_ != null)
			{
				return true;
			}
			if (this._physicianProfile != null)
			{
				return true;
			}
			if (this._physicianRecordRequestSignature != null)
			{
				return true;
			}
			if (this._rapsUpload_ != null)
			{
				return true;
			}
			if (this._rapsUpload != null)
			{
				return true;
			}
			if (this._resultArchiveUpload != null)
			{
				return true;
			}
			if (this._staffEventScheduleUpload_ != null)
			{
				return true;
			}
			if (this._staffEventScheduleUpload != null)
			{
				return true;
			}
			if (this._suspectConditionUpload_ != null)
			{
				return true;
			}
			if (this._suspectConditionUpload != null)
			{
				return true;
			}
			if (this._testimonial != null)
			{
				return true;
			}
			if (this._testMedia != null)
			{
				return true;
			}
			if (this._wellMedAttestation != null)
			{
				return true;
			}
			if (this._accountCollectionViaEligibilityUpload_ != null)
			{
				return true;
			}
			if (this._accountCollectionViaCorporateUpload != null)
			{
				return true;
			}
			if (this._accountCollectionViaCorporateUpload__ != null)
			{
				return true;
			}
			if (this._accountCollectionViaCorporateUpload_ != null)
			{
				return true;
			}
			if (this._accountCollectionViaEligibilityUpload != null)
			{
				return true;
			}
			if (this._addressCollectionViaOrganization_ != null)
			{
				return true;
			}
			if (this._addressCollectionViaOrganization != null)
			{
				return true;
			}
			if (this._checkListQuestionCollectionViaExitInterviewSignature != null)
			{
				return true;
			}
			if (this._checkListTemplateCollectionViaAccount_________________ != null)
			{
				return true;
			}
			if (this._checkListTemplateCollectionViaAccount_____ != null)
			{
				return true;
			}
			if (this._checkListTemplateCollectionViaAccount____ != null)
			{
				return true;
			}
			if (this._checkListTemplateCollectionViaAccount_____________ != null)
			{
				return true;
			}
			if (this._checkListTemplateCollectionViaAccount______ != null)
			{
				return true;
			}
			if (this._checkListTemplateCollectionViaAccount_______ != null)
			{
				return true;
			}
			if (this._checkListTemplateCollectionViaAccount__________ != null)
			{
				return true;
			}
			if (this._checkListTemplateCollectionViaAccount_________ != null)
			{
				return true;
			}
			if (this._checkListTemplateCollectionViaAccount____________ != null)
			{
				return true;
			}
			if (this._checkListTemplateCollectionViaAccount___________ != null)
			{
				return true;
			}
			if (this._checkListTemplateCollectionViaAccount_______________ != null)
			{
				return true;
			}
			if (this._checkListTemplateCollectionViaAccount________________ != null)
			{
				return true;
			}
			if (this._checkListTemplateCollectionViaAccount________ != null)
			{
				return true;
			}
			if (this._checkListTemplateCollectionViaAccount______________ != null)
			{
				return true;
			}
			if (this._checkListTemplateCollectionViaAccount_ != null)
			{
				return true;
			}
			if (this._checkListTemplateCollectionViaAccount___ != null)
			{
				return true;
			}
			if (this._checkListTemplateCollectionViaAccount__ != null)
			{
				return true;
			}
			if (this._checkListTemplateCollectionViaAccount != null)
			{
				return true;
			}
			if (this._contractCollectionViaMedicalVendorProfile_ != null)
			{
				return true;
			}
			if (this._contractCollectionViaMedicalVendorProfile != null)
			{
				return true;
			}
			if (this._customerEventScreeningTestsCollectionViaTestMedia != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaTestimonial != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount_________________ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount__________________ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount___________________ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount_____________________________ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount___________________________________ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount________________ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount___________________________ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount__________________________ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount_________________________ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount____________________________ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount______________________________ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount_______________________________ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount________________________________ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount_________________________________ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount__________________________________ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount____________________ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount_____________________ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount________________________ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount_______________________ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount______________________ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount__ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount___ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount____________ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount____ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount________ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount_______ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount___________ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount__________ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount_ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount_____ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount_________ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount______ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount______________ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount_______________ != null)
			{
				return true;
			}
			if (this._emailTemplateCollectionViaAccount_____________ != null)
			{
				return true;
			}
			if (this._eventCustomerResultCollectionViaWellMedAttestation != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaChaperoneSignature != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaFluConsentSignature != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaParticipationConsentSignature != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaFluConsentSignature_ != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaParticipationConsentSignature_ != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaExitInterviewSignature != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaEventCustomerGiftCard_ != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaChaperoneSignature_ != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaPhysicianRecordRequestSignature != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaEventCustomerGiftCard != null)
			{
				return true;
			}
			if (this._eventsCollectionViaResultArchiveUpload != null)
			{
				return true;
			}
			if (this._exportableReportsCollectionViaExportableReportsQueue != null)
			{
				return true;
			}
			if (this._fluConsentTemplateCollectionViaAccount______ != null)
			{
				return true;
			}
			if (this._fluConsentTemplateCollectionViaAccount != null)
			{
				return true;
			}
			if (this._fluConsentTemplateCollectionViaAccount________ != null)
			{
				return true;
			}
			if (this._fluConsentTemplateCollectionViaAccount_______ != null)
			{
				return true;
			}
			if (this._fluConsentTemplateCollectionViaAccount___ != null)
			{
				return true;
			}
			if (this._fluConsentTemplateCollectionViaAccount_____ != null)
			{
				return true;
			}
			if (this._fluConsentTemplateCollectionViaAccount__ != null)
			{
				return true;
			}
			if (this._fluConsentTemplateCollectionViaAccount_ != null)
			{
				return true;
			}
			if (this._fluConsentTemplateCollectionViaAccount____ != null)
			{
				return true;
			}
			if (this._hafTemplateCollectionViaAccount________ != null)
			{
				return true;
			}
			if (this._hafTemplateCollectionViaAccount______ != null)
			{
				return true;
			}
			if (this._hafTemplateCollectionViaAccount__ != null)
			{
				return true;
			}
			if (this._hafTemplateCollectionViaAccount____ != null)
			{
				return true;
			}
			if (this._hafTemplateCollectionViaPackage != null)
			{
				return true;
			}
			if (this._hafTemplateCollectionViaAccount_ != null)
			{
				return true;
			}
			if (this._hafTemplateCollectionViaAccount_______ != null)
			{
				return true;
			}
			if (this._hafTemplateCollectionViaAccount_____ != null)
			{
				return true;
			}
			if (this._hafTemplateCollectionViaAccount != null)
			{
				return true;
			}
			if (this._hafTemplateCollectionViaAccount___ != null)
			{
				return true;
			}
			if (this._healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload != null)
			{
				return true;
			}
			if (this._lookupCollectionViaStaffEventScheduleUpload_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaRapsUpload != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCustomerPhoneNumberUpdateUpload != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEligibilityUpload != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCustomerPhoneNumberUpdateUpload_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEligibilityUpload_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaStaffEventScheduleUpload != null)
			{
				return true;
			}
			if (this._lookupCollectionViaRapsUpload_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaMergeCustomerUpload_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaMergeCustomerUpload != null)
			{
				return true;
			}
			if (this._lookupCollectionViaMedicationUpload_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaOutboundUpload__ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaOutboundUpload != null)
			{
				return true;
			}
			if (this._lookupCollectionViaOutboundUpload___ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaPackage != null)
			{
				return true;
			}
			if (this._lookupCollectionViaSuspectConditionUpload_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaExportableReportsQueue != null)
			{
				return true;
			}
			if (this._lookupCollectionViaSuspectConditionUpload != null)
			{
				return true;
			}
			if (this._lookupCollectionViaMedicationUpload != null)
			{
				return true;
			}
			if (this._lookupCollectionViaHostImage != null)
			{
				return true;
			}
			if (this._lookupCollectionViaOutboundUpload_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaWellMedAttestation != null)
			{
				return true;
			}
			if (this._lookupCollectionViaAccount___ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaAccount______ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaAccount__ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCorporateUpload_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaAccount____ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaAccount_____ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCallUpload_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCorporateUpload != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCallUpload != null)
			{
				return true;
			}
			if (this._lookupCollectionViaAccount_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCustomerActivityTypeUpload_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaAccount != null)
			{
				return true;
			}
			if (this._lookupCollectionViaAccount_______ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCorporateUpload__ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCustomerActivityTypeUpload != null)
			{
				return true;
			}
			if (this._lookupCollectionViaAccount________ != null)
			{
				return true;
			}
			if (this._medicalVendorTypeCollectionViaMedicalVendorProfile != null)
			{
				return true;
			}
			if (this._medicalVendorTypeCollectionViaMedicalVendorProfile_ != null)
			{
				return true;
			}
			if (this._mvuserClassificationCollectionViaPhysicianProfile_ != null)
			{
				return true;
			}
			if (this._mvuserClassificationCollectionViaPhysicianProfile != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaMergeCustomerUpload != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaCustomerActivityTypeUpload_ != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaMergeCustomerUpload_ != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaMedicationUpload_ != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaStaffEventScheduleUpload_ != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaStaffEventScheduleUpload != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaSuspectConditionUpload_ != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaSuspectConditionUpload != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaRapsUpload_ != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaParticipationConsentSignature_ != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaParticipationConsentSignature != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaRapsUpload != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaPhysicianRecordRequestSignature != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaFluConsentSignature != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaCorporateUpload != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaCallUpload_ != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaEligibilityUpload != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaEventCustomerGiftCard_ != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaEligibilityUpload_ != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaChaperoneSignature_ != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaExitInterviewSignature != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaCorporateUpload__ != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaExportableReportsQueue != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaChaperoneSignature != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaEventCustomerGiftCard != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_ != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaFluConsentSignature_ != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaMedicationUpload != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaCustomerActivityTypeUpload != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaCallUpload != null)
			{
				return true;
			}
			if (this._organizationRoleUserCollectionViaCorporateUpload_ != null)
			{
				return true;
			}
			if (this._organizationTypeCollectionViaOrganization != null)
			{
				return true;
			}
			if (this._organizationTypeCollectionViaOrganization_ != null)
			{
				return true;
			}
			if (this._physicianSpecializationCollectionViaPhysicianProfile_ != null)
			{
				return true;
			}
			if (this._physicianSpecializationCollectionViaPhysicianProfile != null)
			{
				return true;
			}
			if (this._prospectsCollectionViaAccount != null)
			{
				return true;
			}
			if (this._prospectsCollectionViaAccount________ != null)
			{
				return true;
			}
			if (this._prospectsCollectionViaAccount__ != null)
			{
				return true;
			}
			if (this._prospectsCollectionViaAccount_ != null)
			{
				return true;
			}
			if (this._prospectsCollectionViaAccount______ != null)
			{
				return true;
			}
			if (this._prospectsCollectionViaAccount____ != null)
			{
				return true;
			}
			if (this._prospectsCollectionViaHostImage != null)
			{
				return true;
			}
			if (this._prospectsCollectionViaAccount___ != null)
			{
				return true;
			}
			if (this._prospectsCollectionViaAccount_____ != null)
			{
				return true;
			}
			if (this._prospectsCollectionViaAccount_______ != null)
			{
				return true;
			}
			if (this._surveyTemplateCollectionViaAccount_______ != null)
			{
				return true;
			}
			if (this._surveyTemplateCollectionViaAccount________ != null)
			{
				return true;
			}
			if (this._surveyTemplateCollectionViaAccount != null)
			{
				return true;
			}
			if (this._surveyTemplateCollectionViaAccount______ != null)
			{
				return true;
			}
			if (this._surveyTemplateCollectionViaAccount__ != null)
			{
				return true;
			}
			if (this._surveyTemplateCollectionViaAccount___ != null)
			{
				return true;
			}
			if (this._surveyTemplateCollectionViaAccount____ != null)
			{
				return true;
			}
			if (this._surveyTemplateCollectionViaAccount_ != null)
			{
				return true;
			}
			if (this._surveyTemplateCollectionViaAccount_____ != null)
			{
				return true;
			}
			return base.HasPopulatedMemberEntityCollections();
		}
		
		/// <summary>Creates the member entity collections queue.</summary>
		/// <param name="collectionsQueue">The collections queue.</param>
		/// <param name="requiredQueue">The required queue.</param>
		protected override void CreateMemberEntityCollectionsQueue(Queue<IEntityCollection2> collectionsQueue, Queue<bool> requiredQueue) 
		{
			base.CreateMemberEntityCollectionsQueue(collectionsQueue, requiredQueue);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ChaperoneSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ChaperoneSignatureEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ChaperoneSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ChaperoneSignatureEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CorporateUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CorporateUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CorporateUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CorporateUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CorporateUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CorporateUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerActivityTypeUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerActivityTypeUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerActivityTypeUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerActivityTypeUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerPhoneNumberUpdateUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerPhoneNumberUpdateUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerPhoneNumberUpdateUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerPhoneNumberUpdateUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EligibilityUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EligibilityUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EligibilityUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EligibilityUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerGiftCardEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerGiftCardEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerGiftCardEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerGiftCardEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ExitInterviewSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExitInterviewSignatureEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ExportableReportsQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExportableReportsQueueEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FluConsentSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentSignatureEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FluConsentSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentSignatureEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HealthPlanCriteriaAssignmentUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCriteriaAssignmentUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HostImageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HostImageEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<MedicalVendorProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicalVendorProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<MedicalVendorProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicalVendorProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<MedicationUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicationUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<MedicationUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicationUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<MergeCustomerUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MergeCustomerUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<MergeCustomerUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MergeCustomerUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OutboundUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OutboundUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OutboundUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OutboundUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PackageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PackageEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ParticipationConsentSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ParticipationConsentSignatureEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ParticipationConsentSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ParticipationConsentSignatureEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PhysicianProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PhysicianProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PhysicianProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PhysicianProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PhysicianRecordRequestSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PhysicianRecordRequestSignatureEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<RapsUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RapsUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<RapsUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RapsUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ResultArchiveUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ResultArchiveUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<StaffEventScheduleUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(StaffEventScheduleUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<StaffEventScheduleUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(StaffEventScheduleUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<SuspectConditionUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SuspectConditionUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<SuspectConditionUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SuspectConditionUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestimonialEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestimonialEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestMediaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestMediaEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<WellMedAttestationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(WellMedAttestationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CheckListQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListQuestionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ContractEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContractEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ContractEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContractEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ExportableReportsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExportableReportsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HealthPlanCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCallQueueCriteriaEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<MedicalVendorTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicalVendorTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<MedicalVendorTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicalVendorTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<MvuserClassificationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MvuserClassificationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<MvuserClassificationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MvuserClassificationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PhysicianSpecializationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PhysicianSpecializationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PhysicianSpecializationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PhysicianSpecializationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory))) : null);
		}
#endif
		/// <summary>
		/// Gets all related data objects, stored by name. The name is the field name mapped onto the relation for that particular data element. 
		/// </summary>
		/// <returns>Dictionary with per name the related referenced data element, which can be an entity collection or an entity or null</returns>
		public override Dictionary<string, object> GetRelatedData()
		{
			Dictionary<string, object> toReturn = new Dictionary<string, object>();
			toReturn.Add("Lookup", _lookup);
			toReturn.Add("OrganizationRoleUser", _organizationRoleUser);
			toReturn.Add("Account______", _account______);
			toReturn.Add("Account_____", _account_____);
			toReturn.Add("Account________", _account________);
			toReturn.Add("Account_______", _account_______);
			toReturn.Add("Account____", _account____);
			toReturn.Add("Account_", _account_);
			toReturn.Add("Account", _account);
			toReturn.Add("Account___", _account___);
			toReturn.Add("Account__", _account__);
			toReturn.Add("CallUpload_", _callUpload_);
			toReturn.Add("CallUpload", _callUpload);
			toReturn.Add("ChaperoneSignature_", _chaperoneSignature_);
			toReturn.Add("ChaperoneSignature", _chaperoneSignature);
			toReturn.Add("CorporateUpload_", _corporateUpload_);
			toReturn.Add("CorporateUpload", _corporateUpload);
			toReturn.Add("CorporateUpload__", _corporateUpload__);
			toReturn.Add("CustomerActivityTypeUpload_", _customerActivityTypeUpload_);
			toReturn.Add("CustomerActivityTypeUpload", _customerActivityTypeUpload);
			toReturn.Add("CustomerPhoneNumberUpdateUpload_", _customerPhoneNumberUpdateUpload_);
			toReturn.Add("CustomerPhoneNumberUpdateUpload", _customerPhoneNumberUpdateUpload);
			toReturn.Add("EligibilityUpload_", _eligibilityUpload_);
			toReturn.Add("EligibilityUpload", _eligibilityUpload);
			toReturn.Add("EventCustomerGiftCard_", _eventCustomerGiftCard_);
			toReturn.Add("EventCustomerGiftCard", _eventCustomerGiftCard);
			toReturn.Add("ExitInterviewSignature", _exitInterviewSignature);
			toReturn.Add("ExportableReportsQueue", _exportableReportsQueue);
			toReturn.Add("FluConsentSignature_", _fluConsentSignature_);
			toReturn.Add("FluConsentSignature", _fluConsentSignature);
			toReturn.Add("HealthPlanCriteriaAssignmentUpload", _healthPlanCriteriaAssignmentUpload);
			toReturn.Add("HostImage", _hostImage);
			toReturn.Add("MedicalVendorProfile_", _medicalVendorProfile_);
			toReturn.Add("MedicalVendorProfile", _medicalVendorProfile);
			toReturn.Add("MedicationUpload_", _medicationUpload_);
			toReturn.Add("MedicationUpload", _medicationUpload);
			toReturn.Add("MergeCustomerUpload_", _mergeCustomerUpload_);
			toReturn.Add("MergeCustomerUpload", _mergeCustomerUpload);
			toReturn.Add("Organization_", _organization_);
			toReturn.Add("Organization", _organization);
			toReturn.Add("OutboundUpload_", _outboundUpload_);
			toReturn.Add("OutboundUpload", _outboundUpload);
			toReturn.Add("Package", _package);
			toReturn.Add("ParticipationConsentSignature_", _participationConsentSignature_);
			toReturn.Add("ParticipationConsentSignature", _participationConsentSignature);
			toReturn.Add("PhysicianProfile_", _physicianProfile_);
			toReturn.Add("PhysicianProfile", _physicianProfile);
			toReturn.Add("PhysicianRecordRequestSignature", _physicianRecordRequestSignature);
			toReturn.Add("RapsUpload_", _rapsUpload_);
			toReturn.Add("RapsUpload", _rapsUpload);
			toReturn.Add("ResultArchiveUpload", _resultArchiveUpload);
			toReturn.Add("StaffEventScheduleUpload_", _staffEventScheduleUpload_);
			toReturn.Add("StaffEventScheduleUpload", _staffEventScheduleUpload);
			toReturn.Add("SuspectConditionUpload_", _suspectConditionUpload_);
			toReturn.Add("SuspectConditionUpload", _suspectConditionUpload);
			toReturn.Add("Testimonial", _testimonial);
			toReturn.Add("TestMedia", _testMedia);
			toReturn.Add("WellMedAttestation", _wellMedAttestation);
			toReturn.Add("AccountCollectionViaEligibilityUpload_", _accountCollectionViaEligibilityUpload_);
			toReturn.Add("AccountCollectionViaCorporateUpload", _accountCollectionViaCorporateUpload);
			toReturn.Add("AccountCollectionViaCorporateUpload__", _accountCollectionViaCorporateUpload__);
			toReturn.Add("AccountCollectionViaCorporateUpload_", _accountCollectionViaCorporateUpload_);
			toReturn.Add("AccountCollectionViaEligibilityUpload", _accountCollectionViaEligibilityUpload);
			toReturn.Add("AddressCollectionViaOrganization_", _addressCollectionViaOrganization_);
			toReturn.Add("AddressCollectionViaOrganization", _addressCollectionViaOrganization);
			toReturn.Add("CheckListQuestionCollectionViaExitInterviewSignature", _checkListQuestionCollectionViaExitInterviewSignature);
			toReturn.Add("CheckListTemplateCollectionViaAccount_________________", _checkListTemplateCollectionViaAccount_________________);
			toReturn.Add("CheckListTemplateCollectionViaAccount_____", _checkListTemplateCollectionViaAccount_____);
			toReturn.Add("CheckListTemplateCollectionViaAccount____", _checkListTemplateCollectionViaAccount____);
			toReturn.Add("CheckListTemplateCollectionViaAccount_____________", _checkListTemplateCollectionViaAccount_____________);
			toReturn.Add("CheckListTemplateCollectionViaAccount______", _checkListTemplateCollectionViaAccount______);
			toReturn.Add("CheckListTemplateCollectionViaAccount_______", _checkListTemplateCollectionViaAccount_______);
			toReturn.Add("CheckListTemplateCollectionViaAccount__________", _checkListTemplateCollectionViaAccount__________);
			toReturn.Add("CheckListTemplateCollectionViaAccount_________", _checkListTemplateCollectionViaAccount_________);
			toReturn.Add("CheckListTemplateCollectionViaAccount____________", _checkListTemplateCollectionViaAccount____________);
			toReturn.Add("CheckListTemplateCollectionViaAccount___________", _checkListTemplateCollectionViaAccount___________);
			toReturn.Add("CheckListTemplateCollectionViaAccount_______________", _checkListTemplateCollectionViaAccount_______________);
			toReturn.Add("CheckListTemplateCollectionViaAccount________________", _checkListTemplateCollectionViaAccount________________);
			toReturn.Add("CheckListTemplateCollectionViaAccount________", _checkListTemplateCollectionViaAccount________);
			toReturn.Add("CheckListTemplateCollectionViaAccount______________", _checkListTemplateCollectionViaAccount______________);
			toReturn.Add("CheckListTemplateCollectionViaAccount_", _checkListTemplateCollectionViaAccount_);
			toReturn.Add("CheckListTemplateCollectionViaAccount___", _checkListTemplateCollectionViaAccount___);
			toReturn.Add("CheckListTemplateCollectionViaAccount__", _checkListTemplateCollectionViaAccount__);
			toReturn.Add("CheckListTemplateCollectionViaAccount", _checkListTemplateCollectionViaAccount);
			toReturn.Add("ContractCollectionViaMedicalVendorProfile_", _contractCollectionViaMedicalVendorProfile_);
			toReturn.Add("ContractCollectionViaMedicalVendorProfile", _contractCollectionViaMedicalVendorProfile);
			toReturn.Add("CustomerEventScreeningTestsCollectionViaTestMedia", _customerEventScreeningTestsCollectionViaTestMedia);
			toReturn.Add("CustomerProfileCollectionViaTestimonial", _customerProfileCollectionViaTestimonial);
			toReturn.Add("EmailTemplateCollectionViaAccount_________________", _emailTemplateCollectionViaAccount_________________);
			toReturn.Add("EmailTemplateCollectionViaAccount__________________", _emailTemplateCollectionViaAccount__________________);
			toReturn.Add("EmailTemplateCollectionViaAccount___________________", _emailTemplateCollectionViaAccount___________________);
			toReturn.Add("EmailTemplateCollectionViaAccount_____________________________", _emailTemplateCollectionViaAccount_____________________________);
			toReturn.Add("EmailTemplateCollectionViaAccount___________________________________", _emailTemplateCollectionViaAccount___________________________________);
			toReturn.Add("EmailTemplateCollectionViaAccount________________", _emailTemplateCollectionViaAccount________________);
			toReturn.Add("EmailTemplateCollectionViaAccount___________________________", _emailTemplateCollectionViaAccount___________________________);
			toReturn.Add("EmailTemplateCollectionViaAccount__________________________", _emailTemplateCollectionViaAccount__________________________);
			toReturn.Add("EmailTemplateCollectionViaAccount_________________________", _emailTemplateCollectionViaAccount_________________________);
			toReturn.Add("EmailTemplateCollectionViaAccount____________________________", _emailTemplateCollectionViaAccount____________________________);
			toReturn.Add("EmailTemplateCollectionViaAccount______________________________", _emailTemplateCollectionViaAccount______________________________);
			toReturn.Add("EmailTemplateCollectionViaAccount_______________________________", _emailTemplateCollectionViaAccount_______________________________);
			toReturn.Add("EmailTemplateCollectionViaAccount________________________________", _emailTemplateCollectionViaAccount________________________________);
			toReturn.Add("EmailTemplateCollectionViaAccount_________________________________", _emailTemplateCollectionViaAccount_________________________________);
			toReturn.Add("EmailTemplateCollectionViaAccount__________________________________", _emailTemplateCollectionViaAccount__________________________________);
			toReturn.Add("EmailTemplateCollectionViaAccount____________________", _emailTemplateCollectionViaAccount____________________);
			toReturn.Add("EmailTemplateCollectionViaAccount_____________________", _emailTemplateCollectionViaAccount_____________________);
			toReturn.Add("EmailTemplateCollectionViaAccount________________________", _emailTemplateCollectionViaAccount________________________);
			toReturn.Add("EmailTemplateCollectionViaAccount_______________________", _emailTemplateCollectionViaAccount_______________________);
			toReturn.Add("EmailTemplateCollectionViaAccount______________________", _emailTemplateCollectionViaAccount______________________);
			toReturn.Add("EmailTemplateCollectionViaAccount__", _emailTemplateCollectionViaAccount__);
			toReturn.Add("EmailTemplateCollectionViaAccount___", _emailTemplateCollectionViaAccount___);
			toReturn.Add("EmailTemplateCollectionViaAccount____________", _emailTemplateCollectionViaAccount____________);
			toReturn.Add("EmailTemplateCollectionViaAccount____", _emailTemplateCollectionViaAccount____);
			toReturn.Add("EmailTemplateCollectionViaAccount________", _emailTemplateCollectionViaAccount________);
			toReturn.Add("EmailTemplateCollectionViaAccount_______", _emailTemplateCollectionViaAccount_______);
			toReturn.Add("EmailTemplateCollectionViaAccount___________", _emailTemplateCollectionViaAccount___________);
			toReturn.Add("EmailTemplateCollectionViaAccount__________", _emailTemplateCollectionViaAccount__________);
			toReturn.Add("EmailTemplateCollectionViaAccount_", _emailTemplateCollectionViaAccount_);
			toReturn.Add("EmailTemplateCollectionViaAccount_____", _emailTemplateCollectionViaAccount_____);
			toReturn.Add("EmailTemplateCollectionViaAccount", _emailTemplateCollectionViaAccount);
			toReturn.Add("EmailTemplateCollectionViaAccount_________", _emailTemplateCollectionViaAccount_________);
			toReturn.Add("EmailTemplateCollectionViaAccount______", _emailTemplateCollectionViaAccount______);
			toReturn.Add("EmailTemplateCollectionViaAccount______________", _emailTemplateCollectionViaAccount______________);
			toReturn.Add("EmailTemplateCollectionViaAccount_______________", _emailTemplateCollectionViaAccount_______________);
			toReturn.Add("EmailTemplateCollectionViaAccount_____________", _emailTemplateCollectionViaAccount_____________);
			toReturn.Add("EventCustomerResultCollectionViaWellMedAttestation", _eventCustomerResultCollectionViaWellMedAttestation);
			toReturn.Add("EventCustomersCollectionViaChaperoneSignature", _eventCustomersCollectionViaChaperoneSignature);
			toReturn.Add("EventCustomersCollectionViaFluConsentSignature", _eventCustomersCollectionViaFluConsentSignature);
			toReturn.Add("EventCustomersCollectionViaParticipationConsentSignature", _eventCustomersCollectionViaParticipationConsentSignature);
			toReturn.Add("EventCustomersCollectionViaFluConsentSignature_", _eventCustomersCollectionViaFluConsentSignature_);
			toReturn.Add("EventCustomersCollectionViaParticipationConsentSignature_", _eventCustomersCollectionViaParticipationConsentSignature_);
			toReturn.Add("EventCustomersCollectionViaExitInterviewSignature", _eventCustomersCollectionViaExitInterviewSignature);
			toReturn.Add("EventCustomersCollectionViaEventCustomerGiftCard_", _eventCustomersCollectionViaEventCustomerGiftCard_);
			toReturn.Add("EventCustomersCollectionViaChaperoneSignature_", _eventCustomersCollectionViaChaperoneSignature_);
			toReturn.Add("EventCustomersCollectionViaPhysicianRecordRequestSignature", _eventCustomersCollectionViaPhysicianRecordRequestSignature);
			toReturn.Add("EventCustomersCollectionViaEventCustomerGiftCard", _eventCustomersCollectionViaEventCustomerGiftCard);
			toReturn.Add("EventsCollectionViaResultArchiveUpload", _eventsCollectionViaResultArchiveUpload);
			toReturn.Add("ExportableReportsCollectionViaExportableReportsQueue", _exportableReportsCollectionViaExportableReportsQueue);
			toReturn.Add("FluConsentTemplateCollectionViaAccount______", _fluConsentTemplateCollectionViaAccount______);
			toReturn.Add("FluConsentTemplateCollectionViaAccount", _fluConsentTemplateCollectionViaAccount);
			toReturn.Add("FluConsentTemplateCollectionViaAccount________", _fluConsentTemplateCollectionViaAccount________);
			toReturn.Add("FluConsentTemplateCollectionViaAccount_______", _fluConsentTemplateCollectionViaAccount_______);
			toReturn.Add("FluConsentTemplateCollectionViaAccount___", _fluConsentTemplateCollectionViaAccount___);
			toReturn.Add("FluConsentTemplateCollectionViaAccount_____", _fluConsentTemplateCollectionViaAccount_____);
			toReturn.Add("FluConsentTemplateCollectionViaAccount__", _fluConsentTemplateCollectionViaAccount__);
			toReturn.Add("FluConsentTemplateCollectionViaAccount_", _fluConsentTemplateCollectionViaAccount_);
			toReturn.Add("FluConsentTemplateCollectionViaAccount____", _fluConsentTemplateCollectionViaAccount____);
			toReturn.Add("HafTemplateCollectionViaAccount________", _hafTemplateCollectionViaAccount________);
			toReturn.Add("HafTemplateCollectionViaAccount______", _hafTemplateCollectionViaAccount______);
			toReturn.Add("HafTemplateCollectionViaAccount__", _hafTemplateCollectionViaAccount__);
			toReturn.Add("HafTemplateCollectionViaAccount____", _hafTemplateCollectionViaAccount____);
			toReturn.Add("HafTemplateCollectionViaPackage", _hafTemplateCollectionViaPackage);
			toReturn.Add("HafTemplateCollectionViaAccount_", _hafTemplateCollectionViaAccount_);
			toReturn.Add("HafTemplateCollectionViaAccount_______", _hafTemplateCollectionViaAccount_______);
			toReturn.Add("HafTemplateCollectionViaAccount_____", _hafTemplateCollectionViaAccount_____);
			toReturn.Add("HafTemplateCollectionViaAccount", _hafTemplateCollectionViaAccount);
			toReturn.Add("HafTemplateCollectionViaAccount___", _hafTemplateCollectionViaAccount___);
			toReturn.Add("HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload", _healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload);
			toReturn.Add("LookupCollectionViaStaffEventScheduleUpload_", _lookupCollectionViaStaffEventScheduleUpload_);
			toReturn.Add("LookupCollectionViaRapsUpload", _lookupCollectionViaRapsUpload);
			toReturn.Add("LookupCollectionViaCustomerPhoneNumberUpdateUpload", _lookupCollectionViaCustomerPhoneNumberUpdateUpload);
			toReturn.Add("LookupCollectionViaEligibilityUpload", _lookupCollectionViaEligibilityUpload);
			toReturn.Add("LookupCollectionViaCustomerPhoneNumberUpdateUpload_", _lookupCollectionViaCustomerPhoneNumberUpdateUpload_);
			toReturn.Add("LookupCollectionViaEligibilityUpload_", _lookupCollectionViaEligibilityUpload_);
			toReturn.Add("LookupCollectionViaStaffEventScheduleUpload", _lookupCollectionViaStaffEventScheduleUpload);
			toReturn.Add("LookupCollectionViaRapsUpload_", _lookupCollectionViaRapsUpload_);
			toReturn.Add("LookupCollectionViaMergeCustomerUpload_", _lookupCollectionViaMergeCustomerUpload_);
			toReturn.Add("LookupCollectionViaMergeCustomerUpload", _lookupCollectionViaMergeCustomerUpload);
			toReturn.Add("LookupCollectionViaMedicationUpload_", _lookupCollectionViaMedicationUpload_);
			toReturn.Add("LookupCollectionViaOutboundUpload__", _lookupCollectionViaOutboundUpload__);
			toReturn.Add("LookupCollectionViaOutboundUpload", _lookupCollectionViaOutboundUpload);
			toReturn.Add("LookupCollectionViaOutboundUpload___", _lookupCollectionViaOutboundUpload___);
			toReturn.Add("LookupCollectionViaPackage", _lookupCollectionViaPackage);
			toReturn.Add("LookupCollectionViaSuspectConditionUpload_", _lookupCollectionViaSuspectConditionUpload_);
			toReturn.Add("LookupCollectionViaExportableReportsQueue", _lookupCollectionViaExportableReportsQueue);
			toReturn.Add("LookupCollectionViaSuspectConditionUpload", _lookupCollectionViaSuspectConditionUpload);
			toReturn.Add("LookupCollectionViaMedicationUpload", _lookupCollectionViaMedicationUpload);
			toReturn.Add("LookupCollectionViaHostImage", _lookupCollectionViaHostImage);
			toReturn.Add("LookupCollectionViaOutboundUpload_", _lookupCollectionViaOutboundUpload_);
			toReturn.Add("LookupCollectionViaWellMedAttestation", _lookupCollectionViaWellMedAttestation);
			toReturn.Add("LookupCollectionViaAccount___", _lookupCollectionViaAccount___);
			toReturn.Add("LookupCollectionViaAccount______", _lookupCollectionViaAccount______);
			toReturn.Add("LookupCollectionViaAccount__", _lookupCollectionViaAccount__);
			toReturn.Add("LookupCollectionViaCorporateUpload_", _lookupCollectionViaCorporateUpload_);
			toReturn.Add("LookupCollectionViaAccount____", _lookupCollectionViaAccount____);
			toReturn.Add("LookupCollectionViaAccount_____", _lookupCollectionViaAccount_____);
			toReturn.Add("LookupCollectionViaCallUpload_", _lookupCollectionViaCallUpload_);
			toReturn.Add("LookupCollectionViaCorporateUpload", _lookupCollectionViaCorporateUpload);
			toReturn.Add("LookupCollectionViaCallUpload", _lookupCollectionViaCallUpload);
			toReturn.Add("LookupCollectionViaAccount_", _lookupCollectionViaAccount_);
			toReturn.Add("LookupCollectionViaCustomerActivityTypeUpload_", _lookupCollectionViaCustomerActivityTypeUpload_);
			toReturn.Add("LookupCollectionViaAccount", _lookupCollectionViaAccount);
			toReturn.Add("LookupCollectionViaAccount_______", _lookupCollectionViaAccount_______);
			toReturn.Add("LookupCollectionViaCorporateUpload__", _lookupCollectionViaCorporateUpload__);
			toReturn.Add("LookupCollectionViaCustomerActivityTypeUpload", _lookupCollectionViaCustomerActivityTypeUpload);
			toReturn.Add("LookupCollectionViaAccount________", _lookupCollectionViaAccount________);
			toReturn.Add("MedicalVendorTypeCollectionViaMedicalVendorProfile", _medicalVendorTypeCollectionViaMedicalVendorProfile);
			toReturn.Add("MedicalVendorTypeCollectionViaMedicalVendorProfile_", _medicalVendorTypeCollectionViaMedicalVendorProfile_);
			toReturn.Add("MvuserClassificationCollectionViaPhysicianProfile_", _mvuserClassificationCollectionViaPhysicianProfile_);
			toReturn.Add("MvuserClassificationCollectionViaPhysicianProfile", _mvuserClassificationCollectionViaPhysicianProfile);
			toReturn.Add("OrganizationRoleUserCollectionViaMergeCustomerUpload", _organizationRoleUserCollectionViaMergeCustomerUpload);
			toReturn.Add("OrganizationRoleUserCollectionViaCustomerActivityTypeUpload_", _organizationRoleUserCollectionViaCustomerActivityTypeUpload_);
			toReturn.Add("OrganizationRoleUserCollectionViaMergeCustomerUpload_", _organizationRoleUserCollectionViaMergeCustomerUpload_);
			toReturn.Add("OrganizationRoleUserCollectionViaMedicationUpload_", _organizationRoleUserCollectionViaMedicationUpload_);
			toReturn.Add("OrganizationRoleUserCollectionViaStaffEventScheduleUpload_", _organizationRoleUserCollectionViaStaffEventScheduleUpload_);
			toReturn.Add("OrganizationRoleUserCollectionViaStaffEventScheduleUpload", _organizationRoleUserCollectionViaStaffEventScheduleUpload);
			toReturn.Add("OrganizationRoleUserCollectionViaSuspectConditionUpload_", _organizationRoleUserCollectionViaSuspectConditionUpload_);
			toReturn.Add("OrganizationRoleUserCollectionViaSuspectConditionUpload", _organizationRoleUserCollectionViaSuspectConditionUpload);
			toReturn.Add("OrganizationRoleUserCollectionViaRapsUpload_", _organizationRoleUserCollectionViaRapsUpload_);
			toReturn.Add("OrganizationRoleUserCollectionViaParticipationConsentSignature_", _organizationRoleUserCollectionViaParticipationConsentSignature_);
			toReturn.Add("OrganizationRoleUserCollectionViaParticipationConsentSignature", _organizationRoleUserCollectionViaParticipationConsentSignature);
			toReturn.Add("OrganizationRoleUserCollectionViaRapsUpload", _organizationRoleUserCollectionViaRapsUpload);
			toReturn.Add("OrganizationRoleUserCollectionViaPhysicianRecordRequestSignature", _organizationRoleUserCollectionViaPhysicianRecordRequestSignature);
			toReturn.Add("OrganizationRoleUserCollectionViaFluConsentSignature", _organizationRoleUserCollectionViaFluConsentSignature);
			toReturn.Add("OrganizationRoleUserCollectionViaCorporateUpload", _organizationRoleUserCollectionViaCorporateUpload);
			toReturn.Add("OrganizationRoleUserCollectionViaCallUpload_", _organizationRoleUserCollectionViaCallUpload_);
			toReturn.Add("OrganizationRoleUserCollectionViaEligibilityUpload", _organizationRoleUserCollectionViaEligibilityUpload);
			toReturn.Add("OrganizationRoleUserCollectionViaEventCustomerGiftCard_", _organizationRoleUserCollectionViaEventCustomerGiftCard_);
			toReturn.Add("OrganizationRoleUserCollectionViaEligibilityUpload_", _organizationRoleUserCollectionViaEligibilityUpload_);
			toReturn.Add("OrganizationRoleUserCollectionViaChaperoneSignature_", _organizationRoleUserCollectionViaChaperoneSignature_);
			toReturn.Add("OrganizationRoleUserCollectionViaExitInterviewSignature", _organizationRoleUserCollectionViaExitInterviewSignature);
			toReturn.Add("OrganizationRoleUserCollectionViaCorporateUpload__", _organizationRoleUserCollectionViaCorporateUpload__);
			toReturn.Add("OrganizationRoleUserCollectionViaExportableReportsQueue", _organizationRoleUserCollectionViaExportableReportsQueue);
			toReturn.Add("OrganizationRoleUserCollectionViaChaperoneSignature", _organizationRoleUserCollectionViaChaperoneSignature);
			toReturn.Add("OrganizationRoleUserCollectionViaEventCustomerGiftCard", _organizationRoleUserCollectionViaEventCustomerGiftCard);
			toReturn.Add("OrganizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload", _organizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload);
			toReturn.Add("OrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_", _organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_);
			toReturn.Add("OrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload", _organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload);
			toReturn.Add("OrganizationRoleUserCollectionViaFluConsentSignature_", _organizationRoleUserCollectionViaFluConsentSignature_);
			toReturn.Add("OrganizationRoleUserCollectionViaMedicationUpload", _organizationRoleUserCollectionViaMedicationUpload);
			toReturn.Add("OrganizationRoleUserCollectionViaCustomerActivityTypeUpload", _organizationRoleUserCollectionViaCustomerActivityTypeUpload);
			toReturn.Add("OrganizationRoleUserCollectionViaCallUpload", _organizationRoleUserCollectionViaCallUpload);
			toReturn.Add("OrganizationRoleUserCollectionViaCorporateUpload_", _organizationRoleUserCollectionViaCorporateUpload_);
			toReturn.Add("OrganizationTypeCollectionViaOrganization", _organizationTypeCollectionViaOrganization);
			toReturn.Add("OrganizationTypeCollectionViaOrganization_", _organizationTypeCollectionViaOrganization_);
			toReturn.Add("PhysicianSpecializationCollectionViaPhysicianProfile_", _physicianSpecializationCollectionViaPhysicianProfile_);
			toReturn.Add("PhysicianSpecializationCollectionViaPhysicianProfile", _physicianSpecializationCollectionViaPhysicianProfile);
			toReturn.Add("ProspectsCollectionViaAccount", _prospectsCollectionViaAccount);
			toReturn.Add("ProspectsCollectionViaAccount________", _prospectsCollectionViaAccount________);
			toReturn.Add("ProspectsCollectionViaAccount__", _prospectsCollectionViaAccount__);
			toReturn.Add("ProspectsCollectionViaAccount_", _prospectsCollectionViaAccount_);
			toReturn.Add("ProspectsCollectionViaAccount______", _prospectsCollectionViaAccount______);
			toReturn.Add("ProspectsCollectionViaAccount____", _prospectsCollectionViaAccount____);
			toReturn.Add("ProspectsCollectionViaHostImage", _prospectsCollectionViaHostImage);
			toReturn.Add("ProspectsCollectionViaAccount___", _prospectsCollectionViaAccount___);
			toReturn.Add("ProspectsCollectionViaAccount_____", _prospectsCollectionViaAccount_____);
			toReturn.Add("ProspectsCollectionViaAccount_______", _prospectsCollectionViaAccount_______);
			toReturn.Add("SurveyTemplateCollectionViaAccount_______", _surveyTemplateCollectionViaAccount_______);
			toReturn.Add("SurveyTemplateCollectionViaAccount________", _surveyTemplateCollectionViaAccount________);
			toReturn.Add("SurveyTemplateCollectionViaAccount", _surveyTemplateCollectionViaAccount);
			toReturn.Add("SurveyTemplateCollectionViaAccount______", _surveyTemplateCollectionViaAccount______);
			toReturn.Add("SurveyTemplateCollectionViaAccount__", _surveyTemplateCollectionViaAccount__);
			toReturn.Add("SurveyTemplateCollectionViaAccount___", _surveyTemplateCollectionViaAccount___);
			toReturn.Add("SurveyTemplateCollectionViaAccount____", _surveyTemplateCollectionViaAccount____);
			toReturn.Add("SurveyTemplateCollectionViaAccount_", _surveyTemplateCollectionViaAccount_);
			toReturn.Add("SurveyTemplateCollectionViaAccount_____", _surveyTemplateCollectionViaAccount_____);

			return toReturn;
		}
		
		/// <summary> Adds the internals to the active context. </summary>
		protected override void AddInternalsToContext()
		{
			if(_account______!=null)
			{
				_account______.ActiveContext = base.ActiveContext;
			}
			if(_account_____!=null)
			{
				_account_____.ActiveContext = base.ActiveContext;
			}
			if(_account________!=null)
			{
				_account________.ActiveContext = base.ActiveContext;
			}
			if(_account_______!=null)
			{
				_account_______.ActiveContext = base.ActiveContext;
			}
			if(_account____!=null)
			{
				_account____.ActiveContext = base.ActiveContext;
			}
			if(_account_!=null)
			{
				_account_.ActiveContext = base.ActiveContext;
			}
			if(_account!=null)
			{
				_account.ActiveContext = base.ActiveContext;
			}
			if(_account___!=null)
			{
				_account___.ActiveContext = base.ActiveContext;
			}
			if(_account__!=null)
			{
				_account__.ActiveContext = base.ActiveContext;
			}
			if(_callUpload_!=null)
			{
				_callUpload_.ActiveContext = base.ActiveContext;
			}
			if(_callUpload!=null)
			{
				_callUpload.ActiveContext = base.ActiveContext;
			}
			if(_chaperoneSignature_!=null)
			{
				_chaperoneSignature_.ActiveContext = base.ActiveContext;
			}
			if(_chaperoneSignature!=null)
			{
				_chaperoneSignature.ActiveContext = base.ActiveContext;
			}
			if(_corporateUpload_!=null)
			{
				_corporateUpload_.ActiveContext = base.ActiveContext;
			}
			if(_corporateUpload!=null)
			{
				_corporateUpload.ActiveContext = base.ActiveContext;
			}
			if(_corporateUpload__!=null)
			{
				_corporateUpload__.ActiveContext = base.ActiveContext;
			}
			if(_customerActivityTypeUpload_!=null)
			{
				_customerActivityTypeUpload_.ActiveContext = base.ActiveContext;
			}
			if(_customerActivityTypeUpload!=null)
			{
				_customerActivityTypeUpload.ActiveContext = base.ActiveContext;
			}
			if(_customerPhoneNumberUpdateUpload_!=null)
			{
				_customerPhoneNumberUpdateUpload_.ActiveContext = base.ActiveContext;
			}
			if(_customerPhoneNumberUpdateUpload!=null)
			{
				_customerPhoneNumberUpdateUpload.ActiveContext = base.ActiveContext;
			}
			if(_eligibilityUpload_!=null)
			{
				_eligibilityUpload_.ActiveContext = base.ActiveContext;
			}
			if(_eligibilityUpload!=null)
			{
				_eligibilityUpload.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerGiftCard_!=null)
			{
				_eventCustomerGiftCard_.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerGiftCard!=null)
			{
				_eventCustomerGiftCard.ActiveContext = base.ActiveContext;
			}
			if(_exitInterviewSignature!=null)
			{
				_exitInterviewSignature.ActiveContext = base.ActiveContext;
			}
			if(_exportableReportsQueue!=null)
			{
				_exportableReportsQueue.ActiveContext = base.ActiveContext;
			}
			if(_fluConsentSignature_!=null)
			{
				_fluConsentSignature_.ActiveContext = base.ActiveContext;
			}
			if(_fluConsentSignature!=null)
			{
				_fluConsentSignature.ActiveContext = base.ActiveContext;
			}
			if(_healthPlanCriteriaAssignmentUpload!=null)
			{
				_healthPlanCriteriaAssignmentUpload.ActiveContext = base.ActiveContext;
			}
			if(_hostImage!=null)
			{
				_hostImage.ActiveContext = base.ActiveContext;
			}
			if(_medicalVendorProfile_!=null)
			{
				_medicalVendorProfile_.ActiveContext = base.ActiveContext;
			}
			if(_medicalVendorProfile!=null)
			{
				_medicalVendorProfile.ActiveContext = base.ActiveContext;
			}
			if(_medicationUpload_!=null)
			{
				_medicationUpload_.ActiveContext = base.ActiveContext;
			}
			if(_medicationUpload!=null)
			{
				_medicationUpload.ActiveContext = base.ActiveContext;
			}
			if(_mergeCustomerUpload_!=null)
			{
				_mergeCustomerUpload_.ActiveContext = base.ActiveContext;
			}
			if(_mergeCustomerUpload!=null)
			{
				_mergeCustomerUpload.ActiveContext = base.ActiveContext;
			}
			if(_organization_!=null)
			{
				_organization_.ActiveContext = base.ActiveContext;
			}
			if(_organization!=null)
			{
				_organization.ActiveContext = base.ActiveContext;
			}
			if(_outboundUpload_!=null)
			{
				_outboundUpload_.ActiveContext = base.ActiveContext;
			}
			if(_outboundUpload!=null)
			{
				_outboundUpload.ActiveContext = base.ActiveContext;
			}
			if(_package!=null)
			{
				_package.ActiveContext = base.ActiveContext;
			}
			if(_participationConsentSignature_!=null)
			{
				_participationConsentSignature_.ActiveContext = base.ActiveContext;
			}
			if(_participationConsentSignature!=null)
			{
				_participationConsentSignature.ActiveContext = base.ActiveContext;
			}
			if(_physicianProfile_!=null)
			{
				_physicianProfile_.ActiveContext = base.ActiveContext;
			}
			if(_physicianProfile!=null)
			{
				_physicianProfile.ActiveContext = base.ActiveContext;
			}
			if(_physicianRecordRequestSignature!=null)
			{
				_physicianRecordRequestSignature.ActiveContext = base.ActiveContext;
			}
			if(_rapsUpload_!=null)
			{
				_rapsUpload_.ActiveContext = base.ActiveContext;
			}
			if(_rapsUpload!=null)
			{
				_rapsUpload.ActiveContext = base.ActiveContext;
			}
			if(_resultArchiveUpload!=null)
			{
				_resultArchiveUpload.ActiveContext = base.ActiveContext;
			}
			if(_staffEventScheduleUpload_!=null)
			{
				_staffEventScheduleUpload_.ActiveContext = base.ActiveContext;
			}
			if(_staffEventScheduleUpload!=null)
			{
				_staffEventScheduleUpload.ActiveContext = base.ActiveContext;
			}
			if(_suspectConditionUpload_!=null)
			{
				_suspectConditionUpload_.ActiveContext = base.ActiveContext;
			}
			if(_suspectConditionUpload!=null)
			{
				_suspectConditionUpload.ActiveContext = base.ActiveContext;
			}
			if(_testimonial!=null)
			{
				_testimonial.ActiveContext = base.ActiveContext;
			}
			if(_testMedia!=null)
			{
				_testMedia.ActiveContext = base.ActiveContext;
			}
			if(_wellMedAttestation!=null)
			{
				_wellMedAttestation.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaEligibilityUpload_!=null)
			{
				_accountCollectionViaEligibilityUpload_.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaCorporateUpload!=null)
			{
				_accountCollectionViaCorporateUpload.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaCorporateUpload__!=null)
			{
				_accountCollectionViaCorporateUpload__.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaCorporateUpload_!=null)
			{
				_accountCollectionViaCorporateUpload_.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaEligibilityUpload!=null)
			{
				_accountCollectionViaEligibilityUpload.ActiveContext = base.ActiveContext;
			}
			if(_addressCollectionViaOrganization_!=null)
			{
				_addressCollectionViaOrganization_.ActiveContext = base.ActiveContext;
			}
			if(_addressCollectionViaOrganization!=null)
			{
				_addressCollectionViaOrganization.ActiveContext = base.ActiveContext;
			}
			if(_checkListQuestionCollectionViaExitInterviewSignature!=null)
			{
				_checkListQuestionCollectionViaExitInterviewSignature.ActiveContext = base.ActiveContext;
			}
			if(_checkListTemplateCollectionViaAccount_________________!=null)
			{
				_checkListTemplateCollectionViaAccount_________________.ActiveContext = base.ActiveContext;
			}
			if(_checkListTemplateCollectionViaAccount_____!=null)
			{
				_checkListTemplateCollectionViaAccount_____.ActiveContext = base.ActiveContext;
			}
			if(_checkListTemplateCollectionViaAccount____!=null)
			{
				_checkListTemplateCollectionViaAccount____.ActiveContext = base.ActiveContext;
			}
			if(_checkListTemplateCollectionViaAccount_____________!=null)
			{
				_checkListTemplateCollectionViaAccount_____________.ActiveContext = base.ActiveContext;
			}
			if(_checkListTemplateCollectionViaAccount______!=null)
			{
				_checkListTemplateCollectionViaAccount______.ActiveContext = base.ActiveContext;
			}
			if(_checkListTemplateCollectionViaAccount_______!=null)
			{
				_checkListTemplateCollectionViaAccount_______.ActiveContext = base.ActiveContext;
			}
			if(_checkListTemplateCollectionViaAccount__________!=null)
			{
				_checkListTemplateCollectionViaAccount__________.ActiveContext = base.ActiveContext;
			}
			if(_checkListTemplateCollectionViaAccount_________!=null)
			{
				_checkListTemplateCollectionViaAccount_________.ActiveContext = base.ActiveContext;
			}
			if(_checkListTemplateCollectionViaAccount____________!=null)
			{
				_checkListTemplateCollectionViaAccount____________.ActiveContext = base.ActiveContext;
			}
			if(_checkListTemplateCollectionViaAccount___________!=null)
			{
				_checkListTemplateCollectionViaAccount___________.ActiveContext = base.ActiveContext;
			}
			if(_checkListTemplateCollectionViaAccount_______________!=null)
			{
				_checkListTemplateCollectionViaAccount_______________.ActiveContext = base.ActiveContext;
			}
			if(_checkListTemplateCollectionViaAccount________________!=null)
			{
				_checkListTemplateCollectionViaAccount________________.ActiveContext = base.ActiveContext;
			}
			if(_checkListTemplateCollectionViaAccount________!=null)
			{
				_checkListTemplateCollectionViaAccount________.ActiveContext = base.ActiveContext;
			}
			if(_checkListTemplateCollectionViaAccount______________!=null)
			{
				_checkListTemplateCollectionViaAccount______________.ActiveContext = base.ActiveContext;
			}
			if(_checkListTemplateCollectionViaAccount_!=null)
			{
				_checkListTemplateCollectionViaAccount_.ActiveContext = base.ActiveContext;
			}
			if(_checkListTemplateCollectionViaAccount___!=null)
			{
				_checkListTemplateCollectionViaAccount___.ActiveContext = base.ActiveContext;
			}
			if(_checkListTemplateCollectionViaAccount__!=null)
			{
				_checkListTemplateCollectionViaAccount__.ActiveContext = base.ActiveContext;
			}
			if(_checkListTemplateCollectionViaAccount!=null)
			{
				_checkListTemplateCollectionViaAccount.ActiveContext = base.ActiveContext;
			}
			if(_contractCollectionViaMedicalVendorProfile_!=null)
			{
				_contractCollectionViaMedicalVendorProfile_.ActiveContext = base.ActiveContext;
			}
			if(_contractCollectionViaMedicalVendorProfile!=null)
			{
				_contractCollectionViaMedicalVendorProfile.ActiveContext = base.ActiveContext;
			}
			if(_customerEventScreeningTestsCollectionViaTestMedia!=null)
			{
				_customerEventScreeningTestsCollectionViaTestMedia.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaTestimonial!=null)
			{
				_customerProfileCollectionViaTestimonial.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount_________________!=null)
			{
				_emailTemplateCollectionViaAccount_________________.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount__________________!=null)
			{
				_emailTemplateCollectionViaAccount__________________.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount___________________!=null)
			{
				_emailTemplateCollectionViaAccount___________________.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount_____________________________!=null)
			{
				_emailTemplateCollectionViaAccount_____________________________.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount___________________________________!=null)
			{
				_emailTemplateCollectionViaAccount___________________________________.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount________________!=null)
			{
				_emailTemplateCollectionViaAccount________________.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount___________________________!=null)
			{
				_emailTemplateCollectionViaAccount___________________________.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount__________________________!=null)
			{
				_emailTemplateCollectionViaAccount__________________________.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount_________________________!=null)
			{
				_emailTemplateCollectionViaAccount_________________________.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount____________________________!=null)
			{
				_emailTemplateCollectionViaAccount____________________________.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount______________________________!=null)
			{
				_emailTemplateCollectionViaAccount______________________________.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount_______________________________!=null)
			{
				_emailTemplateCollectionViaAccount_______________________________.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount________________________________!=null)
			{
				_emailTemplateCollectionViaAccount________________________________.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount_________________________________!=null)
			{
				_emailTemplateCollectionViaAccount_________________________________.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount__________________________________!=null)
			{
				_emailTemplateCollectionViaAccount__________________________________.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount____________________!=null)
			{
				_emailTemplateCollectionViaAccount____________________.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount_____________________!=null)
			{
				_emailTemplateCollectionViaAccount_____________________.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount________________________!=null)
			{
				_emailTemplateCollectionViaAccount________________________.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount_______________________!=null)
			{
				_emailTemplateCollectionViaAccount_______________________.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount______________________!=null)
			{
				_emailTemplateCollectionViaAccount______________________.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount__!=null)
			{
				_emailTemplateCollectionViaAccount__.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount___!=null)
			{
				_emailTemplateCollectionViaAccount___.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount____________!=null)
			{
				_emailTemplateCollectionViaAccount____________.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount____!=null)
			{
				_emailTemplateCollectionViaAccount____.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount________!=null)
			{
				_emailTemplateCollectionViaAccount________.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount_______!=null)
			{
				_emailTemplateCollectionViaAccount_______.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount___________!=null)
			{
				_emailTemplateCollectionViaAccount___________.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount__________!=null)
			{
				_emailTemplateCollectionViaAccount__________.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount_!=null)
			{
				_emailTemplateCollectionViaAccount_.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount_____!=null)
			{
				_emailTemplateCollectionViaAccount_____.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount!=null)
			{
				_emailTemplateCollectionViaAccount.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount_________!=null)
			{
				_emailTemplateCollectionViaAccount_________.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount______!=null)
			{
				_emailTemplateCollectionViaAccount______.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount______________!=null)
			{
				_emailTemplateCollectionViaAccount______________.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount_______________!=null)
			{
				_emailTemplateCollectionViaAccount_______________.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplateCollectionViaAccount_____________!=null)
			{
				_emailTemplateCollectionViaAccount_____________.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerResultCollectionViaWellMedAttestation!=null)
			{
				_eventCustomerResultCollectionViaWellMedAttestation.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaChaperoneSignature!=null)
			{
				_eventCustomersCollectionViaChaperoneSignature.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaFluConsentSignature!=null)
			{
				_eventCustomersCollectionViaFluConsentSignature.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaParticipationConsentSignature!=null)
			{
				_eventCustomersCollectionViaParticipationConsentSignature.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaFluConsentSignature_!=null)
			{
				_eventCustomersCollectionViaFluConsentSignature_.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaParticipationConsentSignature_!=null)
			{
				_eventCustomersCollectionViaParticipationConsentSignature_.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaExitInterviewSignature!=null)
			{
				_eventCustomersCollectionViaExitInterviewSignature.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaEventCustomerGiftCard_!=null)
			{
				_eventCustomersCollectionViaEventCustomerGiftCard_.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaChaperoneSignature_!=null)
			{
				_eventCustomersCollectionViaChaperoneSignature_.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaPhysicianRecordRequestSignature!=null)
			{
				_eventCustomersCollectionViaPhysicianRecordRequestSignature.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaEventCustomerGiftCard!=null)
			{
				_eventCustomersCollectionViaEventCustomerGiftCard.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaResultArchiveUpload!=null)
			{
				_eventsCollectionViaResultArchiveUpload.ActiveContext = base.ActiveContext;
			}
			if(_exportableReportsCollectionViaExportableReportsQueue!=null)
			{
				_exportableReportsCollectionViaExportableReportsQueue.ActiveContext = base.ActiveContext;
			}
			if(_fluConsentTemplateCollectionViaAccount______!=null)
			{
				_fluConsentTemplateCollectionViaAccount______.ActiveContext = base.ActiveContext;
			}
			if(_fluConsentTemplateCollectionViaAccount!=null)
			{
				_fluConsentTemplateCollectionViaAccount.ActiveContext = base.ActiveContext;
			}
			if(_fluConsentTemplateCollectionViaAccount________!=null)
			{
				_fluConsentTemplateCollectionViaAccount________.ActiveContext = base.ActiveContext;
			}
			if(_fluConsentTemplateCollectionViaAccount_______!=null)
			{
				_fluConsentTemplateCollectionViaAccount_______.ActiveContext = base.ActiveContext;
			}
			if(_fluConsentTemplateCollectionViaAccount___!=null)
			{
				_fluConsentTemplateCollectionViaAccount___.ActiveContext = base.ActiveContext;
			}
			if(_fluConsentTemplateCollectionViaAccount_____!=null)
			{
				_fluConsentTemplateCollectionViaAccount_____.ActiveContext = base.ActiveContext;
			}
			if(_fluConsentTemplateCollectionViaAccount__!=null)
			{
				_fluConsentTemplateCollectionViaAccount__.ActiveContext = base.ActiveContext;
			}
			if(_fluConsentTemplateCollectionViaAccount_!=null)
			{
				_fluConsentTemplateCollectionViaAccount_.ActiveContext = base.ActiveContext;
			}
			if(_fluConsentTemplateCollectionViaAccount____!=null)
			{
				_fluConsentTemplateCollectionViaAccount____.ActiveContext = base.ActiveContext;
			}
			if(_hafTemplateCollectionViaAccount________!=null)
			{
				_hafTemplateCollectionViaAccount________.ActiveContext = base.ActiveContext;
			}
			if(_hafTemplateCollectionViaAccount______!=null)
			{
				_hafTemplateCollectionViaAccount______.ActiveContext = base.ActiveContext;
			}
			if(_hafTemplateCollectionViaAccount__!=null)
			{
				_hafTemplateCollectionViaAccount__.ActiveContext = base.ActiveContext;
			}
			if(_hafTemplateCollectionViaAccount____!=null)
			{
				_hafTemplateCollectionViaAccount____.ActiveContext = base.ActiveContext;
			}
			if(_hafTemplateCollectionViaPackage!=null)
			{
				_hafTemplateCollectionViaPackage.ActiveContext = base.ActiveContext;
			}
			if(_hafTemplateCollectionViaAccount_!=null)
			{
				_hafTemplateCollectionViaAccount_.ActiveContext = base.ActiveContext;
			}
			if(_hafTemplateCollectionViaAccount_______!=null)
			{
				_hafTemplateCollectionViaAccount_______.ActiveContext = base.ActiveContext;
			}
			if(_hafTemplateCollectionViaAccount_____!=null)
			{
				_hafTemplateCollectionViaAccount_____.ActiveContext = base.ActiveContext;
			}
			if(_hafTemplateCollectionViaAccount!=null)
			{
				_hafTemplateCollectionViaAccount.ActiveContext = base.ActiveContext;
			}
			if(_hafTemplateCollectionViaAccount___!=null)
			{
				_hafTemplateCollectionViaAccount___.ActiveContext = base.ActiveContext;
			}
			if(_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload!=null)
			{
				_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaStaffEventScheduleUpload_!=null)
			{
				_lookupCollectionViaStaffEventScheduleUpload_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaRapsUpload!=null)
			{
				_lookupCollectionViaRapsUpload.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCustomerPhoneNumberUpdateUpload!=null)
			{
				_lookupCollectionViaCustomerPhoneNumberUpdateUpload.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEligibilityUpload!=null)
			{
				_lookupCollectionViaEligibilityUpload.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCustomerPhoneNumberUpdateUpload_!=null)
			{
				_lookupCollectionViaCustomerPhoneNumberUpdateUpload_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEligibilityUpload_!=null)
			{
				_lookupCollectionViaEligibilityUpload_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaStaffEventScheduleUpload!=null)
			{
				_lookupCollectionViaStaffEventScheduleUpload.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaRapsUpload_!=null)
			{
				_lookupCollectionViaRapsUpload_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaMergeCustomerUpload_!=null)
			{
				_lookupCollectionViaMergeCustomerUpload_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaMergeCustomerUpload!=null)
			{
				_lookupCollectionViaMergeCustomerUpload.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaMedicationUpload_!=null)
			{
				_lookupCollectionViaMedicationUpload_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaOutboundUpload__!=null)
			{
				_lookupCollectionViaOutboundUpload__.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaOutboundUpload!=null)
			{
				_lookupCollectionViaOutboundUpload.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaOutboundUpload___!=null)
			{
				_lookupCollectionViaOutboundUpload___.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaPackage!=null)
			{
				_lookupCollectionViaPackage.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaSuspectConditionUpload_!=null)
			{
				_lookupCollectionViaSuspectConditionUpload_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaExportableReportsQueue!=null)
			{
				_lookupCollectionViaExportableReportsQueue.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaSuspectConditionUpload!=null)
			{
				_lookupCollectionViaSuspectConditionUpload.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaMedicationUpload!=null)
			{
				_lookupCollectionViaMedicationUpload.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaHostImage!=null)
			{
				_lookupCollectionViaHostImage.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaOutboundUpload_!=null)
			{
				_lookupCollectionViaOutboundUpload_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaWellMedAttestation!=null)
			{
				_lookupCollectionViaWellMedAttestation.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaAccount___!=null)
			{
				_lookupCollectionViaAccount___.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaAccount______!=null)
			{
				_lookupCollectionViaAccount______.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaAccount__!=null)
			{
				_lookupCollectionViaAccount__.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCorporateUpload_!=null)
			{
				_lookupCollectionViaCorporateUpload_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaAccount____!=null)
			{
				_lookupCollectionViaAccount____.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaAccount_____!=null)
			{
				_lookupCollectionViaAccount_____.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCallUpload_!=null)
			{
				_lookupCollectionViaCallUpload_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCorporateUpload!=null)
			{
				_lookupCollectionViaCorporateUpload.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCallUpload!=null)
			{
				_lookupCollectionViaCallUpload.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaAccount_!=null)
			{
				_lookupCollectionViaAccount_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCustomerActivityTypeUpload_!=null)
			{
				_lookupCollectionViaCustomerActivityTypeUpload_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaAccount!=null)
			{
				_lookupCollectionViaAccount.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaAccount_______!=null)
			{
				_lookupCollectionViaAccount_______.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCorporateUpload__!=null)
			{
				_lookupCollectionViaCorporateUpload__.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCustomerActivityTypeUpload!=null)
			{
				_lookupCollectionViaCustomerActivityTypeUpload.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaAccount________!=null)
			{
				_lookupCollectionViaAccount________.ActiveContext = base.ActiveContext;
			}
			if(_medicalVendorTypeCollectionViaMedicalVendorProfile!=null)
			{
				_medicalVendorTypeCollectionViaMedicalVendorProfile.ActiveContext = base.ActiveContext;
			}
			if(_medicalVendorTypeCollectionViaMedicalVendorProfile_!=null)
			{
				_medicalVendorTypeCollectionViaMedicalVendorProfile_.ActiveContext = base.ActiveContext;
			}
			if(_mvuserClassificationCollectionViaPhysicianProfile_!=null)
			{
				_mvuserClassificationCollectionViaPhysicianProfile_.ActiveContext = base.ActiveContext;
			}
			if(_mvuserClassificationCollectionViaPhysicianProfile!=null)
			{
				_mvuserClassificationCollectionViaPhysicianProfile.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaMergeCustomerUpload!=null)
			{
				_organizationRoleUserCollectionViaMergeCustomerUpload.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaCustomerActivityTypeUpload_!=null)
			{
				_organizationRoleUserCollectionViaCustomerActivityTypeUpload_.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaMergeCustomerUpload_!=null)
			{
				_organizationRoleUserCollectionViaMergeCustomerUpload_.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaMedicationUpload_!=null)
			{
				_organizationRoleUserCollectionViaMedicationUpload_.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaStaffEventScheduleUpload_!=null)
			{
				_organizationRoleUserCollectionViaStaffEventScheduleUpload_.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaStaffEventScheduleUpload!=null)
			{
				_organizationRoleUserCollectionViaStaffEventScheduleUpload.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaSuspectConditionUpload_!=null)
			{
				_organizationRoleUserCollectionViaSuspectConditionUpload_.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaSuspectConditionUpload!=null)
			{
				_organizationRoleUserCollectionViaSuspectConditionUpload.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaRapsUpload_!=null)
			{
				_organizationRoleUserCollectionViaRapsUpload_.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaParticipationConsentSignature_!=null)
			{
				_organizationRoleUserCollectionViaParticipationConsentSignature_.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaParticipationConsentSignature!=null)
			{
				_organizationRoleUserCollectionViaParticipationConsentSignature.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaRapsUpload!=null)
			{
				_organizationRoleUserCollectionViaRapsUpload.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaPhysicianRecordRequestSignature!=null)
			{
				_organizationRoleUserCollectionViaPhysicianRecordRequestSignature.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaFluConsentSignature!=null)
			{
				_organizationRoleUserCollectionViaFluConsentSignature.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaCorporateUpload!=null)
			{
				_organizationRoleUserCollectionViaCorporateUpload.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaCallUpload_!=null)
			{
				_organizationRoleUserCollectionViaCallUpload_.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaEligibilityUpload!=null)
			{
				_organizationRoleUserCollectionViaEligibilityUpload.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaEventCustomerGiftCard_!=null)
			{
				_organizationRoleUserCollectionViaEventCustomerGiftCard_.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaEligibilityUpload_!=null)
			{
				_organizationRoleUserCollectionViaEligibilityUpload_.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaChaperoneSignature_!=null)
			{
				_organizationRoleUserCollectionViaChaperoneSignature_.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaExitInterviewSignature!=null)
			{
				_organizationRoleUserCollectionViaExitInterviewSignature.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaCorporateUpload__!=null)
			{
				_organizationRoleUserCollectionViaCorporateUpload__.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaExportableReportsQueue!=null)
			{
				_organizationRoleUserCollectionViaExportableReportsQueue.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaChaperoneSignature!=null)
			{
				_organizationRoleUserCollectionViaChaperoneSignature.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaEventCustomerGiftCard!=null)
			{
				_organizationRoleUserCollectionViaEventCustomerGiftCard.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload!=null)
			{
				_organizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_!=null)
			{
				_organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload!=null)
			{
				_organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaFluConsentSignature_!=null)
			{
				_organizationRoleUserCollectionViaFluConsentSignature_.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaMedicationUpload!=null)
			{
				_organizationRoleUserCollectionViaMedicationUpload.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaCustomerActivityTypeUpload!=null)
			{
				_organizationRoleUserCollectionViaCustomerActivityTypeUpload.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaCallUpload!=null)
			{
				_organizationRoleUserCollectionViaCallUpload.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserCollectionViaCorporateUpload_!=null)
			{
				_organizationRoleUserCollectionViaCorporateUpload_.ActiveContext = base.ActiveContext;
			}
			if(_organizationTypeCollectionViaOrganization!=null)
			{
				_organizationTypeCollectionViaOrganization.ActiveContext = base.ActiveContext;
			}
			if(_organizationTypeCollectionViaOrganization_!=null)
			{
				_organizationTypeCollectionViaOrganization_.ActiveContext = base.ActiveContext;
			}
			if(_physicianSpecializationCollectionViaPhysicianProfile_!=null)
			{
				_physicianSpecializationCollectionViaPhysicianProfile_.ActiveContext = base.ActiveContext;
			}
			if(_physicianSpecializationCollectionViaPhysicianProfile!=null)
			{
				_physicianSpecializationCollectionViaPhysicianProfile.ActiveContext = base.ActiveContext;
			}
			if(_prospectsCollectionViaAccount!=null)
			{
				_prospectsCollectionViaAccount.ActiveContext = base.ActiveContext;
			}
			if(_prospectsCollectionViaAccount________!=null)
			{
				_prospectsCollectionViaAccount________.ActiveContext = base.ActiveContext;
			}
			if(_prospectsCollectionViaAccount__!=null)
			{
				_prospectsCollectionViaAccount__.ActiveContext = base.ActiveContext;
			}
			if(_prospectsCollectionViaAccount_!=null)
			{
				_prospectsCollectionViaAccount_.ActiveContext = base.ActiveContext;
			}
			if(_prospectsCollectionViaAccount______!=null)
			{
				_prospectsCollectionViaAccount______.ActiveContext = base.ActiveContext;
			}
			if(_prospectsCollectionViaAccount____!=null)
			{
				_prospectsCollectionViaAccount____.ActiveContext = base.ActiveContext;
			}
			if(_prospectsCollectionViaHostImage!=null)
			{
				_prospectsCollectionViaHostImage.ActiveContext = base.ActiveContext;
			}
			if(_prospectsCollectionViaAccount___!=null)
			{
				_prospectsCollectionViaAccount___.ActiveContext = base.ActiveContext;
			}
			if(_prospectsCollectionViaAccount_____!=null)
			{
				_prospectsCollectionViaAccount_____.ActiveContext = base.ActiveContext;
			}
			if(_prospectsCollectionViaAccount_______!=null)
			{
				_prospectsCollectionViaAccount_______.ActiveContext = base.ActiveContext;
			}
			if(_surveyTemplateCollectionViaAccount_______!=null)
			{
				_surveyTemplateCollectionViaAccount_______.ActiveContext = base.ActiveContext;
			}
			if(_surveyTemplateCollectionViaAccount________!=null)
			{
				_surveyTemplateCollectionViaAccount________.ActiveContext = base.ActiveContext;
			}
			if(_surveyTemplateCollectionViaAccount!=null)
			{
				_surveyTemplateCollectionViaAccount.ActiveContext = base.ActiveContext;
			}
			if(_surveyTemplateCollectionViaAccount______!=null)
			{
				_surveyTemplateCollectionViaAccount______.ActiveContext = base.ActiveContext;
			}
			if(_surveyTemplateCollectionViaAccount__!=null)
			{
				_surveyTemplateCollectionViaAccount__.ActiveContext = base.ActiveContext;
			}
			if(_surveyTemplateCollectionViaAccount___!=null)
			{
				_surveyTemplateCollectionViaAccount___.ActiveContext = base.ActiveContext;
			}
			if(_surveyTemplateCollectionViaAccount____!=null)
			{
				_surveyTemplateCollectionViaAccount____.ActiveContext = base.ActiveContext;
			}
			if(_surveyTemplateCollectionViaAccount_!=null)
			{
				_surveyTemplateCollectionViaAccount_.ActiveContext = base.ActiveContext;
			}
			if(_surveyTemplateCollectionViaAccount_____!=null)
			{
				_surveyTemplateCollectionViaAccount_____.ActiveContext = base.ActiveContext;
			}
			if(_lookup!=null)
			{
				_lookup.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUser!=null)
			{
				_organizationRoleUser.ActiveContext = base.ActiveContext;
			}

		}

		/// <summary> Initializes the class members</summary>
		protected virtual void InitClassMembers()
		{

			_account______ = null;
			_account_____ = null;
			_account________ = null;
			_account_______ = null;
			_account____ = null;
			_account_ = null;
			_account = null;
			_account___ = null;
			_account__ = null;
			_callUpload_ = null;
			_callUpload = null;
			_chaperoneSignature_ = null;
			_chaperoneSignature = null;
			_corporateUpload_ = null;
			_corporateUpload = null;
			_corporateUpload__ = null;
			_customerActivityTypeUpload_ = null;
			_customerActivityTypeUpload = null;
			_customerPhoneNumberUpdateUpload_ = null;
			_customerPhoneNumberUpdateUpload = null;
			_eligibilityUpload_ = null;
			_eligibilityUpload = null;
			_eventCustomerGiftCard_ = null;
			_eventCustomerGiftCard = null;
			_exitInterviewSignature = null;
			_exportableReportsQueue = null;
			_fluConsentSignature_ = null;
			_fluConsentSignature = null;
			_healthPlanCriteriaAssignmentUpload = null;
			_hostImage = null;
			_medicalVendorProfile_ = null;
			_medicalVendorProfile = null;
			_medicationUpload_ = null;
			_medicationUpload = null;
			_mergeCustomerUpload_ = null;
			_mergeCustomerUpload = null;
			_organization_ = null;
			_organization = null;
			_outboundUpload_ = null;
			_outboundUpload = null;
			_package = null;
			_participationConsentSignature_ = null;
			_participationConsentSignature = null;
			_physicianProfile_ = null;
			_physicianProfile = null;
			_physicianRecordRequestSignature = null;
			_rapsUpload_ = null;
			_rapsUpload = null;
			_resultArchiveUpload = null;
			_staffEventScheduleUpload_ = null;
			_staffEventScheduleUpload = null;
			_suspectConditionUpload_ = null;
			_suspectConditionUpload = null;
			_testimonial = null;
			_testMedia = null;
			_wellMedAttestation = null;
			_accountCollectionViaEligibilityUpload_ = null;
			_accountCollectionViaCorporateUpload = null;
			_accountCollectionViaCorporateUpload__ = null;
			_accountCollectionViaCorporateUpload_ = null;
			_accountCollectionViaEligibilityUpload = null;
			_addressCollectionViaOrganization_ = null;
			_addressCollectionViaOrganization = null;
			_checkListQuestionCollectionViaExitInterviewSignature = null;
			_checkListTemplateCollectionViaAccount_________________ = null;
			_checkListTemplateCollectionViaAccount_____ = null;
			_checkListTemplateCollectionViaAccount____ = null;
			_checkListTemplateCollectionViaAccount_____________ = null;
			_checkListTemplateCollectionViaAccount______ = null;
			_checkListTemplateCollectionViaAccount_______ = null;
			_checkListTemplateCollectionViaAccount__________ = null;
			_checkListTemplateCollectionViaAccount_________ = null;
			_checkListTemplateCollectionViaAccount____________ = null;
			_checkListTemplateCollectionViaAccount___________ = null;
			_checkListTemplateCollectionViaAccount_______________ = null;
			_checkListTemplateCollectionViaAccount________________ = null;
			_checkListTemplateCollectionViaAccount________ = null;
			_checkListTemplateCollectionViaAccount______________ = null;
			_checkListTemplateCollectionViaAccount_ = null;
			_checkListTemplateCollectionViaAccount___ = null;
			_checkListTemplateCollectionViaAccount__ = null;
			_checkListTemplateCollectionViaAccount = null;
			_contractCollectionViaMedicalVendorProfile_ = null;
			_contractCollectionViaMedicalVendorProfile = null;
			_customerEventScreeningTestsCollectionViaTestMedia = null;
			_customerProfileCollectionViaTestimonial = null;
			_emailTemplateCollectionViaAccount_________________ = null;
			_emailTemplateCollectionViaAccount__________________ = null;
			_emailTemplateCollectionViaAccount___________________ = null;
			_emailTemplateCollectionViaAccount_____________________________ = null;
			_emailTemplateCollectionViaAccount___________________________________ = null;
			_emailTemplateCollectionViaAccount________________ = null;
			_emailTemplateCollectionViaAccount___________________________ = null;
			_emailTemplateCollectionViaAccount__________________________ = null;
			_emailTemplateCollectionViaAccount_________________________ = null;
			_emailTemplateCollectionViaAccount____________________________ = null;
			_emailTemplateCollectionViaAccount______________________________ = null;
			_emailTemplateCollectionViaAccount_______________________________ = null;
			_emailTemplateCollectionViaAccount________________________________ = null;
			_emailTemplateCollectionViaAccount_________________________________ = null;
			_emailTemplateCollectionViaAccount__________________________________ = null;
			_emailTemplateCollectionViaAccount____________________ = null;
			_emailTemplateCollectionViaAccount_____________________ = null;
			_emailTemplateCollectionViaAccount________________________ = null;
			_emailTemplateCollectionViaAccount_______________________ = null;
			_emailTemplateCollectionViaAccount______________________ = null;
			_emailTemplateCollectionViaAccount__ = null;
			_emailTemplateCollectionViaAccount___ = null;
			_emailTemplateCollectionViaAccount____________ = null;
			_emailTemplateCollectionViaAccount____ = null;
			_emailTemplateCollectionViaAccount________ = null;
			_emailTemplateCollectionViaAccount_______ = null;
			_emailTemplateCollectionViaAccount___________ = null;
			_emailTemplateCollectionViaAccount__________ = null;
			_emailTemplateCollectionViaAccount_ = null;
			_emailTemplateCollectionViaAccount_____ = null;
			_emailTemplateCollectionViaAccount = null;
			_emailTemplateCollectionViaAccount_________ = null;
			_emailTemplateCollectionViaAccount______ = null;
			_emailTemplateCollectionViaAccount______________ = null;
			_emailTemplateCollectionViaAccount_______________ = null;
			_emailTemplateCollectionViaAccount_____________ = null;
			_eventCustomerResultCollectionViaWellMedAttestation = null;
			_eventCustomersCollectionViaChaperoneSignature = null;
			_eventCustomersCollectionViaFluConsentSignature = null;
			_eventCustomersCollectionViaParticipationConsentSignature = null;
			_eventCustomersCollectionViaFluConsentSignature_ = null;
			_eventCustomersCollectionViaParticipationConsentSignature_ = null;
			_eventCustomersCollectionViaExitInterviewSignature = null;
			_eventCustomersCollectionViaEventCustomerGiftCard_ = null;
			_eventCustomersCollectionViaChaperoneSignature_ = null;
			_eventCustomersCollectionViaPhysicianRecordRequestSignature = null;
			_eventCustomersCollectionViaEventCustomerGiftCard = null;
			_eventsCollectionViaResultArchiveUpload = null;
			_exportableReportsCollectionViaExportableReportsQueue = null;
			_fluConsentTemplateCollectionViaAccount______ = null;
			_fluConsentTemplateCollectionViaAccount = null;
			_fluConsentTemplateCollectionViaAccount________ = null;
			_fluConsentTemplateCollectionViaAccount_______ = null;
			_fluConsentTemplateCollectionViaAccount___ = null;
			_fluConsentTemplateCollectionViaAccount_____ = null;
			_fluConsentTemplateCollectionViaAccount__ = null;
			_fluConsentTemplateCollectionViaAccount_ = null;
			_fluConsentTemplateCollectionViaAccount____ = null;
			_hafTemplateCollectionViaAccount________ = null;
			_hafTemplateCollectionViaAccount______ = null;
			_hafTemplateCollectionViaAccount__ = null;
			_hafTemplateCollectionViaAccount____ = null;
			_hafTemplateCollectionViaPackage = null;
			_hafTemplateCollectionViaAccount_ = null;
			_hafTemplateCollectionViaAccount_______ = null;
			_hafTemplateCollectionViaAccount_____ = null;
			_hafTemplateCollectionViaAccount = null;
			_hafTemplateCollectionViaAccount___ = null;
			_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload = null;
			_lookupCollectionViaStaffEventScheduleUpload_ = null;
			_lookupCollectionViaRapsUpload = null;
			_lookupCollectionViaCustomerPhoneNumberUpdateUpload = null;
			_lookupCollectionViaEligibilityUpload = null;
			_lookupCollectionViaCustomerPhoneNumberUpdateUpload_ = null;
			_lookupCollectionViaEligibilityUpload_ = null;
			_lookupCollectionViaStaffEventScheduleUpload = null;
			_lookupCollectionViaRapsUpload_ = null;
			_lookupCollectionViaMergeCustomerUpload_ = null;
			_lookupCollectionViaMergeCustomerUpload = null;
			_lookupCollectionViaMedicationUpload_ = null;
			_lookupCollectionViaOutboundUpload__ = null;
			_lookupCollectionViaOutboundUpload = null;
			_lookupCollectionViaOutboundUpload___ = null;
			_lookupCollectionViaPackage = null;
			_lookupCollectionViaSuspectConditionUpload_ = null;
			_lookupCollectionViaExportableReportsQueue = null;
			_lookupCollectionViaSuspectConditionUpload = null;
			_lookupCollectionViaMedicationUpload = null;
			_lookupCollectionViaHostImage = null;
			_lookupCollectionViaOutboundUpload_ = null;
			_lookupCollectionViaWellMedAttestation = null;
			_lookupCollectionViaAccount___ = null;
			_lookupCollectionViaAccount______ = null;
			_lookupCollectionViaAccount__ = null;
			_lookupCollectionViaCorporateUpload_ = null;
			_lookupCollectionViaAccount____ = null;
			_lookupCollectionViaAccount_____ = null;
			_lookupCollectionViaCallUpload_ = null;
			_lookupCollectionViaCorporateUpload = null;
			_lookupCollectionViaCallUpload = null;
			_lookupCollectionViaAccount_ = null;
			_lookupCollectionViaCustomerActivityTypeUpload_ = null;
			_lookupCollectionViaAccount = null;
			_lookupCollectionViaAccount_______ = null;
			_lookupCollectionViaCorporateUpload__ = null;
			_lookupCollectionViaCustomerActivityTypeUpload = null;
			_lookupCollectionViaAccount________ = null;
			_medicalVendorTypeCollectionViaMedicalVendorProfile = null;
			_medicalVendorTypeCollectionViaMedicalVendorProfile_ = null;
			_mvuserClassificationCollectionViaPhysicianProfile_ = null;
			_mvuserClassificationCollectionViaPhysicianProfile = null;
			_organizationRoleUserCollectionViaMergeCustomerUpload = null;
			_organizationRoleUserCollectionViaCustomerActivityTypeUpload_ = null;
			_organizationRoleUserCollectionViaMergeCustomerUpload_ = null;
			_organizationRoleUserCollectionViaMedicationUpload_ = null;
			_organizationRoleUserCollectionViaStaffEventScheduleUpload_ = null;
			_organizationRoleUserCollectionViaStaffEventScheduleUpload = null;
			_organizationRoleUserCollectionViaSuspectConditionUpload_ = null;
			_organizationRoleUserCollectionViaSuspectConditionUpload = null;
			_organizationRoleUserCollectionViaRapsUpload_ = null;
			_organizationRoleUserCollectionViaParticipationConsentSignature_ = null;
			_organizationRoleUserCollectionViaParticipationConsentSignature = null;
			_organizationRoleUserCollectionViaRapsUpload = null;
			_organizationRoleUserCollectionViaPhysicianRecordRequestSignature = null;
			_organizationRoleUserCollectionViaFluConsentSignature = null;
			_organizationRoleUserCollectionViaCorporateUpload = null;
			_organizationRoleUserCollectionViaCallUpload_ = null;
			_organizationRoleUserCollectionViaEligibilityUpload = null;
			_organizationRoleUserCollectionViaEventCustomerGiftCard_ = null;
			_organizationRoleUserCollectionViaEligibilityUpload_ = null;
			_organizationRoleUserCollectionViaChaperoneSignature_ = null;
			_organizationRoleUserCollectionViaExitInterviewSignature = null;
			_organizationRoleUserCollectionViaCorporateUpload__ = null;
			_organizationRoleUserCollectionViaExportableReportsQueue = null;
			_organizationRoleUserCollectionViaChaperoneSignature = null;
			_organizationRoleUserCollectionViaEventCustomerGiftCard = null;
			_organizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload = null;
			_organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_ = null;
			_organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload = null;
			_organizationRoleUserCollectionViaFluConsentSignature_ = null;
			_organizationRoleUserCollectionViaMedicationUpload = null;
			_organizationRoleUserCollectionViaCustomerActivityTypeUpload = null;
			_organizationRoleUserCollectionViaCallUpload = null;
			_organizationRoleUserCollectionViaCorporateUpload_ = null;
			_organizationTypeCollectionViaOrganization = null;
			_organizationTypeCollectionViaOrganization_ = null;
			_physicianSpecializationCollectionViaPhysicianProfile_ = null;
			_physicianSpecializationCollectionViaPhysicianProfile = null;
			_prospectsCollectionViaAccount = null;
			_prospectsCollectionViaAccount________ = null;
			_prospectsCollectionViaAccount__ = null;
			_prospectsCollectionViaAccount_ = null;
			_prospectsCollectionViaAccount______ = null;
			_prospectsCollectionViaAccount____ = null;
			_prospectsCollectionViaHostImage = null;
			_prospectsCollectionViaAccount___ = null;
			_prospectsCollectionViaAccount_____ = null;
			_prospectsCollectionViaAccount_______ = null;
			_surveyTemplateCollectionViaAccount_______ = null;
			_surveyTemplateCollectionViaAccount________ = null;
			_surveyTemplateCollectionViaAccount = null;
			_surveyTemplateCollectionViaAccount______ = null;
			_surveyTemplateCollectionViaAccount__ = null;
			_surveyTemplateCollectionViaAccount___ = null;
			_surveyTemplateCollectionViaAccount____ = null;
			_surveyTemplateCollectionViaAccount_ = null;
			_surveyTemplateCollectionViaAccount_____ = null;
			_lookup = null;
			_organizationRoleUser = null;

			PerformDependencyInjection();
			
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
			OnInitClassMembersComplete();
		}

		#region Custom Property Hashtable Setup
		/// <summary> Initializes the hashtables for the entity type and entity field custom properties. </summary>
		private static void SetupCustomPropertyHashtables()
		{
			_customProperties = new Dictionary<string, string>();
			_fieldsCustomProperties = new Dictionary<string, Dictionary<string, string>>();

			Dictionary<string, string> fieldHashtable = null;
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("FileId", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("Path", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("Type", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("Size", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("CreatedDate", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("CreatedBy", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("IsArchived", fieldHashtable);
		}
		#endregion

		/// <summary> Removes the sync logic for member _lookup</summary>
		/// <param name="signalRelatedEntity">If set to true, it will call the related entity's UnsetRelatedEntity method</param>
		/// <param name="resetFKFields">if set to true it will also reset the FK fields pointing to the related entity</param>
		private void DesetupSyncLookup(bool signalRelatedEntity, bool resetFKFields)
		{
			base.PerformDesetupSyncRelatedEntity( _lookup, new PropertyChangedEventHandler( OnLookupPropertyChanged ), "Lookup", FileEntity.Relations.LookupEntityUsingType, true, signalRelatedEntity, "File", resetFKFields, new int[] { (int)FileFieldIndex.Type } );		
			_lookup = null;
		}

		/// <summary> setups the sync logic for member _lookup</summary>
		/// <param name="relatedEntity">Instance to set as the related entity of type entityType</param>
		private void SetupSyncLookup(IEntity2 relatedEntity)
		{
			if(_lookup!=relatedEntity)
			{
				DesetupSyncLookup(true, true);
				_lookup = (LookupEntity)relatedEntity;
				base.PerformSetupSyncRelatedEntity( _lookup, new PropertyChangedEventHandler( OnLookupPropertyChanged ), "Lookup", FileEntity.Relations.LookupEntityUsingType, true, new string[] {  } );
			}
		}
		
		/// <summary>Handles property change events of properties in a related entity.</summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void OnLookupPropertyChanged( object sender, PropertyChangedEventArgs e )
		{
			switch( e.PropertyName )
			{
				default:
					break;
			}
		}

		/// <summary> Removes the sync logic for member _organizationRoleUser</summary>
		/// <param name="signalRelatedEntity">If set to true, it will call the related entity's UnsetRelatedEntity method</param>
		/// <param name="resetFKFields">if set to true it will also reset the FK fields pointing to the related entity</param>
		private void DesetupSyncOrganizationRoleUser(bool signalRelatedEntity, bool resetFKFields)
		{
			base.PerformDesetupSyncRelatedEntity( _organizationRoleUser, new PropertyChangedEventHandler( OnOrganizationRoleUserPropertyChanged ), "OrganizationRoleUser", FileEntity.Relations.OrganizationRoleUserEntityUsingCreatedBy, true, signalRelatedEntity, "File", resetFKFields, new int[] { (int)FileFieldIndex.CreatedBy } );		
			_organizationRoleUser = null;
		}

		/// <summary> setups the sync logic for member _organizationRoleUser</summary>
		/// <param name="relatedEntity">Instance to set as the related entity of type entityType</param>
		private void SetupSyncOrganizationRoleUser(IEntity2 relatedEntity)
		{
			if(_organizationRoleUser!=relatedEntity)
			{
				DesetupSyncOrganizationRoleUser(true, true);
				_organizationRoleUser = (OrganizationRoleUserEntity)relatedEntity;
				base.PerformSetupSyncRelatedEntity( _organizationRoleUser, new PropertyChangedEventHandler( OnOrganizationRoleUserPropertyChanged ), "OrganizationRoleUser", FileEntity.Relations.OrganizationRoleUserEntityUsingCreatedBy, true, new string[] {  } );
			}
		}
		
		/// <summary>Handles property change events of properties in a related entity.</summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void OnOrganizationRoleUserPropertyChanged( object sender, PropertyChangedEventArgs e )
		{
			switch( e.PropertyName )
			{
				default:
					break;
			}
		}


		/// <summary> Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this FileEntity</param>
		/// <param name="fields">Fields of this entity</param>
		protected virtual void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			base.Fields = fields;
			base.IsNew=true;
			base.Validator = validator;
			InitClassMembers();

			
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitialized();
		}

		#region Class Property Declarations
		/// <summary> The relations object holding all relations of this entity with other entity classes.</summary>
		public  static FileRelations Relations
		{
			get	{ return new FileRelations(); }
		}
		
		/// <summary> The custom properties for this entity type.</summary>
		/// <remarks>The data returned from this property should be considered read-only: it is not thread safe to alter this data at runtime.</remarks>
		public  static Dictionary<string, string> CustomProperties
		{
			get { return _customProperties;}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccount______
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))),
					(IEntityRelation)GetRelationsForField("Account______")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, null, null, "Account______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccount_____
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))),
					(IEntityRelation)GetRelationsForField("Account_____")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, null, null, "Account_____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccount________
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))),
					(IEntityRelation)GetRelationsForField("Account________")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, null, null, "Account________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccount_______
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))),
					(IEntityRelation)GetRelationsForField("Account_______")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, null, null, "Account_______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccount____
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))),
					(IEntityRelation)GetRelationsForField("Account____")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, null, null, "Account____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccount_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))),
					(IEntityRelation)GetRelationsForField("Account_")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, null, null, "Account_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccount
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))),
					(IEntityRelation)GetRelationsForField("Account")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, null, null, "Account", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccount___
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))),
					(IEntityRelation)GetRelationsForField("Account___")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, null, null, "Account___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccount__
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))),
					(IEntityRelation)GetRelationsForField("Account__")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, null, null, "Account__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallUpload_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CallUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("CallUpload_")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CallUploadEntity, 0, null, null, null, null, "CallUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallUpload
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CallUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("CallUpload")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CallUploadEntity, 0, null, null, null, null, "CallUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ChaperoneSignature' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathChaperoneSignature_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ChaperoneSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ChaperoneSignatureEntityFactory))),
					(IEntityRelation)GetRelationsForField("ChaperoneSignature_")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.ChaperoneSignatureEntity, 0, null, null, null, null, "ChaperoneSignature_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ChaperoneSignature' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathChaperoneSignature
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ChaperoneSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ChaperoneSignatureEntityFactory))),
					(IEntityRelation)GetRelationsForField("ChaperoneSignature")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.ChaperoneSignatureEntity, 0, null, null, null, null, "ChaperoneSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CorporateUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCorporateUpload_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CorporateUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CorporateUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("CorporateUpload_")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CorporateUploadEntity, 0, null, null, null, null, "CorporateUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CorporateUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCorporateUpload
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CorporateUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CorporateUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("CorporateUpload")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CorporateUploadEntity, 0, null, null, null, null, "CorporateUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CorporateUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCorporateUpload__
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CorporateUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CorporateUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("CorporateUpload__")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CorporateUploadEntity, 0, null, null, null, null, "CorporateUpload__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerActivityTypeUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerActivityTypeUpload_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerActivityTypeUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerActivityTypeUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerActivityTypeUpload_")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CustomerActivityTypeUploadEntity, 0, null, null, null, null, "CustomerActivityTypeUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerActivityTypeUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerActivityTypeUpload
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerActivityTypeUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerActivityTypeUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerActivityTypeUpload")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CustomerActivityTypeUploadEntity, 0, null, null, null, null, "CustomerActivityTypeUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerPhoneNumberUpdateUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerPhoneNumberUpdateUpload_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerPhoneNumberUpdateUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerPhoneNumberUpdateUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerPhoneNumberUpdateUpload_")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CustomerPhoneNumberUpdateUploadEntity, 0, null, null, null, null, "CustomerPhoneNumberUpdateUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerPhoneNumberUpdateUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerPhoneNumberUpdateUpload
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerPhoneNumberUpdateUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerPhoneNumberUpdateUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerPhoneNumberUpdateUpload")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CustomerPhoneNumberUpdateUploadEntity, 0, null, null, null, null, "CustomerPhoneNumberUpdateUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EligibilityUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEligibilityUpload_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EligibilityUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EligibilityUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("EligibilityUpload_")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EligibilityUploadEntity, 0, null, null, null, null, "EligibilityUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EligibilityUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEligibilityUpload
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EligibilityUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EligibilityUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("EligibilityUpload")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EligibilityUploadEntity, 0, null, null, null, null, "EligibilityUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerGiftCard' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerGiftCard_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventCustomerGiftCardEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerGiftCardEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventCustomerGiftCard_")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EventCustomerGiftCardEntity, 0, null, null, null, null, "EventCustomerGiftCard_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerGiftCard' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerGiftCard
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventCustomerGiftCardEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerGiftCardEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventCustomerGiftCard")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EventCustomerGiftCardEntity, 0, null, null, null, null, "EventCustomerGiftCard", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ExitInterviewSignature' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathExitInterviewSignature
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ExitInterviewSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExitInterviewSignatureEntityFactory))),
					(IEntityRelation)GetRelationsForField("ExitInterviewSignature")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.ExitInterviewSignatureEntity, 0, null, null, null, null, "ExitInterviewSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ExportableReportsQueue' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathExportableReportsQueue
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ExportableReportsQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExportableReportsQueueEntityFactory))),
					(IEntityRelation)GetRelationsForField("ExportableReportsQueue")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.ExportableReportsQueueEntity, 0, null, null, null, null, "ExportableReportsQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'FluConsentSignature' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFluConsentSignature_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<FluConsentSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentSignatureEntityFactory))),
					(IEntityRelation)GetRelationsForField("FluConsentSignature_")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.FluConsentSignatureEntity, 0, null, null, null, null, "FluConsentSignature_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'FluConsentSignature' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFluConsentSignature
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<FluConsentSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentSignatureEntityFactory))),
					(IEntityRelation)GetRelationsForField("FluConsentSignature")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.FluConsentSignatureEntity, 0, null, null, null, null, "FluConsentSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HealthPlanCriteriaAssignmentUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHealthPlanCriteriaAssignmentUpload
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<HealthPlanCriteriaAssignmentUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCriteriaAssignmentUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("HealthPlanCriteriaAssignmentUpload")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.HealthPlanCriteriaAssignmentUploadEntity, 0, null, null, null, null, "HealthPlanCriteriaAssignmentUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HostImage' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHostImage
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<HostImageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HostImageEntityFactory))),
					(IEntityRelation)GetRelationsForField("HostImage")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.HostImageEntity, 0, null, null, null, null, "HostImage", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'MedicalVendorProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathMedicalVendorProfile_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<MedicalVendorProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicalVendorProfileEntityFactory))),
					(IEntityRelation)GetRelationsForField("MedicalVendorProfile_")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.MedicalVendorProfileEntity, 0, null, null, null, null, "MedicalVendorProfile_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'MedicalVendorProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathMedicalVendorProfile
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<MedicalVendorProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicalVendorProfileEntityFactory))),
					(IEntityRelation)GetRelationsForField("MedicalVendorProfile")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.MedicalVendorProfileEntity, 0, null, null, null, null, "MedicalVendorProfile", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'MedicationUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathMedicationUpload_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<MedicationUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicationUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("MedicationUpload_")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.MedicationUploadEntity, 0, null, null, null, null, "MedicationUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'MedicationUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathMedicationUpload
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<MedicationUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicationUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("MedicationUpload")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.MedicationUploadEntity, 0, null, null, null, null, "MedicationUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'MergeCustomerUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathMergeCustomerUpload_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<MergeCustomerUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MergeCustomerUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("MergeCustomerUpload_")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.MergeCustomerUploadEntity, 0, null, null, null, null, "MergeCustomerUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'MergeCustomerUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathMergeCustomerUpload
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<MergeCustomerUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MergeCustomerUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("MergeCustomerUpload")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.MergeCustomerUploadEntity, 0, null, null, null, null, "MergeCustomerUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Organization' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganization_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory))),
					(IEntityRelation)GetRelationsForField("Organization_")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationEntity, 0, null, null, null, null, "Organization_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Organization' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganization
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory))),
					(IEntityRelation)GetRelationsForField("Organization")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationEntity, 0, null, null, null, null, "Organization", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OutboundUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOutboundUpload_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<OutboundUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OutboundUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("OutboundUpload_")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OutboundUploadEntity, 0, null, null, null, null, "OutboundUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OutboundUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOutboundUpload
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<OutboundUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OutboundUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("OutboundUpload")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OutboundUploadEntity, 0, null, null, null, null, "OutboundUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Package' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPackage
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<PackageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PackageEntityFactory))),
					(IEntityRelation)GetRelationsForField("Package")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.PackageEntity, 0, null, null, null, null, "Package", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ParticipationConsentSignature' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathParticipationConsentSignature_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ParticipationConsentSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ParticipationConsentSignatureEntityFactory))),
					(IEntityRelation)GetRelationsForField("ParticipationConsentSignature_")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.ParticipationConsentSignatureEntity, 0, null, null, null, null, "ParticipationConsentSignature_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ParticipationConsentSignature' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathParticipationConsentSignature
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ParticipationConsentSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ParticipationConsentSignatureEntityFactory))),
					(IEntityRelation)GetRelationsForField("ParticipationConsentSignature")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.ParticipationConsentSignatureEntity, 0, null, null, null, null, "ParticipationConsentSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PhysicianProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPhysicianProfile_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<PhysicianProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PhysicianProfileEntityFactory))),
					(IEntityRelation)GetRelationsForField("PhysicianProfile_")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.PhysicianProfileEntity, 0, null, null, null, null, "PhysicianProfile_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PhysicianProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPhysicianProfile
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<PhysicianProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PhysicianProfileEntityFactory))),
					(IEntityRelation)GetRelationsForField("PhysicianProfile")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.PhysicianProfileEntity, 0, null, null, null, null, "PhysicianProfile", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PhysicianRecordRequestSignature' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPhysicianRecordRequestSignature
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<PhysicianRecordRequestSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PhysicianRecordRequestSignatureEntityFactory))),
					(IEntityRelation)GetRelationsForField("PhysicianRecordRequestSignature")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.PhysicianRecordRequestSignatureEntity, 0, null, null, null, null, "PhysicianRecordRequestSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'RapsUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathRapsUpload_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<RapsUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RapsUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("RapsUpload_")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.RapsUploadEntity, 0, null, null, null, null, "RapsUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'RapsUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathRapsUpload
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<RapsUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RapsUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("RapsUpload")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.RapsUploadEntity, 0, null, null, null, null, "RapsUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ResultArchiveUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathResultArchiveUpload
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ResultArchiveUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ResultArchiveUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("ResultArchiveUpload")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.ResultArchiveUploadEntity, 0, null, null, null, null, "ResultArchiveUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'StaffEventScheduleUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathStaffEventScheduleUpload_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<StaffEventScheduleUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(StaffEventScheduleUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("StaffEventScheduleUpload_")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.StaffEventScheduleUploadEntity, 0, null, null, null, null, "StaffEventScheduleUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'StaffEventScheduleUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathStaffEventScheduleUpload
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<StaffEventScheduleUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(StaffEventScheduleUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("StaffEventScheduleUpload")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.StaffEventScheduleUploadEntity, 0, null, null, null, null, "StaffEventScheduleUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SuspectConditionUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSuspectConditionUpload_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<SuspectConditionUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SuspectConditionUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("SuspectConditionUpload_")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.SuspectConditionUploadEntity, 0, null, null, null, null, "SuspectConditionUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SuspectConditionUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSuspectConditionUpload
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<SuspectConditionUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SuspectConditionUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("SuspectConditionUpload")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.SuspectConditionUploadEntity, 0, null, null, null, null, "SuspectConditionUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Testimonial' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestimonial
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<TestimonialEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestimonialEntityFactory))),
					(IEntityRelation)GetRelationsForField("Testimonial")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.TestimonialEntity, 0, null, null, null, null, "Testimonial", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TestMedia' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestMedia
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<TestMediaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestMediaEntityFactory))),
					(IEntityRelation)GetRelationsForField("TestMedia")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.TestMediaEntity, 0, null, null, null, null, "TestMedia", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'WellMedAttestation' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathWellMedAttestation
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<WellMedAttestationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(WellMedAttestationEntityFactory))),
					(IEntityRelation)GetRelationsForField("WellMedAttestation")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.WellMedAttestationEntity, 0, null, null, null, null, "WellMedAttestation", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaEligibilityUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.EligibilityUploadEntityUsingLogFileId;
				intermediateRelation.SetAliases(string.Empty, "EligibilityUpload_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaEligibilityUpload_"), null, "AccountCollectionViaEligibilityUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaCorporateUpload
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.CorporateUploadEntityUsingAdjustOrderLogFileId;
				intermediateRelation.SetAliases(string.Empty, "CorporateUpload_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaCorporateUpload"), null, "AccountCollectionViaCorporateUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaCorporateUpload__
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.CorporateUploadEntityUsingLogFileId;
				intermediateRelation.SetAliases(string.Empty, "CorporateUpload_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaCorporateUpload__"), null, "AccountCollectionViaCorporateUpload__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaCorporateUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.CorporateUploadEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "CorporateUpload_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaCorporateUpload_"), null, "AccountCollectionViaCorporateUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaEligibilityUpload
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.EligibilityUploadEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "EligibilityUpload_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaEligibilityUpload"), null, "AccountCollectionViaEligibilityUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Address' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAddressCollectionViaOrganization_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.OrganizationEntityUsingTeamImageId;
				intermediateRelation.SetAliases(string.Empty, "Organization_");
				return new PrefetchPathElement2(new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.AddressEntity, 0, null, null, GetRelationsForField("AddressCollectionViaOrganization_"), null, "AddressCollectionViaOrganization_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Address' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAddressCollectionViaOrganization
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.OrganizationEntityUsingLogoImageId;
				intermediateRelation.SetAliases(string.Empty, "Organization_");
				return new PrefetchPathElement2(new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.AddressEntity, 0, null, null, GetRelationsForField("AddressCollectionViaOrganization"), null, "AddressCollectionViaOrganization", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CheckListQuestion' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCheckListQuestionCollectionViaExitInterviewSignature
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.ExitInterviewSignatureEntityUsingSignatureFileId;
				intermediateRelation.SetAliases(string.Empty, "ExitInterviewSignature_");
				return new PrefetchPathElement2(new EntityCollection<CheckListQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListQuestionEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CheckListQuestionEntity, 0, null, null, GetRelationsForField("CheckListQuestionCollectionViaExitInterviewSignature"), null, "CheckListQuestionCollectionViaExitInterviewSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CheckListTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCheckListTemplateCollectionViaAccount_________________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingMemberLetterFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CheckListTemplateEntity, 0, null, null, GetRelationsForField("CheckListTemplateCollectionViaAccount_________________"), null, "CheckListTemplateCollectionViaAccount_________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CheckListTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCheckListTemplateCollectionViaAccount_____
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingPcpLetterPdfFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CheckListTemplateEntity, 0, null, null, GetRelationsForField("CheckListTemplateCollectionViaAccount_____"), null, "CheckListTemplateCollectionViaAccount_____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CheckListTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCheckListTemplateCollectionViaAccount____
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingPcpLetterPdfFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CheckListTemplateEntity, 0, null, null, GetRelationsForField("CheckListTemplateCollectionViaAccount____"), null, "CheckListTemplateCollectionViaAccount____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CheckListTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCheckListTemplateCollectionViaAccount_____________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingFluffLetterFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CheckListTemplateEntity, 0, null, null, GetRelationsForField("CheckListTemplateCollectionViaAccount_____________"), null, "CheckListTemplateCollectionViaAccount_____________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CheckListTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCheckListTemplateCollectionViaAccount______
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingSurveyPdfFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CheckListTemplateEntity, 0, null, null, GetRelationsForField("CheckListTemplateCollectionViaAccount______"), null, "CheckListTemplateCollectionViaAccount______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CheckListTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCheckListTemplateCollectionViaAccount_______
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingSurveyPdfFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CheckListTemplateEntity, 0, null, null, GetRelationsForField("CheckListTemplateCollectionViaAccount_______"), null, "CheckListTemplateCollectionViaAccount_______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CheckListTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCheckListTemplateCollectionViaAccount__________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingConfirmationScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CheckListTemplateEntity, 0, null, null, GetRelationsForField("CheckListTemplateCollectionViaAccount__________"), null, "CheckListTemplateCollectionViaAccount__________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CheckListTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCheckListTemplateCollectionViaAccount_________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingCallCenterScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CheckListTemplateEntity, 0, null, null, GetRelationsForField("CheckListTemplateCollectionViaAccount_________"), null, "CheckListTemplateCollectionViaAccount_________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CheckListTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCheckListTemplateCollectionViaAccount____________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingMemberLetterFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CheckListTemplateEntity, 0, null, null, GetRelationsForField("CheckListTemplateCollectionViaAccount____________"), null, "CheckListTemplateCollectionViaAccount____________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CheckListTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCheckListTemplateCollectionViaAccount___________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingInboundCallScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CheckListTemplateEntity, 0, null, null, GetRelationsForField("CheckListTemplateCollectionViaAccount___________"), null, "CheckListTemplateCollectionViaAccount___________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CheckListTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCheckListTemplateCollectionViaAccount_______________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingConfirmationScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CheckListTemplateEntity, 0, null, null, GetRelationsForField("CheckListTemplateCollectionViaAccount_______________"), null, "CheckListTemplateCollectionViaAccount_______________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CheckListTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCheckListTemplateCollectionViaAccount________________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingInboundCallScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CheckListTemplateEntity, 0, null, null, GetRelationsForField("CheckListTemplateCollectionViaAccount________________"), null, "CheckListTemplateCollectionViaAccount________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CheckListTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCheckListTemplateCollectionViaAccount________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingFluffLetterFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CheckListTemplateEntity, 0, null, null, GetRelationsForField("CheckListTemplateCollectionViaAccount________"), null, "CheckListTemplateCollectionViaAccount________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CheckListTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCheckListTemplateCollectionViaAccount______________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingCallCenterScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CheckListTemplateEntity, 0, null, null, GetRelationsForField("CheckListTemplateCollectionViaAccount______________"), null, "CheckListTemplateCollectionViaAccount______________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CheckListTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCheckListTemplateCollectionViaAccount_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingCheckListFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CheckListTemplateEntity, 0, null, null, GetRelationsForField("CheckListTemplateCollectionViaAccount_"), null, "CheckListTemplateCollectionViaAccount_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CheckListTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCheckListTemplateCollectionViaAccount___
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingParticipantLetterId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CheckListTemplateEntity, 0, null, null, GetRelationsForField("CheckListTemplateCollectionViaAccount___"), null, "CheckListTemplateCollectionViaAccount___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CheckListTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCheckListTemplateCollectionViaAccount__
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingParticipantLetterId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CheckListTemplateEntity, 0, null, null, GetRelationsForField("CheckListTemplateCollectionViaAccount__"), null, "CheckListTemplateCollectionViaAccount__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CheckListTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCheckListTemplateCollectionViaAccount
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingCheckListFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CheckListTemplateEntity, 0, null, null, GetRelationsForField("CheckListTemplateCollectionViaAccount"), null, "CheckListTemplateCollectionViaAccount", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Contract' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathContractCollectionViaMedicalVendorProfile_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.MedicalVendorProfileEntityUsingDoctorLetterFileId;
				intermediateRelation.SetAliases(string.Empty, "MedicalVendorProfile_");
				return new PrefetchPathElement2(new EntityCollection<ContractEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContractEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.ContractEntity, 0, null, null, GetRelationsForField("ContractCollectionViaMedicalVendorProfile_"), null, "ContractCollectionViaMedicalVendorProfile_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Contract' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathContractCollectionViaMedicalVendorProfile
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.MedicalVendorProfileEntityUsingResultLetterCoBrandingFileId;
				intermediateRelation.SetAliases(string.Empty, "MedicalVendorProfile_");
				return new PrefetchPathElement2(new EntityCollection<ContractEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContractEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.ContractEntity, 0, null, null, GetRelationsForField("ContractCollectionViaMedicalVendorProfile"), null, "ContractCollectionViaMedicalVendorProfile", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerEventScreeningTests' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerEventScreeningTestsCollectionViaTestMedia
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.TestMediaEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "TestMedia_");
				return new PrefetchPathElement2(new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CustomerEventScreeningTestsEntity, 0, null, null, GetRelationsForField("CustomerEventScreeningTestsCollectionViaTestMedia"), null, "CustomerEventScreeningTestsCollectionViaTestMedia", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaTestimonial
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.TestimonialEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "Testimonial_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaTestimonial"), null, "CustomerProfileCollectionViaTestimonial", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount_________________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingCallCenterScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount_________________"), null, "EmailTemplateCollectionViaAccount_________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount__________________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingConfirmationScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount__________________"), null, "EmailTemplateCollectionViaAccount__________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount___________________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingInboundCallScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount___________________"), null, "EmailTemplateCollectionViaAccount___________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount_____________________________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingInboundCallScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount_____________________________"), null, "EmailTemplateCollectionViaAccount_____________________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount___________________________________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingMemberLetterFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount___________________________________"), null, "EmailTemplateCollectionViaAccount___________________________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount________________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingFluffLetterFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount________________"), null, "EmailTemplateCollectionViaAccount________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount___________________________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingCallCenterScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount___________________________"), null, "EmailTemplateCollectionViaAccount___________________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount__________________________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingFluffLetterFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount__________________________"), null, "EmailTemplateCollectionViaAccount__________________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount_________________________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingMemberLetterFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount_________________________"), null, "EmailTemplateCollectionViaAccount_________________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount____________________________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingConfirmationScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount____________________________"), null, "EmailTemplateCollectionViaAccount____________________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount______________________________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingMemberLetterFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount______________________________"), null, "EmailTemplateCollectionViaAccount______________________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount_______________________________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingFluffLetterFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount_______________________________"), null, "EmailTemplateCollectionViaAccount_______________________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount________________________________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingCallCenterScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount________________________________"), null, "EmailTemplateCollectionViaAccount________________________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount_________________________________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingConfirmationScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount_________________________________"), null, "EmailTemplateCollectionViaAccount_________________________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount__________________________________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingInboundCallScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount__________________________________"), null, "EmailTemplateCollectionViaAccount__________________________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount____________________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingMemberLetterFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount____________________"), null, "EmailTemplateCollectionViaAccount____________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount_____________________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingFluffLetterFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount_____________________"), null, "EmailTemplateCollectionViaAccount_____________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount________________________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingInboundCallScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount________________________"), null, "EmailTemplateCollectionViaAccount________________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount_______________________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingConfirmationScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount_______________________"), null, "EmailTemplateCollectionViaAccount_______________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount______________________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingCallCenterScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount______________________"), null, "EmailTemplateCollectionViaAccount______________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount__
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingCheckListFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount__"), null, "EmailTemplateCollectionViaAccount__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount___
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingCheckListFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount___"), null, "EmailTemplateCollectionViaAccount___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount____________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingSurveyPdfFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount____________"), null, "EmailTemplateCollectionViaAccount____________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount____
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingParticipantLetterId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount____"), null, "EmailTemplateCollectionViaAccount____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingPcpLetterPdfFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount________"), null, "EmailTemplateCollectionViaAccount________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount_______
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingParticipantLetterId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount_______"), null, "EmailTemplateCollectionViaAccount_______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount___________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingPcpLetterPdfFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount___________"), null, "EmailTemplateCollectionViaAccount___________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount__________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingPcpLetterPdfFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount__________"), null, "EmailTemplateCollectionViaAccount__________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingCheckListFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount_"), null, "EmailTemplateCollectionViaAccount_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount_____
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingParticipantLetterId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount_____"), null, "EmailTemplateCollectionViaAccount_____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingCheckListFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount"), null, "EmailTemplateCollectionViaAccount", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount_________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingPcpLetterPdfFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount_________"), null, "EmailTemplateCollectionViaAccount_________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount______
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingParticipantLetterId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount______"), null, "EmailTemplateCollectionViaAccount______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount______________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingSurveyPdfFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount______________"), null, "EmailTemplateCollectionViaAccount______________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount_______________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingSurveyPdfFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount_______________"), null, "EmailTemplateCollectionViaAccount_______________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplateCollectionViaAccount_____________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingSurveyPdfFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, GetRelationsForField("EmailTemplateCollectionViaAccount_____________"), null, "EmailTemplateCollectionViaAccount_____________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerResult' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerResultCollectionViaWellMedAttestation
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.WellMedAttestationEntityUsingProviderSignatureFileId;
				intermediateRelation.SetAliases(string.Empty, "WellMedAttestation_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EventCustomerResultEntity, 0, null, null, GetRelationsForField("EventCustomerResultCollectionViaWellMedAttestation"), null, "EventCustomerResultCollectionViaWellMedAttestation", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaChaperoneSignature
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.ChaperoneSignatureEntityUsingSignatureFileId;
				intermediateRelation.SetAliases(string.Empty, "ChaperoneSignature_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaChaperoneSignature"), null, "EventCustomersCollectionViaChaperoneSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaFluConsentSignature
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.FluConsentSignatureEntityUsingSignatureFileId;
				intermediateRelation.SetAliases(string.Empty, "FluConsentSignature_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaFluConsentSignature"), null, "EventCustomersCollectionViaFluConsentSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaParticipationConsentSignature
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.ParticipationConsentSignatureEntityUsingInsuranceSignatureFileId;
				intermediateRelation.SetAliases(string.Empty, "ParticipationConsentSignature_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaParticipationConsentSignature"), null, "EventCustomersCollectionViaParticipationConsentSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaFluConsentSignature_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.FluConsentSignatureEntityUsingClinicalProviderSignatureFileId;
				intermediateRelation.SetAliases(string.Empty, "FluConsentSignature_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaFluConsentSignature_"), null, "EventCustomersCollectionViaFluConsentSignature_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaParticipationConsentSignature_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.ParticipationConsentSignatureEntityUsingSignatureFileId;
				intermediateRelation.SetAliases(string.Empty, "ParticipationConsentSignature_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaParticipationConsentSignature_"), null, "EventCustomersCollectionViaParticipationConsentSignature_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaExitInterviewSignature
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.ExitInterviewSignatureEntityUsingSignatureFileId;
				intermediateRelation.SetAliases(string.Empty, "ExitInterviewSignature_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaExitInterviewSignature"), null, "EventCustomersCollectionViaExitInterviewSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaEventCustomerGiftCard_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.EventCustomerGiftCardEntityUsingTechnicianSignatureFileId;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerGiftCard_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaEventCustomerGiftCard_"), null, "EventCustomersCollectionViaEventCustomerGiftCard_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaChaperoneSignature_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.ChaperoneSignatureEntityUsingStaffSignatureFileId;
				intermediateRelation.SetAliases(string.Empty, "ChaperoneSignature_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaChaperoneSignature_"), null, "EventCustomersCollectionViaChaperoneSignature_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaPhysicianRecordRequestSignature
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.PhysicianRecordRequestSignatureEntityUsingSignatureFileId;
				intermediateRelation.SetAliases(string.Empty, "PhysicianRecordRequestSignature_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaPhysicianRecordRequestSignature"), null, "EventCustomersCollectionViaPhysicianRecordRequestSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaEventCustomerGiftCard
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.EventCustomerGiftCardEntityUsingPatientSignatureFileId;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerGiftCard_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaEventCustomerGiftCard"), null, "EventCustomersCollectionViaEventCustomerGiftCard", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaResultArchiveUpload
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.ResultArchiveUploadEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "ResultArchiveUpload_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaResultArchiveUpload"), null, "EventsCollectionViaResultArchiveUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ExportableReports' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathExportableReportsCollectionViaExportableReportsQueue
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.ExportableReportsQueueEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "ExportableReportsQueue_");
				return new PrefetchPathElement2(new EntityCollection<ExportableReportsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExportableReportsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.ExportableReportsEntity, 0, null, null, GetRelationsForField("ExportableReportsCollectionViaExportableReportsQueue"), null, "ExportableReportsCollectionViaExportableReportsQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'FluConsentTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFluConsentTemplateCollectionViaAccount______
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingConfirmationScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.FluConsentTemplateEntity, 0, null, null, GetRelationsForField("FluConsentTemplateCollectionViaAccount______"), null, "FluConsentTemplateCollectionViaAccount______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'FluConsentTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFluConsentTemplateCollectionViaAccount
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingCheckListFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.FluConsentTemplateEntity, 0, null, null, GetRelationsForField("FluConsentTemplateCollectionViaAccount"), null, "FluConsentTemplateCollectionViaAccount", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'FluConsentTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFluConsentTemplateCollectionViaAccount________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingMemberLetterFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.FluConsentTemplateEntity, 0, null, null, GetRelationsForField("FluConsentTemplateCollectionViaAccount________"), null, "FluConsentTemplateCollectionViaAccount________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'FluConsentTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFluConsentTemplateCollectionViaAccount_______
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingInboundCallScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.FluConsentTemplateEntity, 0, null, null, GetRelationsForField("FluConsentTemplateCollectionViaAccount_______"), null, "FluConsentTemplateCollectionViaAccount_______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'FluConsentTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFluConsentTemplateCollectionViaAccount___
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingSurveyPdfFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.FluConsentTemplateEntity, 0, null, null, GetRelationsForField("FluConsentTemplateCollectionViaAccount___"), null, "FluConsentTemplateCollectionViaAccount___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'FluConsentTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFluConsentTemplateCollectionViaAccount_____
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingCallCenterScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.FluConsentTemplateEntity, 0, null, null, GetRelationsForField("FluConsentTemplateCollectionViaAccount_____"), null, "FluConsentTemplateCollectionViaAccount_____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'FluConsentTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFluConsentTemplateCollectionViaAccount__
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingPcpLetterPdfFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.FluConsentTemplateEntity, 0, null, null, GetRelationsForField("FluConsentTemplateCollectionViaAccount__"), null, "FluConsentTemplateCollectionViaAccount__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'FluConsentTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFluConsentTemplateCollectionViaAccount_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingParticipantLetterId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.FluConsentTemplateEntity, 0, null, null, GetRelationsForField("FluConsentTemplateCollectionViaAccount_"), null, "FluConsentTemplateCollectionViaAccount_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'FluConsentTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFluConsentTemplateCollectionViaAccount____
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingFluffLetterFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.FluConsentTemplateEntity, 0, null, null, GetRelationsForField("FluConsentTemplateCollectionViaAccount____"), null, "FluConsentTemplateCollectionViaAccount____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HafTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHafTemplateCollectionViaAccount________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingMemberLetterFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.HafTemplateEntity, 0, null, null, GetRelationsForField("HafTemplateCollectionViaAccount________"), null, "HafTemplateCollectionViaAccount________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HafTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHafTemplateCollectionViaAccount______
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingConfirmationScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.HafTemplateEntity, 0, null, null, GetRelationsForField("HafTemplateCollectionViaAccount______"), null, "HafTemplateCollectionViaAccount______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HafTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHafTemplateCollectionViaAccount__
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingPcpLetterPdfFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.HafTemplateEntity, 0, null, null, GetRelationsForField("HafTemplateCollectionViaAccount__"), null, "HafTemplateCollectionViaAccount__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HafTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHafTemplateCollectionViaAccount____
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingFluffLetterFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.HafTemplateEntity, 0, null, null, GetRelationsForField("HafTemplateCollectionViaAccount____"), null, "HafTemplateCollectionViaAccount____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HafTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHafTemplateCollectionViaPackage
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.PackageEntityUsingForOrderDisplayFileId;
				intermediateRelation.SetAliases(string.Empty, "Package_");
				return new PrefetchPathElement2(new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.HafTemplateEntity, 0, null, null, GetRelationsForField("HafTemplateCollectionViaPackage"), null, "HafTemplateCollectionViaPackage", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HafTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHafTemplateCollectionViaAccount_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingParticipantLetterId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.HafTemplateEntity, 0, null, null, GetRelationsForField("HafTemplateCollectionViaAccount_"), null, "HafTemplateCollectionViaAccount_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HafTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHafTemplateCollectionViaAccount_______
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingInboundCallScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.HafTemplateEntity, 0, null, null, GetRelationsForField("HafTemplateCollectionViaAccount_______"), null, "HafTemplateCollectionViaAccount_______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HafTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHafTemplateCollectionViaAccount_____
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingCallCenterScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.HafTemplateEntity, 0, null, null, GetRelationsForField("HafTemplateCollectionViaAccount_____"), null, "HafTemplateCollectionViaAccount_____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HafTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHafTemplateCollectionViaAccount
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingCheckListFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.HafTemplateEntity, 0, null, null, GetRelationsForField("HafTemplateCollectionViaAccount"), null, "HafTemplateCollectionViaAccount", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HafTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHafTemplateCollectionViaAccount___
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingSurveyPdfFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.HafTemplateEntity, 0, null, null, GetRelationsForField("HafTemplateCollectionViaAccount___"), null, "HafTemplateCollectionViaAccount___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HealthPlanCallQueueCriteria' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.HealthPlanCriteriaAssignmentUploadEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "HealthPlanCriteriaAssignmentUpload_");
				return new PrefetchPathElement2(new EntityCollection<HealthPlanCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCallQueueCriteriaEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.HealthPlanCallQueueCriteriaEntity, 0, null, null, GetRelationsForField("HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload"), null, "HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaStaffEventScheduleUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.StaffEventScheduleUploadEntityUsingLogFileId;
				intermediateRelation.SetAliases(string.Empty, "StaffEventScheduleUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaStaffEventScheduleUpload_"), null, "LookupCollectionViaStaffEventScheduleUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaRapsUpload
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.RapsUploadEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "RapsUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaRapsUpload"), null, "LookupCollectionViaRapsUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCustomerPhoneNumberUpdateUpload
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.CustomerPhoneNumberUpdateUploadEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "CustomerPhoneNumberUpdateUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCustomerPhoneNumberUpdateUpload"), null, "LookupCollectionViaCustomerPhoneNumberUpdateUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEligibilityUpload
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.EligibilityUploadEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "EligibilityUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEligibilityUpload"), null, "LookupCollectionViaEligibilityUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCustomerPhoneNumberUpdateUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.CustomerPhoneNumberUpdateUploadEntityUsingLogFileId;
				intermediateRelation.SetAliases(string.Empty, "CustomerPhoneNumberUpdateUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCustomerPhoneNumberUpdateUpload_"), null, "LookupCollectionViaCustomerPhoneNumberUpdateUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEligibilityUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.EligibilityUploadEntityUsingLogFileId;
				intermediateRelation.SetAliases(string.Empty, "EligibilityUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEligibilityUpload_"), null, "LookupCollectionViaEligibilityUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaStaffEventScheduleUpload
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.StaffEventScheduleUploadEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "StaffEventScheduleUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaStaffEventScheduleUpload"), null, "LookupCollectionViaStaffEventScheduleUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaRapsUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.RapsUploadEntityUsingLogFileId;
				intermediateRelation.SetAliases(string.Empty, "RapsUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaRapsUpload_"), null, "LookupCollectionViaRapsUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaMergeCustomerUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.MergeCustomerUploadEntityUsingLogFileId;
				intermediateRelation.SetAliases(string.Empty, "MergeCustomerUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaMergeCustomerUpload_"), null, "LookupCollectionViaMergeCustomerUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaMergeCustomerUpload
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.MergeCustomerUploadEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "MergeCustomerUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaMergeCustomerUpload"), null, "LookupCollectionViaMergeCustomerUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaMedicationUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.MedicationUploadEntityUsingLogFileId;
				intermediateRelation.SetAliases(string.Empty, "MedicationUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaMedicationUpload_"), null, "LookupCollectionViaMedicationUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaOutboundUpload__
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.OutboundUploadEntityUsingLogFileId;
				intermediateRelation.SetAliases(string.Empty, "OutboundUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaOutboundUpload__"), null, "LookupCollectionViaOutboundUpload__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaOutboundUpload
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.OutboundUploadEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "OutboundUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaOutboundUpload"), null, "LookupCollectionViaOutboundUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaOutboundUpload___
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.OutboundUploadEntityUsingLogFileId;
				intermediateRelation.SetAliases(string.Empty, "OutboundUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaOutboundUpload___"), null, "LookupCollectionViaOutboundUpload___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaPackage
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.PackageEntityUsingForOrderDisplayFileId;
				intermediateRelation.SetAliases(string.Empty, "Package_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaPackage"), null, "LookupCollectionViaPackage", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaSuspectConditionUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.SuspectConditionUploadEntityUsingLogFileId;
				intermediateRelation.SetAliases(string.Empty, "SuspectConditionUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaSuspectConditionUpload_"), null, "LookupCollectionViaSuspectConditionUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaExportableReportsQueue
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.ExportableReportsQueueEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "ExportableReportsQueue_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaExportableReportsQueue"), null, "LookupCollectionViaExportableReportsQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaSuspectConditionUpload
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.SuspectConditionUploadEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "SuspectConditionUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaSuspectConditionUpload"), null, "LookupCollectionViaSuspectConditionUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaMedicationUpload
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.MedicationUploadEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "MedicationUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaMedicationUpload"), null, "LookupCollectionViaMedicationUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaHostImage
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.HostImageEntityUsingImageId;
				intermediateRelation.SetAliases(string.Empty, "HostImage_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaHostImage"), null, "LookupCollectionViaHostImage", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaOutboundUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.OutboundUploadEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "OutboundUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaOutboundUpload_"), null, "LookupCollectionViaOutboundUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaWellMedAttestation
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.WellMedAttestationEntityUsingProviderSignatureFileId;
				intermediateRelation.SetAliases(string.Empty, "WellMedAttestation_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaWellMedAttestation"), null, "LookupCollectionViaWellMedAttestation", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaAccount___
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingSurveyPdfFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaAccount___"), null, "LookupCollectionViaAccount___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaAccount______
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingConfirmationScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaAccount______"), null, "LookupCollectionViaAccount______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaAccount__
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingPcpLetterPdfFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaAccount__"), null, "LookupCollectionViaAccount__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCorporateUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.CorporateUploadEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "CorporateUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCorporateUpload_"), null, "LookupCollectionViaCorporateUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaAccount____
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingFluffLetterFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaAccount____"), null, "LookupCollectionViaAccount____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaAccount_____
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingCallCenterScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaAccount_____"), null, "LookupCollectionViaAccount_____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCallUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.CallUploadEntityUsingLogFileId;
				intermediateRelation.SetAliases(string.Empty, "CallUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCallUpload_"), null, "LookupCollectionViaCallUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCorporateUpload
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.CorporateUploadEntityUsingAdjustOrderLogFileId;
				intermediateRelation.SetAliases(string.Empty, "CorporateUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCorporateUpload"), null, "LookupCollectionViaCorporateUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCallUpload
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.CallUploadEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "CallUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCallUpload"), null, "LookupCollectionViaCallUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaAccount_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingParticipantLetterId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaAccount_"), null, "LookupCollectionViaAccount_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCustomerActivityTypeUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.CustomerActivityTypeUploadEntityUsingLogFileId;
				intermediateRelation.SetAliases(string.Empty, "CustomerActivityTypeUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCustomerActivityTypeUpload_"), null, "LookupCollectionViaCustomerActivityTypeUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaAccount
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingCheckListFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaAccount"), null, "LookupCollectionViaAccount", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaAccount_______
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingInboundCallScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaAccount_______"), null, "LookupCollectionViaAccount_______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCorporateUpload__
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.CorporateUploadEntityUsingLogFileId;
				intermediateRelation.SetAliases(string.Empty, "CorporateUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCorporateUpload__"), null, "LookupCollectionViaCorporateUpload__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCustomerActivityTypeUpload
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.CustomerActivityTypeUploadEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "CustomerActivityTypeUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCustomerActivityTypeUpload"), null, "LookupCollectionViaCustomerActivityTypeUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaAccount________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingMemberLetterFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaAccount________"), null, "LookupCollectionViaAccount________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'MedicalVendorType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathMedicalVendorTypeCollectionViaMedicalVendorProfile
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.MedicalVendorProfileEntityUsingResultLetterCoBrandingFileId;
				intermediateRelation.SetAliases(string.Empty, "MedicalVendorProfile_");
				return new PrefetchPathElement2(new EntityCollection<MedicalVendorTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicalVendorTypeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.MedicalVendorTypeEntity, 0, null, null, GetRelationsForField("MedicalVendorTypeCollectionViaMedicalVendorProfile"), null, "MedicalVendorTypeCollectionViaMedicalVendorProfile", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'MedicalVendorType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathMedicalVendorTypeCollectionViaMedicalVendorProfile_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.MedicalVendorProfileEntityUsingDoctorLetterFileId;
				intermediateRelation.SetAliases(string.Empty, "MedicalVendorProfile_");
				return new PrefetchPathElement2(new EntityCollection<MedicalVendorTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicalVendorTypeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.MedicalVendorTypeEntity, 0, null, null, GetRelationsForField("MedicalVendorTypeCollectionViaMedicalVendorProfile_"), null, "MedicalVendorTypeCollectionViaMedicalVendorProfile_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'MvuserClassification' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathMvuserClassificationCollectionViaPhysicianProfile_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.PhysicianProfileEntityUsingDigitalSignatureFileId;
				intermediateRelation.SetAliases(string.Empty, "PhysicianProfile_");
				return new PrefetchPathElement2(new EntityCollection<MvuserClassificationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MvuserClassificationEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.MvuserClassificationEntity, 0, null, null, GetRelationsForField("MvuserClassificationCollectionViaPhysicianProfile_"), null, "MvuserClassificationCollectionViaPhysicianProfile_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'MvuserClassification' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathMvuserClassificationCollectionViaPhysicianProfile
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.PhysicianProfileEntityUsingResumeFileId;
				intermediateRelation.SetAliases(string.Empty, "PhysicianProfile_");
				return new PrefetchPathElement2(new EntityCollection<MvuserClassificationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MvuserClassificationEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.MvuserClassificationEntity, 0, null, null, GetRelationsForField("MvuserClassificationCollectionViaPhysicianProfile"), null, "MvuserClassificationCollectionViaPhysicianProfile", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaMergeCustomerUpload
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.MergeCustomerUploadEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "MergeCustomerUpload_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaMergeCustomerUpload"), null, "OrganizationRoleUserCollectionViaMergeCustomerUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaCustomerActivityTypeUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.CustomerActivityTypeUploadEntityUsingLogFileId;
				intermediateRelation.SetAliases(string.Empty, "CustomerActivityTypeUpload_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaCustomerActivityTypeUpload_"), null, "OrganizationRoleUserCollectionViaCustomerActivityTypeUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaMergeCustomerUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.MergeCustomerUploadEntityUsingLogFileId;
				intermediateRelation.SetAliases(string.Empty, "MergeCustomerUpload_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaMergeCustomerUpload_"), null, "OrganizationRoleUserCollectionViaMergeCustomerUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaMedicationUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.MedicationUploadEntityUsingLogFileId;
				intermediateRelation.SetAliases(string.Empty, "MedicationUpload_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaMedicationUpload_"), null, "OrganizationRoleUserCollectionViaMedicationUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaStaffEventScheduleUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.StaffEventScheduleUploadEntityUsingLogFileId;
				intermediateRelation.SetAliases(string.Empty, "StaffEventScheduleUpload_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaStaffEventScheduleUpload_"), null, "OrganizationRoleUserCollectionViaStaffEventScheduleUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaStaffEventScheduleUpload
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.StaffEventScheduleUploadEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "StaffEventScheduleUpload_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaStaffEventScheduleUpload"), null, "OrganizationRoleUserCollectionViaStaffEventScheduleUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaSuspectConditionUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.SuspectConditionUploadEntityUsingLogFileId;
				intermediateRelation.SetAliases(string.Empty, "SuspectConditionUpload_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaSuspectConditionUpload_"), null, "OrganizationRoleUserCollectionViaSuspectConditionUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaSuspectConditionUpload
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.SuspectConditionUploadEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "SuspectConditionUpload_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaSuspectConditionUpload"), null, "OrganizationRoleUserCollectionViaSuspectConditionUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaRapsUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.RapsUploadEntityUsingLogFileId;
				intermediateRelation.SetAliases(string.Empty, "RapsUpload_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaRapsUpload_"), null, "OrganizationRoleUserCollectionViaRapsUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaParticipationConsentSignature_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.ParticipationConsentSignatureEntityUsingSignatureFileId;
				intermediateRelation.SetAliases(string.Empty, "ParticipationConsentSignature_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaParticipationConsentSignature_"), null, "OrganizationRoleUserCollectionViaParticipationConsentSignature_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaParticipationConsentSignature
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.ParticipationConsentSignatureEntityUsingInsuranceSignatureFileId;
				intermediateRelation.SetAliases(string.Empty, "ParticipationConsentSignature_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaParticipationConsentSignature"), null, "OrganizationRoleUserCollectionViaParticipationConsentSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaRapsUpload
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.RapsUploadEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "RapsUpload_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaRapsUpload"), null, "OrganizationRoleUserCollectionViaRapsUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaPhysicianRecordRequestSignature
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.PhysicianRecordRequestSignatureEntityUsingSignatureFileId;
				intermediateRelation.SetAliases(string.Empty, "PhysicianRecordRequestSignature_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaPhysicianRecordRequestSignature"), null, "OrganizationRoleUserCollectionViaPhysicianRecordRequestSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaFluConsentSignature
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.FluConsentSignatureEntityUsingSignatureFileId;
				intermediateRelation.SetAliases(string.Empty, "FluConsentSignature_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaFluConsentSignature"), null, "OrganizationRoleUserCollectionViaFluConsentSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaCorporateUpload
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.CorporateUploadEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "CorporateUpload_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaCorporateUpload"), null, "OrganizationRoleUserCollectionViaCorporateUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaCallUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.CallUploadEntityUsingLogFileId;
				intermediateRelation.SetAliases(string.Empty, "CallUpload_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaCallUpload_"), null, "OrganizationRoleUserCollectionViaCallUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaEligibilityUpload
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.EligibilityUploadEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "EligibilityUpload_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaEligibilityUpload"), null, "OrganizationRoleUserCollectionViaEligibilityUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaEventCustomerGiftCard_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.EventCustomerGiftCardEntityUsingTechnicianSignatureFileId;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerGiftCard_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaEventCustomerGiftCard_"), null, "OrganizationRoleUserCollectionViaEventCustomerGiftCard_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaEligibilityUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.EligibilityUploadEntityUsingLogFileId;
				intermediateRelation.SetAliases(string.Empty, "EligibilityUpload_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaEligibilityUpload_"), null, "OrganizationRoleUserCollectionViaEligibilityUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaChaperoneSignature_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.ChaperoneSignatureEntityUsingStaffSignatureFileId;
				intermediateRelation.SetAliases(string.Empty, "ChaperoneSignature_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaChaperoneSignature_"), null, "OrganizationRoleUserCollectionViaChaperoneSignature_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaExitInterviewSignature
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.ExitInterviewSignatureEntityUsingSignatureFileId;
				intermediateRelation.SetAliases(string.Empty, "ExitInterviewSignature_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaExitInterviewSignature"), null, "OrganizationRoleUserCollectionViaExitInterviewSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaCorporateUpload__
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.CorporateUploadEntityUsingAdjustOrderLogFileId;
				intermediateRelation.SetAliases(string.Empty, "CorporateUpload_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaCorporateUpload__"), null, "OrganizationRoleUserCollectionViaCorporateUpload__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaExportableReportsQueue
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.ExportableReportsQueueEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "ExportableReportsQueue_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaExportableReportsQueue"), null, "OrganizationRoleUserCollectionViaExportableReportsQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaChaperoneSignature
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.ChaperoneSignatureEntityUsingSignatureFileId;
				intermediateRelation.SetAliases(string.Empty, "ChaperoneSignature_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaChaperoneSignature"), null, "OrganizationRoleUserCollectionViaChaperoneSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaEventCustomerGiftCard
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.EventCustomerGiftCardEntityUsingPatientSignatureFileId;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerGiftCard_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaEventCustomerGiftCard"), null, "OrganizationRoleUserCollectionViaEventCustomerGiftCard", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.HealthPlanCriteriaAssignmentUploadEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "HealthPlanCriteriaAssignmentUpload_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload"), null, "OrganizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.CustomerPhoneNumberUpdateUploadEntityUsingLogFileId;
				intermediateRelation.SetAliases(string.Empty, "CustomerPhoneNumberUpdateUpload_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_"), null, "OrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.CustomerPhoneNumberUpdateUploadEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "CustomerPhoneNumberUpdateUpload_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload"), null, "OrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaFluConsentSignature_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.FluConsentSignatureEntityUsingClinicalProviderSignatureFileId;
				intermediateRelation.SetAliases(string.Empty, "FluConsentSignature_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaFluConsentSignature_"), null, "OrganizationRoleUserCollectionViaFluConsentSignature_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaMedicationUpload
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.MedicationUploadEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "MedicationUpload_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaMedicationUpload"), null, "OrganizationRoleUserCollectionViaMedicationUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaCustomerActivityTypeUpload
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.CustomerActivityTypeUploadEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "CustomerActivityTypeUpload_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaCustomerActivityTypeUpload"), null, "OrganizationRoleUserCollectionViaCustomerActivityTypeUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaCallUpload
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.CallUploadEntityUsingFileId;
				intermediateRelation.SetAliases(string.Empty, "CallUpload_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaCallUpload"), null, "OrganizationRoleUserCollectionViaCallUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserCollectionViaCorporateUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.CorporateUploadEntityUsingLogFileId;
				intermediateRelation.SetAliases(string.Empty, "CorporateUpload_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, GetRelationsForField("OrganizationRoleUserCollectionViaCorporateUpload_"), null, "OrganizationRoleUserCollectionViaCorporateUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationTypeCollectionViaOrganization
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.OrganizationEntityUsingLogoImageId;
				intermediateRelation.SetAliases(string.Empty, "Organization_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationTypeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationTypeEntity, 0, null, null, GetRelationsForField("OrganizationTypeCollectionViaOrganization"), null, "OrganizationTypeCollectionViaOrganization", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationTypeCollectionViaOrganization_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.OrganizationEntityUsingTeamImageId;
				intermediateRelation.SetAliases(string.Empty, "Organization_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationTypeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationTypeEntity, 0, null, null, GetRelationsForField("OrganizationTypeCollectionViaOrganization_"), null, "OrganizationTypeCollectionViaOrganization_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PhysicianSpecialization' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPhysicianSpecializationCollectionViaPhysicianProfile_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.PhysicianProfileEntityUsingDigitalSignatureFileId;
				intermediateRelation.SetAliases(string.Empty, "PhysicianProfile_");
				return new PrefetchPathElement2(new EntityCollection<PhysicianSpecializationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PhysicianSpecializationEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.PhysicianSpecializationEntity, 0, null, null, GetRelationsForField("PhysicianSpecializationCollectionViaPhysicianProfile_"), null, "PhysicianSpecializationCollectionViaPhysicianProfile_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PhysicianSpecialization' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPhysicianSpecializationCollectionViaPhysicianProfile
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.PhysicianProfileEntityUsingResumeFileId;
				intermediateRelation.SetAliases(string.Empty, "PhysicianProfile_");
				return new PrefetchPathElement2(new EntityCollection<PhysicianSpecializationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PhysicianSpecializationEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.PhysicianSpecializationEntity, 0, null, null, GetRelationsForField("PhysicianSpecializationCollectionViaPhysicianProfile"), null, "PhysicianSpecializationCollectionViaPhysicianProfile", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Prospects' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProspectsCollectionViaAccount
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingCheckListFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.ProspectsEntity, 0, null, null, GetRelationsForField("ProspectsCollectionViaAccount"), null, "ProspectsCollectionViaAccount", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Prospects' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProspectsCollectionViaAccount________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingMemberLetterFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.ProspectsEntity, 0, null, null, GetRelationsForField("ProspectsCollectionViaAccount________"), null, "ProspectsCollectionViaAccount________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Prospects' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProspectsCollectionViaAccount__
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingPcpLetterPdfFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.ProspectsEntity, 0, null, null, GetRelationsForField("ProspectsCollectionViaAccount__"), null, "ProspectsCollectionViaAccount__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Prospects' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProspectsCollectionViaAccount_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingParticipantLetterId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.ProspectsEntity, 0, null, null, GetRelationsForField("ProspectsCollectionViaAccount_"), null, "ProspectsCollectionViaAccount_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Prospects' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProspectsCollectionViaAccount______
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingConfirmationScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.ProspectsEntity, 0, null, null, GetRelationsForField("ProspectsCollectionViaAccount______"), null, "ProspectsCollectionViaAccount______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Prospects' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProspectsCollectionViaAccount____
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingFluffLetterFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.ProspectsEntity, 0, null, null, GetRelationsForField("ProspectsCollectionViaAccount____"), null, "ProspectsCollectionViaAccount____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Prospects' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProspectsCollectionViaHostImage
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.HostImageEntityUsingImageId;
				intermediateRelation.SetAliases(string.Empty, "HostImage_");
				return new PrefetchPathElement2(new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.ProspectsEntity, 0, null, null, GetRelationsForField("ProspectsCollectionViaHostImage"), null, "ProspectsCollectionViaHostImage", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Prospects' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProspectsCollectionViaAccount___
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingSurveyPdfFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.ProspectsEntity, 0, null, null, GetRelationsForField("ProspectsCollectionViaAccount___"), null, "ProspectsCollectionViaAccount___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Prospects' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProspectsCollectionViaAccount_____
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingCallCenterScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.ProspectsEntity, 0, null, null, GetRelationsForField("ProspectsCollectionViaAccount_____"), null, "ProspectsCollectionViaAccount_____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Prospects' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProspectsCollectionViaAccount_______
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingInboundCallScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.ProspectsEntity, 0, null, null, GetRelationsForField("ProspectsCollectionViaAccount_______"), null, "ProspectsCollectionViaAccount_______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SurveyTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSurveyTemplateCollectionViaAccount_______
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingInboundCallScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.SurveyTemplateEntity, 0, null, null, GetRelationsForField("SurveyTemplateCollectionViaAccount_______"), null, "SurveyTemplateCollectionViaAccount_______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SurveyTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSurveyTemplateCollectionViaAccount________
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingMemberLetterFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.SurveyTemplateEntity, 0, null, null, GetRelationsForField("SurveyTemplateCollectionViaAccount________"), null, "SurveyTemplateCollectionViaAccount________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SurveyTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSurveyTemplateCollectionViaAccount
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingCheckListFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.SurveyTemplateEntity, 0, null, null, GetRelationsForField("SurveyTemplateCollectionViaAccount"), null, "SurveyTemplateCollectionViaAccount", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SurveyTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSurveyTemplateCollectionViaAccount______
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingConfirmationScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.SurveyTemplateEntity, 0, null, null, GetRelationsForField("SurveyTemplateCollectionViaAccount______"), null, "SurveyTemplateCollectionViaAccount______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SurveyTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSurveyTemplateCollectionViaAccount__
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingPcpLetterPdfFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.SurveyTemplateEntity, 0, null, null, GetRelationsForField("SurveyTemplateCollectionViaAccount__"), null, "SurveyTemplateCollectionViaAccount__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SurveyTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSurveyTemplateCollectionViaAccount___
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingSurveyPdfFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.SurveyTemplateEntity, 0, null, null, GetRelationsForField("SurveyTemplateCollectionViaAccount___"), null, "SurveyTemplateCollectionViaAccount___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SurveyTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSurveyTemplateCollectionViaAccount____
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingFluffLetterFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.SurveyTemplateEntity, 0, null, null, GetRelationsForField("SurveyTemplateCollectionViaAccount____"), null, "SurveyTemplateCollectionViaAccount____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SurveyTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSurveyTemplateCollectionViaAccount_
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingParticipantLetterId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.SurveyTemplateEntity, 0, null, null, GetRelationsForField("SurveyTemplateCollectionViaAccount_"), null, "SurveyTemplateCollectionViaAccount_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SurveyTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSurveyTemplateCollectionViaAccount_____
		{
			get
			{
				IEntityRelation intermediateRelation = FileEntity.Relations.AccountEntityUsingCallCenterScriptFileId;
				intermediateRelation.SetAliases(string.Empty, "Account_");
				return new PrefetchPathElement2(new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.SurveyTemplateEntity, 0, null, null, GetRelationsForField("SurveyTemplateCollectionViaAccount_____"), null, "SurveyTemplateCollectionViaAccount_____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookup
		{
			get
			{
				return new PrefetchPathElement2(new EntityCollection(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))),
					(IEntityRelation)GetRelationsForField("Lookup")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, null, null, "Lookup", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToOne);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUser
		{
			get
			{
				return new PrefetchPathElement2(new EntityCollection(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory))),
					(IEntityRelation)GetRelationsForField("OrganizationRoleUser")[0], (int)Falcon.Data.EntityType.FileEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, 0, null, null, null, null, "OrganizationRoleUser", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToOne);
			}
		}


		/// <summary> The custom properties for the type of this entity instance.</summary>
		/// <remarks>The data returned from this property should be considered read-only: it is not thread safe to alter this data at runtime.</remarks>
		[Browsable(false), XmlIgnore]
		public override Dictionary<string, string> CustomPropertiesOfType
		{
			get { return FileEntity.CustomProperties;}
		}

		/// <summary> The custom properties for the fields of this entity type. The returned Hashtable contains per fieldname a hashtable of name-value
		/// pairs. </summary>
		/// <remarks>The data returned from this property should be considered read-only: it is not thread safe to alter this data at runtime.</remarks>
		public  static Dictionary<string, Dictionary<string, string>> FieldsCustomProperties
		{
			get { return _fieldsCustomProperties;}
		}

		/// <summary> The custom properties for the fields of the type of this entity instance. The returned Hashtable contains per fieldname a hashtable of name-value pairs. </summary>
		/// <remarks>The data returned from this property should be considered read-only: it is not thread safe to alter this data at runtime.</remarks>
		[Browsable(false), XmlIgnore]
		public override Dictionary<string, Dictionary<string, string>> FieldsCustomPropertiesOfType
		{
			get { return FileEntity.FieldsCustomProperties;}
		}

		/// <summary> The FileId property of the Entity File<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "TblFile"."FileId"<br/>
		/// Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, true, true</remarks>
		public virtual System.Int64 FileId
		{
			get { return (System.Int64)GetValue((int)FileFieldIndex.FileId, true); }
			set	{ SetValue((int)FileFieldIndex.FileId, value); }
		}

		/// <summary> The Path property of the Entity File<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "TblFile"."Path"<br/>
		/// Table field type characteristics (type, precision, scale, length): VarChar, 0, 0, 2000<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.String Path
		{
			get { return (System.String)GetValue((int)FileFieldIndex.Path, true); }
			set	{ SetValue((int)FileFieldIndex.Path, value); }
		}

		/// <summary> The Type property of the Entity File<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "TblFile"."Type"<br/>
		/// Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int64 Type
		{
			get { return (System.Int64)GetValue((int)FileFieldIndex.Type, true); }
			set	{ SetValue((int)FileFieldIndex.Type, value); }
		}

		/// <summary> The Size property of the Entity File<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "TblFile"."Size"<br/>
		/// Table field type characteristics (type, precision, scale, length): Decimal, 18, 2, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Decimal Size
		{
			get { return (System.Decimal)GetValue((int)FileFieldIndex.Size, true); }
			set	{ SetValue((int)FileFieldIndex.Size, value); }
		}

		/// <summary> The CreatedDate property of the Entity File<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "TblFile"."CreatedDate"<br/>
		/// Table field type characteristics (type, precision, scale, length): DateTime, 0, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.DateTime CreatedDate
		{
			get { return (System.DateTime)GetValue((int)FileFieldIndex.CreatedDate, true); }
			set	{ SetValue((int)FileFieldIndex.CreatedDate, value); }
		}

		/// <summary> The CreatedBy property of the Entity File<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "TblFile"."CreatedBy"<br/>
		/// Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int64 CreatedBy
		{
			get { return (System.Int64)GetValue((int)FileFieldIndex.CreatedBy, true); }
			set	{ SetValue((int)FileFieldIndex.CreatedBy, value); }
		}

		/// <summary> The IsArchived property of the Entity File<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "TblFile"."IsArchived"<br/>
		/// Table field type characteristics (type, precision, scale, length): Bit, 0, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Boolean IsArchived
		{
			get { return (System.Boolean)GetValue((int)FileFieldIndex.IsArchived, true); }
			set	{ SetValue((int)FileFieldIndex.IsArchived, value); }
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> Account______
		{
			get
			{
				if(_account______==null)
				{
					_account______ = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_account______.SetContainingEntityInfo(this, "File______");
				}
				return _account______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> Account_____
		{
			get
			{
				if(_account_____==null)
				{
					_account_____ = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_account_____.SetContainingEntityInfo(this, "File_____");
				}
				return _account_____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> Account________
		{
			get
			{
				if(_account________==null)
				{
					_account________ = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_account________.SetContainingEntityInfo(this, "File________");
				}
				return _account________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> Account_______
		{
			get
			{
				if(_account_______==null)
				{
					_account_______ = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_account_______.SetContainingEntityInfo(this, "File_______");
				}
				return _account_______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> Account____
		{
			get
			{
				if(_account____==null)
				{
					_account____ = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_account____.SetContainingEntityInfo(this, "File____");
				}
				return _account____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> Account_
		{
			get
			{
				if(_account_==null)
				{
					_account_ = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_account_.SetContainingEntityInfo(this, "File_");
				}
				return _account_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> Account
		{
			get
			{
				if(_account==null)
				{
					_account = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_account.SetContainingEntityInfo(this, "File");
				}
				return _account;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> Account___
		{
			get
			{
				if(_account___==null)
				{
					_account___ = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_account___.SetContainingEntityInfo(this, "File___");
				}
				return _account___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> Account__
		{
			get
			{
				if(_account__==null)
				{
					_account__ = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_account__.SetContainingEntityInfo(this, "File__");
				}
				return _account__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallUploadEntity))]
		public virtual EntityCollection<CallUploadEntity> CallUpload_
		{
			get
			{
				if(_callUpload_==null)
				{
					_callUpload_ = new EntityCollection<CallUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallUploadEntityFactory)));
					_callUpload_.SetContainingEntityInfo(this, "File_");
				}
				return _callUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallUploadEntity))]
		public virtual EntityCollection<CallUploadEntity> CallUpload
		{
			get
			{
				if(_callUpload==null)
				{
					_callUpload = new EntityCollection<CallUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallUploadEntityFactory)));
					_callUpload.SetContainingEntityInfo(this, "File");
				}
				return _callUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ChaperoneSignatureEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ChaperoneSignatureEntity))]
		public virtual EntityCollection<ChaperoneSignatureEntity> ChaperoneSignature_
		{
			get
			{
				if(_chaperoneSignature_==null)
				{
					_chaperoneSignature_ = new EntityCollection<ChaperoneSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ChaperoneSignatureEntityFactory)));
					_chaperoneSignature_.SetContainingEntityInfo(this, "File_");
				}
				return _chaperoneSignature_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ChaperoneSignatureEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ChaperoneSignatureEntity))]
		public virtual EntityCollection<ChaperoneSignatureEntity> ChaperoneSignature
		{
			get
			{
				if(_chaperoneSignature==null)
				{
					_chaperoneSignature = new EntityCollection<ChaperoneSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ChaperoneSignatureEntityFactory)));
					_chaperoneSignature.SetContainingEntityInfo(this, "File");
				}
				return _chaperoneSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CorporateUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CorporateUploadEntity))]
		public virtual EntityCollection<CorporateUploadEntity> CorporateUpload_
		{
			get
			{
				if(_corporateUpload_==null)
				{
					_corporateUpload_ = new EntityCollection<CorporateUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CorporateUploadEntityFactory)));
					_corporateUpload_.SetContainingEntityInfo(this, "File_");
				}
				return _corporateUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CorporateUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CorporateUploadEntity))]
		public virtual EntityCollection<CorporateUploadEntity> CorporateUpload
		{
			get
			{
				if(_corporateUpload==null)
				{
					_corporateUpload = new EntityCollection<CorporateUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CorporateUploadEntityFactory)));
					_corporateUpload.SetContainingEntityInfo(this, "File");
				}
				return _corporateUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CorporateUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CorporateUploadEntity))]
		public virtual EntityCollection<CorporateUploadEntity> CorporateUpload__
		{
			get
			{
				if(_corporateUpload__==null)
				{
					_corporateUpload__ = new EntityCollection<CorporateUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CorporateUploadEntityFactory)));
					_corporateUpload__.SetContainingEntityInfo(this, "File__");
				}
				return _corporateUpload__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerActivityTypeUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerActivityTypeUploadEntity))]
		public virtual EntityCollection<CustomerActivityTypeUploadEntity> CustomerActivityTypeUpload_
		{
			get
			{
				if(_customerActivityTypeUpload_==null)
				{
					_customerActivityTypeUpload_ = new EntityCollection<CustomerActivityTypeUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerActivityTypeUploadEntityFactory)));
					_customerActivityTypeUpload_.SetContainingEntityInfo(this, "File_");
				}
				return _customerActivityTypeUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerActivityTypeUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerActivityTypeUploadEntity))]
		public virtual EntityCollection<CustomerActivityTypeUploadEntity> CustomerActivityTypeUpload
		{
			get
			{
				if(_customerActivityTypeUpload==null)
				{
					_customerActivityTypeUpload = new EntityCollection<CustomerActivityTypeUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerActivityTypeUploadEntityFactory)));
					_customerActivityTypeUpload.SetContainingEntityInfo(this, "File");
				}
				return _customerActivityTypeUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerPhoneNumberUpdateUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerPhoneNumberUpdateUploadEntity))]
		public virtual EntityCollection<CustomerPhoneNumberUpdateUploadEntity> CustomerPhoneNumberUpdateUpload_
		{
			get
			{
				if(_customerPhoneNumberUpdateUpload_==null)
				{
					_customerPhoneNumberUpdateUpload_ = new EntityCollection<CustomerPhoneNumberUpdateUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerPhoneNumberUpdateUploadEntityFactory)));
					_customerPhoneNumberUpdateUpload_.SetContainingEntityInfo(this, "File_");
				}
				return _customerPhoneNumberUpdateUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerPhoneNumberUpdateUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerPhoneNumberUpdateUploadEntity))]
		public virtual EntityCollection<CustomerPhoneNumberUpdateUploadEntity> CustomerPhoneNumberUpdateUpload
		{
			get
			{
				if(_customerPhoneNumberUpdateUpload==null)
				{
					_customerPhoneNumberUpdateUpload = new EntityCollection<CustomerPhoneNumberUpdateUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerPhoneNumberUpdateUploadEntityFactory)));
					_customerPhoneNumberUpdateUpload.SetContainingEntityInfo(this, "File");
				}
				return _customerPhoneNumberUpdateUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EligibilityUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EligibilityUploadEntity))]
		public virtual EntityCollection<EligibilityUploadEntity> EligibilityUpload_
		{
			get
			{
				if(_eligibilityUpload_==null)
				{
					_eligibilityUpload_ = new EntityCollection<EligibilityUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EligibilityUploadEntityFactory)));
					_eligibilityUpload_.SetContainingEntityInfo(this, "File_");
				}
				return _eligibilityUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EligibilityUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EligibilityUploadEntity))]
		public virtual EntityCollection<EligibilityUploadEntity> EligibilityUpload
		{
			get
			{
				if(_eligibilityUpload==null)
				{
					_eligibilityUpload = new EntityCollection<EligibilityUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EligibilityUploadEntityFactory)));
					_eligibilityUpload.SetContainingEntityInfo(this, "File");
				}
				return _eligibilityUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerGiftCardEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerGiftCardEntity))]
		public virtual EntityCollection<EventCustomerGiftCardEntity> EventCustomerGiftCard_
		{
			get
			{
				if(_eventCustomerGiftCard_==null)
				{
					_eventCustomerGiftCard_ = new EntityCollection<EventCustomerGiftCardEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerGiftCardEntityFactory)));
					_eventCustomerGiftCard_.SetContainingEntityInfo(this, "File_");
				}
				return _eventCustomerGiftCard_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerGiftCardEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerGiftCardEntity))]
		public virtual EntityCollection<EventCustomerGiftCardEntity> EventCustomerGiftCard
		{
			get
			{
				if(_eventCustomerGiftCard==null)
				{
					_eventCustomerGiftCard = new EntityCollection<EventCustomerGiftCardEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerGiftCardEntityFactory)));
					_eventCustomerGiftCard.SetContainingEntityInfo(this, "File");
				}
				return _eventCustomerGiftCard;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ExitInterviewSignatureEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ExitInterviewSignatureEntity))]
		public virtual EntityCollection<ExitInterviewSignatureEntity> ExitInterviewSignature
		{
			get
			{
				if(_exitInterviewSignature==null)
				{
					_exitInterviewSignature = new EntityCollection<ExitInterviewSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExitInterviewSignatureEntityFactory)));
					_exitInterviewSignature.SetContainingEntityInfo(this, "File");
				}
				return _exitInterviewSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ExportableReportsQueueEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ExportableReportsQueueEntity))]
		public virtual EntityCollection<ExportableReportsQueueEntity> ExportableReportsQueue
		{
			get
			{
				if(_exportableReportsQueue==null)
				{
					_exportableReportsQueue = new EntityCollection<ExportableReportsQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExportableReportsQueueEntityFactory)));
					_exportableReportsQueue.SetContainingEntityInfo(this, "File");
				}
				return _exportableReportsQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FluConsentSignatureEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FluConsentSignatureEntity))]
		public virtual EntityCollection<FluConsentSignatureEntity> FluConsentSignature_
		{
			get
			{
				if(_fluConsentSignature_==null)
				{
					_fluConsentSignature_ = new EntityCollection<FluConsentSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentSignatureEntityFactory)));
					_fluConsentSignature_.SetContainingEntityInfo(this, "File_");
				}
				return _fluConsentSignature_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FluConsentSignatureEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FluConsentSignatureEntity))]
		public virtual EntityCollection<FluConsentSignatureEntity> FluConsentSignature
		{
			get
			{
				if(_fluConsentSignature==null)
				{
					_fluConsentSignature = new EntityCollection<FluConsentSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentSignatureEntityFactory)));
					_fluConsentSignature.SetContainingEntityInfo(this, "File");
				}
				return _fluConsentSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HealthPlanCriteriaAssignmentUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HealthPlanCriteriaAssignmentUploadEntity))]
		public virtual EntityCollection<HealthPlanCriteriaAssignmentUploadEntity> HealthPlanCriteriaAssignmentUpload
		{
			get
			{
				if(_healthPlanCriteriaAssignmentUpload==null)
				{
					_healthPlanCriteriaAssignmentUpload = new EntityCollection<HealthPlanCriteriaAssignmentUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCriteriaAssignmentUploadEntityFactory)));
					_healthPlanCriteriaAssignmentUpload.SetContainingEntityInfo(this, "File");
				}
				return _healthPlanCriteriaAssignmentUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HostImageEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HostImageEntity))]
		public virtual EntityCollection<HostImageEntity> HostImage
		{
			get
			{
				if(_hostImage==null)
				{
					_hostImage = new EntityCollection<HostImageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HostImageEntityFactory)));
					_hostImage.SetContainingEntityInfo(this, "File");
				}
				return _hostImage;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'MedicalVendorProfileEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(MedicalVendorProfileEntity))]
		public virtual EntityCollection<MedicalVendorProfileEntity> MedicalVendorProfile_
		{
			get
			{
				if(_medicalVendorProfile_==null)
				{
					_medicalVendorProfile_ = new EntityCollection<MedicalVendorProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicalVendorProfileEntityFactory)));
					_medicalVendorProfile_.SetContainingEntityInfo(this, "File_");
				}
				return _medicalVendorProfile_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'MedicalVendorProfileEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(MedicalVendorProfileEntity))]
		public virtual EntityCollection<MedicalVendorProfileEntity> MedicalVendorProfile
		{
			get
			{
				if(_medicalVendorProfile==null)
				{
					_medicalVendorProfile = new EntityCollection<MedicalVendorProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicalVendorProfileEntityFactory)));
					_medicalVendorProfile.SetContainingEntityInfo(this, "File");
				}
				return _medicalVendorProfile;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'MedicationUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(MedicationUploadEntity))]
		public virtual EntityCollection<MedicationUploadEntity> MedicationUpload_
		{
			get
			{
				if(_medicationUpload_==null)
				{
					_medicationUpload_ = new EntityCollection<MedicationUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicationUploadEntityFactory)));
					_medicationUpload_.SetContainingEntityInfo(this, "File_");
				}
				return _medicationUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'MedicationUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(MedicationUploadEntity))]
		public virtual EntityCollection<MedicationUploadEntity> MedicationUpload
		{
			get
			{
				if(_medicationUpload==null)
				{
					_medicationUpload = new EntityCollection<MedicationUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicationUploadEntityFactory)));
					_medicationUpload.SetContainingEntityInfo(this, "File");
				}
				return _medicationUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'MergeCustomerUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(MergeCustomerUploadEntity))]
		public virtual EntityCollection<MergeCustomerUploadEntity> MergeCustomerUpload_
		{
			get
			{
				if(_mergeCustomerUpload_==null)
				{
					_mergeCustomerUpload_ = new EntityCollection<MergeCustomerUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MergeCustomerUploadEntityFactory)));
					_mergeCustomerUpload_.SetContainingEntityInfo(this, "File_");
				}
				return _mergeCustomerUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'MergeCustomerUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(MergeCustomerUploadEntity))]
		public virtual EntityCollection<MergeCustomerUploadEntity> MergeCustomerUpload
		{
			get
			{
				if(_mergeCustomerUpload==null)
				{
					_mergeCustomerUpload = new EntityCollection<MergeCustomerUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MergeCustomerUploadEntityFactory)));
					_mergeCustomerUpload.SetContainingEntityInfo(this, "File");
				}
				return _mergeCustomerUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationEntity))]
		public virtual EntityCollection<OrganizationEntity> Organization_
		{
			get
			{
				if(_organization_==null)
				{
					_organization_ = new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory)));
					_organization_.SetContainingEntityInfo(this, "File_");
				}
				return _organization_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationEntity))]
		public virtual EntityCollection<OrganizationEntity> Organization
		{
			get
			{
				if(_organization==null)
				{
					_organization = new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory)));
					_organization.SetContainingEntityInfo(this, "File");
				}
				return _organization;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OutboundUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OutboundUploadEntity))]
		public virtual EntityCollection<OutboundUploadEntity> OutboundUpload_
		{
			get
			{
				if(_outboundUpload_==null)
				{
					_outboundUpload_ = new EntityCollection<OutboundUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OutboundUploadEntityFactory)));
					_outboundUpload_.SetContainingEntityInfo(this, "File_");
				}
				return _outboundUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OutboundUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OutboundUploadEntity))]
		public virtual EntityCollection<OutboundUploadEntity> OutboundUpload
		{
			get
			{
				if(_outboundUpload==null)
				{
					_outboundUpload = new EntityCollection<OutboundUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OutboundUploadEntityFactory)));
					_outboundUpload.SetContainingEntityInfo(this, "File");
				}
				return _outboundUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PackageEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PackageEntity))]
		public virtual EntityCollection<PackageEntity> Package
		{
			get
			{
				if(_package==null)
				{
					_package = new EntityCollection<PackageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PackageEntityFactory)));
					_package.SetContainingEntityInfo(this, "File");
				}
				return _package;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ParticipationConsentSignatureEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ParticipationConsentSignatureEntity))]
		public virtual EntityCollection<ParticipationConsentSignatureEntity> ParticipationConsentSignature_
		{
			get
			{
				if(_participationConsentSignature_==null)
				{
					_participationConsentSignature_ = new EntityCollection<ParticipationConsentSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ParticipationConsentSignatureEntityFactory)));
					_participationConsentSignature_.SetContainingEntityInfo(this, "File_");
				}
				return _participationConsentSignature_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ParticipationConsentSignatureEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ParticipationConsentSignatureEntity))]
		public virtual EntityCollection<ParticipationConsentSignatureEntity> ParticipationConsentSignature
		{
			get
			{
				if(_participationConsentSignature==null)
				{
					_participationConsentSignature = new EntityCollection<ParticipationConsentSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ParticipationConsentSignatureEntityFactory)));
					_participationConsentSignature.SetContainingEntityInfo(this, "File");
				}
				return _participationConsentSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PhysicianProfileEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PhysicianProfileEntity))]
		public virtual EntityCollection<PhysicianProfileEntity> PhysicianProfile_
		{
			get
			{
				if(_physicianProfile_==null)
				{
					_physicianProfile_ = new EntityCollection<PhysicianProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PhysicianProfileEntityFactory)));
					_physicianProfile_.SetContainingEntityInfo(this, "File_");
				}
				return _physicianProfile_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PhysicianProfileEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PhysicianProfileEntity))]
		public virtual EntityCollection<PhysicianProfileEntity> PhysicianProfile
		{
			get
			{
				if(_physicianProfile==null)
				{
					_physicianProfile = new EntityCollection<PhysicianProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PhysicianProfileEntityFactory)));
					_physicianProfile.SetContainingEntityInfo(this, "File");
				}
				return _physicianProfile;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PhysicianRecordRequestSignatureEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PhysicianRecordRequestSignatureEntity))]
		public virtual EntityCollection<PhysicianRecordRequestSignatureEntity> PhysicianRecordRequestSignature
		{
			get
			{
				if(_physicianRecordRequestSignature==null)
				{
					_physicianRecordRequestSignature = new EntityCollection<PhysicianRecordRequestSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PhysicianRecordRequestSignatureEntityFactory)));
					_physicianRecordRequestSignature.SetContainingEntityInfo(this, "File");
				}
				return _physicianRecordRequestSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'RapsUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(RapsUploadEntity))]
		public virtual EntityCollection<RapsUploadEntity> RapsUpload_
		{
			get
			{
				if(_rapsUpload_==null)
				{
					_rapsUpload_ = new EntityCollection<RapsUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RapsUploadEntityFactory)));
					_rapsUpload_.SetContainingEntityInfo(this, "File_");
				}
				return _rapsUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'RapsUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(RapsUploadEntity))]
		public virtual EntityCollection<RapsUploadEntity> RapsUpload
		{
			get
			{
				if(_rapsUpload==null)
				{
					_rapsUpload = new EntityCollection<RapsUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RapsUploadEntityFactory)));
					_rapsUpload.SetContainingEntityInfo(this, "File");
				}
				return _rapsUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ResultArchiveUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ResultArchiveUploadEntity))]
		public virtual EntityCollection<ResultArchiveUploadEntity> ResultArchiveUpload
		{
			get
			{
				if(_resultArchiveUpload==null)
				{
					_resultArchiveUpload = new EntityCollection<ResultArchiveUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ResultArchiveUploadEntityFactory)));
					_resultArchiveUpload.SetContainingEntityInfo(this, "File_");
				}
				return _resultArchiveUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'StaffEventScheduleUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(StaffEventScheduleUploadEntity))]
		public virtual EntityCollection<StaffEventScheduleUploadEntity> StaffEventScheduleUpload_
		{
			get
			{
				if(_staffEventScheduleUpload_==null)
				{
					_staffEventScheduleUpload_ = new EntityCollection<StaffEventScheduleUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(StaffEventScheduleUploadEntityFactory)));
					_staffEventScheduleUpload_.SetContainingEntityInfo(this, "File_");
				}
				return _staffEventScheduleUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'StaffEventScheduleUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(StaffEventScheduleUploadEntity))]
		public virtual EntityCollection<StaffEventScheduleUploadEntity> StaffEventScheduleUpload
		{
			get
			{
				if(_staffEventScheduleUpload==null)
				{
					_staffEventScheduleUpload = new EntityCollection<StaffEventScheduleUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(StaffEventScheduleUploadEntityFactory)));
					_staffEventScheduleUpload.SetContainingEntityInfo(this, "File");
				}
				return _staffEventScheduleUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'SuspectConditionUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(SuspectConditionUploadEntity))]
		public virtual EntityCollection<SuspectConditionUploadEntity> SuspectConditionUpload_
		{
			get
			{
				if(_suspectConditionUpload_==null)
				{
					_suspectConditionUpload_ = new EntityCollection<SuspectConditionUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SuspectConditionUploadEntityFactory)));
					_suspectConditionUpload_.SetContainingEntityInfo(this, "File_");
				}
				return _suspectConditionUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'SuspectConditionUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(SuspectConditionUploadEntity))]
		public virtual EntityCollection<SuspectConditionUploadEntity> SuspectConditionUpload
		{
			get
			{
				if(_suspectConditionUpload==null)
				{
					_suspectConditionUpload = new EntityCollection<SuspectConditionUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SuspectConditionUploadEntityFactory)));
					_suspectConditionUpload.SetContainingEntityInfo(this, "File");
				}
				return _suspectConditionUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestimonialEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestimonialEntity))]
		public virtual EntityCollection<TestimonialEntity> Testimonial
		{
			get
			{
				if(_testimonial==null)
				{
					_testimonial = new EntityCollection<TestimonialEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestimonialEntityFactory)));
					_testimonial.SetContainingEntityInfo(this, "File");
				}
				return _testimonial;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestMediaEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestMediaEntity))]
		public virtual EntityCollection<TestMediaEntity> TestMedia
		{
			get
			{
				if(_testMedia==null)
				{
					_testMedia = new EntityCollection<TestMediaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestMediaEntityFactory)));
					_testMedia.SetContainingEntityInfo(this, "File");
				}
				return _testMedia;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'WellMedAttestationEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(WellMedAttestationEntity))]
		public virtual EntityCollection<WellMedAttestationEntity> WellMedAttestation
		{
			get
			{
				if(_wellMedAttestation==null)
				{
					_wellMedAttestation = new EntityCollection<WellMedAttestationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(WellMedAttestationEntityFactory)));
					_wellMedAttestation.SetContainingEntityInfo(this, "File");
				}
				return _wellMedAttestation;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaEligibilityUpload_
		{
			get
			{
				if(_accountCollectionViaEligibilityUpload_==null)
				{
					_accountCollectionViaEligibilityUpload_ = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaEligibilityUpload_.IsReadOnly=true;
				}
				return _accountCollectionViaEligibilityUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaCorporateUpload
		{
			get
			{
				if(_accountCollectionViaCorporateUpload==null)
				{
					_accountCollectionViaCorporateUpload = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaCorporateUpload.IsReadOnly=true;
				}
				return _accountCollectionViaCorporateUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaCorporateUpload__
		{
			get
			{
				if(_accountCollectionViaCorporateUpload__==null)
				{
					_accountCollectionViaCorporateUpload__ = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaCorporateUpload__.IsReadOnly=true;
				}
				return _accountCollectionViaCorporateUpload__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaCorporateUpload_
		{
			get
			{
				if(_accountCollectionViaCorporateUpload_==null)
				{
					_accountCollectionViaCorporateUpload_ = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaCorporateUpload_.IsReadOnly=true;
				}
				return _accountCollectionViaCorporateUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaEligibilityUpload
		{
			get
			{
				if(_accountCollectionViaEligibilityUpload==null)
				{
					_accountCollectionViaEligibilityUpload = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaEligibilityUpload.IsReadOnly=true;
				}
				return _accountCollectionViaEligibilityUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AddressEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AddressEntity))]
		public virtual EntityCollection<AddressEntity> AddressCollectionViaOrganization_
		{
			get
			{
				if(_addressCollectionViaOrganization_==null)
				{
					_addressCollectionViaOrganization_ = new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory)));
					_addressCollectionViaOrganization_.IsReadOnly=true;
				}
				return _addressCollectionViaOrganization_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AddressEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AddressEntity))]
		public virtual EntityCollection<AddressEntity> AddressCollectionViaOrganization
		{
			get
			{
				if(_addressCollectionViaOrganization==null)
				{
					_addressCollectionViaOrganization = new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory)));
					_addressCollectionViaOrganization.IsReadOnly=true;
				}
				return _addressCollectionViaOrganization;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CheckListQuestionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CheckListQuestionEntity))]
		public virtual EntityCollection<CheckListQuestionEntity> CheckListQuestionCollectionViaExitInterviewSignature
		{
			get
			{
				if(_checkListQuestionCollectionViaExitInterviewSignature==null)
				{
					_checkListQuestionCollectionViaExitInterviewSignature = new EntityCollection<CheckListQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListQuestionEntityFactory)));
					_checkListQuestionCollectionViaExitInterviewSignature.IsReadOnly=true;
				}
				return _checkListQuestionCollectionViaExitInterviewSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CheckListTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CheckListTemplateEntity))]
		public virtual EntityCollection<CheckListTemplateEntity> CheckListTemplateCollectionViaAccount_________________
		{
			get
			{
				if(_checkListTemplateCollectionViaAccount_________________==null)
				{
					_checkListTemplateCollectionViaAccount_________________ = new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory)));
					_checkListTemplateCollectionViaAccount_________________.IsReadOnly=true;
				}
				return _checkListTemplateCollectionViaAccount_________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CheckListTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CheckListTemplateEntity))]
		public virtual EntityCollection<CheckListTemplateEntity> CheckListTemplateCollectionViaAccount_____
		{
			get
			{
				if(_checkListTemplateCollectionViaAccount_____==null)
				{
					_checkListTemplateCollectionViaAccount_____ = new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory)));
					_checkListTemplateCollectionViaAccount_____.IsReadOnly=true;
				}
				return _checkListTemplateCollectionViaAccount_____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CheckListTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CheckListTemplateEntity))]
		public virtual EntityCollection<CheckListTemplateEntity> CheckListTemplateCollectionViaAccount____
		{
			get
			{
				if(_checkListTemplateCollectionViaAccount____==null)
				{
					_checkListTemplateCollectionViaAccount____ = new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory)));
					_checkListTemplateCollectionViaAccount____.IsReadOnly=true;
				}
				return _checkListTemplateCollectionViaAccount____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CheckListTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CheckListTemplateEntity))]
		public virtual EntityCollection<CheckListTemplateEntity> CheckListTemplateCollectionViaAccount_____________
		{
			get
			{
				if(_checkListTemplateCollectionViaAccount_____________==null)
				{
					_checkListTemplateCollectionViaAccount_____________ = new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory)));
					_checkListTemplateCollectionViaAccount_____________.IsReadOnly=true;
				}
				return _checkListTemplateCollectionViaAccount_____________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CheckListTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CheckListTemplateEntity))]
		public virtual EntityCollection<CheckListTemplateEntity> CheckListTemplateCollectionViaAccount______
		{
			get
			{
				if(_checkListTemplateCollectionViaAccount______==null)
				{
					_checkListTemplateCollectionViaAccount______ = new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory)));
					_checkListTemplateCollectionViaAccount______.IsReadOnly=true;
				}
				return _checkListTemplateCollectionViaAccount______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CheckListTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CheckListTemplateEntity))]
		public virtual EntityCollection<CheckListTemplateEntity> CheckListTemplateCollectionViaAccount_______
		{
			get
			{
				if(_checkListTemplateCollectionViaAccount_______==null)
				{
					_checkListTemplateCollectionViaAccount_______ = new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory)));
					_checkListTemplateCollectionViaAccount_______.IsReadOnly=true;
				}
				return _checkListTemplateCollectionViaAccount_______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CheckListTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CheckListTemplateEntity))]
		public virtual EntityCollection<CheckListTemplateEntity> CheckListTemplateCollectionViaAccount__________
		{
			get
			{
				if(_checkListTemplateCollectionViaAccount__________==null)
				{
					_checkListTemplateCollectionViaAccount__________ = new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory)));
					_checkListTemplateCollectionViaAccount__________.IsReadOnly=true;
				}
				return _checkListTemplateCollectionViaAccount__________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CheckListTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CheckListTemplateEntity))]
		public virtual EntityCollection<CheckListTemplateEntity> CheckListTemplateCollectionViaAccount_________
		{
			get
			{
				if(_checkListTemplateCollectionViaAccount_________==null)
				{
					_checkListTemplateCollectionViaAccount_________ = new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory)));
					_checkListTemplateCollectionViaAccount_________.IsReadOnly=true;
				}
				return _checkListTemplateCollectionViaAccount_________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CheckListTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CheckListTemplateEntity))]
		public virtual EntityCollection<CheckListTemplateEntity> CheckListTemplateCollectionViaAccount____________
		{
			get
			{
				if(_checkListTemplateCollectionViaAccount____________==null)
				{
					_checkListTemplateCollectionViaAccount____________ = new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory)));
					_checkListTemplateCollectionViaAccount____________.IsReadOnly=true;
				}
				return _checkListTemplateCollectionViaAccount____________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CheckListTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CheckListTemplateEntity))]
		public virtual EntityCollection<CheckListTemplateEntity> CheckListTemplateCollectionViaAccount___________
		{
			get
			{
				if(_checkListTemplateCollectionViaAccount___________==null)
				{
					_checkListTemplateCollectionViaAccount___________ = new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory)));
					_checkListTemplateCollectionViaAccount___________.IsReadOnly=true;
				}
				return _checkListTemplateCollectionViaAccount___________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CheckListTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CheckListTemplateEntity))]
		public virtual EntityCollection<CheckListTemplateEntity> CheckListTemplateCollectionViaAccount_______________
		{
			get
			{
				if(_checkListTemplateCollectionViaAccount_______________==null)
				{
					_checkListTemplateCollectionViaAccount_______________ = new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory)));
					_checkListTemplateCollectionViaAccount_______________.IsReadOnly=true;
				}
				return _checkListTemplateCollectionViaAccount_______________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CheckListTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CheckListTemplateEntity))]
		public virtual EntityCollection<CheckListTemplateEntity> CheckListTemplateCollectionViaAccount________________
		{
			get
			{
				if(_checkListTemplateCollectionViaAccount________________==null)
				{
					_checkListTemplateCollectionViaAccount________________ = new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory)));
					_checkListTemplateCollectionViaAccount________________.IsReadOnly=true;
				}
				return _checkListTemplateCollectionViaAccount________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CheckListTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CheckListTemplateEntity))]
		public virtual EntityCollection<CheckListTemplateEntity> CheckListTemplateCollectionViaAccount________
		{
			get
			{
				if(_checkListTemplateCollectionViaAccount________==null)
				{
					_checkListTemplateCollectionViaAccount________ = new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory)));
					_checkListTemplateCollectionViaAccount________.IsReadOnly=true;
				}
				return _checkListTemplateCollectionViaAccount________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CheckListTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CheckListTemplateEntity))]
		public virtual EntityCollection<CheckListTemplateEntity> CheckListTemplateCollectionViaAccount______________
		{
			get
			{
				if(_checkListTemplateCollectionViaAccount______________==null)
				{
					_checkListTemplateCollectionViaAccount______________ = new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory)));
					_checkListTemplateCollectionViaAccount______________.IsReadOnly=true;
				}
				return _checkListTemplateCollectionViaAccount______________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CheckListTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CheckListTemplateEntity))]
		public virtual EntityCollection<CheckListTemplateEntity> CheckListTemplateCollectionViaAccount_
		{
			get
			{
				if(_checkListTemplateCollectionViaAccount_==null)
				{
					_checkListTemplateCollectionViaAccount_ = new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory)));
					_checkListTemplateCollectionViaAccount_.IsReadOnly=true;
				}
				return _checkListTemplateCollectionViaAccount_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CheckListTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CheckListTemplateEntity))]
		public virtual EntityCollection<CheckListTemplateEntity> CheckListTemplateCollectionViaAccount___
		{
			get
			{
				if(_checkListTemplateCollectionViaAccount___==null)
				{
					_checkListTemplateCollectionViaAccount___ = new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory)));
					_checkListTemplateCollectionViaAccount___.IsReadOnly=true;
				}
				return _checkListTemplateCollectionViaAccount___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CheckListTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CheckListTemplateEntity))]
		public virtual EntityCollection<CheckListTemplateEntity> CheckListTemplateCollectionViaAccount__
		{
			get
			{
				if(_checkListTemplateCollectionViaAccount__==null)
				{
					_checkListTemplateCollectionViaAccount__ = new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory)));
					_checkListTemplateCollectionViaAccount__.IsReadOnly=true;
				}
				return _checkListTemplateCollectionViaAccount__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CheckListTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CheckListTemplateEntity))]
		public virtual EntityCollection<CheckListTemplateEntity> CheckListTemplateCollectionViaAccount
		{
			get
			{
				if(_checkListTemplateCollectionViaAccount==null)
				{
					_checkListTemplateCollectionViaAccount = new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory)));
					_checkListTemplateCollectionViaAccount.IsReadOnly=true;
				}
				return _checkListTemplateCollectionViaAccount;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ContractEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ContractEntity))]
		public virtual EntityCollection<ContractEntity> ContractCollectionViaMedicalVendorProfile_
		{
			get
			{
				if(_contractCollectionViaMedicalVendorProfile_==null)
				{
					_contractCollectionViaMedicalVendorProfile_ = new EntityCollection<ContractEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContractEntityFactory)));
					_contractCollectionViaMedicalVendorProfile_.IsReadOnly=true;
				}
				return _contractCollectionViaMedicalVendorProfile_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ContractEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ContractEntity))]
		public virtual EntityCollection<ContractEntity> ContractCollectionViaMedicalVendorProfile
		{
			get
			{
				if(_contractCollectionViaMedicalVendorProfile==null)
				{
					_contractCollectionViaMedicalVendorProfile = new EntityCollection<ContractEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContractEntityFactory)));
					_contractCollectionViaMedicalVendorProfile.IsReadOnly=true;
				}
				return _contractCollectionViaMedicalVendorProfile;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerEventScreeningTestsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerEventScreeningTestsEntity))]
		public virtual EntityCollection<CustomerEventScreeningTestsEntity> CustomerEventScreeningTestsCollectionViaTestMedia
		{
			get
			{
				if(_customerEventScreeningTestsCollectionViaTestMedia==null)
				{
					_customerEventScreeningTestsCollectionViaTestMedia = new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory)));
					_customerEventScreeningTestsCollectionViaTestMedia.IsReadOnly=true;
				}
				return _customerEventScreeningTestsCollectionViaTestMedia;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaTestimonial
		{
			get
			{
				if(_customerProfileCollectionViaTestimonial==null)
				{
					_customerProfileCollectionViaTestimonial = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaTestimonial.IsReadOnly=true;
				}
				return _customerProfileCollectionViaTestimonial;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount_________________
		{
			get
			{
				if(_emailTemplateCollectionViaAccount_________________==null)
				{
					_emailTemplateCollectionViaAccount_________________ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount_________________.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount_________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount__________________
		{
			get
			{
				if(_emailTemplateCollectionViaAccount__________________==null)
				{
					_emailTemplateCollectionViaAccount__________________ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount__________________.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount__________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount___________________
		{
			get
			{
				if(_emailTemplateCollectionViaAccount___________________==null)
				{
					_emailTemplateCollectionViaAccount___________________ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount___________________.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount___________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount_____________________________
		{
			get
			{
				if(_emailTemplateCollectionViaAccount_____________________________==null)
				{
					_emailTemplateCollectionViaAccount_____________________________ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount_____________________________.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount_____________________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount___________________________________
		{
			get
			{
				if(_emailTemplateCollectionViaAccount___________________________________==null)
				{
					_emailTemplateCollectionViaAccount___________________________________ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount___________________________________.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount___________________________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount________________
		{
			get
			{
				if(_emailTemplateCollectionViaAccount________________==null)
				{
					_emailTemplateCollectionViaAccount________________ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount________________.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount___________________________
		{
			get
			{
				if(_emailTemplateCollectionViaAccount___________________________==null)
				{
					_emailTemplateCollectionViaAccount___________________________ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount___________________________.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount___________________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount__________________________
		{
			get
			{
				if(_emailTemplateCollectionViaAccount__________________________==null)
				{
					_emailTemplateCollectionViaAccount__________________________ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount__________________________.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount__________________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount_________________________
		{
			get
			{
				if(_emailTemplateCollectionViaAccount_________________________==null)
				{
					_emailTemplateCollectionViaAccount_________________________ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount_________________________.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount_________________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount____________________________
		{
			get
			{
				if(_emailTemplateCollectionViaAccount____________________________==null)
				{
					_emailTemplateCollectionViaAccount____________________________ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount____________________________.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount____________________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount______________________________
		{
			get
			{
				if(_emailTemplateCollectionViaAccount______________________________==null)
				{
					_emailTemplateCollectionViaAccount______________________________ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount______________________________.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount______________________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount_______________________________
		{
			get
			{
				if(_emailTemplateCollectionViaAccount_______________________________==null)
				{
					_emailTemplateCollectionViaAccount_______________________________ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount_______________________________.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount_______________________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount________________________________
		{
			get
			{
				if(_emailTemplateCollectionViaAccount________________________________==null)
				{
					_emailTemplateCollectionViaAccount________________________________ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount________________________________.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount________________________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount_________________________________
		{
			get
			{
				if(_emailTemplateCollectionViaAccount_________________________________==null)
				{
					_emailTemplateCollectionViaAccount_________________________________ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount_________________________________.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount_________________________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount__________________________________
		{
			get
			{
				if(_emailTemplateCollectionViaAccount__________________________________==null)
				{
					_emailTemplateCollectionViaAccount__________________________________ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount__________________________________.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount__________________________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount____________________
		{
			get
			{
				if(_emailTemplateCollectionViaAccount____________________==null)
				{
					_emailTemplateCollectionViaAccount____________________ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount____________________.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount____________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount_____________________
		{
			get
			{
				if(_emailTemplateCollectionViaAccount_____________________==null)
				{
					_emailTemplateCollectionViaAccount_____________________ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount_____________________.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount_____________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount________________________
		{
			get
			{
				if(_emailTemplateCollectionViaAccount________________________==null)
				{
					_emailTemplateCollectionViaAccount________________________ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount________________________.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount________________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount_______________________
		{
			get
			{
				if(_emailTemplateCollectionViaAccount_______________________==null)
				{
					_emailTemplateCollectionViaAccount_______________________ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount_______________________.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount_______________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount______________________
		{
			get
			{
				if(_emailTemplateCollectionViaAccount______________________==null)
				{
					_emailTemplateCollectionViaAccount______________________ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount______________________.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount______________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount__
		{
			get
			{
				if(_emailTemplateCollectionViaAccount__==null)
				{
					_emailTemplateCollectionViaAccount__ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount__.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount___
		{
			get
			{
				if(_emailTemplateCollectionViaAccount___==null)
				{
					_emailTemplateCollectionViaAccount___ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount___.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount____________
		{
			get
			{
				if(_emailTemplateCollectionViaAccount____________==null)
				{
					_emailTemplateCollectionViaAccount____________ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount____________.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount____________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount____
		{
			get
			{
				if(_emailTemplateCollectionViaAccount____==null)
				{
					_emailTemplateCollectionViaAccount____ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount____.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount________
		{
			get
			{
				if(_emailTemplateCollectionViaAccount________==null)
				{
					_emailTemplateCollectionViaAccount________ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount________.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount_______
		{
			get
			{
				if(_emailTemplateCollectionViaAccount_______==null)
				{
					_emailTemplateCollectionViaAccount_______ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount_______.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount_______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount___________
		{
			get
			{
				if(_emailTemplateCollectionViaAccount___________==null)
				{
					_emailTemplateCollectionViaAccount___________ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount___________.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount___________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount__________
		{
			get
			{
				if(_emailTemplateCollectionViaAccount__________==null)
				{
					_emailTemplateCollectionViaAccount__________ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount__________.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount__________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount_
		{
			get
			{
				if(_emailTemplateCollectionViaAccount_==null)
				{
					_emailTemplateCollectionViaAccount_ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount_.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount_____
		{
			get
			{
				if(_emailTemplateCollectionViaAccount_____==null)
				{
					_emailTemplateCollectionViaAccount_____ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount_____.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount_____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount
		{
			get
			{
				if(_emailTemplateCollectionViaAccount==null)
				{
					_emailTemplateCollectionViaAccount = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount_________
		{
			get
			{
				if(_emailTemplateCollectionViaAccount_________==null)
				{
					_emailTemplateCollectionViaAccount_________ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount_________.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount_________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount______
		{
			get
			{
				if(_emailTemplateCollectionViaAccount______==null)
				{
					_emailTemplateCollectionViaAccount______ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount______.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount______________
		{
			get
			{
				if(_emailTemplateCollectionViaAccount______________==null)
				{
					_emailTemplateCollectionViaAccount______________ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount______________.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount______________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount_______________
		{
			get
			{
				if(_emailTemplateCollectionViaAccount_______________==null)
				{
					_emailTemplateCollectionViaAccount_______________ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount_______________.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount_______________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplateCollectionViaAccount_____________
		{
			get
			{
				if(_emailTemplateCollectionViaAccount_____________==null)
				{
					_emailTemplateCollectionViaAccount_____________ = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplateCollectionViaAccount_____________.IsReadOnly=true;
				}
				return _emailTemplateCollectionViaAccount_____________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerResultEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerResultEntity))]
		public virtual EntityCollection<EventCustomerResultEntity> EventCustomerResultCollectionViaWellMedAttestation
		{
			get
			{
				if(_eventCustomerResultCollectionViaWellMedAttestation==null)
				{
					_eventCustomerResultCollectionViaWellMedAttestation = new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory)));
					_eventCustomerResultCollectionViaWellMedAttestation.IsReadOnly=true;
				}
				return _eventCustomerResultCollectionViaWellMedAttestation;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaChaperoneSignature
		{
			get
			{
				if(_eventCustomersCollectionViaChaperoneSignature==null)
				{
					_eventCustomersCollectionViaChaperoneSignature = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaChaperoneSignature.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaChaperoneSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaFluConsentSignature
		{
			get
			{
				if(_eventCustomersCollectionViaFluConsentSignature==null)
				{
					_eventCustomersCollectionViaFluConsentSignature = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaFluConsentSignature.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaFluConsentSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaParticipationConsentSignature
		{
			get
			{
				if(_eventCustomersCollectionViaParticipationConsentSignature==null)
				{
					_eventCustomersCollectionViaParticipationConsentSignature = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaParticipationConsentSignature.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaParticipationConsentSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaFluConsentSignature_
		{
			get
			{
				if(_eventCustomersCollectionViaFluConsentSignature_==null)
				{
					_eventCustomersCollectionViaFluConsentSignature_ = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaFluConsentSignature_.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaFluConsentSignature_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaParticipationConsentSignature_
		{
			get
			{
				if(_eventCustomersCollectionViaParticipationConsentSignature_==null)
				{
					_eventCustomersCollectionViaParticipationConsentSignature_ = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaParticipationConsentSignature_.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaParticipationConsentSignature_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaExitInterviewSignature
		{
			get
			{
				if(_eventCustomersCollectionViaExitInterviewSignature==null)
				{
					_eventCustomersCollectionViaExitInterviewSignature = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaExitInterviewSignature.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaExitInterviewSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaEventCustomerGiftCard_
		{
			get
			{
				if(_eventCustomersCollectionViaEventCustomerGiftCard_==null)
				{
					_eventCustomersCollectionViaEventCustomerGiftCard_ = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaEventCustomerGiftCard_.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaEventCustomerGiftCard_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaChaperoneSignature_
		{
			get
			{
				if(_eventCustomersCollectionViaChaperoneSignature_==null)
				{
					_eventCustomersCollectionViaChaperoneSignature_ = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaChaperoneSignature_.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaChaperoneSignature_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaPhysicianRecordRequestSignature
		{
			get
			{
				if(_eventCustomersCollectionViaPhysicianRecordRequestSignature==null)
				{
					_eventCustomersCollectionViaPhysicianRecordRequestSignature = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaPhysicianRecordRequestSignature.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaPhysicianRecordRequestSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaEventCustomerGiftCard
		{
			get
			{
				if(_eventCustomersCollectionViaEventCustomerGiftCard==null)
				{
					_eventCustomersCollectionViaEventCustomerGiftCard = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaEventCustomerGiftCard.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaEventCustomerGiftCard;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaResultArchiveUpload
		{
			get
			{
				if(_eventsCollectionViaResultArchiveUpload==null)
				{
					_eventsCollectionViaResultArchiveUpload = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaResultArchiveUpload.IsReadOnly=true;
				}
				return _eventsCollectionViaResultArchiveUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ExportableReportsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ExportableReportsEntity))]
		public virtual EntityCollection<ExportableReportsEntity> ExportableReportsCollectionViaExportableReportsQueue
		{
			get
			{
				if(_exportableReportsCollectionViaExportableReportsQueue==null)
				{
					_exportableReportsCollectionViaExportableReportsQueue = new EntityCollection<ExportableReportsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExportableReportsEntityFactory)));
					_exportableReportsCollectionViaExportableReportsQueue.IsReadOnly=true;
				}
				return _exportableReportsCollectionViaExportableReportsQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FluConsentTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FluConsentTemplateEntity))]
		public virtual EntityCollection<FluConsentTemplateEntity> FluConsentTemplateCollectionViaAccount______
		{
			get
			{
				if(_fluConsentTemplateCollectionViaAccount______==null)
				{
					_fluConsentTemplateCollectionViaAccount______ = new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory)));
					_fluConsentTemplateCollectionViaAccount______.IsReadOnly=true;
				}
				return _fluConsentTemplateCollectionViaAccount______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FluConsentTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FluConsentTemplateEntity))]
		public virtual EntityCollection<FluConsentTemplateEntity> FluConsentTemplateCollectionViaAccount
		{
			get
			{
				if(_fluConsentTemplateCollectionViaAccount==null)
				{
					_fluConsentTemplateCollectionViaAccount = new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory)));
					_fluConsentTemplateCollectionViaAccount.IsReadOnly=true;
				}
				return _fluConsentTemplateCollectionViaAccount;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FluConsentTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FluConsentTemplateEntity))]
		public virtual EntityCollection<FluConsentTemplateEntity> FluConsentTemplateCollectionViaAccount________
		{
			get
			{
				if(_fluConsentTemplateCollectionViaAccount________==null)
				{
					_fluConsentTemplateCollectionViaAccount________ = new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory)));
					_fluConsentTemplateCollectionViaAccount________.IsReadOnly=true;
				}
				return _fluConsentTemplateCollectionViaAccount________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FluConsentTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FluConsentTemplateEntity))]
		public virtual EntityCollection<FluConsentTemplateEntity> FluConsentTemplateCollectionViaAccount_______
		{
			get
			{
				if(_fluConsentTemplateCollectionViaAccount_______==null)
				{
					_fluConsentTemplateCollectionViaAccount_______ = new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory)));
					_fluConsentTemplateCollectionViaAccount_______.IsReadOnly=true;
				}
				return _fluConsentTemplateCollectionViaAccount_______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FluConsentTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FluConsentTemplateEntity))]
		public virtual EntityCollection<FluConsentTemplateEntity> FluConsentTemplateCollectionViaAccount___
		{
			get
			{
				if(_fluConsentTemplateCollectionViaAccount___==null)
				{
					_fluConsentTemplateCollectionViaAccount___ = new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory)));
					_fluConsentTemplateCollectionViaAccount___.IsReadOnly=true;
				}
				return _fluConsentTemplateCollectionViaAccount___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FluConsentTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FluConsentTemplateEntity))]
		public virtual EntityCollection<FluConsentTemplateEntity> FluConsentTemplateCollectionViaAccount_____
		{
			get
			{
				if(_fluConsentTemplateCollectionViaAccount_____==null)
				{
					_fluConsentTemplateCollectionViaAccount_____ = new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory)));
					_fluConsentTemplateCollectionViaAccount_____.IsReadOnly=true;
				}
				return _fluConsentTemplateCollectionViaAccount_____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FluConsentTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FluConsentTemplateEntity))]
		public virtual EntityCollection<FluConsentTemplateEntity> FluConsentTemplateCollectionViaAccount__
		{
			get
			{
				if(_fluConsentTemplateCollectionViaAccount__==null)
				{
					_fluConsentTemplateCollectionViaAccount__ = new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory)));
					_fluConsentTemplateCollectionViaAccount__.IsReadOnly=true;
				}
				return _fluConsentTemplateCollectionViaAccount__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FluConsentTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FluConsentTemplateEntity))]
		public virtual EntityCollection<FluConsentTemplateEntity> FluConsentTemplateCollectionViaAccount_
		{
			get
			{
				if(_fluConsentTemplateCollectionViaAccount_==null)
				{
					_fluConsentTemplateCollectionViaAccount_ = new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory)));
					_fluConsentTemplateCollectionViaAccount_.IsReadOnly=true;
				}
				return _fluConsentTemplateCollectionViaAccount_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FluConsentTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FluConsentTemplateEntity))]
		public virtual EntityCollection<FluConsentTemplateEntity> FluConsentTemplateCollectionViaAccount____
		{
			get
			{
				if(_fluConsentTemplateCollectionViaAccount____==null)
				{
					_fluConsentTemplateCollectionViaAccount____ = new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory)));
					_fluConsentTemplateCollectionViaAccount____.IsReadOnly=true;
				}
				return _fluConsentTemplateCollectionViaAccount____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HafTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HafTemplateEntity))]
		public virtual EntityCollection<HafTemplateEntity> HafTemplateCollectionViaAccount________
		{
			get
			{
				if(_hafTemplateCollectionViaAccount________==null)
				{
					_hafTemplateCollectionViaAccount________ = new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory)));
					_hafTemplateCollectionViaAccount________.IsReadOnly=true;
				}
				return _hafTemplateCollectionViaAccount________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HafTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HafTemplateEntity))]
		public virtual EntityCollection<HafTemplateEntity> HafTemplateCollectionViaAccount______
		{
			get
			{
				if(_hafTemplateCollectionViaAccount______==null)
				{
					_hafTemplateCollectionViaAccount______ = new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory)));
					_hafTemplateCollectionViaAccount______.IsReadOnly=true;
				}
				return _hafTemplateCollectionViaAccount______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HafTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HafTemplateEntity))]
		public virtual EntityCollection<HafTemplateEntity> HafTemplateCollectionViaAccount__
		{
			get
			{
				if(_hafTemplateCollectionViaAccount__==null)
				{
					_hafTemplateCollectionViaAccount__ = new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory)));
					_hafTemplateCollectionViaAccount__.IsReadOnly=true;
				}
				return _hafTemplateCollectionViaAccount__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HafTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HafTemplateEntity))]
		public virtual EntityCollection<HafTemplateEntity> HafTemplateCollectionViaAccount____
		{
			get
			{
				if(_hafTemplateCollectionViaAccount____==null)
				{
					_hafTemplateCollectionViaAccount____ = new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory)));
					_hafTemplateCollectionViaAccount____.IsReadOnly=true;
				}
				return _hafTemplateCollectionViaAccount____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HafTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HafTemplateEntity))]
		public virtual EntityCollection<HafTemplateEntity> HafTemplateCollectionViaPackage
		{
			get
			{
				if(_hafTemplateCollectionViaPackage==null)
				{
					_hafTemplateCollectionViaPackage = new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory)));
					_hafTemplateCollectionViaPackage.IsReadOnly=true;
				}
				return _hafTemplateCollectionViaPackage;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HafTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HafTemplateEntity))]
		public virtual EntityCollection<HafTemplateEntity> HafTemplateCollectionViaAccount_
		{
			get
			{
				if(_hafTemplateCollectionViaAccount_==null)
				{
					_hafTemplateCollectionViaAccount_ = new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory)));
					_hafTemplateCollectionViaAccount_.IsReadOnly=true;
				}
				return _hafTemplateCollectionViaAccount_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HafTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HafTemplateEntity))]
		public virtual EntityCollection<HafTemplateEntity> HafTemplateCollectionViaAccount_______
		{
			get
			{
				if(_hafTemplateCollectionViaAccount_______==null)
				{
					_hafTemplateCollectionViaAccount_______ = new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory)));
					_hafTemplateCollectionViaAccount_______.IsReadOnly=true;
				}
				return _hafTemplateCollectionViaAccount_______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HafTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HafTemplateEntity))]
		public virtual EntityCollection<HafTemplateEntity> HafTemplateCollectionViaAccount_____
		{
			get
			{
				if(_hafTemplateCollectionViaAccount_____==null)
				{
					_hafTemplateCollectionViaAccount_____ = new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory)));
					_hafTemplateCollectionViaAccount_____.IsReadOnly=true;
				}
				return _hafTemplateCollectionViaAccount_____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HafTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HafTemplateEntity))]
		public virtual EntityCollection<HafTemplateEntity> HafTemplateCollectionViaAccount
		{
			get
			{
				if(_hafTemplateCollectionViaAccount==null)
				{
					_hafTemplateCollectionViaAccount = new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory)));
					_hafTemplateCollectionViaAccount.IsReadOnly=true;
				}
				return _hafTemplateCollectionViaAccount;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HafTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HafTemplateEntity))]
		public virtual EntityCollection<HafTemplateEntity> HafTemplateCollectionViaAccount___
		{
			get
			{
				if(_hafTemplateCollectionViaAccount___==null)
				{
					_hafTemplateCollectionViaAccount___ = new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory)));
					_hafTemplateCollectionViaAccount___.IsReadOnly=true;
				}
				return _hafTemplateCollectionViaAccount___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HealthPlanCallQueueCriteriaEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HealthPlanCallQueueCriteriaEntity))]
		public virtual EntityCollection<HealthPlanCallQueueCriteriaEntity> HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload
		{
			get
			{
				if(_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload==null)
				{
					_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload = new EntityCollection<HealthPlanCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCallQueueCriteriaEntityFactory)));
					_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload.IsReadOnly=true;
				}
				return _healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaStaffEventScheduleUpload_
		{
			get
			{
				if(_lookupCollectionViaStaffEventScheduleUpload_==null)
				{
					_lookupCollectionViaStaffEventScheduleUpload_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaStaffEventScheduleUpload_.IsReadOnly=true;
				}
				return _lookupCollectionViaStaffEventScheduleUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaRapsUpload
		{
			get
			{
				if(_lookupCollectionViaRapsUpload==null)
				{
					_lookupCollectionViaRapsUpload = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaRapsUpload.IsReadOnly=true;
				}
				return _lookupCollectionViaRapsUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCustomerPhoneNumberUpdateUpload
		{
			get
			{
				if(_lookupCollectionViaCustomerPhoneNumberUpdateUpload==null)
				{
					_lookupCollectionViaCustomerPhoneNumberUpdateUpload = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCustomerPhoneNumberUpdateUpload.IsReadOnly=true;
				}
				return _lookupCollectionViaCustomerPhoneNumberUpdateUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEligibilityUpload
		{
			get
			{
				if(_lookupCollectionViaEligibilityUpload==null)
				{
					_lookupCollectionViaEligibilityUpload = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEligibilityUpload.IsReadOnly=true;
				}
				return _lookupCollectionViaEligibilityUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCustomerPhoneNumberUpdateUpload_
		{
			get
			{
				if(_lookupCollectionViaCustomerPhoneNumberUpdateUpload_==null)
				{
					_lookupCollectionViaCustomerPhoneNumberUpdateUpload_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCustomerPhoneNumberUpdateUpload_.IsReadOnly=true;
				}
				return _lookupCollectionViaCustomerPhoneNumberUpdateUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEligibilityUpload_
		{
			get
			{
				if(_lookupCollectionViaEligibilityUpload_==null)
				{
					_lookupCollectionViaEligibilityUpload_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEligibilityUpload_.IsReadOnly=true;
				}
				return _lookupCollectionViaEligibilityUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaStaffEventScheduleUpload
		{
			get
			{
				if(_lookupCollectionViaStaffEventScheduleUpload==null)
				{
					_lookupCollectionViaStaffEventScheduleUpload = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaStaffEventScheduleUpload.IsReadOnly=true;
				}
				return _lookupCollectionViaStaffEventScheduleUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaRapsUpload_
		{
			get
			{
				if(_lookupCollectionViaRapsUpload_==null)
				{
					_lookupCollectionViaRapsUpload_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaRapsUpload_.IsReadOnly=true;
				}
				return _lookupCollectionViaRapsUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaMergeCustomerUpload_
		{
			get
			{
				if(_lookupCollectionViaMergeCustomerUpload_==null)
				{
					_lookupCollectionViaMergeCustomerUpload_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaMergeCustomerUpload_.IsReadOnly=true;
				}
				return _lookupCollectionViaMergeCustomerUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaMergeCustomerUpload
		{
			get
			{
				if(_lookupCollectionViaMergeCustomerUpload==null)
				{
					_lookupCollectionViaMergeCustomerUpload = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaMergeCustomerUpload.IsReadOnly=true;
				}
				return _lookupCollectionViaMergeCustomerUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaMedicationUpload_
		{
			get
			{
				if(_lookupCollectionViaMedicationUpload_==null)
				{
					_lookupCollectionViaMedicationUpload_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaMedicationUpload_.IsReadOnly=true;
				}
				return _lookupCollectionViaMedicationUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaOutboundUpload__
		{
			get
			{
				if(_lookupCollectionViaOutboundUpload__==null)
				{
					_lookupCollectionViaOutboundUpload__ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaOutboundUpload__.IsReadOnly=true;
				}
				return _lookupCollectionViaOutboundUpload__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaOutboundUpload
		{
			get
			{
				if(_lookupCollectionViaOutboundUpload==null)
				{
					_lookupCollectionViaOutboundUpload = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaOutboundUpload.IsReadOnly=true;
				}
				return _lookupCollectionViaOutboundUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaOutboundUpload___
		{
			get
			{
				if(_lookupCollectionViaOutboundUpload___==null)
				{
					_lookupCollectionViaOutboundUpload___ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaOutboundUpload___.IsReadOnly=true;
				}
				return _lookupCollectionViaOutboundUpload___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaPackage
		{
			get
			{
				if(_lookupCollectionViaPackage==null)
				{
					_lookupCollectionViaPackage = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaPackage.IsReadOnly=true;
				}
				return _lookupCollectionViaPackage;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaSuspectConditionUpload_
		{
			get
			{
				if(_lookupCollectionViaSuspectConditionUpload_==null)
				{
					_lookupCollectionViaSuspectConditionUpload_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaSuspectConditionUpload_.IsReadOnly=true;
				}
				return _lookupCollectionViaSuspectConditionUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaExportableReportsQueue
		{
			get
			{
				if(_lookupCollectionViaExportableReportsQueue==null)
				{
					_lookupCollectionViaExportableReportsQueue = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaExportableReportsQueue.IsReadOnly=true;
				}
				return _lookupCollectionViaExportableReportsQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaSuspectConditionUpload
		{
			get
			{
				if(_lookupCollectionViaSuspectConditionUpload==null)
				{
					_lookupCollectionViaSuspectConditionUpload = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaSuspectConditionUpload.IsReadOnly=true;
				}
				return _lookupCollectionViaSuspectConditionUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaMedicationUpload
		{
			get
			{
				if(_lookupCollectionViaMedicationUpload==null)
				{
					_lookupCollectionViaMedicationUpload = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaMedicationUpload.IsReadOnly=true;
				}
				return _lookupCollectionViaMedicationUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaHostImage
		{
			get
			{
				if(_lookupCollectionViaHostImage==null)
				{
					_lookupCollectionViaHostImage = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaHostImage.IsReadOnly=true;
				}
				return _lookupCollectionViaHostImage;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaOutboundUpload_
		{
			get
			{
				if(_lookupCollectionViaOutboundUpload_==null)
				{
					_lookupCollectionViaOutboundUpload_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaOutboundUpload_.IsReadOnly=true;
				}
				return _lookupCollectionViaOutboundUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaWellMedAttestation
		{
			get
			{
				if(_lookupCollectionViaWellMedAttestation==null)
				{
					_lookupCollectionViaWellMedAttestation = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaWellMedAttestation.IsReadOnly=true;
				}
				return _lookupCollectionViaWellMedAttestation;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaAccount___
		{
			get
			{
				if(_lookupCollectionViaAccount___==null)
				{
					_lookupCollectionViaAccount___ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaAccount___.IsReadOnly=true;
				}
				return _lookupCollectionViaAccount___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaAccount______
		{
			get
			{
				if(_lookupCollectionViaAccount______==null)
				{
					_lookupCollectionViaAccount______ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaAccount______.IsReadOnly=true;
				}
				return _lookupCollectionViaAccount______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaAccount__
		{
			get
			{
				if(_lookupCollectionViaAccount__==null)
				{
					_lookupCollectionViaAccount__ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaAccount__.IsReadOnly=true;
				}
				return _lookupCollectionViaAccount__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCorporateUpload_
		{
			get
			{
				if(_lookupCollectionViaCorporateUpload_==null)
				{
					_lookupCollectionViaCorporateUpload_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCorporateUpload_.IsReadOnly=true;
				}
				return _lookupCollectionViaCorporateUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaAccount____
		{
			get
			{
				if(_lookupCollectionViaAccount____==null)
				{
					_lookupCollectionViaAccount____ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaAccount____.IsReadOnly=true;
				}
				return _lookupCollectionViaAccount____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaAccount_____
		{
			get
			{
				if(_lookupCollectionViaAccount_____==null)
				{
					_lookupCollectionViaAccount_____ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaAccount_____.IsReadOnly=true;
				}
				return _lookupCollectionViaAccount_____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCallUpload_
		{
			get
			{
				if(_lookupCollectionViaCallUpload_==null)
				{
					_lookupCollectionViaCallUpload_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCallUpload_.IsReadOnly=true;
				}
				return _lookupCollectionViaCallUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCorporateUpload
		{
			get
			{
				if(_lookupCollectionViaCorporateUpload==null)
				{
					_lookupCollectionViaCorporateUpload = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCorporateUpload.IsReadOnly=true;
				}
				return _lookupCollectionViaCorporateUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCallUpload
		{
			get
			{
				if(_lookupCollectionViaCallUpload==null)
				{
					_lookupCollectionViaCallUpload = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCallUpload.IsReadOnly=true;
				}
				return _lookupCollectionViaCallUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaAccount_
		{
			get
			{
				if(_lookupCollectionViaAccount_==null)
				{
					_lookupCollectionViaAccount_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaAccount_.IsReadOnly=true;
				}
				return _lookupCollectionViaAccount_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCustomerActivityTypeUpload_
		{
			get
			{
				if(_lookupCollectionViaCustomerActivityTypeUpload_==null)
				{
					_lookupCollectionViaCustomerActivityTypeUpload_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCustomerActivityTypeUpload_.IsReadOnly=true;
				}
				return _lookupCollectionViaCustomerActivityTypeUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaAccount
		{
			get
			{
				if(_lookupCollectionViaAccount==null)
				{
					_lookupCollectionViaAccount = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaAccount.IsReadOnly=true;
				}
				return _lookupCollectionViaAccount;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaAccount_______
		{
			get
			{
				if(_lookupCollectionViaAccount_______==null)
				{
					_lookupCollectionViaAccount_______ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaAccount_______.IsReadOnly=true;
				}
				return _lookupCollectionViaAccount_______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCorporateUpload__
		{
			get
			{
				if(_lookupCollectionViaCorporateUpload__==null)
				{
					_lookupCollectionViaCorporateUpload__ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCorporateUpload__.IsReadOnly=true;
				}
				return _lookupCollectionViaCorporateUpload__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCustomerActivityTypeUpload
		{
			get
			{
				if(_lookupCollectionViaCustomerActivityTypeUpload==null)
				{
					_lookupCollectionViaCustomerActivityTypeUpload = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCustomerActivityTypeUpload.IsReadOnly=true;
				}
				return _lookupCollectionViaCustomerActivityTypeUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaAccount________
		{
			get
			{
				if(_lookupCollectionViaAccount________==null)
				{
					_lookupCollectionViaAccount________ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaAccount________.IsReadOnly=true;
				}
				return _lookupCollectionViaAccount________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'MedicalVendorTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(MedicalVendorTypeEntity))]
		public virtual EntityCollection<MedicalVendorTypeEntity> MedicalVendorTypeCollectionViaMedicalVendorProfile
		{
			get
			{
				if(_medicalVendorTypeCollectionViaMedicalVendorProfile==null)
				{
					_medicalVendorTypeCollectionViaMedicalVendorProfile = new EntityCollection<MedicalVendorTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicalVendorTypeEntityFactory)));
					_medicalVendorTypeCollectionViaMedicalVendorProfile.IsReadOnly=true;
				}
				return _medicalVendorTypeCollectionViaMedicalVendorProfile;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'MedicalVendorTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(MedicalVendorTypeEntity))]
		public virtual EntityCollection<MedicalVendorTypeEntity> MedicalVendorTypeCollectionViaMedicalVendorProfile_
		{
			get
			{
				if(_medicalVendorTypeCollectionViaMedicalVendorProfile_==null)
				{
					_medicalVendorTypeCollectionViaMedicalVendorProfile_ = new EntityCollection<MedicalVendorTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicalVendorTypeEntityFactory)));
					_medicalVendorTypeCollectionViaMedicalVendorProfile_.IsReadOnly=true;
				}
				return _medicalVendorTypeCollectionViaMedicalVendorProfile_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'MvuserClassificationEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(MvuserClassificationEntity))]
		public virtual EntityCollection<MvuserClassificationEntity> MvuserClassificationCollectionViaPhysicianProfile_
		{
			get
			{
				if(_mvuserClassificationCollectionViaPhysicianProfile_==null)
				{
					_mvuserClassificationCollectionViaPhysicianProfile_ = new EntityCollection<MvuserClassificationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MvuserClassificationEntityFactory)));
					_mvuserClassificationCollectionViaPhysicianProfile_.IsReadOnly=true;
				}
				return _mvuserClassificationCollectionViaPhysicianProfile_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'MvuserClassificationEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(MvuserClassificationEntity))]
		public virtual EntityCollection<MvuserClassificationEntity> MvuserClassificationCollectionViaPhysicianProfile
		{
			get
			{
				if(_mvuserClassificationCollectionViaPhysicianProfile==null)
				{
					_mvuserClassificationCollectionViaPhysicianProfile = new EntityCollection<MvuserClassificationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MvuserClassificationEntityFactory)));
					_mvuserClassificationCollectionViaPhysicianProfile.IsReadOnly=true;
				}
				return _mvuserClassificationCollectionViaPhysicianProfile;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaMergeCustomerUpload
		{
			get
			{
				if(_organizationRoleUserCollectionViaMergeCustomerUpload==null)
				{
					_organizationRoleUserCollectionViaMergeCustomerUpload = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaMergeCustomerUpload.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaMergeCustomerUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaCustomerActivityTypeUpload_
		{
			get
			{
				if(_organizationRoleUserCollectionViaCustomerActivityTypeUpload_==null)
				{
					_organizationRoleUserCollectionViaCustomerActivityTypeUpload_ = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaCustomerActivityTypeUpload_.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaCustomerActivityTypeUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaMergeCustomerUpload_
		{
			get
			{
				if(_organizationRoleUserCollectionViaMergeCustomerUpload_==null)
				{
					_organizationRoleUserCollectionViaMergeCustomerUpload_ = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaMergeCustomerUpload_.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaMergeCustomerUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaMedicationUpload_
		{
			get
			{
				if(_organizationRoleUserCollectionViaMedicationUpload_==null)
				{
					_organizationRoleUserCollectionViaMedicationUpload_ = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaMedicationUpload_.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaMedicationUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaStaffEventScheduleUpload_
		{
			get
			{
				if(_organizationRoleUserCollectionViaStaffEventScheduleUpload_==null)
				{
					_organizationRoleUserCollectionViaStaffEventScheduleUpload_ = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaStaffEventScheduleUpload_.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaStaffEventScheduleUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaStaffEventScheduleUpload
		{
			get
			{
				if(_organizationRoleUserCollectionViaStaffEventScheduleUpload==null)
				{
					_organizationRoleUserCollectionViaStaffEventScheduleUpload = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaStaffEventScheduleUpload.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaStaffEventScheduleUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaSuspectConditionUpload_
		{
			get
			{
				if(_organizationRoleUserCollectionViaSuspectConditionUpload_==null)
				{
					_organizationRoleUserCollectionViaSuspectConditionUpload_ = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaSuspectConditionUpload_.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaSuspectConditionUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaSuspectConditionUpload
		{
			get
			{
				if(_organizationRoleUserCollectionViaSuspectConditionUpload==null)
				{
					_organizationRoleUserCollectionViaSuspectConditionUpload = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaSuspectConditionUpload.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaSuspectConditionUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaRapsUpload_
		{
			get
			{
				if(_organizationRoleUserCollectionViaRapsUpload_==null)
				{
					_organizationRoleUserCollectionViaRapsUpload_ = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaRapsUpload_.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaRapsUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaParticipationConsentSignature_
		{
			get
			{
				if(_organizationRoleUserCollectionViaParticipationConsentSignature_==null)
				{
					_organizationRoleUserCollectionViaParticipationConsentSignature_ = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaParticipationConsentSignature_.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaParticipationConsentSignature_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaParticipationConsentSignature
		{
			get
			{
				if(_organizationRoleUserCollectionViaParticipationConsentSignature==null)
				{
					_organizationRoleUserCollectionViaParticipationConsentSignature = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaParticipationConsentSignature.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaParticipationConsentSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaRapsUpload
		{
			get
			{
				if(_organizationRoleUserCollectionViaRapsUpload==null)
				{
					_organizationRoleUserCollectionViaRapsUpload = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaRapsUpload.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaRapsUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaPhysicianRecordRequestSignature
		{
			get
			{
				if(_organizationRoleUserCollectionViaPhysicianRecordRequestSignature==null)
				{
					_organizationRoleUserCollectionViaPhysicianRecordRequestSignature = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaPhysicianRecordRequestSignature.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaPhysicianRecordRequestSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaFluConsentSignature
		{
			get
			{
				if(_organizationRoleUserCollectionViaFluConsentSignature==null)
				{
					_organizationRoleUserCollectionViaFluConsentSignature = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaFluConsentSignature.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaFluConsentSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaCorporateUpload
		{
			get
			{
				if(_organizationRoleUserCollectionViaCorporateUpload==null)
				{
					_organizationRoleUserCollectionViaCorporateUpload = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaCorporateUpload.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaCorporateUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaCallUpload_
		{
			get
			{
				if(_organizationRoleUserCollectionViaCallUpload_==null)
				{
					_organizationRoleUserCollectionViaCallUpload_ = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaCallUpload_.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaCallUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaEligibilityUpload
		{
			get
			{
				if(_organizationRoleUserCollectionViaEligibilityUpload==null)
				{
					_organizationRoleUserCollectionViaEligibilityUpload = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaEligibilityUpload.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaEligibilityUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaEventCustomerGiftCard_
		{
			get
			{
				if(_organizationRoleUserCollectionViaEventCustomerGiftCard_==null)
				{
					_organizationRoleUserCollectionViaEventCustomerGiftCard_ = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaEventCustomerGiftCard_.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaEventCustomerGiftCard_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaEligibilityUpload_
		{
			get
			{
				if(_organizationRoleUserCollectionViaEligibilityUpload_==null)
				{
					_organizationRoleUserCollectionViaEligibilityUpload_ = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaEligibilityUpload_.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaEligibilityUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaChaperoneSignature_
		{
			get
			{
				if(_organizationRoleUserCollectionViaChaperoneSignature_==null)
				{
					_organizationRoleUserCollectionViaChaperoneSignature_ = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaChaperoneSignature_.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaChaperoneSignature_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaExitInterviewSignature
		{
			get
			{
				if(_organizationRoleUserCollectionViaExitInterviewSignature==null)
				{
					_organizationRoleUserCollectionViaExitInterviewSignature = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaExitInterviewSignature.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaExitInterviewSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaCorporateUpload__
		{
			get
			{
				if(_organizationRoleUserCollectionViaCorporateUpload__==null)
				{
					_organizationRoleUserCollectionViaCorporateUpload__ = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaCorporateUpload__.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaCorporateUpload__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaExportableReportsQueue
		{
			get
			{
				if(_organizationRoleUserCollectionViaExportableReportsQueue==null)
				{
					_organizationRoleUserCollectionViaExportableReportsQueue = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaExportableReportsQueue.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaExportableReportsQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaChaperoneSignature
		{
			get
			{
				if(_organizationRoleUserCollectionViaChaperoneSignature==null)
				{
					_organizationRoleUserCollectionViaChaperoneSignature = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaChaperoneSignature.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaChaperoneSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaEventCustomerGiftCard
		{
			get
			{
				if(_organizationRoleUserCollectionViaEventCustomerGiftCard==null)
				{
					_organizationRoleUserCollectionViaEventCustomerGiftCard = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaEventCustomerGiftCard.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaEventCustomerGiftCard;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload
		{
			get
			{
				if(_organizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload==null)
				{
					_organizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaHealthPlanCriteriaAssignmentUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_
		{
			get
			{
				if(_organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_==null)
				{
					_organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_ = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload
		{
			get
			{
				if(_organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload==null)
				{
					_organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaCustomerPhoneNumberUpdateUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaFluConsentSignature_
		{
			get
			{
				if(_organizationRoleUserCollectionViaFluConsentSignature_==null)
				{
					_organizationRoleUserCollectionViaFluConsentSignature_ = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaFluConsentSignature_.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaFluConsentSignature_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaMedicationUpload
		{
			get
			{
				if(_organizationRoleUserCollectionViaMedicationUpload==null)
				{
					_organizationRoleUserCollectionViaMedicationUpload = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaMedicationUpload.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaMedicationUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaCustomerActivityTypeUpload
		{
			get
			{
				if(_organizationRoleUserCollectionViaCustomerActivityTypeUpload==null)
				{
					_organizationRoleUserCollectionViaCustomerActivityTypeUpload = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaCustomerActivityTypeUpload.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaCustomerActivityTypeUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaCallUpload
		{
			get
			{
				if(_organizationRoleUserCollectionViaCallUpload==null)
				{
					_organizationRoleUserCollectionViaCallUpload = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaCallUpload.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaCallUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserEntity))]
		public virtual EntityCollection<OrganizationRoleUserEntity> OrganizationRoleUserCollectionViaCorporateUpload_
		{
			get
			{
				if(_organizationRoleUserCollectionViaCorporateUpload_==null)
				{
					_organizationRoleUserCollectionViaCorporateUpload_ = new EntityCollection<OrganizationRoleUserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory)));
					_organizationRoleUserCollectionViaCorporateUpload_.IsReadOnly=true;
				}
				return _organizationRoleUserCollectionViaCorporateUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationTypeEntity))]
		public virtual EntityCollection<OrganizationTypeEntity> OrganizationTypeCollectionViaOrganization
		{
			get
			{
				if(_organizationTypeCollectionViaOrganization==null)
				{
					_organizationTypeCollectionViaOrganization = new EntityCollection<OrganizationTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationTypeEntityFactory)));
					_organizationTypeCollectionViaOrganization.IsReadOnly=true;
				}
				return _organizationTypeCollectionViaOrganization;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationTypeEntity))]
		public virtual EntityCollection<OrganizationTypeEntity> OrganizationTypeCollectionViaOrganization_
		{
			get
			{
				if(_organizationTypeCollectionViaOrganization_==null)
				{
					_organizationTypeCollectionViaOrganization_ = new EntityCollection<OrganizationTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationTypeEntityFactory)));
					_organizationTypeCollectionViaOrganization_.IsReadOnly=true;
				}
				return _organizationTypeCollectionViaOrganization_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PhysicianSpecializationEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PhysicianSpecializationEntity))]
		public virtual EntityCollection<PhysicianSpecializationEntity> PhysicianSpecializationCollectionViaPhysicianProfile_
		{
			get
			{
				if(_physicianSpecializationCollectionViaPhysicianProfile_==null)
				{
					_physicianSpecializationCollectionViaPhysicianProfile_ = new EntityCollection<PhysicianSpecializationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PhysicianSpecializationEntityFactory)));
					_physicianSpecializationCollectionViaPhysicianProfile_.IsReadOnly=true;
				}
				return _physicianSpecializationCollectionViaPhysicianProfile_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PhysicianSpecializationEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PhysicianSpecializationEntity))]
		public virtual EntityCollection<PhysicianSpecializationEntity> PhysicianSpecializationCollectionViaPhysicianProfile
		{
			get
			{
				if(_physicianSpecializationCollectionViaPhysicianProfile==null)
				{
					_physicianSpecializationCollectionViaPhysicianProfile = new EntityCollection<PhysicianSpecializationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PhysicianSpecializationEntityFactory)));
					_physicianSpecializationCollectionViaPhysicianProfile.IsReadOnly=true;
				}
				return _physicianSpecializationCollectionViaPhysicianProfile;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ProspectsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ProspectsEntity))]
		public virtual EntityCollection<ProspectsEntity> ProspectsCollectionViaAccount
		{
			get
			{
				if(_prospectsCollectionViaAccount==null)
				{
					_prospectsCollectionViaAccount = new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory)));
					_prospectsCollectionViaAccount.IsReadOnly=true;
				}
				return _prospectsCollectionViaAccount;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ProspectsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ProspectsEntity))]
		public virtual EntityCollection<ProspectsEntity> ProspectsCollectionViaAccount________
		{
			get
			{
				if(_prospectsCollectionViaAccount________==null)
				{
					_prospectsCollectionViaAccount________ = new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory)));
					_prospectsCollectionViaAccount________.IsReadOnly=true;
				}
				return _prospectsCollectionViaAccount________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ProspectsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ProspectsEntity))]
		public virtual EntityCollection<ProspectsEntity> ProspectsCollectionViaAccount__
		{
			get
			{
				if(_prospectsCollectionViaAccount__==null)
				{
					_prospectsCollectionViaAccount__ = new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory)));
					_prospectsCollectionViaAccount__.IsReadOnly=true;
				}
				return _prospectsCollectionViaAccount__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ProspectsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ProspectsEntity))]
		public virtual EntityCollection<ProspectsEntity> ProspectsCollectionViaAccount_
		{
			get
			{
				if(_prospectsCollectionViaAccount_==null)
				{
					_prospectsCollectionViaAccount_ = new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory)));
					_prospectsCollectionViaAccount_.IsReadOnly=true;
				}
				return _prospectsCollectionViaAccount_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ProspectsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ProspectsEntity))]
		public virtual EntityCollection<ProspectsEntity> ProspectsCollectionViaAccount______
		{
			get
			{
				if(_prospectsCollectionViaAccount______==null)
				{
					_prospectsCollectionViaAccount______ = new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory)));
					_prospectsCollectionViaAccount______.IsReadOnly=true;
				}
				return _prospectsCollectionViaAccount______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ProspectsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ProspectsEntity))]
		public virtual EntityCollection<ProspectsEntity> ProspectsCollectionViaAccount____
		{
			get
			{
				if(_prospectsCollectionViaAccount____==null)
				{
					_prospectsCollectionViaAccount____ = new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory)));
					_prospectsCollectionViaAccount____.IsReadOnly=true;
				}
				return _prospectsCollectionViaAccount____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ProspectsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ProspectsEntity))]
		public virtual EntityCollection<ProspectsEntity> ProspectsCollectionViaHostImage
		{
			get
			{
				if(_prospectsCollectionViaHostImage==null)
				{
					_prospectsCollectionViaHostImage = new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory)));
					_prospectsCollectionViaHostImage.IsReadOnly=true;
				}
				return _prospectsCollectionViaHostImage;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ProspectsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ProspectsEntity))]
		public virtual EntityCollection<ProspectsEntity> ProspectsCollectionViaAccount___
		{
			get
			{
				if(_prospectsCollectionViaAccount___==null)
				{
					_prospectsCollectionViaAccount___ = new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory)));
					_prospectsCollectionViaAccount___.IsReadOnly=true;
				}
				return _prospectsCollectionViaAccount___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ProspectsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ProspectsEntity))]
		public virtual EntityCollection<ProspectsEntity> ProspectsCollectionViaAccount_____
		{
			get
			{
				if(_prospectsCollectionViaAccount_____==null)
				{
					_prospectsCollectionViaAccount_____ = new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory)));
					_prospectsCollectionViaAccount_____.IsReadOnly=true;
				}
				return _prospectsCollectionViaAccount_____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ProspectsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ProspectsEntity))]
		public virtual EntityCollection<ProspectsEntity> ProspectsCollectionViaAccount_______
		{
			get
			{
				if(_prospectsCollectionViaAccount_______==null)
				{
					_prospectsCollectionViaAccount_______ = new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory)));
					_prospectsCollectionViaAccount_______.IsReadOnly=true;
				}
				return _prospectsCollectionViaAccount_______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'SurveyTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(SurveyTemplateEntity))]
		public virtual EntityCollection<SurveyTemplateEntity> SurveyTemplateCollectionViaAccount_______
		{
			get
			{
				if(_surveyTemplateCollectionViaAccount_______==null)
				{
					_surveyTemplateCollectionViaAccount_______ = new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory)));
					_surveyTemplateCollectionViaAccount_______.IsReadOnly=true;
				}
				return _surveyTemplateCollectionViaAccount_______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'SurveyTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(SurveyTemplateEntity))]
		public virtual EntityCollection<SurveyTemplateEntity> SurveyTemplateCollectionViaAccount________
		{
			get
			{
				if(_surveyTemplateCollectionViaAccount________==null)
				{
					_surveyTemplateCollectionViaAccount________ = new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory)));
					_surveyTemplateCollectionViaAccount________.IsReadOnly=true;
				}
				return _surveyTemplateCollectionViaAccount________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'SurveyTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(SurveyTemplateEntity))]
		public virtual EntityCollection<SurveyTemplateEntity> SurveyTemplateCollectionViaAccount
		{
			get
			{
				if(_surveyTemplateCollectionViaAccount==null)
				{
					_surveyTemplateCollectionViaAccount = new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory)));
					_surveyTemplateCollectionViaAccount.IsReadOnly=true;
				}
				return _surveyTemplateCollectionViaAccount;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'SurveyTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(SurveyTemplateEntity))]
		public virtual EntityCollection<SurveyTemplateEntity> SurveyTemplateCollectionViaAccount______
		{
			get
			{
				if(_surveyTemplateCollectionViaAccount______==null)
				{
					_surveyTemplateCollectionViaAccount______ = new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory)));
					_surveyTemplateCollectionViaAccount______.IsReadOnly=true;
				}
				return _surveyTemplateCollectionViaAccount______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'SurveyTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(SurveyTemplateEntity))]
		public virtual EntityCollection<SurveyTemplateEntity> SurveyTemplateCollectionViaAccount__
		{
			get
			{
				if(_surveyTemplateCollectionViaAccount__==null)
				{
					_surveyTemplateCollectionViaAccount__ = new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory)));
					_surveyTemplateCollectionViaAccount__.IsReadOnly=true;
				}
				return _surveyTemplateCollectionViaAccount__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'SurveyTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(SurveyTemplateEntity))]
		public virtual EntityCollection<SurveyTemplateEntity> SurveyTemplateCollectionViaAccount___
		{
			get
			{
				if(_surveyTemplateCollectionViaAccount___==null)
				{
					_surveyTemplateCollectionViaAccount___ = new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory)));
					_surveyTemplateCollectionViaAccount___.IsReadOnly=true;
				}
				return _surveyTemplateCollectionViaAccount___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'SurveyTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(SurveyTemplateEntity))]
		public virtual EntityCollection<SurveyTemplateEntity> SurveyTemplateCollectionViaAccount____
		{
			get
			{
				if(_surveyTemplateCollectionViaAccount____==null)
				{
					_surveyTemplateCollectionViaAccount____ = new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory)));
					_surveyTemplateCollectionViaAccount____.IsReadOnly=true;
				}
				return _surveyTemplateCollectionViaAccount____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'SurveyTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(SurveyTemplateEntity))]
		public virtual EntityCollection<SurveyTemplateEntity> SurveyTemplateCollectionViaAccount_
		{
			get
			{
				if(_surveyTemplateCollectionViaAccount_==null)
				{
					_surveyTemplateCollectionViaAccount_ = new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory)));
					_surveyTemplateCollectionViaAccount_.IsReadOnly=true;
				}
				return _surveyTemplateCollectionViaAccount_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'SurveyTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(SurveyTemplateEntity))]
		public virtual EntityCollection<SurveyTemplateEntity> SurveyTemplateCollectionViaAccount_____
		{
			get
			{
				if(_surveyTemplateCollectionViaAccount_____==null)
				{
					_surveyTemplateCollectionViaAccount_____ = new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory)));
					_surveyTemplateCollectionViaAccount_____.IsReadOnly=true;
				}
				return _surveyTemplateCollectionViaAccount_____;
			}
		}

		/// <summary> Gets / sets related entity of type 'LookupEntity' which has to be set using a fetch action earlier. If no related entity
		/// is set for this property, null is returned. This property is not visible in databound grids.</summary>
		[Browsable(false)]
		public virtual LookupEntity Lookup
		{
			get
			{
				return _lookup;
			}
			set
			{
				if(base.IsDeserializing)
				{
					SetupSyncLookup(value);
				}
				else
				{
					if(value==null)
					{
						if(_lookup != null)
						{
							_lookup.UnsetRelatedEntity(this, "File");
						}
					}
					else
					{
						if(_lookup!=value)
						{
							((IEntity2)value).SetRelatedEntity(this, "File");
						}
					}
				}
			}
		}

		/// <summary> Gets / sets related entity of type 'OrganizationRoleUserEntity' which has to be set using a fetch action earlier. If no related entity
		/// is set for this property, null is returned. This property is not visible in databound grids.</summary>
		[Browsable(false)]
		public virtual OrganizationRoleUserEntity OrganizationRoleUser
		{
			get
			{
				return _organizationRoleUser;
			}
			set
			{
				if(base.IsDeserializing)
				{
					SetupSyncOrganizationRoleUser(value);
				}
				else
				{
					if(value==null)
					{
						if(_organizationRoleUser != null)
						{
							_organizationRoleUser.UnsetRelatedEntity(this, "File");
						}
					}
					else
					{
						if(_organizationRoleUser!=value)
						{
							((IEntity2)value).SetRelatedEntity(this, "File");
						}
					}
				}
			}
		}

	
		
		/// <summary> Gets the type of the hierarchy this entity is in. </summary>
		protected override InheritanceHierarchyType LLBLGenProIsInHierarchyOfType
		{
			get { return InheritanceHierarchyType.None;}
		}
		
		/// <summary> Gets or sets a value indicating whether this entity is a subtype</summary>
		protected override bool LLBLGenProIsSubType
		{
			get { return false;}
		}
		
		/// <summary>Returns the Falcon.Data.EntityType enum value for this entity.</summary>
		[Browsable(false), XmlIgnore]
		public override int LLBLGenProEntityTypeValue 
		{ 
			get { return (int)Falcon.Data.EntityType.FileEntity; }
		}
		#endregion


		#region Custom Entity code
		
		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END
		#endregion

		#region Included code

		#endregion
	}
}
