///////////////////////////////////////////////////////////////
// This is generated code. 
//////////////////////////////////////////////////////////////
// Code is generated using LLBLGen Pro version: 2.6
// Code is generated on: 27 June 2019 17:22:45
// Code is generated using templates: SD.TemplateBindings.SharedTemplates.NET20
// Templates vendor: Solutions Design.
// Templates version: 
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
#if !CF
using System.Runtime.Serialization;
#endif
using System.Xml.Serialization;
using Falcon.Data;
using Falcon.Data.HelperClasses;
using Falcon.Data.FactoryClasses;
using Falcon.Data.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace Falcon.Data.EntityClasses
{
	
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END

	/// <summary>
	/// Entity class which represents the entity 'OrganizationRoleUser'.<br/><br/>
	/// 
	/// </summary>
	[Serializable]
	public partial class OrganizationRoleUserEntity : CommonEntityBase, ISerializable
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{
		#region Class Member Declarations
		private EntityCollection<AccountCallCenterOrganizationEntity> _accountCallCenterOrganization_;
		private EntityCollection<AccountCallCenterOrganizationEntity> _accountCallCenterOrganization;
		private EntityCollection<AccountHraChatQuestionnaireEntity> _accountHraChatQuestionnaire_;
		private EntityCollection<AccountHraChatQuestionnaireEntity> _accountHraChatQuestionnaire;
		private EntityCollection<AccountTestHcpcsCodeEntity> _accountTestHcpcsCode_;
		private EntityCollection<AccountTestHcpcsCodeEntity> _accountTestHcpcsCode;
		private EntityCollection<ActivityTypeEntity> _activityType;
		private EntityCollection<AdditionalFieldsEntity> _additionalFields_;
		private EntityCollection<AdditionalFieldsEntity> _additionalFields;
		private EntityCollection<AddressEntity> _address;
		private EntityCollection<AdvocateManagerTeamEntity> _advocateManagerTeam_;
		private EntityCollection<AdvocateManagerTeamEntity> _advocateManagerTeam;
		private EntityCollection<AfcampaignEntity> _afcampaign_;
		private EntityCollection<AfcampaignEntity> _afcampaign;
		private EntityCollection<AffiliateProfileEntity> _affiliateProfile;
		private EntityCollection<ApplicationAuthenticationEntity> _applicationAuthentication_;
		private EntityCollection<ApplicationAuthenticationEntity> _applicationAuthentication;
		private EntityCollection<BarrierEntity> _barrier_;
		private EntityCollection<BarrierEntity> _barrier;
		private EntityCollection<CallCenterAgentTeamEntity> _callCenterAgentTeam;
		private EntityCollection<CallCenterAgentTeamLogEntity> _callCenterAgentTeamLog__;
		private EntityCollection<CallCenterAgentTeamLogEntity> _callCenterAgentTeamLog_;
		private EntityCollection<CallCenterAgentTeamLogEntity> _callCenterAgentTeamLog;
		private EntityCollection<CallCenterTeamEntity> _callCenterTeam_;
		private EntityCollection<CallCenterTeamEntity> _callCenterTeam;
		private EntityCollection<CallQueueEntity> _callQueue_;
		private EntityCollection<CallQueueEntity> _callQueue;
		private EntityCollection<CallQueueAssignmentEntity> _callQueueAssignment;
		private EntityCollection<CallQueueCustomerEntity> _callQueueCustomer__;
		private EntityCollection<CallQueueCustomerEntity> _callQueueCustomer_;
		private EntityCollection<CallQueueCustomerEntity> _callQueueCustomer;
		private EntityCollection<CallQueueCustomerLockEntity> _callQueueCustomerLock;
		private EntityCollection<CallQueueCustomTagEntity> _callQueueCustomTag;
		private EntityCollection<CallRoundCallQueueEntity> _callRoundCallQueue;
		private EntityCollection<CallsEntity> _calls;
		private EntityCollection<CallUploadEntity> _callUpload;
		private EntityCollection<CampaignEntity> _campaign_;
		private EntityCollection<CampaignEntity> _campaign;
		private EntityCollection<CampaignActivityEntity> _campaignActivity_;
		private EntityCollection<CampaignActivityEntity> _campaignActivity;
		private EntityCollection<CampaignActivityAssignmentEntity> _campaignActivityAssignment;
		private EntityCollection<CampaignAssignmentEntity> _campaignAssignment;
		private EntityCollection<CdcontentGeneratorTrackingEntity> _cdcontentGeneratorTracking;
		private EntityCollection<ChaperoneAnswerEntity> _chaperoneAnswer_;
		private EntityCollection<ChaperoneAnswerEntity> _chaperoneAnswer;
		private EntityCollection<ChaperoneSignatureEntity> _chaperoneSignature;
		private EntityCollection<CheckEntity> _check_;
		private EntityCollection<CheckEntity> _check;
		private EntityCollection<CheckListAnswerEntity> _checkListAnswer_;
		private EntityCollection<CheckListAnswerEntity> _checkListAnswer;
		private EntityCollection<CheckListTemplateEntity> _checkListTemplate_;
		private EntityCollection<CheckListTemplateEntity> _checkListTemplate;
		private EntityCollection<ClinicalTestQualificationCriteriaEntity> _clinicalTestQualificationCriteria_;
		private EntityCollection<ClinicalTestQualificationCriteriaEntity> _clinicalTestQualificationCriteria;
		private EntityCollection<ContactCallEntity> _contactCall_;
		private EntityCollection<ContactCallEntity> _contactCall;
		private EntityCollection<ContactMeetingEntity> _contactMeeting_;
		private EntityCollection<ContactMeetingEntity> _contactMeeting;
		private EntityCollection<ContentEntity> _content_;
		private EntityCollection<ContentEntity> _content;
		private EntityCollection<CorporateTagEntity> _corporateTag_;
		private EntityCollection<CorporateTagEntity> _corporateTag;
		private EntityCollection<CorporateUploadEntity> _corporateUpload;
		private EntityCollection<CouponsEntity> _coupons_;
		private EntityCollection<CouponsEntity> _coupons;
		private EntityCollection<CurrentMedicationEntity> _currentMedication;
		private EntityCollection<CustomerActivityTypeUploadEntity> _customerActivityTypeUpload;
		private EntityCollection<CustomerCallAttemptsEntity> _customerCallAttempts;
		private EntityCollection<CustomerCallQueueCallAttemptEntity> _customerCallQueueCallAttempt;
		private EntityCollection<CustomerClinicalQuestionAnswerEntity> _customerClinicalQuestionAnswer_;
		private EntityCollection<CustomerClinicalQuestionAnswerEntity> _customerClinicalQuestionAnswer;
		private EntityCollection<CustomerEligibilityEntity> _customerEligibility_;
		private EntityCollection<CustomerEligibilityEntity> _customerEligibility;
		private EntityCollection<CustomerEventCriticalTestDataEntity> _customerEventCriticalTestData_;
		private EntityCollection<CustomerEventCriticalTestDataEntity> _customerEventCriticalTestData;
		private EntityCollection<CustomerEventPriorityInQueueDataEntity> _customerEventPriorityInQueueData_;
		private EntityCollection<CustomerEventPriorityInQueueDataEntity> _customerEventPriorityInQueueData;
		private EntityCollection<CustomerEventReadingEntity> _customerEventReading;
		private EntityCollection<CustomerEventTestPhysicianEvaluationEntity> _customerEventTestPhysicianEvaluation;
		private EntityCollection<CustomerEventTestStateEntity> _customerEventTestState__;
		private EntityCollection<CustomerEventTestStateEntity> _customerEventTestState_;
		private EntityCollection<CustomerEventTestStateEntity> _customerEventTestState;
		private EntityCollection<CustomerEventUnableScreenReasonEntity> _customerEventUnableScreenReason;
		private EntityCollection<CustomerHealthInfoEntity> _customerHealthInfo;
		private EntityCollection<CustomerHealthInfoArchiveEntity> _customerHealthInfoArchive;
		private EntityCollection<CustomerIcdCodeEntity> _customerIcdCode;
		private EntityCollection<CustomerLockForCallEntity> _customerLockForCall;
		private EntityCollection<CustomerMedicareQuestionAnswerEntity> _customerMedicareQuestionAnswer;
		private EntityCollection<CustomerPhoneNumberUpdateUploadEntity> _customerPhoneNumberUpdateUpload;
		private EntityCollection<CustomerPrimaryCarePhysicianEntity> _customerPrimaryCarePhysician_;
		private EntityCollection<CustomerPrimaryCarePhysicianEntity> _customerPrimaryCarePhysician__;
		private EntityCollection<CustomerPrimaryCarePhysicianEntity> _customerPrimaryCarePhysician;
		private EntityCollection<CustomerProfileHistoryEntity> _customerProfileHistory;
		private EntityCollection<CustomerRegistrationNotesEntity> _customerRegistrationNotes;
		private EntityCollection<CustomerResultScreeningCommunicationEntity> _customerResultScreeningCommunication__;
		private EntityCollection<CustomerResultScreeningCommunicationEntity> _customerResultScreeningCommunication_;
		private EntityCollection<CustomerResultScreeningCommunicationEntity> _customerResultScreeningCommunication;
		private EntityCollection<CustomerTagEntity> _customerTag_;
		private EntityCollection<CustomerTagEntity> _customerTag;
		private EntityCollection<CustomerTargetedEntity> _customerTargeted_;
		private EntityCollection<CustomerTargetedEntity> _customerTargeted;
		private EntityCollection<CustomerWarmTransferEntity> _customerWarmTransfer_;
		private EntityCollection<CustomerWarmTransferEntity> _customerWarmTransfer;
		private EntityCollection<CustomEventNotificationEntity> _customEventNotification;
		private EntityCollection<DirectMailEntity> _directMail;
		private EntityCollection<DirectMailTypeEntity> _directMailType_;
		private EntityCollection<DirectMailTypeEntity> _directMailType;
		private EntityCollection<DisqualifiedTestEntity> _disqualifiedTest_;
		private EntityCollection<DisqualifiedTestEntity> _disqualifiedTest;
		private EntityCollection<EligibilityEntity> _eligibility;
		private EntityCollection<EligibilityUploadEntity> _eligibilityUpload;
		private EntityCollection<EmailTemplateEntity> _emailTemplate;
		private EntityCollection<EventAccountTestHcpcsCodeEntity> _eventAccountTestHcpcsCode_;
		private EntityCollection<EventAccountTestHcpcsCodeEntity> _eventAccountTestHcpcsCode;
		private EntityCollection<EventActivityTemplateEntity> _eventActivityTemplate;
		private EntityCollection<EventActivityTemplateCallEntity> _eventActivityTemplateCall;
		private EntityCollection<EventActivityTemplateEmailEntity> _eventActivityTemplateEmail;
		private EntityCollection<EventActivityTemplateMeetingEntity> _eventActivityTemplateMeeting;
		private EntityCollection<EventActivityTemplateTaskEntity> _eventActivityTemplateTask;
		private EntityCollection<EventAppointmentEntity> _eventAppointment;
		private EntityCollection<EventAppointmentCancellationLogEntity> _eventAppointmentCancellationLog;
		private EntityCollection<EventAppointmentChangeLogEntity> _eventAppointmentChangeLog;
		private EntityCollection<EventCustomerBasicBioMetricEntity> _eventCustomerBasicBioMetric;
		private EntityCollection<EventCustomerGiftCardEntity> _eventCustomerGiftCard;
		private EntityCollection<EventCustomerPrimaryCarePhysicianEntity> _eventCustomerPrimaryCarePhysician;
		private EntityCollection<EventCustomerQuestionAnswerEntity> _eventCustomerQuestionAnswer_;
		private EntityCollection<EventCustomerQuestionAnswerEntity> _eventCustomerQuestionAnswer;
		private EntityCollection<EventCustomerResultEntity> _eventCustomerResult___;
		private EntityCollection<EventCustomerResultEntity> _eventCustomerResult__;
		private EntityCollection<EventCustomerResultEntity> _eventCustomerResult_;
		private EntityCollection<EventCustomerResultEntity> _eventCustomerResult____;
		private EntityCollection<EventCustomerResultEntity> _eventCustomerResult______;
		private EntityCollection<EventCustomerResultEntity> _eventCustomerResult_______;
		private EntityCollection<EventCustomerResultEntity> _eventCustomerResult;
		private EntityCollection<EventCustomerResultEntity> _eventCustomerResult_____;
		private EntityCollection<EventCustomerResultEntity> _eventCustomerResult________;
		private EntityCollection<EventCustomerResultBloodLabEntity> _eventCustomerResultBloodLab;
		private EntityCollection<EventCustomerResultHistoryEntity> _eventCustomerResultHistory;
		private EntityCollection<EventCustomerResultHistoryEntity> _eventCustomerResultHistory_;
		private EntityCollection<EventCustomerResultHistoryEntity> _eventCustomerResultHistory__;
		private EntityCollection<EventCustomerRetestEntity> _eventCustomerRetest;
		private EntityCollection<EventCustomersEntity> _eventCustomers_;
		private EntityCollection<EventCustomersEntity> _eventCustomers;
		private EntityCollection<EventCustomerTestNotPerformedNotificationEntity> _eventCustomerTestNotPerformedNotification;
		private EntityCollection<EventNoteEntity> _eventNote_;
		private EntityCollection<EventNoteEntity> _eventNote;
		private EntityCollection<EventPhysicianTestEntity> _eventPhysicianTest__;
		private EntityCollection<EventPhysicianTestEntity> _eventPhysicianTest_;
		private EntityCollection<EventPhysicianTestEntity> _eventPhysicianTest;
		private EntityCollection<EventsEntity> _events___;
		private EntityCollection<EventsEntity> _events____;
		private EntityCollection<EventsEntity> _events__;
		private EntityCollection<EventsEntity> _events;
		private EntityCollection<EventsEntity> _events_;
		private EntityCollection<EventStaffAssignmentEntity> _eventStaffAssignment__;
		private EntityCollection<EventStaffAssignmentEntity> _eventStaffAssignment_;
		private EntityCollection<EventStaffAssignmentEntity> _eventStaffAssignment;
		private EntityCollection<ExitInterviewAnswerEntity> _exitInterviewAnswer_;
		private EntityCollection<ExitInterviewAnswerEntity> _exitInterviewAnswer;
		private EntityCollection<ExitInterviewSignatureEntity> _exitInterviewSignature;
		private EntityCollection<ExportableReportsQueueEntity> _exportableReportsQueue;
		private EntityCollection<FileEntity> _file;
		private EntityCollection<FillEventCallQueueEntity> _fillEventCallQueue;
		private EntityCollection<FluConsentAnswerEntity> _fluConsentAnswer_;
		private EntityCollection<FluConsentAnswerEntity> _fluConsentAnswer;
		private EntityCollection<FluConsentSignatureEntity> _fluConsentSignature;
		private EntityCollection<FluConsentTemplateEntity> _fluConsentTemplate_;
		private EntityCollection<FluConsentTemplateEntity> _fluConsentTemplate;
		private EntityCollection<GcNotGivenReasonEntity> _gcNotGivenReason_;
		private EntityCollection<GcNotGivenReasonEntity> _gcNotGivenReason;
		private EntityCollection<GuardianDetailsEntity> _guardianDetails_;
		private EntityCollection<GuardianDetailsEntity> _guardianDetails;
		private EntityCollection<HafTemplateEntity> _hafTemplate_;
		private EntityCollection<HafTemplateEntity> _hafTemplate;
		private EntityCollection<HcpcsCodeEntity> _hcpcsCode_;
		private EntityCollection<HcpcsCodeEntity> _hcpcsCode;
		private EntityCollection<HealthPlanCallQueueCriteriaEntity> _healthPlanCallQueueCriteria__;
		private EntityCollection<HealthPlanCallQueueCriteriaEntity> _healthPlanCallQueueCriteria_;
		private EntityCollection<HealthPlanCriteriaAssignmentEntity> _healthPlanCriteriaAssignment__;
		private EntityCollection<HealthPlanCriteriaAssignmentEntity> _healthPlanCriteriaAssignment_;
		private EntityCollection<HealthPlanCriteriaAssignmentEntity> _healthPlanCriteriaAssignment;
		private EntityCollection<HealthPlanCriteriaAssignmentUploadEntity> _healthPlanCriteriaAssignmentUpload;
		private EntityCollection<HealthPlanCriteriaTeamAssignmentEntity> _healthPlanCriteriaTeamAssignment_;
		private EntityCollection<HealthPlanCriteriaTeamAssignmentEntity> _healthPlanCriteriaTeamAssignment;
		private EntityCollection<HealthPlanRevenueEntity> _healthPlanRevenue_;
		private EntityCollection<HealthPlanRevenueEntity> _healthPlanRevenue;
		private EntityCollection<HospitalPartnerCustomerEntity> _hospitalPartnerCustomer__;
		private EntityCollection<HospitalPartnerCustomerEntity> _hospitalPartnerCustomer_;
		private EntityCollection<HospitalPartnerCustomerEntity> _hospitalPartnerCustomer;
		private EntityCollection<HostFacilityRankingEntity> _hostFacilityRanking;
		private EntityCollection<HostPaymentEntity> _hostPayment;
		private EntityCollection<HostPaymentTransactionEntity> _hostPaymentTransaction;
		private EntityCollection<IcdCodesEntity> _icdCodes_;
		private EntityCollection<IcdCodesEntity> _icdCodes;
		private EntityCollection<IncidentalFindingsEntity> _incidentalFindings;
		private EntityCollection<KynLabValuesEntity> _kynLabValues_;
		private EntityCollection<KynLabValuesEntity> _kynLabValues;
		private EntityCollection<LabEntity> _lab;
		private EntityCollection<LanguageEntity> _language;
		private EntityCollection<LanguageBarrierCallQueueEntity> _languageBarrierCallQueue;
		private EntityCollection<MailRoundCallQueueEntity> _mailRoundCallQueue;
		private EntityCollection<MarketingPrintOrderEntity> _marketingPrintOrder;
		private EntityCollection<MedicationEntity> _medication_;
		private EntityCollection<MedicationEntity> _medication;
		private EntityCollection<MedicationUploadEntity> _medicationUpload;
		private EntityCollection<MergeCustomerUploadEntity> _mergeCustomerUpload;
		private EntityCollection<NoShowCallQueueEntity> _noShowCallQueue;
		private EntityCollection<NotesDetailsEntity> _notesDetails_;
		private EntityCollection<NotesDetailsEntity> _notesDetails;
		private EntityCollection<NotificationEntity> _notification;
		private EntityCollection<NotificationTypeEntity> _notificationType;
		private EntityCollection<OrganizationRoleUserTerritoryEntity> _organizationRoleUserTerritory;
		private EntityCollection<OrgRoleUserActivityEntity> _orgRoleUserActivity;
		private EntityCollection<ParticipationConsentSignatureEntity> _participationConsentSignature;
		private EntityCollection<PasswordChangelogEntity> _passwordChangelog;
		private EntityCollection<PayPeriodEntity> _payPeriod_;
		private EntityCollection<PayPeriodEntity> _payPeriod;
		private EntityCollection<PcpAppointmentEntity> _pcpAppointment_;
		private EntityCollection<PcpAppointmentEntity> _pcpAppointment;
		private EntityCollection<PcpDispositionEntity> _pcpDisposition_;
		private EntityCollection<PcpDispositionEntity> _pcpDisposition;
		private EntityCollection<PhysicianRecordRequestSignatureEntity> _physicianRecordRequestSignature;
		private EntityCollection<PinChangelogEntity> _pinChangelog;
		private EntityCollection<PodDefaultTeamEntity> _podDefaultTeam;
		private EntityCollection<PreApprovedPackageEntity> _preApprovedPackage;
		private EntityCollection<PreApprovedTestEntity> _preApprovedTest;
		private EntityCollection<PreAssessmentCallQueueCustomerLockEntity> _preAssessmentCallQueueCustomerLock;
		private EntityCollection<PreAssessmentCustomerCallQueueCallAttemptEntity> _preAssessmentCustomerCallQueueCallAttempt;
		private EntityCollection<PreQualificationQuestionEntity> _preQualificationQuestion;
		private EntityCollection<PreQualificationTestTemplateEntity> _preQualificationTestTemplate_;
		private EntityCollection<PreQualificationTestTemplateEntity> _preQualificationTestTemplate;
		private EntityCollection<PrintOrderItemTrackingEntity> _printOrderItemTracking_;
		private EntityCollection<PrintOrderItemTrackingEntity> _printOrderItemTracking;
		private EntityCollection<PriorityInQueueEntity> _priorityInQueue_;
		private EntityCollection<PriorityInQueueEntity> _priorityInQueue;
		private EntityCollection<ProspectCustomerEntity> _prospectCustomer;
		private EntityCollection<ProspectsEntity> _prospects;
		private EntityCollection<RapsUploadEntity> _rapsUpload;
		private EntityCollection<ReferralEntity> _referral;
		private EntityCollection<RefundRequestEntity> _refundRequest_;
		private EntityCollection<RefundRequestEntity> _refundRequest;
		private EntityCollection<RequiredTestEntity> _requiredTest;
		private EntityCollection<SalesRepPodAssigmentsEntity> _salesRepPodAssigments;
		private EntityCollection<ScheduleTemplateEntity> _scheduleTemplate_;
		private EntityCollection<ScheduleTemplateEntity> _scheduleTemplate;
		private EntityCollection<SeminarsEntity> _seminars;
		private EntityCollection<ShippingDetailEntity> _shippingDetail_;
		private EntityCollection<ShippingDetailEntity> _shippingDetail;
		private EntityCollection<SourceCodeChangeLogEntity> _sourceCodeChangeLog;
		private EntityCollection<StaffEventScheduleUploadEntity> _staffEventScheduleUpload;
		private EntityCollection<SurveyAnswerEntity> _surveyAnswer_;
		private EntityCollection<SurveyAnswerEntity> _surveyAnswer;
		private EntityCollection<SurveyTemplateEntity> _surveyTemplate_;
		private EntityCollection<SurveyTemplateEntity> _surveyTemplate;
		private EntityCollection<SuspectConditionUploadEntity> _suspectConditionUpload;
		private EntityCollection<SystemGeneratedCallQueueCriteriaEntity> _systemGenertedCallQueueCriteria__;
		private EntityCollection<SystemGeneratedCallQueueCriteriaEntity> _systemGenertedCallQueueCriteria_;
		private EntityCollection<SystemGeneratedCallQueueCriteriaEntity> _systemGenertedCallQueueCriteria;
		private EntityCollection<TaskDetailsEntity> _taskDetails__;
		private EntityCollection<TaskDetailsEntity> _taskDetails_;
		private EntityCollection<TaskDetailsEntity> _taskDetails;
		private EntityCollection<TerritoryEntity> _territory;
		private EntityCollection<TestHcpcsCodeEntity> _testHcpcsCode_;
		private EntityCollection<TestHcpcsCodeEntity> _testHcpcsCode;
		private EntityCollection<TestNotPerformedEntity> _testNotPerformed_;
		private EntityCollection<TestNotPerformedEntity> _testNotPerformed;
		private EntityCollection<TestNotPerformedReasonEntity> _testNotPerformedReason;
		private EntityCollection<TestPerformedExternallyEntity> _testPerformedExternally_;
		private EntityCollection<TestPerformedExternallyEntity> _testPerformedExternally;
		private EntityCollection<UncontactedCustomerCallQueueEntity> _uncontactedCustomerCallQueue;
		private EntityCollection<UploadZipInfoEntity> _uploadZipInfo;
		private EntityCollection<UserEntity> _user__;
		private EntityCollection<UserEntity> _user_;
		private EntityCollection<AccountEntity> _accountCollectionViaFillEventCallQueue;
		private EntityCollection<AccountEntity> _accountCollectionViaMailRoundCallQueue;
		private EntityCollection<AccountEntity> _accountCollectionViaEligibilityUpload;
		private EntityCollection<AccountEntity> _accountCollectionViaCorporateUpload;
		private EntityCollection<AccountEntity> _accountCollectionViaHealthPlanCallQueueCriteria;
		private EntityCollection<AccountEntity> _accountCollectionViaCallQueueCustomer_;
		private EntityCollection<AccountEntity> _accountCollectionViaCallQueueCustomer;
		private EntityCollection<AccountEntity> _accountCollectionViaCallQueueCustomer__;
		private EntityCollection<AccountEntity> _accountCollectionViaHealthPlanRevenue;
		private EntityCollection<AccountEntity> _accountCollectionViaHealthPlanRevenue_;
		private EntityCollection<AccountEntity> _accountCollectionViaCorporateTag_;
		private EntityCollection<AccountEntity> _accountCollectionViaLanguageBarrierCallQueue;
		private EntityCollection<AccountEntity> _accountCollectionViaEventNote;
		private EntityCollection<AccountEntity> _accountCollectionViaCampaign;
		private EntityCollection<AccountEntity> _accountCollectionViaEventNote_;
		private EntityCollection<AccountEntity> _accountCollectionViaCampaign_;
		private EntityCollection<AccountEntity> _accountCollectionViaHealthPlanCallQueueCriteria_;
		private EntityCollection<AccountEntity> _accountCollectionViaCorporateTag;
		private EntityCollection<AccountEntity> _accountCollectionViaCallQueueCustomTag;
		private EntityCollection<AccountEntity> _accountCollectionViaCalls;
		private EntityCollection<AccountEntity> _accountCollectionViaCallRoundCallQueue;
		private EntityCollection<AccountEntity> _accountCollectionViaAccountHraChatQuestionnaire_;
		private EntityCollection<AccountEntity> _accountCollectionViaAccountHraChatQuestionnaire;
		private EntityCollection<AccountEntity> _accountCollectionViaUncontactedCustomerCallQueue;
		private EntityCollection<AccountEntity> _accountCollectionViaCustomEventNotification;
		private EntityCollection<AccountEntity> _accountCollectionViaNoShowCallQueue;
		private EntityCollection<AccountEntity> _accountCollectionViaAccountCallCenterOrganization_;
		private EntityCollection<AccountEntity> _accountCollectionViaAccountCallCenterOrganization;
		private EntityCollection<ActivityEntity> _activityCollectionViaOrgRoleUserActivity;
		private EntityCollection<ActivityTypeEntity> _activityTypeCollectionViaCallQueueCustomer;
		private EntityCollection<ActivityTypeEntity> _activityTypeCollectionViaCallQueueCustomer__;
		private EntityCollection<ActivityTypeEntity> _activityTypeCollectionViaCallQueueCustomer_;
		private EntityCollection<AddressEntity> _addressCollectionViaCustomerPrimaryCarePhysician_;
		private EntityCollection<AddressEntity> _addressCollectionViaProspects;
		private EntityCollection<AddressEntity> _addressCollectionViaCustomerPrimaryCarePhysician___;
		private EntityCollection<AddressEntity> _addressCollectionViaCustomerPrimaryCarePhysician____;
		private EntityCollection<AddressEntity> _addressCollectionViaUser;
		private EntityCollection<AddressEntity> _addressCollectionViaUser_;
		private EntityCollection<AddressEntity> _addressCollectionViaShippingDetail;
		private EntityCollection<AddressEntity> _addressCollectionViaHostPayment;
		private EntityCollection<AddressEntity> _addressCollectionViaShippingDetail_;
		private EntityCollection<AddressEntity> _addressCollectionViaCustomerPrimaryCarePhysician;
		private EntityCollection<AddressEntity> _addressCollectionViaCustomerPrimaryCarePhysician__;
		private EntityCollection<AddressEntity> _addressCollectionViaCustomerPrimaryCarePhysician_____;
		private EntityCollection<AfadvertiserEntity> _afadvertiserCollectionViaAfcampaign;
		private EntityCollection<AfadvertiserEntity> _afadvertiserCollectionViaAfcampaign_;
		private EntityCollection<AfaffiliateCampaignEntity> _afaffiliateCampaignCollectionViaEventCustomers;
		private EntityCollection<AfaffiliateCampaignEntity> _afaffiliateCampaignCollectionViaEventCustomers_;
		private EntityCollection<AfaffiliateCampaignMarketingMaterialEntity> _afaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer;
		private EntityCollection<CallCenterTeamEntity> _callCenterTeamCollectionViaCallCenterAgentTeam;
		private EntityCollection<CallCenterTeamEntity> _callCenterTeamCollectionViaCallCenterAgentTeamLog;
		private EntityCollection<CallCenterTeamEntity> _callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_;
		private EntityCollection<CallCenterTeamEntity> _callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment;
		private EntityCollection<CallCenterTeamEntity> _callCenterTeamCollectionViaCallCenterAgentTeamLog_;
		private EntityCollection<CallCenterTeamEntity> _callCenterTeamCollectionViaCallCenterAgentTeamLog__;
		private EntityCollection<CallQueueEntity> _callQueueCollectionViaCallQueueCustomer_;
		private EntityCollection<CallQueueEntity> _callQueueCollectionViaHealthPlanCallQueueCriteria__;
		private EntityCollection<CallQueueEntity> _callQueueCollectionViaCallQueueCustomer;
		private EntityCollection<CallQueueEntity> _callQueueCollectionViaCalls;
		private EntityCollection<CallQueueEntity> _callQueueCollectionViaCallQueueAssignment;
		private EntityCollection<CallQueueEntity> _callQueueCollectionViaSystemGenertedCallQueueCriteria__;
		private EntityCollection<CallQueueEntity> _callQueueCollectionViaSystemGenertedCallQueueCriteria_;
		private EntityCollection<CallQueueEntity> _callQueueCollectionViaCallQueueCustomer__;
		private EntityCollection<CallQueueEntity> _callQueueCollectionViaHealthPlanCallQueueCriteria_;
		private EntityCollection<CallQueueEntity> _callQueueCollectionViaSystemGenertedCallQueueCriteria;
		private EntityCollection<CallQueueCriteriaEntity> _callQueueCriteriaCollectionViaCallQueueCustomer;
		private EntityCollection<CallQueueCriteriaEntity> _callQueueCriteriaCollectionViaCallQueueCustomer__;
		private EntityCollection<CallQueueCriteriaEntity> _callQueueCriteriaCollectionViaCallQueueCustomer_;
		private EntityCollection<CallQueueCustomerEntity> _callQueueCustomerCollectionViaCustomerCallQueueCallAttempt;
		private EntityCollection<CallsEntity> _callsCollectionViaCustomerCallQueueCallAttempt;
		private EntityCollection<CallsEntity> _callsCollectionViaPreAssessmentCustomerCallQueueCallAttempt;
		private EntityCollection<CallUploadEntity> _callUploadCollectionViaDirectMail;
		private EntityCollection<CampaignEntity> _campaignCollectionViaCallQueueCustomer__;
		private EntityCollection<CampaignEntity> _campaignCollectionViaCampaignAssignment;
		private EntityCollection<CampaignEntity> _campaignCollectionViaCallQueueCustomer;
		private EntityCollection<CampaignEntity> _campaignCollectionViaCampaignActivity_;
		private EntityCollection<CampaignEntity> _campaignCollectionViaHealthPlanCallQueueCriteria_;
		private EntityCollection<CampaignEntity> _campaignCollectionViaCampaignActivity;
		private EntityCollection<CampaignEntity> _campaignCollectionViaCalls;
		private EntityCollection<CampaignEntity> _campaignCollectionViaEventCustomers_;
		private EntityCollection<CampaignEntity> _campaignCollectionViaHealthPlanCallQueueCriteria;
		private EntityCollection<CampaignEntity> _campaignCollectionViaDirectMail;
		private EntityCollection<CampaignEntity> _campaignCollectionViaCallQueueCustomer_;
		private EntityCollection<CampaignEntity> _campaignCollectionViaEventCustomers;
		private EntityCollection<CampaignActivityEntity> _campaignActivityCollectionViaCampaignActivityAssignment;
		private EntityCollection<ChaperoneQuestionEntity> _chaperoneQuestionCollectionViaChaperoneAnswer;
		private EntityCollection<ChaperoneQuestionEntity> _chaperoneQuestionCollectionViaChaperoneAnswer_;
		private EntityCollection<CheckListQuestionEntity> _checkListQuestionCollectionViaCheckListAnswer_;
		private EntityCollection<CheckListQuestionEntity> _checkListQuestionCollectionViaCheckListAnswer;
		private EntityCollection<CheckListQuestionEntity> _checkListQuestionCollectionViaExitInterviewSignature;
		private EntityCollection<CityEntity> _cityCollectionViaAddress;
		private EntityCollection<CommunicationModeEntity> _communicationModeCollectionViaEvents____;
		private EntityCollection<CommunicationModeEntity> _communicationModeCollectionViaEvents;
		private EntityCollection<CommunicationModeEntity> _communicationModeCollectionViaEvents___;
		private EntityCollection<CommunicationModeEntity> _communicationModeCollectionViaEvents__;
		private EntityCollection<CommunicationModeEntity> _communicationModeCollectionViaEvents_;
		private EntityCollection<ContactCallStatusEntity> _contactCallStatusCollectionViaContactCall;
		private EntityCollection<ContactCallStatusEntity> _contactCallStatusCollectionViaContactCall_;
		private EntityCollection<ContactCallStatusEntity> _contactCallStatusCollectionViaContactMeeting_;
		private EntityCollection<ContactCallStatusEntity> _contactCallStatusCollectionViaContactMeeting;
		private EntityCollection<CountryEntity> _countryCollectionViaAddress;
		private EntityCollection<CouponTypeEntity> _couponTypeCollectionViaCoupons_;
		private EntityCollection<CouponTypeEntity> _couponTypeCollectionViaCoupons;
		private EntityCollection<CustomerEventScreeningTestsEntity> _customerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation;
		private EntityCollection<CustomerEventScreeningTestsEntity> _customerEventScreeningTestsCollectionViaTestPerformedExternally_;
		private EntityCollection<CustomerEventScreeningTestsEntity> _customerEventScreeningTestsCollectionViaCustomerEventTestState;
		private EntityCollection<CustomerEventScreeningTestsEntity> _customerEventScreeningTestsCollectionViaCustomerEventTestState_;
		private EntityCollection<CustomerEventScreeningTestsEntity> _customerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason;
		private EntityCollection<CustomerEventScreeningTestsEntity> _customerEventScreeningTestsCollectionViaCustomerEventTestState__;
		private EntityCollection<CustomerEventScreeningTestsEntity> _customerEventScreeningTestsCollectionViaTestPerformedExternally;
		private EntityCollection<CustomerEventScreeningTestsEntity> _customerEventScreeningTestsCollectionViaCustomerEventReading;
		private EntityCollection<CustomerEventScreeningTestsEntity> _customerEventScreeningTestsCollectionViaTestNotPerformed;
		private EntityCollection<CustomerEventScreeningTestsEntity> _customerEventScreeningTestsCollectionViaTestNotPerformed_;
		private EntityCollection<CustomerHealthQuestionsEntity> _customerHealthQuestionsCollectionViaCustomerHealthInfo;
		private EntityCollection<CustomerHealthQuestionsEntity> _customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_;
		private EntityCollection<CustomerHealthQuestionsEntity> _customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_;
		private EntityCollection<CustomerHealthQuestionsEntity> _customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer;
		private EntityCollection<CustomerHealthQuestionsEntity> _customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__;
		private EntityCollection<CustomerHealthQuestionsEntity> _customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___;
		private EntityCollection<CustomerHealthQuestionsEntity> _customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria;
		private EntityCollection<CustomerHealthQuestionsEntity> _customerHealthQuestionsCollectionViaCustomerHealthInfoArchive;
		private EntityCollection<CustomerPrimaryCarePhysicianEntity> _customerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaFillEventCallQueue;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaDisqualifiedTest_;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaCustomerEligibility_;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaEventCustomerResult_____;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaCustomerEligibility;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaLanguageBarrierCallQueue;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaEventCustomerQuestionAnswer;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaHospitalPartnerCustomer_;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaHospitalPartnerCustomer__;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaHospitalPartnerCustomer;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaDisqualifiedTest;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaCustomerPrimaryCarePhysician_;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaCustomerPrimaryCarePhysician__;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaNoShowCallQueue;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaCustomerPrimaryCarePhysician;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaCallQueueCustomer;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaCustomerHealthInfo;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaCallQueueCustomer__;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaCallQueueCustomer_;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaEventCustomerResult______;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaCustomerIcdCode;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaMailRoundCallQueue;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaCustomerHealthInfoArchive;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaEventCustomerQuestionAnswer_;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaRequiredTest;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaCustomerWarmTransfer_;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaProspectCustomer;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaEventCustomerResult_;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaEventCustomerResult__;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaUncontactedCustomerCallQueue;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaCustomerWarmTransfer;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaMedication_;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaCallRoundCallQueue;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaCustomerTag_;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaReferral;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaCustomerTargeted_;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaCustomerTargeted;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaCustomerTag;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaMedication;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaEventCustomerResult________;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaEventCustomerResult;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaEventCustomerResult_______;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaDirectMail;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaEventCustomerResult____;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaCurrentMedication;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaGuardianDetails;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaEventCustomers;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaEventCustomers_;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaCustomerCallQueueCallAttempt;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaEventCustomerResult___;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaCustomerProfileHistory;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaCustomerClinicalQuestionAnswer;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaCustomerClinicalQuestionAnswer_;
		private EntityCollection<CustomerProfileEntity> _customerProfileCollectionViaGuardianDetails_;
		private EntityCollection<CustomerProfileHistoryEntity> _customerProfileHistoryCollectionViaEventCustomers_;
		private EntityCollection<CustomerProfileHistoryEntity> _customerProfileHistoryCollectionViaEventCustomers;
		private EntityCollection<CustomerRegistrationNotesEntity> _customerRegistrationNotesCollectionViaEventAppointmentCancellationLog;
		private EntityCollection<CustomerRegistrationNotesEntity> _customerRegistrationNotesCollectionViaEventCustomers_;
		private EntityCollection<CustomerRegistrationNotesEntity> _customerRegistrationNotesCollectionViaEventCustomers;
		private EntityCollection<DirectMailTypeEntity> _directMailTypeCollectionViaDirectMail;
		private EntityCollection<DirectMailTypeEntity> _directMailTypeCollectionViaCampaignActivity;
		private EntityCollection<DirectMailTypeEntity> _directMailTypeCollectionViaCampaignActivity_;
		private EntityCollection<EventActivityTemplateEntity> _eventActivityTemplateCollectionViaEventActivityTemplateMeeting;
		private EntityCollection<EventActivityTemplateEntity> _eventActivityTemplateCollectionViaEventActivityTemplateTask;
		private EntityCollection<EventActivityTemplateEntity> _eventActivityTemplateCollectionViaEventActivityTemplateCall;
		private EntityCollection<EventActivityTemplateEntity> _eventActivityTemplateCollectionViaEventActivityTemplateEmail;
		private EntityCollection<EventAppointmentEntity> _eventAppointmentCollectionViaEventCustomers;
		private EntityCollection<EventAppointmentEntity> _eventAppointmentCollectionViaEventCustomers_;
		private EntityCollection<EventCustomerResultEntity> _eventCustomerResultCollectionViaCustomerResultScreeningCommunication;
		private EntityCollection<EventCustomerResultEntity> _eventCustomerResultCollectionViaPriorityInQueue_;
		private EntityCollection<EventCustomerResultEntity> _eventCustomerResultCollectionViaKynLabValues;
		private EntityCollection<EventCustomerResultEntity> _eventCustomerResultCollectionViaCustomerResultScreeningCommunication__;
		private EntityCollection<EventCustomerResultEntity> _eventCustomerResultCollectionViaCustomerResultScreeningCommunication_;
		private EntityCollection<EventCustomerResultEntity> _eventCustomerResultCollectionViaCdcontentGeneratorTracking;
		private EntityCollection<EventCustomerResultEntity> _eventCustomerResultCollectionViaKynLabValues_;
		private EntityCollection<EventCustomerResultEntity> _eventCustomerResultCollectionViaPriorityInQueue;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaDisqualifiedTest_;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaEventAppointmentChangeLog;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaDisqualifiedTest;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaEventCustomerPrimaryCarePhysician;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaEventCustomerQuestionAnswer_;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaEventAppointmentCancellationLog;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaEventCustomerQuestionAnswer;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaEventCustomerGiftCard;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaSurveyAnswer;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaEventCustomerTestNotPerformedNotification;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaPhysicianRecordRequestSignature;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaEventCustomerRetest;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaPcpDisposition;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaPcpDisposition_;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaChaperoneSignature;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaChaperoneAnswer_;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaChaperoneAnswer;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaCallQueueCustomer__;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaCheckListAnswer_;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaCallQueueCustomer;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaCallQueueCustomer_;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaCustomerHealthInfo;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaExitInterviewSignature;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaFluConsentAnswer;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaExitInterviewAnswer_;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaCheckListAnswer;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaExitInterviewAnswer;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaFluConsentAnswer_;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaSurveyAnswer_;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaCustomerHealthInfoArchive;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaCustomerMedicareQuestionAnswer;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaFluConsentSignature;
		private EntityCollection<EventCustomersEntity> _eventCustomersCollectionViaParticipationConsentSignature;
		private EntityCollection<EventsEntity> _eventsCollectionViaEventCustomerQuestionAnswer;
		private EntityCollection<EventsEntity> _eventsCollectionViaEventPhysicianTest__;
		private EntityCollection<EventsEntity> _eventsCollectionViaEventStaffAssignment__;
		private EntityCollection<EventsEntity> _eventsCollectionViaEventStaffAssignment_;
		private EntityCollection<EventsEntity> _eventsCollectionViaEventCustomers;
		private EntityCollection<EventsEntity> _eventsCollectionViaEventCustomerResult____;
		private EntityCollection<EventsEntity> _eventsCollectionViaEventCustomerResult___;
		private EntityCollection<EventsEntity> _eventsCollectionViaHospitalPartnerCustomer_;
		private EntityCollection<EventsEntity> _eventsCollectionViaEventCustomerResult_;
		private EntityCollection<EventsEntity> _eventsCollectionViaEventCustomerResult________;
		private EntityCollection<EventsEntity> _eventsCollectionViaEventCustomerResult______;
		private EntityCollection<EventsEntity> _eventsCollectionViaEventCustomerResult__;
		private EntityCollection<EventsEntity> _eventsCollectionViaEventCustomerResult_______;
		private EntityCollection<EventsEntity> _eventsCollectionViaEventPhysicianTest_;
		private EntityCollection<EventsEntity> _eventsCollectionViaEventPhysicianTest;
		private EntityCollection<EventsEntity> _eventsCollectionViaEventCustomerQuestionAnswer_;
		private EntityCollection<EventsEntity> _eventsCollectionViaHospitalPartnerCustomer__;
		private EntityCollection<EventsEntity> _eventsCollectionViaEventCustomerResult;
		private EntityCollection<EventsEntity> _eventsCollectionViaHospitalPartnerCustomer;
		private EntityCollection<EventsEntity> _eventsCollectionViaEventCustomerResult_____;
		private EntityCollection<EventsEntity> _eventsCollectionViaEventCustomers_;
		private EntityCollection<EventsEntity> _eventsCollectionViaEventAccountTestHcpcsCode;
		private EntityCollection<EventsEntity> _eventsCollectionViaCustomerRegistrationNotes;
		private EntityCollection<EventsEntity> _eventsCollectionViaCallQueueCustomer;
		private EntityCollection<EventsEntity> _eventsCollectionViaEventAccountTestHcpcsCode_;
		private EntityCollection<EventsEntity> _eventsCollectionViaSeminars;
		private EntityCollection<EventsEntity> _eventsCollectionViaDisqualifiedTest_;
		private EntityCollection<EventsEntity> _eventsCollectionViaDisqualifiedTest;
		private EntityCollection<EventsEntity> _eventsCollectionViaCustomEventNotification;
		private EntityCollection<EventsEntity> _eventsCollectionViaCallQueueCustomer__;
		private EntityCollection<EventsEntity> _eventsCollectionViaCustomerClinicalQuestionAnswer;
		private EntityCollection<EventsEntity> _eventsCollectionViaCustomerClinicalQuestionAnswer_;
		private EntityCollection<EventsEntity> _eventsCollectionViaEventAppointmentChangeLog;
		private EntityCollection<EventsEntity> _eventsCollectionViaEventAppointmentChangeLog_;
		private EntityCollection<EventsEntity> _eventsCollectionViaCallQueueCustomer_;
		private EntityCollection<EventsEntity> _eventsCollectionViaHostPayment;
		private EntityCollection<EventsEntity> _eventsCollectionViaEventStaffAssignment;
		private EntityCollection<EventsEntity> _eventsCollectionViaEventAppointmentCancellationLog;
		private EntityCollection<EventTypeEntity> _eventTypeCollectionViaEvents;
		private EntityCollection<EventTypeEntity> _eventTypeCollectionViaEvents____;
		private EntityCollection<EventTypeEntity> _eventTypeCollectionViaEvents___;
		private EntityCollection<EventTypeEntity> _eventTypeCollectionViaEvents_;
		private EntityCollection<EventTypeEntity> _eventTypeCollectionViaEvents__;
		private EntityCollection<ExitInterviewQuestionEntity> _exitInterviewQuestionCollectionViaExitInterviewAnswer_;
		private EntityCollection<ExitInterviewQuestionEntity> _exitInterviewQuestionCollectionViaExitInterviewAnswer;
		private EntityCollection<ExportableReportsEntity> _exportableReportsCollectionViaExportableReportsQueue;
		private EntityCollection<FileEntity> _fileCollectionViaCustomerActivityTypeUpload_;
		private EntityCollection<FileEntity> _fileCollectionViaCorporateUpload;
		private EntityCollection<FileEntity> _fileCollectionViaStaffEventScheduleUpload;
		private EntityCollection<FileEntity> _fileCollectionViaCorporateUpload_;
		private EntityCollection<FileEntity> _fileCollectionViaPhysicianRecordRequestSignature;
		private EntityCollection<FileEntity> _fileCollectionViaCustomerActivityTypeUpload;
		private EntityCollection<FileEntity> _fileCollectionViaRapsUpload_;
		private EntityCollection<FileEntity> _fileCollectionViaCallUpload_;
		private EntityCollection<FileEntity> _fileCollectionViaChaperoneSignature_;
		private EntityCollection<FileEntity> _fileCollectionViaRapsUpload;
		private EntityCollection<FileEntity> _fileCollectionViaChaperoneSignature;
		private EntityCollection<FileEntity> _fileCollectionViaCorporateUpload__;
		private EntityCollection<FileEntity> _fileCollectionViaCallUpload;
		private EntityCollection<FileEntity> _fileCollectionViaHealthPlanCriteriaAssignmentUpload;
		private EntityCollection<FileEntity> _fileCollectionViaParticipationConsentSignature_;
		private EntityCollection<FileEntity> _fileCollectionViaMergeCustomerUpload;
		private EntityCollection<FileEntity> _fileCollectionViaMedicationUpload_;
		private EntityCollection<FileEntity> _fileCollectionViaMedicationUpload;
		private EntityCollection<FileEntity> _fileCollectionViaFluConsentSignature_;
		private EntityCollection<FileEntity> _fileCollectionViaFluConsentSignature;
		private EntityCollection<FileEntity> _fileCollectionViaMergeCustomerUpload_;
		private EntityCollection<FileEntity> _fileCollectionViaExitInterviewSignature;
		private EntityCollection<FileEntity> _fileCollectionViaEventCustomerGiftCard_;
		private EntityCollection<FileEntity> _fileCollectionViaEventCustomerGiftCard;
		private EntityCollection<FileEntity> _fileCollectionViaEligibilityUpload;
		private EntityCollection<FileEntity> _fileCollectionViaEligibilityUpload_;
		private EntityCollection<FileEntity> _fileCollectionViaExportableReportsQueue;
		private EntityCollection<FileEntity> _fileCollectionViaSuspectConditionUpload;
		private EntityCollection<FileEntity> _fileCollectionViaStaffEventScheduleUpload_;
		private EntityCollection<FileEntity> _fileCollectionViaParticipationConsentSignature;
		private EntityCollection<FileEntity> _fileCollectionViaCustomerPhoneNumberUpdateUpload_;
		private EntityCollection<FileEntity> _fileCollectionViaCustomerPhoneNumberUpdateUpload;
		private EntityCollection<FileEntity> _fileCollectionViaSuspectConditionUpload_;
		private EntityCollection<FluConsentQuestionEntity> _fluConsentQuestionCollectionViaFluConsentAnswer;
		private EntityCollection<FluConsentQuestionEntity> _fluConsentQuestionCollectionViaFluConsentAnswer_;
		private EntityCollection<GcNotGivenReasonEntity> _gcNotGivenReasonCollectionViaEventCustomers;
		private EntityCollection<GcNotGivenReasonEntity> _gcNotGivenReasonCollectionViaEventCustomers_;
		private EntityCollection<HafTemplateEntity> _hafTemplateCollectionViaClinicalTestQualificationCriteria;
		private EntityCollection<HafTemplateEntity> _hafTemplateCollectionViaEvents___;
		private EntityCollection<HafTemplateEntity> _hafTemplateCollectionViaEvents;
		private EntityCollection<HafTemplateEntity> _hafTemplateCollectionViaEvents____;
		private EntityCollection<HafTemplateEntity> _hafTemplateCollectionViaEvents_;
		private EntityCollection<HafTemplateEntity> _hafTemplateCollectionViaCustomerClinicalQuestionAnswer;
		private EntityCollection<HafTemplateEntity> _hafTemplateCollectionViaEvents__;
		private EntityCollection<HafTemplateEntity> _hafTemplateCollectionViaCustomerClinicalQuestionAnswer_;
		private EntityCollection<HafTemplateEntity> _hafTemplateCollectionViaClinicalTestQualificationCriteria_;
		private EntityCollection<HcpcsCodeEntity> _hcpcsCodeCollectionViaTestHcpcsCode_;
		private EntityCollection<HcpcsCodeEntity> _hcpcsCodeCollectionViaTestHcpcsCode;
		private EntityCollection<HealthPlanCallQueueCriteriaEntity> _healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload;
		private EntityCollection<HealthPlanCallQueueCriteriaEntity> _healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment;
		private EntityCollection<HealthPlanCallQueueCriteriaEntity> _healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_;
		private EntityCollection<HealthPlanCallQueueCriteriaEntity> _healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment;
		private EntityCollection<HealthPlanCallQueueCriteriaEntity> _healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__;
		private EntityCollection<HealthPlanCallQueueCriteriaEntity> _healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_;
		private EntityCollection<HospitalFacilityEntity> _hospitalFacilityCollectionViaEventCustomers;
		private EntityCollection<HospitalFacilityEntity> _hospitalFacilityCollectionViaEventCustomers_;
		private EntityCollection<HostPaymentEntity> _hostPaymentCollectionViaHostPaymentTransaction;
		private EntityCollection<IcdCodesEntity> _icdCodesCollectionViaCustomerIcdCode;
		private EntityCollection<InsuranceCompanyEntity> _insuranceCompanyCollectionViaEligibility;
		private EntityCollection<LanguageEntity> _languageCollectionViaHealthPlanCallQueueCriteria;
		private EntityCollection<LanguageEntity> _languageCollectionViaCallQueueCustomer_;
		private EntityCollection<LanguageEntity> _languageCollectionViaCallQueueCustomer__;
		private EntityCollection<LanguageEntity> _languageCollectionViaCallQueueCustomer;
		private EntityCollection<LanguageEntity> _languageCollectionViaHealthPlanCallQueueCriteria_;
		private EntityCollection<LookupEntity> _lookupCollectionViaUncontactedCustomerCallQueue;
		private EntityCollection<LookupEntity> _lookupCollectionViaFillEventCallQueue;
		private EntityCollection<LookupEntity> _lookupCollectionViaTestPerformedExternally_;
		private EntityCollection<LookupEntity> _lookupCollectionViaLanguageBarrierCallQueue;
		private EntityCollection<LookupEntity> _lookupCollectionViaMedicationUpload;
		private EntityCollection<LookupEntity> _lookupCollectionViaHostFacilityRanking;
		private EntityCollection<LookupEntity> _lookupCollectionViaHostFacilityRanking_;
		private EntityCollection<LookupEntity> _lookupCollectionViaMailRoundCallQueue;
		private EntityCollection<LookupEntity> _lookupCollectionViaHostPaymentTransaction_;
		private EntityCollection<LookupEntity> _lookupCollectionViaHostPayment;
		private EntityCollection<LookupEntity> _lookupCollectionViaHostPaymentTransaction;
		private EntityCollection<LookupEntity> _lookupCollectionViaHostPayment_;
		private EntityCollection<LookupEntity> _lookupCollectionViaKynLabValues;
		private EntityCollection<LookupEntity> _lookupCollectionViaExportableReportsQueue;
		private EntityCollection<LookupEntity> _lookupCollectionViaFile;
		private EntityCollection<LookupEntity> _lookupCollectionViaTestPerformedExternally;
		private EntityCollection<LookupEntity> _lookupCollectionViaKynLabValues_;
		private EntityCollection<LookupEntity> _lookupCollectionViaPreQualificationQuestion;
		private EntityCollection<LookupEntity> _lookupCollectionViaPrintOrderItemTracking__;
		private EntityCollection<LookupEntity> _lookupCollectionViaPcpDisposition_;
		private EntityCollection<LookupEntity> _lookupCollectionViaPcpAppointment_;
		private EntityCollection<LookupEntity> _lookupCollectionViaPcpDisposition;
		private EntityCollection<LookupEntity> _lookupCollectionViaRefundRequest;
		private EntityCollection<LookupEntity> _lookupCollectionViaRapsUpload;
		private EntityCollection<LookupEntity> _lookupCollectionViaRefundRequest_;
		private EntityCollection<LookupEntity> _lookupCollectionViaPrintOrderItemTracking___;
		private EntityCollection<LookupEntity> _lookupCollectionViaProspectCustomer;
		private EntityCollection<LookupEntity> _lookupCollectionViaPcpAppointment;
		private EntityCollection<LookupEntity> _lookupCollectionViaHafTemplate;
		private EntityCollection<LookupEntity> _lookupCollectionViaHafTemplate_;
		private EntityCollection<LookupEntity> _lookupCollectionViaSuspectConditionUpload;
		private EntityCollection<LookupEntity> _lookupCollectionViaMergeCustomerUpload;
		private EntityCollection<LookupEntity> _lookupCollectionViaNoShowCallQueue;
		private EntityCollection<LookupEntity> _lookupCollectionViaStaffEventScheduleUpload;
		private EntityCollection<LookupEntity> _lookupCollectionViaHealthPlanRevenue;
		private EntityCollection<LookupEntity> _lookupCollectionViaHealthPlanRevenue_;
		private EntityCollection<LookupEntity> _lookupCollectionViaHafTemplate__;
		private EntityCollection<LookupEntity> _lookupCollectionViaHafTemplate___;
		private EntityCollection<LookupEntity> _lookupCollectionViaCustomerProfileHistory___;
		private EntityCollection<LookupEntity> _lookupCollectionViaCustomerProfileHistory__;
		private EntityCollection<LookupEntity> _lookupCollectionViaCustomerProfileHistory;
		private EntityCollection<LookupEntity> _lookupCollectionViaCustomEventNotification;
		private EntityCollection<LookupEntity> _lookupCollectionViaCustomerRegistrationNotes;
		private EntityCollection<LookupEntity> _lookupCollectionViaCustomerProfileHistory_;
		private EntityCollection<LookupEntity> _lookupCollectionViaCustomerPrimaryCarePhysician__;
		private EntityCollection<LookupEntity> _lookupCollectionViaCustomerEventTestState__;
		private EntityCollection<LookupEntity> _lookupCollectionViaCustomerEventTestState_;
		private EntityCollection<LookupEntity> _lookupCollectionViaCustomerEventTestState;
		private EntityCollection<LookupEntity> _lookupCollectionViaCustomerPrimaryCarePhysician_;
		private EntityCollection<LookupEntity> _lookupCollectionViaCustomerPrimaryCarePhysician;
		private EntityCollection<LookupEntity> _lookupCollectionViaCustomerPhoneNumberUpdateUpload;
		private EntityCollection<LookupEntity> _lookupCollectionViaEligibilityUpload;
		private EntityCollection<LookupEntity> _lookupCollectionViaEventCustomerResult__;
		private EntityCollection<LookupEntity> _lookupCollectionViaEventCustomerResult______;
		private EntityCollection<LookupEntity> _lookupCollectionViaEventCustomerResult_____;
		private EntityCollection<LookupEntity> _lookupCollectionViaEventCustomerResult_;
		private EntityCollection<LookupEntity> _lookupCollectionViaEventCustomerResult____;
		private EntityCollection<LookupEntity> _lookupCollectionViaEventCustomerResult___;
		private EntityCollection<LookupEntity> _lookupCollectionViaEventCustomerResult________;
		private EntityCollection<LookupEntity> _lookupCollectionViaEventAppointmentCancellationLog;
		private EntityCollection<LookupEntity> _lookupCollectionViaEmailTemplate_;
		private EntityCollection<LookupEntity> _lookupCollectionViaEmailTemplate;
		private EntityCollection<LookupEntity> _lookupCollectionViaEventCustomerResult_______;
		private EntityCollection<LookupEntity> _lookupCollectionViaEventCustomerResult;
		private EntityCollection<LookupEntity> _lookupCollectionViaEventAppointmentChangeLog;
		private EntityCollection<LookupEntity> _lookupCollectionViaCustomerActivityTypeUpload;
		private EntityCollection<LookupEntity> _lookupCollectionViaCalls;
		private EntityCollection<LookupEntity> _lookupCollectionViaCalls_;
		private EntityCollection<LookupEntity> _lookupCollectionViaCallRoundCallQueue;
		private EntityCollection<LookupEntity> _lookupCollectionViaCampaign;
		private EntityCollection<LookupEntity> _lookupCollectionViaCallUpload;
		private EntityCollection<LookupEntity> _lookupCollectionViaCalls__;
		private EntityCollection<LookupEntity> _lookupCollectionViaCallQueueCustomer__;
		private EntityCollection<LookupEntity> _lookupCollectionViaCallCenterTeam;
		private EntityCollection<LookupEntity> _lookupCollectionViaAccountHraChatQuestionnaire_;
		private EntityCollection<LookupEntity> _lookupCollectionViaAccountHraChatQuestionnaire;
		private EntityCollection<LookupEntity> _lookupCollectionViaCallQueueCustomer_;
		private EntityCollection<LookupEntity> _lookupCollectionViaCallQueueCustomer;
		private EntityCollection<LookupEntity> _lookupCollectionViaCallCenterTeam_;
		private EntityCollection<LookupEntity> _lookupCollectionViaCampaign_;
		private EntityCollection<LookupEntity> _lookupCollectionViaClinicalTestQualificationCriteria_;
		private EntityCollection<LookupEntity> _lookupCollectionViaClinicalTestQualificationCriteria;
		private EntityCollection<LookupEntity> _lookupCollectionViaCheckListTemplate_;
		private EntityCollection<LookupEntity> _lookupCollectionViaCorporateUpload;
		private EntityCollection<LookupEntity> _lookupCollectionViaClinicalTestQualificationCriteria___;
		private EntityCollection<LookupEntity> _lookupCollectionViaClinicalTestQualificationCriteria__;
		private EntityCollection<LookupEntity> _lookupCollectionViaCheckListTemplate;
		private EntityCollection<LookupEntity> _lookupCollectionViaCampaignActivity;
		private EntityCollection<LookupEntity> _lookupCollectionViaCampaign___;
		private EntityCollection<LookupEntity> _lookupCollectionViaCampaign__;
		private EntityCollection<LookupEntity> _lookupCollectionViaCheckListAnswer_;
		private EntityCollection<LookupEntity> _lookupCollectionViaCheckListAnswer;
		private EntityCollection<LookupEntity> _lookupCollectionViaCampaignActivity_;
		private EntityCollection<LookupEntity> _lookupCollectionViaEvents________;
		private EntityCollection<LookupEntity> _lookupCollectionViaEvents______________;
		private EntityCollection<LookupEntity> _lookupCollectionViaEvents_________;
		private EntityCollection<LookupEntity> _lookupCollectionViaEvents_____________;
		private EntityCollection<LookupEntity> _lookupCollectionViaEvents___________________;
		private EntityCollection<LookupEntity> _lookupCollectionViaEvents__________________;
		private EntityCollection<LookupEntity> _lookupCollectionViaEvents_______________;
		private EntityCollection<LookupEntity> _lookupCollectionViaEvents_______________________;
		private EntityCollection<LookupEntity> _lookupCollectionViaEvents____________;
		private EntityCollection<LookupEntity> _lookupCollectionViaEvents____;
		private EntityCollection<LookupEntity> _lookupCollectionViaEvents________________;
		private EntityCollection<LookupEntity> _lookupCollectionViaEvents_______;
		private EntityCollection<LookupEntity> _lookupCollectionViaEvents_____;
		private EntityCollection<LookupEntity> _lookupCollectionViaEvents__________;
		private EntityCollection<LookupEntity> _lookupCollectionViaEvents_________________;
		private EntityCollection<LookupEntity> _lookupCollectionViaEvents___________;
		private EntityCollection<LookupEntity> _lookupCollectionViaEvents______________________;
		private EntityCollection<LookupEntity> _lookupCollectionViaEvents;
		private EntityCollection<LookupEntity> _lookupCollectionViaEvents______;
		private EntityCollection<LookupEntity> _lookupCollectionViaEvents__;
		private EntityCollection<LookupEntity> _lookupCollectionViaEventCustomers___;
		private EntityCollection<LookupEntity> _lookupCollectionViaEventCustomers;
		private EntityCollection<LookupEntity> _lookupCollectionViaEventCustomers_;
		private EntityCollection<LookupEntity> _lookupCollectionViaEventCustomers__;
		private EntityCollection<LookupEntity> _lookupCollectionViaEvents___;
		private EntityCollection<LookupEntity> _lookupCollectionViaEvents________________________;
		private EntityCollection<LookupEntity> _lookupCollectionViaEvents____________________;
		private EntityCollection<LookupEntity> _lookupCollectionViaEvents_____________________;
		private EntityCollection<LookupEntity> _lookupCollectionViaEvents_;
		private EntityCollection<MarketingPrintOrderItemEntity> _marketingPrintOrderItemCollectionViaPrintOrderItemTracking;
		private EntityCollection<MarketingPrintOrderItemEntity> _marketingPrintOrderItemCollectionViaPrintOrderItemTracking_;
		private EntityCollection<MedicareQuestionEntity> _medicareQuestionCollectionViaCustomerMedicareQuestionAnswer;
		private EntityCollection<NdcEntity> _ndcCollectionViaCurrentMedication;
		private EntityCollection<NotesDetailsEntity> _notesDetailsCollectionViaPriorityInQueue;
		private EntityCollection<NotesDetailsEntity> _notesDetailsCollectionViaPriorityInQueue_;
		private EntityCollection<NotesDetailsEntity> _notesDetailsCollectionViaCallQueueCustomer_;
		private EntityCollection<NotesDetailsEntity> _notesDetailsCollectionViaEvents;
		private EntityCollection<NotesDetailsEntity> _notesDetailsCollectionViaCallQueueCustomer__;
		private EntityCollection<NotesDetailsEntity> _notesDetailsCollectionViaEvents_;
		private EntityCollection<NotesDetailsEntity> _notesDetailsCollectionViaEvents___;
		private EntityCollection<NotesDetailsEntity> _notesDetailsCollectionViaCallQueueCustomer;
		private EntityCollection<NotesDetailsEntity> _notesDetailsCollectionViaEvents____;
		private EntityCollection<NotesDetailsEntity> _notesDetailsCollectionViaEvents__;
		private EntityCollection<NotificationMediumEntity> _notificationMediumCollectionViaNotificationType;
		private EntityCollection<NotificationMediumEntity> _notificationMediumCollectionViaNotification;
		private EntityCollection<NotificationTypeEntity> _notificationTypeCollectionViaEventCustomerTestNotPerformedNotification;
		private EntityCollection<NotificationTypeEntity> _notificationTypeCollectionViaEmailTemplate;
		private EntityCollection<NotificationTypeEntity> _notificationTypeCollectionViaNotification;
		private EntityCollection<OrderEntity> _orderCollectionViaRefundRequest_;
		private EntityCollection<OrderEntity> _orderCollectionViaRefundRequest;
		private EntityCollection<OrganizationEntity> _organizationCollectionViaAccountTestHcpcsCode_;
		private EntityCollection<OrganizationEntity> _organizationCollectionViaAccountTestHcpcsCode;
		private EntityCollection<OrganizationEntity> _organizationCollectionViaAccountCallCenterOrganization;
		private EntityCollection<OrganizationEntity> _organizationCollectionViaAccountCallCenterOrganization_;
		private EntityCollection<OrganizationEntity> _organizationCollectionViaEventAccountTestHcpcsCode_;
		private EntityCollection<OrganizationEntity> _organizationCollectionViaEventAccountTestHcpcsCode;
		private EntityCollection<OrganizationEntity> _organizationCollectionViaMarketingPrintOrder;
		private EntityCollection<OrganizationEntity> _organizationCollectionViaMarketingPrintOrder_;
		private EntityCollection<OrganizationEntity> _organizationCollectionViaAffiliateProfile;
		private EntityCollection<PackageEntity> _packageCollectionViaPreApprovedPackage;
		private EntityCollection<PhysicianMasterEntity> _physicianMasterCollectionViaCustomerPrimaryCarePhysician;
		private EntityCollection<PhysicianMasterEntity> _physicianMasterCollectionViaCustomerPrimaryCarePhysician_;
		private EntityCollection<PhysicianMasterEntity> _physicianMasterCollectionViaCustomerPrimaryCarePhysician__;
		private EntityCollection<PodDetailsEntity> _podDetailsCollectionViaSalesRepPodAssigments;
		private EntityCollection<PodDetailsEntity> _podDetailsCollectionViaEventStaffAssignment;
		private EntityCollection<PodDetailsEntity> _podDetailsCollectionViaEventNote_;
		private EntityCollection<PodDetailsEntity> _podDetailsCollectionViaEventNote;
		private EntityCollection<PodDetailsEntity> _podDetailsCollectionViaPodDefaultTeam;
		private EntityCollection<PodDetailsEntity> _podDetailsCollectionViaEventStaffAssignment_;
		private EntityCollection<PodDetailsEntity> _podDetailsCollectionViaEventStaffAssignment__;
		private EntityCollection<PreQualificationQuestionEntity> _preQualificationQuestionCollectionViaEventCustomerQuestionAnswer_;
		private EntityCollection<PreQualificationQuestionEntity> _preQualificationQuestionCollectionViaDisqualifiedTest;
		private EntityCollection<PreQualificationQuestionEntity> _preQualificationQuestionCollectionViaDisqualifiedTest_;
		private EntityCollection<PreQualificationQuestionEntity> _preQualificationQuestionCollectionViaEventCustomerQuestionAnswer;
		private EntityCollection<ProspectCustomerEntity> _prospectCustomerCollectionViaCallQueueCustomer_;
		private EntityCollection<ProspectCustomerEntity> _prospectCustomerCollectionViaCallQueueCustomer;
		private EntityCollection<ProspectCustomerEntity> _prospectCustomerCollectionViaCallQueueCustomer__;
		private EntityCollection<ProspectListDetailsEntity> _prospectListDetailsCollectionViaProspects;
		private EntityCollection<ProspectsEntity> _prospectsCollectionViaHostFacilityRanking;
		private EntityCollection<ProspectsEntity> _prospectsCollectionViaHostPayment;
		private EntityCollection<ProspectTypeEntity> _prospectTypeCollectionViaProspects;
		private EntityCollection<RefundRequestEntity> _refundRequestCollectionViaEventAppointmentCancellationLog;
		private EntityCollection<RelationshipEntity> _relationshipCollectionViaGuardianDetails_;
		private EntityCollection<RelationshipEntity> _relationshipCollectionViaGuardianDetails;
		private EntityCollection<RescheduleCancelDispositionEntity> _rescheduleCancelDispositionCollectionViaEventAppointmentChangeLog;
		private EntityCollection<RescheduleCancelDispositionEntity> _rescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog;
		private EntityCollection<RoleEntity> _roleCollectionViaUser;
		private EntityCollection<RoleEntity> _roleCollectionViaHostFacilityRanking;
		private EntityCollection<RoleEntity> _roleCollectionViaUser_;
		private EntityCollection<ScheduleMethodEntity> _scheduleMethodCollectionViaEvents___;
		private EntityCollection<ScheduleMethodEntity> _scheduleMethodCollectionViaEvents____;
		private EntityCollection<ScheduleMethodEntity> _scheduleMethodCollectionViaEvents;
		private EntityCollection<ScheduleMethodEntity> _scheduleMethodCollectionViaEvents_;
		private EntityCollection<ScheduleMethodEntity> _scheduleMethodCollectionViaEvents__;
		private EntityCollection<ScriptsEntity> _scriptsCollectionViaCallQueue;
		private EntityCollection<ScriptsEntity> _scriptsCollectionViaCallQueue_;
		private EntityCollection<ShippingOptionEntity> _shippingOptionCollectionViaShippingDetail_;
		private EntityCollection<ShippingOptionEntity> _shippingOptionCollectionViaShippingDetail;
		private EntityCollection<StaffEventRoleEntity> _staffEventRoleCollectionViaEventStaffAssignment__;
		private EntityCollection<StaffEventRoleEntity> _staffEventRoleCollectionViaPodDefaultTeam;
		private EntityCollection<StaffEventRoleEntity> _staffEventRoleCollectionViaEventStaffAssignment;
		private EntityCollection<StaffEventRoleEntity> _staffEventRoleCollectionViaEventStaffAssignment_;
		private EntityCollection<StandardFindingTestReadingEntity> _standardFindingTestReadingCollectionViaCustomerEventReading;
		private EntityCollection<StateEntity> _stateCollectionViaAddress;
		private EntityCollection<SurveyQuestionEntity> _surveyQuestionCollectionViaSurveyAnswer_;
		private EntityCollection<SurveyQuestionEntity> _surveyQuestionCollectionViaSurveyAnswer;
		private EntityCollection<TagEntity> _tagCollectionViaPreAssessmentCustomerCallQueueCallAttempt;
		private EntityCollection<TagEntity> _tagCollectionViaCustomerCallQueueCallAttempt;
		private EntityCollection<TaskPriorityTypesEntity> _taskPriorityTypesCollectionViaTaskDetails__;
		private EntityCollection<TaskPriorityTypesEntity> _taskPriorityTypesCollectionViaTaskDetails_;
		private EntityCollection<TaskPriorityTypesEntity> _taskPriorityTypesCollectionViaTaskDetails;
		private EntityCollection<TaskStatusTypesEntity> _taskStatusTypesCollectionViaTaskDetails_;
		private EntityCollection<TaskStatusTypesEntity> _taskStatusTypesCollectionViaTaskDetails__;
		private EntityCollection<TaskStatusTypesEntity> _taskStatusTypesCollectionViaTaskDetails;
		private EntityCollection<TechnicianProfileEntity> _technicianProfileCollectionViaPinChangelog;
		private EntityCollection<TerritoryEntity> _territoryCollectionViaTerritory;
		private EntityCollection<TerritoryEntity> _territoryCollectionViaOrganizationRoleUserTerritory;
		private EntityCollection<TestEntity> _testCollectionViaEventCustomerTestNotPerformedNotification;
		private EntityCollection<TestEntity> _testCollectionViaEventPhysicianTest;
		private EntityCollection<TestEntity> _testCollectionViaDisqualifiedTest_;
		private EntityCollection<TestEntity> _testCollectionViaEventCustomerRetest;
		private EntityCollection<TestEntity> _testCollectionViaEventPhysicianTest_;
		private EntityCollection<TestEntity> _testCollectionViaKynLabValues_;
		private EntityCollection<TestEntity> _testCollectionViaEventPhysicianTest__;
		private EntityCollection<TestEntity> _testCollectionViaTestHcpcsCode_;
		private EntityCollection<TestEntity> _testCollectionViaTestHcpcsCode;
		private EntityCollection<TestEntity> _testCollectionViaKynLabValues;
		private EntityCollection<TestEntity> _testCollectionViaPreApprovedTest;
		private EntityCollection<TestEntity> _testCollectionViaClinicalTestQualificationCriteria;
		private EntityCollection<TestEntity> _testCollectionViaRequiredTest;
		private EntityCollection<TestEntity> _testCollectionViaClinicalTestQualificationCriteria_;
		private EntityCollection<TestEntity> _testCollectionViaDisqualifiedTest;
		private EntityCollection<TestEntity> _testCollectionViaPreQualificationTestTemplate;
		private EntityCollection<TestEntity> _testCollectionViaPreQualificationTestTemplate_;
		private EntityCollection<TestEntity> _testCollectionViaPreQualificationQuestion;
		private EntityCollection<TestHcpcsCodeEntity> _testHcpcsCodeCollectionViaEventAccountTestHcpcsCode_;
		private EntityCollection<TestHcpcsCodeEntity> _testHcpcsCodeCollectionViaEventAccountTestHcpcsCode;
		private EntityCollection<TestHcpcsCodeEntity> _testHcpcsCodeCollectionViaAccountTestHcpcsCode_;
		private EntityCollection<TestHcpcsCodeEntity> _testHcpcsCodeCollectionViaAccountTestHcpcsCode;
		private EntityCollection<TestNotPerformedReasonEntity> _testNotPerformedReasonCollectionViaTestNotPerformed_;
		private EntityCollection<TestNotPerformedReasonEntity> _testNotPerformedReasonCollectionViaTestNotPerformed;
		private EntityCollection<TestReadingEntity> _testReadingCollectionViaCustomerEventReading;
		private EntityCollection<TestUnableScreenReasonEntity> _testUnableScreenReasonCollectionViaCustomerEventUnableScreenReason;
		private EntityCollection<UserLoginEntity> _userLoginCollectionViaPasswordChangelog;
		private EntityCollection<ZipEntity> _zipCollectionViaAddress;
		private OrganizationEntity _organization;
		private RoleEntity _role;
		private UserEntity _user;
		private AccountCoordinatorProfileEntity _accountCoordinatorProfile;
		private AffiliateProfileEntity _affiliateProfile_;
		private CallCenterRepProfileEntity _callCenterRepProfile;
		private CustomerProfileEntity _customerProfile;
		private PhysicianProfileEntity _physicianProfile;
		private TechnicianProfileEntity _technicianProfile;
		
		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		#endregion

		#region Statics
		private static Dictionary<string, string>	_customProperties;
		private static Dictionary<string, Dictionary<string, string>>	_fieldsCustomProperties;

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name Organization</summary>
			public static readonly string Organization = "Organization";
			/// <summary>Member name Role</summary>
			public static readonly string Role = "Role";
			/// <summary>Member name User</summary>
			public static readonly string User = "User";
			/// <summary>Member name AccountCallCenterOrganization_</summary>
			public static readonly string AccountCallCenterOrganization_ = "AccountCallCenterOrganization_";
			/// <summary>Member name AccountCallCenterOrganization</summary>
			public static readonly string AccountCallCenterOrganization = "AccountCallCenterOrganization";
			/// <summary>Member name AccountHraChatQuestionnaire_</summary>
			public static readonly string AccountHraChatQuestionnaire_ = "AccountHraChatQuestionnaire_";
			/// <summary>Member name AccountHraChatQuestionnaire</summary>
			public static readonly string AccountHraChatQuestionnaire = "AccountHraChatQuestionnaire";
			/// <summary>Member name AccountTestHcpcsCode_</summary>
			public static readonly string AccountTestHcpcsCode_ = "AccountTestHcpcsCode_";
			/// <summary>Member name AccountTestHcpcsCode</summary>
			public static readonly string AccountTestHcpcsCode = "AccountTestHcpcsCode";
			/// <summary>Member name ActivityType</summary>
			public static readonly string ActivityType = "ActivityType";
			/// <summary>Member name AdditionalFields_</summary>
			public static readonly string AdditionalFields_ = "AdditionalFields_";
			/// <summary>Member name AdditionalFields</summary>
			public static readonly string AdditionalFields = "AdditionalFields";
			/// <summary>Member name Address</summary>
			public static readonly string Address = "Address";
			/// <summary>Member name AdvocateManagerTeam_</summary>
			public static readonly string AdvocateManagerTeam_ = "AdvocateManagerTeam_";
			/// <summary>Member name AdvocateManagerTeam</summary>
			public static readonly string AdvocateManagerTeam = "AdvocateManagerTeam";
			/// <summary>Member name Afcampaign_</summary>
			public static readonly string Afcampaign_ = "Afcampaign_";
			/// <summary>Member name Afcampaign</summary>
			public static readonly string Afcampaign = "Afcampaign";
			/// <summary>Member name AffiliateProfile</summary>
			public static readonly string AffiliateProfile = "AffiliateProfile";
			/// <summary>Member name ApplicationAuthentication_</summary>
			public static readonly string ApplicationAuthentication_ = "ApplicationAuthentication_";
			/// <summary>Member name ApplicationAuthentication</summary>
			public static readonly string ApplicationAuthentication = "ApplicationAuthentication";
			/// <summary>Member name Barrier_</summary>
			public static readonly string Barrier_ = "Barrier_";
			/// <summary>Member name Barrier</summary>
			public static readonly string Barrier = "Barrier";
			/// <summary>Member name CallCenterAgentTeam</summary>
			public static readonly string CallCenterAgentTeam = "CallCenterAgentTeam";
			/// <summary>Member name CallCenterAgentTeamLog__</summary>
			public static readonly string CallCenterAgentTeamLog__ = "CallCenterAgentTeamLog__";
			/// <summary>Member name CallCenterAgentTeamLog_</summary>
			public static readonly string CallCenterAgentTeamLog_ = "CallCenterAgentTeamLog_";
			/// <summary>Member name CallCenterAgentTeamLog</summary>
			public static readonly string CallCenterAgentTeamLog = "CallCenterAgentTeamLog";
			/// <summary>Member name CallCenterTeam_</summary>
			public static readonly string CallCenterTeam_ = "CallCenterTeam_";
			/// <summary>Member name CallCenterTeam</summary>
			public static readonly string CallCenterTeam = "CallCenterTeam";
			/// <summary>Member name CallQueue_</summary>
			public static readonly string CallQueue_ = "CallQueue_";
			/// <summary>Member name CallQueue</summary>
			public static readonly string CallQueue = "CallQueue";
			/// <summary>Member name CallQueueAssignment</summary>
			public static readonly string CallQueueAssignment = "CallQueueAssignment";
			/// <summary>Member name CallQueueCustomer__</summary>
			public static readonly string CallQueueCustomer__ = "CallQueueCustomer__";
			/// <summary>Member name CallQueueCustomer_</summary>
			public static readonly string CallQueueCustomer_ = "CallQueueCustomer_";
			/// <summary>Member name CallQueueCustomer</summary>
			public static readonly string CallQueueCustomer = "CallQueueCustomer";
			/// <summary>Member name CallQueueCustomerLock</summary>
			public static readonly string CallQueueCustomerLock = "CallQueueCustomerLock";
			/// <summary>Member name CallQueueCustomTag</summary>
			public static readonly string CallQueueCustomTag = "CallQueueCustomTag";
			/// <summary>Member name CallRoundCallQueue</summary>
			public static readonly string CallRoundCallQueue = "CallRoundCallQueue";
			/// <summary>Member name Calls</summary>
			public static readonly string Calls = "Calls";
			/// <summary>Member name CallUpload</summary>
			public static readonly string CallUpload = "CallUpload";
			/// <summary>Member name Campaign_</summary>
			public static readonly string Campaign_ = "Campaign_";
			/// <summary>Member name Campaign</summary>
			public static readonly string Campaign = "Campaign";
			/// <summary>Member name CampaignActivity_</summary>
			public static readonly string CampaignActivity_ = "CampaignActivity_";
			/// <summary>Member name CampaignActivity</summary>
			public static readonly string CampaignActivity = "CampaignActivity";
			/// <summary>Member name CampaignActivityAssignment</summary>
			public static readonly string CampaignActivityAssignment = "CampaignActivityAssignment";
			/// <summary>Member name CampaignAssignment</summary>
			public static readonly string CampaignAssignment = "CampaignAssignment";
			/// <summary>Member name CdcontentGeneratorTracking</summary>
			public static readonly string CdcontentGeneratorTracking = "CdcontentGeneratorTracking";
			/// <summary>Member name ChaperoneAnswer_</summary>
			public static readonly string ChaperoneAnswer_ = "ChaperoneAnswer_";
			/// <summary>Member name ChaperoneAnswer</summary>
			public static readonly string ChaperoneAnswer = "ChaperoneAnswer";
			/// <summary>Member name ChaperoneSignature</summary>
			public static readonly string ChaperoneSignature = "ChaperoneSignature";
			/// <summary>Member name Check_</summary>
			public static readonly string Check_ = "Check_";
			/// <summary>Member name Check</summary>
			public static readonly string Check = "Check";
			/// <summary>Member name CheckListAnswer_</summary>
			public static readonly string CheckListAnswer_ = "CheckListAnswer_";
			/// <summary>Member name CheckListAnswer</summary>
			public static readonly string CheckListAnswer = "CheckListAnswer";
			/// <summary>Member name CheckListTemplate_</summary>
			public static readonly string CheckListTemplate_ = "CheckListTemplate_";
			/// <summary>Member name CheckListTemplate</summary>
			public static readonly string CheckListTemplate = "CheckListTemplate";
			/// <summary>Member name ClinicalTestQualificationCriteria_</summary>
			public static readonly string ClinicalTestQualificationCriteria_ = "ClinicalTestQualificationCriteria_";
			/// <summary>Member name ClinicalTestQualificationCriteria</summary>
			public static readonly string ClinicalTestQualificationCriteria = "ClinicalTestQualificationCriteria";
			/// <summary>Member name ContactCall_</summary>
			public static readonly string ContactCall_ = "ContactCall_";
			/// <summary>Member name ContactCall</summary>
			public static readonly string ContactCall = "ContactCall";
			/// <summary>Member name ContactMeeting_</summary>
			public static readonly string ContactMeeting_ = "ContactMeeting_";
			/// <summary>Member name ContactMeeting</summary>
			public static readonly string ContactMeeting = "ContactMeeting";
			/// <summary>Member name Content_</summary>
			public static readonly string Content_ = "Content_";
			/// <summary>Member name Content</summary>
			public static readonly string Content = "Content";
			/// <summary>Member name CorporateTag_</summary>
			public static readonly string CorporateTag_ = "CorporateTag_";
			/// <summary>Member name CorporateTag</summary>
			public static readonly string CorporateTag = "CorporateTag";
			/// <summary>Member name CorporateUpload</summary>
			public static readonly string CorporateUpload = "CorporateUpload";
			/// <summary>Member name Coupons_</summary>
			public static readonly string Coupons_ = "Coupons_";
			/// <summary>Member name Coupons</summary>
			public static readonly string Coupons = "Coupons";
			/// <summary>Member name CurrentMedication</summary>
			public static readonly string CurrentMedication = "CurrentMedication";
			/// <summary>Member name CustomerActivityTypeUpload</summary>
			public static readonly string CustomerActivityTypeUpload = "CustomerActivityTypeUpload";
			/// <summary>Member name CustomerCallAttempts</summary>
			public static readonly string CustomerCallAttempts = "CustomerCallAttempts";
			/// <summary>Member name CustomerCallQueueCallAttempt</summary>
			public static readonly string CustomerCallQueueCallAttempt = "CustomerCallQueueCallAttempt";
			/// <summary>Member name CustomerClinicalQuestionAnswer_</summary>
			public static readonly string CustomerClinicalQuestionAnswer_ = "CustomerClinicalQuestionAnswer_";
			/// <summary>Member name CustomerClinicalQuestionAnswer</summary>
			public static readonly string CustomerClinicalQuestionAnswer = "CustomerClinicalQuestionAnswer";
			/// <summary>Member name CustomerEligibility_</summary>
			public static readonly string CustomerEligibility_ = "CustomerEligibility_";
			/// <summary>Member name CustomerEligibility</summary>
			public static readonly string CustomerEligibility = "CustomerEligibility";
			/// <summary>Member name CustomerEventCriticalTestData_</summary>
			public static readonly string CustomerEventCriticalTestData_ = "CustomerEventCriticalTestData_";
			/// <summary>Member name CustomerEventCriticalTestData</summary>
			public static readonly string CustomerEventCriticalTestData = "CustomerEventCriticalTestData";
			/// <summary>Member name CustomerEventPriorityInQueueData_</summary>
			public static readonly string CustomerEventPriorityInQueueData_ = "CustomerEventPriorityInQueueData_";
			/// <summary>Member name CustomerEventPriorityInQueueData</summary>
			public static readonly string CustomerEventPriorityInQueueData = "CustomerEventPriorityInQueueData";
			/// <summary>Member name CustomerEventReading</summary>
			public static readonly string CustomerEventReading = "CustomerEventReading";
			/// <summary>Member name CustomerEventTestPhysicianEvaluation</summary>
			public static readonly string CustomerEventTestPhysicianEvaluation = "CustomerEventTestPhysicianEvaluation";
			/// <summary>Member name CustomerEventTestState__</summary>
			public static readonly string CustomerEventTestState__ = "CustomerEventTestState__";
			/// <summary>Member name CustomerEventTestState_</summary>
			public static readonly string CustomerEventTestState_ = "CustomerEventTestState_";
			/// <summary>Member name CustomerEventTestState</summary>
			public static readonly string CustomerEventTestState = "CustomerEventTestState";
			/// <summary>Member name CustomerEventUnableScreenReason</summary>
			public static readonly string CustomerEventUnableScreenReason = "CustomerEventUnableScreenReason";
			/// <summary>Member name CustomerHealthInfo</summary>
			public static readonly string CustomerHealthInfo = "CustomerHealthInfo";
			/// <summary>Member name CustomerHealthInfoArchive</summary>
			public static readonly string CustomerHealthInfoArchive = "CustomerHealthInfoArchive";
			/// <summary>Member name CustomerIcdCode</summary>
			public static readonly string CustomerIcdCode = "CustomerIcdCode";
			/// <summary>Member name CustomerLockForCall</summary>
			public static readonly string CustomerLockForCall = "CustomerLockForCall";
			/// <summary>Member name CustomerMedicareQuestionAnswer</summary>
			public static readonly string CustomerMedicareQuestionAnswer = "CustomerMedicareQuestionAnswer";
			/// <summary>Member name CustomerPhoneNumberUpdateUpload</summary>
			public static readonly string CustomerPhoneNumberUpdateUpload = "CustomerPhoneNumberUpdateUpload";
			/// <summary>Member name CustomerPrimaryCarePhysician_</summary>
			public static readonly string CustomerPrimaryCarePhysician_ = "CustomerPrimaryCarePhysician_";
			/// <summary>Member name CustomerPrimaryCarePhysician__</summary>
			public static readonly string CustomerPrimaryCarePhysician__ = "CustomerPrimaryCarePhysician__";
			/// <summary>Member name CustomerPrimaryCarePhysician</summary>
			public static readonly string CustomerPrimaryCarePhysician = "CustomerPrimaryCarePhysician";
			/// <summary>Member name CustomerProfileHistory</summary>
			public static readonly string CustomerProfileHistory = "CustomerProfileHistory";
			/// <summary>Member name CustomerRegistrationNotes</summary>
			public static readonly string CustomerRegistrationNotes = "CustomerRegistrationNotes";
			/// <summary>Member name CustomerResultScreeningCommunication__</summary>
			public static readonly string CustomerResultScreeningCommunication__ = "CustomerResultScreeningCommunication__";
			/// <summary>Member name CustomerResultScreeningCommunication_</summary>
			public static readonly string CustomerResultScreeningCommunication_ = "CustomerResultScreeningCommunication_";
			/// <summary>Member name CustomerResultScreeningCommunication</summary>
			public static readonly string CustomerResultScreeningCommunication = "CustomerResultScreeningCommunication";
			/// <summary>Member name CustomerTag_</summary>
			public static readonly string CustomerTag_ = "CustomerTag_";
			/// <summary>Member name CustomerTag</summary>
			public static readonly string CustomerTag = "CustomerTag";
			/// <summary>Member name CustomerTargeted_</summary>
			public static readonly string CustomerTargeted_ = "CustomerTargeted_";
			/// <summary>Member name CustomerTargeted</summary>
			public static readonly string CustomerTargeted = "CustomerTargeted";
			/// <summary>Member name CustomerWarmTransfer_</summary>
			public static readonly string CustomerWarmTransfer_ = "CustomerWarmTransfer_";
			/// <summary>Member name CustomerWarmTransfer</summary>
			public static readonly string CustomerWarmTransfer = "CustomerWarmTransfer";
			/// <summary>Member name CustomEventNotification</summary>
			public static readonly string CustomEventNotification = "CustomEventNotification";
			/// <summary>Member name DirectMail</summary>
			public static readonly string DirectMail = "DirectMail";
			/// <summary>Member name DirectMailType_</summary>
			public static readonly string DirectMailType_ = "DirectMailType_";
			/// <summary>Member name DirectMailType</summary>
			public static readonly string DirectMailType = "DirectMailType";
			/// <summary>Member name DisqualifiedTest_</summary>
			public static readonly string DisqualifiedTest_ = "DisqualifiedTest_";
			/// <summary>Member name DisqualifiedTest</summary>
			public static readonly string DisqualifiedTest = "DisqualifiedTest";
			/// <summary>Member name Eligibility</summary>
			public static readonly string Eligibility = "Eligibility";
			/// <summary>Member name EligibilityUpload</summary>
			public static readonly string EligibilityUpload = "EligibilityUpload";
			/// <summary>Member name EmailTemplate</summary>
			public static readonly string EmailTemplate = "EmailTemplate";
			/// <summary>Member name EventAccountTestHcpcsCode_</summary>
			public static readonly string EventAccountTestHcpcsCode_ = "EventAccountTestHcpcsCode_";
			/// <summary>Member name EventAccountTestHcpcsCode</summary>
			public static readonly string EventAccountTestHcpcsCode = "EventAccountTestHcpcsCode";
			/// <summary>Member name EventActivityTemplate</summary>
			public static readonly string EventActivityTemplate = "EventActivityTemplate";
			/// <summary>Member name EventActivityTemplateCall</summary>
			public static readonly string EventActivityTemplateCall = "EventActivityTemplateCall";
			/// <summary>Member name EventActivityTemplateEmail</summary>
			public static readonly string EventActivityTemplateEmail = "EventActivityTemplateEmail";
			/// <summary>Member name EventActivityTemplateMeeting</summary>
			public static readonly string EventActivityTemplateMeeting = "EventActivityTemplateMeeting";
			/// <summary>Member name EventActivityTemplateTask</summary>
			public static readonly string EventActivityTemplateTask = "EventActivityTemplateTask";
			/// <summary>Member name EventAppointment</summary>
			public static readonly string EventAppointment = "EventAppointment";
			/// <summary>Member name EventAppointmentCancellationLog</summary>
			public static readonly string EventAppointmentCancellationLog = "EventAppointmentCancellationLog";
			/// <summary>Member name EventAppointmentChangeLog</summary>
			public static readonly string EventAppointmentChangeLog = "EventAppointmentChangeLog";
			/// <summary>Member name EventCustomerBasicBioMetric</summary>
			public static readonly string EventCustomerBasicBioMetric = "EventCustomerBasicBioMetric";
			/// <summary>Member name EventCustomerGiftCard</summary>
			public static readonly string EventCustomerGiftCard = "EventCustomerGiftCard";
			/// <summary>Member name EventCustomerPrimaryCarePhysician</summary>
			public static readonly string EventCustomerPrimaryCarePhysician = "EventCustomerPrimaryCarePhysician";
			/// <summary>Member name EventCustomerQuestionAnswer_</summary>
			public static readonly string EventCustomerQuestionAnswer_ = "EventCustomerQuestionAnswer_";
			/// <summary>Member name EventCustomerQuestionAnswer</summary>
			public static readonly string EventCustomerQuestionAnswer = "EventCustomerQuestionAnswer";
			/// <summary>Member name EventCustomerResult___</summary>
			public static readonly string EventCustomerResult___ = "EventCustomerResult___";
			/// <summary>Member name EventCustomerResult__</summary>
			public static readonly string EventCustomerResult__ = "EventCustomerResult__";
			/// <summary>Member name EventCustomerResult_</summary>
			public static readonly string EventCustomerResult_ = "EventCustomerResult_";
			/// <summary>Member name EventCustomerResult____</summary>
			public static readonly string EventCustomerResult____ = "EventCustomerResult____";
			/// <summary>Member name EventCustomerResult______</summary>
			public static readonly string EventCustomerResult______ = "EventCustomerResult______";
			/// <summary>Member name EventCustomerResult_______</summary>
			public static readonly string EventCustomerResult_______ = "EventCustomerResult_______";
			/// <summary>Member name EventCustomerResult</summary>
			public static readonly string EventCustomerResult = "EventCustomerResult";
			/// <summary>Member name EventCustomerResult_____</summary>
			public static readonly string EventCustomerResult_____ = "EventCustomerResult_____";
			/// <summary>Member name EventCustomerResult________</summary>
			public static readonly string EventCustomerResult________ = "EventCustomerResult________";
			/// <summary>Member name EventCustomerResultBloodLab</summary>
			public static readonly string EventCustomerResultBloodLab = "EventCustomerResultBloodLab";
			/// <summary>Member name EventCustomerResultHistory</summary>
			public static readonly string EventCustomerResultHistory = "EventCustomerResultHistory";
			/// <summary>Member name EventCustomerResultHistory_</summary>
			public static readonly string EventCustomerResultHistory_ = "EventCustomerResultHistory_";
			/// <summary>Member name EventCustomerResultHistory__</summary>
			public static readonly string EventCustomerResultHistory__ = "EventCustomerResultHistory__";
			/// <summary>Member name EventCustomerRetest</summary>
			public static readonly string EventCustomerRetest = "EventCustomerRetest";
			/// <summary>Member name EventCustomers_</summary>
			public static readonly string EventCustomers_ = "EventCustomers_";
			/// <summary>Member name EventCustomers</summary>
			public static readonly string EventCustomers = "EventCustomers";
			/// <summary>Member name EventCustomerTestNotPerformedNotification</summary>
			public static readonly string EventCustomerTestNotPerformedNotification = "EventCustomerTestNotPerformedNotification";
			/// <summary>Member name EventNote_</summary>
			public static readonly string EventNote_ = "EventNote_";
			/// <summary>Member name EventNote</summary>
			public static readonly string EventNote = "EventNote";
			/// <summary>Member name EventPhysicianTest__</summary>
			public static readonly string EventPhysicianTest__ = "EventPhysicianTest__";
			/// <summary>Member name EventPhysicianTest_</summary>
			public static readonly string EventPhysicianTest_ = "EventPhysicianTest_";
			/// <summary>Member name EventPhysicianTest</summary>
			public static readonly string EventPhysicianTest = "EventPhysicianTest";
			/// <summary>Member name Events___</summary>
			public static readonly string Events___ = "Events___";
			/// <summary>Member name Events____</summary>
			public static readonly string Events____ = "Events____";
			/// <summary>Member name Events__</summary>
			public static readonly string Events__ = "Events__";
			/// <summary>Member name Events</summary>
			public static readonly string Events = "Events";
			/// <summary>Member name Events_</summary>
			public static readonly string Events_ = "Events_";
			/// <summary>Member name EventStaffAssignment__</summary>
			public static readonly string EventStaffAssignment__ = "EventStaffAssignment__";
			/// <summary>Member name EventStaffAssignment_</summary>
			public static readonly string EventStaffAssignment_ = "EventStaffAssignment_";
			/// <summary>Member name EventStaffAssignment</summary>
			public static readonly string EventStaffAssignment = "EventStaffAssignment";
			/// <summary>Member name ExitInterviewAnswer_</summary>
			public static readonly string ExitInterviewAnswer_ = "ExitInterviewAnswer_";
			/// <summary>Member name ExitInterviewAnswer</summary>
			public static readonly string ExitInterviewAnswer = "ExitInterviewAnswer";
			/// <summary>Member name ExitInterviewSignature</summary>
			public static readonly string ExitInterviewSignature = "ExitInterviewSignature";
			/// <summary>Member name ExportableReportsQueue</summary>
			public static readonly string ExportableReportsQueue = "ExportableReportsQueue";
			/// <summary>Member name File</summary>
			public static readonly string File = "File";
			/// <summary>Member name FillEventCallQueue</summary>
			public static readonly string FillEventCallQueue = "FillEventCallQueue";
			/// <summary>Member name FluConsentAnswer_</summary>
			public static readonly string FluConsentAnswer_ = "FluConsentAnswer_";
			/// <summary>Member name FluConsentAnswer</summary>
			public static readonly string FluConsentAnswer = "FluConsentAnswer";
			/// <summary>Member name FluConsentSignature</summary>
			public static readonly string FluConsentSignature = "FluConsentSignature";
			/// <summary>Member name FluConsentTemplate_</summary>
			public static readonly string FluConsentTemplate_ = "FluConsentTemplate_";
			/// <summary>Member name FluConsentTemplate</summary>
			public static readonly string FluConsentTemplate = "FluConsentTemplate";
			/// <summary>Member name GcNotGivenReason_</summary>
			public static readonly string GcNotGivenReason_ = "GcNotGivenReason_";
			/// <summary>Member name GcNotGivenReason</summary>
			public static readonly string GcNotGivenReason = "GcNotGivenReason";
			/// <summary>Member name GuardianDetails_</summary>
			public static readonly string GuardianDetails_ = "GuardianDetails_";
			/// <summary>Member name GuardianDetails</summary>
			public static readonly string GuardianDetails = "GuardianDetails";
			/// <summary>Member name HafTemplate_</summary>
			public static readonly string HafTemplate_ = "HafTemplate_";
			/// <summary>Member name HafTemplate</summary>
			public static readonly string HafTemplate = "HafTemplate";
			/// <summary>Member name HcpcsCode_</summary>
			public static readonly string HcpcsCode_ = "HcpcsCode_";
			/// <summary>Member name HcpcsCode</summary>
			public static readonly string HcpcsCode = "HcpcsCode";
			/// <summary>Member name HealthPlanCallQueueCriteria__</summary>
			public static readonly string HealthPlanCallQueueCriteria__ = "HealthPlanCallQueueCriteria__";
			/// <summary>Member name HealthPlanCallQueueCriteria_</summary>
			public static readonly string HealthPlanCallQueueCriteria_ = "HealthPlanCallQueueCriteria_";
			/// <summary>Member name HealthPlanCriteriaAssignment__</summary>
			public static readonly string HealthPlanCriteriaAssignment__ = "HealthPlanCriteriaAssignment__";
			/// <summary>Member name HealthPlanCriteriaAssignment_</summary>
			public static readonly string HealthPlanCriteriaAssignment_ = "HealthPlanCriteriaAssignment_";
			/// <summary>Member name HealthPlanCriteriaAssignment</summary>
			public static readonly string HealthPlanCriteriaAssignment = "HealthPlanCriteriaAssignment";
			/// <summary>Member name HealthPlanCriteriaAssignmentUpload</summary>
			public static readonly string HealthPlanCriteriaAssignmentUpload = "HealthPlanCriteriaAssignmentUpload";
			/// <summary>Member name HealthPlanCriteriaTeamAssignment_</summary>
			public static readonly string HealthPlanCriteriaTeamAssignment_ = "HealthPlanCriteriaTeamAssignment_";
			/// <summary>Member name HealthPlanCriteriaTeamAssignment</summary>
			public static readonly string HealthPlanCriteriaTeamAssignment = "HealthPlanCriteriaTeamAssignment";
			/// <summary>Member name HealthPlanRevenue_</summary>
			public static readonly string HealthPlanRevenue_ = "HealthPlanRevenue_";
			/// <summary>Member name HealthPlanRevenue</summary>
			public static readonly string HealthPlanRevenue = "HealthPlanRevenue";
			/// <summary>Member name HospitalPartnerCustomer__</summary>
			public static readonly string HospitalPartnerCustomer__ = "HospitalPartnerCustomer__";
			/// <summary>Member name HospitalPartnerCustomer_</summary>
			public static readonly string HospitalPartnerCustomer_ = "HospitalPartnerCustomer_";
			/// <summary>Member name HospitalPartnerCustomer</summary>
			public static readonly string HospitalPartnerCustomer = "HospitalPartnerCustomer";
			/// <summary>Member name HostFacilityRanking</summary>
			public static readonly string HostFacilityRanking = "HostFacilityRanking";
			/// <summary>Member name HostPayment</summary>
			public static readonly string HostPayment = "HostPayment";
			/// <summary>Member name HostPaymentTransaction</summary>
			public static readonly string HostPaymentTransaction = "HostPaymentTransaction";
			/// <summary>Member name IcdCodes_</summary>
			public static readonly string IcdCodes_ = "IcdCodes_";
			/// <summary>Member name IcdCodes</summary>
			public static readonly string IcdCodes = "IcdCodes";
			/// <summary>Member name IncidentalFindings</summary>
			public static readonly string IncidentalFindings = "IncidentalFindings";
			/// <summary>Member name KynLabValues_</summary>
			public static readonly string KynLabValues_ = "KynLabValues_";
			/// <summary>Member name KynLabValues</summary>
			public static readonly string KynLabValues = "KynLabValues";
			/// <summary>Member name Lab</summary>
			public static readonly string Lab = "Lab";
			/// <summary>Member name Language</summary>
			public static readonly string Language = "Language";
			/// <summary>Member name LanguageBarrierCallQueue</summary>
			public static readonly string LanguageBarrierCallQueue = "LanguageBarrierCallQueue";
			/// <summary>Member name MailRoundCallQueue</summary>
			public static readonly string MailRoundCallQueue = "MailRoundCallQueue";
			/// <summary>Member name MarketingPrintOrder</summary>
			public static readonly string MarketingPrintOrder = "MarketingPrintOrder";
			/// <summary>Member name Medication_</summary>
			public static readonly string Medication_ = "Medication_";
			/// <summary>Member name Medication</summary>
			public static readonly string Medication = "Medication";
			/// <summary>Member name MedicationUpload</summary>
			public static readonly string MedicationUpload = "MedicationUpload";
			/// <summary>Member name MergeCustomerUpload</summary>
			public static readonly string MergeCustomerUpload = "MergeCustomerUpload";
			/// <summary>Member name NoShowCallQueue</summary>
			public static readonly string NoShowCallQueue = "NoShowCallQueue";
			/// <summary>Member name NotesDetails_</summary>
			public static readonly string NotesDetails_ = "NotesDetails_";
			/// <summary>Member name NotesDetails</summary>
			public static readonly string NotesDetails = "NotesDetails";
			/// <summary>Member name Notification</summary>
			public static readonly string Notification = "Notification";
			/// <summary>Member name NotificationType</summary>
			public static readonly string NotificationType = "NotificationType";
			/// <summary>Member name OrganizationRoleUserTerritory</summary>
			public static readonly string OrganizationRoleUserTerritory = "OrganizationRoleUserTerritory";
			/// <summary>Member name OrgRoleUserActivity</summary>
			public static readonly string OrgRoleUserActivity = "OrgRoleUserActivity";
			/// <summary>Member name ParticipationConsentSignature</summary>
			public static readonly string ParticipationConsentSignature = "ParticipationConsentSignature";
			/// <summary>Member name PasswordChangelog</summary>
			public static readonly string PasswordChangelog = "PasswordChangelog";
			/// <summary>Member name PayPeriod_</summary>
			public static readonly string PayPeriod_ = "PayPeriod_";
			/// <summary>Member name PayPeriod</summary>
			public static readonly string PayPeriod = "PayPeriod";
			/// <summary>Member name PcpAppointment_</summary>
			public static readonly string PcpAppointment_ = "PcpAppointment_";
			/// <summary>Member name PcpAppointment</summary>
			public static readonly string PcpAppointment = "PcpAppointment";
			/// <summary>Member name PcpDisposition_</summary>
			public static readonly string PcpDisposition_ = "PcpDisposition_";
			/// <summary>Member name PcpDisposition</summary>
			public static readonly string PcpDisposition = "PcpDisposition";
			/// <summary>Member name PhysicianRecordRequestSignature</summary>
			public static readonly string PhysicianRecordRequestSignature = "PhysicianRecordRequestSignature";
			/// <summary>Member name PinChangelog</summary>
			public static readonly string PinChangelog = "PinChangelog";
			/// <summary>Member name PodDefaultTeam</summary>
			public static readonly string PodDefaultTeam = "PodDefaultTeam";
			/// <summary>Member name PreApprovedPackage</summary>
			public static readonly string PreApprovedPackage = "PreApprovedPackage";
			/// <summary>Member name PreApprovedTest</summary>
			public static readonly string PreApprovedTest = "PreApprovedTest";
			/// <summary>Member name PreAssessmentCallQueueCustomerLock</summary>
			public static readonly string PreAssessmentCallQueueCustomerLock = "PreAssessmentCallQueueCustomerLock";
			/// <summary>Member name PreAssessmentCustomerCallQueueCallAttempt</summary>
			public static readonly string PreAssessmentCustomerCallQueueCallAttempt = "PreAssessmentCustomerCallQueueCallAttempt";
			/// <summary>Member name PreQualificationQuestion</summary>
			public static readonly string PreQualificationQuestion = "PreQualificationQuestion";
			/// <summary>Member name PreQualificationTestTemplate_</summary>
			public static readonly string PreQualificationTestTemplate_ = "PreQualificationTestTemplate_";
			/// <summary>Member name PreQualificationTestTemplate</summary>
			public static readonly string PreQualificationTestTemplate = "PreQualificationTestTemplate";
			/// <summary>Member name PrintOrderItemTracking_</summary>
			public static readonly string PrintOrderItemTracking_ = "PrintOrderItemTracking_";
			/// <summary>Member name PrintOrderItemTracking</summary>
			public static readonly string PrintOrderItemTracking = "PrintOrderItemTracking";
			/// <summary>Member name PriorityInQueue_</summary>
			public static readonly string PriorityInQueue_ = "PriorityInQueue_";
			/// <summary>Member name PriorityInQueue</summary>
			public static readonly string PriorityInQueue = "PriorityInQueue";
			/// <summary>Member name ProspectCustomer</summary>
			public static readonly string ProspectCustomer = "ProspectCustomer";
			/// <summary>Member name Prospects</summary>
			public static readonly string Prospects = "Prospects";
			/// <summary>Member name RapsUpload</summary>
			public static readonly string RapsUpload = "RapsUpload";
			/// <summary>Member name Referral</summary>
			public static readonly string Referral = "Referral";
			/// <summary>Member name RefundRequest_</summary>
			public static readonly string RefundRequest_ = "RefundRequest_";
			/// <summary>Member name RefundRequest</summary>
			public static readonly string RefundRequest = "RefundRequest";
			/// <summary>Member name RequiredTest</summary>
			public static readonly string RequiredTest = "RequiredTest";
			/// <summary>Member name SalesRepPodAssigments</summary>
			public static readonly string SalesRepPodAssigments = "SalesRepPodAssigments";
			/// <summary>Member name ScheduleTemplate_</summary>
			public static readonly string ScheduleTemplate_ = "ScheduleTemplate_";
			/// <summary>Member name ScheduleTemplate</summary>
			public static readonly string ScheduleTemplate = "ScheduleTemplate";
			/// <summary>Member name Seminars</summary>
			public static readonly string Seminars = "Seminars";
			/// <summary>Member name ShippingDetail_</summary>
			public static readonly string ShippingDetail_ = "ShippingDetail_";
			/// <summary>Member name ShippingDetail</summary>
			public static readonly string ShippingDetail = "ShippingDetail";
			/// <summary>Member name SourceCodeChangeLog</summary>
			public static readonly string SourceCodeChangeLog = "SourceCodeChangeLog";
			/// <summary>Member name StaffEventScheduleUpload</summary>
			public static readonly string StaffEventScheduleUpload = "StaffEventScheduleUpload";
			/// <summary>Member name SurveyAnswer_</summary>
			public static readonly string SurveyAnswer_ = "SurveyAnswer_";
			/// <summary>Member name SurveyAnswer</summary>
			public static readonly string SurveyAnswer = "SurveyAnswer";
			/// <summary>Member name SurveyTemplate_</summary>
			public static readonly string SurveyTemplate_ = "SurveyTemplate_";
			/// <summary>Member name SurveyTemplate</summary>
			public static readonly string SurveyTemplate = "SurveyTemplate";
			/// <summary>Member name SuspectConditionUpload</summary>
			public static readonly string SuspectConditionUpload = "SuspectConditionUpload";
			/// <summary>Member name SystemGenertedCallQueueCriteria__</summary>
			public static readonly string SystemGenertedCallQueueCriteria__ = "SystemGenertedCallQueueCriteria__";
			/// <summary>Member name SystemGenertedCallQueueCriteria_</summary>
			public static readonly string SystemGenertedCallQueueCriteria_ = "SystemGenertedCallQueueCriteria_";
			/// <summary>Member name SystemGenertedCallQueueCriteria</summary>
			public static readonly string SystemGenertedCallQueueCriteria = "SystemGenertedCallQueueCriteria";
			/// <summary>Member name TaskDetails__</summary>
			public static readonly string TaskDetails__ = "TaskDetails__";
			/// <summary>Member name TaskDetails_</summary>
			public static readonly string TaskDetails_ = "TaskDetails_";
			/// <summary>Member name TaskDetails</summary>
			public static readonly string TaskDetails = "TaskDetails";
			/// <summary>Member name Territory</summary>
			public static readonly string Territory = "Territory";
			/// <summary>Member name TestHcpcsCode_</summary>
			public static readonly string TestHcpcsCode_ = "TestHcpcsCode_";
			/// <summary>Member name TestHcpcsCode</summary>
			public static readonly string TestHcpcsCode = "TestHcpcsCode";
			/// <summary>Member name TestNotPerformed_</summary>
			public static readonly string TestNotPerformed_ = "TestNotPerformed_";
			/// <summary>Member name TestNotPerformed</summary>
			public static readonly string TestNotPerformed = "TestNotPerformed";
			/// <summary>Member name TestNotPerformedReason</summary>
			public static readonly string TestNotPerformedReason = "TestNotPerformedReason";
			/// <summary>Member name TestPerformedExternally_</summary>
			public static readonly string TestPerformedExternally_ = "TestPerformedExternally_";
			/// <summary>Member name TestPerformedExternally</summary>
			public static readonly string TestPerformedExternally = "TestPerformedExternally";
			/// <summary>Member name UncontactedCustomerCallQueue</summary>
			public static readonly string UncontactedCustomerCallQueue = "UncontactedCustomerCallQueue";
			/// <summary>Member name UploadZipInfo</summary>
			public static readonly string UploadZipInfo = "UploadZipInfo";
			/// <summary>Member name User__</summary>
			public static readonly string User__ = "User__";
			/// <summary>Member name User_</summary>
			public static readonly string User_ = "User_";
			/// <summary>Member name AccountCollectionViaFillEventCallQueue</summary>
			public static readonly string AccountCollectionViaFillEventCallQueue = "AccountCollectionViaFillEventCallQueue";
			/// <summary>Member name AccountCollectionViaMailRoundCallQueue</summary>
			public static readonly string AccountCollectionViaMailRoundCallQueue = "AccountCollectionViaMailRoundCallQueue";
			/// <summary>Member name AccountCollectionViaEligibilityUpload</summary>
			public static readonly string AccountCollectionViaEligibilityUpload = "AccountCollectionViaEligibilityUpload";
			/// <summary>Member name AccountCollectionViaCorporateUpload</summary>
			public static readonly string AccountCollectionViaCorporateUpload = "AccountCollectionViaCorporateUpload";
			/// <summary>Member name AccountCollectionViaHealthPlanCallQueueCriteria</summary>
			public static readonly string AccountCollectionViaHealthPlanCallQueueCriteria = "AccountCollectionViaHealthPlanCallQueueCriteria";
			/// <summary>Member name AccountCollectionViaCallQueueCustomer_</summary>
			public static readonly string AccountCollectionViaCallQueueCustomer_ = "AccountCollectionViaCallQueueCustomer_";
			/// <summary>Member name AccountCollectionViaCallQueueCustomer</summary>
			public static readonly string AccountCollectionViaCallQueueCustomer = "AccountCollectionViaCallQueueCustomer";
			/// <summary>Member name AccountCollectionViaCallQueueCustomer__</summary>
			public static readonly string AccountCollectionViaCallQueueCustomer__ = "AccountCollectionViaCallQueueCustomer__";
			/// <summary>Member name AccountCollectionViaHealthPlanRevenue</summary>
			public static readonly string AccountCollectionViaHealthPlanRevenue = "AccountCollectionViaHealthPlanRevenue";
			/// <summary>Member name AccountCollectionViaHealthPlanRevenue_</summary>
			public static readonly string AccountCollectionViaHealthPlanRevenue_ = "AccountCollectionViaHealthPlanRevenue_";
			/// <summary>Member name AccountCollectionViaCorporateTag_</summary>
			public static readonly string AccountCollectionViaCorporateTag_ = "AccountCollectionViaCorporateTag_";
			/// <summary>Member name AccountCollectionViaLanguageBarrierCallQueue</summary>
			public static readonly string AccountCollectionViaLanguageBarrierCallQueue = "AccountCollectionViaLanguageBarrierCallQueue";
			/// <summary>Member name AccountCollectionViaEventNote</summary>
			public static readonly string AccountCollectionViaEventNote = "AccountCollectionViaEventNote";
			/// <summary>Member name AccountCollectionViaCampaign</summary>
			public static readonly string AccountCollectionViaCampaign = "AccountCollectionViaCampaign";
			/// <summary>Member name AccountCollectionViaEventNote_</summary>
			public static readonly string AccountCollectionViaEventNote_ = "AccountCollectionViaEventNote_";
			/// <summary>Member name AccountCollectionViaCampaign_</summary>
			public static readonly string AccountCollectionViaCampaign_ = "AccountCollectionViaCampaign_";
			/// <summary>Member name AccountCollectionViaHealthPlanCallQueueCriteria_</summary>
			public static readonly string AccountCollectionViaHealthPlanCallQueueCriteria_ = "AccountCollectionViaHealthPlanCallQueueCriteria_";
			/// <summary>Member name AccountCollectionViaCorporateTag</summary>
			public static readonly string AccountCollectionViaCorporateTag = "AccountCollectionViaCorporateTag";
			/// <summary>Member name AccountCollectionViaCallQueueCustomTag</summary>
			public static readonly string AccountCollectionViaCallQueueCustomTag = "AccountCollectionViaCallQueueCustomTag";
			/// <summary>Member name AccountCollectionViaCalls</summary>
			public static readonly string AccountCollectionViaCalls = "AccountCollectionViaCalls";
			/// <summary>Member name AccountCollectionViaCallRoundCallQueue</summary>
			public static readonly string AccountCollectionViaCallRoundCallQueue = "AccountCollectionViaCallRoundCallQueue";
			/// <summary>Member name AccountCollectionViaAccountHraChatQuestionnaire_</summary>
			public static readonly string AccountCollectionViaAccountHraChatQuestionnaire_ = "AccountCollectionViaAccountHraChatQuestionnaire_";
			/// <summary>Member name AccountCollectionViaAccountHraChatQuestionnaire</summary>
			public static readonly string AccountCollectionViaAccountHraChatQuestionnaire = "AccountCollectionViaAccountHraChatQuestionnaire";
			/// <summary>Member name AccountCollectionViaUncontactedCustomerCallQueue</summary>
			public static readonly string AccountCollectionViaUncontactedCustomerCallQueue = "AccountCollectionViaUncontactedCustomerCallQueue";
			/// <summary>Member name AccountCollectionViaCustomEventNotification</summary>
			public static readonly string AccountCollectionViaCustomEventNotification = "AccountCollectionViaCustomEventNotification";
			/// <summary>Member name AccountCollectionViaNoShowCallQueue</summary>
			public static readonly string AccountCollectionViaNoShowCallQueue = "AccountCollectionViaNoShowCallQueue";
			/// <summary>Member name AccountCollectionViaAccountCallCenterOrganization_</summary>
			public static readonly string AccountCollectionViaAccountCallCenterOrganization_ = "AccountCollectionViaAccountCallCenterOrganization_";
			/// <summary>Member name AccountCollectionViaAccountCallCenterOrganization</summary>
			public static readonly string AccountCollectionViaAccountCallCenterOrganization = "AccountCollectionViaAccountCallCenterOrganization";
			/// <summary>Member name ActivityCollectionViaOrgRoleUserActivity</summary>
			public static readonly string ActivityCollectionViaOrgRoleUserActivity = "ActivityCollectionViaOrgRoleUserActivity";
			/// <summary>Member name ActivityTypeCollectionViaCallQueueCustomer</summary>
			public static readonly string ActivityTypeCollectionViaCallQueueCustomer = "ActivityTypeCollectionViaCallQueueCustomer";
			/// <summary>Member name ActivityTypeCollectionViaCallQueueCustomer__</summary>
			public static readonly string ActivityTypeCollectionViaCallQueueCustomer__ = "ActivityTypeCollectionViaCallQueueCustomer__";
			/// <summary>Member name ActivityTypeCollectionViaCallQueueCustomer_</summary>
			public static readonly string ActivityTypeCollectionViaCallQueueCustomer_ = "ActivityTypeCollectionViaCallQueueCustomer_";
			/// <summary>Member name AddressCollectionViaCustomerPrimaryCarePhysician_</summary>
			public static readonly string AddressCollectionViaCustomerPrimaryCarePhysician_ = "AddressCollectionViaCustomerPrimaryCarePhysician_";
			/// <summary>Member name AddressCollectionViaProspects</summary>
			public static readonly string AddressCollectionViaProspects = "AddressCollectionViaProspects";
			/// <summary>Member name AddressCollectionViaCustomerPrimaryCarePhysician___</summary>
			public static readonly string AddressCollectionViaCustomerPrimaryCarePhysician___ = "AddressCollectionViaCustomerPrimaryCarePhysician___";
			/// <summary>Member name AddressCollectionViaCustomerPrimaryCarePhysician____</summary>
			public static readonly string AddressCollectionViaCustomerPrimaryCarePhysician____ = "AddressCollectionViaCustomerPrimaryCarePhysician____";
			/// <summary>Member name AddressCollectionViaUser</summary>
			public static readonly string AddressCollectionViaUser = "AddressCollectionViaUser";
			/// <summary>Member name AddressCollectionViaUser_</summary>
			public static readonly string AddressCollectionViaUser_ = "AddressCollectionViaUser_";
			/// <summary>Member name AddressCollectionViaShippingDetail</summary>
			public static readonly string AddressCollectionViaShippingDetail = "AddressCollectionViaShippingDetail";
			/// <summary>Member name AddressCollectionViaHostPayment</summary>
			public static readonly string AddressCollectionViaHostPayment = "AddressCollectionViaHostPayment";
			/// <summary>Member name AddressCollectionViaShippingDetail_</summary>
			public static readonly string AddressCollectionViaShippingDetail_ = "AddressCollectionViaShippingDetail_";
			/// <summary>Member name AddressCollectionViaCustomerPrimaryCarePhysician</summary>
			public static readonly string AddressCollectionViaCustomerPrimaryCarePhysician = "AddressCollectionViaCustomerPrimaryCarePhysician";
			/// <summary>Member name AddressCollectionViaCustomerPrimaryCarePhysician__</summary>
			public static readonly string AddressCollectionViaCustomerPrimaryCarePhysician__ = "AddressCollectionViaCustomerPrimaryCarePhysician__";
			/// <summary>Member name AddressCollectionViaCustomerPrimaryCarePhysician_____</summary>
			public static readonly string AddressCollectionViaCustomerPrimaryCarePhysician_____ = "AddressCollectionViaCustomerPrimaryCarePhysician_____";
			/// <summary>Member name AfadvertiserCollectionViaAfcampaign</summary>
			public static readonly string AfadvertiserCollectionViaAfcampaign = "AfadvertiserCollectionViaAfcampaign";
			/// <summary>Member name AfadvertiserCollectionViaAfcampaign_</summary>
			public static readonly string AfadvertiserCollectionViaAfcampaign_ = "AfadvertiserCollectionViaAfcampaign_";
			/// <summary>Member name AfaffiliateCampaignCollectionViaEventCustomers</summary>
			public static readonly string AfaffiliateCampaignCollectionViaEventCustomers = "AfaffiliateCampaignCollectionViaEventCustomers";
			/// <summary>Member name AfaffiliateCampaignCollectionViaEventCustomers_</summary>
			public static readonly string AfaffiliateCampaignCollectionViaEventCustomers_ = "AfaffiliateCampaignCollectionViaEventCustomers_";
			/// <summary>Member name AfaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer</summary>
			public static readonly string AfaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer = "AfaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer";
			/// <summary>Member name CallCenterTeamCollectionViaCallCenterAgentTeam</summary>
			public static readonly string CallCenterTeamCollectionViaCallCenterAgentTeam = "CallCenterTeamCollectionViaCallCenterAgentTeam";
			/// <summary>Member name CallCenterTeamCollectionViaCallCenterAgentTeamLog</summary>
			public static readonly string CallCenterTeamCollectionViaCallCenterAgentTeamLog = "CallCenterTeamCollectionViaCallCenterAgentTeamLog";
			/// <summary>Member name CallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_</summary>
			public static readonly string CallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_ = "CallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_";
			/// <summary>Member name CallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment</summary>
			public static readonly string CallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment = "CallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment";
			/// <summary>Member name CallCenterTeamCollectionViaCallCenterAgentTeamLog_</summary>
			public static readonly string CallCenterTeamCollectionViaCallCenterAgentTeamLog_ = "CallCenterTeamCollectionViaCallCenterAgentTeamLog_";
			/// <summary>Member name CallCenterTeamCollectionViaCallCenterAgentTeamLog__</summary>
			public static readonly string CallCenterTeamCollectionViaCallCenterAgentTeamLog__ = "CallCenterTeamCollectionViaCallCenterAgentTeamLog__";
			/// <summary>Member name CallQueueCollectionViaCallQueueCustomer_</summary>
			public static readonly string CallQueueCollectionViaCallQueueCustomer_ = "CallQueueCollectionViaCallQueueCustomer_";
			/// <summary>Member name CallQueueCollectionViaHealthPlanCallQueueCriteria__</summary>
			public static readonly string CallQueueCollectionViaHealthPlanCallQueueCriteria__ = "CallQueueCollectionViaHealthPlanCallQueueCriteria__";
			/// <summary>Member name CallQueueCollectionViaCallQueueCustomer</summary>
			public static readonly string CallQueueCollectionViaCallQueueCustomer = "CallQueueCollectionViaCallQueueCustomer";
			/// <summary>Member name CallQueueCollectionViaCalls</summary>
			public static readonly string CallQueueCollectionViaCalls = "CallQueueCollectionViaCalls";
			/// <summary>Member name CallQueueCollectionViaCallQueueAssignment</summary>
			public static readonly string CallQueueCollectionViaCallQueueAssignment = "CallQueueCollectionViaCallQueueAssignment";
			/// <summary>Member name CallQueueCollectionViaSystemGenertedCallQueueCriteria__</summary>
			public static readonly string CallQueueCollectionViaSystemGenertedCallQueueCriteria__ = "CallQueueCollectionViaSystemGenertedCallQueueCriteria__";
			/// <summary>Member name CallQueueCollectionViaSystemGenertedCallQueueCriteria_</summary>
			public static readonly string CallQueueCollectionViaSystemGenertedCallQueueCriteria_ = "CallQueueCollectionViaSystemGenertedCallQueueCriteria_";
			/// <summary>Member name CallQueueCollectionViaCallQueueCustomer__</summary>
			public static readonly string CallQueueCollectionViaCallQueueCustomer__ = "CallQueueCollectionViaCallQueueCustomer__";
			/// <summary>Member name CallQueueCollectionViaHealthPlanCallQueueCriteria_</summary>
			public static readonly string CallQueueCollectionViaHealthPlanCallQueueCriteria_ = "CallQueueCollectionViaHealthPlanCallQueueCriteria_";
			/// <summary>Member name CallQueueCollectionViaSystemGenertedCallQueueCriteria</summary>
			public static readonly string CallQueueCollectionViaSystemGenertedCallQueueCriteria = "CallQueueCollectionViaSystemGenertedCallQueueCriteria";
			/// <summary>Member name CallQueueCriteriaCollectionViaCallQueueCustomer</summary>
			public static readonly string CallQueueCriteriaCollectionViaCallQueueCustomer = "CallQueueCriteriaCollectionViaCallQueueCustomer";
			/// <summary>Member name CallQueueCriteriaCollectionViaCallQueueCustomer__</summary>
			public static readonly string CallQueueCriteriaCollectionViaCallQueueCustomer__ = "CallQueueCriteriaCollectionViaCallQueueCustomer__";
			/// <summary>Member name CallQueueCriteriaCollectionViaCallQueueCustomer_</summary>
			public static readonly string CallQueueCriteriaCollectionViaCallQueueCustomer_ = "CallQueueCriteriaCollectionViaCallQueueCustomer_";
			/// <summary>Member name CallQueueCustomerCollectionViaCustomerCallQueueCallAttempt</summary>
			public static readonly string CallQueueCustomerCollectionViaCustomerCallQueueCallAttempt = "CallQueueCustomerCollectionViaCustomerCallQueueCallAttempt";
			/// <summary>Member name CallsCollectionViaCustomerCallQueueCallAttempt</summary>
			public static readonly string CallsCollectionViaCustomerCallQueueCallAttempt = "CallsCollectionViaCustomerCallQueueCallAttempt";
			/// <summary>Member name CallsCollectionViaPreAssessmentCustomerCallQueueCallAttempt</summary>
			public static readonly string CallsCollectionViaPreAssessmentCustomerCallQueueCallAttempt = "CallsCollectionViaPreAssessmentCustomerCallQueueCallAttempt";
			/// <summary>Member name CallUploadCollectionViaDirectMail</summary>
			public static readonly string CallUploadCollectionViaDirectMail = "CallUploadCollectionViaDirectMail";
			/// <summary>Member name CampaignCollectionViaCallQueueCustomer__</summary>
			public static readonly string CampaignCollectionViaCallQueueCustomer__ = "CampaignCollectionViaCallQueueCustomer__";
			/// <summary>Member name CampaignCollectionViaCampaignAssignment</summary>
			public static readonly string CampaignCollectionViaCampaignAssignment = "CampaignCollectionViaCampaignAssignment";
			/// <summary>Member name CampaignCollectionViaCallQueueCustomer</summary>
			public static readonly string CampaignCollectionViaCallQueueCustomer = "CampaignCollectionViaCallQueueCustomer";
			/// <summary>Member name CampaignCollectionViaCampaignActivity_</summary>
			public static readonly string CampaignCollectionViaCampaignActivity_ = "CampaignCollectionViaCampaignActivity_";
			/// <summary>Member name CampaignCollectionViaHealthPlanCallQueueCriteria_</summary>
			public static readonly string CampaignCollectionViaHealthPlanCallQueueCriteria_ = "CampaignCollectionViaHealthPlanCallQueueCriteria_";
			/// <summary>Member name CampaignCollectionViaCampaignActivity</summary>
			public static readonly string CampaignCollectionViaCampaignActivity = "CampaignCollectionViaCampaignActivity";
			/// <summary>Member name CampaignCollectionViaCalls</summary>
			public static readonly string CampaignCollectionViaCalls = "CampaignCollectionViaCalls";
			/// <summary>Member name CampaignCollectionViaEventCustomers_</summary>
			public static readonly string CampaignCollectionViaEventCustomers_ = "CampaignCollectionViaEventCustomers_";
			/// <summary>Member name CampaignCollectionViaHealthPlanCallQueueCriteria</summary>
			public static readonly string CampaignCollectionViaHealthPlanCallQueueCriteria = "CampaignCollectionViaHealthPlanCallQueueCriteria";
			/// <summary>Member name CampaignCollectionViaDirectMail</summary>
			public static readonly string CampaignCollectionViaDirectMail = "CampaignCollectionViaDirectMail";
			/// <summary>Member name CampaignCollectionViaCallQueueCustomer_</summary>
			public static readonly string CampaignCollectionViaCallQueueCustomer_ = "CampaignCollectionViaCallQueueCustomer_";
			/// <summary>Member name CampaignCollectionViaEventCustomers</summary>
			public static readonly string CampaignCollectionViaEventCustomers = "CampaignCollectionViaEventCustomers";
			/// <summary>Member name CampaignActivityCollectionViaCampaignActivityAssignment</summary>
			public static readonly string CampaignActivityCollectionViaCampaignActivityAssignment = "CampaignActivityCollectionViaCampaignActivityAssignment";
			/// <summary>Member name ChaperoneQuestionCollectionViaChaperoneAnswer</summary>
			public static readonly string ChaperoneQuestionCollectionViaChaperoneAnswer = "ChaperoneQuestionCollectionViaChaperoneAnswer";
			/// <summary>Member name ChaperoneQuestionCollectionViaChaperoneAnswer_</summary>
			public static readonly string ChaperoneQuestionCollectionViaChaperoneAnswer_ = "ChaperoneQuestionCollectionViaChaperoneAnswer_";
			/// <summary>Member name CheckListQuestionCollectionViaCheckListAnswer_</summary>
			public static readonly string CheckListQuestionCollectionViaCheckListAnswer_ = "CheckListQuestionCollectionViaCheckListAnswer_";
			/// <summary>Member name CheckListQuestionCollectionViaCheckListAnswer</summary>
			public static readonly string CheckListQuestionCollectionViaCheckListAnswer = "CheckListQuestionCollectionViaCheckListAnswer";
			/// <summary>Member name CheckListQuestionCollectionViaExitInterviewSignature</summary>
			public static readonly string CheckListQuestionCollectionViaExitInterviewSignature = "CheckListQuestionCollectionViaExitInterviewSignature";
			/// <summary>Member name CityCollectionViaAddress</summary>
			public static readonly string CityCollectionViaAddress = "CityCollectionViaAddress";
			/// <summary>Member name CommunicationModeCollectionViaEvents____</summary>
			public static readonly string CommunicationModeCollectionViaEvents____ = "CommunicationModeCollectionViaEvents____";
			/// <summary>Member name CommunicationModeCollectionViaEvents</summary>
			public static readonly string CommunicationModeCollectionViaEvents = "CommunicationModeCollectionViaEvents";
			/// <summary>Member name CommunicationModeCollectionViaEvents___</summary>
			public static readonly string CommunicationModeCollectionViaEvents___ = "CommunicationModeCollectionViaEvents___";
			/// <summary>Member name CommunicationModeCollectionViaEvents__</summary>
			public static readonly string CommunicationModeCollectionViaEvents__ = "CommunicationModeCollectionViaEvents__";
			/// <summary>Member name CommunicationModeCollectionViaEvents_</summary>
			public static readonly string CommunicationModeCollectionViaEvents_ = "CommunicationModeCollectionViaEvents_";
			/// <summary>Member name ContactCallStatusCollectionViaContactCall</summary>
			public static readonly string ContactCallStatusCollectionViaContactCall = "ContactCallStatusCollectionViaContactCall";
			/// <summary>Member name ContactCallStatusCollectionViaContactCall_</summary>
			public static readonly string ContactCallStatusCollectionViaContactCall_ = "ContactCallStatusCollectionViaContactCall_";
			/// <summary>Member name ContactCallStatusCollectionViaContactMeeting_</summary>
			public static readonly string ContactCallStatusCollectionViaContactMeeting_ = "ContactCallStatusCollectionViaContactMeeting_";
			/// <summary>Member name ContactCallStatusCollectionViaContactMeeting</summary>
			public static readonly string ContactCallStatusCollectionViaContactMeeting = "ContactCallStatusCollectionViaContactMeeting";
			/// <summary>Member name CountryCollectionViaAddress</summary>
			public static readonly string CountryCollectionViaAddress = "CountryCollectionViaAddress";
			/// <summary>Member name CouponTypeCollectionViaCoupons_</summary>
			public static readonly string CouponTypeCollectionViaCoupons_ = "CouponTypeCollectionViaCoupons_";
			/// <summary>Member name CouponTypeCollectionViaCoupons</summary>
			public static readonly string CouponTypeCollectionViaCoupons = "CouponTypeCollectionViaCoupons";
			/// <summary>Member name CustomerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation</summary>
			public static readonly string CustomerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation = "CustomerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation";
			/// <summary>Member name CustomerEventScreeningTestsCollectionViaTestPerformedExternally_</summary>
			public static readonly string CustomerEventScreeningTestsCollectionViaTestPerformedExternally_ = "CustomerEventScreeningTestsCollectionViaTestPerformedExternally_";
			/// <summary>Member name CustomerEventScreeningTestsCollectionViaCustomerEventTestState</summary>
			public static readonly string CustomerEventScreeningTestsCollectionViaCustomerEventTestState = "CustomerEventScreeningTestsCollectionViaCustomerEventTestState";
			/// <summary>Member name CustomerEventScreeningTestsCollectionViaCustomerEventTestState_</summary>
			public static readonly string CustomerEventScreeningTestsCollectionViaCustomerEventTestState_ = "CustomerEventScreeningTestsCollectionViaCustomerEventTestState_";
			/// <summary>Member name CustomerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason</summary>
			public static readonly string CustomerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason = "CustomerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason";
			/// <summary>Member name CustomerEventScreeningTestsCollectionViaCustomerEventTestState__</summary>
			public static readonly string CustomerEventScreeningTestsCollectionViaCustomerEventTestState__ = "CustomerEventScreeningTestsCollectionViaCustomerEventTestState__";
			/// <summary>Member name CustomerEventScreeningTestsCollectionViaTestPerformedExternally</summary>
			public static readonly string CustomerEventScreeningTestsCollectionViaTestPerformedExternally = "CustomerEventScreeningTestsCollectionViaTestPerformedExternally";
			/// <summary>Member name CustomerEventScreeningTestsCollectionViaCustomerEventReading</summary>
			public static readonly string CustomerEventScreeningTestsCollectionViaCustomerEventReading = "CustomerEventScreeningTestsCollectionViaCustomerEventReading";
			/// <summary>Member name CustomerEventScreeningTestsCollectionViaTestNotPerformed</summary>
			public static readonly string CustomerEventScreeningTestsCollectionViaTestNotPerformed = "CustomerEventScreeningTestsCollectionViaTestNotPerformed";
			/// <summary>Member name CustomerEventScreeningTestsCollectionViaTestNotPerformed_</summary>
			public static readonly string CustomerEventScreeningTestsCollectionViaTestNotPerformed_ = "CustomerEventScreeningTestsCollectionViaTestNotPerformed_";
			/// <summary>Member name CustomerHealthQuestionsCollectionViaCustomerHealthInfo</summary>
			public static readonly string CustomerHealthQuestionsCollectionViaCustomerHealthInfo = "CustomerHealthQuestionsCollectionViaCustomerHealthInfo";
			/// <summary>Member name CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_</summary>
			public static readonly string CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_ = "CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_";
			/// <summary>Member name CustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_</summary>
			public static readonly string CustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_ = "CustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_";
			/// <summary>Member name CustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer</summary>
			public static readonly string CustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer = "CustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer";
			/// <summary>Member name CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__</summary>
			public static readonly string CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__ = "CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__";
			/// <summary>Member name CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___</summary>
			public static readonly string CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___ = "CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___";
			/// <summary>Member name CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria</summary>
			public static readonly string CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria = "CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria";
			/// <summary>Member name CustomerHealthQuestionsCollectionViaCustomerHealthInfoArchive</summary>
			public static readonly string CustomerHealthQuestionsCollectionViaCustomerHealthInfoArchive = "CustomerHealthQuestionsCollectionViaCustomerHealthInfoArchive";
			/// <summary>Member name CustomerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician</summary>
			public static readonly string CustomerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician = "CustomerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician";
			/// <summary>Member name CustomerProfileCollectionViaFillEventCallQueue</summary>
			public static readonly string CustomerProfileCollectionViaFillEventCallQueue = "CustomerProfileCollectionViaFillEventCallQueue";
			/// <summary>Member name CustomerProfileCollectionViaDisqualifiedTest_</summary>
			public static readonly string CustomerProfileCollectionViaDisqualifiedTest_ = "CustomerProfileCollectionViaDisqualifiedTest_";
			/// <summary>Member name CustomerProfileCollectionViaCustomerEligibility_</summary>
			public static readonly string CustomerProfileCollectionViaCustomerEligibility_ = "CustomerProfileCollectionViaCustomerEligibility_";
			/// <summary>Member name CustomerProfileCollectionViaEventCustomerResult_____</summary>
			public static readonly string CustomerProfileCollectionViaEventCustomerResult_____ = "CustomerProfileCollectionViaEventCustomerResult_____";
			/// <summary>Member name CustomerProfileCollectionViaCustomerEligibility</summary>
			public static readonly string CustomerProfileCollectionViaCustomerEligibility = "CustomerProfileCollectionViaCustomerEligibility";
			/// <summary>Member name CustomerProfileCollectionViaLanguageBarrierCallQueue</summary>
			public static readonly string CustomerProfileCollectionViaLanguageBarrierCallQueue = "CustomerProfileCollectionViaLanguageBarrierCallQueue";
			/// <summary>Member name CustomerProfileCollectionViaEventCustomerQuestionAnswer</summary>
			public static readonly string CustomerProfileCollectionViaEventCustomerQuestionAnswer = "CustomerProfileCollectionViaEventCustomerQuestionAnswer";
			/// <summary>Member name CustomerProfileCollectionViaHospitalPartnerCustomer_</summary>
			public static readonly string CustomerProfileCollectionViaHospitalPartnerCustomer_ = "CustomerProfileCollectionViaHospitalPartnerCustomer_";
			/// <summary>Member name CustomerProfileCollectionViaHospitalPartnerCustomer__</summary>
			public static readonly string CustomerProfileCollectionViaHospitalPartnerCustomer__ = "CustomerProfileCollectionViaHospitalPartnerCustomer__";
			/// <summary>Member name CustomerProfileCollectionViaHospitalPartnerCustomer</summary>
			public static readonly string CustomerProfileCollectionViaHospitalPartnerCustomer = "CustomerProfileCollectionViaHospitalPartnerCustomer";
			/// <summary>Member name CustomerProfileCollectionViaDisqualifiedTest</summary>
			public static readonly string CustomerProfileCollectionViaDisqualifiedTest = "CustomerProfileCollectionViaDisqualifiedTest";
			/// <summary>Member name CustomerProfileCollectionViaCustomerPrimaryCarePhysician_</summary>
			public static readonly string CustomerProfileCollectionViaCustomerPrimaryCarePhysician_ = "CustomerProfileCollectionViaCustomerPrimaryCarePhysician_";
			/// <summary>Member name CustomerProfileCollectionViaCustomerPrimaryCarePhysician__</summary>
			public static readonly string CustomerProfileCollectionViaCustomerPrimaryCarePhysician__ = "CustomerProfileCollectionViaCustomerPrimaryCarePhysician__";
			/// <summary>Member name CustomerProfileCollectionViaNoShowCallQueue</summary>
			public static readonly string CustomerProfileCollectionViaNoShowCallQueue = "CustomerProfileCollectionViaNoShowCallQueue";
			/// <summary>Member name CustomerProfileCollectionViaCustomerPrimaryCarePhysician</summary>
			public static readonly string CustomerProfileCollectionViaCustomerPrimaryCarePhysician = "CustomerProfileCollectionViaCustomerPrimaryCarePhysician";
			/// <summary>Member name CustomerProfileCollectionViaCallQueueCustomer</summary>
			public static readonly string CustomerProfileCollectionViaCallQueueCustomer = "CustomerProfileCollectionViaCallQueueCustomer";
			/// <summary>Member name CustomerProfileCollectionViaCustomerHealthInfo</summary>
			public static readonly string CustomerProfileCollectionViaCustomerHealthInfo = "CustomerProfileCollectionViaCustomerHealthInfo";
			/// <summary>Member name CustomerProfileCollectionViaCallQueueCustomer__</summary>
			public static readonly string CustomerProfileCollectionViaCallQueueCustomer__ = "CustomerProfileCollectionViaCallQueueCustomer__";
			/// <summary>Member name CustomerProfileCollectionViaCallQueueCustomer_</summary>
			public static readonly string CustomerProfileCollectionViaCallQueueCustomer_ = "CustomerProfileCollectionViaCallQueueCustomer_";
			/// <summary>Member name CustomerProfileCollectionViaEventCustomerResult______</summary>
			public static readonly string CustomerProfileCollectionViaEventCustomerResult______ = "CustomerProfileCollectionViaEventCustomerResult______";
			/// <summary>Member name CustomerProfileCollectionViaCustomerIcdCode</summary>
			public static readonly string CustomerProfileCollectionViaCustomerIcdCode = "CustomerProfileCollectionViaCustomerIcdCode";
			/// <summary>Member name CustomerProfileCollectionViaMailRoundCallQueue</summary>
			public static readonly string CustomerProfileCollectionViaMailRoundCallQueue = "CustomerProfileCollectionViaMailRoundCallQueue";
			/// <summary>Member name CustomerProfileCollectionViaCustomerHealthInfoArchive</summary>
			public static readonly string CustomerProfileCollectionViaCustomerHealthInfoArchive = "CustomerProfileCollectionViaCustomerHealthInfoArchive";
			/// <summary>Member name CustomerProfileCollectionViaEventCustomerQuestionAnswer_</summary>
			public static readonly string CustomerProfileCollectionViaEventCustomerQuestionAnswer_ = "CustomerProfileCollectionViaEventCustomerQuestionAnswer_";
			/// <summary>Member name CustomerProfileCollectionViaRequiredTest</summary>
			public static readonly string CustomerProfileCollectionViaRequiredTest = "CustomerProfileCollectionViaRequiredTest";
			/// <summary>Member name CustomerProfileCollectionViaCustomerWarmTransfer_</summary>
			public static readonly string CustomerProfileCollectionViaCustomerWarmTransfer_ = "CustomerProfileCollectionViaCustomerWarmTransfer_";
			/// <summary>Member name CustomerProfileCollectionViaProspectCustomer</summary>
			public static readonly string CustomerProfileCollectionViaProspectCustomer = "CustomerProfileCollectionViaProspectCustomer";
			/// <summary>Member name CustomerProfileCollectionViaEventCustomerResult_</summary>
			public static readonly string CustomerProfileCollectionViaEventCustomerResult_ = "CustomerProfileCollectionViaEventCustomerResult_";
			/// <summary>Member name CustomerProfileCollectionViaEventCustomerResult__</summary>
			public static readonly string CustomerProfileCollectionViaEventCustomerResult__ = "CustomerProfileCollectionViaEventCustomerResult__";
			/// <summary>Member name CustomerProfileCollectionViaUncontactedCustomerCallQueue</summary>
			public static readonly string CustomerProfileCollectionViaUncontactedCustomerCallQueue = "CustomerProfileCollectionViaUncontactedCustomerCallQueue";
			/// <summary>Member name CustomerProfileCollectionViaCustomerWarmTransfer</summary>
			public static readonly string CustomerProfileCollectionViaCustomerWarmTransfer = "CustomerProfileCollectionViaCustomerWarmTransfer";
			/// <summary>Member name CustomerProfileCollectionViaMedication_</summary>
			public static readonly string CustomerProfileCollectionViaMedication_ = "CustomerProfileCollectionViaMedication_";
			/// <summary>Member name CustomerProfileCollectionViaCallRoundCallQueue</summary>
			public static readonly string CustomerProfileCollectionViaCallRoundCallQueue = "CustomerProfileCollectionViaCallRoundCallQueue";
			/// <summary>Member name CustomerProfileCollectionViaCustomerTag_</summary>
			public static readonly string CustomerProfileCollectionViaCustomerTag_ = "CustomerProfileCollectionViaCustomerTag_";
			/// <summary>Member name CustomerProfileCollectionViaReferral</summary>
			public static readonly string CustomerProfileCollectionViaReferral = "CustomerProfileCollectionViaReferral";
			/// <summary>Member name CustomerProfileCollectionViaCustomerTargeted_</summary>
			public static readonly string CustomerProfileCollectionViaCustomerTargeted_ = "CustomerProfileCollectionViaCustomerTargeted_";
			/// <summary>Member name CustomerProfileCollectionViaCustomerTargeted</summary>
			public static readonly string CustomerProfileCollectionViaCustomerTargeted = "CustomerProfileCollectionViaCustomerTargeted";
			/// <summary>Member name CustomerProfileCollectionViaCustomerTag</summary>
			public static readonly string CustomerProfileCollectionViaCustomerTag = "CustomerProfileCollectionViaCustomerTag";
			/// <summary>Member name CustomerProfileCollectionViaMedication</summary>
			public static readonly string CustomerProfileCollectionViaMedication = "CustomerProfileCollectionViaMedication";
			/// <summary>Member name CustomerProfileCollectionViaEventCustomerResult________</summary>
			public static readonly string CustomerProfileCollectionViaEventCustomerResult________ = "CustomerProfileCollectionViaEventCustomerResult________";
			/// <summary>Member name CustomerProfileCollectionViaEventCustomerResult</summary>
			public static readonly string CustomerProfileCollectionViaEventCustomerResult = "CustomerProfileCollectionViaEventCustomerResult";
			/// <summary>Member name CustomerProfileCollectionViaEventCustomerResult_______</summary>
			public static readonly string CustomerProfileCollectionViaEventCustomerResult_______ = "CustomerProfileCollectionViaEventCustomerResult_______";
			/// <summary>Member name CustomerProfileCollectionViaDirectMail</summary>
			public static readonly string CustomerProfileCollectionViaDirectMail = "CustomerProfileCollectionViaDirectMail";
			/// <summary>Member name CustomerProfileCollectionViaEventCustomerResult____</summary>
			public static readonly string CustomerProfileCollectionViaEventCustomerResult____ = "CustomerProfileCollectionViaEventCustomerResult____";
			/// <summary>Member name CustomerProfileCollectionViaCurrentMedication</summary>
			public static readonly string CustomerProfileCollectionViaCurrentMedication = "CustomerProfileCollectionViaCurrentMedication";
			/// <summary>Member name CustomerProfileCollectionViaGuardianDetails</summary>
			public static readonly string CustomerProfileCollectionViaGuardianDetails = "CustomerProfileCollectionViaGuardianDetails";
			/// <summary>Member name CustomerProfileCollectionViaEventCustomers</summary>
			public static readonly string CustomerProfileCollectionViaEventCustomers = "CustomerProfileCollectionViaEventCustomers";
			/// <summary>Member name CustomerProfileCollectionViaEventCustomers_</summary>
			public static readonly string CustomerProfileCollectionViaEventCustomers_ = "CustomerProfileCollectionViaEventCustomers_";
			/// <summary>Member name CustomerProfileCollectionViaCustomerCallQueueCallAttempt</summary>
			public static readonly string CustomerProfileCollectionViaCustomerCallQueueCallAttempt = "CustomerProfileCollectionViaCustomerCallQueueCallAttempt";
			/// <summary>Member name CustomerProfileCollectionViaEventCustomerResult___</summary>
			public static readonly string CustomerProfileCollectionViaEventCustomerResult___ = "CustomerProfileCollectionViaEventCustomerResult___";
			/// <summary>Member name CustomerProfileCollectionViaCustomerProfileHistory</summary>
			public static readonly string CustomerProfileCollectionViaCustomerProfileHistory = "CustomerProfileCollectionViaCustomerProfileHistory";
			/// <summary>Member name CustomerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt</summary>
			public static readonly string CustomerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt = "CustomerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt";
			/// <summary>Member name CustomerProfileCollectionViaCustomerClinicalQuestionAnswer</summary>
			public static readonly string CustomerProfileCollectionViaCustomerClinicalQuestionAnswer = "CustomerProfileCollectionViaCustomerClinicalQuestionAnswer";
			/// <summary>Member name CustomerProfileCollectionViaCustomerClinicalQuestionAnswer_</summary>
			public static readonly string CustomerProfileCollectionViaCustomerClinicalQuestionAnswer_ = "CustomerProfileCollectionViaCustomerClinicalQuestionAnswer_";
			/// <summary>Member name CustomerProfileCollectionViaGuardianDetails_</summary>
			public static readonly string CustomerProfileCollectionViaGuardianDetails_ = "CustomerProfileCollectionViaGuardianDetails_";
			/// <summary>Member name CustomerProfileHistoryCollectionViaEventCustomers_</summary>
			public static readonly string CustomerProfileHistoryCollectionViaEventCustomers_ = "CustomerProfileHistoryCollectionViaEventCustomers_";
			/// <summary>Member name CustomerProfileHistoryCollectionViaEventCustomers</summary>
			public static readonly string CustomerProfileHistoryCollectionViaEventCustomers = "CustomerProfileHistoryCollectionViaEventCustomers";
			/// <summary>Member name CustomerRegistrationNotesCollectionViaEventAppointmentCancellationLog</summary>
			public static readonly string CustomerRegistrationNotesCollectionViaEventAppointmentCancellationLog = "CustomerRegistrationNotesCollectionViaEventAppointmentCancellationLog";
			/// <summary>Member name CustomerRegistrationNotesCollectionViaEventCustomers_</summary>
			public static readonly string CustomerRegistrationNotesCollectionViaEventCustomers_ = "CustomerRegistrationNotesCollectionViaEventCustomers_";
			/// <summary>Member name CustomerRegistrationNotesCollectionViaEventCustomers</summary>
			public static readonly string CustomerRegistrationNotesCollectionViaEventCustomers = "CustomerRegistrationNotesCollectionViaEventCustomers";
			/// <summary>Member name DirectMailTypeCollectionViaDirectMail</summary>
			public static readonly string DirectMailTypeCollectionViaDirectMail = "DirectMailTypeCollectionViaDirectMail";
			/// <summary>Member name DirectMailTypeCollectionViaCampaignActivity</summary>
			public static readonly string DirectMailTypeCollectionViaCampaignActivity = "DirectMailTypeCollectionViaCampaignActivity";
			/// <summary>Member name DirectMailTypeCollectionViaCampaignActivity_</summary>
			public static readonly string DirectMailTypeCollectionViaCampaignActivity_ = "DirectMailTypeCollectionViaCampaignActivity_";
			/// <summary>Member name EventActivityTemplateCollectionViaEventActivityTemplateMeeting</summary>
			public static readonly string EventActivityTemplateCollectionViaEventActivityTemplateMeeting = "EventActivityTemplateCollectionViaEventActivityTemplateMeeting";
			/// <summary>Member name EventActivityTemplateCollectionViaEventActivityTemplateTask</summary>
			public static readonly string EventActivityTemplateCollectionViaEventActivityTemplateTask = "EventActivityTemplateCollectionViaEventActivityTemplateTask";
			/// <summary>Member name EventActivityTemplateCollectionViaEventActivityTemplateCall</summary>
			public static readonly string EventActivityTemplateCollectionViaEventActivityTemplateCall = "EventActivityTemplateCollectionViaEventActivityTemplateCall";
			/// <summary>Member name EventActivityTemplateCollectionViaEventActivityTemplateEmail</summary>
			public static readonly string EventActivityTemplateCollectionViaEventActivityTemplateEmail = "EventActivityTemplateCollectionViaEventActivityTemplateEmail";
			/// <summary>Member name EventAppointmentCollectionViaEventCustomers</summary>
			public static readonly string EventAppointmentCollectionViaEventCustomers = "EventAppointmentCollectionViaEventCustomers";
			/// <summary>Member name EventAppointmentCollectionViaEventCustomers_</summary>
			public static readonly string EventAppointmentCollectionViaEventCustomers_ = "EventAppointmentCollectionViaEventCustomers_";
			/// <summary>Member name EventCustomerResultCollectionViaCustomerResultScreeningCommunication</summary>
			public static readonly string EventCustomerResultCollectionViaCustomerResultScreeningCommunication = "EventCustomerResultCollectionViaCustomerResultScreeningCommunication";
			/// <summary>Member name EventCustomerResultCollectionViaPriorityInQueue_</summary>
			public static readonly string EventCustomerResultCollectionViaPriorityInQueue_ = "EventCustomerResultCollectionViaPriorityInQueue_";
			/// <summary>Member name EventCustomerResultCollectionViaKynLabValues</summary>
			public static readonly string EventCustomerResultCollectionViaKynLabValues = "EventCustomerResultCollectionViaKynLabValues";
			/// <summary>Member name EventCustomerResultCollectionViaCustomerResultScreeningCommunication__</summary>
			public static readonly string EventCustomerResultCollectionViaCustomerResultScreeningCommunication__ = "EventCustomerResultCollectionViaCustomerResultScreeningCommunication__";
			/// <summary>Member name EventCustomerResultCollectionViaCustomerResultScreeningCommunication_</summary>
			public static readonly string EventCustomerResultCollectionViaCustomerResultScreeningCommunication_ = "EventCustomerResultCollectionViaCustomerResultScreeningCommunication_";
			/// <summary>Member name EventCustomerResultCollectionViaCdcontentGeneratorTracking</summary>
			public static readonly string EventCustomerResultCollectionViaCdcontentGeneratorTracking = "EventCustomerResultCollectionViaCdcontentGeneratorTracking";
			/// <summary>Member name EventCustomerResultCollectionViaKynLabValues_</summary>
			public static readonly string EventCustomerResultCollectionViaKynLabValues_ = "EventCustomerResultCollectionViaKynLabValues_";
			/// <summary>Member name EventCustomerResultCollectionViaPriorityInQueue</summary>
			public static readonly string EventCustomerResultCollectionViaPriorityInQueue = "EventCustomerResultCollectionViaPriorityInQueue";
			/// <summary>Member name EventCustomersCollectionViaDisqualifiedTest_</summary>
			public static readonly string EventCustomersCollectionViaDisqualifiedTest_ = "EventCustomersCollectionViaDisqualifiedTest_";
			/// <summary>Member name EventCustomersCollectionViaEventAppointmentChangeLog</summary>
			public static readonly string EventCustomersCollectionViaEventAppointmentChangeLog = "EventCustomersCollectionViaEventAppointmentChangeLog";
			/// <summary>Member name EventCustomersCollectionViaDisqualifiedTest</summary>
			public static readonly string EventCustomersCollectionViaDisqualifiedTest = "EventCustomersCollectionViaDisqualifiedTest";
			/// <summary>Member name EventCustomersCollectionViaEventCustomerPrimaryCarePhysician</summary>
			public static readonly string EventCustomersCollectionViaEventCustomerPrimaryCarePhysician = "EventCustomersCollectionViaEventCustomerPrimaryCarePhysician";
			/// <summary>Member name EventCustomersCollectionViaEventCustomerQuestionAnswer_</summary>
			public static readonly string EventCustomersCollectionViaEventCustomerQuestionAnswer_ = "EventCustomersCollectionViaEventCustomerQuestionAnswer_";
			/// <summary>Member name EventCustomersCollectionViaEventAppointmentCancellationLog</summary>
			public static readonly string EventCustomersCollectionViaEventAppointmentCancellationLog = "EventCustomersCollectionViaEventAppointmentCancellationLog";
			/// <summary>Member name EventCustomersCollectionViaEventCustomerQuestionAnswer</summary>
			public static readonly string EventCustomersCollectionViaEventCustomerQuestionAnswer = "EventCustomersCollectionViaEventCustomerQuestionAnswer";
			/// <summary>Member name EventCustomersCollectionViaEventCustomerGiftCard</summary>
			public static readonly string EventCustomersCollectionViaEventCustomerGiftCard = "EventCustomersCollectionViaEventCustomerGiftCard";
			/// <summary>Member name EventCustomersCollectionViaSurveyAnswer</summary>
			public static readonly string EventCustomersCollectionViaSurveyAnswer = "EventCustomersCollectionViaSurveyAnswer";
			/// <summary>Member name EventCustomersCollectionViaEventCustomerTestNotPerformedNotification</summary>
			public static readonly string EventCustomersCollectionViaEventCustomerTestNotPerformedNotification = "EventCustomersCollectionViaEventCustomerTestNotPerformedNotification";
			/// <summary>Member name EventCustomersCollectionViaPhysicianRecordRequestSignature</summary>
			public static readonly string EventCustomersCollectionViaPhysicianRecordRequestSignature = "EventCustomersCollectionViaPhysicianRecordRequestSignature";
			/// <summary>Member name EventCustomersCollectionViaEventCustomerRetest</summary>
			public static readonly string EventCustomersCollectionViaEventCustomerRetest = "EventCustomersCollectionViaEventCustomerRetest";
			/// <summary>Member name EventCustomersCollectionViaPcpDisposition</summary>
			public static readonly string EventCustomersCollectionViaPcpDisposition = "EventCustomersCollectionViaPcpDisposition";
			/// <summary>Member name EventCustomersCollectionViaPcpDisposition_</summary>
			public static readonly string EventCustomersCollectionViaPcpDisposition_ = "EventCustomersCollectionViaPcpDisposition_";
			/// <summary>Member name EventCustomersCollectionViaChaperoneSignature</summary>
			public static readonly string EventCustomersCollectionViaChaperoneSignature = "EventCustomersCollectionViaChaperoneSignature";
			/// <summary>Member name EventCustomersCollectionViaChaperoneAnswer_</summary>
			public static readonly string EventCustomersCollectionViaChaperoneAnswer_ = "EventCustomersCollectionViaChaperoneAnswer_";
			/// <summary>Member name EventCustomersCollectionViaChaperoneAnswer</summary>
			public static readonly string EventCustomersCollectionViaChaperoneAnswer = "EventCustomersCollectionViaChaperoneAnswer";
			/// <summary>Member name EventCustomersCollectionViaCallQueueCustomer__</summary>
			public static readonly string EventCustomersCollectionViaCallQueueCustomer__ = "EventCustomersCollectionViaCallQueueCustomer__";
			/// <summary>Member name EventCustomersCollectionViaCheckListAnswer_</summary>
			public static readonly string EventCustomersCollectionViaCheckListAnswer_ = "EventCustomersCollectionViaCheckListAnswer_";
			/// <summary>Member name EventCustomersCollectionViaCallQueueCustomer</summary>
			public static readonly string EventCustomersCollectionViaCallQueueCustomer = "EventCustomersCollectionViaCallQueueCustomer";
			/// <summary>Member name EventCustomersCollectionViaCallQueueCustomer_</summary>
			public static readonly string EventCustomersCollectionViaCallQueueCustomer_ = "EventCustomersCollectionViaCallQueueCustomer_";
			/// <summary>Member name EventCustomersCollectionViaCustomerHealthInfo</summary>
			public static readonly string EventCustomersCollectionViaCustomerHealthInfo = "EventCustomersCollectionViaCustomerHealthInfo";
			/// <summary>Member name EventCustomersCollectionViaExitInterviewSignature</summary>
			public static readonly string EventCustomersCollectionViaExitInterviewSignature = "EventCustomersCollectionViaExitInterviewSignature";
			/// <summary>Member name EventCustomersCollectionViaFluConsentAnswer</summary>
			public static readonly string EventCustomersCollectionViaFluConsentAnswer = "EventCustomersCollectionViaFluConsentAnswer";
			/// <summary>Member name EventCustomersCollectionViaExitInterviewAnswer_</summary>
			public static readonly string EventCustomersCollectionViaExitInterviewAnswer_ = "EventCustomersCollectionViaExitInterviewAnswer_";
			/// <summary>Member name EventCustomersCollectionViaCheckListAnswer</summary>
			public static readonly string EventCustomersCollectionViaCheckListAnswer = "EventCustomersCollectionViaCheckListAnswer";
			/// <summary>Member name EventCustomersCollectionViaExitInterviewAnswer</summary>
			public static readonly string EventCustomersCollectionViaExitInterviewAnswer = "EventCustomersCollectionViaExitInterviewAnswer";
			/// <summary>Member name EventCustomersCollectionViaFluConsentAnswer_</summary>
			public static readonly string EventCustomersCollectionViaFluConsentAnswer_ = "EventCustomersCollectionViaFluConsentAnswer_";
			/// <summary>Member name EventCustomersCollectionViaSurveyAnswer_</summary>
			public static readonly string EventCustomersCollectionViaSurveyAnswer_ = "EventCustomersCollectionViaSurveyAnswer_";
			/// <summary>Member name EventCustomersCollectionViaCustomerHealthInfoArchive</summary>
			public static readonly string EventCustomersCollectionViaCustomerHealthInfoArchive = "EventCustomersCollectionViaCustomerHealthInfoArchive";
			/// <summary>Member name EventCustomersCollectionViaCustomerMedicareQuestionAnswer</summary>
			public static readonly string EventCustomersCollectionViaCustomerMedicareQuestionAnswer = "EventCustomersCollectionViaCustomerMedicareQuestionAnswer";
			/// <summary>Member name EventCustomersCollectionViaFluConsentSignature</summary>
			public static readonly string EventCustomersCollectionViaFluConsentSignature = "EventCustomersCollectionViaFluConsentSignature";
			/// <summary>Member name EventCustomersCollectionViaParticipationConsentSignature</summary>
			public static readonly string EventCustomersCollectionViaParticipationConsentSignature = "EventCustomersCollectionViaParticipationConsentSignature";
			/// <summary>Member name EventsCollectionViaEventCustomerQuestionAnswer</summary>
			public static readonly string EventsCollectionViaEventCustomerQuestionAnswer = "EventsCollectionViaEventCustomerQuestionAnswer";
			/// <summary>Member name EventsCollectionViaEventPhysicianTest__</summary>
			public static readonly string EventsCollectionViaEventPhysicianTest__ = "EventsCollectionViaEventPhysicianTest__";
			/// <summary>Member name EventsCollectionViaEventStaffAssignment__</summary>
			public static readonly string EventsCollectionViaEventStaffAssignment__ = "EventsCollectionViaEventStaffAssignment__";
			/// <summary>Member name EventsCollectionViaEventStaffAssignment_</summary>
			public static readonly string EventsCollectionViaEventStaffAssignment_ = "EventsCollectionViaEventStaffAssignment_";
			/// <summary>Member name EventsCollectionViaEventCustomers</summary>
			public static readonly string EventsCollectionViaEventCustomers = "EventsCollectionViaEventCustomers";
			/// <summary>Member name EventsCollectionViaEventCustomerResult____</summary>
			public static readonly string EventsCollectionViaEventCustomerResult____ = "EventsCollectionViaEventCustomerResult____";
			/// <summary>Member name EventsCollectionViaEventCustomerResult___</summary>
			public static readonly string EventsCollectionViaEventCustomerResult___ = "EventsCollectionViaEventCustomerResult___";
			/// <summary>Member name EventsCollectionViaHospitalPartnerCustomer_</summary>
			public static readonly string EventsCollectionViaHospitalPartnerCustomer_ = "EventsCollectionViaHospitalPartnerCustomer_";
			/// <summary>Member name EventsCollectionViaEventCustomerResult_</summary>
			public static readonly string EventsCollectionViaEventCustomerResult_ = "EventsCollectionViaEventCustomerResult_";
			/// <summary>Member name EventsCollectionViaEventCustomerResult________</summary>
			public static readonly string EventsCollectionViaEventCustomerResult________ = "EventsCollectionViaEventCustomerResult________";
			/// <summary>Member name EventsCollectionViaEventCustomerResult______</summary>
			public static readonly string EventsCollectionViaEventCustomerResult______ = "EventsCollectionViaEventCustomerResult______";
			/// <summary>Member name EventsCollectionViaEventCustomerResult__</summary>
			public static readonly string EventsCollectionViaEventCustomerResult__ = "EventsCollectionViaEventCustomerResult__";
			/// <summary>Member name EventsCollectionViaEventCustomerResult_______</summary>
			public static readonly string EventsCollectionViaEventCustomerResult_______ = "EventsCollectionViaEventCustomerResult_______";
			/// <summary>Member name EventsCollectionViaEventPhysicianTest_</summary>
			public static readonly string EventsCollectionViaEventPhysicianTest_ = "EventsCollectionViaEventPhysicianTest_";
			/// <summary>Member name EventsCollectionViaEventPhysicianTest</summary>
			public static readonly string EventsCollectionViaEventPhysicianTest = "EventsCollectionViaEventPhysicianTest";
			/// <summary>Member name EventsCollectionViaEventCustomerQuestionAnswer_</summary>
			public static readonly string EventsCollectionViaEventCustomerQuestionAnswer_ = "EventsCollectionViaEventCustomerQuestionAnswer_";
			/// <summary>Member name EventsCollectionViaHospitalPartnerCustomer__</summary>
			public static readonly string EventsCollectionViaHospitalPartnerCustomer__ = "EventsCollectionViaHospitalPartnerCustomer__";
			/// <summary>Member name EventsCollectionViaEventCustomerResult</summary>
			public static readonly string EventsCollectionViaEventCustomerResult = "EventsCollectionViaEventCustomerResult";
			/// <summary>Member name EventsCollectionViaHospitalPartnerCustomer</summary>
			public static readonly string EventsCollectionViaHospitalPartnerCustomer = "EventsCollectionViaHospitalPartnerCustomer";
			/// <summary>Member name EventsCollectionViaEventCustomerResult_____</summary>
			public static readonly string EventsCollectionViaEventCustomerResult_____ = "EventsCollectionViaEventCustomerResult_____";
			/// <summary>Member name EventsCollectionViaEventCustomers_</summary>
			public static readonly string EventsCollectionViaEventCustomers_ = "EventsCollectionViaEventCustomers_";
			/// <summary>Member name EventsCollectionViaEventAccountTestHcpcsCode</summary>
			public static readonly string EventsCollectionViaEventAccountTestHcpcsCode = "EventsCollectionViaEventAccountTestHcpcsCode";
			/// <summary>Member name EventsCollectionViaCustomerRegistrationNotes</summary>
			public static readonly string EventsCollectionViaCustomerRegistrationNotes = "EventsCollectionViaCustomerRegistrationNotes";
			/// <summary>Member name EventsCollectionViaCallQueueCustomer</summary>
			public static readonly string EventsCollectionViaCallQueueCustomer = "EventsCollectionViaCallQueueCustomer";
			/// <summary>Member name EventsCollectionViaEventAccountTestHcpcsCode_</summary>
			public static readonly string EventsCollectionViaEventAccountTestHcpcsCode_ = "EventsCollectionViaEventAccountTestHcpcsCode_";
			/// <summary>Member name EventsCollectionViaSeminars</summary>
			public static readonly string EventsCollectionViaSeminars = "EventsCollectionViaSeminars";
			/// <summary>Member name EventsCollectionViaDisqualifiedTest_</summary>
			public static readonly string EventsCollectionViaDisqualifiedTest_ = "EventsCollectionViaDisqualifiedTest_";
			/// <summary>Member name EventsCollectionViaDisqualifiedTest</summary>
			public static readonly string EventsCollectionViaDisqualifiedTest = "EventsCollectionViaDisqualifiedTest";
			/// <summary>Member name EventsCollectionViaCustomEventNotification</summary>
			public static readonly string EventsCollectionViaCustomEventNotification = "EventsCollectionViaCustomEventNotification";
			/// <summary>Member name EventsCollectionViaCallQueueCustomer__</summary>
			public static readonly string EventsCollectionViaCallQueueCustomer__ = "EventsCollectionViaCallQueueCustomer__";
			/// <summary>Member name EventsCollectionViaCustomerClinicalQuestionAnswer</summary>
			public static readonly string EventsCollectionViaCustomerClinicalQuestionAnswer = "EventsCollectionViaCustomerClinicalQuestionAnswer";
			/// <summary>Member name EventsCollectionViaCustomerClinicalQuestionAnswer_</summary>
			public static readonly string EventsCollectionViaCustomerClinicalQuestionAnswer_ = "EventsCollectionViaCustomerClinicalQuestionAnswer_";
			/// <summary>Member name EventsCollectionViaEventAppointmentChangeLog</summary>
			public static readonly string EventsCollectionViaEventAppointmentChangeLog = "EventsCollectionViaEventAppointmentChangeLog";
			/// <summary>Member name EventsCollectionViaEventAppointmentChangeLog_</summary>
			public static readonly string EventsCollectionViaEventAppointmentChangeLog_ = "EventsCollectionViaEventAppointmentChangeLog_";
			/// <summary>Member name EventsCollectionViaCallQueueCustomer_</summary>
			public static readonly string EventsCollectionViaCallQueueCustomer_ = "EventsCollectionViaCallQueueCustomer_";
			/// <summary>Member name EventsCollectionViaHostPayment</summary>
			public static readonly string EventsCollectionViaHostPayment = "EventsCollectionViaHostPayment";
			/// <summary>Member name EventsCollectionViaEventStaffAssignment</summary>
			public static readonly string EventsCollectionViaEventStaffAssignment = "EventsCollectionViaEventStaffAssignment";
			/// <summary>Member name EventsCollectionViaEventAppointmentCancellationLog</summary>
			public static readonly string EventsCollectionViaEventAppointmentCancellationLog = "EventsCollectionViaEventAppointmentCancellationLog";
			/// <summary>Member name EventTypeCollectionViaEvents</summary>
			public static readonly string EventTypeCollectionViaEvents = "EventTypeCollectionViaEvents";
			/// <summary>Member name EventTypeCollectionViaEvents____</summary>
			public static readonly string EventTypeCollectionViaEvents____ = "EventTypeCollectionViaEvents____";
			/// <summary>Member name EventTypeCollectionViaEvents___</summary>
			public static readonly string EventTypeCollectionViaEvents___ = "EventTypeCollectionViaEvents___";
			/// <summary>Member name EventTypeCollectionViaEvents_</summary>
			public static readonly string EventTypeCollectionViaEvents_ = "EventTypeCollectionViaEvents_";
			/// <summary>Member name EventTypeCollectionViaEvents__</summary>
			public static readonly string EventTypeCollectionViaEvents__ = "EventTypeCollectionViaEvents__";
			/// <summary>Member name ExitInterviewQuestionCollectionViaExitInterviewAnswer_</summary>
			public static readonly string ExitInterviewQuestionCollectionViaExitInterviewAnswer_ = "ExitInterviewQuestionCollectionViaExitInterviewAnswer_";
			/// <summary>Member name ExitInterviewQuestionCollectionViaExitInterviewAnswer</summary>
			public static readonly string ExitInterviewQuestionCollectionViaExitInterviewAnswer = "ExitInterviewQuestionCollectionViaExitInterviewAnswer";
			/// <summary>Member name ExportableReportsCollectionViaExportableReportsQueue</summary>
			public static readonly string ExportableReportsCollectionViaExportableReportsQueue = "ExportableReportsCollectionViaExportableReportsQueue";
			/// <summary>Member name FileCollectionViaCustomerActivityTypeUpload_</summary>
			public static readonly string FileCollectionViaCustomerActivityTypeUpload_ = "FileCollectionViaCustomerActivityTypeUpload_";
			/// <summary>Member name FileCollectionViaCorporateUpload</summary>
			public static readonly string FileCollectionViaCorporateUpload = "FileCollectionViaCorporateUpload";
			/// <summary>Member name FileCollectionViaStaffEventScheduleUpload</summary>
			public static readonly string FileCollectionViaStaffEventScheduleUpload = "FileCollectionViaStaffEventScheduleUpload";
			/// <summary>Member name FileCollectionViaCorporateUpload_</summary>
			public static readonly string FileCollectionViaCorporateUpload_ = "FileCollectionViaCorporateUpload_";
			/// <summary>Member name FileCollectionViaPhysicianRecordRequestSignature</summary>
			public static readonly string FileCollectionViaPhysicianRecordRequestSignature = "FileCollectionViaPhysicianRecordRequestSignature";
			/// <summary>Member name FileCollectionViaCustomerActivityTypeUpload</summary>
			public static readonly string FileCollectionViaCustomerActivityTypeUpload = "FileCollectionViaCustomerActivityTypeUpload";
			/// <summary>Member name FileCollectionViaRapsUpload_</summary>
			public static readonly string FileCollectionViaRapsUpload_ = "FileCollectionViaRapsUpload_";
			/// <summary>Member name FileCollectionViaCallUpload_</summary>
			public static readonly string FileCollectionViaCallUpload_ = "FileCollectionViaCallUpload_";
			/// <summary>Member name FileCollectionViaChaperoneSignature_</summary>
			public static readonly string FileCollectionViaChaperoneSignature_ = "FileCollectionViaChaperoneSignature_";
			/// <summary>Member name FileCollectionViaRapsUpload</summary>
			public static readonly string FileCollectionViaRapsUpload = "FileCollectionViaRapsUpload";
			/// <summary>Member name FileCollectionViaChaperoneSignature</summary>
			public static readonly string FileCollectionViaChaperoneSignature = "FileCollectionViaChaperoneSignature";
			/// <summary>Member name FileCollectionViaCorporateUpload__</summary>
			public static readonly string FileCollectionViaCorporateUpload__ = "FileCollectionViaCorporateUpload__";
			/// <summary>Member name FileCollectionViaCallUpload</summary>
			public static readonly string FileCollectionViaCallUpload = "FileCollectionViaCallUpload";
			/// <summary>Member name FileCollectionViaHealthPlanCriteriaAssignmentUpload</summary>
			public static readonly string FileCollectionViaHealthPlanCriteriaAssignmentUpload = "FileCollectionViaHealthPlanCriteriaAssignmentUpload";
			/// <summary>Member name FileCollectionViaParticipationConsentSignature_</summary>
			public static readonly string FileCollectionViaParticipationConsentSignature_ = "FileCollectionViaParticipationConsentSignature_";
			/// <summary>Member name FileCollectionViaMergeCustomerUpload</summary>
			public static readonly string FileCollectionViaMergeCustomerUpload = "FileCollectionViaMergeCustomerUpload";
			/// <summary>Member name FileCollectionViaMedicationUpload_</summary>
			public static readonly string FileCollectionViaMedicationUpload_ = "FileCollectionViaMedicationUpload_";
			/// <summary>Member name FileCollectionViaMedicationUpload</summary>
			public static readonly string FileCollectionViaMedicationUpload = "FileCollectionViaMedicationUpload";
			/// <summary>Member name FileCollectionViaFluConsentSignature_</summary>
			public static readonly string FileCollectionViaFluConsentSignature_ = "FileCollectionViaFluConsentSignature_";
			/// <summary>Member name FileCollectionViaFluConsentSignature</summary>
			public static readonly string FileCollectionViaFluConsentSignature = "FileCollectionViaFluConsentSignature";
			/// <summary>Member name FileCollectionViaMergeCustomerUpload_</summary>
			public static readonly string FileCollectionViaMergeCustomerUpload_ = "FileCollectionViaMergeCustomerUpload_";
			/// <summary>Member name FileCollectionViaExitInterviewSignature</summary>
			public static readonly string FileCollectionViaExitInterviewSignature = "FileCollectionViaExitInterviewSignature";
			/// <summary>Member name FileCollectionViaEventCustomerGiftCard_</summary>
			public static readonly string FileCollectionViaEventCustomerGiftCard_ = "FileCollectionViaEventCustomerGiftCard_";
			/// <summary>Member name FileCollectionViaEventCustomerGiftCard</summary>
			public static readonly string FileCollectionViaEventCustomerGiftCard = "FileCollectionViaEventCustomerGiftCard";
			/// <summary>Member name FileCollectionViaEligibilityUpload</summary>
			public static readonly string FileCollectionViaEligibilityUpload = "FileCollectionViaEligibilityUpload";
			/// <summary>Member name FileCollectionViaEligibilityUpload_</summary>
			public static readonly string FileCollectionViaEligibilityUpload_ = "FileCollectionViaEligibilityUpload_";
			/// <summary>Member name FileCollectionViaExportableReportsQueue</summary>
			public static readonly string FileCollectionViaExportableReportsQueue = "FileCollectionViaExportableReportsQueue";
			/// <summary>Member name FileCollectionViaSuspectConditionUpload</summary>
			public static readonly string FileCollectionViaSuspectConditionUpload = "FileCollectionViaSuspectConditionUpload";
			/// <summary>Member name FileCollectionViaStaffEventScheduleUpload_</summary>
			public static readonly string FileCollectionViaStaffEventScheduleUpload_ = "FileCollectionViaStaffEventScheduleUpload_";
			/// <summary>Member name FileCollectionViaParticipationConsentSignature</summary>
			public static readonly string FileCollectionViaParticipationConsentSignature = "FileCollectionViaParticipationConsentSignature";
			/// <summary>Member name FileCollectionViaCustomerPhoneNumberUpdateUpload_</summary>
			public static readonly string FileCollectionViaCustomerPhoneNumberUpdateUpload_ = "FileCollectionViaCustomerPhoneNumberUpdateUpload_";
			/// <summary>Member name FileCollectionViaCustomerPhoneNumberUpdateUpload</summary>
			public static readonly string FileCollectionViaCustomerPhoneNumberUpdateUpload = "FileCollectionViaCustomerPhoneNumberUpdateUpload";
			/// <summary>Member name FileCollectionViaSuspectConditionUpload_</summary>
			public static readonly string FileCollectionViaSuspectConditionUpload_ = "FileCollectionViaSuspectConditionUpload_";
			/// <summary>Member name FluConsentQuestionCollectionViaFluConsentAnswer</summary>
			public static readonly string FluConsentQuestionCollectionViaFluConsentAnswer = "FluConsentQuestionCollectionViaFluConsentAnswer";
			/// <summary>Member name FluConsentQuestionCollectionViaFluConsentAnswer_</summary>
			public static readonly string FluConsentQuestionCollectionViaFluConsentAnswer_ = "FluConsentQuestionCollectionViaFluConsentAnswer_";
			/// <summary>Member name GcNotGivenReasonCollectionViaEventCustomers</summary>
			public static readonly string GcNotGivenReasonCollectionViaEventCustomers = "GcNotGivenReasonCollectionViaEventCustomers";
			/// <summary>Member name GcNotGivenReasonCollectionViaEventCustomers_</summary>
			public static readonly string GcNotGivenReasonCollectionViaEventCustomers_ = "GcNotGivenReasonCollectionViaEventCustomers_";
			/// <summary>Member name HafTemplateCollectionViaClinicalTestQualificationCriteria</summary>
			public static readonly string HafTemplateCollectionViaClinicalTestQualificationCriteria = "HafTemplateCollectionViaClinicalTestQualificationCriteria";
			/// <summary>Member name HafTemplateCollectionViaEvents___</summary>
			public static readonly string HafTemplateCollectionViaEvents___ = "HafTemplateCollectionViaEvents___";
			/// <summary>Member name HafTemplateCollectionViaEvents</summary>
			public static readonly string HafTemplateCollectionViaEvents = "HafTemplateCollectionViaEvents";
			/// <summary>Member name HafTemplateCollectionViaEvents____</summary>
			public static readonly string HafTemplateCollectionViaEvents____ = "HafTemplateCollectionViaEvents____";
			/// <summary>Member name HafTemplateCollectionViaEvents_</summary>
			public static readonly string HafTemplateCollectionViaEvents_ = "HafTemplateCollectionViaEvents_";
			/// <summary>Member name HafTemplateCollectionViaCustomerClinicalQuestionAnswer</summary>
			public static readonly string HafTemplateCollectionViaCustomerClinicalQuestionAnswer = "HafTemplateCollectionViaCustomerClinicalQuestionAnswer";
			/// <summary>Member name HafTemplateCollectionViaEvents__</summary>
			public static readonly string HafTemplateCollectionViaEvents__ = "HafTemplateCollectionViaEvents__";
			/// <summary>Member name HafTemplateCollectionViaCustomerClinicalQuestionAnswer_</summary>
			public static readonly string HafTemplateCollectionViaCustomerClinicalQuestionAnswer_ = "HafTemplateCollectionViaCustomerClinicalQuestionAnswer_";
			/// <summary>Member name HafTemplateCollectionViaClinicalTestQualificationCriteria_</summary>
			public static readonly string HafTemplateCollectionViaClinicalTestQualificationCriteria_ = "HafTemplateCollectionViaClinicalTestQualificationCriteria_";
			/// <summary>Member name HcpcsCodeCollectionViaTestHcpcsCode_</summary>
			public static readonly string HcpcsCodeCollectionViaTestHcpcsCode_ = "HcpcsCodeCollectionViaTestHcpcsCode_";
			/// <summary>Member name HcpcsCodeCollectionViaTestHcpcsCode</summary>
			public static readonly string HcpcsCodeCollectionViaTestHcpcsCode = "HcpcsCodeCollectionViaTestHcpcsCode";
			/// <summary>Member name HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload</summary>
			public static readonly string HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload = "HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload";
			/// <summary>Member name HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment</summary>
			public static readonly string HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment = "HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment";
			/// <summary>Member name HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_</summary>
			public static readonly string HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_ = "HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_";
			/// <summary>Member name HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment</summary>
			public static readonly string HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment = "HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment";
			/// <summary>Member name HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__</summary>
			public static readonly string HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__ = "HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__";
			/// <summary>Member name HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_</summary>
			public static readonly string HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_ = "HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_";
			/// <summary>Member name HospitalFacilityCollectionViaEventCustomers</summary>
			public static readonly string HospitalFacilityCollectionViaEventCustomers = "HospitalFacilityCollectionViaEventCustomers";
			/// <summary>Member name HospitalFacilityCollectionViaEventCustomers_</summary>
			public static readonly string HospitalFacilityCollectionViaEventCustomers_ = "HospitalFacilityCollectionViaEventCustomers_";
			/// <summary>Member name HostPaymentCollectionViaHostPaymentTransaction</summary>
			public static readonly string HostPaymentCollectionViaHostPaymentTransaction = "HostPaymentCollectionViaHostPaymentTransaction";
			/// <summary>Member name IcdCodesCollectionViaCustomerIcdCode</summary>
			public static readonly string IcdCodesCollectionViaCustomerIcdCode = "IcdCodesCollectionViaCustomerIcdCode";
			/// <summary>Member name InsuranceCompanyCollectionViaEligibility</summary>
			public static readonly string InsuranceCompanyCollectionViaEligibility = "InsuranceCompanyCollectionViaEligibility";
			/// <summary>Member name LanguageCollectionViaHealthPlanCallQueueCriteria</summary>
			public static readonly string LanguageCollectionViaHealthPlanCallQueueCriteria = "LanguageCollectionViaHealthPlanCallQueueCriteria";
			/// <summary>Member name LanguageCollectionViaCallQueueCustomer_</summary>
			public static readonly string LanguageCollectionViaCallQueueCustomer_ = "LanguageCollectionViaCallQueueCustomer_";
			/// <summary>Member name LanguageCollectionViaCallQueueCustomer__</summary>
			public static readonly string LanguageCollectionViaCallQueueCustomer__ = "LanguageCollectionViaCallQueueCustomer__";
			/// <summary>Member name LanguageCollectionViaCallQueueCustomer</summary>
			public static readonly string LanguageCollectionViaCallQueueCustomer = "LanguageCollectionViaCallQueueCustomer";
			/// <summary>Member name LanguageCollectionViaHealthPlanCallQueueCriteria_</summary>
			public static readonly string LanguageCollectionViaHealthPlanCallQueueCriteria_ = "LanguageCollectionViaHealthPlanCallQueueCriteria_";
			/// <summary>Member name LookupCollectionViaUncontactedCustomerCallQueue</summary>
			public static readonly string LookupCollectionViaUncontactedCustomerCallQueue = "LookupCollectionViaUncontactedCustomerCallQueue";
			/// <summary>Member name LookupCollectionViaFillEventCallQueue</summary>
			public static readonly string LookupCollectionViaFillEventCallQueue = "LookupCollectionViaFillEventCallQueue";
			/// <summary>Member name LookupCollectionViaTestPerformedExternally_</summary>
			public static readonly string LookupCollectionViaTestPerformedExternally_ = "LookupCollectionViaTestPerformedExternally_";
			/// <summary>Member name LookupCollectionViaLanguageBarrierCallQueue</summary>
			public static readonly string LookupCollectionViaLanguageBarrierCallQueue = "LookupCollectionViaLanguageBarrierCallQueue";
			/// <summary>Member name LookupCollectionViaMedicationUpload</summary>
			public static readonly string LookupCollectionViaMedicationUpload = "LookupCollectionViaMedicationUpload";
			/// <summary>Member name LookupCollectionViaHostFacilityRanking</summary>
			public static readonly string LookupCollectionViaHostFacilityRanking = "LookupCollectionViaHostFacilityRanking";
			/// <summary>Member name LookupCollectionViaHostFacilityRanking_</summary>
			public static readonly string LookupCollectionViaHostFacilityRanking_ = "LookupCollectionViaHostFacilityRanking_";
			/// <summary>Member name LookupCollectionViaMailRoundCallQueue</summary>
			public static readonly string LookupCollectionViaMailRoundCallQueue = "LookupCollectionViaMailRoundCallQueue";
			/// <summary>Member name LookupCollectionViaHostPaymentTransaction_</summary>
			public static readonly string LookupCollectionViaHostPaymentTransaction_ = "LookupCollectionViaHostPaymentTransaction_";
			/// <summary>Member name LookupCollectionViaHostPayment</summary>
			public static readonly string LookupCollectionViaHostPayment = "LookupCollectionViaHostPayment";
			/// <summary>Member name LookupCollectionViaHostPaymentTransaction</summary>
			public static readonly string LookupCollectionViaHostPaymentTransaction = "LookupCollectionViaHostPaymentTransaction";
			/// <summary>Member name LookupCollectionViaHostPayment_</summary>
			public static readonly string LookupCollectionViaHostPayment_ = "LookupCollectionViaHostPayment_";
			/// <summary>Member name LookupCollectionViaKynLabValues</summary>
			public static readonly string LookupCollectionViaKynLabValues = "LookupCollectionViaKynLabValues";
			/// <summary>Member name LookupCollectionViaExportableReportsQueue</summary>
			public static readonly string LookupCollectionViaExportableReportsQueue = "LookupCollectionViaExportableReportsQueue";
			/// <summary>Member name LookupCollectionViaFile</summary>
			public static readonly string LookupCollectionViaFile = "LookupCollectionViaFile";
			/// <summary>Member name LookupCollectionViaTestPerformedExternally</summary>
			public static readonly string LookupCollectionViaTestPerformedExternally = "LookupCollectionViaTestPerformedExternally";
			/// <summary>Member name LookupCollectionViaKynLabValues_</summary>
			public static readonly string LookupCollectionViaKynLabValues_ = "LookupCollectionViaKynLabValues_";
			/// <summary>Member name LookupCollectionViaPreQualificationQuestion</summary>
			public static readonly string LookupCollectionViaPreQualificationQuestion = "LookupCollectionViaPreQualificationQuestion";
			/// <summary>Member name LookupCollectionViaPrintOrderItemTracking__</summary>
			public static readonly string LookupCollectionViaPrintOrderItemTracking__ = "LookupCollectionViaPrintOrderItemTracking__";
			/// <summary>Member name LookupCollectionViaPcpDisposition_</summary>
			public static readonly string LookupCollectionViaPcpDisposition_ = "LookupCollectionViaPcpDisposition_";
			/// <summary>Member name LookupCollectionViaPcpAppointment_</summary>
			public static readonly string LookupCollectionViaPcpAppointment_ = "LookupCollectionViaPcpAppointment_";
			/// <summary>Member name LookupCollectionViaPcpDisposition</summary>
			public static readonly string LookupCollectionViaPcpDisposition = "LookupCollectionViaPcpDisposition";
			/// <summary>Member name LookupCollectionViaRefundRequest</summary>
			public static readonly string LookupCollectionViaRefundRequest = "LookupCollectionViaRefundRequest";
			/// <summary>Member name LookupCollectionViaRapsUpload</summary>
			public static readonly string LookupCollectionViaRapsUpload = "LookupCollectionViaRapsUpload";
			/// <summary>Member name LookupCollectionViaRefundRequest_</summary>
			public static readonly string LookupCollectionViaRefundRequest_ = "LookupCollectionViaRefundRequest_";
			/// <summary>Member name LookupCollectionViaPrintOrderItemTracking___</summary>
			public static readonly string LookupCollectionViaPrintOrderItemTracking___ = "LookupCollectionViaPrintOrderItemTracking___";
			/// <summary>Member name LookupCollectionViaProspectCustomer</summary>
			public static readonly string LookupCollectionViaProspectCustomer = "LookupCollectionViaProspectCustomer";
			/// <summary>Member name LookupCollectionViaPcpAppointment</summary>
			public static readonly string LookupCollectionViaPcpAppointment = "LookupCollectionViaPcpAppointment";
			/// <summary>Member name LookupCollectionViaHafTemplate</summary>
			public static readonly string LookupCollectionViaHafTemplate = "LookupCollectionViaHafTemplate";
			/// <summary>Member name LookupCollectionViaHafTemplate_</summary>
			public static readonly string LookupCollectionViaHafTemplate_ = "LookupCollectionViaHafTemplate_";
			/// <summary>Member name LookupCollectionViaSuspectConditionUpload</summary>
			public static readonly string LookupCollectionViaSuspectConditionUpload = "LookupCollectionViaSuspectConditionUpload";
			/// <summary>Member name LookupCollectionViaMergeCustomerUpload</summary>
			public static readonly string LookupCollectionViaMergeCustomerUpload = "LookupCollectionViaMergeCustomerUpload";
			/// <summary>Member name LookupCollectionViaNoShowCallQueue</summary>
			public static readonly string LookupCollectionViaNoShowCallQueue = "LookupCollectionViaNoShowCallQueue";
			/// <summary>Member name LookupCollectionViaStaffEventScheduleUpload</summary>
			public static readonly string LookupCollectionViaStaffEventScheduleUpload = "LookupCollectionViaStaffEventScheduleUpload";
			/// <summary>Member name LookupCollectionViaHealthPlanRevenue</summary>
			public static readonly string LookupCollectionViaHealthPlanRevenue = "LookupCollectionViaHealthPlanRevenue";
			/// <summary>Member name LookupCollectionViaHealthPlanRevenue_</summary>
			public static readonly string LookupCollectionViaHealthPlanRevenue_ = "LookupCollectionViaHealthPlanRevenue_";
			/// <summary>Member name LookupCollectionViaHafTemplate__</summary>
			public static readonly string LookupCollectionViaHafTemplate__ = "LookupCollectionViaHafTemplate__";
			/// <summary>Member name LookupCollectionViaHafTemplate___</summary>
			public static readonly string LookupCollectionViaHafTemplate___ = "LookupCollectionViaHafTemplate___";
			/// <summary>Member name LookupCollectionViaCustomerProfileHistory___</summary>
			public static readonly string LookupCollectionViaCustomerProfileHistory___ = "LookupCollectionViaCustomerProfileHistory___";
			/// <summary>Member name LookupCollectionViaCustomerProfileHistory__</summary>
			public static readonly string LookupCollectionViaCustomerProfileHistory__ = "LookupCollectionViaCustomerProfileHistory__";
			/// <summary>Member name LookupCollectionViaCustomerProfileHistory</summary>
			public static readonly string LookupCollectionViaCustomerProfileHistory = "LookupCollectionViaCustomerProfileHistory";
			/// <summary>Member name LookupCollectionViaCustomEventNotification</summary>
			public static readonly string LookupCollectionViaCustomEventNotification = "LookupCollectionViaCustomEventNotification";
			/// <summary>Member name LookupCollectionViaCustomerRegistrationNotes</summary>
			public static readonly string LookupCollectionViaCustomerRegistrationNotes = "LookupCollectionViaCustomerRegistrationNotes";
			/// <summary>Member name LookupCollectionViaCustomerProfileHistory_</summary>
			public static readonly string LookupCollectionViaCustomerProfileHistory_ = "LookupCollectionViaCustomerProfileHistory_";
			/// <summary>Member name LookupCollectionViaCustomerPrimaryCarePhysician__</summary>
			public static readonly string LookupCollectionViaCustomerPrimaryCarePhysician__ = "LookupCollectionViaCustomerPrimaryCarePhysician__";
			/// <summary>Member name LookupCollectionViaCustomerEventTestState__</summary>
			public static readonly string LookupCollectionViaCustomerEventTestState__ = "LookupCollectionViaCustomerEventTestState__";
			/// <summary>Member name LookupCollectionViaCustomerEventTestState_</summary>
			public static readonly string LookupCollectionViaCustomerEventTestState_ = "LookupCollectionViaCustomerEventTestState_";
			/// <summary>Member name LookupCollectionViaCustomerEventTestState</summary>
			public static readonly string LookupCollectionViaCustomerEventTestState = "LookupCollectionViaCustomerEventTestState";
			/// <summary>Member name LookupCollectionViaCustomerPrimaryCarePhysician_</summary>
			public static readonly string LookupCollectionViaCustomerPrimaryCarePhysician_ = "LookupCollectionViaCustomerPrimaryCarePhysician_";
			/// <summary>Member name LookupCollectionViaCustomerPrimaryCarePhysician</summary>
			public static readonly string LookupCollectionViaCustomerPrimaryCarePhysician = "LookupCollectionViaCustomerPrimaryCarePhysician";
			/// <summary>Member name LookupCollectionViaCustomerPhoneNumberUpdateUpload</summary>
			public static readonly string LookupCollectionViaCustomerPhoneNumberUpdateUpload = "LookupCollectionViaCustomerPhoneNumberUpdateUpload";
			/// <summary>Member name LookupCollectionViaEligibilityUpload</summary>
			public static readonly string LookupCollectionViaEligibilityUpload = "LookupCollectionViaEligibilityUpload";
			/// <summary>Member name LookupCollectionViaEventCustomerResult__</summary>
			public static readonly string LookupCollectionViaEventCustomerResult__ = "LookupCollectionViaEventCustomerResult__";
			/// <summary>Member name LookupCollectionViaEventCustomerResult______</summary>
			public static readonly string LookupCollectionViaEventCustomerResult______ = "LookupCollectionViaEventCustomerResult______";
			/// <summary>Member name LookupCollectionViaEventCustomerResult_____</summary>
			public static readonly string LookupCollectionViaEventCustomerResult_____ = "LookupCollectionViaEventCustomerResult_____";
			/// <summary>Member name LookupCollectionViaEventCustomerResult_</summary>
			public static readonly string LookupCollectionViaEventCustomerResult_ = "LookupCollectionViaEventCustomerResult_";
			/// <summary>Member name LookupCollectionViaEventCustomerResult____</summary>
			public static readonly string LookupCollectionViaEventCustomerResult____ = "LookupCollectionViaEventCustomerResult____";
			/// <summary>Member name LookupCollectionViaEventCustomerResult___</summary>
			public static readonly string LookupCollectionViaEventCustomerResult___ = "LookupCollectionViaEventCustomerResult___";
			/// <summary>Member name LookupCollectionViaEventCustomerResult________</summary>
			public static readonly string LookupCollectionViaEventCustomerResult________ = "LookupCollectionViaEventCustomerResult________";
			/// <summary>Member name LookupCollectionViaEventAppointmentCancellationLog</summary>
			public static readonly string LookupCollectionViaEventAppointmentCancellationLog = "LookupCollectionViaEventAppointmentCancellationLog";
			/// <summary>Member name LookupCollectionViaEmailTemplate_</summary>
			public static readonly string LookupCollectionViaEmailTemplate_ = "LookupCollectionViaEmailTemplate_";
			/// <summary>Member name LookupCollectionViaEmailTemplate</summary>
			public static readonly string LookupCollectionViaEmailTemplate = "LookupCollectionViaEmailTemplate";
			/// <summary>Member name LookupCollectionViaEventCustomerResult_______</summary>
			public static readonly string LookupCollectionViaEventCustomerResult_______ = "LookupCollectionViaEventCustomerResult_______";
			/// <summary>Member name LookupCollectionViaEventCustomerResult</summary>
			public static readonly string LookupCollectionViaEventCustomerResult = "LookupCollectionViaEventCustomerResult";
			/// <summary>Member name LookupCollectionViaEventAppointmentChangeLog</summary>
			public static readonly string LookupCollectionViaEventAppointmentChangeLog = "LookupCollectionViaEventAppointmentChangeLog";
			/// <summary>Member name LookupCollectionViaCustomerActivityTypeUpload</summary>
			public static readonly string LookupCollectionViaCustomerActivityTypeUpload = "LookupCollectionViaCustomerActivityTypeUpload";
			/// <summary>Member name LookupCollectionViaCalls</summary>
			public static readonly string LookupCollectionViaCalls = "LookupCollectionViaCalls";
			/// <summary>Member name LookupCollectionViaCalls_</summary>
			public static readonly string LookupCollectionViaCalls_ = "LookupCollectionViaCalls_";
			/// <summary>Member name LookupCollectionViaCallRoundCallQueue</summary>
			public static readonly string LookupCollectionViaCallRoundCallQueue = "LookupCollectionViaCallRoundCallQueue";
			/// <summary>Member name LookupCollectionViaCampaign</summary>
			public static readonly string LookupCollectionViaCampaign = "LookupCollectionViaCampaign";
			/// <summary>Member name LookupCollectionViaCallUpload</summary>
			public static readonly string LookupCollectionViaCallUpload = "LookupCollectionViaCallUpload";
			/// <summary>Member name LookupCollectionViaCalls__</summary>
			public static readonly string LookupCollectionViaCalls__ = "LookupCollectionViaCalls__";
			/// <summary>Member name LookupCollectionViaCallQueueCustomer__</summary>
			public static readonly string LookupCollectionViaCallQueueCustomer__ = "LookupCollectionViaCallQueueCustomer__";
			/// <summary>Member name LookupCollectionViaCallCenterTeam</summary>
			public static readonly string LookupCollectionViaCallCenterTeam = "LookupCollectionViaCallCenterTeam";
			/// <summary>Member name LookupCollectionViaAccountHraChatQuestionnaire_</summary>
			public static readonly string LookupCollectionViaAccountHraChatQuestionnaire_ = "LookupCollectionViaAccountHraChatQuestionnaire_";
			/// <summary>Member name LookupCollectionViaAccountHraChatQuestionnaire</summary>
			public static readonly string LookupCollectionViaAccountHraChatQuestionnaire = "LookupCollectionViaAccountHraChatQuestionnaire";
			/// <summary>Member name LookupCollectionViaCallQueueCustomer_</summary>
			public static readonly string LookupCollectionViaCallQueueCustomer_ = "LookupCollectionViaCallQueueCustomer_";
			/// <summary>Member name LookupCollectionViaCallQueueCustomer</summary>
			public static readonly string LookupCollectionViaCallQueueCustomer = "LookupCollectionViaCallQueueCustomer";
			/// <summary>Member name LookupCollectionViaCallCenterTeam_</summary>
			public static readonly string LookupCollectionViaCallCenterTeam_ = "LookupCollectionViaCallCenterTeam_";
			/// <summary>Member name LookupCollectionViaCampaign_</summary>
			public static readonly string LookupCollectionViaCampaign_ = "LookupCollectionViaCampaign_";
			/// <summary>Member name LookupCollectionViaClinicalTestQualificationCriteria_</summary>
			public static readonly string LookupCollectionViaClinicalTestQualificationCriteria_ = "LookupCollectionViaClinicalTestQualificationCriteria_";
			/// <summary>Member name LookupCollectionViaClinicalTestQualificationCriteria</summary>
			public static readonly string LookupCollectionViaClinicalTestQualificationCriteria = "LookupCollectionViaClinicalTestQualificationCriteria";
			/// <summary>Member name LookupCollectionViaCheckListTemplate_</summary>
			public static readonly string LookupCollectionViaCheckListTemplate_ = "LookupCollectionViaCheckListTemplate_";
			/// <summary>Member name LookupCollectionViaCorporateUpload</summary>
			public static readonly string LookupCollectionViaCorporateUpload = "LookupCollectionViaCorporateUpload";
			/// <summary>Member name LookupCollectionViaClinicalTestQualificationCriteria___</summary>
			public static readonly string LookupCollectionViaClinicalTestQualificationCriteria___ = "LookupCollectionViaClinicalTestQualificationCriteria___";
			/// <summary>Member name LookupCollectionViaClinicalTestQualificationCriteria__</summary>
			public static readonly string LookupCollectionViaClinicalTestQualificationCriteria__ = "LookupCollectionViaClinicalTestQualificationCriteria__";
			/// <summary>Member name LookupCollectionViaCheckListTemplate</summary>
			public static readonly string LookupCollectionViaCheckListTemplate = "LookupCollectionViaCheckListTemplate";
			/// <summary>Member name LookupCollectionViaCampaignActivity</summary>
			public static readonly string LookupCollectionViaCampaignActivity = "LookupCollectionViaCampaignActivity";
			/// <summary>Member name LookupCollectionViaCampaign___</summary>
			public static readonly string LookupCollectionViaCampaign___ = "LookupCollectionViaCampaign___";
			/// <summary>Member name LookupCollectionViaCampaign__</summary>
			public static readonly string LookupCollectionViaCampaign__ = "LookupCollectionViaCampaign__";
			/// <summary>Member name LookupCollectionViaCheckListAnswer_</summary>
			public static readonly string LookupCollectionViaCheckListAnswer_ = "LookupCollectionViaCheckListAnswer_";
			/// <summary>Member name LookupCollectionViaCheckListAnswer</summary>
			public static readonly string LookupCollectionViaCheckListAnswer = "LookupCollectionViaCheckListAnswer";
			/// <summary>Member name LookupCollectionViaCampaignActivity_</summary>
			public static readonly string LookupCollectionViaCampaignActivity_ = "LookupCollectionViaCampaignActivity_";
			/// <summary>Member name LookupCollectionViaEvents________</summary>
			public static readonly string LookupCollectionViaEvents________ = "LookupCollectionViaEvents________";
			/// <summary>Member name LookupCollectionViaEvents______________</summary>
			public static readonly string LookupCollectionViaEvents______________ = "LookupCollectionViaEvents______________";
			/// <summary>Member name LookupCollectionViaEvents_________</summary>
			public static readonly string LookupCollectionViaEvents_________ = "LookupCollectionViaEvents_________";
			/// <summary>Member name LookupCollectionViaEvents_____________</summary>
			public static readonly string LookupCollectionViaEvents_____________ = "LookupCollectionViaEvents_____________";
			/// <summary>Member name LookupCollectionViaEvents___________________</summary>
			public static readonly string LookupCollectionViaEvents___________________ = "LookupCollectionViaEvents___________________";
			/// <summary>Member name LookupCollectionViaEvents__________________</summary>
			public static readonly string LookupCollectionViaEvents__________________ = "LookupCollectionViaEvents__________________";
			/// <summary>Member name LookupCollectionViaEvents_______________</summary>
			public static readonly string LookupCollectionViaEvents_______________ = "LookupCollectionViaEvents_______________";
			/// <summary>Member name LookupCollectionViaEvents_______________________</summary>
			public static readonly string LookupCollectionViaEvents_______________________ = "LookupCollectionViaEvents_______________________";
			/// <summary>Member name LookupCollectionViaEvents____________</summary>
			public static readonly string LookupCollectionViaEvents____________ = "LookupCollectionViaEvents____________";
			/// <summary>Member name LookupCollectionViaEvents____</summary>
			public static readonly string LookupCollectionViaEvents____ = "LookupCollectionViaEvents____";
			/// <summary>Member name LookupCollectionViaEvents________________</summary>
			public static readonly string LookupCollectionViaEvents________________ = "LookupCollectionViaEvents________________";
			/// <summary>Member name LookupCollectionViaEvents_______</summary>
			public static readonly string LookupCollectionViaEvents_______ = "LookupCollectionViaEvents_______";
			/// <summary>Member name LookupCollectionViaEvents_____</summary>
			public static readonly string LookupCollectionViaEvents_____ = "LookupCollectionViaEvents_____";
			/// <summary>Member name LookupCollectionViaEvents__________</summary>
			public static readonly string LookupCollectionViaEvents__________ = "LookupCollectionViaEvents__________";
			/// <summary>Member name LookupCollectionViaEvents_________________</summary>
			public static readonly string LookupCollectionViaEvents_________________ = "LookupCollectionViaEvents_________________";
			/// <summary>Member name LookupCollectionViaEvents___________</summary>
			public static readonly string LookupCollectionViaEvents___________ = "LookupCollectionViaEvents___________";
			/// <summary>Member name LookupCollectionViaEvents______________________</summary>
			public static readonly string LookupCollectionViaEvents______________________ = "LookupCollectionViaEvents______________________";
			/// <summary>Member name LookupCollectionViaEvents</summary>
			public static readonly string LookupCollectionViaEvents = "LookupCollectionViaEvents";
			/// <summary>Member name LookupCollectionViaEvents______</summary>
			public static readonly string LookupCollectionViaEvents______ = "LookupCollectionViaEvents______";
			/// <summary>Member name LookupCollectionViaEvents__</summary>
			public static readonly string LookupCollectionViaEvents__ = "LookupCollectionViaEvents__";
			/// <summary>Member name LookupCollectionViaEventCustomers___</summary>
			public static readonly string LookupCollectionViaEventCustomers___ = "LookupCollectionViaEventCustomers___";
			/// <summary>Member name LookupCollectionViaEventCustomers</summary>
			public static readonly string LookupCollectionViaEventCustomers = "LookupCollectionViaEventCustomers";
			/// <summary>Member name LookupCollectionViaEventCustomers_</summary>
			public static readonly string LookupCollectionViaEventCustomers_ = "LookupCollectionViaEventCustomers_";
			/// <summary>Member name LookupCollectionViaEventCustomers__</summary>
			public static readonly string LookupCollectionViaEventCustomers__ = "LookupCollectionViaEventCustomers__";
			/// <summary>Member name LookupCollectionViaEvents___</summary>
			public static readonly string LookupCollectionViaEvents___ = "LookupCollectionViaEvents___";
			/// <summary>Member name LookupCollectionViaEvents________________________</summary>
			public static readonly string LookupCollectionViaEvents________________________ = "LookupCollectionViaEvents________________________";
			/// <summary>Member name LookupCollectionViaEvents____________________</summary>
			public static readonly string LookupCollectionViaEvents____________________ = "LookupCollectionViaEvents____________________";
			/// <summary>Member name LookupCollectionViaEvents_____________________</summary>
			public static readonly string LookupCollectionViaEvents_____________________ = "LookupCollectionViaEvents_____________________";
			/// <summary>Member name LookupCollectionViaEvents_</summary>
			public static readonly string LookupCollectionViaEvents_ = "LookupCollectionViaEvents_";
			/// <summary>Member name MarketingPrintOrderItemCollectionViaPrintOrderItemTracking</summary>
			public static readonly string MarketingPrintOrderItemCollectionViaPrintOrderItemTracking = "MarketingPrintOrderItemCollectionViaPrintOrderItemTracking";
			/// <summary>Member name MarketingPrintOrderItemCollectionViaPrintOrderItemTracking_</summary>
			public static readonly string MarketingPrintOrderItemCollectionViaPrintOrderItemTracking_ = "MarketingPrintOrderItemCollectionViaPrintOrderItemTracking_";
			/// <summary>Member name MedicareQuestionCollectionViaCustomerMedicareQuestionAnswer</summary>
			public static readonly string MedicareQuestionCollectionViaCustomerMedicareQuestionAnswer = "MedicareQuestionCollectionViaCustomerMedicareQuestionAnswer";
			/// <summary>Member name NdcCollectionViaCurrentMedication</summary>
			public static readonly string NdcCollectionViaCurrentMedication = "NdcCollectionViaCurrentMedication";
			/// <summary>Member name NotesDetailsCollectionViaPriorityInQueue</summary>
			public static readonly string NotesDetailsCollectionViaPriorityInQueue = "NotesDetailsCollectionViaPriorityInQueue";
			/// <summary>Member name NotesDetailsCollectionViaPriorityInQueue_</summary>
			public static readonly string NotesDetailsCollectionViaPriorityInQueue_ = "NotesDetailsCollectionViaPriorityInQueue_";
			/// <summary>Member name NotesDetailsCollectionViaCallQueueCustomer_</summary>
			public static readonly string NotesDetailsCollectionViaCallQueueCustomer_ = "NotesDetailsCollectionViaCallQueueCustomer_";
			/// <summary>Member name NotesDetailsCollectionViaEvents</summary>
			public static readonly string NotesDetailsCollectionViaEvents = "NotesDetailsCollectionViaEvents";
			/// <summary>Member name NotesDetailsCollectionViaCallQueueCustomer__</summary>
			public static readonly string NotesDetailsCollectionViaCallQueueCustomer__ = "NotesDetailsCollectionViaCallQueueCustomer__";
			/// <summary>Member name NotesDetailsCollectionViaEvents_</summary>
			public static readonly string NotesDetailsCollectionViaEvents_ = "NotesDetailsCollectionViaEvents_";
			/// <summary>Member name NotesDetailsCollectionViaEvents___</summary>
			public static readonly string NotesDetailsCollectionViaEvents___ = "NotesDetailsCollectionViaEvents___";
			/// <summary>Member name NotesDetailsCollectionViaCallQueueCustomer</summary>
			public static readonly string NotesDetailsCollectionViaCallQueueCustomer = "NotesDetailsCollectionViaCallQueueCustomer";
			/// <summary>Member name NotesDetailsCollectionViaEvents____</summary>
			public static readonly string NotesDetailsCollectionViaEvents____ = "NotesDetailsCollectionViaEvents____";
			/// <summary>Member name NotesDetailsCollectionViaEvents__</summary>
			public static readonly string NotesDetailsCollectionViaEvents__ = "NotesDetailsCollectionViaEvents__";
			/// <summary>Member name NotificationMediumCollectionViaNotificationType</summary>
			public static readonly string NotificationMediumCollectionViaNotificationType = "NotificationMediumCollectionViaNotificationType";
			/// <summary>Member name NotificationMediumCollectionViaNotification</summary>
			public static readonly string NotificationMediumCollectionViaNotification = "NotificationMediumCollectionViaNotification";
			/// <summary>Member name NotificationTypeCollectionViaEventCustomerTestNotPerformedNotification</summary>
			public static readonly string NotificationTypeCollectionViaEventCustomerTestNotPerformedNotification = "NotificationTypeCollectionViaEventCustomerTestNotPerformedNotification";
			/// <summary>Member name NotificationTypeCollectionViaEmailTemplate</summary>
			public static readonly string NotificationTypeCollectionViaEmailTemplate = "NotificationTypeCollectionViaEmailTemplate";
			/// <summary>Member name NotificationTypeCollectionViaNotification</summary>
			public static readonly string NotificationTypeCollectionViaNotification = "NotificationTypeCollectionViaNotification";
			/// <summary>Member name OrderCollectionViaRefundRequest_</summary>
			public static readonly string OrderCollectionViaRefundRequest_ = "OrderCollectionViaRefundRequest_";
			/// <summary>Member name OrderCollectionViaRefundRequest</summary>
			public static readonly string OrderCollectionViaRefundRequest = "OrderCollectionViaRefundRequest";
			/// <summary>Member name OrganizationCollectionViaAccountTestHcpcsCode_</summary>
			public static readonly string OrganizationCollectionViaAccountTestHcpcsCode_ = "OrganizationCollectionViaAccountTestHcpcsCode_";
			/// <summary>Member name OrganizationCollectionViaAccountTestHcpcsCode</summary>
			public static readonly string OrganizationCollectionViaAccountTestHcpcsCode = "OrganizationCollectionViaAccountTestHcpcsCode";
			/// <summary>Member name OrganizationCollectionViaAccountCallCenterOrganization</summary>
			public static readonly string OrganizationCollectionViaAccountCallCenterOrganization = "OrganizationCollectionViaAccountCallCenterOrganization";
			/// <summary>Member name OrganizationCollectionViaAccountCallCenterOrganization_</summary>
			public static readonly string OrganizationCollectionViaAccountCallCenterOrganization_ = "OrganizationCollectionViaAccountCallCenterOrganization_";
			/// <summary>Member name OrganizationCollectionViaEventAccountTestHcpcsCode_</summary>
			public static readonly string OrganizationCollectionViaEventAccountTestHcpcsCode_ = "OrganizationCollectionViaEventAccountTestHcpcsCode_";
			/// <summary>Member name OrganizationCollectionViaEventAccountTestHcpcsCode</summary>
			public static readonly string OrganizationCollectionViaEventAccountTestHcpcsCode = "OrganizationCollectionViaEventAccountTestHcpcsCode";
			/// <summary>Member name OrganizationCollectionViaMarketingPrintOrder</summary>
			public static readonly string OrganizationCollectionViaMarketingPrintOrder = "OrganizationCollectionViaMarketingPrintOrder";
			/// <summary>Member name OrganizationCollectionViaMarketingPrintOrder_</summary>
			public static readonly string OrganizationCollectionViaMarketingPrintOrder_ = "OrganizationCollectionViaMarketingPrintOrder_";
			/// <summary>Member name OrganizationCollectionViaAffiliateProfile</summary>
			public static readonly string OrganizationCollectionViaAffiliateProfile = "OrganizationCollectionViaAffiliateProfile";
			/// <summary>Member name PackageCollectionViaPreApprovedPackage</summary>
			public static readonly string PackageCollectionViaPreApprovedPackage = "PackageCollectionViaPreApprovedPackage";
			/// <summary>Member name PhysicianMasterCollectionViaCustomerPrimaryCarePhysician</summary>
			public static readonly string PhysicianMasterCollectionViaCustomerPrimaryCarePhysician = "PhysicianMasterCollectionViaCustomerPrimaryCarePhysician";
			/// <summary>Member name PhysicianMasterCollectionViaCustomerPrimaryCarePhysician_</summary>
			public static readonly string PhysicianMasterCollectionViaCustomerPrimaryCarePhysician_ = "PhysicianMasterCollectionViaCustomerPrimaryCarePhysician_";
			/// <summary>Member name PhysicianMasterCollectionViaCustomerPrimaryCarePhysician__</summary>
			public static readonly string PhysicianMasterCollectionViaCustomerPrimaryCarePhysician__ = "PhysicianMasterCollectionViaCustomerPrimaryCarePhysician__";
			/// <summary>Member name PodDetailsCollectionViaSalesRepPodAssigments</summary>
			public static readonly string PodDetailsCollectionViaSalesRepPodAssigments = "PodDetailsCollectionViaSalesRepPodAssigments";
			/// <summary>Member name PodDetailsCollectionViaEventStaffAssignment</summary>
			public static readonly string PodDetailsCollectionViaEventStaffAssignment = "PodDetailsCollectionViaEventStaffAssignment";
			/// <summary>Member name PodDetailsCollectionViaEventNote_</summary>
			public static readonly string PodDetailsCollectionViaEventNote_ = "PodDetailsCollectionViaEventNote_";
			/// <summary>Member name PodDetailsCollectionViaEventNote</summary>
			public static readonly string PodDetailsCollectionViaEventNote = "PodDetailsCollectionViaEventNote";
			/// <summary>Member name PodDetailsCollectionViaPodDefaultTeam</summary>
			public static readonly string PodDetailsCollectionViaPodDefaultTeam = "PodDetailsCollectionViaPodDefaultTeam";
			/// <summary>Member name PodDetailsCollectionViaEventStaffAssignment_</summary>
			public static readonly string PodDetailsCollectionViaEventStaffAssignment_ = "PodDetailsCollectionViaEventStaffAssignment_";
			/// <summary>Member name PodDetailsCollectionViaEventStaffAssignment__</summary>
			public static readonly string PodDetailsCollectionViaEventStaffAssignment__ = "PodDetailsCollectionViaEventStaffAssignment__";
			/// <summary>Member name PreQualificationQuestionCollectionViaEventCustomerQuestionAnswer_</summary>
			public static readonly string PreQualificationQuestionCollectionViaEventCustomerQuestionAnswer_ = "PreQualificationQuestionCollectionViaEventCustomerQuestionAnswer_";
			/// <summary>Member name PreQualificationQuestionCollectionViaDisqualifiedTest</summary>
			public static readonly string PreQualificationQuestionCollectionViaDisqualifiedTest = "PreQualificationQuestionCollectionViaDisqualifiedTest";
			/// <summary>Member name PreQualificationQuestionCollectionViaDisqualifiedTest_</summary>
			public static readonly string PreQualificationQuestionCollectionViaDisqualifiedTest_ = "PreQualificationQuestionCollectionViaDisqualifiedTest_";
			/// <summary>Member name PreQualificationQuestionCollectionViaEventCustomerQuestionAnswer</summary>
			public static readonly string PreQualificationQuestionCollectionViaEventCustomerQuestionAnswer = "PreQualificationQuestionCollectionViaEventCustomerQuestionAnswer";
			/// <summary>Member name ProspectCustomerCollectionViaCallQueueCustomer_</summary>
			public static readonly string ProspectCustomerCollectionViaCallQueueCustomer_ = "ProspectCustomerCollectionViaCallQueueCustomer_";
			/// <summary>Member name ProspectCustomerCollectionViaCallQueueCustomer</summary>
			public static readonly string ProspectCustomerCollectionViaCallQueueCustomer = "ProspectCustomerCollectionViaCallQueueCustomer";
			/// <summary>Member name ProspectCustomerCollectionViaCallQueueCustomer__</summary>
			public static readonly string ProspectCustomerCollectionViaCallQueueCustomer__ = "ProspectCustomerCollectionViaCallQueueCustomer__";
			/// <summary>Member name ProspectListDetailsCollectionViaProspects</summary>
			public static readonly string ProspectListDetailsCollectionViaProspects = "ProspectListDetailsCollectionViaProspects";
			/// <summary>Member name ProspectsCollectionViaHostFacilityRanking</summary>
			public static readonly string ProspectsCollectionViaHostFacilityRanking = "ProspectsCollectionViaHostFacilityRanking";
			/// <summary>Member name ProspectsCollectionViaHostPayment</summary>
			public static readonly string ProspectsCollectionViaHostPayment = "ProspectsCollectionViaHostPayment";
			/// <summary>Member name ProspectTypeCollectionViaProspects</summary>
			public static readonly string ProspectTypeCollectionViaProspects = "ProspectTypeCollectionViaProspects";
			/// <summary>Member name RefundRequestCollectionViaEventAppointmentCancellationLog</summary>
			public static readonly string RefundRequestCollectionViaEventAppointmentCancellationLog = "RefundRequestCollectionViaEventAppointmentCancellationLog";
			/// <summary>Member name RelationshipCollectionViaGuardianDetails_</summary>
			public static readonly string RelationshipCollectionViaGuardianDetails_ = "RelationshipCollectionViaGuardianDetails_";
			/// <summary>Member name RelationshipCollectionViaGuardianDetails</summary>
			public static readonly string RelationshipCollectionViaGuardianDetails = "RelationshipCollectionViaGuardianDetails";
			/// <summary>Member name RescheduleCancelDispositionCollectionViaEventAppointmentChangeLog</summary>
			public static readonly string RescheduleCancelDispositionCollectionViaEventAppointmentChangeLog = "RescheduleCancelDispositionCollectionViaEventAppointmentChangeLog";
			/// <summary>Member name RescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog</summary>
			public static readonly string RescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog = "RescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog";
			/// <summary>Member name RoleCollectionViaUser</summary>
			public static readonly string RoleCollectionViaUser = "RoleCollectionViaUser";
			/// <summary>Member name RoleCollectionViaHostFacilityRanking</summary>
			public static readonly string RoleCollectionViaHostFacilityRanking = "RoleCollectionViaHostFacilityRanking";
			/// <summary>Member name RoleCollectionViaUser_</summary>
			public static readonly string RoleCollectionViaUser_ = "RoleCollectionViaUser_";
			/// <summary>Member name ScheduleMethodCollectionViaEvents___</summary>
			public static readonly string ScheduleMethodCollectionViaEvents___ = "ScheduleMethodCollectionViaEvents___";
			/// <summary>Member name ScheduleMethodCollectionViaEvents____</summary>
			public static readonly string ScheduleMethodCollectionViaEvents____ = "ScheduleMethodCollectionViaEvents____";
			/// <summary>Member name ScheduleMethodCollectionViaEvents</summary>
			public static readonly string ScheduleMethodCollectionViaEvents = "ScheduleMethodCollectionViaEvents";
			/// <summary>Member name ScheduleMethodCollectionViaEvents_</summary>
			public static readonly string ScheduleMethodCollectionViaEvents_ = "ScheduleMethodCollectionViaEvents_";
			/// <summary>Member name ScheduleMethodCollectionViaEvents__</summary>
			public static readonly string ScheduleMethodCollectionViaEvents__ = "ScheduleMethodCollectionViaEvents__";
			/// <summary>Member name ScriptsCollectionViaCallQueue</summary>
			public static readonly string ScriptsCollectionViaCallQueue = "ScriptsCollectionViaCallQueue";
			/// <summary>Member name ScriptsCollectionViaCallQueue_</summary>
			public static readonly string ScriptsCollectionViaCallQueue_ = "ScriptsCollectionViaCallQueue_";
			/// <summary>Member name ShippingOptionCollectionViaShippingDetail_</summary>
			public static readonly string ShippingOptionCollectionViaShippingDetail_ = "ShippingOptionCollectionViaShippingDetail_";
			/// <summary>Member name ShippingOptionCollectionViaShippingDetail</summary>
			public static readonly string ShippingOptionCollectionViaShippingDetail = "ShippingOptionCollectionViaShippingDetail";
			/// <summary>Member name StaffEventRoleCollectionViaEventStaffAssignment__</summary>
			public static readonly string StaffEventRoleCollectionViaEventStaffAssignment__ = "StaffEventRoleCollectionViaEventStaffAssignment__";
			/// <summary>Member name StaffEventRoleCollectionViaPodDefaultTeam</summary>
			public static readonly string StaffEventRoleCollectionViaPodDefaultTeam = "StaffEventRoleCollectionViaPodDefaultTeam";
			/// <summary>Member name StaffEventRoleCollectionViaEventStaffAssignment</summary>
			public static readonly string StaffEventRoleCollectionViaEventStaffAssignment = "StaffEventRoleCollectionViaEventStaffAssignment";
			/// <summary>Member name StaffEventRoleCollectionViaEventStaffAssignment_</summary>
			public static readonly string StaffEventRoleCollectionViaEventStaffAssignment_ = "StaffEventRoleCollectionViaEventStaffAssignment_";
			/// <summary>Member name StandardFindingTestReadingCollectionViaCustomerEventReading</summary>
			public static readonly string StandardFindingTestReadingCollectionViaCustomerEventReading = "StandardFindingTestReadingCollectionViaCustomerEventReading";
			/// <summary>Member name StateCollectionViaAddress</summary>
			public static readonly string StateCollectionViaAddress = "StateCollectionViaAddress";
			/// <summary>Member name SurveyQuestionCollectionViaSurveyAnswer_</summary>
			public static readonly string SurveyQuestionCollectionViaSurveyAnswer_ = "SurveyQuestionCollectionViaSurveyAnswer_";
			/// <summary>Member name SurveyQuestionCollectionViaSurveyAnswer</summary>
			public static readonly string SurveyQuestionCollectionViaSurveyAnswer = "SurveyQuestionCollectionViaSurveyAnswer";
			/// <summary>Member name TagCollectionViaPreAssessmentCustomerCallQueueCallAttempt</summary>
			public static readonly string TagCollectionViaPreAssessmentCustomerCallQueueCallAttempt = "TagCollectionViaPreAssessmentCustomerCallQueueCallAttempt";
			/// <summary>Member name TagCollectionViaCustomerCallQueueCallAttempt</summary>
			public static readonly string TagCollectionViaCustomerCallQueueCallAttempt = "TagCollectionViaCustomerCallQueueCallAttempt";
			/// <summary>Member name TaskPriorityTypesCollectionViaTaskDetails__</summary>
			public static readonly string TaskPriorityTypesCollectionViaTaskDetails__ = "TaskPriorityTypesCollectionViaTaskDetails__";
			/// <summary>Member name TaskPriorityTypesCollectionViaTaskDetails_</summary>
			public static readonly string TaskPriorityTypesCollectionViaTaskDetails_ = "TaskPriorityTypesCollectionViaTaskDetails_";
			/// <summary>Member name TaskPriorityTypesCollectionViaTaskDetails</summary>
			public static readonly string TaskPriorityTypesCollectionViaTaskDetails = "TaskPriorityTypesCollectionViaTaskDetails";
			/// <summary>Member name TaskStatusTypesCollectionViaTaskDetails_</summary>
			public static readonly string TaskStatusTypesCollectionViaTaskDetails_ = "TaskStatusTypesCollectionViaTaskDetails_";
			/// <summary>Member name TaskStatusTypesCollectionViaTaskDetails__</summary>
			public static readonly string TaskStatusTypesCollectionViaTaskDetails__ = "TaskStatusTypesCollectionViaTaskDetails__";
			/// <summary>Member name TaskStatusTypesCollectionViaTaskDetails</summary>
			public static readonly string TaskStatusTypesCollectionViaTaskDetails = "TaskStatusTypesCollectionViaTaskDetails";
			/// <summary>Member name TechnicianProfileCollectionViaPinChangelog</summary>
			public static readonly string TechnicianProfileCollectionViaPinChangelog = "TechnicianProfileCollectionViaPinChangelog";
			/// <summary>Member name TerritoryCollectionViaTerritory</summary>
			public static readonly string TerritoryCollectionViaTerritory = "TerritoryCollectionViaTerritory";
			/// <summary>Member name TerritoryCollectionViaOrganizationRoleUserTerritory</summary>
			public static readonly string TerritoryCollectionViaOrganizationRoleUserTerritory = "TerritoryCollectionViaOrganizationRoleUserTerritory";
			/// <summary>Member name TestCollectionViaEventCustomerTestNotPerformedNotification</summary>
			public static readonly string TestCollectionViaEventCustomerTestNotPerformedNotification = "TestCollectionViaEventCustomerTestNotPerformedNotification";
			/// <summary>Member name TestCollectionViaEventPhysicianTest</summary>
			public static readonly string TestCollectionViaEventPhysicianTest = "TestCollectionViaEventPhysicianTest";
			/// <summary>Member name TestCollectionViaDisqualifiedTest_</summary>
			public static readonly string TestCollectionViaDisqualifiedTest_ = "TestCollectionViaDisqualifiedTest_";
			/// <summary>Member name TestCollectionViaEventCustomerRetest</summary>
			public static readonly string TestCollectionViaEventCustomerRetest = "TestCollectionViaEventCustomerRetest";
			/// <summary>Member name TestCollectionViaEventPhysicianTest_</summary>
			public static readonly string TestCollectionViaEventPhysicianTest_ = "TestCollectionViaEventPhysicianTest_";
			/// <summary>Member name TestCollectionViaKynLabValues_</summary>
			public static readonly string TestCollectionViaKynLabValues_ = "TestCollectionViaKynLabValues_";
			/// <summary>Member name TestCollectionViaEventPhysicianTest__</summary>
			public static readonly string TestCollectionViaEventPhysicianTest__ = "TestCollectionViaEventPhysicianTest__";
			/// <summary>Member name TestCollectionViaTestHcpcsCode_</summary>
			public static readonly string TestCollectionViaTestHcpcsCode_ = "TestCollectionViaTestHcpcsCode_";
			/// <summary>Member name TestCollectionViaTestHcpcsCode</summary>
			public static readonly string TestCollectionViaTestHcpcsCode = "TestCollectionViaTestHcpcsCode";
			/// <summary>Member name TestCollectionViaKynLabValues</summary>
			public static readonly string TestCollectionViaKynLabValues = "TestCollectionViaKynLabValues";
			/// <summary>Member name TestCollectionViaPreApprovedTest</summary>
			public static readonly string TestCollectionViaPreApprovedTest = "TestCollectionViaPreApprovedTest";
			/// <summary>Member name TestCollectionViaClinicalTestQualificationCriteria</summary>
			public static readonly string TestCollectionViaClinicalTestQualificationCriteria = "TestCollectionViaClinicalTestQualificationCriteria";
			/// <summary>Member name TestCollectionViaRequiredTest</summary>
			public static readonly string TestCollectionViaRequiredTest = "TestCollectionViaRequiredTest";
			/// <summary>Member name TestCollectionViaClinicalTestQualificationCriteria_</summary>
			public static readonly string TestCollectionViaClinicalTestQualificationCriteria_ = "TestCollectionViaClinicalTestQualificationCriteria_";
			/// <summary>Member name TestCollectionViaDisqualifiedTest</summary>
			public static readonly string TestCollectionViaDisqualifiedTest = "TestCollectionViaDisqualifiedTest";
			/// <summary>Member name TestCollectionViaPreQualificationTestTemplate</summary>
			public static readonly string TestCollectionViaPreQualificationTestTemplate = "TestCollectionViaPreQualificationTestTemplate";
			/// <summary>Member name TestCollectionViaPreQualificationTestTemplate_</summary>
			public static readonly string TestCollectionViaPreQualificationTestTemplate_ = "TestCollectionViaPreQualificationTestTemplate_";
			/// <summary>Member name TestCollectionViaPreQualificationQuestion</summary>
			public static readonly string TestCollectionViaPreQualificationQuestion = "TestCollectionViaPreQualificationQuestion";
			/// <summary>Member name TestHcpcsCodeCollectionViaEventAccountTestHcpcsCode_</summary>
			public static readonly string TestHcpcsCodeCollectionViaEventAccountTestHcpcsCode_ = "TestHcpcsCodeCollectionViaEventAccountTestHcpcsCode_";
			/// <summary>Member name TestHcpcsCodeCollectionViaEventAccountTestHcpcsCode</summary>
			public static readonly string TestHcpcsCodeCollectionViaEventAccountTestHcpcsCode = "TestHcpcsCodeCollectionViaEventAccountTestHcpcsCode";
			/// <summary>Member name TestHcpcsCodeCollectionViaAccountTestHcpcsCode_</summary>
			public static readonly string TestHcpcsCodeCollectionViaAccountTestHcpcsCode_ = "TestHcpcsCodeCollectionViaAccountTestHcpcsCode_";
			/// <summary>Member name TestHcpcsCodeCollectionViaAccountTestHcpcsCode</summary>
			public static readonly string TestHcpcsCodeCollectionViaAccountTestHcpcsCode = "TestHcpcsCodeCollectionViaAccountTestHcpcsCode";
			/// <summary>Member name TestNotPerformedReasonCollectionViaTestNotPerformed_</summary>
			public static readonly string TestNotPerformedReasonCollectionViaTestNotPerformed_ = "TestNotPerformedReasonCollectionViaTestNotPerformed_";
			/// <summary>Member name TestNotPerformedReasonCollectionViaTestNotPerformed</summary>
			public static readonly string TestNotPerformedReasonCollectionViaTestNotPerformed = "TestNotPerformedReasonCollectionViaTestNotPerformed";
			/// <summary>Member name TestReadingCollectionViaCustomerEventReading</summary>
			public static readonly string TestReadingCollectionViaCustomerEventReading = "TestReadingCollectionViaCustomerEventReading";
			/// <summary>Member name TestUnableScreenReasonCollectionViaCustomerEventUnableScreenReason</summary>
			public static readonly string TestUnableScreenReasonCollectionViaCustomerEventUnableScreenReason = "TestUnableScreenReasonCollectionViaCustomerEventUnableScreenReason";
			/// <summary>Member name UserLoginCollectionViaPasswordChangelog</summary>
			public static readonly string UserLoginCollectionViaPasswordChangelog = "UserLoginCollectionViaPasswordChangelog";
			/// <summary>Member name ZipCollectionViaAddress</summary>
			public static readonly string ZipCollectionViaAddress = "ZipCollectionViaAddress";
			/// <summary>Member name AccountCoordinatorProfile</summary>
			public static readonly string AccountCoordinatorProfile = "AccountCoordinatorProfile";
			/// <summary>Member name AffiliateProfile_</summary>
			public static readonly string AffiliateProfile_ = "AffiliateProfile_";
			/// <summary>Member name CallCenterRepProfile</summary>
			public static readonly string CallCenterRepProfile = "CallCenterRepProfile";
			/// <summary>Member name CustomerProfile</summary>
			public static readonly string CustomerProfile = "CustomerProfile";
			/// <summary>Member name PhysicianProfile</summary>
			public static readonly string PhysicianProfile = "PhysicianProfile";
			/// <summary>Member name TechnicianProfile</summary>
			public static readonly string TechnicianProfile = "TechnicianProfile";
		}
		#endregion
		
		/// <summary> Static CTor for setting up custom property hashtables. Is executed before the first instance of this entity class or derived classes is constructed. </summary>
		static OrganizationRoleUserEntity()
		{
			SetupCustomPropertyHashtables();
		}

		/// <summary> CTor</summary>
		public OrganizationRoleUserEntity():base("OrganizationRoleUserEntity")
		{
			InitClassEmpty(null, CreateFields());
		}

		/// <summary> CTor</summary>
		/// <remarks>For framework usage.</remarks>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public OrganizationRoleUserEntity(IEntityFields2 fields):base("OrganizationRoleUserEntity")
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this OrganizationRoleUserEntity</param>
		public OrganizationRoleUserEntity(IValidator validator):base("OrganizationRoleUserEntity")
		{
			InitClassEmpty(validator, CreateFields());
		}
				

		/// <summary> CTor</summary>
		/// <param name="organizationRoleUserId">PK value for OrganizationRoleUser which data should be fetched into this OrganizationRoleUser object</param>
		/// <remarks>The entity is not fetched by this constructor. Use a DataAccessAdapter for that.</remarks>
		public OrganizationRoleUserEntity(System.Int64 organizationRoleUserId):base("OrganizationRoleUserEntity")
		{
			InitClassEmpty(null, CreateFields());
			this.OrganizationRoleUserId = organizationRoleUserId;
		}

		/// <summary> CTor</summary>
		/// <param name="organizationRoleUserId">PK value for OrganizationRoleUser which data should be fetched into this OrganizationRoleUser object</param>
		/// <param name="validator">The custom validator object for this OrganizationRoleUserEntity</param>
		/// <remarks>The entity is not fetched by this constructor. Use a DataAccessAdapter for that.</remarks>
		public OrganizationRoleUserEntity(System.Int64 organizationRoleUserId, IValidator validator):base("OrganizationRoleUserEntity")
		{
			InitClassEmpty(validator, CreateFields());
			this.OrganizationRoleUserId = organizationRoleUserId;
		}

		/// <summary> Protected CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		[EditorBrowsable(EditorBrowsableState.Never)]
		protected OrganizationRoleUserEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			if(SerializationHelper.Optimization != SerializationOptimization.Fast) 
			{
				_accountCallCenterOrganization_ = (EntityCollection<AccountCallCenterOrganizationEntity>)info.GetValue("_accountCallCenterOrganization_", typeof(EntityCollection<AccountCallCenterOrganizationEntity>));
				_accountCallCenterOrganization = (EntityCollection<AccountCallCenterOrganizationEntity>)info.GetValue("_accountCallCenterOrganization", typeof(EntityCollection<AccountCallCenterOrganizationEntity>));
				_accountHraChatQuestionnaire_ = (EntityCollection<AccountHraChatQuestionnaireEntity>)info.GetValue("_accountHraChatQuestionnaire_", typeof(EntityCollection<AccountHraChatQuestionnaireEntity>));
				_accountHraChatQuestionnaire = (EntityCollection<AccountHraChatQuestionnaireEntity>)info.GetValue("_accountHraChatQuestionnaire", typeof(EntityCollection<AccountHraChatQuestionnaireEntity>));
				_accountTestHcpcsCode_ = (EntityCollection<AccountTestHcpcsCodeEntity>)info.GetValue("_accountTestHcpcsCode_", typeof(EntityCollection<AccountTestHcpcsCodeEntity>));
				_accountTestHcpcsCode = (EntityCollection<AccountTestHcpcsCodeEntity>)info.GetValue("_accountTestHcpcsCode", typeof(EntityCollection<AccountTestHcpcsCodeEntity>));
				_activityType = (EntityCollection<ActivityTypeEntity>)info.GetValue("_activityType", typeof(EntityCollection<ActivityTypeEntity>));
				_additionalFields_ = (EntityCollection<AdditionalFieldsEntity>)info.GetValue("_additionalFields_", typeof(EntityCollection<AdditionalFieldsEntity>));
				_additionalFields = (EntityCollection<AdditionalFieldsEntity>)info.GetValue("_additionalFields", typeof(EntityCollection<AdditionalFieldsEntity>));
				_address = (EntityCollection<AddressEntity>)info.GetValue("_address", typeof(EntityCollection<AddressEntity>));
				_advocateManagerTeam_ = (EntityCollection<AdvocateManagerTeamEntity>)info.GetValue("_advocateManagerTeam_", typeof(EntityCollection<AdvocateManagerTeamEntity>));
				_advocateManagerTeam = (EntityCollection<AdvocateManagerTeamEntity>)info.GetValue("_advocateManagerTeam", typeof(EntityCollection<AdvocateManagerTeamEntity>));
				_afcampaign_ = (EntityCollection<AfcampaignEntity>)info.GetValue("_afcampaign_", typeof(EntityCollection<AfcampaignEntity>));
				_afcampaign = (EntityCollection<AfcampaignEntity>)info.GetValue("_afcampaign", typeof(EntityCollection<AfcampaignEntity>));
				_affiliateProfile = (EntityCollection<AffiliateProfileEntity>)info.GetValue("_affiliateProfile", typeof(EntityCollection<AffiliateProfileEntity>));
				_applicationAuthentication_ = (EntityCollection<ApplicationAuthenticationEntity>)info.GetValue("_applicationAuthentication_", typeof(EntityCollection<ApplicationAuthenticationEntity>));
				_applicationAuthentication = (EntityCollection<ApplicationAuthenticationEntity>)info.GetValue("_applicationAuthentication", typeof(EntityCollection<ApplicationAuthenticationEntity>));
				_barrier_ = (EntityCollection<BarrierEntity>)info.GetValue("_barrier_", typeof(EntityCollection<BarrierEntity>));
				_barrier = (EntityCollection<BarrierEntity>)info.GetValue("_barrier", typeof(EntityCollection<BarrierEntity>));
				_callCenterAgentTeam = (EntityCollection<CallCenterAgentTeamEntity>)info.GetValue("_callCenterAgentTeam", typeof(EntityCollection<CallCenterAgentTeamEntity>));
				_callCenterAgentTeamLog__ = (EntityCollection<CallCenterAgentTeamLogEntity>)info.GetValue("_callCenterAgentTeamLog__", typeof(EntityCollection<CallCenterAgentTeamLogEntity>));
				_callCenterAgentTeamLog_ = (EntityCollection<CallCenterAgentTeamLogEntity>)info.GetValue("_callCenterAgentTeamLog_", typeof(EntityCollection<CallCenterAgentTeamLogEntity>));
				_callCenterAgentTeamLog = (EntityCollection<CallCenterAgentTeamLogEntity>)info.GetValue("_callCenterAgentTeamLog", typeof(EntityCollection<CallCenterAgentTeamLogEntity>));
				_callCenterTeam_ = (EntityCollection<CallCenterTeamEntity>)info.GetValue("_callCenterTeam_", typeof(EntityCollection<CallCenterTeamEntity>));
				_callCenterTeam = (EntityCollection<CallCenterTeamEntity>)info.GetValue("_callCenterTeam", typeof(EntityCollection<CallCenterTeamEntity>));
				_callQueue_ = (EntityCollection<CallQueueEntity>)info.GetValue("_callQueue_", typeof(EntityCollection<CallQueueEntity>));
				_callQueue = (EntityCollection<CallQueueEntity>)info.GetValue("_callQueue", typeof(EntityCollection<CallQueueEntity>));
				_callQueueAssignment = (EntityCollection<CallQueueAssignmentEntity>)info.GetValue("_callQueueAssignment", typeof(EntityCollection<CallQueueAssignmentEntity>));
				_callQueueCustomer__ = (EntityCollection<CallQueueCustomerEntity>)info.GetValue("_callQueueCustomer__", typeof(EntityCollection<CallQueueCustomerEntity>));
				_callQueueCustomer_ = (EntityCollection<CallQueueCustomerEntity>)info.GetValue("_callQueueCustomer_", typeof(EntityCollection<CallQueueCustomerEntity>));
				_callQueueCustomer = (EntityCollection<CallQueueCustomerEntity>)info.GetValue("_callQueueCustomer", typeof(EntityCollection<CallQueueCustomerEntity>));
				_callQueueCustomerLock = (EntityCollection<CallQueueCustomerLockEntity>)info.GetValue("_callQueueCustomerLock", typeof(EntityCollection<CallQueueCustomerLockEntity>));
				_callQueueCustomTag = (EntityCollection<CallQueueCustomTagEntity>)info.GetValue("_callQueueCustomTag", typeof(EntityCollection<CallQueueCustomTagEntity>));
				_callRoundCallQueue = (EntityCollection<CallRoundCallQueueEntity>)info.GetValue("_callRoundCallQueue", typeof(EntityCollection<CallRoundCallQueueEntity>));
				_calls = (EntityCollection<CallsEntity>)info.GetValue("_calls", typeof(EntityCollection<CallsEntity>));
				_callUpload = (EntityCollection<CallUploadEntity>)info.GetValue("_callUpload", typeof(EntityCollection<CallUploadEntity>));
				_campaign_ = (EntityCollection<CampaignEntity>)info.GetValue("_campaign_", typeof(EntityCollection<CampaignEntity>));
				_campaign = (EntityCollection<CampaignEntity>)info.GetValue("_campaign", typeof(EntityCollection<CampaignEntity>));
				_campaignActivity_ = (EntityCollection<CampaignActivityEntity>)info.GetValue("_campaignActivity_", typeof(EntityCollection<CampaignActivityEntity>));
				_campaignActivity = (EntityCollection<CampaignActivityEntity>)info.GetValue("_campaignActivity", typeof(EntityCollection<CampaignActivityEntity>));
				_campaignActivityAssignment = (EntityCollection<CampaignActivityAssignmentEntity>)info.GetValue("_campaignActivityAssignment", typeof(EntityCollection<CampaignActivityAssignmentEntity>));
				_campaignAssignment = (EntityCollection<CampaignAssignmentEntity>)info.GetValue("_campaignAssignment", typeof(EntityCollection<CampaignAssignmentEntity>));
				_cdcontentGeneratorTracking = (EntityCollection<CdcontentGeneratorTrackingEntity>)info.GetValue("_cdcontentGeneratorTracking", typeof(EntityCollection<CdcontentGeneratorTrackingEntity>));
				_chaperoneAnswer_ = (EntityCollection<ChaperoneAnswerEntity>)info.GetValue("_chaperoneAnswer_", typeof(EntityCollection<ChaperoneAnswerEntity>));
				_chaperoneAnswer = (EntityCollection<ChaperoneAnswerEntity>)info.GetValue("_chaperoneAnswer", typeof(EntityCollection<ChaperoneAnswerEntity>));
				_chaperoneSignature = (EntityCollection<ChaperoneSignatureEntity>)info.GetValue("_chaperoneSignature", typeof(EntityCollection<ChaperoneSignatureEntity>));
				_check_ = (EntityCollection<CheckEntity>)info.GetValue("_check_", typeof(EntityCollection<CheckEntity>));
				_check = (EntityCollection<CheckEntity>)info.GetValue("_check", typeof(EntityCollection<CheckEntity>));
				_checkListAnswer_ = (EntityCollection<CheckListAnswerEntity>)info.GetValue("_checkListAnswer_", typeof(EntityCollection<CheckListAnswerEntity>));
				_checkListAnswer = (EntityCollection<CheckListAnswerEntity>)info.GetValue("_checkListAnswer", typeof(EntityCollection<CheckListAnswerEntity>));
				_checkListTemplate_ = (EntityCollection<CheckListTemplateEntity>)info.GetValue("_checkListTemplate_", typeof(EntityCollection<CheckListTemplateEntity>));
				_checkListTemplate = (EntityCollection<CheckListTemplateEntity>)info.GetValue("_checkListTemplate", typeof(EntityCollection<CheckListTemplateEntity>));
				_clinicalTestQualificationCriteria_ = (EntityCollection<ClinicalTestQualificationCriteriaEntity>)info.GetValue("_clinicalTestQualificationCriteria_", typeof(EntityCollection<ClinicalTestQualificationCriteriaEntity>));
				_clinicalTestQualificationCriteria = (EntityCollection<ClinicalTestQualificationCriteriaEntity>)info.GetValue("_clinicalTestQualificationCriteria", typeof(EntityCollection<ClinicalTestQualificationCriteriaEntity>));
				_contactCall_ = (EntityCollection<ContactCallEntity>)info.GetValue("_contactCall_", typeof(EntityCollection<ContactCallEntity>));
				_contactCall = (EntityCollection<ContactCallEntity>)info.GetValue("_contactCall", typeof(EntityCollection<ContactCallEntity>));
				_contactMeeting_ = (EntityCollection<ContactMeetingEntity>)info.GetValue("_contactMeeting_", typeof(EntityCollection<ContactMeetingEntity>));
				_contactMeeting = (EntityCollection<ContactMeetingEntity>)info.GetValue("_contactMeeting", typeof(EntityCollection<ContactMeetingEntity>));
				_content_ = (EntityCollection<ContentEntity>)info.GetValue("_content_", typeof(EntityCollection<ContentEntity>));
				_content = (EntityCollection<ContentEntity>)info.GetValue("_content", typeof(EntityCollection<ContentEntity>));
				_corporateTag_ = (EntityCollection<CorporateTagEntity>)info.GetValue("_corporateTag_", typeof(EntityCollection<CorporateTagEntity>));
				_corporateTag = (EntityCollection<CorporateTagEntity>)info.GetValue("_corporateTag", typeof(EntityCollection<CorporateTagEntity>));
				_corporateUpload = (EntityCollection<CorporateUploadEntity>)info.GetValue("_corporateUpload", typeof(EntityCollection<CorporateUploadEntity>));
				_coupons_ = (EntityCollection<CouponsEntity>)info.GetValue("_coupons_", typeof(EntityCollection<CouponsEntity>));
				_coupons = (EntityCollection<CouponsEntity>)info.GetValue("_coupons", typeof(EntityCollection<CouponsEntity>));
				_currentMedication = (EntityCollection<CurrentMedicationEntity>)info.GetValue("_currentMedication", typeof(EntityCollection<CurrentMedicationEntity>));
				_customerActivityTypeUpload = (EntityCollection<CustomerActivityTypeUploadEntity>)info.GetValue("_customerActivityTypeUpload", typeof(EntityCollection<CustomerActivityTypeUploadEntity>));
				_customerCallAttempts = (EntityCollection<CustomerCallAttemptsEntity>)info.GetValue("_customerCallAttempts", typeof(EntityCollection<CustomerCallAttemptsEntity>));
				_customerCallQueueCallAttempt = (EntityCollection<CustomerCallQueueCallAttemptEntity>)info.GetValue("_customerCallQueueCallAttempt", typeof(EntityCollection<CustomerCallQueueCallAttemptEntity>));
				_customerClinicalQuestionAnswer_ = (EntityCollection<CustomerClinicalQuestionAnswerEntity>)info.GetValue("_customerClinicalQuestionAnswer_", typeof(EntityCollection<CustomerClinicalQuestionAnswerEntity>));
				_customerClinicalQuestionAnswer = (EntityCollection<CustomerClinicalQuestionAnswerEntity>)info.GetValue("_customerClinicalQuestionAnswer", typeof(EntityCollection<CustomerClinicalQuestionAnswerEntity>));
				_customerEligibility_ = (EntityCollection<CustomerEligibilityEntity>)info.GetValue("_customerEligibility_", typeof(EntityCollection<CustomerEligibilityEntity>));
				_customerEligibility = (EntityCollection<CustomerEligibilityEntity>)info.GetValue("_customerEligibility", typeof(EntityCollection<CustomerEligibilityEntity>));
				_customerEventCriticalTestData_ = (EntityCollection<CustomerEventCriticalTestDataEntity>)info.GetValue("_customerEventCriticalTestData_", typeof(EntityCollection<CustomerEventCriticalTestDataEntity>));
				_customerEventCriticalTestData = (EntityCollection<CustomerEventCriticalTestDataEntity>)info.GetValue("_customerEventCriticalTestData", typeof(EntityCollection<CustomerEventCriticalTestDataEntity>));
				_customerEventPriorityInQueueData_ = (EntityCollection<CustomerEventPriorityInQueueDataEntity>)info.GetValue("_customerEventPriorityInQueueData_", typeof(EntityCollection<CustomerEventPriorityInQueueDataEntity>));
				_customerEventPriorityInQueueData = (EntityCollection<CustomerEventPriorityInQueueDataEntity>)info.GetValue("_customerEventPriorityInQueueData", typeof(EntityCollection<CustomerEventPriorityInQueueDataEntity>));
				_customerEventReading = (EntityCollection<CustomerEventReadingEntity>)info.GetValue("_customerEventReading", typeof(EntityCollection<CustomerEventReadingEntity>));
				_customerEventTestPhysicianEvaluation = (EntityCollection<CustomerEventTestPhysicianEvaluationEntity>)info.GetValue("_customerEventTestPhysicianEvaluation", typeof(EntityCollection<CustomerEventTestPhysicianEvaluationEntity>));
				_customerEventTestState__ = (EntityCollection<CustomerEventTestStateEntity>)info.GetValue("_customerEventTestState__", typeof(EntityCollection<CustomerEventTestStateEntity>));
				_customerEventTestState_ = (EntityCollection<CustomerEventTestStateEntity>)info.GetValue("_customerEventTestState_", typeof(EntityCollection<CustomerEventTestStateEntity>));
				_customerEventTestState = (EntityCollection<CustomerEventTestStateEntity>)info.GetValue("_customerEventTestState", typeof(EntityCollection<CustomerEventTestStateEntity>));
				_customerEventUnableScreenReason = (EntityCollection<CustomerEventUnableScreenReasonEntity>)info.GetValue("_customerEventUnableScreenReason", typeof(EntityCollection<CustomerEventUnableScreenReasonEntity>));
				_customerHealthInfo = (EntityCollection<CustomerHealthInfoEntity>)info.GetValue("_customerHealthInfo", typeof(EntityCollection<CustomerHealthInfoEntity>));
				_customerHealthInfoArchive = (EntityCollection<CustomerHealthInfoArchiveEntity>)info.GetValue("_customerHealthInfoArchive", typeof(EntityCollection<CustomerHealthInfoArchiveEntity>));
				_customerIcdCode = (EntityCollection<CustomerIcdCodeEntity>)info.GetValue("_customerIcdCode", typeof(EntityCollection<CustomerIcdCodeEntity>));
				_customerLockForCall = (EntityCollection<CustomerLockForCallEntity>)info.GetValue("_customerLockForCall", typeof(EntityCollection<CustomerLockForCallEntity>));
				_customerMedicareQuestionAnswer = (EntityCollection<CustomerMedicareQuestionAnswerEntity>)info.GetValue("_customerMedicareQuestionAnswer", typeof(EntityCollection<CustomerMedicareQuestionAnswerEntity>));
				_customerPhoneNumberUpdateUpload = (EntityCollection<CustomerPhoneNumberUpdateUploadEntity>)info.GetValue("_customerPhoneNumberUpdateUpload", typeof(EntityCollection<CustomerPhoneNumberUpdateUploadEntity>));
				_customerPrimaryCarePhysician_ = (EntityCollection<CustomerPrimaryCarePhysicianEntity>)info.GetValue("_customerPrimaryCarePhysician_", typeof(EntityCollection<CustomerPrimaryCarePhysicianEntity>));
				_customerPrimaryCarePhysician__ = (EntityCollection<CustomerPrimaryCarePhysicianEntity>)info.GetValue("_customerPrimaryCarePhysician__", typeof(EntityCollection<CustomerPrimaryCarePhysicianEntity>));
				_customerPrimaryCarePhysician = (EntityCollection<CustomerPrimaryCarePhysicianEntity>)info.GetValue("_customerPrimaryCarePhysician", typeof(EntityCollection<CustomerPrimaryCarePhysicianEntity>));
				_customerProfileHistory = (EntityCollection<CustomerProfileHistoryEntity>)info.GetValue("_customerProfileHistory", typeof(EntityCollection<CustomerProfileHistoryEntity>));
				_customerRegistrationNotes = (EntityCollection<CustomerRegistrationNotesEntity>)info.GetValue("_customerRegistrationNotes", typeof(EntityCollection<CustomerRegistrationNotesEntity>));
				_customerResultScreeningCommunication__ = (EntityCollection<CustomerResultScreeningCommunicationEntity>)info.GetValue("_customerResultScreeningCommunication__", typeof(EntityCollection<CustomerResultScreeningCommunicationEntity>));
				_customerResultScreeningCommunication_ = (EntityCollection<CustomerResultScreeningCommunicationEntity>)info.GetValue("_customerResultScreeningCommunication_", typeof(EntityCollection<CustomerResultScreeningCommunicationEntity>));
				_customerResultScreeningCommunication = (EntityCollection<CustomerResultScreeningCommunicationEntity>)info.GetValue("_customerResultScreeningCommunication", typeof(EntityCollection<CustomerResultScreeningCommunicationEntity>));
				_customerTag_ = (EntityCollection<CustomerTagEntity>)info.GetValue("_customerTag_", typeof(EntityCollection<CustomerTagEntity>));
				_customerTag = (EntityCollection<CustomerTagEntity>)info.GetValue("_customerTag", typeof(EntityCollection<CustomerTagEntity>));
				_customerTargeted_ = (EntityCollection<CustomerTargetedEntity>)info.GetValue("_customerTargeted_", typeof(EntityCollection<CustomerTargetedEntity>));
				_customerTargeted = (EntityCollection<CustomerTargetedEntity>)info.GetValue("_customerTargeted", typeof(EntityCollection<CustomerTargetedEntity>));
				_customerWarmTransfer_ = (EntityCollection<CustomerWarmTransferEntity>)info.GetValue("_customerWarmTransfer_", typeof(EntityCollection<CustomerWarmTransferEntity>));
				_customerWarmTransfer = (EntityCollection<CustomerWarmTransferEntity>)info.GetValue("_customerWarmTransfer", typeof(EntityCollection<CustomerWarmTransferEntity>));
				_customEventNotification = (EntityCollection<CustomEventNotificationEntity>)info.GetValue("_customEventNotification", typeof(EntityCollection<CustomEventNotificationEntity>));
				_directMail = (EntityCollection<DirectMailEntity>)info.GetValue("_directMail", typeof(EntityCollection<DirectMailEntity>));
				_directMailType_ = (EntityCollection<DirectMailTypeEntity>)info.GetValue("_directMailType_", typeof(EntityCollection<DirectMailTypeEntity>));
				_directMailType = (EntityCollection<DirectMailTypeEntity>)info.GetValue("_directMailType", typeof(EntityCollection<DirectMailTypeEntity>));
				_disqualifiedTest_ = (EntityCollection<DisqualifiedTestEntity>)info.GetValue("_disqualifiedTest_", typeof(EntityCollection<DisqualifiedTestEntity>));
				_disqualifiedTest = (EntityCollection<DisqualifiedTestEntity>)info.GetValue("_disqualifiedTest", typeof(EntityCollection<DisqualifiedTestEntity>));
				_eligibility = (EntityCollection<EligibilityEntity>)info.GetValue("_eligibility", typeof(EntityCollection<EligibilityEntity>));
				_eligibilityUpload = (EntityCollection<EligibilityUploadEntity>)info.GetValue("_eligibilityUpload", typeof(EntityCollection<EligibilityUploadEntity>));
				_emailTemplate = (EntityCollection<EmailTemplateEntity>)info.GetValue("_emailTemplate", typeof(EntityCollection<EmailTemplateEntity>));
				_eventAccountTestHcpcsCode_ = (EntityCollection<EventAccountTestHcpcsCodeEntity>)info.GetValue("_eventAccountTestHcpcsCode_", typeof(EntityCollection<EventAccountTestHcpcsCodeEntity>));
				_eventAccountTestHcpcsCode = (EntityCollection<EventAccountTestHcpcsCodeEntity>)info.GetValue("_eventAccountTestHcpcsCode", typeof(EntityCollection<EventAccountTestHcpcsCodeEntity>));
				_eventActivityTemplate = (EntityCollection<EventActivityTemplateEntity>)info.GetValue("_eventActivityTemplate", typeof(EntityCollection<EventActivityTemplateEntity>));
				_eventActivityTemplateCall = (EntityCollection<EventActivityTemplateCallEntity>)info.GetValue("_eventActivityTemplateCall", typeof(EntityCollection<EventActivityTemplateCallEntity>));
				_eventActivityTemplateEmail = (EntityCollection<EventActivityTemplateEmailEntity>)info.GetValue("_eventActivityTemplateEmail", typeof(EntityCollection<EventActivityTemplateEmailEntity>));
				_eventActivityTemplateMeeting = (EntityCollection<EventActivityTemplateMeetingEntity>)info.GetValue("_eventActivityTemplateMeeting", typeof(EntityCollection<EventActivityTemplateMeetingEntity>));
				_eventActivityTemplateTask = (EntityCollection<EventActivityTemplateTaskEntity>)info.GetValue("_eventActivityTemplateTask", typeof(EntityCollection<EventActivityTemplateTaskEntity>));
				_eventAppointment = (EntityCollection<EventAppointmentEntity>)info.GetValue("_eventAppointment", typeof(EntityCollection<EventAppointmentEntity>));
				_eventAppointmentCancellationLog = (EntityCollection<EventAppointmentCancellationLogEntity>)info.GetValue("_eventAppointmentCancellationLog", typeof(EntityCollection<EventAppointmentCancellationLogEntity>));
				_eventAppointmentChangeLog = (EntityCollection<EventAppointmentChangeLogEntity>)info.GetValue("_eventAppointmentChangeLog", typeof(EntityCollection<EventAppointmentChangeLogEntity>));
				_eventCustomerBasicBioMetric = (EntityCollection<EventCustomerBasicBioMetricEntity>)info.GetValue("_eventCustomerBasicBioMetric", typeof(EntityCollection<EventCustomerBasicBioMetricEntity>));
				_eventCustomerGiftCard = (EntityCollection<EventCustomerGiftCardEntity>)info.GetValue("_eventCustomerGiftCard", typeof(EntityCollection<EventCustomerGiftCardEntity>));
				_eventCustomerPrimaryCarePhysician = (EntityCollection<EventCustomerPrimaryCarePhysicianEntity>)info.GetValue("_eventCustomerPrimaryCarePhysician", typeof(EntityCollection<EventCustomerPrimaryCarePhysicianEntity>));
				_eventCustomerQuestionAnswer_ = (EntityCollection<EventCustomerQuestionAnswerEntity>)info.GetValue("_eventCustomerQuestionAnswer_", typeof(EntityCollection<EventCustomerQuestionAnswerEntity>));
				_eventCustomerQuestionAnswer = (EntityCollection<EventCustomerQuestionAnswerEntity>)info.GetValue("_eventCustomerQuestionAnswer", typeof(EntityCollection<EventCustomerQuestionAnswerEntity>));
				_eventCustomerResult___ = (EntityCollection<EventCustomerResultEntity>)info.GetValue("_eventCustomerResult___", typeof(EntityCollection<EventCustomerResultEntity>));
				_eventCustomerResult__ = (EntityCollection<EventCustomerResultEntity>)info.GetValue("_eventCustomerResult__", typeof(EntityCollection<EventCustomerResultEntity>));
				_eventCustomerResult_ = (EntityCollection<EventCustomerResultEntity>)info.GetValue("_eventCustomerResult_", typeof(EntityCollection<EventCustomerResultEntity>));
				_eventCustomerResult____ = (EntityCollection<EventCustomerResultEntity>)info.GetValue("_eventCustomerResult____", typeof(EntityCollection<EventCustomerResultEntity>));
				_eventCustomerResult______ = (EntityCollection<EventCustomerResultEntity>)info.GetValue("_eventCustomerResult______", typeof(EntityCollection<EventCustomerResultEntity>));
				_eventCustomerResult_______ = (EntityCollection<EventCustomerResultEntity>)info.GetValue("_eventCustomerResult_______", typeof(EntityCollection<EventCustomerResultEntity>));
				_eventCustomerResult = (EntityCollection<EventCustomerResultEntity>)info.GetValue("_eventCustomerResult", typeof(EntityCollection<EventCustomerResultEntity>));
				_eventCustomerResult_____ = (EntityCollection<EventCustomerResultEntity>)info.GetValue("_eventCustomerResult_____", typeof(EntityCollection<EventCustomerResultEntity>));
				_eventCustomerResult________ = (EntityCollection<EventCustomerResultEntity>)info.GetValue("_eventCustomerResult________", typeof(EntityCollection<EventCustomerResultEntity>));
				_eventCustomerResultBloodLab = (EntityCollection<EventCustomerResultBloodLabEntity>)info.GetValue("_eventCustomerResultBloodLab", typeof(EntityCollection<EventCustomerResultBloodLabEntity>));
				_eventCustomerResultHistory = (EntityCollection<EventCustomerResultHistoryEntity>)info.GetValue("_eventCustomerResultHistory", typeof(EntityCollection<EventCustomerResultHistoryEntity>));
				_eventCustomerResultHistory_ = (EntityCollection<EventCustomerResultHistoryEntity>)info.GetValue("_eventCustomerResultHistory_", typeof(EntityCollection<EventCustomerResultHistoryEntity>));
				_eventCustomerResultHistory__ = (EntityCollection<EventCustomerResultHistoryEntity>)info.GetValue("_eventCustomerResultHistory__", typeof(EntityCollection<EventCustomerResultHistoryEntity>));
				_eventCustomerRetest = (EntityCollection<EventCustomerRetestEntity>)info.GetValue("_eventCustomerRetest", typeof(EntityCollection<EventCustomerRetestEntity>));
				_eventCustomers_ = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomers_", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomers = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomers", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomerTestNotPerformedNotification = (EntityCollection<EventCustomerTestNotPerformedNotificationEntity>)info.GetValue("_eventCustomerTestNotPerformedNotification", typeof(EntityCollection<EventCustomerTestNotPerformedNotificationEntity>));
				_eventNote_ = (EntityCollection<EventNoteEntity>)info.GetValue("_eventNote_", typeof(EntityCollection<EventNoteEntity>));
				_eventNote = (EntityCollection<EventNoteEntity>)info.GetValue("_eventNote", typeof(EntityCollection<EventNoteEntity>));
				_eventPhysicianTest__ = (EntityCollection<EventPhysicianTestEntity>)info.GetValue("_eventPhysicianTest__", typeof(EntityCollection<EventPhysicianTestEntity>));
				_eventPhysicianTest_ = (EntityCollection<EventPhysicianTestEntity>)info.GetValue("_eventPhysicianTest_", typeof(EntityCollection<EventPhysicianTestEntity>));
				_eventPhysicianTest = (EntityCollection<EventPhysicianTestEntity>)info.GetValue("_eventPhysicianTest", typeof(EntityCollection<EventPhysicianTestEntity>));
				_events___ = (EntityCollection<EventsEntity>)info.GetValue("_events___", typeof(EntityCollection<EventsEntity>));
				_events____ = (EntityCollection<EventsEntity>)info.GetValue("_events____", typeof(EntityCollection<EventsEntity>));
				_events__ = (EntityCollection<EventsEntity>)info.GetValue("_events__", typeof(EntityCollection<EventsEntity>));
				_events = (EntityCollection<EventsEntity>)info.GetValue("_events", typeof(EntityCollection<EventsEntity>));
				_events_ = (EntityCollection<EventsEntity>)info.GetValue("_events_", typeof(EntityCollection<EventsEntity>));
				_eventStaffAssignment__ = (EntityCollection<EventStaffAssignmentEntity>)info.GetValue("_eventStaffAssignment__", typeof(EntityCollection<EventStaffAssignmentEntity>));
				_eventStaffAssignment_ = (EntityCollection<EventStaffAssignmentEntity>)info.GetValue("_eventStaffAssignment_", typeof(EntityCollection<EventStaffAssignmentEntity>));
				_eventStaffAssignment = (EntityCollection<EventStaffAssignmentEntity>)info.GetValue("_eventStaffAssignment", typeof(EntityCollection<EventStaffAssignmentEntity>));
				_exitInterviewAnswer_ = (EntityCollection<ExitInterviewAnswerEntity>)info.GetValue("_exitInterviewAnswer_", typeof(EntityCollection<ExitInterviewAnswerEntity>));
				_exitInterviewAnswer = (EntityCollection<ExitInterviewAnswerEntity>)info.GetValue("_exitInterviewAnswer", typeof(EntityCollection<ExitInterviewAnswerEntity>));
				_exitInterviewSignature = (EntityCollection<ExitInterviewSignatureEntity>)info.GetValue("_exitInterviewSignature", typeof(EntityCollection<ExitInterviewSignatureEntity>));
				_exportableReportsQueue = (EntityCollection<ExportableReportsQueueEntity>)info.GetValue("_exportableReportsQueue", typeof(EntityCollection<ExportableReportsQueueEntity>));
				_file = (EntityCollection<FileEntity>)info.GetValue("_file", typeof(EntityCollection<FileEntity>));
				_fillEventCallQueue = (EntityCollection<FillEventCallQueueEntity>)info.GetValue("_fillEventCallQueue", typeof(EntityCollection<FillEventCallQueueEntity>));
				_fluConsentAnswer_ = (EntityCollection<FluConsentAnswerEntity>)info.GetValue("_fluConsentAnswer_", typeof(EntityCollection<FluConsentAnswerEntity>));
				_fluConsentAnswer = (EntityCollection<FluConsentAnswerEntity>)info.GetValue("_fluConsentAnswer", typeof(EntityCollection<FluConsentAnswerEntity>));
				_fluConsentSignature = (EntityCollection<FluConsentSignatureEntity>)info.GetValue("_fluConsentSignature", typeof(EntityCollection<FluConsentSignatureEntity>));
				_fluConsentTemplate_ = (EntityCollection<FluConsentTemplateEntity>)info.GetValue("_fluConsentTemplate_", typeof(EntityCollection<FluConsentTemplateEntity>));
				_fluConsentTemplate = (EntityCollection<FluConsentTemplateEntity>)info.GetValue("_fluConsentTemplate", typeof(EntityCollection<FluConsentTemplateEntity>));
				_gcNotGivenReason_ = (EntityCollection<GcNotGivenReasonEntity>)info.GetValue("_gcNotGivenReason_", typeof(EntityCollection<GcNotGivenReasonEntity>));
				_gcNotGivenReason = (EntityCollection<GcNotGivenReasonEntity>)info.GetValue("_gcNotGivenReason", typeof(EntityCollection<GcNotGivenReasonEntity>));
				_guardianDetails_ = (EntityCollection<GuardianDetailsEntity>)info.GetValue("_guardianDetails_", typeof(EntityCollection<GuardianDetailsEntity>));
				_guardianDetails = (EntityCollection<GuardianDetailsEntity>)info.GetValue("_guardianDetails", typeof(EntityCollection<GuardianDetailsEntity>));
				_hafTemplate_ = (EntityCollection<HafTemplateEntity>)info.GetValue("_hafTemplate_", typeof(EntityCollection<HafTemplateEntity>));
				_hafTemplate = (EntityCollection<HafTemplateEntity>)info.GetValue("_hafTemplate", typeof(EntityCollection<HafTemplateEntity>));
				_hcpcsCode_ = (EntityCollection<HcpcsCodeEntity>)info.GetValue("_hcpcsCode_", typeof(EntityCollection<HcpcsCodeEntity>));
				_hcpcsCode = (EntityCollection<HcpcsCodeEntity>)info.GetValue("_hcpcsCode", typeof(EntityCollection<HcpcsCodeEntity>));
				_healthPlanCallQueueCriteria__ = (EntityCollection<HealthPlanCallQueueCriteriaEntity>)info.GetValue("_healthPlanCallQueueCriteria__", typeof(EntityCollection<HealthPlanCallQueueCriteriaEntity>));
				_healthPlanCallQueueCriteria_ = (EntityCollection<HealthPlanCallQueueCriteriaEntity>)info.GetValue("_healthPlanCallQueueCriteria_", typeof(EntityCollection<HealthPlanCallQueueCriteriaEntity>));
				_healthPlanCriteriaAssignment__ = (EntityCollection<HealthPlanCriteriaAssignmentEntity>)info.GetValue("_healthPlanCriteriaAssignment__", typeof(EntityCollection<HealthPlanCriteriaAssignmentEntity>));
				_healthPlanCriteriaAssignment_ = (EntityCollection<HealthPlanCriteriaAssignmentEntity>)info.GetValue("_healthPlanCriteriaAssignment_", typeof(EntityCollection<HealthPlanCriteriaAssignmentEntity>));
				_healthPlanCriteriaAssignment = (EntityCollection<HealthPlanCriteriaAssignmentEntity>)info.GetValue("_healthPlanCriteriaAssignment", typeof(EntityCollection<HealthPlanCriteriaAssignmentEntity>));
				_healthPlanCriteriaAssignmentUpload = (EntityCollection<HealthPlanCriteriaAssignmentUploadEntity>)info.GetValue("_healthPlanCriteriaAssignmentUpload", typeof(EntityCollection<HealthPlanCriteriaAssignmentUploadEntity>));
				_healthPlanCriteriaTeamAssignment_ = (EntityCollection<HealthPlanCriteriaTeamAssignmentEntity>)info.GetValue("_healthPlanCriteriaTeamAssignment_", typeof(EntityCollection<HealthPlanCriteriaTeamAssignmentEntity>));
				_healthPlanCriteriaTeamAssignment = (EntityCollection<HealthPlanCriteriaTeamAssignmentEntity>)info.GetValue("_healthPlanCriteriaTeamAssignment", typeof(EntityCollection<HealthPlanCriteriaTeamAssignmentEntity>));
				_healthPlanRevenue_ = (EntityCollection<HealthPlanRevenueEntity>)info.GetValue("_healthPlanRevenue_", typeof(EntityCollection<HealthPlanRevenueEntity>));
				_healthPlanRevenue = (EntityCollection<HealthPlanRevenueEntity>)info.GetValue("_healthPlanRevenue", typeof(EntityCollection<HealthPlanRevenueEntity>));
				_hospitalPartnerCustomer__ = (EntityCollection<HospitalPartnerCustomerEntity>)info.GetValue("_hospitalPartnerCustomer__", typeof(EntityCollection<HospitalPartnerCustomerEntity>));
				_hospitalPartnerCustomer_ = (EntityCollection<HospitalPartnerCustomerEntity>)info.GetValue("_hospitalPartnerCustomer_", typeof(EntityCollection<HospitalPartnerCustomerEntity>));
				_hospitalPartnerCustomer = (EntityCollection<HospitalPartnerCustomerEntity>)info.GetValue("_hospitalPartnerCustomer", typeof(EntityCollection<HospitalPartnerCustomerEntity>));
				_hostFacilityRanking = (EntityCollection<HostFacilityRankingEntity>)info.GetValue("_hostFacilityRanking", typeof(EntityCollection<HostFacilityRankingEntity>));
				_hostPayment = (EntityCollection<HostPaymentEntity>)info.GetValue("_hostPayment", typeof(EntityCollection<HostPaymentEntity>));
				_hostPaymentTransaction = (EntityCollection<HostPaymentTransactionEntity>)info.GetValue("_hostPaymentTransaction", typeof(EntityCollection<HostPaymentTransactionEntity>));
				_icdCodes_ = (EntityCollection<IcdCodesEntity>)info.GetValue("_icdCodes_", typeof(EntityCollection<IcdCodesEntity>));
				_icdCodes = (EntityCollection<IcdCodesEntity>)info.GetValue("_icdCodes", typeof(EntityCollection<IcdCodesEntity>));
				_incidentalFindings = (EntityCollection<IncidentalFindingsEntity>)info.GetValue("_incidentalFindings", typeof(EntityCollection<IncidentalFindingsEntity>));
				_kynLabValues_ = (EntityCollection<KynLabValuesEntity>)info.GetValue("_kynLabValues_", typeof(EntityCollection<KynLabValuesEntity>));
				_kynLabValues = (EntityCollection<KynLabValuesEntity>)info.GetValue("_kynLabValues", typeof(EntityCollection<KynLabValuesEntity>));
				_lab = (EntityCollection<LabEntity>)info.GetValue("_lab", typeof(EntityCollection<LabEntity>));
				_language = (EntityCollection<LanguageEntity>)info.GetValue("_language", typeof(EntityCollection<LanguageEntity>));
				_languageBarrierCallQueue = (EntityCollection<LanguageBarrierCallQueueEntity>)info.GetValue("_languageBarrierCallQueue", typeof(EntityCollection<LanguageBarrierCallQueueEntity>));
				_mailRoundCallQueue = (EntityCollection<MailRoundCallQueueEntity>)info.GetValue("_mailRoundCallQueue", typeof(EntityCollection<MailRoundCallQueueEntity>));
				_marketingPrintOrder = (EntityCollection<MarketingPrintOrderEntity>)info.GetValue("_marketingPrintOrder", typeof(EntityCollection<MarketingPrintOrderEntity>));
				_medication_ = (EntityCollection<MedicationEntity>)info.GetValue("_medication_", typeof(EntityCollection<MedicationEntity>));
				_medication = (EntityCollection<MedicationEntity>)info.GetValue("_medication", typeof(EntityCollection<MedicationEntity>));
				_medicationUpload = (EntityCollection<MedicationUploadEntity>)info.GetValue("_medicationUpload", typeof(EntityCollection<MedicationUploadEntity>));
				_mergeCustomerUpload = (EntityCollection<MergeCustomerUploadEntity>)info.GetValue("_mergeCustomerUpload", typeof(EntityCollection<MergeCustomerUploadEntity>));
				_noShowCallQueue = (EntityCollection<NoShowCallQueueEntity>)info.GetValue("_noShowCallQueue", typeof(EntityCollection<NoShowCallQueueEntity>));
				_notesDetails_ = (EntityCollection<NotesDetailsEntity>)info.GetValue("_notesDetails_", typeof(EntityCollection<NotesDetailsEntity>));
				_notesDetails = (EntityCollection<NotesDetailsEntity>)info.GetValue("_notesDetails", typeof(EntityCollection<NotesDetailsEntity>));
				_notification = (EntityCollection<NotificationEntity>)info.GetValue("_notification", typeof(EntityCollection<NotificationEntity>));
				_notificationType = (EntityCollection<NotificationTypeEntity>)info.GetValue("_notificationType", typeof(EntityCollection<NotificationTypeEntity>));
				_organizationRoleUserTerritory = (EntityCollection<OrganizationRoleUserTerritoryEntity>)info.GetValue("_organizationRoleUserTerritory", typeof(EntityCollection<OrganizationRoleUserTerritoryEntity>));
				_orgRoleUserActivity = (EntityCollection<OrgRoleUserActivityEntity>)info.GetValue("_orgRoleUserActivity", typeof(EntityCollection<OrgRoleUserActivityEntity>));
				_participationConsentSignature = (EntityCollection<ParticipationConsentSignatureEntity>)info.GetValue("_participationConsentSignature", typeof(EntityCollection<ParticipationConsentSignatureEntity>));
				_passwordChangelog = (EntityCollection<PasswordChangelogEntity>)info.GetValue("_passwordChangelog", typeof(EntityCollection<PasswordChangelogEntity>));
				_payPeriod_ = (EntityCollection<PayPeriodEntity>)info.GetValue("_payPeriod_", typeof(EntityCollection<PayPeriodEntity>));
				_payPeriod = (EntityCollection<PayPeriodEntity>)info.GetValue("_payPeriod", typeof(EntityCollection<PayPeriodEntity>));
				_pcpAppointment_ = (EntityCollection<PcpAppointmentEntity>)info.GetValue("_pcpAppointment_", typeof(EntityCollection<PcpAppointmentEntity>));
				_pcpAppointment = (EntityCollection<PcpAppointmentEntity>)info.GetValue("_pcpAppointment", typeof(EntityCollection<PcpAppointmentEntity>));
				_pcpDisposition_ = (EntityCollection<PcpDispositionEntity>)info.GetValue("_pcpDisposition_", typeof(EntityCollection<PcpDispositionEntity>));
				_pcpDisposition = (EntityCollection<PcpDispositionEntity>)info.GetValue("_pcpDisposition", typeof(EntityCollection<PcpDispositionEntity>));
				_physicianRecordRequestSignature = (EntityCollection<PhysicianRecordRequestSignatureEntity>)info.GetValue("_physicianRecordRequestSignature", typeof(EntityCollection<PhysicianRecordRequestSignatureEntity>));
				_pinChangelog = (EntityCollection<PinChangelogEntity>)info.GetValue("_pinChangelog", typeof(EntityCollection<PinChangelogEntity>));
				_podDefaultTeam = (EntityCollection<PodDefaultTeamEntity>)info.GetValue("_podDefaultTeam", typeof(EntityCollection<PodDefaultTeamEntity>));
				_preApprovedPackage = (EntityCollection<PreApprovedPackageEntity>)info.GetValue("_preApprovedPackage", typeof(EntityCollection<PreApprovedPackageEntity>));
				_preApprovedTest = (EntityCollection<PreApprovedTestEntity>)info.GetValue("_preApprovedTest", typeof(EntityCollection<PreApprovedTestEntity>));
				_preAssessmentCallQueueCustomerLock = (EntityCollection<PreAssessmentCallQueueCustomerLockEntity>)info.GetValue("_preAssessmentCallQueueCustomerLock", typeof(EntityCollection<PreAssessmentCallQueueCustomerLockEntity>));
				_preAssessmentCustomerCallQueueCallAttempt = (EntityCollection<PreAssessmentCustomerCallQueueCallAttemptEntity>)info.GetValue("_preAssessmentCustomerCallQueueCallAttempt", typeof(EntityCollection<PreAssessmentCustomerCallQueueCallAttemptEntity>));
				_preQualificationQuestion = (EntityCollection<PreQualificationQuestionEntity>)info.GetValue("_preQualificationQuestion", typeof(EntityCollection<PreQualificationQuestionEntity>));
				_preQualificationTestTemplate_ = (EntityCollection<PreQualificationTestTemplateEntity>)info.GetValue("_preQualificationTestTemplate_", typeof(EntityCollection<PreQualificationTestTemplateEntity>));
				_preQualificationTestTemplate = (EntityCollection<PreQualificationTestTemplateEntity>)info.GetValue("_preQualificationTestTemplate", typeof(EntityCollection<PreQualificationTestTemplateEntity>));
				_printOrderItemTracking_ = (EntityCollection<PrintOrderItemTrackingEntity>)info.GetValue("_printOrderItemTracking_", typeof(EntityCollection<PrintOrderItemTrackingEntity>));
				_printOrderItemTracking = (EntityCollection<PrintOrderItemTrackingEntity>)info.GetValue("_printOrderItemTracking", typeof(EntityCollection<PrintOrderItemTrackingEntity>));
				_priorityInQueue_ = (EntityCollection<PriorityInQueueEntity>)info.GetValue("_priorityInQueue_", typeof(EntityCollection<PriorityInQueueEntity>));
				_priorityInQueue = (EntityCollection<PriorityInQueueEntity>)info.GetValue("_priorityInQueue", typeof(EntityCollection<PriorityInQueueEntity>));
				_prospectCustomer = (EntityCollection<ProspectCustomerEntity>)info.GetValue("_prospectCustomer", typeof(EntityCollection<ProspectCustomerEntity>));
				_prospects = (EntityCollection<ProspectsEntity>)info.GetValue("_prospects", typeof(EntityCollection<ProspectsEntity>));
				_rapsUpload = (EntityCollection<RapsUploadEntity>)info.GetValue("_rapsUpload", typeof(EntityCollection<RapsUploadEntity>));
				_referral = (EntityCollection<ReferralEntity>)info.GetValue("_referral", typeof(EntityCollection<ReferralEntity>));
				_refundRequest_ = (EntityCollection<RefundRequestEntity>)info.GetValue("_refundRequest_", typeof(EntityCollection<RefundRequestEntity>));
				_refundRequest = (EntityCollection<RefundRequestEntity>)info.GetValue("_refundRequest", typeof(EntityCollection<RefundRequestEntity>));
				_requiredTest = (EntityCollection<RequiredTestEntity>)info.GetValue("_requiredTest", typeof(EntityCollection<RequiredTestEntity>));
				_salesRepPodAssigments = (EntityCollection<SalesRepPodAssigmentsEntity>)info.GetValue("_salesRepPodAssigments", typeof(EntityCollection<SalesRepPodAssigmentsEntity>));
				_scheduleTemplate_ = (EntityCollection<ScheduleTemplateEntity>)info.GetValue("_scheduleTemplate_", typeof(EntityCollection<ScheduleTemplateEntity>));
				_scheduleTemplate = (EntityCollection<ScheduleTemplateEntity>)info.GetValue("_scheduleTemplate", typeof(EntityCollection<ScheduleTemplateEntity>));
				_seminars = (EntityCollection<SeminarsEntity>)info.GetValue("_seminars", typeof(EntityCollection<SeminarsEntity>));
				_shippingDetail_ = (EntityCollection<ShippingDetailEntity>)info.GetValue("_shippingDetail_", typeof(EntityCollection<ShippingDetailEntity>));
				_shippingDetail = (EntityCollection<ShippingDetailEntity>)info.GetValue("_shippingDetail", typeof(EntityCollection<ShippingDetailEntity>));
				_sourceCodeChangeLog = (EntityCollection<SourceCodeChangeLogEntity>)info.GetValue("_sourceCodeChangeLog", typeof(EntityCollection<SourceCodeChangeLogEntity>));
				_staffEventScheduleUpload = (EntityCollection<StaffEventScheduleUploadEntity>)info.GetValue("_staffEventScheduleUpload", typeof(EntityCollection<StaffEventScheduleUploadEntity>));
				_surveyAnswer_ = (EntityCollection<SurveyAnswerEntity>)info.GetValue("_surveyAnswer_", typeof(EntityCollection<SurveyAnswerEntity>));
				_surveyAnswer = (EntityCollection<SurveyAnswerEntity>)info.GetValue("_surveyAnswer", typeof(EntityCollection<SurveyAnswerEntity>));
				_surveyTemplate_ = (EntityCollection<SurveyTemplateEntity>)info.GetValue("_surveyTemplate_", typeof(EntityCollection<SurveyTemplateEntity>));
				_surveyTemplate = (EntityCollection<SurveyTemplateEntity>)info.GetValue("_surveyTemplate", typeof(EntityCollection<SurveyTemplateEntity>));
				_suspectConditionUpload = (EntityCollection<SuspectConditionUploadEntity>)info.GetValue("_suspectConditionUpload", typeof(EntityCollection<SuspectConditionUploadEntity>));
				_systemGenertedCallQueueCriteria__ = (EntityCollection<SystemGeneratedCallQueueCriteriaEntity>)info.GetValue("_systemGenertedCallQueueCriteria__", typeof(EntityCollection<SystemGeneratedCallQueueCriteriaEntity>));
				_systemGenertedCallQueueCriteria_ = (EntityCollection<SystemGeneratedCallQueueCriteriaEntity>)info.GetValue("_systemGenertedCallQueueCriteria_", typeof(EntityCollection<SystemGeneratedCallQueueCriteriaEntity>));
				_systemGenertedCallQueueCriteria = (EntityCollection<SystemGeneratedCallQueueCriteriaEntity>)info.GetValue("_systemGenertedCallQueueCriteria", typeof(EntityCollection<SystemGeneratedCallQueueCriteriaEntity>));
				_taskDetails__ = (EntityCollection<TaskDetailsEntity>)info.GetValue("_taskDetails__", typeof(EntityCollection<TaskDetailsEntity>));
				_taskDetails_ = (EntityCollection<TaskDetailsEntity>)info.GetValue("_taskDetails_", typeof(EntityCollection<TaskDetailsEntity>));
				_taskDetails = (EntityCollection<TaskDetailsEntity>)info.GetValue("_taskDetails", typeof(EntityCollection<TaskDetailsEntity>));
				_territory = (EntityCollection<TerritoryEntity>)info.GetValue("_territory", typeof(EntityCollection<TerritoryEntity>));
				_testHcpcsCode_ = (EntityCollection<TestHcpcsCodeEntity>)info.GetValue("_testHcpcsCode_", typeof(EntityCollection<TestHcpcsCodeEntity>));
				_testHcpcsCode = (EntityCollection<TestHcpcsCodeEntity>)info.GetValue("_testHcpcsCode", typeof(EntityCollection<TestHcpcsCodeEntity>));
				_testNotPerformed_ = (EntityCollection<TestNotPerformedEntity>)info.GetValue("_testNotPerformed_", typeof(EntityCollection<TestNotPerformedEntity>));
				_testNotPerformed = (EntityCollection<TestNotPerformedEntity>)info.GetValue("_testNotPerformed", typeof(EntityCollection<TestNotPerformedEntity>));
				_testNotPerformedReason = (EntityCollection<TestNotPerformedReasonEntity>)info.GetValue("_testNotPerformedReason", typeof(EntityCollection<TestNotPerformedReasonEntity>));
				_testPerformedExternally_ = (EntityCollection<TestPerformedExternallyEntity>)info.GetValue("_testPerformedExternally_", typeof(EntityCollection<TestPerformedExternallyEntity>));
				_testPerformedExternally = (EntityCollection<TestPerformedExternallyEntity>)info.GetValue("_testPerformedExternally", typeof(EntityCollection<TestPerformedExternallyEntity>));
				_uncontactedCustomerCallQueue = (EntityCollection<UncontactedCustomerCallQueueEntity>)info.GetValue("_uncontactedCustomerCallQueue", typeof(EntityCollection<UncontactedCustomerCallQueueEntity>));
				_uploadZipInfo = (EntityCollection<UploadZipInfoEntity>)info.GetValue("_uploadZipInfo", typeof(EntityCollection<UploadZipInfoEntity>));
				_user__ = (EntityCollection<UserEntity>)info.GetValue("_user__", typeof(EntityCollection<UserEntity>));
				_user_ = (EntityCollection<UserEntity>)info.GetValue("_user_", typeof(EntityCollection<UserEntity>));
				_accountCollectionViaFillEventCallQueue = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaFillEventCallQueue", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaMailRoundCallQueue = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaMailRoundCallQueue", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaEligibilityUpload = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaEligibilityUpload", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaCorporateUpload = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaCorporateUpload", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaHealthPlanCallQueueCriteria = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaHealthPlanCallQueueCriteria", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaCallQueueCustomer_ = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaCallQueueCustomer_", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaCallQueueCustomer = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaCallQueueCustomer", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaCallQueueCustomer__ = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaCallQueueCustomer__", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaHealthPlanRevenue = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaHealthPlanRevenue", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaHealthPlanRevenue_ = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaHealthPlanRevenue_", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaCorporateTag_ = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaCorporateTag_", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaLanguageBarrierCallQueue = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaLanguageBarrierCallQueue", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaEventNote = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaEventNote", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaCampaign = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaCampaign", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaEventNote_ = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaEventNote_", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaCampaign_ = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaCampaign_", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaHealthPlanCallQueueCriteria_ = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaHealthPlanCallQueueCriteria_", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaCorporateTag = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaCorporateTag", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaCallQueueCustomTag = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaCallQueueCustomTag", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaCalls = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaCalls", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaCallRoundCallQueue = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaCallRoundCallQueue", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaAccountHraChatQuestionnaire_ = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaAccountHraChatQuestionnaire_", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaAccountHraChatQuestionnaire = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaAccountHraChatQuestionnaire", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaUncontactedCustomerCallQueue = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaUncontactedCustomerCallQueue", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaCustomEventNotification = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaCustomEventNotification", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaNoShowCallQueue = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaNoShowCallQueue", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaAccountCallCenterOrganization_ = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaAccountCallCenterOrganization_", typeof(EntityCollection<AccountEntity>));
				_accountCollectionViaAccountCallCenterOrganization = (EntityCollection<AccountEntity>)info.GetValue("_accountCollectionViaAccountCallCenterOrganization", typeof(EntityCollection<AccountEntity>));
				_activityCollectionViaOrgRoleUserActivity = (EntityCollection<ActivityEntity>)info.GetValue("_activityCollectionViaOrgRoleUserActivity", typeof(EntityCollection<ActivityEntity>));
				_activityTypeCollectionViaCallQueueCustomer = (EntityCollection<ActivityTypeEntity>)info.GetValue("_activityTypeCollectionViaCallQueueCustomer", typeof(EntityCollection<ActivityTypeEntity>));
				_activityTypeCollectionViaCallQueueCustomer__ = (EntityCollection<ActivityTypeEntity>)info.GetValue("_activityTypeCollectionViaCallQueueCustomer__", typeof(EntityCollection<ActivityTypeEntity>));
				_activityTypeCollectionViaCallQueueCustomer_ = (EntityCollection<ActivityTypeEntity>)info.GetValue("_activityTypeCollectionViaCallQueueCustomer_", typeof(EntityCollection<ActivityTypeEntity>));
				_addressCollectionViaCustomerPrimaryCarePhysician_ = (EntityCollection<AddressEntity>)info.GetValue("_addressCollectionViaCustomerPrimaryCarePhysician_", typeof(EntityCollection<AddressEntity>));
				_addressCollectionViaProspects = (EntityCollection<AddressEntity>)info.GetValue("_addressCollectionViaProspects", typeof(EntityCollection<AddressEntity>));
				_addressCollectionViaCustomerPrimaryCarePhysician___ = (EntityCollection<AddressEntity>)info.GetValue("_addressCollectionViaCustomerPrimaryCarePhysician___", typeof(EntityCollection<AddressEntity>));
				_addressCollectionViaCustomerPrimaryCarePhysician____ = (EntityCollection<AddressEntity>)info.GetValue("_addressCollectionViaCustomerPrimaryCarePhysician____", typeof(EntityCollection<AddressEntity>));
				_addressCollectionViaUser = (EntityCollection<AddressEntity>)info.GetValue("_addressCollectionViaUser", typeof(EntityCollection<AddressEntity>));
				_addressCollectionViaUser_ = (EntityCollection<AddressEntity>)info.GetValue("_addressCollectionViaUser_", typeof(EntityCollection<AddressEntity>));
				_addressCollectionViaShippingDetail = (EntityCollection<AddressEntity>)info.GetValue("_addressCollectionViaShippingDetail", typeof(EntityCollection<AddressEntity>));
				_addressCollectionViaHostPayment = (EntityCollection<AddressEntity>)info.GetValue("_addressCollectionViaHostPayment", typeof(EntityCollection<AddressEntity>));
				_addressCollectionViaShippingDetail_ = (EntityCollection<AddressEntity>)info.GetValue("_addressCollectionViaShippingDetail_", typeof(EntityCollection<AddressEntity>));
				_addressCollectionViaCustomerPrimaryCarePhysician = (EntityCollection<AddressEntity>)info.GetValue("_addressCollectionViaCustomerPrimaryCarePhysician", typeof(EntityCollection<AddressEntity>));
				_addressCollectionViaCustomerPrimaryCarePhysician__ = (EntityCollection<AddressEntity>)info.GetValue("_addressCollectionViaCustomerPrimaryCarePhysician__", typeof(EntityCollection<AddressEntity>));
				_addressCollectionViaCustomerPrimaryCarePhysician_____ = (EntityCollection<AddressEntity>)info.GetValue("_addressCollectionViaCustomerPrimaryCarePhysician_____", typeof(EntityCollection<AddressEntity>));
				_afadvertiserCollectionViaAfcampaign = (EntityCollection<AfadvertiserEntity>)info.GetValue("_afadvertiserCollectionViaAfcampaign", typeof(EntityCollection<AfadvertiserEntity>));
				_afadvertiserCollectionViaAfcampaign_ = (EntityCollection<AfadvertiserEntity>)info.GetValue("_afadvertiserCollectionViaAfcampaign_", typeof(EntityCollection<AfadvertiserEntity>));
				_afaffiliateCampaignCollectionViaEventCustomers = (EntityCollection<AfaffiliateCampaignEntity>)info.GetValue("_afaffiliateCampaignCollectionViaEventCustomers", typeof(EntityCollection<AfaffiliateCampaignEntity>));
				_afaffiliateCampaignCollectionViaEventCustomers_ = (EntityCollection<AfaffiliateCampaignEntity>)info.GetValue("_afaffiliateCampaignCollectionViaEventCustomers_", typeof(EntityCollection<AfaffiliateCampaignEntity>));
				_afaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer = (EntityCollection<AfaffiliateCampaignMarketingMaterialEntity>)info.GetValue("_afaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer", typeof(EntityCollection<AfaffiliateCampaignMarketingMaterialEntity>));
				_callCenterTeamCollectionViaCallCenterAgentTeam = (EntityCollection<CallCenterTeamEntity>)info.GetValue("_callCenterTeamCollectionViaCallCenterAgentTeam", typeof(EntityCollection<CallCenterTeamEntity>));
				_callCenterTeamCollectionViaCallCenterAgentTeamLog = (EntityCollection<CallCenterTeamEntity>)info.GetValue("_callCenterTeamCollectionViaCallCenterAgentTeamLog", typeof(EntityCollection<CallCenterTeamEntity>));
				_callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_ = (EntityCollection<CallCenterTeamEntity>)info.GetValue("_callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_", typeof(EntityCollection<CallCenterTeamEntity>));
				_callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment = (EntityCollection<CallCenterTeamEntity>)info.GetValue("_callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment", typeof(EntityCollection<CallCenterTeamEntity>));
				_callCenterTeamCollectionViaCallCenterAgentTeamLog_ = (EntityCollection<CallCenterTeamEntity>)info.GetValue("_callCenterTeamCollectionViaCallCenterAgentTeamLog_", typeof(EntityCollection<CallCenterTeamEntity>));
				_callCenterTeamCollectionViaCallCenterAgentTeamLog__ = (EntityCollection<CallCenterTeamEntity>)info.GetValue("_callCenterTeamCollectionViaCallCenterAgentTeamLog__", typeof(EntityCollection<CallCenterTeamEntity>));
				_callQueueCollectionViaCallQueueCustomer_ = (EntityCollection<CallQueueEntity>)info.GetValue("_callQueueCollectionViaCallQueueCustomer_", typeof(EntityCollection<CallQueueEntity>));
				_callQueueCollectionViaHealthPlanCallQueueCriteria__ = (EntityCollection<CallQueueEntity>)info.GetValue("_callQueueCollectionViaHealthPlanCallQueueCriteria__", typeof(EntityCollection<CallQueueEntity>));
				_callQueueCollectionViaCallQueueCustomer = (EntityCollection<CallQueueEntity>)info.GetValue("_callQueueCollectionViaCallQueueCustomer", typeof(EntityCollection<CallQueueEntity>));
				_callQueueCollectionViaCalls = (EntityCollection<CallQueueEntity>)info.GetValue("_callQueueCollectionViaCalls", typeof(EntityCollection<CallQueueEntity>));
				_callQueueCollectionViaCallQueueAssignment = (EntityCollection<CallQueueEntity>)info.GetValue("_callQueueCollectionViaCallQueueAssignment", typeof(EntityCollection<CallQueueEntity>));
				_callQueueCollectionViaSystemGenertedCallQueueCriteria__ = (EntityCollection<CallQueueEntity>)info.GetValue("_callQueueCollectionViaSystemGenertedCallQueueCriteria__", typeof(EntityCollection<CallQueueEntity>));
				_callQueueCollectionViaSystemGenertedCallQueueCriteria_ = (EntityCollection<CallQueueEntity>)info.GetValue("_callQueueCollectionViaSystemGenertedCallQueueCriteria_", typeof(EntityCollection<CallQueueEntity>));
				_callQueueCollectionViaCallQueueCustomer__ = (EntityCollection<CallQueueEntity>)info.GetValue("_callQueueCollectionViaCallQueueCustomer__", typeof(EntityCollection<CallQueueEntity>));
				_callQueueCollectionViaHealthPlanCallQueueCriteria_ = (EntityCollection<CallQueueEntity>)info.GetValue("_callQueueCollectionViaHealthPlanCallQueueCriteria_", typeof(EntityCollection<CallQueueEntity>));
				_callQueueCollectionViaSystemGenertedCallQueueCriteria = (EntityCollection<CallQueueEntity>)info.GetValue("_callQueueCollectionViaSystemGenertedCallQueueCriteria", typeof(EntityCollection<CallQueueEntity>));
				_callQueueCriteriaCollectionViaCallQueueCustomer = (EntityCollection<CallQueueCriteriaEntity>)info.GetValue("_callQueueCriteriaCollectionViaCallQueueCustomer", typeof(EntityCollection<CallQueueCriteriaEntity>));
				_callQueueCriteriaCollectionViaCallQueueCustomer__ = (EntityCollection<CallQueueCriteriaEntity>)info.GetValue("_callQueueCriteriaCollectionViaCallQueueCustomer__", typeof(EntityCollection<CallQueueCriteriaEntity>));
				_callQueueCriteriaCollectionViaCallQueueCustomer_ = (EntityCollection<CallQueueCriteriaEntity>)info.GetValue("_callQueueCriteriaCollectionViaCallQueueCustomer_", typeof(EntityCollection<CallQueueCriteriaEntity>));
				_callQueueCustomerCollectionViaCustomerCallQueueCallAttempt = (EntityCollection<CallQueueCustomerEntity>)info.GetValue("_callQueueCustomerCollectionViaCustomerCallQueueCallAttempt", typeof(EntityCollection<CallQueueCustomerEntity>));
				_callsCollectionViaCustomerCallQueueCallAttempt = (EntityCollection<CallsEntity>)info.GetValue("_callsCollectionViaCustomerCallQueueCallAttempt", typeof(EntityCollection<CallsEntity>));
				_callsCollectionViaPreAssessmentCustomerCallQueueCallAttempt = (EntityCollection<CallsEntity>)info.GetValue("_callsCollectionViaPreAssessmentCustomerCallQueueCallAttempt", typeof(EntityCollection<CallsEntity>));
				_callUploadCollectionViaDirectMail = (EntityCollection<CallUploadEntity>)info.GetValue("_callUploadCollectionViaDirectMail", typeof(EntityCollection<CallUploadEntity>));
				_campaignCollectionViaCallQueueCustomer__ = (EntityCollection<CampaignEntity>)info.GetValue("_campaignCollectionViaCallQueueCustomer__", typeof(EntityCollection<CampaignEntity>));
				_campaignCollectionViaCampaignAssignment = (EntityCollection<CampaignEntity>)info.GetValue("_campaignCollectionViaCampaignAssignment", typeof(EntityCollection<CampaignEntity>));
				_campaignCollectionViaCallQueueCustomer = (EntityCollection<CampaignEntity>)info.GetValue("_campaignCollectionViaCallQueueCustomer", typeof(EntityCollection<CampaignEntity>));
				_campaignCollectionViaCampaignActivity_ = (EntityCollection<CampaignEntity>)info.GetValue("_campaignCollectionViaCampaignActivity_", typeof(EntityCollection<CampaignEntity>));
				_campaignCollectionViaHealthPlanCallQueueCriteria_ = (EntityCollection<CampaignEntity>)info.GetValue("_campaignCollectionViaHealthPlanCallQueueCriteria_", typeof(EntityCollection<CampaignEntity>));
				_campaignCollectionViaCampaignActivity = (EntityCollection<CampaignEntity>)info.GetValue("_campaignCollectionViaCampaignActivity", typeof(EntityCollection<CampaignEntity>));
				_campaignCollectionViaCalls = (EntityCollection<CampaignEntity>)info.GetValue("_campaignCollectionViaCalls", typeof(EntityCollection<CampaignEntity>));
				_campaignCollectionViaEventCustomers_ = (EntityCollection<CampaignEntity>)info.GetValue("_campaignCollectionViaEventCustomers_", typeof(EntityCollection<CampaignEntity>));
				_campaignCollectionViaHealthPlanCallQueueCriteria = (EntityCollection<CampaignEntity>)info.GetValue("_campaignCollectionViaHealthPlanCallQueueCriteria", typeof(EntityCollection<CampaignEntity>));
				_campaignCollectionViaDirectMail = (EntityCollection<CampaignEntity>)info.GetValue("_campaignCollectionViaDirectMail", typeof(EntityCollection<CampaignEntity>));
				_campaignCollectionViaCallQueueCustomer_ = (EntityCollection<CampaignEntity>)info.GetValue("_campaignCollectionViaCallQueueCustomer_", typeof(EntityCollection<CampaignEntity>));
				_campaignCollectionViaEventCustomers = (EntityCollection<CampaignEntity>)info.GetValue("_campaignCollectionViaEventCustomers", typeof(EntityCollection<CampaignEntity>));
				_campaignActivityCollectionViaCampaignActivityAssignment = (EntityCollection<CampaignActivityEntity>)info.GetValue("_campaignActivityCollectionViaCampaignActivityAssignment", typeof(EntityCollection<CampaignActivityEntity>));
				_chaperoneQuestionCollectionViaChaperoneAnswer = (EntityCollection<ChaperoneQuestionEntity>)info.GetValue("_chaperoneQuestionCollectionViaChaperoneAnswer", typeof(EntityCollection<ChaperoneQuestionEntity>));
				_chaperoneQuestionCollectionViaChaperoneAnswer_ = (EntityCollection<ChaperoneQuestionEntity>)info.GetValue("_chaperoneQuestionCollectionViaChaperoneAnswer_", typeof(EntityCollection<ChaperoneQuestionEntity>));
				_checkListQuestionCollectionViaCheckListAnswer_ = (EntityCollection<CheckListQuestionEntity>)info.GetValue("_checkListQuestionCollectionViaCheckListAnswer_", typeof(EntityCollection<CheckListQuestionEntity>));
				_checkListQuestionCollectionViaCheckListAnswer = (EntityCollection<CheckListQuestionEntity>)info.GetValue("_checkListQuestionCollectionViaCheckListAnswer", typeof(EntityCollection<CheckListQuestionEntity>));
				_checkListQuestionCollectionViaExitInterviewSignature = (EntityCollection<CheckListQuestionEntity>)info.GetValue("_checkListQuestionCollectionViaExitInterviewSignature", typeof(EntityCollection<CheckListQuestionEntity>));
				_cityCollectionViaAddress = (EntityCollection<CityEntity>)info.GetValue("_cityCollectionViaAddress", typeof(EntityCollection<CityEntity>));
				_communicationModeCollectionViaEvents____ = (EntityCollection<CommunicationModeEntity>)info.GetValue("_communicationModeCollectionViaEvents____", typeof(EntityCollection<CommunicationModeEntity>));
				_communicationModeCollectionViaEvents = (EntityCollection<CommunicationModeEntity>)info.GetValue("_communicationModeCollectionViaEvents", typeof(EntityCollection<CommunicationModeEntity>));
				_communicationModeCollectionViaEvents___ = (EntityCollection<CommunicationModeEntity>)info.GetValue("_communicationModeCollectionViaEvents___", typeof(EntityCollection<CommunicationModeEntity>));
				_communicationModeCollectionViaEvents__ = (EntityCollection<CommunicationModeEntity>)info.GetValue("_communicationModeCollectionViaEvents__", typeof(EntityCollection<CommunicationModeEntity>));
				_communicationModeCollectionViaEvents_ = (EntityCollection<CommunicationModeEntity>)info.GetValue("_communicationModeCollectionViaEvents_", typeof(EntityCollection<CommunicationModeEntity>));
				_contactCallStatusCollectionViaContactCall = (EntityCollection<ContactCallStatusEntity>)info.GetValue("_contactCallStatusCollectionViaContactCall", typeof(EntityCollection<ContactCallStatusEntity>));
				_contactCallStatusCollectionViaContactCall_ = (EntityCollection<ContactCallStatusEntity>)info.GetValue("_contactCallStatusCollectionViaContactCall_", typeof(EntityCollection<ContactCallStatusEntity>));
				_contactCallStatusCollectionViaContactMeeting_ = (EntityCollection<ContactCallStatusEntity>)info.GetValue("_contactCallStatusCollectionViaContactMeeting_", typeof(EntityCollection<ContactCallStatusEntity>));
				_contactCallStatusCollectionViaContactMeeting = (EntityCollection<ContactCallStatusEntity>)info.GetValue("_contactCallStatusCollectionViaContactMeeting", typeof(EntityCollection<ContactCallStatusEntity>));
				_countryCollectionViaAddress = (EntityCollection<CountryEntity>)info.GetValue("_countryCollectionViaAddress", typeof(EntityCollection<CountryEntity>));
				_couponTypeCollectionViaCoupons_ = (EntityCollection<CouponTypeEntity>)info.GetValue("_couponTypeCollectionViaCoupons_", typeof(EntityCollection<CouponTypeEntity>));
				_couponTypeCollectionViaCoupons = (EntityCollection<CouponTypeEntity>)info.GetValue("_couponTypeCollectionViaCoupons", typeof(EntityCollection<CouponTypeEntity>));
				_customerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation = (EntityCollection<CustomerEventScreeningTestsEntity>)info.GetValue("_customerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation", typeof(EntityCollection<CustomerEventScreeningTestsEntity>));
				_customerEventScreeningTestsCollectionViaTestPerformedExternally_ = (EntityCollection<CustomerEventScreeningTestsEntity>)info.GetValue("_customerEventScreeningTestsCollectionViaTestPerformedExternally_", typeof(EntityCollection<CustomerEventScreeningTestsEntity>));
				_customerEventScreeningTestsCollectionViaCustomerEventTestState = (EntityCollection<CustomerEventScreeningTestsEntity>)info.GetValue("_customerEventScreeningTestsCollectionViaCustomerEventTestState", typeof(EntityCollection<CustomerEventScreeningTestsEntity>));
				_customerEventScreeningTestsCollectionViaCustomerEventTestState_ = (EntityCollection<CustomerEventScreeningTestsEntity>)info.GetValue("_customerEventScreeningTestsCollectionViaCustomerEventTestState_", typeof(EntityCollection<CustomerEventScreeningTestsEntity>));
				_customerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason = (EntityCollection<CustomerEventScreeningTestsEntity>)info.GetValue("_customerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason", typeof(EntityCollection<CustomerEventScreeningTestsEntity>));
				_customerEventScreeningTestsCollectionViaCustomerEventTestState__ = (EntityCollection<CustomerEventScreeningTestsEntity>)info.GetValue("_customerEventScreeningTestsCollectionViaCustomerEventTestState__", typeof(EntityCollection<CustomerEventScreeningTestsEntity>));
				_customerEventScreeningTestsCollectionViaTestPerformedExternally = (EntityCollection<CustomerEventScreeningTestsEntity>)info.GetValue("_customerEventScreeningTestsCollectionViaTestPerformedExternally", typeof(EntityCollection<CustomerEventScreeningTestsEntity>));
				_customerEventScreeningTestsCollectionViaCustomerEventReading = (EntityCollection<CustomerEventScreeningTestsEntity>)info.GetValue("_customerEventScreeningTestsCollectionViaCustomerEventReading", typeof(EntityCollection<CustomerEventScreeningTestsEntity>));
				_customerEventScreeningTestsCollectionViaTestNotPerformed = (EntityCollection<CustomerEventScreeningTestsEntity>)info.GetValue("_customerEventScreeningTestsCollectionViaTestNotPerformed", typeof(EntityCollection<CustomerEventScreeningTestsEntity>));
				_customerEventScreeningTestsCollectionViaTestNotPerformed_ = (EntityCollection<CustomerEventScreeningTestsEntity>)info.GetValue("_customerEventScreeningTestsCollectionViaTestNotPerformed_", typeof(EntityCollection<CustomerEventScreeningTestsEntity>));
				_customerHealthQuestionsCollectionViaCustomerHealthInfo = (EntityCollection<CustomerHealthQuestionsEntity>)info.GetValue("_customerHealthQuestionsCollectionViaCustomerHealthInfo", typeof(EntityCollection<CustomerHealthQuestionsEntity>));
				_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_ = (EntityCollection<CustomerHealthQuestionsEntity>)info.GetValue("_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_", typeof(EntityCollection<CustomerHealthQuestionsEntity>));
				_customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_ = (EntityCollection<CustomerHealthQuestionsEntity>)info.GetValue("_customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_", typeof(EntityCollection<CustomerHealthQuestionsEntity>));
				_customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer = (EntityCollection<CustomerHealthQuestionsEntity>)info.GetValue("_customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer", typeof(EntityCollection<CustomerHealthQuestionsEntity>));
				_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__ = (EntityCollection<CustomerHealthQuestionsEntity>)info.GetValue("_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__", typeof(EntityCollection<CustomerHealthQuestionsEntity>));
				_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___ = (EntityCollection<CustomerHealthQuestionsEntity>)info.GetValue("_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___", typeof(EntityCollection<CustomerHealthQuestionsEntity>));
				_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria = (EntityCollection<CustomerHealthQuestionsEntity>)info.GetValue("_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria", typeof(EntityCollection<CustomerHealthQuestionsEntity>));
				_customerHealthQuestionsCollectionViaCustomerHealthInfoArchive = (EntityCollection<CustomerHealthQuestionsEntity>)info.GetValue("_customerHealthQuestionsCollectionViaCustomerHealthInfoArchive", typeof(EntityCollection<CustomerHealthQuestionsEntity>));
				_customerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician = (EntityCollection<CustomerPrimaryCarePhysicianEntity>)info.GetValue("_customerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician", typeof(EntityCollection<CustomerPrimaryCarePhysicianEntity>));
				_customerProfileCollectionViaFillEventCallQueue = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaFillEventCallQueue", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaDisqualifiedTest_ = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaDisqualifiedTest_", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaCustomerEligibility_ = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaCustomerEligibility_", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaEventCustomerResult_____ = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaEventCustomerResult_____", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaCustomerEligibility = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaCustomerEligibility", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaLanguageBarrierCallQueue = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaLanguageBarrierCallQueue", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaEventCustomerQuestionAnswer = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaEventCustomerQuestionAnswer", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaHospitalPartnerCustomer_ = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaHospitalPartnerCustomer_", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaHospitalPartnerCustomer__ = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaHospitalPartnerCustomer__", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaHospitalPartnerCustomer = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaHospitalPartnerCustomer", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaDisqualifiedTest = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaDisqualifiedTest", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaCustomerPrimaryCarePhysician_ = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaCustomerPrimaryCarePhysician_", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaCustomerPrimaryCarePhysician__ = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaCustomerPrimaryCarePhysician__", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaNoShowCallQueue = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaNoShowCallQueue", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaCustomerPrimaryCarePhysician = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaCustomerPrimaryCarePhysician", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaCallQueueCustomer = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaCallQueueCustomer", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaCustomerHealthInfo = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaCustomerHealthInfo", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaCallQueueCustomer__ = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaCallQueueCustomer__", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaCallQueueCustomer_ = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaCallQueueCustomer_", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaEventCustomerResult______ = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaEventCustomerResult______", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaCustomerIcdCode = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaCustomerIcdCode", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaMailRoundCallQueue = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaMailRoundCallQueue", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaCustomerHealthInfoArchive = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaCustomerHealthInfoArchive", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaEventCustomerQuestionAnswer_ = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaEventCustomerQuestionAnswer_", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaRequiredTest = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaRequiredTest", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaCustomerWarmTransfer_ = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaCustomerWarmTransfer_", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaProspectCustomer = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaProspectCustomer", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaEventCustomerResult_ = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaEventCustomerResult_", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaEventCustomerResult__ = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaEventCustomerResult__", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaUncontactedCustomerCallQueue = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaUncontactedCustomerCallQueue", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaCustomerWarmTransfer = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaCustomerWarmTransfer", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaMedication_ = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaMedication_", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaCallRoundCallQueue = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaCallRoundCallQueue", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaCustomerTag_ = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaCustomerTag_", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaReferral = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaReferral", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaCustomerTargeted_ = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaCustomerTargeted_", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaCustomerTargeted = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaCustomerTargeted", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaCustomerTag = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaCustomerTag", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaMedication = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaMedication", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaEventCustomerResult________ = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaEventCustomerResult________", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaEventCustomerResult = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaEventCustomerResult", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaEventCustomerResult_______ = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaEventCustomerResult_______", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaDirectMail = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaDirectMail", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaEventCustomerResult____ = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaEventCustomerResult____", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaCurrentMedication = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaCurrentMedication", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaGuardianDetails = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaGuardianDetails", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaEventCustomers = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaEventCustomers", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaEventCustomers_ = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaEventCustomers_", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaCustomerCallQueueCallAttempt = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaCustomerCallQueueCallAttempt", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaEventCustomerResult___ = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaEventCustomerResult___", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaCustomerProfileHistory = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaCustomerProfileHistory", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaCustomerClinicalQuestionAnswer = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaCustomerClinicalQuestionAnswer", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaCustomerClinicalQuestionAnswer_ = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaCustomerClinicalQuestionAnswer_", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileCollectionViaGuardianDetails_ = (EntityCollection<CustomerProfileEntity>)info.GetValue("_customerProfileCollectionViaGuardianDetails_", typeof(EntityCollection<CustomerProfileEntity>));
				_customerProfileHistoryCollectionViaEventCustomers_ = (EntityCollection<CustomerProfileHistoryEntity>)info.GetValue("_customerProfileHistoryCollectionViaEventCustomers_", typeof(EntityCollection<CustomerProfileHistoryEntity>));
				_customerProfileHistoryCollectionViaEventCustomers = (EntityCollection<CustomerProfileHistoryEntity>)info.GetValue("_customerProfileHistoryCollectionViaEventCustomers", typeof(EntityCollection<CustomerProfileHistoryEntity>));
				_customerRegistrationNotesCollectionViaEventAppointmentCancellationLog = (EntityCollection<CustomerRegistrationNotesEntity>)info.GetValue("_customerRegistrationNotesCollectionViaEventAppointmentCancellationLog", typeof(EntityCollection<CustomerRegistrationNotesEntity>));
				_customerRegistrationNotesCollectionViaEventCustomers_ = (EntityCollection<CustomerRegistrationNotesEntity>)info.GetValue("_customerRegistrationNotesCollectionViaEventCustomers_", typeof(EntityCollection<CustomerRegistrationNotesEntity>));
				_customerRegistrationNotesCollectionViaEventCustomers = (EntityCollection<CustomerRegistrationNotesEntity>)info.GetValue("_customerRegistrationNotesCollectionViaEventCustomers", typeof(EntityCollection<CustomerRegistrationNotesEntity>));
				_directMailTypeCollectionViaDirectMail = (EntityCollection<DirectMailTypeEntity>)info.GetValue("_directMailTypeCollectionViaDirectMail", typeof(EntityCollection<DirectMailTypeEntity>));
				_directMailTypeCollectionViaCampaignActivity = (EntityCollection<DirectMailTypeEntity>)info.GetValue("_directMailTypeCollectionViaCampaignActivity", typeof(EntityCollection<DirectMailTypeEntity>));
				_directMailTypeCollectionViaCampaignActivity_ = (EntityCollection<DirectMailTypeEntity>)info.GetValue("_directMailTypeCollectionViaCampaignActivity_", typeof(EntityCollection<DirectMailTypeEntity>));
				_eventActivityTemplateCollectionViaEventActivityTemplateMeeting = (EntityCollection<EventActivityTemplateEntity>)info.GetValue("_eventActivityTemplateCollectionViaEventActivityTemplateMeeting", typeof(EntityCollection<EventActivityTemplateEntity>));
				_eventActivityTemplateCollectionViaEventActivityTemplateTask = (EntityCollection<EventActivityTemplateEntity>)info.GetValue("_eventActivityTemplateCollectionViaEventActivityTemplateTask", typeof(EntityCollection<EventActivityTemplateEntity>));
				_eventActivityTemplateCollectionViaEventActivityTemplateCall = (EntityCollection<EventActivityTemplateEntity>)info.GetValue("_eventActivityTemplateCollectionViaEventActivityTemplateCall", typeof(EntityCollection<EventActivityTemplateEntity>));
				_eventActivityTemplateCollectionViaEventActivityTemplateEmail = (EntityCollection<EventActivityTemplateEntity>)info.GetValue("_eventActivityTemplateCollectionViaEventActivityTemplateEmail", typeof(EntityCollection<EventActivityTemplateEntity>));
				_eventAppointmentCollectionViaEventCustomers = (EntityCollection<EventAppointmentEntity>)info.GetValue("_eventAppointmentCollectionViaEventCustomers", typeof(EntityCollection<EventAppointmentEntity>));
				_eventAppointmentCollectionViaEventCustomers_ = (EntityCollection<EventAppointmentEntity>)info.GetValue("_eventAppointmentCollectionViaEventCustomers_", typeof(EntityCollection<EventAppointmentEntity>));
				_eventCustomerResultCollectionViaCustomerResultScreeningCommunication = (EntityCollection<EventCustomerResultEntity>)info.GetValue("_eventCustomerResultCollectionViaCustomerResultScreeningCommunication", typeof(EntityCollection<EventCustomerResultEntity>));
				_eventCustomerResultCollectionViaPriorityInQueue_ = (EntityCollection<EventCustomerResultEntity>)info.GetValue("_eventCustomerResultCollectionViaPriorityInQueue_", typeof(EntityCollection<EventCustomerResultEntity>));
				_eventCustomerResultCollectionViaKynLabValues = (EntityCollection<EventCustomerResultEntity>)info.GetValue("_eventCustomerResultCollectionViaKynLabValues", typeof(EntityCollection<EventCustomerResultEntity>));
				_eventCustomerResultCollectionViaCustomerResultScreeningCommunication__ = (EntityCollection<EventCustomerResultEntity>)info.GetValue("_eventCustomerResultCollectionViaCustomerResultScreeningCommunication__", typeof(EntityCollection<EventCustomerResultEntity>));
				_eventCustomerResultCollectionViaCustomerResultScreeningCommunication_ = (EntityCollection<EventCustomerResultEntity>)info.GetValue("_eventCustomerResultCollectionViaCustomerResultScreeningCommunication_", typeof(EntityCollection<EventCustomerResultEntity>));
				_eventCustomerResultCollectionViaCdcontentGeneratorTracking = (EntityCollection<EventCustomerResultEntity>)info.GetValue("_eventCustomerResultCollectionViaCdcontentGeneratorTracking", typeof(EntityCollection<EventCustomerResultEntity>));
				_eventCustomerResultCollectionViaKynLabValues_ = (EntityCollection<EventCustomerResultEntity>)info.GetValue("_eventCustomerResultCollectionViaKynLabValues_", typeof(EntityCollection<EventCustomerResultEntity>));
				_eventCustomerResultCollectionViaPriorityInQueue = (EntityCollection<EventCustomerResultEntity>)info.GetValue("_eventCustomerResultCollectionViaPriorityInQueue", typeof(EntityCollection<EventCustomerResultEntity>));
				_eventCustomersCollectionViaDisqualifiedTest_ = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaDisqualifiedTest_", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaEventAppointmentChangeLog = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaEventAppointmentChangeLog", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaDisqualifiedTest = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaDisqualifiedTest", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaEventCustomerPrimaryCarePhysician = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaEventCustomerPrimaryCarePhysician", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaEventCustomerQuestionAnswer_ = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaEventCustomerQuestionAnswer_", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaEventAppointmentCancellationLog = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaEventAppointmentCancellationLog", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaEventCustomerQuestionAnswer = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaEventCustomerQuestionAnswer", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaEventCustomerGiftCard = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaEventCustomerGiftCard", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaSurveyAnswer = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaSurveyAnswer", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaEventCustomerTestNotPerformedNotification = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaEventCustomerTestNotPerformedNotification", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaPhysicianRecordRequestSignature = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaPhysicianRecordRequestSignature", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaEventCustomerRetest = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaEventCustomerRetest", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaPcpDisposition = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaPcpDisposition", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaPcpDisposition_ = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaPcpDisposition_", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaChaperoneSignature = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaChaperoneSignature", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaChaperoneAnswer_ = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaChaperoneAnswer_", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaChaperoneAnswer = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaChaperoneAnswer", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaCallQueueCustomer__ = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaCallQueueCustomer__", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaCheckListAnswer_ = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaCheckListAnswer_", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaCallQueueCustomer = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaCallQueueCustomer", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaCallQueueCustomer_ = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaCallQueueCustomer_", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaCustomerHealthInfo = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaCustomerHealthInfo", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaExitInterviewSignature = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaExitInterviewSignature", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaFluConsentAnswer = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaFluConsentAnswer", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaExitInterviewAnswer_ = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaExitInterviewAnswer_", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaCheckListAnswer = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaCheckListAnswer", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaExitInterviewAnswer = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaExitInterviewAnswer", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaFluConsentAnswer_ = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaFluConsentAnswer_", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaSurveyAnswer_ = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaSurveyAnswer_", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaCustomerHealthInfoArchive = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaCustomerHealthInfoArchive", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaCustomerMedicareQuestionAnswer = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaCustomerMedicareQuestionAnswer", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaFluConsentSignature = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaFluConsentSignature", typeof(EntityCollection<EventCustomersEntity>));
				_eventCustomersCollectionViaParticipationConsentSignature = (EntityCollection<EventCustomersEntity>)info.GetValue("_eventCustomersCollectionViaParticipationConsentSignature", typeof(EntityCollection<EventCustomersEntity>));
				_eventsCollectionViaEventCustomerQuestionAnswer = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaEventCustomerQuestionAnswer", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaEventPhysicianTest__ = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaEventPhysicianTest__", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaEventStaffAssignment__ = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaEventStaffAssignment__", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaEventStaffAssignment_ = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaEventStaffAssignment_", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaEventCustomers = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaEventCustomers", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaEventCustomerResult____ = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaEventCustomerResult____", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaEventCustomerResult___ = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaEventCustomerResult___", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaHospitalPartnerCustomer_ = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaHospitalPartnerCustomer_", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaEventCustomerResult_ = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaEventCustomerResult_", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaEventCustomerResult________ = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaEventCustomerResult________", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaEventCustomerResult______ = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaEventCustomerResult______", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaEventCustomerResult__ = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaEventCustomerResult__", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaEventCustomerResult_______ = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaEventCustomerResult_______", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaEventPhysicianTest_ = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaEventPhysicianTest_", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaEventPhysicianTest = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaEventPhysicianTest", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaEventCustomerQuestionAnswer_ = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaEventCustomerQuestionAnswer_", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaHospitalPartnerCustomer__ = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaHospitalPartnerCustomer__", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaEventCustomerResult = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaEventCustomerResult", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaHospitalPartnerCustomer = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaHospitalPartnerCustomer", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaEventCustomerResult_____ = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaEventCustomerResult_____", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaEventCustomers_ = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaEventCustomers_", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaEventAccountTestHcpcsCode = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaEventAccountTestHcpcsCode", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaCustomerRegistrationNotes = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaCustomerRegistrationNotes", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaCallQueueCustomer = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaCallQueueCustomer", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaEventAccountTestHcpcsCode_ = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaEventAccountTestHcpcsCode_", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaSeminars = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaSeminars", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaDisqualifiedTest_ = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaDisqualifiedTest_", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaDisqualifiedTest = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaDisqualifiedTest", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaCustomEventNotification = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaCustomEventNotification", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaCallQueueCustomer__ = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaCallQueueCustomer__", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaCustomerClinicalQuestionAnswer = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaCustomerClinicalQuestionAnswer", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaCustomerClinicalQuestionAnswer_ = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaCustomerClinicalQuestionAnswer_", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaEventAppointmentChangeLog = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaEventAppointmentChangeLog", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaEventAppointmentChangeLog_ = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaEventAppointmentChangeLog_", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaCallQueueCustomer_ = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaCallQueueCustomer_", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaHostPayment = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaHostPayment", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaEventStaffAssignment = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaEventStaffAssignment", typeof(EntityCollection<EventsEntity>));
				_eventsCollectionViaEventAppointmentCancellationLog = (EntityCollection<EventsEntity>)info.GetValue("_eventsCollectionViaEventAppointmentCancellationLog", typeof(EntityCollection<EventsEntity>));
				_eventTypeCollectionViaEvents = (EntityCollection<EventTypeEntity>)info.GetValue("_eventTypeCollectionViaEvents", typeof(EntityCollection<EventTypeEntity>));
				_eventTypeCollectionViaEvents____ = (EntityCollection<EventTypeEntity>)info.GetValue("_eventTypeCollectionViaEvents____", typeof(EntityCollection<EventTypeEntity>));
				_eventTypeCollectionViaEvents___ = (EntityCollection<EventTypeEntity>)info.GetValue("_eventTypeCollectionViaEvents___", typeof(EntityCollection<EventTypeEntity>));
				_eventTypeCollectionViaEvents_ = (EntityCollection<EventTypeEntity>)info.GetValue("_eventTypeCollectionViaEvents_", typeof(EntityCollection<EventTypeEntity>));
				_eventTypeCollectionViaEvents__ = (EntityCollection<EventTypeEntity>)info.GetValue("_eventTypeCollectionViaEvents__", typeof(EntityCollection<EventTypeEntity>));
				_exitInterviewQuestionCollectionViaExitInterviewAnswer_ = (EntityCollection<ExitInterviewQuestionEntity>)info.GetValue("_exitInterviewQuestionCollectionViaExitInterviewAnswer_", typeof(EntityCollection<ExitInterviewQuestionEntity>));
				_exitInterviewQuestionCollectionViaExitInterviewAnswer = (EntityCollection<ExitInterviewQuestionEntity>)info.GetValue("_exitInterviewQuestionCollectionViaExitInterviewAnswer", typeof(EntityCollection<ExitInterviewQuestionEntity>));
				_exportableReportsCollectionViaExportableReportsQueue = (EntityCollection<ExportableReportsEntity>)info.GetValue("_exportableReportsCollectionViaExportableReportsQueue", typeof(EntityCollection<ExportableReportsEntity>));
				_fileCollectionViaCustomerActivityTypeUpload_ = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaCustomerActivityTypeUpload_", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaCorporateUpload = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaCorporateUpload", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaStaffEventScheduleUpload = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaStaffEventScheduleUpload", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaCorporateUpload_ = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaCorporateUpload_", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaPhysicianRecordRequestSignature = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaPhysicianRecordRequestSignature", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaCustomerActivityTypeUpload = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaCustomerActivityTypeUpload", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaRapsUpload_ = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaRapsUpload_", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaCallUpload_ = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaCallUpload_", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaChaperoneSignature_ = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaChaperoneSignature_", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaRapsUpload = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaRapsUpload", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaChaperoneSignature = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaChaperoneSignature", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaCorporateUpload__ = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaCorporateUpload__", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaCallUpload = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaCallUpload", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaHealthPlanCriteriaAssignmentUpload = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaHealthPlanCriteriaAssignmentUpload", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaParticipationConsentSignature_ = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaParticipationConsentSignature_", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaMergeCustomerUpload = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaMergeCustomerUpload", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaMedicationUpload_ = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaMedicationUpload_", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaMedicationUpload = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaMedicationUpload", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaFluConsentSignature_ = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaFluConsentSignature_", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaFluConsentSignature = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaFluConsentSignature", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaMergeCustomerUpload_ = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaMergeCustomerUpload_", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaExitInterviewSignature = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaExitInterviewSignature", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaEventCustomerGiftCard_ = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaEventCustomerGiftCard_", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaEventCustomerGiftCard = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaEventCustomerGiftCard", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaEligibilityUpload = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaEligibilityUpload", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaEligibilityUpload_ = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaEligibilityUpload_", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaExportableReportsQueue = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaExportableReportsQueue", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaSuspectConditionUpload = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaSuspectConditionUpload", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaStaffEventScheduleUpload_ = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaStaffEventScheduleUpload_", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaParticipationConsentSignature = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaParticipationConsentSignature", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaCustomerPhoneNumberUpdateUpload_ = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaCustomerPhoneNumberUpdateUpload_", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaCustomerPhoneNumberUpdateUpload = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaCustomerPhoneNumberUpdateUpload", typeof(EntityCollection<FileEntity>));
				_fileCollectionViaSuspectConditionUpload_ = (EntityCollection<FileEntity>)info.GetValue("_fileCollectionViaSuspectConditionUpload_", typeof(EntityCollection<FileEntity>));
				_fluConsentQuestionCollectionViaFluConsentAnswer = (EntityCollection<FluConsentQuestionEntity>)info.GetValue("_fluConsentQuestionCollectionViaFluConsentAnswer", typeof(EntityCollection<FluConsentQuestionEntity>));
				_fluConsentQuestionCollectionViaFluConsentAnswer_ = (EntityCollection<FluConsentQuestionEntity>)info.GetValue("_fluConsentQuestionCollectionViaFluConsentAnswer_", typeof(EntityCollection<FluConsentQuestionEntity>));
				_gcNotGivenReasonCollectionViaEventCustomers = (EntityCollection<GcNotGivenReasonEntity>)info.GetValue("_gcNotGivenReasonCollectionViaEventCustomers", typeof(EntityCollection<GcNotGivenReasonEntity>));
				_gcNotGivenReasonCollectionViaEventCustomers_ = (EntityCollection<GcNotGivenReasonEntity>)info.GetValue("_gcNotGivenReasonCollectionViaEventCustomers_", typeof(EntityCollection<GcNotGivenReasonEntity>));
				_hafTemplateCollectionViaClinicalTestQualificationCriteria = (EntityCollection<HafTemplateEntity>)info.GetValue("_hafTemplateCollectionViaClinicalTestQualificationCriteria", typeof(EntityCollection<HafTemplateEntity>));
				_hafTemplateCollectionViaEvents___ = (EntityCollection<HafTemplateEntity>)info.GetValue("_hafTemplateCollectionViaEvents___", typeof(EntityCollection<HafTemplateEntity>));
				_hafTemplateCollectionViaEvents = (EntityCollection<HafTemplateEntity>)info.GetValue("_hafTemplateCollectionViaEvents", typeof(EntityCollection<HafTemplateEntity>));
				_hafTemplateCollectionViaEvents____ = (EntityCollection<HafTemplateEntity>)info.GetValue("_hafTemplateCollectionViaEvents____", typeof(EntityCollection<HafTemplateEntity>));
				_hafTemplateCollectionViaEvents_ = (EntityCollection<HafTemplateEntity>)info.GetValue("_hafTemplateCollectionViaEvents_", typeof(EntityCollection<HafTemplateEntity>));
				_hafTemplateCollectionViaCustomerClinicalQuestionAnswer = (EntityCollection<HafTemplateEntity>)info.GetValue("_hafTemplateCollectionViaCustomerClinicalQuestionAnswer", typeof(EntityCollection<HafTemplateEntity>));
				_hafTemplateCollectionViaEvents__ = (EntityCollection<HafTemplateEntity>)info.GetValue("_hafTemplateCollectionViaEvents__", typeof(EntityCollection<HafTemplateEntity>));
				_hafTemplateCollectionViaCustomerClinicalQuestionAnswer_ = (EntityCollection<HafTemplateEntity>)info.GetValue("_hafTemplateCollectionViaCustomerClinicalQuestionAnswer_", typeof(EntityCollection<HafTemplateEntity>));
				_hafTemplateCollectionViaClinicalTestQualificationCriteria_ = (EntityCollection<HafTemplateEntity>)info.GetValue("_hafTemplateCollectionViaClinicalTestQualificationCriteria_", typeof(EntityCollection<HafTemplateEntity>));
				_hcpcsCodeCollectionViaTestHcpcsCode_ = (EntityCollection<HcpcsCodeEntity>)info.GetValue("_hcpcsCodeCollectionViaTestHcpcsCode_", typeof(EntityCollection<HcpcsCodeEntity>));
				_hcpcsCodeCollectionViaTestHcpcsCode = (EntityCollection<HcpcsCodeEntity>)info.GetValue("_hcpcsCodeCollectionViaTestHcpcsCode", typeof(EntityCollection<HcpcsCodeEntity>));
				_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload = (EntityCollection<HealthPlanCallQueueCriteriaEntity>)info.GetValue("_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload", typeof(EntityCollection<HealthPlanCallQueueCriteriaEntity>));
				_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment = (EntityCollection<HealthPlanCallQueueCriteriaEntity>)info.GetValue("_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment", typeof(EntityCollection<HealthPlanCallQueueCriteriaEntity>));
				_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_ = (EntityCollection<HealthPlanCallQueueCriteriaEntity>)info.GetValue("_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_", typeof(EntityCollection<HealthPlanCallQueueCriteriaEntity>));
				_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment = (EntityCollection<HealthPlanCallQueueCriteriaEntity>)info.GetValue("_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment", typeof(EntityCollection<HealthPlanCallQueueCriteriaEntity>));
				_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__ = (EntityCollection<HealthPlanCallQueueCriteriaEntity>)info.GetValue("_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__", typeof(EntityCollection<HealthPlanCallQueueCriteriaEntity>));
				_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_ = (EntityCollection<HealthPlanCallQueueCriteriaEntity>)info.GetValue("_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_", typeof(EntityCollection<HealthPlanCallQueueCriteriaEntity>));
				_hospitalFacilityCollectionViaEventCustomers = (EntityCollection<HospitalFacilityEntity>)info.GetValue("_hospitalFacilityCollectionViaEventCustomers", typeof(EntityCollection<HospitalFacilityEntity>));
				_hospitalFacilityCollectionViaEventCustomers_ = (EntityCollection<HospitalFacilityEntity>)info.GetValue("_hospitalFacilityCollectionViaEventCustomers_", typeof(EntityCollection<HospitalFacilityEntity>));
				_hostPaymentCollectionViaHostPaymentTransaction = (EntityCollection<HostPaymentEntity>)info.GetValue("_hostPaymentCollectionViaHostPaymentTransaction", typeof(EntityCollection<HostPaymentEntity>));
				_icdCodesCollectionViaCustomerIcdCode = (EntityCollection<IcdCodesEntity>)info.GetValue("_icdCodesCollectionViaCustomerIcdCode", typeof(EntityCollection<IcdCodesEntity>));
				_insuranceCompanyCollectionViaEligibility = (EntityCollection<InsuranceCompanyEntity>)info.GetValue("_insuranceCompanyCollectionViaEligibility", typeof(EntityCollection<InsuranceCompanyEntity>));
				_languageCollectionViaHealthPlanCallQueueCriteria = (EntityCollection<LanguageEntity>)info.GetValue("_languageCollectionViaHealthPlanCallQueueCriteria", typeof(EntityCollection<LanguageEntity>));
				_languageCollectionViaCallQueueCustomer_ = (EntityCollection<LanguageEntity>)info.GetValue("_languageCollectionViaCallQueueCustomer_", typeof(EntityCollection<LanguageEntity>));
				_languageCollectionViaCallQueueCustomer__ = (EntityCollection<LanguageEntity>)info.GetValue("_languageCollectionViaCallQueueCustomer__", typeof(EntityCollection<LanguageEntity>));
				_languageCollectionViaCallQueueCustomer = (EntityCollection<LanguageEntity>)info.GetValue("_languageCollectionViaCallQueueCustomer", typeof(EntityCollection<LanguageEntity>));
				_languageCollectionViaHealthPlanCallQueueCriteria_ = (EntityCollection<LanguageEntity>)info.GetValue("_languageCollectionViaHealthPlanCallQueueCriteria_", typeof(EntityCollection<LanguageEntity>));
				_lookupCollectionViaUncontactedCustomerCallQueue = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaUncontactedCustomerCallQueue", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaFillEventCallQueue = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaFillEventCallQueue", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaTestPerformedExternally_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaTestPerformedExternally_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaLanguageBarrierCallQueue = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaLanguageBarrierCallQueue", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaMedicationUpload = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaMedicationUpload", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaHostFacilityRanking = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaHostFacilityRanking", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaHostFacilityRanking_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaHostFacilityRanking_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaMailRoundCallQueue = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaMailRoundCallQueue", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaHostPaymentTransaction_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaHostPaymentTransaction_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaHostPayment = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaHostPayment", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaHostPaymentTransaction = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaHostPaymentTransaction", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaHostPayment_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaHostPayment_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaKynLabValues = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaKynLabValues", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaExportableReportsQueue = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaExportableReportsQueue", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaFile = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaFile", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaTestPerformedExternally = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaTestPerformedExternally", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaKynLabValues_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaKynLabValues_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaPreQualificationQuestion = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaPreQualificationQuestion", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaPrintOrderItemTracking__ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaPrintOrderItemTracking__", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaPcpDisposition_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaPcpDisposition_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaPcpAppointment_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaPcpAppointment_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaPcpDisposition = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaPcpDisposition", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaRefundRequest = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaRefundRequest", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaRapsUpload = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaRapsUpload", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaRefundRequest_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaRefundRequest_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaPrintOrderItemTracking___ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaPrintOrderItemTracking___", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaProspectCustomer = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaProspectCustomer", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaPcpAppointment = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaPcpAppointment", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaHafTemplate = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaHafTemplate", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaHafTemplate_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaHafTemplate_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaSuspectConditionUpload = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaSuspectConditionUpload", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaMergeCustomerUpload = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaMergeCustomerUpload", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaNoShowCallQueue = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaNoShowCallQueue", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaStaffEventScheduleUpload = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaStaffEventScheduleUpload", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaHealthPlanRevenue = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaHealthPlanRevenue", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaHealthPlanRevenue_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaHealthPlanRevenue_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaHafTemplate__ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaHafTemplate__", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaHafTemplate___ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaHafTemplate___", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCustomerProfileHistory___ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCustomerProfileHistory___", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCustomerProfileHistory__ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCustomerProfileHistory__", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCustomerProfileHistory = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCustomerProfileHistory", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCustomEventNotification = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCustomEventNotification", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCustomerRegistrationNotes = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCustomerRegistrationNotes", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCustomerProfileHistory_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCustomerProfileHistory_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCustomerPrimaryCarePhysician__ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCustomerPrimaryCarePhysician__", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCustomerEventTestState__ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCustomerEventTestState__", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCustomerEventTestState_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCustomerEventTestState_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCustomerEventTestState = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCustomerEventTestState", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCustomerPrimaryCarePhysician_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCustomerPrimaryCarePhysician_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCustomerPrimaryCarePhysician = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCustomerPrimaryCarePhysician", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCustomerPhoneNumberUpdateUpload = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCustomerPhoneNumberUpdateUpload", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEligibilityUpload = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEligibilityUpload", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEventCustomerResult__ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEventCustomerResult__", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEventCustomerResult______ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEventCustomerResult______", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEventCustomerResult_____ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEventCustomerResult_____", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEventCustomerResult_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEventCustomerResult_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEventCustomerResult____ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEventCustomerResult____", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEventCustomerResult___ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEventCustomerResult___", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEventCustomerResult________ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEventCustomerResult________", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEventAppointmentCancellationLog = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEventAppointmentCancellationLog", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEmailTemplate_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEmailTemplate_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEmailTemplate = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEmailTemplate", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEventCustomerResult_______ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEventCustomerResult_______", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEventCustomerResult = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEventCustomerResult", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEventAppointmentChangeLog = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEventAppointmentChangeLog", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCustomerActivityTypeUpload = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCustomerActivityTypeUpload", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCalls = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCalls", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCalls_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCalls_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCallRoundCallQueue = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCallRoundCallQueue", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCampaign = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCampaign", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCallUpload = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCallUpload", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCalls__ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCalls__", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCallQueueCustomer__ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCallQueueCustomer__", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCallCenterTeam = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCallCenterTeam", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaAccountHraChatQuestionnaire_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaAccountHraChatQuestionnaire_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaAccountHraChatQuestionnaire = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaAccountHraChatQuestionnaire", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCallQueueCustomer_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCallQueueCustomer_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCallQueueCustomer = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCallQueueCustomer", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCallCenterTeam_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCallCenterTeam_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCampaign_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCampaign_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaClinicalTestQualificationCriteria_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaClinicalTestQualificationCriteria_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaClinicalTestQualificationCriteria = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaClinicalTestQualificationCriteria", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCheckListTemplate_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCheckListTemplate_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCorporateUpload = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCorporateUpload", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaClinicalTestQualificationCriteria___ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaClinicalTestQualificationCriteria___", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaClinicalTestQualificationCriteria__ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaClinicalTestQualificationCriteria__", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCheckListTemplate = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCheckListTemplate", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCampaignActivity = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCampaignActivity", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCampaign___ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCampaign___", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCampaign__ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCampaign__", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCheckListAnswer_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCheckListAnswer_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCheckListAnswer = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCheckListAnswer", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaCampaignActivity_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaCampaignActivity_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEvents________ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEvents________", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEvents______________ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEvents______________", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEvents_________ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEvents_________", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEvents_____________ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEvents_____________", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEvents___________________ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEvents___________________", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEvents__________________ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEvents__________________", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEvents_______________ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEvents_______________", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEvents_______________________ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEvents_______________________", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEvents____________ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEvents____________", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEvents____ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEvents____", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEvents________________ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEvents________________", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEvents_______ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEvents_______", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEvents_____ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEvents_____", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEvents__________ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEvents__________", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEvents_________________ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEvents_________________", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEvents___________ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEvents___________", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEvents______________________ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEvents______________________", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEvents = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEvents", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEvents______ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEvents______", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEvents__ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEvents__", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEventCustomers___ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEventCustomers___", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEventCustomers = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEventCustomers", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEventCustomers_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEventCustomers_", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEventCustomers__ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEventCustomers__", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEvents___ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEvents___", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEvents________________________ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEvents________________________", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEvents____________________ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEvents____________________", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEvents_____________________ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEvents_____________________", typeof(EntityCollection<LookupEntity>));
				_lookupCollectionViaEvents_ = (EntityCollection<LookupEntity>)info.GetValue("_lookupCollectionViaEvents_", typeof(EntityCollection<LookupEntity>));
				_marketingPrintOrderItemCollectionViaPrintOrderItemTracking = (EntityCollection<MarketingPrintOrderItemEntity>)info.GetValue("_marketingPrintOrderItemCollectionViaPrintOrderItemTracking", typeof(EntityCollection<MarketingPrintOrderItemEntity>));
				_marketingPrintOrderItemCollectionViaPrintOrderItemTracking_ = (EntityCollection<MarketingPrintOrderItemEntity>)info.GetValue("_marketingPrintOrderItemCollectionViaPrintOrderItemTracking_", typeof(EntityCollection<MarketingPrintOrderItemEntity>));
				_medicareQuestionCollectionViaCustomerMedicareQuestionAnswer = (EntityCollection<MedicareQuestionEntity>)info.GetValue("_medicareQuestionCollectionViaCustomerMedicareQuestionAnswer", typeof(EntityCollection<MedicareQuestionEntity>));
				_ndcCollectionViaCurrentMedication = (EntityCollection<NdcEntity>)info.GetValue("_ndcCollectionViaCurrentMedication", typeof(EntityCollection<NdcEntity>));
				_notesDetailsCollectionViaPriorityInQueue = (EntityCollection<NotesDetailsEntity>)info.GetValue("_notesDetailsCollectionViaPriorityInQueue", typeof(EntityCollection<NotesDetailsEntity>));
				_notesDetailsCollectionViaPriorityInQueue_ = (EntityCollection<NotesDetailsEntity>)info.GetValue("_notesDetailsCollectionViaPriorityInQueue_", typeof(EntityCollection<NotesDetailsEntity>));
				_notesDetailsCollectionViaCallQueueCustomer_ = (EntityCollection<NotesDetailsEntity>)info.GetValue("_notesDetailsCollectionViaCallQueueCustomer_", typeof(EntityCollection<NotesDetailsEntity>));
				_notesDetailsCollectionViaEvents = (EntityCollection<NotesDetailsEntity>)info.GetValue("_notesDetailsCollectionViaEvents", typeof(EntityCollection<NotesDetailsEntity>));
				_notesDetailsCollectionViaCallQueueCustomer__ = (EntityCollection<NotesDetailsEntity>)info.GetValue("_notesDetailsCollectionViaCallQueueCustomer__", typeof(EntityCollection<NotesDetailsEntity>));
				_notesDetailsCollectionViaEvents_ = (EntityCollection<NotesDetailsEntity>)info.GetValue("_notesDetailsCollectionViaEvents_", typeof(EntityCollection<NotesDetailsEntity>));
				_notesDetailsCollectionViaEvents___ = (EntityCollection<NotesDetailsEntity>)info.GetValue("_notesDetailsCollectionViaEvents___", typeof(EntityCollection<NotesDetailsEntity>));
				_notesDetailsCollectionViaCallQueueCustomer = (EntityCollection<NotesDetailsEntity>)info.GetValue("_notesDetailsCollectionViaCallQueueCustomer", typeof(EntityCollection<NotesDetailsEntity>));
				_notesDetailsCollectionViaEvents____ = (EntityCollection<NotesDetailsEntity>)info.GetValue("_notesDetailsCollectionViaEvents____", typeof(EntityCollection<NotesDetailsEntity>));
				_notesDetailsCollectionViaEvents__ = (EntityCollection<NotesDetailsEntity>)info.GetValue("_notesDetailsCollectionViaEvents__", typeof(EntityCollection<NotesDetailsEntity>));
				_notificationMediumCollectionViaNotificationType = (EntityCollection<NotificationMediumEntity>)info.GetValue("_notificationMediumCollectionViaNotificationType", typeof(EntityCollection<NotificationMediumEntity>));
				_notificationMediumCollectionViaNotification = (EntityCollection<NotificationMediumEntity>)info.GetValue("_notificationMediumCollectionViaNotification", typeof(EntityCollection<NotificationMediumEntity>));
				_notificationTypeCollectionViaEventCustomerTestNotPerformedNotification = (EntityCollection<NotificationTypeEntity>)info.GetValue("_notificationTypeCollectionViaEventCustomerTestNotPerformedNotification", typeof(EntityCollection<NotificationTypeEntity>));
				_notificationTypeCollectionViaEmailTemplate = (EntityCollection<NotificationTypeEntity>)info.GetValue("_notificationTypeCollectionViaEmailTemplate", typeof(EntityCollection<NotificationTypeEntity>));
				_notificationTypeCollectionViaNotification = (EntityCollection<NotificationTypeEntity>)info.GetValue("_notificationTypeCollectionViaNotification", typeof(EntityCollection<NotificationTypeEntity>));
				_orderCollectionViaRefundRequest_ = (EntityCollection<OrderEntity>)info.GetValue("_orderCollectionViaRefundRequest_", typeof(EntityCollection<OrderEntity>));
				_orderCollectionViaRefundRequest = (EntityCollection<OrderEntity>)info.GetValue("_orderCollectionViaRefundRequest", typeof(EntityCollection<OrderEntity>));
				_organizationCollectionViaAccountTestHcpcsCode_ = (EntityCollection<OrganizationEntity>)info.GetValue("_organizationCollectionViaAccountTestHcpcsCode_", typeof(EntityCollection<OrganizationEntity>));
				_organizationCollectionViaAccountTestHcpcsCode = (EntityCollection<OrganizationEntity>)info.GetValue("_organizationCollectionViaAccountTestHcpcsCode", typeof(EntityCollection<OrganizationEntity>));
				_organizationCollectionViaAccountCallCenterOrganization = (EntityCollection<OrganizationEntity>)info.GetValue("_organizationCollectionViaAccountCallCenterOrganization", typeof(EntityCollection<OrganizationEntity>));
				_organizationCollectionViaAccountCallCenterOrganization_ = (EntityCollection<OrganizationEntity>)info.GetValue("_organizationCollectionViaAccountCallCenterOrganization_", typeof(EntityCollection<OrganizationEntity>));
				_organizationCollectionViaEventAccountTestHcpcsCode_ = (EntityCollection<OrganizationEntity>)info.GetValue("_organizationCollectionViaEventAccountTestHcpcsCode_", typeof(EntityCollection<OrganizationEntity>));
				_organizationCollectionViaEventAccountTestHcpcsCode = (EntityCollection<OrganizationEntity>)info.GetValue("_organizationCollectionViaEventAccountTestHcpcsCode", typeof(EntityCollection<OrganizationEntity>));
				_organizationCollectionViaMarketingPrintOrder = (EntityCollection<OrganizationEntity>)info.GetValue("_organizationCollectionViaMarketingPrintOrder", typeof(EntityCollection<OrganizationEntity>));
				_organizationCollectionViaMarketingPrintOrder_ = (EntityCollection<OrganizationEntity>)info.GetValue("_organizationCollectionViaMarketingPrintOrder_", typeof(EntityCollection<OrganizationEntity>));
				_organizationCollectionViaAffiliateProfile = (EntityCollection<OrganizationEntity>)info.GetValue("_organizationCollectionViaAffiliateProfile", typeof(EntityCollection<OrganizationEntity>));
				_packageCollectionViaPreApprovedPackage = (EntityCollection<PackageEntity>)info.GetValue("_packageCollectionViaPreApprovedPackage", typeof(EntityCollection<PackageEntity>));
				_physicianMasterCollectionViaCustomerPrimaryCarePhysician = (EntityCollection<PhysicianMasterEntity>)info.GetValue("_physicianMasterCollectionViaCustomerPrimaryCarePhysician", typeof(EntityCollection<PhysicianMasterEntity>));
				_physicianMasterCollectionViaCustomerPrimaryCarePhysician_ = (EntityCollection<PhysicianMasterEntity>)info.GetValue("_physicianMasterCollectionViaCustomerPrimaryCarePhysician_", typeof(EntityCollection<PhysicianMasterEntity>));
				_physicianMasterCollectionViaCustomerPrimaryCarePhysician__ = (EntityCollection<PhysicianMasterEntity>)info.GetValue("_physicianMasterCollectionViaCustomerPrimaryCarePhysician__", typeof(EntityCollection<PhysicianMasterEntity>));
				_podDetailsCollectionViaSalesRepPodAssigments = (EntityCollection<PodDetailsEntity>)info.GetValue("_podDetailsCollectionViaSalesRepPodAssigments", typeof(EntityCollection<PodDetailsEntity>));
				_podDetailsCollectionViaEventStaffAssignment = (EntityCollection<PodDetailsEntity>)info.GetValue("_podDetailsCollectionViaEventStaffAssignment", typeof(EntityCollection<PodDetailsEntity>));
				_podDetailsCollectionViaEventNote_ = (EntityCollection<PodDetailsEntity>)info.GetValue("_podDetailsCollectionViaEventNote_", typeof(EntityCollection<PodDetailsEntity>));
				_podDetailsCollectionViaEventNote = (EntityCollection<PodDetailsEntity>)info.GetValue("_podDetailsCollectionViaEventNote", typeof(EntityCollection<PodDetailsEntity>));
				_podDetailsCollectionViaPodDefaultTeam = (EntityCollection<PodDetailsEntity>)info.GetValue("_podDetailsCollectionViaPodDefaultTeam", typeof(EntityCollection<PodDetailsEntity>));
				_podDetailsCollectionViaEventStaffAssignment_ = (EntityCollection<PodDetailsEntity>)info.GetValue("_podDetailsCollectionViaEventStaffAssignment_", typeof(EntityCollection<PodDetailsEntity>));
				_podDetailsCollectionViaEventStaffAssignment__ = (EntityCollection<PodDetailsEntity>)info.GetValue("_podDetailsCollectionViaEventStaffAssignment__", typeof(EntityCollection<PodDetailsEntity>));
				_preQualificationQuestionCollectionViaEventCustomerQuestionAnswer_ = (EntityCollection<PreQualificationQuestionEntity>)info.GetValue("_preQualificationQuestionCollectionViaEventCustomerQuestionAnswer_", typeof(EntityCollection<PreQualificationQuestionEntity>));
				_preQualificationQuestionCollectionViaDisqualifiedTest = (EntityCollection<PreQualificationQuestionEntity>)info.GetValue("_preQualificationQuestionCollectionViaDisqualifiedTest", typeof(EntityCollection<PreQualificationQuestionEntity>));
				_preQualificationQuestionCollectionViaDisqualifiedTest_ = (EntityCollection<PreQualificationQuestionEntity>)info.GetValue("_preQualificationQuestionCollectionViaDisqualifiedTest_", typeof(EntityCollection<PreQualificationQuestionEntity>));
				_preQualificationQuestionCollectionViaEventCustomerQuestionAnswer = (EntityCollection<PreQualificationQuestionEntity>)info.GetValue("_preQualificationQuestionCollectionViaEventCustomerQuestionAnswer", typeof(EntityCollection<PreQualificationQuestionEntity>));
				_prospectCustomerCollectionViaCallQueueCustomer_ = (EntityCollection<ProspectCustomerEntity>)info.GetValue("_prospectCustomerCollectionViaCallQueueCustomer_", typeof(EntityCollection<ProspectCustomerEntity>));
				_prospectCustomerCollectionViaCallQueueCustomer = (EntityCollection<ProspectCustomerEntity>)info.GetValue("_prospectCustomerCollectionViaCallQueueCustomer", typeof(EntityCollection<ProspectCustomerEntity>));
				_prospectCustomerCollectionViaCallQueueCustomer__ = (EntityCollection<ProspectCustomerEntity>)info.GetValue("_prospectCustomerCollectionViaCallQueueCustomer__", typeof(EntityCollection<ProspectCustomerEntity>));
				_prospectListDetailsCollectionViaProspects = (EntityCollection<ProspectListDetailsEntity>)info.GetValue("_prospectListDetailsCollectionViaProspects", typeof(EntityCollection<ProspectListDetailsEntity>));
				_prospectsCollectionViaHostFacilityRanking = (EntityCollection<ProspectsEntity>)info.GetValue("_prospectsCollectionViaHostFacilityRanking", typeof(EntityCollection<ProspectsEntity>));
				_prospectsCollectionViaHostPayment = (EntityCollection<ProspectsEntity>)info.GetValue("_prospectsCollectionViaHostPayment", typeof(EntityCollection<ProspectsEntity>));
				_prospectTypeCollectionViaProspects = (EntityCollection<ProspectTypeEntity>)info.GetValue("_prospectTypeCollectionViaProspects", typeof(EntityCollection<ProspectTypeEntity>));
				_refundRequestCollectionViaEventAppointmentCancellationLog = (EntityCollection<RefundRequestEntity>)info.GetValue("_refundRequestCollectionViaEventAppointmentCancellationLog", typeof(EntityCollection<RefundRequestEntity>));
				_relationshipCollectionViaGuardianDetails_ = (EntityCollection<RelationshipEntity>)info.GetValue("_relationshipCollectionViaGuardianDetails_", typeof(EntityCollection<RelationshipEntity>));
				_relationshipCollectionViaGuardianDetails = (EntityCollection<RelationshipEntity>)info.GetValue("_relationshipCollectionViaGuardianDetails", typeof(EntityCollection<RelationshipEntity>));
				_rescheduleCancelDispositionCollectionViaEventAppointmentChangeLog = (EntityCollection<RescheduleCancelDispositionEntity>)info.GetValue("_rescheduleCancelDispositionCollectionViaEventAppointmentChangeLog", typeof(EntityCollection<RescheduleCancelDispositionEntity>));
				_rescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog = (EntityCollection<RescheduleCancelDispositionEntity>)info.GetValue("_rescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog", typeof(EntityCollection<RescheduleCancelDispositionEntity>));
				_roleCollectionViaUser = (EntityCollection<RoleEntity>)info.GetValue("_roleCollectionViaUser", typeof(EntityCollection<RoleEntity>));
				_roleCollectionViaHostFacilityRanking = (EntityCollection<RoleEntity>)info.GetValue("_roleCollectionViaHostFacilityRanking", typeof(EntityCollection<RoleEntity>));
				_roleCollectionViaUser_ = (EntityCollection<RoleEntity>)info.GetValue("_roleCollectionViaUser_", typeof(EntityCollection<RoleEntity>));
				_scheduleMethodCollectionViaEvents___ = (EntityCollection<ScheduleMethodEntity>)info.GetValue("_scheduleMethodCollectionViaEvents___", typeof(EntityCollection<ScheduleMethodEntity>));
				_scheduleMethodCollectionViaEvents____ = (EntityCollection<ScheduleMethodEntity>)info.GetValue("_scheduleMethodCollectionViaEvents____", typeof(EntityCollection<ScheduleMethodEntity>));
				_scheduleMethodCollectionViaEvents = (EntityCollection<ScheduleMethodEntity>)info.GetValue("_scheduleMethodCollectionViaEvents", typeof(EntityCollection<ScheduleMethodEntity>));
				_scheduleMethodCollectionViaEvents_ = (EntityCollection<ScheduleMethodEntity>)info.GetValue("_scheduleMethodCollectionViaEvents_", typeof(EntityCollection<ScheduleMethodEntity>));
				_scheduleMethodCollectionViaEvents__ = (EntityCollection<ScheduleMethodEntity>)info.GetValue("_scheduleMethodCollectionViaEvents__", typeof(EntityCollection<ScheduleMethodEntity>));
				_scriptsCollectionViaCallQueue = (EntityCollection<ScriptsEntity>)info.GetValue("_scriptsCollectionViaCallQueue", typeof(EntityCollection<ScriptsEntity>));
				_scriptsCollectionViaCallQueue_ = (EntityCollection<ScriptsEntity>)info.GetValue("_scriptsCollectionViaCallQueue_", typeof(EntityCollection<ScriptsEntity>));
				_shippingOptionCollectionViaShippingDetail_ = (EntityCollection<ShippingOptionEntity>)info.GetValue("_shippingOptionCollectionViaShippingDetail_", typeof(EntityCollection<ShippingOptionEntity>));
				_shippingOptionCollectionViaShippingDetail = (EntityCollection<ShippingOptionEntity>)info.GetValue("_shippingOptionCollectionViaShippingDetail", typeof(EntityCollection<ShippingOptionEntity>));
				_staffEventRoleCollectionViaEventStaffAssignment__ = (EntityCollection<StaffEventRoleEntity>)info.GetValue("_staffEventRoleCollectionViaEventStaffAssignment__", typeof(EntityCollection<StaffEventRoleEntity>));
				_staffEventRoleCollectionViaPodDefaultTeam = (EntityCollection<StaffEventRoleEntity>)info.GetValue("_staffEventRoleCollectionViaPodDefaultTeam", typeof(EntityCollection<StaffEventRoleEntity>));
				_staffEventRoleCollectionViaEventStaffAssignment = (EntityCollection<StaffEventRoleEntity>)info.GetValue("_staffEventRoleCollectionViaEventStaffAssignment", typeof(EntityCollection<StaffEventRoleEntity>));
				_staffEventRoleCollectionViaEventStaffAssignment_ = (EntityCollection<StaffEventRoleEntity>)info.GetValue("_staffEventRoleCollectionViaEventStaffAssignment_", typeof(EntityCollection<StaffEventRoleEntity>));
				_standardFindingTestReadingCollectionViaCustomerEventReading = (EntityCollection<StandardFindingTestReadingEntity>)info.GetValue("_standardFindingTestReadingCollectionViaCustomerEventReading", typeof(EntityCollection<StandardFindingTestReadingEntity>));
				_stateCollectionViaAddress = (EntityCollection<StateEntity>)info.GetValue("_stateCollectionViaAddress", typeof(EntityCollection<StateEntity>));
				_surveyQuestionCollectionViaSurveyAnswer_ = (EntityCollection<SurveyQuestionEntity>)info.GetValue("_surveyQuestionCollectionViaSurveyAnswer_", typeof(EntityCollection<SurveyQuestionEntity>));
				_surveyQuestionCollectionViaSurveyAnswer = (EntityCollection<SurveyQuestionEntity>)info.GetValue("_surveyQuestionCollectionViaSurveyAnswer", typeof(EntityCollection<SurveyQuestionEntity>));
				_tagCollectionViaPreAssessmentCustomerCallQueueCallAttempt = (EntityCollection<TagEntity>)info.GetValue("_tagCollectionViaPreAssessmentCustomerCallQueueCallAttempt", typeof(EntityCollection<TagEntity>));
				_tagCollectionViaCustomerCallQueueCallAttempt = (EntityCollection<TagEntity>)info.GetValue("_tagCollectionViaCustomerCallQueueCallAttempt", typeof(EntityCollection<TagEntity>));
				_taskPriorityTypesCollectionViaTaskDetails__ = (EntityCollection<TaskPriorityTypesEntity>)info.GetValue("_taskPriorityTypesCollectionViaTaskDetails__", typeof(EntityCollection<TaskPriorityTypesEntity>));
				_taskPriorityTypesCollectionViaTaskDetails_ = (EntityCollection<TaskPriorityTypesEntity>)info.GetValue("_taskPriorityTypesCollectionViaTaskDetails_", typeof(EntityCollection<TaskPriorityTypesEntity>));
				_taskPriorityTypesCollectionViaTaskDetails = (EntityCollection<TaskPriorityTypesEntity>)info.GetValue("_taskPriorityTypesCollectionViaTaskDetails", typeof(EntityCollection<TaskPriorityTypesEntity>));
				_taskStatusTypesCollectionViaTaskDetails_ = (EntityCollection<TaskStatusTypesEntity>)info.GetValue("_taskStatusTypesCollectionViaTaskDetails_", typeof(EntityCollection<TaskStatusTypesEntity>));
				_taskStatusTypesCollectionViaTaskDetails__ = (EntityCollection<TaskStatusTypesEntity>)info.GetValue("_taskStatusTypesCollectionViaTaskDetails__", typeof(EntityCollection<TaskStatusTypesEntity>));
				_taskStatusTypesCollectionViaTaskDetails = (EntityCollection<TaskStatusTypesEntity>)info.GetValue("_taskStatusTypesCollectionViaTaskDetails", typeof(EntityCollection<TaskStatusTypesEntity>));
				_technicianProfileCollectionViaPinChangelog = (EntityCollection<TechnicianProfileEntity>)info.GetValue("_technicianProfileCollectionViaPinChangelog", typeof(EntityCollection<TechnicianProfileEntity>));
				_territoryCollectionViaTerritory = (EntityCollection<TerritoryEntity>)info.GetValue("_territoryCollectionViaTerritory", typeof(EntityCollection<TerritoryEntity>));
				_territoryCollectionViaOrganizationRoleUserTerritory = (EntityCollection<TerritoryEntity>)info.GetValue("_territoryCollectionViaOrganizationRoleUserTerritory", typeof(EntityCollection<TerritoryEntity>));
				_testCollectionViaEventCustomerTestNotPerformedNotification = (EntityCollection<TestEntity>)info.GetValue("_testCollectionViaEventCustomerTestNotPerformedNotification", typeof(EntityCollection<TestEntity>));
				_testCollectionViaEventPhysicianTest = (EntityCollection<TestEntity>)info.GetValue("_testCollectionViaEventPhysicianTest", typeof(EntityCollection<TestEntity>));
				_testCollectionViaDisqualifiedTest_ = (EntityCollection<TestEntity>)info.GetValue("_testCollectionViaDisqualifiedTest_", typeof(EntityCollection<TestEntity>));
				_testCollectionViaEventCustomerRetest = (EntityCollection<TestEntity>)info.GetValue("_testCollectionViaEventCustomerRetest", typeof(EntityCollection<TestEntity>));
				_testCollectionViaEventPhysicianTest_ = (EntityCollection<TestEntity>)info.GetValue("_testCollectionViaEventPhysicianTest_", typeof(EntityCollection<TestEntity>));
				_testCollectionViaKynLabValues_ = (EntityCollection<TestEntity>)info.GetValue("_testCollectionViaKynLabValues_", typeof(EntityCollection<TestEntity>));
				_testCollectionViaEventPhysicianTest__ = (EntityCollection<TestEntity>)info.GetValue("_testCollectionViaEventPhysicianTest__", typeof(EntityCollection<TestEntity>));
				_testCollectionViaTestHcpcsCode_ = (EntityCollection<TestEntity>)info.GetValue("_testCollectionViaTestHcpcsCode_", typeof(EntityCollection<TestEntity>));
				_testCollectionViaTestHcpcsCode = (EntityCollection<TestEntity>)info.GetValue("_testCollectionViaTestHcpcsCode", typeof(EntityCollection<TestEntity>));
				_testCollectionViaKynLabValues = (EntityCollection<TestEntity>)info.GetValue("_testCollectionViaKynLabValues", typeof(EntityCollection<TestEntity>));
				_testCollectionViaPreApprovedTest = (EntityCollection<TestEntity>)info.GetValue("_testCollectionViaPreApprovedTest", typeof(EntityCollection<TestEntity>));
				_testCollectionViaClinicalTestQualificationCriteria = (EntityCollection<TestEntity>)info.GetValue("_testCollectionViaClinicalTestQualificationCriteria", typeof(EntityCollection<TestEntity>));
				_testCollectionViaRequiredTest = (EntityCollection<TestEntity>)info.GetValue("_testCollectionViaRequiredTest", typeof(EntityCollection<TestEntity>));
				_testCollectionViaClinicalTestQualificationCriteria_ = (EntityCollection<TestEntity>)info.GetValue("_testCollectionViaClinicalTestQualificationCriteria_", typeof(EntityCollection<TestEntity>));
				_testCollectionViaDisqualifiedTest = (EntityCollection<TestEntity>)info.GetValue("_testCollectionViaDisqualifiedTest", typeof(EntityCollection<TestEntity>));
				_testCollectionViaPreQualificationTestTemplate = (EntityCollection<TestEntity>)info.GetValue("_testCollectionViaPreQualificationTestTemplate", typeof(EntityCollection<TestEntity>));
				_testCollectionViaPreQualificationTestTemplate_ = (EntityCollection<TestEntity>)info.GetValue("_testCollectionViaPreQualificationTestTemplate_", typeof(EntityCollection<TestEntity>));
				_testCollectionViaPreQualificationQuestion = (EntityCollection<TestEntity>)info.GetValue("_testCollectionViaPreQualificationQuestion", typeof(EntityCollection<TestEntity>));
				_testHcpcsCodeCollectionViaEventAccountTestHcpcsCode_ = (EntityCollection<TestHcpcsCodeEntity>)info.GetValue("_testHcpcsCodeCollectionViaEventAccountTestHcpcsCode_", typeof(EntityCollection<TestHcpcsCodeEntity>));
				_testHcpcsCodeCollectionViaEventAccountTestHcpcsCode = (EntityCollection<TestHcpcsCodeEntity>)info.GetValue("_testHcpcsCodeCollectionViaEventAccountTestHcpcsCode", typeof(EntityCollection<TestHcpcsCodeEntity>));
				_testHcpcsCodeCollectionViaAccountTestHcpcsCode_ = (EntityCollection<TestHcpcsCodeEntity>)info.GetValue("_testHcpcsCodeCollectionViaAccountTestHcpcsCode_", typeof(EntityCollection<TestHcpcsCodeEntity>));
				_testHcpcsCodeCollectionViaAccountTestHcpcsCode = (EntityCollection<TestHcpcsCodeEntity>)info.GetValue("_testHcpcsCodeCollectionViaAccountTestHcpcsCode", typeof(EntityCollection<TestHcpcsCodeEntity>));
				_testNotPerformedReasonCollectionViaTestNotPerformed_ = (EntityCollection<TestNotPerformedReasonEntity>)info.GetValue("_testNotPerformedReasonCollectionViaTestNotPerformed_", typeof(EntityCollection<TestNotPerformedReasonEntity>));
				_testNotPerformedReasonCollectionViaTestNotPerformed = (EntityCollection<TestNotPerformedReasonEntity>)info.GetValue("_testNotPerformedReasonCollectionViaTestNotPerformed", typeof(EntityCollection<TestNotPerformedReasonEntity>));
				_testReadingCollectionViaCustomerEventReading = (EntityCollection<TestReadingEntity>)info.GetValue("_testReadingCollectionViaCustomerEventReading", typeof(EntityCollection<TestReadingEntity>));
				_testUnableScreenReasonCollectionViaCustomerEventUnableScreenReason = (EntityCollection<TestUnableScreenReasonEntity>)info.GetValue("_testUnableScreenReasonCollectionViaCustomerEventUnableScreenReason", typeof(EntityCollection<TestUnableScreenReasonEntity>));
				_userLoginCollectionViaPasswordChangelog = (EntityCollection<UserLoginEntity>)info.GetValue("_userLoginCollectionViaPasswordChangelog", typeof(EntityCollection<UserLoginEntity>));
				_zipCollectionViaAddress = (EntityCollection<ZipEntity>)info.GetValue("_zipCollectionViaAddress", typeof(EntityCollection<ZipEntity>));
				_organization = (OrganizationEntity)info.GetValue("_organization", typeof(OrganizationEntity));
				if(_organization!=null)
				{
					_organization.AfterSave+=new EventHandler(OnEntityAfterSave);
				}
				_role = (RoleEntity)info.GetValue("_role", typeof(RoleEntity));
				if(_role!=null)
				{
					_role.AfterSave+=new EventHandler(OnEntityAfterSave);
				}
				_user = (UserEntity)info.GetValue("_user", typeof(UserEntity));
				if(_user!=null)
				{
					_user.AfterSave+=new EventHandler(OnEntityAfterSave);
				}
				_accountCoordinatorProfile = (AccountCoordinatorProfileEntity)info.GetValue("_accountCoordinatorProfile", typeof(AccountCoordinatorProfileEntity));
				if(_accountCoordinatorProfile!=null)
				{
					_accountCoordinatorProfile.AfterSave+=new EventHandler(OnEntityAfterSave);
				}
				_affiliateProfile_ = (AffiliateProfileEntity)info.GetValue("_affiliateProfile_", typeof(AffiliateProfileEntity));
				if(_affiliateProfile_!=null)
				{
					_affiliateProfile_.AfterSave+=new EventHandler(OnEntityAfterSave);
				}
				_callCenterRepProfile = (CallCenterRepProfileEntity)info.GetValue("_callCenterRepProfile", typeof(CallCenterRepProfileEntity));
				if(_callCenterRepProfile!=null)
				{
					_callCenterRepProfile.AfterSave+=new EventHandler(OnEntityAfterSave);
				}
				_customerProfile = (CustomerProfileEntity)info.GetValue("_customerProfile", typeof(CustomerProfileEntity));
				if(_customerProfile!=null)
				{
					_customerProfile.AfterSave+=new EventHandler(OnEntityAfterSave);
				}
				_physicianProfile = (PhysicianProfileEntity)info.GetValue("_physicianProfile", typeof(PhysicianProfileEntity));
				if(_physicianProfile!=null)
				{
					_physicianProfile.AfterSave+=new EventHandler(OnEntityAfterSave);
				}
				_technicianProfile = (TechnicianProfileEntity)info.GetValue("_technicianProfile", typeof(TechnicianProfileEntity));
				if(_technicianProfile!=null)
				{
					_technicianProfile.AfterSave+=new EventHandler(OnEntityAfterSave);
				}
				base.FixupDeserialization(FieldInfoProviderSingleton.GetInstance());
			}
			
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		
		/// <summary>Performs the desync setup when an FK field has been changed. The entity referenced based on the FK field will be dereferenced and sync info will be removed.</summary>
		/// <param name="fieldIndex">The fieldindex.</param>
		protected override void PerformDesyncSetupFKFieldChange(int fieldIndex)
		{
			switch((OrganizationRoleUserFieldIndex)fieldIndex)
			{
				case OrganizationRoleUserFieldIndex.UserId:
					DesetupSyncUser(true, false);
					break;
				case OrganizationRoleUserFieldIndex.RoleId:
					DesetupSyncRole(true, false);
					break;
				case OrganizationRoleUserFieldIndex.OrganizationId:
					DesetupSyncOrganization(true, false);
					break;
				default:
					base.PerformDesyncSetupFKFieldChange(fieldIndex);
					break;
			}
		}
				
		/// <summary>Gets the inheritance info provider instance of the project this entity instance is located in. </summary>
		/// <returns>ready to use inheritance info provider instance.</returns>
		protected override IInheritanceInfoProvider GetInheritanceInfoProvider()
		{
			return InheritanceInfoProviderSingleton.GetInstance();
		}
		
		/// <summary> Sets the related entity property to the entity specified. If the property is a collection, it will add the entity specified to that collection.</summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <param name="entity">Entity to set as an related entity</param>
		/// <remarks>Used by prefetch path logic.</remarks>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public override void SetRelatedEntityProperty(string propertyName, IEntity2 entity)
		{
			switch(propertyName)
			{
				case "Organization":
					this.Organization = (OrganizationEntity)entity;
					break;
				case "Role":
					this.Role = (RoleEntity)entity;
					break;
				case "User":
					this.User = (UserEntity)entity;
					break;
				case "AccountCallCenterOrganization_":
					this.AccountCallCenterOrganization_.Add((AccountCallCenterOrganizationEntity)entity);
					break;
				case "AccountCallCenterOrganization":
					this.AccountCallCenterOrganization.Add((AccountCallCenterOrganizationEntity)entity);
					break;
				case "AccountHraChatQuestionnaire_":
					this.AccountHraChatQuestionnaire_.Add((AccountHraChatQuestionnaireEntity)entity);
					break;
				case "AccountHraChatQuestionnaire":
					this.AccountHraChatQuestionnaire.Add((AccountHraChatQuestionnaireEntity)entity);
					break;
				case "AccountTestHcpcsCode_":
					this.AccountTestHcpcsCode_.Add((AccountTestHcpcsCodeEntity)entity);
					break;
				case "AccountTestHcpcsCode":
					this.AccountTestHcpcsCode.Add((AccountTestHcpcsCodeEntity)entity);
					break;
				case "ActivityType":
					this.ActivityType.Add((ActivityTypeEntity)entity);
					break;
				case "AdditionalFields_":
					this.AdditionalFields_.Add((AdditionalFieldsEntity)entity);
					break;
				case "AdditionalFields":
					this.AdditionalFields.Add((AdditionalFieldsEntity)entity);
					break;
				case "Address":
					this.Address.Add((AddressEntity)entity);
					break;
				case "AdvocateManagerTeam_":
					this.AdvocateManagerTeam_.Add((AdvocateManagerTeamEntity)entity);
					break;
				case "AdvocateManagerTeam":
					this.AdvocateManagerTeam.Add((AdvocateManagerTeamEntity)entity);
					break;
				case "Afcampaign_":
					this.Afcampaign_.Add((AfcampaignEntity)entity);
					break;
				case "Afcampaign":
					this.Afcampaign.Add((AfcampaignEntity)entity);
					break;
				case "AffiliateProfile":
					this.AffiliateProfile.Add((AffiliateProfileEntity)entity);
					break;
				case "ApplicationAuthentication_":
					this.ApplicationAuthentication_.Add((ApplicationAuthenticationEntity)entity);
					break;
				case "ApplicationAuthentication":
					this.ApplicationAuthentication.Add((ApplicationAuthenticationEntity)entity);
					break;
				case "Barrier_":
					this.Barrier_.Add((BarrierEntity)entity);
					break;
				case "Barrier":
					this.Barrier.Add((BarrierEntity)entity);
					break;
				case "CallCenterAgentTeam":
					this.CallCenterAgentTeam.Add((CallCenterAgentTeamEntity)entity);
					break;
				case "CallCenterAgentTeamLog__":
					this.CallCenterAgentTeamLog__.Add((CallCenterAgentTeamLogEntity)entity);
					break;
				case "CallCenterAgentTeamLog_":
					this.CallCenterAgentTeamLog_.Add((CallCenterAgentTeamLogEntity)entity);
					break;
				case "CallCenterAgentTeamLog":
					this.CallCenterAgentTeamLog.Add((CallCenterAgentTeamLogEntity)entity);
					break;
				case "CallCenterTeam_":
					this.CallCenterTeam_.Add((CallCenterTeamEntity)entity);
					break;
				case "CallCenterTeam":
					this.CallCenterTeam.Add((CallCenterTeamEntity)entity);
					break;
				case "CallQueue_":
					this.CallQueue_.Add((CallQueueEntity)entity);
					break;
				case "CallQueue":
					this.CallQueue.Add((CallQueueEntity)entity);
					break;
				case "CallQueueAssignment":
					this.CallQueueAssignment.Add((CallQueueAssignmentEntity)entity);
					break;
				case "CallQueueCustomer__":
					this.CallQueueCustomer__.Add((CallQueueCustomerEntity)entity);
					break;
				case "CallQueueCustomer_":
					this.CallQueueCustomer_.Add((CallQueueCustomerEntity)entity);
					break;
				case "CallQueueCustomer":
					this.CallQueueCustomer.Add((CallQueueCustomerEntity)entity);
					break;
				case "CallQueueCustomerLock":
					this.CallQueueCustomerLock.Add((CallQueueCustomerLockEntity)entity);
					break;
				case "CallQueueCustomTag":
					this.CallQueueCustomTag.Add((CallQueueCustomTagEntity)entity);
					break;
				case "CallRoundCallQueue":
					this.CallRoundCallQueue.Add((CallRoundCallQueueEntity)entity);
					break;
				case "Calls":
					this.Calls.Add((CallsEntity)entity);
					break;
				case "CallUpload":
					this.CallUpload.Add((CallUploadEntity)entity);
					break;
				case "Campaign_":
					this.Campaign_.Add((CampaignEntity)entity);
					break;
				case "Campaign":
					this.Campaign.Add((CampaignEntity)entity);
					break;
				case "CampaignActivity_":
					this.CampaignActivity_.Add((CampaignActivityEntity)entity);
					break;
				case "CampaignActivity":
					this.CampaignActivity.Add((CampaignActivityEntity)entity);
					break;
				case "CampaignActivityAssignment":
					this.CampaignActivityAssignment.Add((CampaignActivityAssignmentEntity)entity);
					break;
				case "CampaignAssignment":
					this.CampaignAssignment.Add((CampaignAssignmentEntity)entity);
					break;
				case "CdcontentGeneratorTracking":
					this.CdcontentGeneratorTracking.Add((CdcontentGeneratorTrackingEntity)entity);
					break;
				case "ChaperoneAnswer_":
					this.ChaperoneAnswer_.Add((ChaperoneAnswerEntity)entity);
					break;
				case "ChaperoneAnswer":
					this.ChaperoneAnswer.Add((ChaperoneAnswerEntity)entity);
					break;
				case "ChaperoneSignature":
					this.ChaperoneSignature.Add((ChaperoneSignatureEntity)entity);
					break;
				case "Check_":
					this.Check_.Add((CheckEntity)entity);
					break;
				case "Check":
					this.Check.Add((CheckEntity)entity);
					break;
				case "CheckListAnswer_":
					this.CheckListAnswer_.Add((CheckListAnswerEntity)entity);
					break;
				case "CheckListAnswer":
					this.CheckListAnswer.Add((CheckListAnswerEntity)entity);
					break;
				case "CheckListTemplate_":
					this.CheckListTemplate_.Add((CheckListTemplateEntity)entity);
					break;
				case "CheckListTemplate":
					this.CheckListTemplate.Add((CheckListTemplateEntity)entity);
					break;
				case "ClinicalTestQualificationCriteria_":
					this.ClinicalTestQualificationCriteria_.Add((ClinicalTestQualificationCriteriaEntity)entity);
					break;
				case "ClinicalTestQualificationCriteria":
					this.ClinicalTestQualificationCriteria.Add((ClinicalTestQualificationCriteriaEntity)entity);
					break;
				case "ContactCall_":
					this.ContactCall_.Add((ContactCallEntity)entity);
					break;
				case "ContactCall":
					this.ContactCall.Add((ContactCallEntity)entity);
					break;
				case "ContactMeeting_":
					this.ContactMeeting_.Add((ContactMeetingEntity)entity);
					break;
				case "ContactMeeting":
					this.ContactMeeting.Add((ContactMeetingEntity)entity);
					break;
				case "Content_":
					this.Content_.Add((ContentEntity)entity);
					break;
				case "Content":
					this.Content.Add((ContentEntity)entity);
					break;
				case "CorporateTag_":
					this.CorporateTag_.Add((CorporateTagEntity)entity);
					break;
				case "CorporateTag":
					this.CorporateTag.Add((CorporateTagEntity)entity);
					break;
				case "CorporateUpload":
					this.CorporateUpload.Add((CorporateUploadEntity)entity);
					break;
				case "Coupons_":
					this.Coupons_.Add((CouponsEntity)entity);
					break;
				case "Coupons":
					this.Coupons.Add((CouponsEntity)entity);
					break;
				case "CurrentMedication":
					this.CurrentMedication.Add((CurrentMedicationEntity)entity);
					break;
				case "CustomerActivityTypeUpload":
					this.CustomerActivityTypeUpload.Add((CustomerActivityTypeUploadEntity)entity);
					break;
				case "CustomerCallAttempts":
					this.CustomerCallAttempts.Add((CustomerCallAttemptsEntity)entity);
					break;
				case "CustomerCallQueueCallAttempt":
					this.CustomerCallQueueCallAttempt.Add((CustomerCallQueueCallAttemptEntity)entity);
					break;
				case "CustomerClinicalQuestionAnswer_":
					this.CustomerClinicalQuestionAnswer_.Add((CustomerClinicalQuestionAnswerEntity)entity);
					break;
				case "CustomerClinicalQuestionAnswer":
					this.CustomerClinicalQuestionAnswer.Add((CustomerClinicalQuestionAnswerEntity)entity);
					break;
				case "CustomerEligibility_":
					this.CustomerEligibility_.Add((CustomerEligibilityEntity)entity);
					break;
				case "CustomerEligibility":
					this.CustomerEligibility.Add((CustomerEligibilityEntity)entity);
					break;
				case "CustomerEventCriticalTestData_":
					this.CustomerEventCriticalTestData_.Add((CustomerEventCriticalTestDataEntity)entity);
					break;
				case "CustomerEventCriticalTestData":
					this.CustomerEventCriticalTestData.Add((CustomerEventCriticalTestDataEntity)entity);
					break;
				case "CustomerEventPriorityInQueueData_":
					this.CustomerEventPriorityInQueueData_.Add((CustomerEventPriorityInQueueDataEntity)entity);
					break;
				case "CustomerEventPriorityInQueueData":
					this.CustomerEventPriorityInQueueData.Add((CustomerEventPriorityInQueueDataEntity)entity);
					break;
				case "CustomerEventReading":
					this.CustomerEventReading.Add((CustomerEventReadingEntity)entity);
					break;
				case "CustomerEventTestPhysicianEvaluation":
					this.CustomerEventTestPhysicianEvaluation.Add((CustomerEventTestPhysicianEvaluationEntity)entity);
					break;
				case "CustomerEventTestState__":
					this.CustomerEventTestState__.Add((CustomerEventTestStateEntity)entity);
					break;
				case "CustomerEventTestState_":
					this.CustomerEventTestState_.Add((CustomerEventTestStateEntity)entity);
					break;
				case "CustomerEventTestState":
					this.CustomerEventTestState.Add((CustomerEventTestStateEntity)entity);
					break;
				case "CustomerEventUnableScreenReason":
					this.CustomerEventUnableScreenReason.Add((CustomerEventUnableScreenReasonEntity)entity);
					break;
				case "CustomerHealthInfo":
					this.CustomerHealthInfo.Add((CustomerHealthInfoEntity)entity);
					break;
				case "CustomerHealthInfoArchive":
					this.CustomerHealthInfoArchive.Add((CustomerHealthInfoArchiveEntity)entity);
					break;
				case "CustomerIcdCode":
					this.CustomerIcdCode.Add((CustomerIcdCodeEntity)entity);
					break;
				case "CustomerLockForCall":
					this.CustomerLockForCall.Add((CustomerLockForCallEntity)entity);
					break;
				case "CustomerMedicareQuestionAnswer":
					this.CustomerMedicareQuestionAnswer.Add((CustomerMedicareQuestionAnswerEntity)entity);
					break;
				case "CustomerPhoneNumberUpdateUpload":
					this.CustomerPhoneNumberUpdateUpload.Add((CustomerPhoneNumberUpdateUploadEntity)entity);
					break;
				case "CustomerPrimaryCarePhysician_":
					this.CustomerPrimaryCarePhysician_.Add((CustomerPrimaryCarePhysicianEntity)entity);
					break;
				case "CustomerPrimaryCarePhysician__":
					this.CustomerPrimaryCarePhysician__.Add((CustomerPrimaryCarePhysicianEntity)entity);
					break;
				case "CustomerPrimaryCarePhysician":
					this.CustomerPrimaryCarePhysician.Add((CustomerPrimaryCarePhysicianEntity)entity);
					break;
				case "CustomerProfileHistory":
					this.CustomerProfileHistory.Add((CustomerProfileHistoryEntity)entity);
					break;
				case "CustomerRegistrationNotes":
					this.CustomerRegistrationNotes.Add((CustomerRegistrationNotesEntity)entity);
					break;
				case "CustomerResultScreeningCommunication__":
					this.CustomerResultScreeningCommunication__.Add((CustomerResultScreeningCommunicationEntity)entity);
					break;
				case "CustomerResultScreeningCommunication_":
					this.CustomerResultScreeningCommunication_.Add((CustomerResultScreeningCommunicationEntity)entity);
					break;
				case "CustomerResultScreeningCommunication":
					this.CustomerResultScreeningCommunication.Add((CustomerResultScreeningCommunicationEntity)entity);
					break;
				case "CustomerTag_":
					this.CustomerTag_.Add((CustomerTagEntity)entity);
					break;
				case "CustomerTag":
					this.CustomerTag.Add((CustomerTagEntity)entity);
					break;
				case "CustomerTargeted_":
					this.CustomerTargeted_.Add((CustomerTargetedEntity)entity);
					break;
				case "CustomerTargeted":
					this.CustomerTargeted.Add((CustomerTargetedEntity)entity);
					break;
				case "CustomerWarmTransfer_":
					this.CustomerWarmTransfer_.Add((CustomerWarmTransferEntity)entity);
					break;
				case "CustomerWarmTransfer":
					this.CustomerWarmTransfer.Add((CustomerWarmTransferEntity)entity);
					break;
				case "CustomEventNotification":
					this.CustomEventNotification.Add((CustomEventNotificationEntity)entity);
					break;
				case "DirectMail":
					this.DirectMail.Add((DirectMailEntity)entity);
					break;
				case "DirectMailType_":
					this.DirectMailType_.Add((DirectMailTypeEntity)entity);
					break;
				case "DirectMailType":
					this.DirectMailType.Add((DirectMailTypeEntity)entity);
					break;
				case "DisqualifiedTest_":
					this.DisqualifiedTest_.Add((DisqualifiedTestEntity)entity);
					break;
				case "DisqualifiedTest":
					this.DisqualifiedTest.Add((DisqualifiedTestEntity)entity);
					break;
				case "Eligibility":
					this.Eligibility.Add((EligibilityEntity)entity);
					break;
				case "EligibilityUpload":
					this.EligibilityUpload.Add((EligibilityUploadEntity)entity);
					break;
				case "EmailTemplate":
					this.EmailTemplate.Add((EmailTemplateEntity)entity);
					break;
				case "EventAccountTestHcpcsCode_":
					this.EventAccountTestHcpcsCode_.Add((EventAccountTestHcpcsCodeEntity)entity);
					break;
				case "EventAccountTestHcpcsCode":
					this.EventAccountTestHcpcsCode.Add((EventAccountTestHcpcsCodeEntity)entity);
					break;
				case "EventActivityTemplate":
					this.EventActivityTemplate.Add((EventActivityTemplateEntity)entity);
					break;
				case "EventActivityTemplateCall":
					this.EventActivityTemplateCall.Add((EventActivityTemplateCallEntity)entity);
					break;
				case "EventActivityTemplateEmail":
					this.EventActivityTemplateEmail.Add((EventActivityTemplateEmailEntity)entity);
					break;
				case "EventActivityTemplateMeeting":
					this.EventActivityTemplateMeeting.Add((EventActivityTemplateMeetingEntity)entity);
					break;
				case "EventActivityTemplateTask":
					this.EventActivityTemplateTask.Add((EventActivityTemplateTaskEntity)entity);
					break;
				case "EventAppointment":
					this.EventAppointment.Add((EventAppointmentEntity)entity);
					break;
				case "EventAppointmentCancellationLog":
					this.EventAppointmentCancellationLog.Add((EventAppointmentCancellationLogEntity)entity);
					break;
				case "EventAppointmentChangeLog":
					this.EventAppointmentChangeLog.Add((EventAppointmentChangeLogEntity)entity);
					break;
				case "EventCustomerBasicBioMetric":
					this.EventCustomerBasicBioMetric.Add((EventCustomerBasicBioMetricEntity)entity);
					break;
				case "EventCustomerGiftCard":
					this.EventCustomerGiftCard.Add((EventCustomerGiftCardEntity)entity);
					break;
				case "EventCustomerPrimaryCarePhysician":
					this.EventCustomerPrimaryCarePhysician.Add((EventCustomerPrimaryCarePhysicianEntity)entity);
					break;
				case "EventCustomerQuestionAnswer_":
					this.EventCustomerQuestionAnswer_.Add((EventCustomerQuestionAnswerEntity)entity);
					break;
				case "EventCustomerQuestionAnswer":
					this.EventCustomerQuestionAnswer.Add((EventCustomerQuestionAnswerEntity)entity);
					break;
				case "EventCustomerResult___":
					this.EventCustomerResult___.Add((EventCustomerResultEntity)entity);
					break;
				case "EventCustomerResult__":
					this.EventCustomerResult__.Add((EventCustomerResultEntity)entity);
					break;
				case "EventCustomerResult_":
					this.EventCustomerResult_.Add((EventCustomerResultEntity)entity);
					break;
				case "EventCustomerResult____":
					this.EventCustomerResult____.Add((EventCustomerResultEntity)entity);
					break;
				case "EventCustomerResult______":
					this.EventCustomerResult______.Add((EventCustomerResultEntity)entity);
					break;
				case "EventCustomerResult_______":
					this.EventCustomerResult_______.Add((EventCustomerResultEntity)entity);
					break;
				case "EventCustomerResult":
					this.EventCustomerResult.Add((EventCustomerResultEntity)entity);
					break;
				case "EventCustomerResult_____":
					this.EventCustomerResult_____.Add((EventCustomerResultEntity)entity);
					break;
				case "EventCustomerResult________":
					this.EventCustomerResult________.Add((EventCustomerResultEntity)entity);
					break;
				case "EventCustomerResultBloodLab":
					this.EventCustomerResultBloodLab.Add((EventCustomerResultBloodLabEntity)entity);
					break;
				case "EventCustomerResultHistory":
					this.EventCustomerResultHistory.Add((EventCustomerResultHistoryEntity)entity);
					break;
				case "EventCustomerResultHistory_":
					this.EventCustomerResultHistory_.Add((EventCustomerResultHistoryEntity)entity);
					break;
				case "EventCustomerResultHistory__":
					this.EventCustomerResultHistory__.Add((EventCustomerResultHistoryEntity)entity);
					break;
				case "EventCustomerRetest":
					this.EventCustomerRetest.Add((EventCustomerRetestEntity)entity);
					break;
				case "EventCustomers_":
					this.EventCustomers_.Add((EventCustomersEntity)entity);
					break;
				case "EventCustomers":
					this.EventCustomers.Add((EventCustomersEntity)entity);
					break;
				case "EventCustomerTestNotPerformedNotification":
					this.EventCustomerTestNotPerformedNotification.Add((EventCustomerTestNotPerformedNotificationEntity)entity);
					break;
				case "EventNote_":
					this.EventNote_.Add((EventNoteEntity)entity);
					break;
				case "EventNote":
					this.EventNote.Add((EventNoteEntity)entity);
					break;
				case "EventPhysicianTest__":
					this.EventPhysicianTest__.Add((EventPhysicianTestEntity)entity);
					break;
				case "EventPhysicianTest_":
					this.EventPhysicianTest_.Add((EventPhysicianTestEntity)entity);
					break;
				case "EventPhysicianTest":
					this.EventPhysicianTest.Add((EventPhysicianTestEntity)entity);
					break;
				case "Events___":
					this.Events___.Add((EventsEntity)entity);
					break;
				case "Events____":
					this.Events____.Add((EventsEntity)entity);
					break;
				case "Events__":
					this.Events__.Add((EventsEntity)entity);
					break;
				case "Events":
					this.Events.Add((EventsEntity)entity);
					break;
				case "Events_":
					this.Events_.Add((EventsEntity)entity);
					break;
				case "EventStaffAssignment__":
					this.EventStaffAssignment__.Add((EventStaffAssignmentEntity)entity);
					break;
				case "EventStaffAssignment_":
					this.EventStaffAssignment_.Add((EventStaffAssignmentEntity)entity);
					break;
				case "EventStaffAssignment":
					this.EventStaffAssignment.Add((EventStaffAssignmentEntity)entity);
					break;
				case "ExitInterviewAnswer_":
					this.ExitInterviewAnswer_.Add((ExitInterviewAnswerEntity)entity);
					break;
				case "ExitInterviewAnswer":
					this.ExitInterviewAnswer.Add((ExitInterviewAnswerEntity)entity);
					break;
				case "ExitInterviewSignature":
					this.ExitInterviewSignature.Add((ExitInterviewSignatureEntity)entity);
					break;
				case "ExportableReportsQueue":
					this.ExportableReportsQueue.Add((ExportableReportsQueueEntity)entity);
					break;
				case "File":
					this.File.Add((FileEntity)entity);
					break;
				case "FillEventCallQueue":
					this.FillEventCallQueue.Add((FillEventCallQueueEntity)entity);
					break;
				case "FluConsentAnswer_":
					this.FluConsentAnswer_.Add((FluConsentAnswerEntity)entity);
					break;
				case "FluConsentAnswer":
					this.FluConsentAnswer.Add((FluConsentAnswerEntity)entity);
					break;
				case "FluConsentSignature":
					this.FluConsentSignature.Add((FluConsentSignatureEntity)entity);
					break;
				case "FluConsentTemplate_":
					this.FluConsentTemplate_.Add((FluConsentTemplateEntity)entity);
					break;
				case "FluConsentTemplate":
					this.FluConsentTemplate.Add((FluConsentTemplateEntity)entity);
					break;
				case "GcNotGivenReason_":
					this.GcNotGivenReason_.Add((GcNotGivenReasonEntity)entity);
					break;
				case "GcNotGivenReason":
					this.GcNotGivenReason.Add((GcNotGivenReasonEntity)entity);
					break;
				case "GuardianDetails_":
					this.GuardianDetails_.Add((GuardianDetailsEntity)entity);
					break;
				case "GuardianDetails":
					this.GuardianDetails.Add((GuardianDetailsEntity)entity);
					break;
				case "HafTemplate_":
					this.HafTemplate_.Add((HafTemplateEntity)entity);
					break;
				case "HafTemplate":
					this.HafTemplate.Add((HafTemplateEntity)entity);
					break;
				case "HcpcsCode_":
					this.HcpcsCode_.Add((HcpcsCodeEntity)entity);
					break;
				case "HcpcsCode":
					this.HcpcsCode.Add((HcpcsCodeEntity)entity);
					break;
				case "HealthPlanCallQueueCriteria__":
					this.HealthPlanCallQueueCriteria__.Add((HealthPlanCallQueueCriteriaEntity)entity);
					break;
				case "HealthPlanCallQueueCriteria_":
					this.HealthPlanCallQueueCriteria_.Add((HealthPlanCallQueueCriteriaEntity)entity);
					break;
				case "HealthPlanCriteriaAssignment__":
					this.HealthPlanCriteriaAssignment__.Add((HealthPlanCriteriaAssignmentEntity)entity);
					break;
				case "HealthPlanCriteriaAssignment_":
					this.HealthPlanCriteriaAssignment_.Add((HealthPlanCriteriaAssignmentEntity)entity);
					break;
				case "HealthPlanCriteriaAssignment":
					this.HealthPlanCriteriaAssignment.Add((HealthPlanCriteriaAssignmentEntity)entity);
					break;
				case "HealthPlanCriteriaAssignmentUpload":
					this.HealthPlanCriteriaAssignmentUpload.Add((HealthPlanCriteriaAssignmentUploadEntity)entity);
					break;
				case "HealthPlanCriteriaTeamAssignment_":
					this.HealthPlanCriteriaTeamAssignment_.Add((HealthPlanCriteriaTeamAssignmentEntity)entity);
					break;
				case "HealthPlanCriteriaTeamAssignment":
					this.HealthPlanCriteriaTeamAssignment.Add((HealthPlanCriteriaTeamAssignmentEntity)entity);
					break;
				case "HealthPlanRevenue_":
					this.HealthPlanRevenue_.Add((HealthPlanRevenueEntity)entity);
					break;
				case "HealthPlanRevenue":
					this.HealthPlanRevenue.Add((HealthPlanRevenueEntity)entity);
					break;
				case "HospitalPartnerCustomer__":
					this.HospitalPartnerCustomer__.Add((HospitalPartnerCustomerEntity)entity);
					break;
				case "HospitalPartnerCustomer_":
					this.HospitalPartnerCustomer_.Add((HospitalPartnerCustomerEntity)entity);
					break;
				case "HospitalPartnerCustomer":
					this.HospitalPartnerCustomer.Add((HospitalPartnerCustomerEntity)entity);
					break;
				case "HostFacilityRanking":
					this.HostFacilityRanking.Add((HostFacilityRankingEntity)entity);
					break;
				case "HostPayment":
					this.HostPayment.Add((HostPaymentEntity)entity);
					break;
				case "HostPaymentTransaction":
					this.HostPaymentTransaction.Add((HostPaymentTransactionEntity)entity);
					break;
				case "IcdCodes_":
					this.IcdCodes_.Add((IcdCodesEntity)entity);
					break;
				case "IcdCodes":
					this.IcdCodes.Add((IcdCodesEntity)entity);
					break;
				case "IncidentalFindings":
					this.IncidentalFindings.Add((IncidentalFindingsEntity)entity);
					break;
				case "KynLabValues_":
					this.KynLabValues_.Add((KynLabValuesEntity)entity);
					break;
				case "KynLabValues":
					this.KynLabValues.Add((KynLabValuesEntity)entity);
					break;
				case "Lab":
					this.Lab.Add((LabEntity)entity);
					break;
				case "Language":
					this.Language.Add((LanguageEntity)entity);
					break;
				case "LanguageBarrierCallQueue":
					this.LanguageBarrierCallQueue.Add((LanguageBarrierCallQueueEntity)entity);
					break;
				case "MailRoundCallQueue":
					this.MailRoundCallQueue.Add((MailRoundCallQueueEntity)entity);
					break;
				case "MarketingPrintOrder":
					this.MarketingPrintOrder.Add((MarketingPrintOrderEntity)entity);
					break;
				case "Medication_":
					this.Medication_.Add((MedicationEntity)entity);
					break;
				case "Medication":
					this.Medication.Add((MedicationEntity)entity);
					break;
				case "MedicationUpload":
					this.MedicationUpload.Add((MedicationUploadEntity)entity);
					break;
				case "MergeCustomerUpload":
					this.MergeCustomerUpload.Add((MergeCustomerUploadEntity)entity);
					break;
				case "NoShowCallQueue":
					this.NoShowCallQueue.Add((NoShowCallQueueEntity)entity);
					break;
				case "NotesDetails_":
					this.NotesDetails_.Add((NotesDetailsEntity)entity);
					break;
				case "NotesDetails":
					this.NotesDetails.Add((NotesDetailsEntity)entity);
					break;
				case "Notification":
					this.Notification.Add((NotificationEntity)entity);
					break;
				case "NotificationType":
					this.NotificationType.Add((NotificationTypeEntity)entity);
					break;
				case "OrganizationRoleUserTerritory":
					this.OrganizationRoleUserTerritory.Add((OrganizationRoleUserTerritoryEntity)entity);
					break;
				case "OrgRoleUserActivity":
					this.OrgRoleUserActivity.Add((OrgRoleUserActivityEntity)entity);
					break;
				case "ParticipationConsentSignature":
					this.ParticipationConsentSignature.Add((ParticipationConsentSignatureEntity)entity);
					break;
				case "PasswordChangelog":
					this.PasswordChangelog.Add((PasswordChangelogEntity)entity);
					break;
				case "PayPeriod_":
					this.PayPeriod_.Add((PayPeriodEntity)entity);
					break;
				case "PayPeriod":
					this.PayPeriod.Add((PayPeriodEntity)entity);
					break;
				case "PcpAppointment_":
					this.PcpAppointment_.Add((PcpAppointmentEntity)entity);
					break;
				case "PcpAppointment":
					this.PcpAppointment.Add((PcpAppointmentEntity)entity);
					break;
				case "PcpDisposition_":
					this.PcpDisposition_.Add((PcpDispositionEntity)entity);
					break;
				case "PcpDisposition":
					this.PcpDisposition.Add((PcpDispositionEntity)entity);
					break;
				case "PhysicianRecordRequestSignature":
					this.PhysicianRecordRequestSignature.Add((PhysicianRecordRequestSignatureEntity)entity);
					break;
				case "PinChangelog":
					this.PinChangelog.Add((PinChangelogEntity)entity);
					break;
				case "PodDefaultTeam":
					this.PodDefaultTeam.Add((PodDefaultTeamEntity)entity);
					break;
				case "PreApprovedPackage":
					this.PreApprovedPackage.Add((PreApprovedPackageEntity)entity);
					break;
				case "PreApprovedTest":
					this.PreApprovedTest.Add((PreApprovedTestEntity)entity);
					break;
				case "PreAssessmentCallQueueCustomerLock":
					this.PreAssessmentCallQueueCustomerLock.Add((PreAssessmentCallQueueCustomerLockEntity)entity);
					break;
				case "PreAssessmentCustomerCallQueueCallAttempt":
					this.PreAssessmentCustomerCallQueueCallAttempt.Add((PreAssessmentCustomerCallQueueCallAttemptEntity)entity);
					break;
				case "PreQualificationQuestion":
					this.PreQualificationQuestion.Add((PreQualificationQuestionEntity)entity);
					break;
				case "PreQualificationTestTemplate_":
					this.PreQualificationTestTemplate_.Add((PreQualificationTestTemplateEntity)entity);
					break;
				case "PreQualificationTestTemplate":
					this.PreQualificationTestTemplate.Add((PreQualificationTestTemplateEntity)entity);
					break;
				case "PrintOrderItemTracking_":
					this.PrintOrderItemTracking_.Add((PrintOrderItemTrackingEntity)entity);
					break;
				case "PrintOrderItemTracking":
					this.PrintOrderItemTracking.Add((PrintOrderItemTrackingEntity)entity);
					break;
				case "PriorityInQueue_":
					this.PriorityInQueue_.Add((PriorityInQueueEntity)entity);
					break;
				case "PriorityInQueue":
					this.PriorityInQueue.Add((PriorityInQueueEntity)entity);
					break;
				case "ProspectCustomer":
					this.ProspectCustomer.Add((ProspectCustomerEntity)entity);
					break;
				case "Prospects":
					this.Prospects.Add((ProspectsEntity)entity);
					break;
				case "RapsUpload":
					this.RapsUpload.Add((RapsUploadEntity)entity);
					break;
				case "Referral":
					this.Referral.Add((ReferralEntity)entity);
					break;
				case "RefundRequest_":
					this.RefundRequest_.Add((RefundRequestEntity)entity);
					break;
				case "RefundRequest":
					this.RefundRequest.Add((RefundRequestEntity)entity);
					break;
				case "RequiredTest":
					this.RequiredTest.Add((RequiredTestEntity)entity);
					break;
				case "SalesRepPodAssigments":
					this.SalesRepPodAssigments.Add((SalesRepPodAssigmentsEntity)entity);
					break;
				case "ScheduleTemplate_":
					this.ScheduleTemplate_.Add((ScheduleTemplateEntity)entity);
					break;
				case "ScheduleTemplate":
					this.ScheduleTemplate.Add((ScheduleTemplateEntity)entity);
					break;
				case "Seminars":
					this.Seminars.Add((SeminarsEntity)entity);
					break;
				case "ShippingDetail_":
					this.ShippingDetail_.Add((ShippingDetailEntity)entity);
					break;
				case "ShippingDetail":
					this.ShippingDetail.Add((ShippingDetailEntity)entity);
					break;
				case "SourceCodeChangeLog":
					this.SourceCodeChangeLog.Add((SourceCodeChangeLogEntity)entity);
					break;
				case "StaffEventScheduleUpload":
					this.StaffEventScheduleUpload.Add((StaffEventScheduleUploadEntity)entity);
					break;
				case "SurveyAnswer_":
					this.SurveyAnswer_.Add((SurveyAnswerEntity)entity);
					break;
				case "SurveyAnswer":
					this.SurveyAnswer.Add((SurveyAnswerEntity)entity);
					break;
				case "SurveyTemplate_":
					this.SurveyTemplate_.Add((SurveyTemplateEntity)entity);
					break;
				case "SurveyTemplate":
					this.SurveyTemplate.Add((SurveyTemplateEntity)entity);
					break;
				case "SuspectConditionUpload":
					this.SuspectConditionUpload.Add((SuspectConditionUploadEntity)entity);
					break;
				case "SystemGenertedCallQueueCriteria__":
					this.SystemGenertedCallQueueCriteria__.Add((SystemGeneratedCallQueueCriteriaEntity)entity);
					break;
				case "SystemGenertedCallQueueCriteria_":
					this.SystemGenertedCallQueueCriteria_.Add((SystemGeneratedCallQueueCriteriaEntity)entity);
					break;
				case "SystemGenertedCallQueueCriteria":
					this.SystemGenertedCallQueueCriteria.Add((SystemGeneratedCallQueueCriteriaEntity)entity);
					break;
				case "TaskDetails__":
					this.TaskDetails__.Add((TaskDetailsEntity)entity);
					break;
				case "TaskDetails_":
					this.TaskDetails_.Add((TaskDetailsEntity)entity);
					break;
				case "TaskDetails":
					this.TaskDetails.Add((TaskDetailsEntity)entity);
					break;
				case "Territory":
					this.Territory.Add((TerritoryEntity)entity);
					break;
				case "TestHcpcsCode_":
					this.TestHcpcsCode_.Add((TestHcpcsCodeEntity)entity);
					break;
				case "TestHcpcsCode":
					this.TestHcpcsCode.Add((TestHcpcsCodeEntity)entity);
					break;
				case "TestNotPerformed_":
					this.TestNotPerformed_.Add((TestNotPerformedEntity)entity);
					break;
				case "TestNotPerformed":
					this.TestNotPerformed.Add((TestNotPerformedEntity)entity);
					break;
				case "TestNotPerformedReason":
					this.TestNotPerformedReason.Add((TestNotPerformedReasonEntity)entity);
					break;
				case "TestPerformedExternally_":
					this.TestPerformedExternally_.Add((TestPerformedExternallyEntity)entity);
					break;
				case "TestPerformedExternally":
					this.TestPerformedExternally.Add((TestPerformedExternallyEntity)entity);
					break;
				case "UncontactedCustomerCallQueue":
					this.UncontactedCustomerCallQueue.Add((UncontactedCustomerCallQueueEntity)entity);
					break;
				case "UploadZipInfo":
					this.UploadZipInfo.Add((UploadZipInfoEntity)entity);
					break;
				case "User__":
					this.User__.Add((UserEntity)entity);
					break;
				case "User_":
					this.User_.Add((UserEntity)entity);
					break;
				case "AccountCollectionViaFillEventCallQueue":
					this.AccountCollectionViaFillEventCallQueue.IsReadOnly = false;
					this.AccountCollectionViaFillEventCallQueue.Add((AccountEntity)entity);
					this.AccountCollectionViaFillEventCallQueue.IsReadOnly = true;
					break;
				case "AccountCollectionViaMailRoundCallQueue":
					this.AccountCollectionViaMailRoundCallQueue.IsReadOnly = false;
					this.AccountCollectionViaMailRoundCallQueue.Add((AccountEntity)entity);
					this.AccountCollectionViaMailRoundCallQueue.IsReadOnly = true;
					break;
				case "AccountCollectionViaEligibilityUpload":
					this.AccountCollectionViaEligibilityUpload.IsReadOnly = false;
					this.AccountCollectionViaEligibilityUpload.Add((AccountEntity)entity);
					this.AccountCollectionViaEligibilityUpload.IsReadOnly = true;
					break;
				case "AccountCollectionViaCorporateUpload":
					this.AccountCollectionViaCorporateUpload.IsReadOnly = false;
					this.AccountCollectionViaCorporateUpload.Add((AccountEntity)entity);
					this.AccountCollectionViaCorporateUpload.IsReadOnly = true;
					break;
				case "AccountCollectionViaHealthPlanCallQueueCriteria":
					this.AccountCollectionViaHealthPlanCallQueueCriteria.IsReadOnly = false;
					this.AccountCollectionViaHealthPlanCallQueueCriteria.Add((AccountEntity)entity);
					this.AccountCollectionViaHealthPlanCallQueueCriteria.IsReadOnly = true;
					break;
				case "AccountCollectionViaCallQueueCustomer_":
					this.AccountCollectionViaCallQueueCustomer_.IsReadOnly = false;
					this.AccountCollectionViaCallQueueCustomer_.Add((AccountEntity)entity);
					this.AccountCollectionViaCallQueueCustomer_.IsReadOnly = true;
					break;
				case "AccountCollectionViaCallQueueCustomer":
					this.AccountCollectionViaCallQueueCustomer.IsReadOnly = false;
					this.AccountCollectionViaCallQueueCustomer.Add((AccountEntity)entity);
					this.AccountCollectionViaCallQueueCustomer.IsReadOnly = true;
					break;
				case "AccountCollectionViaCallQueueCustomer__":
					this.AccountCollectionViaCallQueueCustomer__.IsReadOnly = false;
					this.AccountCollectionViaCallQueueCustomer__.Add((AccountEntity)entity);
					this.AccountCollectionViaCallQueueCustomer__.IsReadOnly = true;
					break;
				case "AccountCollectionViaHealthPlanRevenue":
					this.AccountCollectionViaHealthPlanRevenue.IsReadOnly = false;
					this.AccountCollectionViaHealthPlanRevenue.Add((AccountEntity)entity);
					this.AccountCollectionViaHealthPlanRevenue.IsReadOnly = true;
					break;
				case "AccountCollectionViaHealthPlanRevenue_":
					this.AccountCollectionViaHealthPlanRevenue_.IsReadOnly = false;
					this.AccountCollectionViaHealthPlanRevenue_.Add((AccountEntity)entity);
					this.AccountCollectionViaHealthPlanRevenue_.IsReadOnly = true;
					break;
				case "AccountCollectionViaCorporateTag_":
					this.AccountCollectionViaCorporateTag_.IsReadOnly = false;
					this.AccountCollectionViaCorporateTag_.Add((AccountEntity)entity);
					this.AccountCollectionViaCorporateTag_.IsReadOnly = true;
					break;
				case "AccountCollectionViaLanguageBarrierCallQueue":
					this.AccountCollectionViaLanguageBarrierCallQueue.IsReadOnly = false;
					this.AccountCollectionViaLanguageBarrierCallQueue.Add((AccountEntity)entity);
					this.AccountCollectionViaLanguageBarrierCallQueue.IsReadOnly = true;
					break;
				case "AccountCollectionViaEventNote":
					this.AccountCollectionViaEventNote.IsReadOnly = false;
					this.AccountCollectionViaEventNote.Add((AccountEntity)entity);
					this.AccountCollectionViaEventNote.IsReadOnly = true;
					break;
				case "AccountCollectionViaCampaign":
					this.AccountCollectionViaCampaign.IsReadOnly = false;
					this.AccountCollectionViaCampaign.Add((AccountEntity)entity);
					this.AccountCollectionViaCampaign.IsReadOnly = true;
					break;
				case "AccountCollectionViaEventNote_":
					this.AccountCollectionViaEventNote_.IsReadOnly = false;
					this.AccountCollectionViaEventNote_.Add((AccountEntity)entity);
					this.AccountCollectionViaEventNote_.IsReadOnly = true;
					break;
				case "AccountCollectionViaCampaign_":
					this.AccountCollectionViaCampaign_.IsReadOnly = false;
					this.AccountCollectionViaCampaign_.Add((AccountEntity)entity);
					this.AccountCollectionViaCampaign_.IsReadOnly = true;
					break;
				case "AccountCollectionViaHealthPlanCallQueueCriteria_":
					this.AccountCollectionViaHealthPlanCallQueueCriteria_.IsReadOnly = false;
					this.AccountCollectionViaHealthPlanCallQueueCriteria_.Add((AccountEntity)entity);
					this.AccountCollectionViaHealthPlanCallQueueCriteria_.IsReadOnly = true;
					break;
				case "AccountCollectionViaCorporateTag":
					this.AccountCollectionViaCorporateTag.IsReadOnly = false;
					this.AccountCollectionViaCorporateTag.Add((AccountEntity)entity);
					this.AccountCollectionViaCorporateTag.IsReadOnly = true;
					break;
				case "AccountCollectionViaCallQueueCustomTag":
					this.AccountCollectionViaCallQueueCustomTag.IsReadOnly = false;
					this.AccountCollectionViaCallQueueCustomTag.Add((AccountEntity)entity);
					this.AccountCollectionViaCallQueueCustomTag.IsReadOnly = true;
					break;
				case "AccountCollectionViaCalls":
					this.AccountCollectionViaCalls.IsReadOnly = false;
					this.AccountCollectionViaCalls.Add((AccountEntity)entity);
					this.AccountCollectionViaCalls.IsReadOnly = true;
					break;
				case "AccountCollectionViaCallRoundCallQueue":
					this.AccountCollectionViaCallRoundCallQueue.IsReadOnly = false;
					this.AccountCollectionViaCallRoundCallQueue.Add((AccountEntity)entity);
					this.AccountCollectionViaCallRoundCallQueue.IsReadOnly = true;
					break;
				case "AccountCollectionViaAccountHraChatQuestionnaire_":
					this.AccountCollectionViaAccountHraChatQuestionnaire_.IsReadOnly = false;
					this.AccountCollectionViaAccountHraChatQuestionnaire_.Add((AccountEntity)entity);
					this.AccountCollectionViaAccountHraChatQuestionnaire_.IsReadOnly = true;
					break;
				case "AccountCollectionViaAccountHraChatQuestionnaire":
					this.AccountCollectionViaAccountHraChatQuestionnaire.IsReadOnly = false;
					this.AccountCollectionViaAccountHraChatQuestionnaire.Add((AccountEntity)entity);
					this.AccountCollectionViaAccountHraChatQuestionnaire.IsReadOnly = true;
					break;
				case "AccountCollectionViaUncontactedCustomerCallQueue":
					this.AccountCollectionViaUncontactedCustomerCallQueue.IsReadOnly = false;
					this.AccountCollectionViaUncontactedCustomerCallQueue.Add((AccountEntity)entity);
					this.AccountCollectionViaUncontactedCustomerCallQueue.IsReadOnly = true;
					break;
				case "AccountCollectionViaCustomEventNotification":
					this.AccountCollectionViaCustomEventNotification.IsReadOnly = false;
					this.AccountCollectionViaCustomEventNotification.Add((AccountEntity)entity);
					this.AccountCollectionViaCustomEventNotification.IsReadOnly = true;
					break;
				case "AccountCollectionViaNoShowCallQueue":
					this.AccountCollectionViaNoShowCallQueue.IsReadOnly = false;
					this.AccountCollectionViaNoShowCallQueue.Add((AccountEntity)entity);
					this.AccountCollectionViaNoShowCallQueue.IsReadOnly = true;
					break;
				case "AccountCollectionViaAccountCallCenterOrganization_":
					this.AccountCollectionViaAccountCallCenterOrganization_.IsReadOnly = false;
					this.AccountCollectionViaAccountCallCenterOrganization_.Add((AccountEntity)entity);
					this.AccountCollectionViaAccountCallCenterOrganization_.IsReadOnly = true;
					break;
				case "AccountCollectionViaAccountCallCenterOrganization":
					this.AccountCollectionViaAccountCallCenterOrganization.IsReadOnly = false;
					this.AccountCollectionViaAccountCallCenterOrganization.Add((AccountEntity)entity);
					this.AccountCollectionViaAccountCallCenterOrganization.IsReadOnly = true;
					break;
				case "ActivityCollectionViaOrgRoleUserActivity":
					this.ActivityCollectionViaOrgRoleUserActivity.IsReadOnly = false;
					this.ActivityCollectionViaOrgRoleUserActivity.Add((ActivityEntity)entity);
					this.ActivityCollectionViaOrgRoleUserActivity.IsReadOnly = true;
					break;
				case "ActivityTypeCollectionViaCallQueueCustomer":
					this.ActivityTypeCollectionViaCallQueueCustomer.IsReadOnly = false;
					this.ActivityTypeCollectionViaCallQueueCustomer.Add((ActivityTypeEntity)entity);
					this.ActivityTypeCollectionViaCallQueueCustomer.IsReadOnly = true;
					break;
				case "ActivityTypeCollectionViaCallQueueCustomer__":
					this.ActivityTypeCollectionViaCallQueueCustomer__.IsReadOnly = false;
					this.ActivityTypeCollectionViaCallQueueCustomer__.Add((ActivityTypeEntity)entity);
					this.ActivityTypeCollectionViaCallQueueCustomer__.IsReadOnly = true;
					break;
				case "ActivityTypeCollectionViaCallQueueCustomer_":
					this.ActivityTypeCollectionViaCallQueueCustomer_.IsReadOnly = false;
					this.ActivityTypeCollectionViaCallQueueCustomer_.Add((ActivityTypeEntity)entity);
					this.ActivityTypeCollectionViaCallQueueCustomer_.IsReadOnly = true;
					break;
				case "AddressCollectionViaCustomerPrimaryCarePhysician_":
					this.AddressCollectionViaCustomerPrimaryCarePhysician_.IsReadOnly = false;
					this.AddressCollectionViaCustomerPrimaryCarePhysician_.Add((AddressEntity)entity);
					this.AddressCollectionViaCustomerPrimaryCarePhysician_.IsReadOnly = true;
					break;
				case "AddressCollectionViaProspects":
					this.AddressCollectionViaProspects.IsReadOnly = false;
					this.AddressCollectionViaProspects.Add((AddressEntity)entity);
					this.AddressCollectionViaProspects.IsReadOnly = true;
					break;
				case "AddressCollectionViaCustomerPrimaryCarePhysician___":
					this.AddressCollectionViaCustomerPrimaryCarePhysician___.IsReadOnly = false;
					this.AddressCollectionViaCustomerPrimaryCarePhysician___.Add((AddressEntity)entity);
					this.AddressCollectionViaCustomerPrimaryCarePhysician___.IsReadOnly = true;
					break;
				case "AddressCollectionViaCustomerPrimaryCarePhysician____":
					this.AddressCollectionViaCustomerPrimaryCarePhysician____.IsReadOnly = false;
					this.AddressCollectionViaCustomerPrimaryCarePhysician____.Add((AddressEntity)entity);
					this.AddressCollectionViaCustomerPrimaryCarePhysician____.IsReadOnly = true;
					break;
				case "AddressCollectionViaUser":
					this.AddressCollectionViaUser.IsReadOnly = false;
					this.AddressCollectionViaUser.Add((AddressEntity)entity);
					this.AddressCollectionViaUser.IsReadOnly = true;
					break;
				case "AddressCollectionViaUser_":
					this.AddressCollectionViaUser_.IsReadOnly = false;
					this.AddressCollectionViaUser_.Add((AddressEntity)entity);
					this.AddressCollectionViaUser_.IsReadOnly = true;
					break;
				case "AddressCollectionViaShippingDetail":
					this.AddressCollectionViaShippingDetail.IsReadOnly = false;
					this.AddressCollectionViaShippingDetail.Add((AddressEntity)entity);
					this.AddressCollectionViaShippingDetail.IsReadOnly = true;
					break;
				case "AddressCollectionViaHostPayment":
					this.AddressCollectionViaHostPayment.IsReadOnly = false;
					this.AddressCollectionViaHostPayment.Add((AddressEntity)entity);
					this.AddressCollectionViaHostPayment.IsReadOnly = true;
					break;
				case "AddressCollectionViaShippingDetail_":
					this.AddressCollectionViaShippingDetail_.IsReadOnly = false;
					this.AddressCollectionViaShippingDetail_.Add((AddressEntity)entity);
					this.AddressCollectionViaShippingDetail_.IsReadOnly = true;
					break;
				case "AddressCollectionViaCustomerPrimaryCarePhysician":
					this.AddressCollectionViaCustomerPrimaryCarePhysician.IsReadOnly = false;
					this.AddressCollectionViaCustomerPrimaryCarePhysician.Add((AddressEntity)entity);
					this.AddressCollectionViaCustomerPrimaryCarePhysician.IsReadOnly = true;
					break;
				case "AddressCollectionViaCustomerPrimaryCarePhysician__":
					this.AddressCollectionViaCustomerPrimaryCarePhysician__.IsReadOnly = false;
					this.AddressCollectionViaCustomerPrimaryCarePhysician__.Add((AddressEntity)entity);
					this.AddressCollectionViaCustomerPrimaryCarePhysician__.IsReadOnly = true;
					break;
				case "AddressCollectionViaCustomerPrimaryCarePhysician_____":
					this.AddressCollectionViaCustomerPrimaryCarePhysician_____.IsReadOnly = false;
					this.AddressCollectionViaCustomerPrimaryCarePhysician_____.Add((AddressEntity)entity);
					this.AddressCollectionViaCustomerPrimaryCarePhysician_____.IsReadOnly = true;
					break;
				case "AfadvertiserCollectionViaAfcampaign":
					this.AfadvertiserCollectionViaAfcampaign.IsReadOnly = false;
					this.AfadvertiserCollectionViaAfcampaign.Add((AfadvertiserEntity)entity);
					this.AfadvertiserCollectionViaAfcampaign.IsReadOnly = true;
					break;
				case "AfadvertiserCollectionViaAfcampaign_":
					this.AfadvertiserCollectionViaAfcampaign_.IsReadOnly = false;
					this.AfadvertiserCollectionViaAfcampaign_.Add((AfadvertiserEntity)entity);
					this.AfadvertiserCollectionViaAfcampaign_.IsReadOnly = true;
					break;
				case "AfaffiliateCampaignCollectionViaEventCustomers":
					this.AfaffiliateCampaignCollectionViaEventCustomers.IsReadOnly = false;
					this.AfaffiliateCampaignCollectionViaEventCustomers.Add((AfaffiliateCampaignEntity)entity);
					this.AfaffiliateCampaignCollectionViaEventCustomers.IsReadOnly = true;
					break;
				case "AfaffiliateCampaignCollectionViaEventCustomers_":
					this.AfaffiliateCampaignCollectionViaEventCustomers_.IsReadOnly = false;
					this.AfaffiliateCampaignCollectionViaEventCustomers_.Add((AfaffiliateCampaignEntity)entity);
					this.AfaffiliateCampaignCollectionViaEventCustomers_.IsReadOnly = true;
					break;
				case "AfaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer":
					this.AfaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer.IsReadOnly = false;
					this.AfaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer.Add((AfaffiliateCampaignMarketingMaterialEntity)entity);
					this.AfaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer.IsReadOnly = true;
					break;
				case "CallCenterTeamCollectionViaCallCenterAgentTeam":
					this.CallCenterTeamCollectionViaCallCenterAgentTeam.IsReadOnly = false;
					this.CallCenterTeamCollectionViaCallCenterAgentTeam.Add((CallCenterTeamEntity)entity);
					this.CallCenterTeamCollectionViaCallCenterAgentTeam.IsReadOnly = true;
					break;
				case "CallCenterTeamCollectionViaCallCenterAgentTeamLog":
					this.CallCenterTeamCollectionViaCallCenterAgentTeamLog.IsReadOnly = false;
					this.CallCenterTeamCollectionViaCallCenterAgentTeamLog.Add((CallCenterTeamEntity)entity);
					this.CallCenterTeamCollectionViaCallCenterAgentTeamLog.IsReadOnly = true;
					break;
				case "CallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_":
					this.CallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_.IsReadOnly = false;
					this.CallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_.Add((CallCenterTeamEntity)entity);
					this.CallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_.IsReadOnly = true;
					break;
				case "CallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment":
					this.CallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment.IsReadOnly = false;
					this.CallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment.Add((CallCenterTeamEntity)entity);
					this.CallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment.IsReadOnly = true;
					break;
				case "CallCenterTeamCollectionViaCallCenterAgentTeamLog_":
					this.CallCenterTeamCollectionViaCallCenterAgentTeamLog_.IsReadOnly = false;
					this.CallCenterTeamCollectionViaCallCenterAgentTeamLog_.Add((CallCenterTeamEntity)entity);
					this.CallCenterTeamCollectionViaCallCenterAgentTeamLog_.IsReadOnly = true;
					break;
				case "CallCenterTeamCollectionViaCallCenterAgentTeamLog__":
					this.CallCenterTeamCollectionViaCallCenterAgentTeamLog__.IsReadOnly = false;
					this.CallCenterTeamCollectionViaCallCenterAgentTeamLog__.Add((CallCenterTeamEntity)entity);
					this.CallCenterTeamCollectionViaCallCenterAgentTeamLog__.IsReadOnly = true;
					break;
				case "CallQueueCollectionViaCallQueueCustomer_":
					this.CallQueueCollectionViaCallQueueCustomer_.IsReadOnly = false;
					this.CallQueueCollectionViaCallQueueCustomer_.Add((CallQueueEntity)entity);
					this.CallQueueCollectionViaCallQueueCustomer_.IsReadOnly = true;
					break;
				case "CallQueueCollectionViaHealthPlanCallQueueCriteria__":
					this.CallQueueCollectionViaHealthPlanCallQueueCriteria__.IsReadOnly = false;
					this.CallQueueCollectionViaHealthPlanCallQueueCriteria__.Add((CallQueueEntity)entity);
					this.CallQueueCollectionViaHealthPlanCallQueueCriteria__.IsReadOnly = true;
					break;
				case "CallQueueCollectionViaCallQueueCustomer":
					this.CallQueueCollectionViaCallQueueCustomer.IsReadOnly = false;
					this.CallQueueCollectionViaCallQueueCustomer.Add((CallQueueEntity)entity);
					this.CallQueueCollectionViaCallQueueCustomer.IsReadOnly = true;
					break;
				case "CallQueueCollectionViaCalls":
					this.CallQueueCollectionViaCalls.IsReadOnly = false;
					this.CallQueueCollectionViaCalls.Add((CallQueueEntity)entity);
					this.CallQueueCollectionViaCalls.IsReadOnly = true;
					break;
				case "CallQueueCollectionViaCallQueueAssignment":
					this.CallQueueCollectionViaCallQueueAssignment.IsReadOnly = false;
					this.CallQueueCollectionViaCallQueueAssignment.Add((CallQueueEntity)entity);
					this.CallQueueCollectionViaCallQueueAssignment.IsReadOnly = true;
					break;
				case "CallQueueCollectionViaSystemGenertedCallQueueCriteria__":
					this.CallQueueCollectionViaSystemGenertedCallQueueCriteria__.IsReadOnly = false;
					this.CallQueueCollectionViaSystemGenertedCallQueueCriteria__.Add((CallQueueEntity)entity);
					this.CallQueueCollectionViaSystemGenertedCallQueueCriteria__.IsReadOnly = true;
					break;
				case "CallQueueCollectionViaSystemGenertedCallQueueCriteria_":
					this.CallQueueCollectionViaSystemGenertedCallQueueCriteria_.IsReadOnly = false;
					this.CallQueueCollectionViaSystemGenertedCallQueueCriteria_.Add((CallQueueEntity)entity);
					this.CallQueueCollectionViaSystemGenertedCallQueueCriteria_.IsReadOnly = true;
					break;
				case "CallQueueCollectionViaCallQueueCustomer__":
					this.CallQueueCollectionViaCallQueueCustomer__.IsReadOnly = false;
					this.CallQueueCollectionViaCallQueueCustomer__.Add((CallQueueEntity)entity);
					this.CallQueueCollectionViaCallQueueCustomer__.IsReadOnly = true;
					break;
				case "CallQueueCollectionViaHealthPlanCallQueueCriteria_":
					this.CallQueueCollectionViaHealthPlanCallQueueCriteria_.IsReadOnly = false;
					this.CallQueueCollectionViaHealthPlanCallQueueCriteria_.Add((CallQueueEntity)entity);
					this.CallQueueCollectionViaHealthPlanCallQueueCriteria_.IsReadOnly = true;
					break;
				case "CallQueueCollectionViaSystemGenertedCallQueueCriteria":
					this.CallQueueCollectionViaSystemGenertedCallQueueCriteria.IsReadOnly = false;
					this.CallQueueCollectionViaSystemGenertedCallQueueCriteria.Add((CallQueueEntity)entity);
					this.CallQueueCollectionViaSystemGenertedCallQueueCriteria.IsReadOnly = true;
					break;
				case "CallQueueCriteriaCollectionViaCallQueueCustomer":
					this.CallQueueCriteriaCollectionViaCallQueueCustomer.IsReadOnly = false;
					this.CallQueueCriteriaCollectionViaCallQueueCustomer.Add((CallQueueCriteriaEntity)entity);
					this.CallQueueCriteriaCollectionViaCallQueueCustomer.IsReadOnly = true;
					break;
				case "CallQueueCriteriaCollectionViaCallQueueCustomer__":
					this.CallQueueCriteriaCollectionViaCallQueueCustomer__.IsReadOnly = false;
					this.CallQueueCriteriaCollectionViaCallQueueCustomer__.Add((CallQueueCriteriaEntity)entity);
					this.CallQueueCriteriaCollectionViaCallQueueCustomer__.IsReadOnly = true;
					break;
				case "CallQueueCriteriaCollectionViaCallQueueCustomer_":
					this.CallQueueCriteriaCollectionViaCallQueueCustomer_.IsReadOnly = false;
					this.CallQueueCriteriaCollectionViaCallQueueCustomer_.Add((CallQueueCriteriaEntity)entity);
					this.CallQueueCriteriaCollectionViaCallQueueCustomer_.IsReadOnly = true;
					break;
				case "CallQueueCustomerCollectionViaCustomerCallQueueCallAttempt":
					this.CallQueueCustomerCollectionViaCustomerCallQueueCallAttempt.IsReadOnly = false;
					this.CallQueueCustomerCollectionViaCustomerCallQueueCallAttempt.Add((CallQueueCustomerEntity)entity);
					this.CallQueueCustomerCollectionViaCustomerCallQueueCallAttempt.IsReadOnly = true;
					break;
				case "CallsCollectionViaCustomerCallQueueCallAttempt":
					this.CallsCollectionViaCustomerCallQueueCallAttempt.IsReadOnly = false;
					this.CallsCollectionViaCustomerCallQueueCallAttempt.Add((CallsEntity)entity);
					this.CallsCollectionViaCustomerCallQueueCallAttempt.IsReadOnly = true;
					break;
				case "CallsCollectionViaPreAssessmentCustomerCallQueueCallAttempt":
					this.CallsCollectionViaPreAssessmentCustomerCallQueueCallAttempt.IsReadOnly = false;
					this.CallsCollectionViaPreAssessmentCustomerCallQueueCallAttempt.Add((CallsEntity)entity);
					this.CallsCollectionViaPreAssessmentCustomerCallQueueCallAttempt.IsReadOnly = true;
					break;
				case "CallUploadCollectionViaDirectMail":
					this.CallUploadCollectionViaDirectMail.IsReadOnly = false;
					this.CallUploadCollectionViaDirectMail.Add((CallUploadEntity)entity);
					this.CallUploadCollectionViaDirectMail.IsReadOnly = true;
					break;
				case "CampaignCollectionViaCallQueueCustomer__":
					this.CampaignCollectionViaCallQueueCustomer__.IsReadOnly = false;
					this.CampaignCollectionViaCallQueueCustomer__.Add((CampaignEntity)entity);
					this.CampaignCollectionViaCallQueueCustomer__.IsReadOnly = true;
					break;
				case "CampaignCollectionViaCampaignAssignment":
					this.CampaignCollectionViaCampaignAssignment.IsReadOnly = false;
					this.CampaignCollectionViaCampaignAssignment.Add((CampaignEntity)entity);
					this.CampaignCollectionViaCampaignAssignment.IsReadOnly = true;
					break;
				case "CampaignCollectionViaCallQueueCustomer":
					this.CampaignCollectionViaCallQueueCustomer.IsReadOnly = false;
					this.CampaignCollectionViaCallQueueCustomer.Add((CampaignEntity)entity);
					this.CampaignCollectionViaCallQueueCustomer.IsReadOnly = true;
					break;
				case "CampaignCollectionViaCampaignActivity_":
					this.CampaignCollectionViaCampaignActivity_.IsReadOnly = false;
					this.CampaignCollectionViaCampaignActivity_.Add((CampaignEntity)entity);
					this.CampaignCollectionViaCampaignActivity_.IsReadOnly = true;
					break;
				case "CampaignCollectionViaHealthPlanCallQueueCriteria_":
					this.CampaignCollectionViaHealthPlanCallQueueCriteria_.IsReadOnly = false;
					this.CampaignCollectionViaHealthPlanCallQueueCriteria_.Add((CampaignEntity)entity);
					this.CampaignCollectionViaHealthPlanCallQueueCriteria_.IsReadOnly = true;
					break;
				case "CampaignCollectionViaCampaignActivity":
					this.CampaignCollectionViaCampaignActivity.IsReadOnly = false;
					this.CampaignCollectionViaCampaignActivity.Add((CampaignEntity)entity);
					this.CampaignCollectionViaCampaignActivity.IsReadOnly = true;
					break;
				case "CampaignCollectionViaCalls":
					this.CampaignCollectionViaCalls.IsReadOnly = false;
					this.CampaignCollectionViaCalls.Add((CampaignEntity)entity);
					this.CampaignCollectionViaCalls.IsReadOnly = true;
					break;
				case "CampaignCollectionViaEventCustomers_":
					this.CampaignCollectionViaEventCustomers_.IsReadOnly = false;
					this.CampaignCollectionViaEventCustomers_.Add((CampaignEntity)entity);
					this.CampaignCollectionViaEventCustomers_.IsReadOnly = true;
					break;
				case "CampaignCollectionViaHealthPlanCallQueueCriteria":
					this.CampaignCollectionViaHealthPlanCallQueueCriteria.IsReadOnly = false;
					this.CampaignCollectionViaHealthPlanCallQueueCriteria.Add((CampaignEntity)entity);
					this.CampaignCollectionViaHealthPlanCallQueueCriteria.IsReadOnly = true;
					break;
				case "CampaignCollectionViaDirectMail":
					this.CampaignCollectionViaDirectMail.IsReadOnly = false;
					this.CampaignCollectionViaDirectMail.Add((CampaignEntity)entity);
					this.CampaignCollectionViaDirectMail.IsReadOnly = true;
					break;
				case "CampaignCollectionViaCallQueueCustomer_":
					this.CampaignCollectionViaCallQueueCustomer_.IsReadOnly = false;
					this.CampaignCollectionViaCallQueueCustomer_.Add((CampaignEntity)entity);
					this.CampaignCollectionViaCallQueueCustomer_.IsReadOnly = true;
					break;
				case "CampaignCollectionViaEventCustomers":
					this.CampaignCollectionViaEventCustomers.IsReadOnly = false;
					this.CampaignCollectionViaEventCustomers.Add((CampaignEntity)entity);
					this.CampaignCollectionViaEventCustomers.IsReadOnly = true;
					break;
				case "CampaignActivityCollectionViaCampaignActivityAssignment":
					this.CampaignActivityCollectionViaCampaignActivityAssignment.IsReadOnly = false;
					this.CampaignActivityCollectionViaCampaignActivityAssignment.Add((CampaignActivityEntity)entity);
					this.CampaignActivityCollectionViaCampaignActivityAssignment.IsReadOnly = true;
					break;
				case "ChaperoneQuestionCollectionViaChaperoneAnswer":
					this.ChaperoneQuestionCollectionViaChaperoneAnswer.IsReadOnly = false;
					this.ChaperoneQuestionCollectionViaChaperoneAnswer.Add((ChaperoneQuestionEntity)entity);
					this.ChaperoneQuestionCollectionViaChaperoneAnswer.IsReadOnly = true;
					break;
				case "ChaperoneQuestionCollectionViaChaperoneAnswer_":
					this.ChaperoneQuestionCollectionViaChaperoneAnswer_.IsReadOnly = false;
					this.ChaperoneQuestionCollectionViaChaperoneAnswer_.Add((ChaperoneQuestionEntity)entity);
					this.ChaperoneQuestionCollectionViaChaperoneAnswer_.IsReadOnly = true;
					break;
				case "CheckListQuestionCollectionViaCheckListAnswer_":
					this.CheckListQuestionCollectionViaCheckListAnswer_.IsReadOnly = false;
					this.CheckListQuestionCollectionViaCheckListAnswer_.Add((CheckListQuestionEntity)entity);
					this.CheckListQuestionCollectionViaCheckListAnswer_.IsReadOnly = true;
					break;
				case "CheckListQuestionCollectionViaCheckListAnswer":
					this.CheckListQuestionCollectionViaCheckListAnswer.IsReadOnly = false;
					this.CheckListQuestionCollectionViaCheckListAnswer.Add((CheckListQuestionEntity)entity);
					this.CheckListQuestionCollectionViaCheckListAnswer.IsReadOnly = true;
					break;
				case "CheckListQuestionCollectionViaExitInterviewSignature":
					this.CheckListQuestionCollectionViaExitInterviewSignature.IsReadOnly = false;
					this.CheckListQuestionCollectionViaExitInterviewSignature.Add((CheckListQuestionEntity)entity);
					this.CheckListQuestionCollectionViaExitInterviewSignature.IsReadOnly = true;
					break;
				case "CityCollectionViaAddress":
					this.CityCollectionViaAddress.IsReadOnly = false;
					this.CityCollectionViaAddress.Add((CityEntity)entity);
					this.CityCollectionViaAddress.IsReadOnly = true;
					break;
				case "CommunicationModeCollectionViaEvents____":
					this.CommunicationModeCollectionViaEvents____.IsReadOnly = false;
					this.CommunicationModeCollectionViaEvents____.Add((CommunicationModeEntity)entity);
					this.CommunicationModeCollectionViaEvents____.IsReadOnly = true;
					break;
				case "CommunicationModeCollectionViaEvents":
					this.CommunicationModeCollectionViaEvents.IsReadOnly = false;
					this.CommunicationModeCollectionViaEvents.Add((CommunicationModeEntity)entity);
					this.CommunicationModeCollectionViaEvents.IsReadOnly = true;
					break;
				case "CommunicationModeCollectionViaEvents___":
					this.CommunicationModeCollectionViaEvents___.IsReadOnly = false;
					this.CommunicationModeCollectionViaEvents___.Add((CommunicationModeEntity)entity);
					this.CommunicationModeCollectionViaEvents___.IsReadOnly = true;
					break;
				case "CommunicationModeCollectionViaEvents__":
					this.CommunicationModeCollectionViaEvents__.IsReadOnly = false;
					this.CommunicationModeCollectionViaEvents__.Add((CommunicationModeEntity)entity);
					this.CommunicationModeCollectionViaEvents__.IsReadOnly = true;
					break;
				case "CommunicationModeCollectionViaEvents_":
					this.CommunicationModeCollectionViaEvents_.IsReadOnly = false;
					this.CommunicationModeCollectionViaEvents_.Add((CommunicationModeEntity)entity);
					this.CommunicationModeCollectionViaEvents_.IsReadOnly = true;
					break;
				case "ContactCallStatusCollectionViaContactCall":
					this.ContactCallStatusCollectionViaContactCall.IsReadOnly = false;
					this.ContactCallStatusCollectionViaContactCall.Add((ContactCallStatusEntity)entity);
					this.ContactCallStatusCollectionViaContactCall.IsReadOnly = true;
					break;
				case "ContactCallStatusCollectionViaContactCall_":
					this.ContactCallStatusCollectionViaContactCall_.IsReadOnly = false;
					this.ContactCallStatusCollectionViaContactCall_.Add((ContactCallStatusEntity)entity);
					this.ContactCallStatusCollectionViaContactCall_.IsReadOnly = true;
					break;
				case "ContactCallStatusCollectionViaContactMeeting_":
					this.ContactCallStatusCollectionViaContactMeeting_.IsReadOnly = false;
					this.ContactCallStatusCollectionViaContactMeeting_.Add((ContactCallStatusEntity)entity);
					this.ContactCallStatusCollectionViaContactMeeting_.IsReadOnly = true;
					break;
				case "ContactCallStatusCollectionViaContactMeeting":
					this.ContactCallStatusCollectionViaContactMeeting.IsReadOnly = false;
					this.ContactCallStatusCollectionViaContactMeeting.Add((ContactCallStatusEntity)entity);
					this.ContactCallStatusCollectionViaContactMeeting.IsReadOnly = true;
					break;
				case "CountryCollectionViaAddress":
					this.CountryCollectionViaAddress.IsReadOnly = false;
					this.CountryCollectionViaAddress.Add((CountryEntity)entity);
					this.CountryCollectionViaAddress.IsReadOnly = true;
					break;
				case "CouponTypeCollectionViaCoupons_":
					this.CouponTypeCollectionViaCoupons_.IsReadOnly = false;
					this.CouponTypeCollectionViaCoupons_.Add((CouponTypeEntity)entity);
					this.CouponTypeCollectionViaCoupons_.IsReadOnly = true;
					break;
				case "CouponTypeCollectionViaCoupons":
					this.CouponTypeCollectionViaCoupons.IsReadOnly = false;
					this.CouponTypeCollectionViaCoupons.Add((CouponTypeEntity)entity);
					this.CouponTypeCollectionViaCoupons.IsReadOnly = true;
					break;
				case "CustomerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation":
					this.CustomerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation.IsReadOnly = false;
					this.CustomerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation.Add((CustomerEventScreeningTestsEntity)entity);
					this.CustomerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation.IsReadOnly = true;
					break;
				case "CustomerEventScreeningTestsCollectionViaTestPerformedExternally_":
					this.CustomerEventScreeningTestsCollectionViaTestPerformedExternally_.IsReadOnly = false;
					this.CustomerEventScreeningTestsCollectionViaTestPerformedExternally_.Add((CustomerEventScreeningTestsEntity)entity);
					this.CustomerEventScreeningTestsCollectionViaTestPerformedExternally_.IsReadOnly = true;
					break;
				case "CustomerEventScreeningTestsCollectionViaCustomerEventTestState":
					this.CustomerEventScreeningTestsCollectionViaCustomerEventTestState.IsReadOnly = false;
					this.CustomerEventScreeningTestsCollectionViaCustomerEventTestState.Add((CustomerEventScreeningTestsEntity)entity);
					this.CustomerEventScreeningTestsCollectionViaCustomerEventTestState.IsReadOnly = true;
					break;
				case "CustomerEventScreeningTestsCollectionViaCustomerEventTestState_":
					this.CustomerEventScreeningTestsCollectionViaCustomerEventTestState_.IsReadOnly = false;
					this.CustomerEventScreeningTestsCollectionViaCustomerEventTestState_.Add((CustomerEventScreeningTestsEntity)entity);
					this.CustomerEventScreeningTestsCollectionViaCustomerEventTestState_.IsReadOnly = true;
					break;
				case "CustomerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason":
					this.CustomerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason.IsReadOnly = false;
					this.CustomerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason.Add((CustomerEventScreeningTestsEntity)entity);
					this.CustomerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason.IsReadOnly = true;
					break;
				case "CustomerEventScreeningTestsCollectionViaCustomerEventTestState__":
					this.CustomerEventScreeningTestsCollectionViaCustomerEventTestState__.IsReadOnly = false;
					this.CustomerEventScreeningTestsCollectionViaCustomerEventTestState__.Add((CustomerEventScreeningTestsEntity)entity);
					this.CustomerEventScreeningTestsCollectionViaCustomerEventTestState__.IsReadOnly = true;
					break;
				case "CustomerEventScreeningTestsCollectionViaTestPerformedExternally":
					this.CustomerEventScreeningTestsCollectionViaTestPerformedExternally.IsReadOnly = false;
					this.CustomerEventScreeningTestsCollectionViaTestPerformedExternally.Add((CustomerEventScreeningTestsEntity)entity);
					this.CustomerEventScreeningTestsCollectionViaTestPerformedExternally.IsReadOnly = true;
					break;
				case "CustomerEventScreeningTestsCollectionViaCustomerEventReading":
					this.CustomerEventScreeningTestsCollectionViaCustomerEventReading.IsReadOnly = false;
					this.CustomerEventScreeningTestsCollectionViaCustomerEventReading.Add((CustomerEventScreeningTestsEntity)entity);
					this.CustomerEventScreeningTestsCollectionViaCustomerEventReading.IsReadOnly = true;
					break;
				case "CustomerEventScreeningTestsCollectionViaTestNotPerformed":
					this.CustomerEventScreeningTestsCollectionViaTestNotPerformed.IsReadOnly = false;
					this.CustomerEventScreeningTestsCollectionViaTestNotPerformed.Add((CustomerEventScreeningTestsEntity)entity);
					this.CustomerEventScreeningTestsCollectionViaTestNotPerformed.IsReadOnly = true;
					break;
				case "CustomerEventScreeningTestsCollectionViaTestNotPerformed_":
					this.CustomerEventScreeningTestsCollectionViaTestNotPerformed_.IsReadOnly = false;
					this.CustomerEventScreeningTestsCollectionViaTestNotPerformed_.Add((CustomerEventScreeningTestsEntity)entity);
					this.CustomerEventScreeningTestsCollectionViaTestNotPerformed_.IsReadOnly = true;
					break;
				case "CustomerHealthQuestionsCollectionViaCustomerHealthInfo":
					this.CustomerHealthQuestionsCollectionViaCustomerHealthInfo.IsReadOnly = false;
					this.CustomerHealthQuestionsCollectionViaCustomerHealthInfo.Add((CustomerHealthQuestionsEntity)entity);
					this.CustomerHealthQuestionsCollectionViaCustomerHealthInfo.IsReadOnly = true;
					break;
				case "CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_":
					this.CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_.IsReadOnly = false;
					this.CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_.Add((CustomerHealthQuestionsEntity)entity);
					this.CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_.IsReadOnly = true;
					break;
				case "CustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_":
					this.CustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_.IsReadOnly = false;
					this.CustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_.Add((CustomerHealthQuestionsEntity)entity);
					this.CustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_.IsReadOnly = true;
					break;
				case "CustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer":
					this.CustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer.IsReadOnly = false;
					this.CustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer.Add((CustomerHealthQuestionsEntity)entity);
					this.CustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer.IsReadOnly = true;
					break;
				case "CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__":
					this.CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__.IsReadOnly = false;
					this.CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__.Add((CustomerHealthQuestionsEntity)entity);
					this.CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__.IsReadOnly = true;
					break;
				case "CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___":
					this.CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___.IsReadOnly = false;
					this.CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___.Add((CustomerHealthQuestionsEntity)entity);
					this.CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___.IsReadOnly = true;
					break;
				case "CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria":
					this.CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria.IsReadOnly = false;
					this.CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria.Add((CustomerHealthQuestionsEntity)entity);
					this.CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria.IsReadOnly = true;
					break;
				case "CustomerHealthQuestionsCollectionViaCustomerHealthInfoArchive":
					this.CustomerHealthQuestionsCollectionViaCustomerHealthInfoArchive.IsReadOnly = false;
					this.CustomerHealthQuestionsCollectionViaCustomerHealthInfoArchive.Add((CustomerHealthQuestionsEntity)entity);
					this.CustomerHealthQuestionsCollectionViaCustomerHealthInfoArchive.IsReadOnly = true;
					break;
				case "CustomerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician":
					this.CustomerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician.IsReadOnly = false;
					this.CustomerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician.Add((CustomerPrimaryCarePhysicianEntity)entity);
					this.CustomerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaFillEventCallQueue":
					this.CustomerProfileCollectionViaFillEventCallQueue.IsReadOnly = false;
					this.CustomerProfileCollectionViaFillEventCallQueue.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaFillEventCallQueue.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaDisqualifiedTest_":
					this.CustomerProfileCollectionViaDisqualifiedTest_.IsReadOnly = false;
					this.CustomerProfileCollectionViaDisqualifiedTest_.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaDisqualifiedTest_.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaCustomerEligibility_":
					this.CustomerProfileCollectionViaCustomerEligibility_.IsReadOnly = false;
					this.CustomerProfileCollectionViaCustomerEligibility_.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaCustomerEligibility_.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaEventCustomerResult_____":
					this.CustomerProfileCollectionViaEventCustomerResult_____.IsReadOnly = false;
					this.CustomerProfileCollectionViaEventCustomerResult_____.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaEventCustomerResult_____.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaCustomerEligibility":
					this.CustomerProfileCollectionViaCustomerEligibility.IsReadOnly = false;
					this.CustomerProfileCollectionViaCustomerEligibility.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaCustomerEligibility.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaLanguageBarrierCallQueue":
					this.CustomerProfileCollectionViaLanguageBarrierCallQueue.IsReadOnly = false;
					this.CustomerProfileCollectionViaLanguageBarrierCallQueue.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaLanguageBarrierCallQueue.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaEventCustomerQuestionAnswer":
					this.CustomerProfileCollectionViaEventCustomerQuestionAnswer.IsReadOnly = false;
					this.CustomerProfileCollectionViaEventCustomerQuestionAnswer.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaEventCustomerQuestionAnswer.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaHospitalPartnerCustomer_":
					this.CustomerProfileCollectionViaHospitalPartnerCustomer_.IsReadOnly = false;
					this.CustomerProfileCollectionViaHospitalPartnerCustomer_.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaHospitalPartnerCustomer_.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaHospitalPartnerCustomer__":
					this.CustomerProfileCollectionViaHospitalPartnerCustomer__.IsReadOnly = false;
					this.CustomerProfileCollectionViaHospitalPartnerCustomer__.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaHospitalPartnerCustomer__.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaHospitalPartnerCustomer":
					this.CustomerProfileCollectionViaHospitalPartnerCustomer.IsReadOnly = false;
					this.CustomerProfileCollectionViaHospitalPartnerCustomer.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaHospitalPartnerCustomer.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaDisqualifiedTest":
					this.CustomerProfileCollectionViaDisqualifiedTest.IsReadOnly = false;
					this.CustomerProfileCollectionViaDisqualifiedTest.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaDisqualifiedTest.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaCustomerPrimaryCarePhysician_":
					this.CustomerProfileCollectionViaCustomerPrimaryCarePhysician_.IsReadOnly = false;
					this.CustomerProfileCollectionViaCustomerPrimaryCarePhysician_.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaCustomerPrimaryCarePhysician_.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaCustomerPrimaryCarePhysician__":
					this.CustomerProfileCollectionViaCustomerPrimaryCarePhysician__.IsReadOnly = false;
					this.CustomerProfileCollectionViaCustomerPrimaryCarePhysician__.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaCustomerPrimaryCarePhysician__.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaNoShowCallQueue":
					this.CustomerProfileCollectionViaNoShowCallQueue.IsReadOnly = false;
					this.CustomerProfileCollectionViaNoShowCallQueue.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaNoShowCallQueue.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaCustomerPrimaryCarePhysician":
					this.CustomerProfileCollectionViaCustomerPrimaryCarePhysician.IsReadOnly = false;
					this.CustomerProfileCollectionViaCustomerPrimaryCarePhysician.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaCustomerPrimaryCarePhysician.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaCallQueueCustomer":
					this.CustomerProfileCollectionViaCallQueueCustomer.IsReadOnly = false;
					this.CustomerProfileCollectionViaCallQueueCustomer.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaCallQueueCustomer.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaCustomerHealthInfo":
					this.CustomerProfileCollectionViaCustomerHealthInfo.IsReadOnly = false;
					this.CustomerProfileCollectionViaCustomerHealthInfo.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaCustomerHealthInfo.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaCallQueueCustomer__":
					this.CustomerProfileCollectionViaCallQueueCustomer__.IsReadOnly = false;
					this.CustomerProfileCollectionViaCallQueueCustomer__.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaCallQueueCustomer__.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaCallQueueCustomer_":
					this.CustomerProfileCollectionViaCallQueueCustomer_.IsReadOnly = false;
					this.CustomerProfileCollectionViaCallQueueCustomer_.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaCallQueueCustomer_.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaEventCustomerResult______":
					this.CustomerProfileCollectionViaEventCustomerResult______.IsReadOnly = false;
					this.CustomerProfileCollectionViaEventCustomerResult______.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaEventCustomerResult______.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaCustomerIcdCode":
					this.CustomerProfileCollectionViaCustomerIcdCode.IsReadOnly = false;
					this.CustomerProfileCollectionViaCustomerIcdCode.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaCustomerIcdCode.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaMailRoundCallQueue":
					this.CustomerProfileCollectionViaMailRoundCallQueue.IsReadOnly = false;
					this.CustomerProfileCollectionViaMailRoundCallQueue.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaMailRoundCallQueue.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaCustomerHealthInfoArchive":
					this.CustomerProfileCollectionViaCustomerHealthInfoArchive.IsReadOnly = false;
					this.CustomerProfileCollectionViaCustomerHealthInfoArchive.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaCustomerHealthInfoArchive.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaEventCustomerQuestionAnswer_":
					this.CustomerProfileCollectionViaEventCustomerQuestionAnswer_.IsReadOnly = false;
					this.CustomerProfileCollectionViaEventCustomerQuestionAnswer_.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaEventCustomerQuestionAnswer_.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaRequiredTest":
					this.CustomerProfileCollectionViaRequiredTest.IsReadOnly = false;
					this.CustomerProfileCollectionViaRequiredTest.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaRequiredTest.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaCustomerWarmTransfer_":
					this.CustomerProfileCollectionViaCustomerWarmTransfer_.IsReadOnly = false;
					this.CustomerProfileCollectionViaCustomerWarmTransfer_.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaCustomerWarmTransfer_.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaProspectCustomer":
					this.CustomerProfileCollectionViaProspectCustomer.IsReadOnly = false;
					this.CustomerProfileCollectionViaProspectCustomer.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaProspectCustomer.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaEventCustomerResult_":
					this.CustomerProfileCollectionViaEventCustomerResult_.IsReadOnly = false;
					this.CustomerProfileCollectionViaEventCustomerResult_.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaEventCustomerResult_.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaEventCustomerResult__":
					this.CustomerProfileCollectionViaEventCustomerResult__.IsReadOnly = false;
					this.CustomerProfileCollectionViaEventCustomerResult__.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaEventCustomerResult__.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaUncontactedCustomerCallQueue":
					this.CustomerProfileCollectionViaUncontactedCustomerCallQueue.IsReadOnly = false;
					this.CustomerProfileCollectionViaUncontactedCustomerCallQueue.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaUncontactedCustomerCallQueue.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaCustomerWarmTransfer":
					this.CustomerProfileCollectionViaCustomerWarmTransfer.IsReadOnly = false;
					this.CustomerProfileCollectionViaCustomerWarmTransfer.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaCustomerWarmTransfer.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaMedication_":
					this.CustomerProfileCollectionViaMedication_.IsReadOnly = false;
					this.CustomerProfileCollectionViaMedication_.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaMedication_.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaCallRoundCallQueue":
					this.CustomerProfileCollectionViaCallRoundCallQueue.IsReadOnly = false;
					this.CustomerProfileCollectionViaCallRoundCallQueue.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaCallRoundCallQueue.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaCustomerTag_":
					this.CustomerProfileCollectionViaCustomerTag_.IsReadOnly = false;
					this.CustomerProfileCollectionViaCustomerTag_.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaCustomerTag_.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaReferral":
					this.CustomerProfileCollectionViaReferral.IsReadOnly = false;
					this.CustomerProfileCollectionViaReferral.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaReferral.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaCustomerTargeted_":
					this.CustomerProfileCollectionViaCustomerTargeted_.IsReadOnly = false;
					this.CustomerProfileCollectionViaCustomerTargeted_.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaCustomerTargeted_.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaCustomerTargeted":
					this.CustomerProfileCollectionViaCustomerTargeted.IsReadOnly = false;
					this.CustomerProfileCollectionViaCustomerTargeted.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaCustomerTargeted.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaCustomerTag":
					this.CustomerProfileCollectionViaCustomerTag.IsReadOnly = false;
					this.CustomerProfileCollectionViaCustomerTag.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaCustomerTag.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaMedication":
					this.CustomerProfileCollectionViaMedication.IsReadOnly = false;
					this.CustomerProfileCollectionViaMedication.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaMedication.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaEventCustomerResult________":
					this.CustomerProfileCollectionViaEventCustomerResult________.IsReadOnly = false;
					this.CustomerProfileCollectionViaEventCustomerResult________.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaEventCustomerResult________.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaEventCustomerResult":
					this.CustomerProfileCollectionViaEventCustomerResult.IsReadOnly = false;
					this.CustomerProfileCollectionViaEventCustomerResult.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaEventCustomerResult.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaEventCustomerResult_______":
					this.CustomerProfileCollectionViaEventCustomerResult_______.IsReadOnly = false;
					this.CustomerProfileCollectionViaEventCustomerResult_______.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaEventCustomerResult_______.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaDirectMail":
					this.CustomerProfileCollectionViaDirectMail.IsReadOnly = false;
					this.CustomerProfileCollectionViaDirectMail.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaDirectMail.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaEventCustomerResult____":
					this.CustomerProfileCollectionViaEventCustomerResult____.IsReadOnly = false;
					this.CustomerProfileCollectionViaEventCustomerResult____.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaEventCustomerResult____.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaCurrentMedication":
					this.CustomerProfileCollectionViaCurrentMedication.IsReadOnly = false;
					this.CustomerProfileCollectionViaCurrentMedication.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaCurrentMedication.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaGuardianDetails":
					this.CustomerProfileCollectionViaGuardianDetails.IsReadOnly = false;
					this.CustomerProfileCollectionViaGuardianDetails.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaGuardianDetails.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaEventCustomers":
					this.CustomerProfileCollectionViaEventCustomers.IsReadOnly = false;
					this.CustomerProfileCollectionViaEventCustomers.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaEventCustomers.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaEventCustomers_":
					this.CustomerProfileCollectionViaEventCustomers_.IsReadOnly = false;
					this.CustomerProfileCollectionViaEventCustomers_.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaEventCustomers_.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaCustomerCallQueueCallAttempt":
					this.CustomerProfileCollectionViaCustomerCallQueueCallAttempt.IsReadOnly = false;
					this.CustomerProfileCollectionViaCustomerCallQueueCallAttempt.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaCustomerCallQueueCallAttempt.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaEventCustomerResult___":
					this.CustomerProfileCollectionViaEventCustomerResult___.IsReadOnly = false;
					this.CustomerProfileCollectionViaEventCustomerResult___.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaEventCustomerResult___.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaCustomerProfileHistory":
					this.CustomerProfileCollectionViaCustomerProfileHistory.IsReadOnly = false;
					this.CustomerProfileCollectionViaCustomerProfileHistory.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaCustomerProfileHistory.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt":
					this.CustomerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt.IsReadOnly = false;
					this.CustomerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaCustomerClinicalQuestionAnswer":
					this.CustomerProfileCollectionViaCustomerClinicalQuestionAnswer.IsReadOnly = false;
					this.CustomerProfileCollectionViaCustomerClinicalQuestionAnswer.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaCustomerClinicalQuestionAnswer.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaCustomerClinicalQuestionAnswer_":
					this.CustomerProfileCollectionViaCustomerClinicalQuestionAnswer_.IsReadOnly = false;
					this.CustomerProfileCollectionViaCustomerClinicalQuestionAnswer_.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaCustomerClinicalQuestionAnswer_.IsReadOnly = true;
					break;
				case "CustomerProfileCollectionViaGuardianDetails_":
					this.CustomerProfileCollectionViaGuardianDetails_.IsReadOnly = false;
					this.CustomerProfileCollectionViaGuardianDetails_.Add((CustomerProfileEntity)entity);
					this.CustomerProfileCollectionViaGuardianDetails_.IsReadOnly = true;
					break;
				case "CustomerProfileHistoryCollectionViaEventCustomers_":
					this.CustomerProfileHistoryCollectionViaEventCustomers_.IsReadOnly = false;
					this.CustomerProfileHistoryCollectionViaEventCustomers_.Add((CustomerProfileHistoryEntity)entity);
					this.CustomerProfileHistoryCollectionViaEventCustomers_.IsReadOnly = true;
					break;
				case "CustomerProfileHistoryCollectionViaEventCustomers":
					this.CustomerProfileHistoryCollectionViaEventCustomers.IsReadOnly = false;
					this.CustomerProfileHistoryCollectionViaEventCustomers.Add((CustomerProfileHistoryEntity)entity);
					this.CustomerProfileHistoryCollectionViaEventCustomers.IsReadOnly = true;
					break;
				case "CustomerRegistrationNotesCollectionViaEventAppointmentCancellationLog":
					this.CustomerRegistrationNotesCollectionViaEventAppointmentCancellationLog.IsReadOnly = false;
					this.CustomerRegistrationNotesCollectionViaEventAppointmentCancellationLog.Add((CustomerRegistrationNotesEntity)entity);
					this.CustomerRegistrationNotesCollectionViaEventAppointmentCancellationLog.IsReadOnly = true;
					break;
				case "CustomerRegistrationNotesCollectionViaEventCustomers_":
					this.CustomerRegistrationNotesCollectionViaEventCustomers_.IsReadOnly = false;
					this.CustomerRegistrationNotesCollectionViaEventCustomers_.Add((CustomerRegistrationNotesEntity)entity);
					this.CustomerRegistrationNotesCollectionViaEventCustomers_.IsReadOnly = true;
					break;
				case "CustomerRegistrationNotesCollectionViaEventCustomers":
					this.CustomerRegistrationNotesCollectionViaEventCustomers.IsReadOnly = false;
					this.CustomerRegistrationNotesCollectionViaEventCustomers.Add((CustomerRegistrationNotesEntity)entity);
					this.CustomerRegistrationNotesCollectionViaEventCustomers.IsReadOnly = true;
					break;
				case "DirectMailTypeCollectionViaDirectMail":
					this.DirectMailTypeCollectionViaDirectMail.IsReadOnly = false;
					this.DirectMailTypeCollectionViaDirectMail.Add((DirectMailTypeEntity)entity);
					this.DirectMailTypeCollectionViaDirectMail.IsReadOnly = true;
					break;
				case "DirectMailTypeCollectionViaCampaignActivity":
					this.DirectMailTypeCollectionViaCampaignActivity.IsReadOnly = false;
					this.DirectMailTypeCollectionViaCampaignActivity.Add((DirectMailTypeEntity)entity);
					this.DirectMailTypeCollectionViaCampaignActivity.IsReadOnly = true;
					break;
				case "DirectMailTypeCollectionViaCampaignActivity_":
					this.DirectMailTypeCollectionViaCampaignActivity_.IsReadOnly = false;
					this.DirectMailTypeCollectionViaCampaignActivity_.Add((DirectMailTypeEntity)entity);
					this.DirectMailTypeCollectionViaCampaignActivity_.IsReadOnly = true;
					break;
				case "EventActivityTemplateCollectionViaEventActivityTemplateMeeting":
					this.EventActivityTemplateCollectionViaEventActivityTemplateMeeting.IsReadOnly = false;
					this.EventActivityTemplateCollectionViaEventActivityTemplateMeeting.Add((EventActivityTemplateEntity)entity);
					this.EventActivityTemplateCollectionViaEventActivityTemplateMeeting.IsReadOnly = true;
					break;
				case "EventActivityTemplateCollectionViaEventActivityTemplateTask":
					this.EventActivityTemplateCollectionViaEventActivityTemplateTask.IsReadOnly = false;
					this.EventActivityTemplateCollectionViaEventActivityTemplateTask.Add((EventActivityTemplateEntity)entity);
					this.EventActivityTemplateCollectionViaEventActivityTemplateTask.IsReadOnly = true;
					break;
				case "EventActivityTemplateCollectionViaEventActivityTemplateCall":
					this.EventActivityTemplateCollectionViaEventActivityTemplateCall.IsReadOnly = false;
					this.EventActivityTemplateCollectionViaEventActivityTemplateCall.Add((EventActivityTemplateEntity)entity);
					this.EventActivityTemplateCollectionViaEventActivityTemplateCall.IsReadOnly = true;
					break;
				case "EventActivityTemplateCollectionViaEventActivityTemplateEmail":
					this.EventActivityTemplateCollectionViaEventActivityTemplateEmail.IsReadOnly = false;
					this.EventActivityTemplateCollectionViaEventActivityTemplateEmail.Add((EventActivityTemplateEntity)entity);
					this.EventActivityTemplateCollectionViaEventActivityTemplateEmail.IsReadOnly = true;
					break;
				case "EventAppointmentCollectionViaEventCustomers":
					this.EventAppointmentCollectionViaEventCustomers.IsReadOnly = false;
					this.EventAppointmentCollectionViaEventCustomers.Add((EventAppointmentEntity)entity);
					this.EventAppointmentCollectionViaEventCustomers.IsReadOnly = true;
					break;
				case "EventAppointmentCollectionViaEventCustomers_":
					this.EventAppointmentCollectionViaEventCustomers_.IsReadOnly = false;
					this.EventAppointmentCollectionViaEventCustomers_.Add((EventAppointmentEntity)entity);
					this.EventAppointmentCollectionViaEventCustomers_.IsReadOnly = true;
					break;
				case "EventCustomerResultCollectionViaCustomerResultScreeningCommunication":
					this.EventCustomerResultCollectionViaCustomerResultScreeningCommunication.IsReadOnly = false;
					this.EventCustomerResultCollectionViaCustomerResultScreeningCommunication.Add((EventCustomerResultEntity)entity);
					this.EventCustomerResultCollectionViaCustomerResultScreeningCommunication.IsReadOnly = true;
					break;
				case "EventCustomerResultCollectionViaPriorityInQueue_":
					this.EventCustomerResultCollectionViaPriorityInQueue_.IsReadOnly = false;
					this.EventCustomerResultCollectionViaPriorityInQueue_.Add((EventCustomerResultEntity)entity);
					this.EventCustomerResultCollectionViaPriorityInQueue_.IsReadOnly = true;
					break;
				case "EventCustomerResultCollectionViaKynLabValues":
					this.EventCustomerResultCollectionViaKynLabValues.IsReadOnly = false;
					this.EventCustomerResultCollectionViaKynLabValues.Add((EventCustomerResultEntity)entity);
					this.EventCustomerResultCollectionViaKynLabValues.IsReadOnly = true;
					break;
				case "EventCustomerResultCollectionViaCustomerResultScreeningCommunication__":
					this.EventCustomerResultCollectionViaCustomerResultScreeningCommunication__.IsReadOnly = false;
					this.EventCustomerResultCollectionViaCustomerResultScreeningCommunication__.Add((EventCustomerResultEntity)entity);
					this.EventCustomerResultCollectionViaCustomerResultScreeningCommunication__.IsReadOnly = true;
					break;
				case "EventCustomerResultCollectionViaCustomerResultScreeningCommunication_":
					this.EventCustomerResultCollectionViaCustomerResultScreeningCommunication_.IsReadOnly = false;
					this.EventCustomerResultCollectionViaCustomerResultScreeningCommunication_.Add((EventCustomerResultEntity)entity);
					this.EventCustomerResultCollectionViaCustomerResultScreeningCommunication_.IsReadOnly = true;
					break;
				case "EventCustomerResultCollectionViaCdcontentGeneratorTracking":
					this.EventCustomerResultCollectionViaCdcontentGeneratorTracking.IsReadOnly = false;
					this.EventCustomerResultCollectionViaCdcontentGeneratorTracking.Add((EventCustomerResultEntity)entity);
					this.EventCustomerResultCollectionViaCdcontentGeneratorTracking.IsReadOnly = true;
					break;
				case "EventCustomerResultCollectionViaKynLabValues_":
					this.EventCustomerResultCollectionViaKynLabValues_.IsReadOnly = false;
					this.EventCustomerResultCollectionViaKynLabValues_.Add((EventCustomerResultEntity)entity);
					this.EventCustomerResultCollectionViaKynLabValues_.IsReadOnly = true;
					break;
				case "EventCustomerResultCollectionViaPriorityInQueue":
					this.EventCustomerResultCollectionViaPriorityInQueue.IsReadOnly = false;
					this.EventCustomerResultCollectionViaPriorityInQueue.Add((EventCustomerResultEntity)entity);
					this.EventCustomerResultCollectionViaPriorityInQueue.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaDisqualifiedTest_":
					this.EventCustomersCollectionViaDisqualifiedTest_.IsReadOnly = false;
					this.EventCustomersCollectionViaDisqualifiedTest_.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaDisqualifiedTest_.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaEventAppointmentChangeLog":
					this.EventCustomersCollectionViaEventAppointmentChangeLog.IsReadOnly = false;
					this.EventCustomersCollectionViaEventAppointmentChangeLog.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaEventAppointmentChangeLog.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaDisqualifiedTest":
					this.EventCustomersCollectionViaDisqualifiedTest.IsReadOnly = false;
					this.EventCustomersCollectionViaDisqualifiedTest.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaDisqualifiedTest.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaEventCustomerPrimaryCarePhysician":
					this.EventCustomersCollectionViaEventCustomerPrimaryCarePhysician.IsReadOnly = false;
					this.EventCustomersCollectionViaEventCustomerPrimaryCarePhysician.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaEventCustomerPrimaryCarePhysician.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaEventCustomerQuestionAnswer_":
					this.EventCustomersCollectionViaEventCustomerQuestionAnswer_.IsReadOnly = false;
					this.EventCustomersCollectionViaEventCustomerQuestionAnswer_.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaEventCustomerQuestionAnswer_.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaEventAppointmentCancellationLog":
					this.EventCustomersCollectionViaEventAppointmentCancellationLog.IsReadOnly = false;
					this.EventCustomersCollectionViaEventAppointmentCancellationLog.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaEventAppointmentCancellationLog.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaEventCustomerQuestionAnswer":
					this.EventCustomersCollectionViaEventCustomerQuestionAnswer.IsReadOnly = false;
					this.EventCustomersCollectionViaEventCustomerQuestionAnswer.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaEventCustomerQuestionAnswer.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaEventCustomerGiftCard":
					this.EventCustomersCollectionViaEventCustomerGiftCard.IsReadOnly = false;
					this.EventCustomersCollectionViaEventCustomerGiftCard.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaEventCustomerGiftCard.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaSurveyAnswer":
					this.EventCustomersCollectionViaSurveyAnswer.IsReadOnly = false;
					this.EventCustomersCollectionViaSurveyAnswer.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaSurveyAnswer.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaEventCustomerTestNotPerformedNotification":
					this.EventCustomersCollectionViaEventCustomerTestNotPerformedNotification.IsReadOnly = false;
					this.EventCustomersCollectionViaEventCustomerTestNotPerformedNotification.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaEventCustomerTestNotPerformedNotification.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaPhysicianRecordRequestSignature":
					this.EventCustomersCollectionViaPhysicianRecordRequestSignature.IsReadOnly = false;
					this.EventCustomersCollectionViaPhysicianRecordRequestSignature.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaPhysicianRecordRequestSignature.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaEventCustomerRetest":
					this.EventCustomersCollectionViaEventCustomerRetest.IsReadOnly = false;
					this.EventCustomersCollectionViaEventCustomerRetest.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaEventCustomerRetest.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaPcpDisposition":
					this.EventCustomersCollectionViaPcpDisposition.IsReadOnly = false;
					this.EventCustomersCollectionViaPcpDisposition.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaPcpDisposition.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaPcpDisposition_":
					this.EventCustomersCollectionViaPcpDisposition_.IsReadOnly = false;
					this.EventCustomersCollectionViaPcpDisposition_.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaPcpDisposition_.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaChaperoneSignature":
					this.EventCustomersCollectionViaChaperoneSignature.IsReadOnly = false;
					this.EventCustomersCollectionViaChaperoneSignature.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaChaperoneSignature.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaChaperoneAnswer_":
					this.EventCustomersCollectionViaChaperoneAnswer_.IsReadOnly = false;
					this.EventCustomersCollectionViaChaperoneAnswer_.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaChaperoneAnswer_.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaChaperoneAnswer":
					this.EventCustomersCollectionViaChaperoneAnswer.IsReadOnly = false;
					this.EventCustomersCollectionViaChaperoneAnswer.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaChaperoneAnswer.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaCallQueueCustomer__":
					this.EventCustomersCollectionViaCallQueueCustomer__.IsReadOnly = false;
					this.EventCustomersCollectionViaCallQueueCustomer__.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaCallQueueCustomer__.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaCheckListAnswer_":
					this.EventCustomersCollectionViaCheckListAnswer_.IsReadOnly = false;
					this.EventCustomersCollectionViaCheckListAnswer_.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaCheckListAnswer_.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaCallQueueCustomer":
					this.EventCustomersCollectionViaCallQueueCustomer.IsReadOnly = false;
					this.EventCustomersCollectionViaCallQueueCustomer.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaCallQueueCustomer.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaCallQueueCustomer_":
					this.EventCustomersCollectionViaCallQueueCustomer_.IsReadOnly = false;
					this.EventCustomersCollectionViaCallQueueCustomer_.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaCallQueueCustomer_.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaCustomerHealthInfo":
					this.EventCustomersCollectionViaCustomerHealthInfo.IsReadOnly = false;
					this.EventCustomersCollectionViaCustomerHealthInfo.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaCustomerHealthInfo.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaExitInterviewSignature":
					this.EventCustomersCollectionViaExitInterviewSignature.IsReadOnly = false;
					this.EventCustomersCollectionViaExitInterviewSignature.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaExitInterviewSignature.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaFluConsentAnswer":
					this.EventCustomersCollectionViaFluConsentAnswer.IsReadOnly = false;
					this.EventCustomersCollectionViaFluConsentAnswer.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaFluConsentAnswer.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaExitInterviewAnswer_":
					this.EventCustomersCollectionViaExitInterviewAnswer_.IsReadOnly = false;
					this.EventCustomersCollectionViaExitInterviewAnswer_.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaExitInterviewAnswer_.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaCheckListAnswer":
					this.EventCustomersCollectionViaCheckListAnswer.IsReadOnly = false;
					this.EventCustomersCollectionViaCheckListAnswer.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaCheckListAnswer.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaExitInterviewAnswer":
					this.EventCustomersCollectionViaExitInterviewAnswer.IsReadOnly = false;
					this.EventCustomersCollectionViaExitInterviewAnswer.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaExitInterviewAnswer.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaFluConsentAnswer_":
					this.EventCustomersCollectionViaFluConsentAnswer_.IsReadOnly = false;
					this.EventCustomersCollectionViaFluConsentAnswer_.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaFluConsentAnswer_.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaSurveyAnswer_":
					this.EventCustomersCollectionViaSurveyAnswer_.IsReadOnly = false;
					this.EventCustomersCollectionViaSurveyAnswer_.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaSurveyAnswer_.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaCustomerHealthInfoArchive":
					this.EventCustomersCollectionViaCustomerHealthInfoArchive.IsReadOnly = false;
					this.EventCustomersCollectionViaCustomerHealthInfoArchive.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaCustomerHealthInfoArchive.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaCustomerMedicareQuestionAnswer":
					this.EventCustomersCollectionViaCustomerMedicareQuestionAnswer.IsReadOnly = false;
					this.EventCustomersCollectionViaCustomerMedicareQuestionAnswer.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaCustomerMedicareQuestionAnswer.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaFluConsentSignature":
					this.EventCustomersCollectionViaFluConsentSignature.IsReadOnly = false;
					this.EventCustomersCollectionViaFluConsentSignature.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaFluConsentSignature.IsReadOnly = true;
					break;
				case "EventCustomersCollectionViaParticipationConsentSignature":
					this.EventCustomersCollectionViaParticipationConsentSignature.IsReadOnly = false;
					this.EventCustomersCollectionViaParticipationConsentSignature.Add((EventCustomersEntity)entity);
					this.EventCustomersCollectionViaParticipationConsentSignature.IsReadOnly = true;
					break;
				case "EventsCollectionViaEventCustomerQuestionAnswer":
					this.EventsCollectionViaEventCustomerQuestionAnswer.IsReadOnly = false;
					this.EventsCollectionViaEventCustomerQuestionAnswer.Add((EventsEntity)entity);
					this.EventsCollectionViaEventCustomerQuestionAnswer.IsReadOnly = true;
					break;
				case "EventsCollectionViaEventPhysicianTest__":
					this.EventsCollectionViaEventPhysicianTest__.IsReadOnly = false;
					this.EventsCollectionViaEventPhysicianTest__.Add((EventsEntity)entity);
					this.EventsCollectionViaEventPhysicianTest__.IsReadOnly = true;
					break;
				case "EventsCollectionViaEventStaffAssignment__":
					this.EventsCollectionViaEventStaffAssignment__.IsReadOnly = false;
					this.EventsCollectionViaEventStaffAssignment__.Add((EventsEntity)entity);
					this.EventsCollectionViaEventStaffAssignment__.IsReadOnly = true;
					break;
				case "EventsCollectionViaEventStaffAssignment_":
					this.EventsCollectionViaEventStaffAssignment_.IsReadOnly = false;
					this.EventsCollectionViaEventStaffAssignment_.Add((EventsEntity)entity);
					this.EventsCollectionViaEventStaffAssignment_.IsReadOnly = true;
					break;
				case "EventsCollectionViaEventCustomers":
					this.EventsCollectionViaEventCustomers.IsReadOnly = false;
					this.EventsCollectionViaEventCustomers.Add((EventsEntity)entity);
					this.EventsCollectionViaEventCustomers.IsReadOnly = true;
					break;
				case "EventsCollectionViaEventCustomerResult____":
					this.EventsCollectionViaEventCustomerResult____.IsReadOnly = false;
					this.EventsCollectionViaEventCustomerResult____.Add((EventsEntity)entity);
					this.EventsCollectionViaEventCustomerResult____.IsReadOnly = true;
					break;
				case "EventsCollectionViaEventCustomerResult___":
					this.EventsCollectionViaEventCustomerResult___.IsReadOnly = false;
					this.EventsCollectionViaEventCustomerResult___.Add((EventsEntity)entity);
					this.EventsCollectionViaEventCustomerResult___.IsReadOnly = true;
					break;
				case "EventsCollectionViaHospitalPartnerCustomer_":
					this.EventsCollectionViaHospitalPartnerCustomer_.IsReadOnly = false;
					this.EventsCollectionViaHospitalPartnerCustomer_.Add((EventsEntity)entity);
					this.EventsCollectionViaHospitalPartnerCustomer_.IsReadOnly = true;
					break;
				case "EventsCollectionViaEventCustomerResult_":
					this.EventsCollectionViaEventCustomerResult_.IsReadOnly = false;
					this.EventsCollectionViaEventCustomerResult_.Add((EventsEntity)entity);
					this.EventsCollectionViaEventCustomerResult_.IsReadOnly = true;
					break;
				case "EventsCollectionViaEventCustomerResult________":
					this.EventsCollectionViaEventCustomerResult________.IsReadOnly = false;
					this.EventsCollectionViaEventCustomerResult________.Add((EventsEntity)entity);
					this.EventsCollectionViaEventCustomerResult________.IsReadOnly = true;
					break;
				case "EventsCollectionViaEventCustomerResult______":
					this.EventsCollectionViaEventCustomerResult______.IsReadOnly = false;
					this.EventsCollectionViaEventCustomerResult______.Add((EventsEntity)entity);
					this.EventsCollectionViaEventCustomerResult______.IsReadOnly = true;
					break;
				case "EventsCollectionViaEventCustomerResult__":
					this.EventsCollectionViaEventCustomerResult__.IsReadOnly = false;
					this.EventsCollectionViaEventCustomerResult__.Add((EventsEntity)entity);
					this.EventsCollectionViaEventCustomerResult__.IsReadOnly = true;
					break;
				case "EventsCollectionViaEventCustomerResult_______":
					this.EventsCollectionViaEventCustomerResult_______.IsReadOnly = false;
					this.EventsCollectionViaEventCustomerResult_______.Add((EventsEntity)entity);
					this.EventsCollectionViaEventCustomerResult_______.IsReadOnly = true;
					break;
				case "EventsCollectionViaEventPhysicianTest_":
					this.EventsCollectionViaEventPhysicianTest_.IsReadOnly = false;
					this.EventsCollectionViaEventPhysicianTest_.Add((EventsEntity)entity);
					this.EventsCollectionViaEventPhysicianTest_.IsReadOnly = true;
					break;
				case "EventsCollectionViaEventPhysicianTest":
					this.EventsCollectionViaEventPhysicianTest.IsReadOnly = false;
					this.EventsCollectionViaEventPhysicianTest.Add((EventsEntity)entity);
					this.EventsCollectionViaEventPhysicianTest.IsReadOnly = true;
					break;
				case "EventsCollectionViaEventCustomerQuestionAnswer_":
					this.EventsCollectionViaEventCustomerQuestionAnswer_.IsReadOnly = false;
					this.EventsCollectionViaEventCustomerQuestionAnswer_.Add((EventsEntity)entity);
					this.EventsCollectionViaEventCustomerQuestionAnswer_.IsReadOnly = true;
					break;
				case "EventsCollectionViaHospitalPartnerCustomer__":
					this.EventsCollectionViaHospitalPartnerCustomer__.IsReadOnly = false;
					this.EventsCollectionViaHospitalPartnerCustomer__.Add((EventsEntity)entity);
					this.EventsCollectionViaHospitalPartnerCustomer__.IsReadOnly = true;
					break;
				case "EventsCollectionViaEventCustomerResult":
					this.EventsCollectionViaEventCustomerResult.IsReadOnly = false;
					this.EventsCollectionViaEventCustomerResult.Add((EventsEntity)entity);
					this.EventsCollectionViaEventCustomerResult.IsReadOnly = true;
					break;
				case "EventsCollectionViaHospitalPartnerCustomer":
					this.EventsCollectionViaHospitalPartnerCustomer.IsReadOnly = false;
					this.EventsCollectionViaHospitalPartnerCustomer.Add((EventsEntity)entity);
					this.EventsCollectionViaHospitalPartnerCustomer.IsReadOnly = true;
					break;
				case "EventsCollectionViaEventCustomerResult_____":
					this.EventsCollectionViaEventCustomerResult_____.IsReadOnly = false;
					this.EventsCollectionViaEventCustomerResult_____.Add((EventsEntity)entity);
					this.EventsCollectionViaEventCustomerResult_____.IsReadOnly = true;
					break;
				case "EventsCollectionViaEventCustomers_":
					this.EventsCollectionViaEventCustomers_.IsReadOnly = false;
					this.EventsCollectionViaEventCustomers_.Add((EventsEntity)entity);
					this.EventsCollectionViaEventCustomers_.IsReadOnly = true;
					break;
				case "EventsCollectionViaEventAccountTestHcpcsCode":
					this.EventsCollectionViaEventAccountTestHcpcsCode.IsReadOnly = false;
					this.EventsCollectionViaEventAccountTestHcpcsCode.Add((EventsEntity)entity);
					this.EventsCollectionViaEventAccountTestHcpcsCode.IsReadOnly = true;
					break;
				case "EventsCollectionViaCustomerRegistrationNotes":
					this.EventsCollectionViaCustomerRegistrationNotes.IsReadOnly = false;
					this.EventsCollectionViaCustomerRegistrationNotes.Add((EventsEntity)entity);
					this.EventsCollectionViaCustomerRegistrationNotes.IsReadOnly = true;
					break;
				case "EventsCollectionViaCallQueueCustomer":
					this.EventsCollectionViaCallQueueCustomer.IsReadOnly = false;
					this.EventsCollectionViaCallQueueCustomer.Add((EventsEntity)entity);
					this.EventsCollectionViaCallQueueCustomer.IsReadOnly = true;
					break;
				case "EventsCollectionViaEventAccountTestHcpcsCode_":
					this.EventsCollectionViaEventAccountTestHcpcsCode_.IsReadOnly = false;
					this.EventsCollectionViaEventAccountTestHcpcsCode_.Add((EventsEntity)entity);
					this.EventsCollectionViaEventAccountTestHcpcsCode_.IsReadOnly = true;
					break;
				case "EventsCollectionViaSeminars":
					this.EventsCollectionViaSeminars.IsReadOnly = false;
					this.EventsCollectionViaSeminars.Add((EventsEntity)entity);
					this.EventsCollectionViaSeminars.IsReadOnly = true;
					break;
				case "EventsCollectionViaDisqualifiedTest_":
					this.EventsCollectionViaDisqualifiedTest_.IsReadOnly = false;
					this.EventsCollectionViaDisqualifiedTest_.Add((EventsEntity)entity);
					this.EventsCollectionViaDisqualifiedTest_.IsReadOnly = true;
					break;
				case "EventsCollectionViaDisqualifiedTest":
					this.EventsCollectionViaDisqualifiedTest.IsReadOnly = false;
					this.EventsCollectionViaDisqualifiedTest.Add((EventsEntity)entity);
					this.EventsCollectionViaDisqualifiedTest.IsReadOnly = true;
					break;
				case "EventsCollectionViaCustomEventNotification":
					this.EventsCollectionViaCustomEventNotification.IsReadOnly = false;
					this.EventsCollectionViaCustomEventNotification.Add((EventsEntity)entity);
					this.EventsCollectionViaCustomEventNotification.IsReadOnly = true;
					break;
				case "EventsCollectionViaCallQueueCustomer__":
					this.EventsCollectionViaCallQueueCustomer__.IsReadOnly = false;
					this.EventsCollectionViaCallQueueCustomer__.Add((EventsEntity)entity);
					this.EventsCollectionViaCallQueueCustomer__.IsReadOnly = true;
					break;
				case "EventsCollectionViaCustomerClinicalQuestionAnswer":
					this.EventsCollectionViaCustomerClinicalQuestionAnswer.IsReadOnly = false;
					this.EventsCollectionViaCustomerClinicalQuestionAnswer.Add((EventsEntity)entity);
					this.EventsCollectionViaCustomerClinicalQuestionAnswer.IsReadOnly = true;
					break;
				case "EventsCollectionViaCustomerClinicalQuestionAnswer_":
					this.EventsCollectionViaCustomerClinicalQuestionAnswer_.IsReadOnly = false;
					this.EventsCollectionViaCustomerClinicalQuestionAnswer_.Add((EventsEntity)entity);
					this.EventsCollectionViaCustomerClinicalQuestionAnswer_.IsReadOnly = true;
					break;
				case "EventsCollectionViaEventAppointmentChangeLog":
					this.EventsCollectionViaEventAppointmentChangeLog.IsReadOnly = false;
					this.EventsCollectionViaEventAppointmentChangeLog.Add((EventsEntity)entity);
					this.EventsCollectionViaEventAppointmentChangeLog.IsReadOnly = true;
					break;
				case "EventsCollectionViaEventAppointmentChangeLog_":
					this.EventsCollectionViaEventAppointmentChangeLog_.IsReadOnly = false;
					this.EventsCollectionViaEventAppointmentChangeLog_.Add((EventsEntity)entity);
					this.EventsCollectionViaEventAppointmentChangeLog_.IsReadOnly = true;
					break;
				case "EventsCollectionViaCallQueueCustomer_":
					this.EventsCollectionViaCallQueueCustomer_.IsReadOnly = false;
					this.EventsCollectionViaCallQueueCustomer_.Add((EventsEntity)entity);
					this.EventsCollectionViaCallQueueCustomer_.IsReadOnly = true;
					break;
				case "EventsCollectionViaHostPayment":
					this.EventsCollectionViaHostPayment.IsReadOnly = false;
					this.EventsCollectionViaHostPayment.Add((EventsEntity)entity);
					this.EventsCollectionViaHostPayment.IsReadOnly = true;
					break;
				case "EventsCollectionViaEventStaffAssignment":
					this.EventsCollectionViaEventStaffAssignment.IsReadOnly = false;
					this.EventsCollectionViaEventStaffAssignment.Add((EventsEntity)entity);
					this.EventsCollectionViaEventStaffAssignment.IsReadOnly = true;
					break;
				case "EventsCollectionViaEventAppointmentCancellationLog":
					this.EventsCollectionViaEventAppointmentCancellationLog.IsReadOnly = false;
					this.EventsCollectionViaEventAppointmentCancellationLog.Add((EventsEntity)entity);
					this.EventsCollectionViaEventAppointmentCancellationLog.IsReadOnly = true;
					break;
				case "EventTypeCollectionViaEvents":
					this.EventTypeCollectionViaEvents.IsReadOnly = false;
					this.EventTypeCollectionViaEvents.Add((EventTypeEntity)entity);
					this.EventTypeCollectionViaEvents.IsReadOnly = true;
					break;
				case "EventTypeCollectionViaEvents____":
					this.EventTypeCollectionViaEvents____.IsReadOnly = false;
					this.EventTypeCollectionViaEvents____.Add((EventTypeEntity)entity);
					this.EventTypeCollectionViaEvents____.IsReadOnly = true;
					break;
				case "EventTypeCollectionViaEvents___":
					this.EventTypeCollectionViaEvents___.IsReadOnly = false;
					this.EventTypeCollectionViaEvents___.Add((EventTypeEntity)entity);
					this.EventTypeCollectionViaEvents___.IsReadOnly = true;
					break;
				case "EventTypeCollectionViaEvents_":
					this.EventTypeCollectionViaEvents_.IsReadOnly = false;
					this.EventTypeCollectionViaEvents_.Add((EventTypeEntity)entity);
					this.EventTypeCollectionViaEvents_.IsReadOnly = true;
					break;
				case "EventTypeCollectionViaEvents__":
					this.EventTypeCollectionViaEvents__.IsReadOnly = false;
					this.EventTypeCollectionViaEvents__.Add((EventTypeEntity)entity);
					this.EventTypeCollectionViaEvents__.IsReadOnly = true;
					break;
				case "ExitInterviewQuestionCollectionViaExitInterviewAnswer_":
					this.ExitInterviewQuestionCollectionViaExitInterviewAnswer_.IsReadOnly = false;
					this.ExitInterviewQuestionCollectionViaExitInterviewAnswer_.Add((ExitInterviewQuestionEntity)entity);
					this.ExitInterviewQuestionCollectionViaExitInterviewAnswer_.IsReadOnly = true;
					break;
				case "ExitInterviewQuestionCollectionViaExitInterviewAnswer":
					this.ExitInterviewQuestionCollectionViaExitInterviewAnswer.IsReadOnly = false;
					this.ExitInterviewQuestionCollectionViaExitInterviewAnswer.Add((ExitInterviewQuestionEntity)entity);
					this.ExitInterviewQuestionCollectionViaExitInterviewAnswer.IsReadOnly = true;
					break;
				case "ExportableReportsCollectionViaExportableReportsQueue":
					this.ExportableReportsCollectionViaExportableReportsQueue.IsReadOnly = false;
					this.ExportableReportsCollectionViaExportableReportsQueue.Add((ExportableReportsEntity)entity);
					this.ExportableReportsCollectionViaExportableReportsQueue.IsReadOnly = true;
					break;
				case "FileCollectionViaCustomerActivityTypeUpload_":
					this.FileCollectionViaCustomerActivityTypeUpload_.IsReadOnly = false;
					this.FileCollectionViaCustomerActivityTypeUpload_.Add((FileEntity)entity);
					this.FileCollectionViaCustomerActivityTypeUpload_.IsReadOnly = true;
					break;
				case "FileCollectionViaCorporateUpload":
					this.FileCollectionViaCorporateUpload.IsReadOnly = false;
					this.FileCollectionViaCorporateUpload.Add((FileEntity)entity);
					this.FileCollectionViaCorporateUpload.IsReadOnly = true;
					break;
				case "FileCollectionViaStaffEventScheduleUpload":
					this.FileCollectionViaStaffEventScheduleUpload.IsReadOnly = false;
					this.FileCollectionViaStaffEventScheduleUpload.Add((FileEntity)entity);
					this.FileCollectionViaStaffEventScheduleUpload.IsReadOnly = true;
					break;
				case "FileCollectionViaCorporateUpload_":
					this.FileCollectionViaCorporateUpload_.IsReadOnly = false;
					this.FileCollectionViaCorporateUpload_.Add((FileEntity)entity);
					this.FileCollectionViaCorporateUpload_.IsReadOnly = true;
					break;
				case "FileCollectionViaPhysicianRecordRequestSignature":
					this.FileCollectionViaPhysicianRecordRequestSignature.IsReadOnly = false;
					this.FileCollectionViaPhysicianRecordRequestSignature.Add((FileEntity)entity);
					this.FileCollectionViaPhysicianRecordRequestSignature.IsReadOnly = true;
					break;
				case "FileCollectionViaCustomerActivityTypeUpload":
					this.FileCollectionViaCustomerActivityTypeUpload.IsReadOnly = false;
					this.FileCollectionViaCustomerActivityTypeUpload.Add((FileEntity)entity);
					this.FileCollectionViaCustomerActivityTypeUpload.IsReadOnly = true;
					break;
				case "FileCollectionViaRapsUpload_":
					this.FileCollectionViaRapsUpload_.IsReadOnly = false;
					this.FileCollectionViaRapsUpload_.Add((FileEntity)entity);
					this.FileCollectionViaRapsUpload_.IsReadOnly = true;
					break;
				case "FileCollectionViaCallUpload_":
					this.FileCollectionViaCallUpload_.IsReadOnly = false;
					this.FileCollectionViaCallUpload_.Add((FileEntity)entity);
					this.FileCollectionViaCallUpload_.IsReadOnly = true;
					break;
				case "FileCollectionViaChaperoneSignature_":
					this.FileCollectionViaChaperoneSignature_.IsReadOnly = false;
					this.FileCollectionViaChaperoneSignature_.Add((FileEntity)entity);
					this.FileCollectionViaChaperoneSignature_.IsReadOnly = true;
					break;
				case "FileCollectionViaRapsUpload":
					this.FileCollectionViaRapsUpload.IsReadOnly = false;
					this.FileCollectionViaRapsUpload.Add((FileEntity)entity);
					this.FileCollectionViaRapsUpload.IsReadOnly = true;
					break;
				case "FileCollectionViaChaperoneSignature":
					this.FileCollectionViaChaperoneSignature.IsReadOnly = false;
					this.FileCollectionViaChaperoneSignature.Add((FileEntity)entity);
					this.FileCollectionViaChaperoneSignature.IsReadOnly = true;
					break;
				case "FileCollectionViaCorporateUpload__":
					this.FileCollectionViaCorporateUpload__.IsReadOnly = false;
					this.FileCollectionViaCorporateUpload__.Add((FileEntity)entity);
					this.FileCollectionViaCorporateUpload__.IsReadOnly = true;
					break;
				case "FileCollectionViaCallUpload":
					this.FileCollectionViaCallUpload.IsReadOnly = false;
					this.FileCollectionViaCallUpload.Add((FileEntity)entity);
					this.FileCollectionViaCallUpload.IsReadOnly = true;
					break;
				case "FileCollectionViaHealthPlanCriteriaAssignmentUpload":
					this.FileCollectionViaHealthPlanCriteriaAssignmentUpload.IsReadOnly = false;
					this.FileCollectionViaHealthPlanCriteriaAssignmentUpload.Add((FileEntity)entity);
					this.FileCollectionViaHealthPlanCriteriaAssignmentUpload.IsReadOnly = true;
					break;
				case "FileCollectionViaParticipationConsentSignature_":
					this.FileCollectionViaParticipationConsentSignature_.IsReadOnly = false;
					this.FileCollectionViaParticipationConsentSignature_.Add((FileEntity)entity);
					this.FileCollectionViaParticipationConsentSignature_.IsReadOnly = true;
					break;
				case "FileCollectionViaMergeCustomerUpload":
					this.FileCollectionViaMergeCustomerUpload.IsReadOnly = false;
					this.FileCollectionViaMergeCustomerUpload.Add((FileEntity)entity);
					this.FileCollectionViaMergeCustomerUpload.IsReadOnly = true;
					break;
				case "FileCollectionViaMedicationUpload_":
					this.FileCollectionViaMedicationUpload_.IsReadOnly = false;
					this.FileCollectionViaMedicationUpload_.Add((FileEntity)entity);
					this.FileCollectionViaMedicationUpload_.IsReadOnly = true;
					break;
				case "FileCollectionViaMedicationUpload":
					this.FileCollectionViaMedicationUpload.IsReadOnly = false;
					this.FileCollectionViaMedicationUpload.Add((FileEntity)entity);
					this.FileCollectionViaMedicationUpload.IsReadOnly = true;
					break;
				case "FileCollectionViaFluConsentSignature_":
					this.FileCollectionViaFluConsentSignature_.IsReadOnly = false;
					this.FileCollectionViaFluConsentSignature_.Add((FileEntity)entity);
					this.FileCollectionViaFluConsentSignature_.IsReadOnly = true;
					break;
				case "FileCollectionViaFluConsentSignature":
					this.FileCollectionViaFluConsentSignature.IsReadOnly = false;
					this.FileCollectionViaFluConsentSignature.Add((FileEntity)entity);
					this.FileCollectionViaFluConsentSignature.IsReadOnly = true;
					break;
				case "FileCollectionViaMergeCustomerUpload_":
					this.FileCollectionViaMergeCustomerUpload_.IsReadOnly = false;
					this.FileCollectionViaMergeCustomerUpload_.Add((FileEntity)entity);
					this.FileCollectionViaMergeCustomerUpload_.IsReadOnly = true;
					break;
				case "FileCollectionViaExitInterviewSignature":
					this.FileCollectionViaExitInterviewSignature.IsReadOnly = false;
					this.FileCollectionViaExitInterviewSignature.Add((FileEntity)entity);
					this.FileCollectionViaExitInterviewSignature.IsReadOnly = true;
					break;
				case "FileCollectionViaEventCustomerGiftCard_":
					this.FileCollectionViaEventCustomerGiftCard_.IsReadOnly = false;
					this.FileCollectionViaEventCustomerGiftCard_.Add((FileEntity)entity);
					this.FileCollectionViaEventCustomerGiftCard_.IsReadOnly = true;
					break;
				case "FileCollectionViaEventCustomerGiftCard":
					this.FileCollectionViaEventCustomerGiftCard.IsReadOnly = false;
					this.FileCollectionViaEventCustomerGiftCard.Add((FileEntity)entity);
					this.FileCollectionViaEventCustomerGiftCard.IsReadOnly = true;
					break;
				case "FileCollectionViaEligibilityUpload":
					this.FileCollectionViaEligibilityUpload.IsReadOnly = false;
					this.FileCollectionViaEligibilityUpload.Add((FileEntity)entity);
					this.FileCollectionViaEligibilityUpload.IsReadOnly = true;
					break;
				case "FileCollectionViaEligibilityUpload_":
					this.FileCollectionViaEligibilityUpload_.IsReadOnly = false;
					this.FileCollectionViaEligibilityUpload_.Add((FileEntity)entity);
					this.FileCollectionViaEligibilityUpload_.IsReadOnly = true;
					break;
				case "FileCollectionViaExportableReportsQueue":
					this.FileCollectionViaExportableReportsQueue.IsReadOnly = false;
					this.FileCollectionViaExportableReportsQueue.Add((FileEntity)entity);
					this.FileCollectionViaExportableReportsQueue.IsReadOnly = true;
					break;
				case "FileCollectionViaSuspectConditionUpload":
					this.FileCollectionViaSuspectConditionUpload.IsReadOnly = false;
					this.FileCollectionViaSuspectConditionUpload.Add((FileEntity)entity);
					this.FileCollectionViaSuspectConditionUpload.IsReadOnly = true;
					break;
				case "FileCollectionViaStaffEventScheduleUpload_":
					this.FileCollectionViaStaffEventScheduleUpload_.IsReadOnly = false;
					this.FileCollectionViaStaffEventScheduleUpload_.Add((FileEntity)entity);
					this.FileCollectionViaStaffEventScheduleUpload_.IsReadOnly = true;
					break;
				case "FileCollectionViaParticipationConsentSignature":
					this.FileCollectionViaParticipationConsentSignature.IsReadOnly = false;
					this.FileCollectionViaParticipationConsentSignature.Add((FileEntity)entity);
					this.FileCollectionViaParticipationConsentSignature.IsReadOnly = true;
					break;
				case "FileCollectionViaCustomerPhoneNumberUpdateUpload_":
					this.FileCollectionViaCustomerPhoneNumberUpdateUpload_.IsReadOnly = false;
					this.FileCollectionViaCustomerPhoneNumberUpdateUpload_.Add((FileEntity)entity);
					this.FileCollectionViaCustomerPhoneNumberUpdateUpload_.IsReadOnly = true;
					break;
				case "FileCollectionViaCustomerPhoneNumberUpdateUpload":
					this.FileCollectionViaCustomerPhoneNumberUpdateUpload.IsReadOnly = false;
					this.FileCollectionViaCustomerPhoneNumberUpdateUpload.Add((FileEntity)entity);
					this.FileCollectionViaCustomerPhoneNumberUpdateUpload.IsReadOnly = true;
					break;
				case "FileCollectionViaSuspectConditionUpload_":
					this.FileCollectionViaSuspectConditionUpload_.IsReadOnly = false;
					this.FileCollectionViaSuspectConditionUpload_.Add((FileEntity)entity);
					this.FileCollectionViaSuspectConditionUpload_.IsReadOnly = true;
					break;
				case "FluConsentQuestionCollectionViaFluConsentAnswer":
					this.FluConsentQuestionCollectionViaFluConsentAnswer.IsReadOnly = false;
					this.FluConsentQuestionCollectionViaFluConsentAnswer.Add((FluConsentQuestionEntity)entity);
					this.FluConsentQuestionCollectionViaFluConsentAnswer.IsReadOnly = true;
					break;
				case "FluConsentQuestionCollectionViaFluConsentAnswer_":
					this.FluConsentQuestionCollectionViaFluConsentAnswer_.IsReadOnly = false;
					this.FluConsentQuestionCollectionViaFluConsentAnswer_.Add((FluConsentQuestionEntity)entity);
					this.FluConsentQuestionCollectionViaFluConsentAnswer_.IsReadOnly = true;
					break;
				case "GcNotGivenReasonCollectionViaEventCustomers":
					this.GcNotGivenReasonCollectionViaEventCustomers.IsReadOnly = false;
					this.GcNotGivenReasonCollectionViaEventCustomers.Add((GcNotGivenReasonEntity)entity);
					this.GcNotGivenReasonCollectionViaEventCustomers.IsReadOnly = true;
					break;
				case "GcNotGivenReasonCollectionViaEventCustomers_":
					this.GcNotGivenReasonCollectionViaEventCustomers_.IsReadOnly = false;
					this.GcNotGivenReasonCollectionViaEventCustomers_.Add((GcNotGivenReasonEntity)entity);
					this.GcNotGivenReasonCollectionViaEventCustomers_.IsReadOnly = true;
					break;
				case "HafTemplateCollectionViaClinicalTestQualificationCriteria":
					this.HafTemplateCollectionViaClinicalTestQualificationCriteria.IsReadOnly = false;
					this.HafTemplateCollectionViaClinicalTestQualificationCriteria.Add((HafTemplateEntity)entity);
					this.HafTemplateCollectionViaClinicalTestQualificationCriteria.IsReadOnly = true;
					break;
				case "HafTemplateCollectionViaEvents___":
					this.HafTemplateCollectionViaEvents___.IsReadOnly = false;
					this.HafTemplateCollectionViaEvents___.Add((HafTemplateEntity)entity);
					this.HafTemplateCollectionViaEvents___.IsReadOnly = true;
					break;
				case "HafTemplateCollectionViaEvents":
					this.HafTemplateCollectionViaEvents.IsReadOnly = false;
					this.HafTemplateCollectionViaEvents.Add((HafTemplateEntity)entity);
					this.HafTemplateCollectionViaEvents.IsReadOnly = true;
					break;
				case "HafTemplateCollectionViaEvents____":
					this.HafTemplateCollectionViaEvents____.IsReadOnly = false;
					this.HafTemplateCollectionViaEvents____.Add((HafTemplateEntity)entity);
					this.HafTemplateCollectionViaEvents____.IsReadOnly = true;
					break;
				case "HafTemplateCollectionViaEvents_":
					this.HafTemplateCollectionViaEvents_.IsReadOnly = false;
					this.HafTemplateCollectionViaEvents_.Add((HafTemplateEntity)entity);
					this.HafTemplateCollectionViaEvents_.IsReadOnly = true;
					break;
				case "HafTemplateCollectionViaCustomerClinicalQuestionAnswer":
					this.HafTemplateCollectionViaCustomerClinicalQuestionAnswer.IsReadOnly = false;
					this.HafTemplateCollectionViaCustomerClinicalQuestionAnswer.Add((HafTemplateEntity)entity);
					this.HafTemplateCollectionViaCustomerClinicalQuestionAnswer.IsReadOnly = true;
					break;
				case "HafTemplateCollectionViaEvents__":
					this.HafTemplateCollectionViaEvents__.IsReadOnly = false;
					this.HafTemplateCollectionViaEvents__.Add((HafTemplateEntity)entity);
					this.HafTemplateCollectionViaEvents__.IsReadOnly = true;
					break;
				case "HafTemplateCollectionViaCustomerClinicalQuestionAnswer_":
					this.HafTemplateCollectionViaCustomerClinicalQuestionAnswer_.IsReadOnly = false;
					this.HafTemplateCollectionViaCustomerClinicalQuestionAnswer_.Add((HafTemplateEntity)entity);
					this.HafTemplateCollectionViaCustomerClinicalQuestionAnswer_.IsReadOnly = true;
					break;
				case "HafTemplateCollectionViaClinicalTestQualificationCriteria_":
					this.HafTemplateCollectionViaClinicalTestQualificationCriteria_.IsReadOnly = false;
					this.HafTemplateCollectionViaClinicalTestQualificationCriteria_.Add((HafTemplateEntity)entity);
					this.HafTemplateCollectionViaClinicalTestQualificationCriteria_.IsReadOnly = true;
					break;
				case "HcpcsCodeCollectionViaTestHcpcsCode_":
					this.HcpcsCodeCollectionViaTestHcpcsCode_.IsReadOnly = false;
					this.HcpcsCodeCollectionViaTestHcpcsCode_.Add((HcpcsCodeEntity)entity);
					this.HcpcsCodeCollectionViaTestHcpcsCode_.IsReadOnly = true;
					break;
				case "HcpcsCodeCollectionViaTestHcpcsCode":
					this.HcpcsCodeCollectionViaTestHcpcsCode.IsReadOnly = false;
					this.HcpcsCodeCollectionViaTestHcpcsCode.Add((HcpcsCodeEntity)entity);
					this.HcpcsCodeCollectionViaTestHcpcsCode.IsReadOnly = true;
					break;
				case "HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload":
					this.HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload.IsReadOnly = false;
					this.HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload.Add((HealthPlanCallQueueCriteriaEntity)entity);
					this.HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload.IsReadOnly = true;
					break;
				case "HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment":
					this.HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment.IsReadOnly = false;
					this.HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment.Add((HealthPlanCallQueueCriteriaEntity)entity);
					this.HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment.IsReadOnly = true;
					break;
				case "HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_":
					this.HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_.IsReadOnly = false;
					this.HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_.Add((HealthPlanCallQueueCriteriaEntity)entity);
					this.HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_.IsReadOnly = true;
					break;
				case "HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment":
					this.HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment.IsReadOnly = false;
					this.HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment.Add((HealthPlanCallQueueCriteriaEntity)entity);
					this.HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment.IsReadOnly = true;
					break;
				case "HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__":
					this.HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__.IsReadOnly = false;
					this.HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__.Add((HealthPlanCallQueueCriteriaEntity)entity);
					this.HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__.IsReadOnly = true;
					break;
				case "HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_":
					this.HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_.IsReadOnly = false;
					this.HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_.Add((HealthPlanCallQueueCriteriaEntity)entity);
					this.HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_.IsReadOnly = true;
					break;
				case "HospitalFacilityCollectionViaEventCustomers":
					this.HospitalFacilityCollectionViaEventCustomers.IsReadOnly = false;
					this.HospitalFacilityCollectionViaEventCustomers.Add((HospitalFacilityEntity)entity);
					this.HospitalFacilityCollectionViaEventCustomers.IsReadOnly = true;
					break;
				case "HospitalFacilityCollectionViaEventCustomers_":
					this.HospitalFacilityCollectionViaEventCustomers_.IsReadOnly = false;
					this.HospitalFacilityCollectionViaEventCustomers_.Add((HospitalFacilityEntity)entity);
					this.HospitalFacilityCollectionViaEventCustomers_.IsReadOnly = true;
					break;
				case "HostPaymentCollectionViaHostPaymentTransaction":
					this.HostPaymentCollectionViaHostPaymentTransaction.IsReadOnly = false;
					this.HostPaymentCollectionViaHostPaymentTransaction.Add((HostPaymentEntity)entity);
					this.HostPaymentCollectionViaHostPaymentTransaction.IsReadOnly = true;
					break;
				case "IcdCodesCollectionViaCustomerIcdCode":
					this.IcdCodesCollectionViaCustomerIcdCode.IsReadOnly = false;
					this.IcdCodesCollectionViaCustomerIcdCode.Add((IcdCodesEntity)entity);
					this.IcdCodesCollectionViaCustomerIcdCode.IsReadOnly = true;
					break;
				case "InsuranceCompanyCollectionViaEligibility":
					this.InsuranceCompanyCollectionViaEligibility.IsReadOnly = false;
					this.InsuranceCompanyCollectionViaEligibility.Add((InsuranceCompanyEntity)entity);
					this.InsuranceCompanyCollectionViaEligibility.IsReadOnly = true;
					break;
				case "LanguageCollectionViaHealthPlanCallQueueCriteria":
					this.LanguageCollectionViaHealthPlanCallQueueCriteria.IsReadOnly = false;
					this.LanguageCollectionViaHealthPlanCallQueueCriteria.Add((LanguageEntity)entity);
					this.LanguageCollectionViaHealthPlanCallQueueCriteria.IsReadOnly = true;
					break;
				case "LanguageCollectionViaCallQueueCustomer_":
					this.LanguageCollectionViaCallQueueCustomer_.IsReadOnly = false;
					this.LanguageCollectionViaCallQueueCustomer_.Add((LanguageEntity)entity);
					this.LanguageCollectionViaCallQueueCustomer_.IsReadOnly = true;
					break;
				case "LanguageCollectionViaCallQueueCustomer__":
					this.LanguageCollectionViaCallQueueCustomer__.IsReadOnly = false;
					this.LanguageCollectionViaCallQueueCustomer__.Add((LanguageEntity)entity);
					this.LanguageCollectionViaCallQueueCustomer__.IsReadOnly = true;
					break;
				case "LanguageCollectionViaCallQueueCustomer":
					this.LanguageCollectionViaCallQueueCustomer.IsReadOnly = false;
					this.LanguageCollectionViaCallQueueCustomer.Add((LanguageEntity)entity);
					this.LanguageCollectionViaCallQueueCustomer.IsReadOnly = true;
					break;
				case "LanguageCollectionViaHealthPlanCallQueueCriteria_":
					this.LanguageCollectionViaHealthPlanCallQueueCriteria_.IsReadOnly = false;
					this.LanguageCollectionViaHealthPlanCallQueueCriteria_.Add((LanguageEntity)entity);
					this.LanguageCollectionViaHealthPlanCallQueueCriteria_.IsReadOnly = true;
					break;
				case "LookupCollectionViaUncontactedCustomerCallQueue":
					this.LookupCollectionViaUncontactedCustomerCallQueue.IsReadOnly = false;
					this.LookupCollectionViaUncontactedCustomerCallQueue.Add((LookupEntity)entity);
					this.LookupCollectionViaUncontactedCustomerCallQueue.IsReadOnly = true;
					break;
				case "LookupCollectionViaFillEventCallQueue":
					this.LookupCollectionViaFillEventCallQueue.IsReadOnly = false;
					this.LookupCollectionViaFillEventCallQueue.Add((LookupEntity)entity);
					this.LookupCollectionViaFillEventCallQueue.IsReadOnly = true;
					break;
				case "LookupCollectionViaTestPerformedExternally_":
					this.LookupCollectionViaTestPerformedExternally_.IsReadOnly = false;
					this.LookupCollectionViaTestPerformedExternally_.Add((LookupEntity)entity);
					this.LookupCollectionViaTestPerformedExternally_.IsReadOnly = true;
					break;
				case "LookupCollectionViaLanguageBarrierCallQueue":
					this.LookupCollectionViaLanguageBarrierCallQueue.IsReadOnly = false;
					this.LookupCollectionViaLanguageBarrierCallQueue.Add((LookupEntity)entity);
					this.LookupCollectionViaLanguageBarrierCallQueue.IsReadOnly = true;
					break;
				case "LookupCollectionViaMedicationUpload":
					this.LookupCollectionViaMedicationUpload.IsReadOnly = false;
					this.LookupCollectionViaMedicationUpload.Add((LookupEntity)entity);
					this.LookupCollectionViaMedicationUpload.IsReadOnly = true;
					break;
				case "LookupCollectionViaHostFacilityRanking":
					this.LookupCollectionViaHostFacilityRanking.IsReadOnly = false;
					this.LookupCollectionViaHostFacilityRanking.Add((LookupEntity)entity);
					this.LookupCollectionViaHostFacilityRanking.IsReadOnly = true;
					break;
				case "LookupCollectionViaHostFacilityRanking_":
					this.LookupCollectionViaHostFacilityRanking_.IsReadOnly = false;
					this.LookupCollectionViaHostFacilityRanking_.Add((LookupEntity)entity);
					this.LookupCollectionViaHostFacilityRanking_.IsReadOnly = true;
					break;
				case "LookupCollectionViaMailRoundCallQueue":
					this.LookupCollectionViaMailRoundCallQueue.IsReadOnly = false;
					this.LookupCollectionViaMailRoundCallQueue.Add((LookupEntity)entity);
					this.LookupCollectionViaMailRoundCallQueue.IsReadOnly = true;
					break;
				case "LookupCollectionViaHostPaymentTransaction_":
					this.LookupCollectionViaHostPaymentTransaction_.IsReadOnly = false;
					this.LookupCollectionViaHostPaymentTransaction_.Add((LookupEntity)entity);
					this.LookupCollectionViaHostPaymentTransaction_.IsReadOnly = true;
					break;
				case "LookupCollectionViaHostPayment":
					this.LookupCollectionViaHostPayment.IsReadOnly = false;
					this.LookupCollectionViaHostPayment.Add((LookupEntity)entity);
					this.LookupCollectionViaHostPayment.IsReadOnly = true;
					break;
				case "LookupCollectionViaHostPaymentTransaction":
					this.LookupCollectionViaHostPaymentTransaction.IsReadOnly = false;
					this.LookupCollectionViaHostPaymentTransaction.Add((LookupEntity)entity);
					this.LookupCollectionViaHostPaymentTransaction.IsReadOnly = true;
					break;
				case "LookupCollectionViaHostPayment_":
					this.LookupCollectionViaHostPayment_.IsReadOnly = false;
					this.LookupCollectionViaHostPayment_.Add((LookupEntity)entity);
					this.LookupCollectionViaHostPayment_.IsReadOnly = true;
					break;
				case "LookupCollectionViaKynLabValues":
					this.LookupCollectionViaKynLabValues.IsReadOnly = false;
					this.LookupCollectionViaKynLabValues.Add((LookupEntity)entity);
					this.LookupCollectionViaKynLabValues.IsReadOnly = true;
					break;
				case "LookupCollectionViaExportableReportsQueue":
					this.LookupCollectionViaExportableReportsQueue.IsReadOnly = false;
					this.LookupCollectionViaExportableReportsQueue.Add((LookupEntity)entity);
					this.LookupCollectionViaExportableReportsQueue.IsReadOnly = true;
					break;
				case "LookupCollectionViaFile":
					this.LookupCollectionViaFile.IsReadOnly = false;
					this.LookupCollectionViaFile.Add((LookupEntity)entity);
					this.LookupCollectionViaFile.IsReadOnly = true;
					break;
				case "LookupCollectionViaTestPerformedExternally":
					this.LookupCollectionViaTestPerformedExternally.IsReadOnly = false;
					this.LookupCollectionViaTestPerformedExternally.Add((LookupEntity)entity);
					this.LookupCollectionViaTestPerformedExternally.IsReadOnly = true;
					break;
				case "LookupCollectionViaKynLabValues_":
					this.LookupCollectionViaKynLabValues_.IsReadOnly = false;
					this.LookupCollectionViaKynLabValues_.Add((LookupEntity)entity);
					this.LookupCollectionViaKynLabValues_.IsReadOnly = true;
					break;
				case "LookupCollectionViaPreQualificationQuestion":
					this.LookupCollectionViaPreQualificationQuestion.IsReadOnly = false;
					this.LookupCollectionViaPreQualificationQuestion.Add((LookupEntity)entity);
					this.LookupCollectionViaPreQualificationQuestion.IsReadOnly = true;
					break;
				case "LookupCollectionViaPrintOrderItemTracking__":
					this.LookupCollectionViaPrintOrderItemTracking__.IsReadOnly = false;
					this.LookupCollectionViaPrintOrderItemTracking__.Add((LookupEntity)entity);
					this.LookupCollectionViaPrintOrderItemTracking__.IsReadOnly = true;
					break;
				case "LookupCollectionViaPcpDisposition_":
					this.LookupCollectionViaPcpDisposition_.IsReadOnly = false;
					this.LookupCollectionViaPcpDisposition_.Add((LookupEntity)entity);
					this.LookupCollectionViaPcpDisposition_.IsReadOnly = true;
					break;
				case "LookupCollectionViaPcpAppointment_":
					this.LookupCollectionViaPcpAppointment_.IsReadOnly = false;
					this.LookupCollectionViaPcpAppointment_.Add((LookupEntity)entity);
					this.LookupCollectionViaPcpAppointment_.IsReadOnly = true;
					break;
				case "LookupCollectionViaPcpDisposition":
					this.LookupCollectionViaPcpDisposition.IsReadOnly = false;
					this.LookupCollectionViaPcpDisposition.Add((LookupEntity)entity);
					this.LookupCollectionViaPcpDisposition.IsReadOnly = true;
					break;
				case "LookupCollectionViaRefundRequest":
					this.LookupCollectionViaRefundRequest.IsReadOnly = false;
					this.LookupCollectionViaRefundRequest.Add((LookupEntity)entity);
					this.LookupCollectionViaRefundRequest.IsReadOnly = true;
					break;
				case "LookupCollectionViaRapsUpload":
					this.LookupCollectionViaRapsUpload.IsReadOnly = false;
					this.LookupCollectionViaRapsUpload.Add((LookupEntity)entity);
					this.LookupCollectionViaRapsUpload.IsReadOnly = true;
					break;
				case "LookupCollectionViaRefundRequest_":
					this.LookupCollectionViaRefundRequest_.IsReadOnly = false;
					this.LookupCollectionViaRefundRequest_.Add((LookupEntity)entity);
					this.LookupCollectionViaRefundRequest_.IsReadOnly = true;
					break;
				case "LookupCollectionViaPrintOrderItemTracking___":
					this.LookupCollectionViaPrintOrderItemTracking___.IsReadOnly = false;
					this.LookupCollectionViaPrintOrderItemTracking___.Add((LookupEntity)entity);
					this.LookupCollectionViaPrintOrderItemTracking___.IsReadOnly = true;
					break;
				case "LookupCollectionViaProspectCustomer":
					this.LookupCollectionViaProspectCustomer.IsReadOnly = false;
					this.LookupCollectionViaProspectCustomer.Add((LookupEntity)entity);
					this.LookupCollectionViaProspectCustomer.IsReadOnly = true;
					break;
				case "LookupCollectionViaPcpAppointment":
					this.LookupCollectionViaPcpAppointment.IsReadOnly = false;
					this.LookupCollectionViaPcpAppointment.Add((LookupEntity)entity);
					this.LookupCollectionViaPcpAppointment.IsReadOnly = true;
					break;
				case "LookupCollectionViaHafTemplate":
					this.LookupCollectionViaHafTemplate.IsReadOnly = false;
					this.LookupCollectionViaHafTemplate.Add((LookupEntity)entity);
					this.LookupCollectionViaHafTemplate.IsReadOnly = true;
					break;
				case "LookupCollectionViaHafTemplate_":
					this.LookupCollectionViaHafTemplate_.IsReadOnly = false;
					this.LookupCollectionViaHafTemplate_.Add((LookupEntity)entity);
					this.LookupCollectionViaHafTemplate_.IsReadOnly = true;
					break;
				case "LookupCollectionViaSuspectConditionUpload":
					this.LookupCollectionViaSuspectConditionUpload.IsReadOnly = false;
					this.LookupCollectionViaSuspectConditionUpload.Add((LookupEntity)entity);
					this.LookupCollectionViaSuspectConditionUpload.IsReadOnly = true;
					break;
				case "LookupCollectionViaMergeCustomerUpload":
					this.LookupCollectionViaMergeCustomerUpload.IsReadOnly = false;
					this.LookupCollectionViaMergeCustomerUpload.Add((LookupEntity)entity);
					this.LookupCollectionViaMergeCustomerUpload.IsReadOnly = true;
					break;
				case "LookupCollectionViaNoShowCallQueue":
					this.LookupCollectionViaNoShowCallQueue.IsReadOnly = false;
					this.LookupCollectionViaNoShowCallQueue.Add((LookupEntity)entity);
					this.LookupCollectionViaNoShowCallQueue.IsReadOnly = true;
					break;
				case "LookupCollectionViaStaffEventScheduleUpload":
					this.LookupCollectionViaStaffEventScheduleUpload.IsReadOnly = false;
					this.LookupCollectionViaStaffEventScheduleUpload.Add((LookupEntity)entity);
					this.LookupCollectionViaStaffEventScheduleUpload.IsReadOnly = true;
					break;
				case "LookupCollectionViaHealthPlanRevenue":
					this.LookupCollectionViaHealthPlanRevenue.IsReadOnly = false;
					this.LookupCollectionViaHealthPlanRevenue.Add((LookupEntity)entity);
					this.LookupCollectionViaHealthPlanRevenue.IsReadOnly = true;
					break;
				case "LookupCollectionViaHealthPlanRevenue_":
					this.LookupCollectionViaHealthPlanRevenue_.IsReadOnly = false;
					this.LookupCollectionViaHealthPlanRevenue_.Add((LookupEntity)entity);
					this.LookupCollectionViaHealthPlanRevenue_.IsReadOnly = true;
					break;
				case "LookupCollectionViaHafTemplate__":
					this.LookupCollectionViaHafTemplate__.IsReadOnly = false;
					this.LookupCollectionViaHafTemplate__.Add((LookupEntity)entity);
					this.LookupCollectionViaHafTemplate__.IsReadOnly = true;
					break;
				case "LookupCollectionViaHafTemplate___":
					this.LookupCollectionViaHafTemplate___.IsReadOnly = false;
					this.LookupCollectionViaHafTemplate___.Add((LookupEntity)entity);
					this.LookupCollectionViaHafTemplate___.IsReadOnly = true;
					break;
				case "LookupCollectionViaCustomerProfileHistory___":
					this.LookupCollectionViaCustomerProfileHistory___.IsReadOnly = false;
					this.LookupCollectionViaCustomerProfileHistory___.Add((LookupEntity)entity);
					this.LookupCollectionViaCustomerProfileHistory___.IsReadOnly = true;
					break;
				case "LookupCollectionViaCustomerProfileHistory__":
					this.LookupCollectionViaCustomerProfileHistory__.IsReadOnly = false;
					this.LookupCollectionViaCustomerProfileHistory__.Add((LookupEntity)entity);
					this.LookupCollectionViaCustomerProfileHistory__.IsReadOnly = true;
					break;
				case "LookupCollectionViaCustomerProfileHistory":
					this.LookupCollectionViaCustomerProfileHistory.IsReadOnly = false;
					this.LookupCollectionViaCustomerProfileHistory.Add((LookupEntity)entity);
					this.LookupCollectionViaCustomerProfileHistory.IsReadOnly = true;
					break;
				case "LookupCollectionViaCustomEventNotification":
					this.LookupCollectionViaCustomEventNotification.IsReadOnly = false;
					this.LookupCollectionViaCustomEventNotification.Add((LookupEntity)entity);
					this.LookupCollectionViaCustomEventNotification.IsReadOnly = true;
					break;
				case "LookupCollectionViaCustomerRegistrationNotes":
					this.LookupCollectionViaCustomerRegistrationNotes.IsReadOnly = false;
					this.LookupCollectionViaCustomerRegistrationNotes.Add((LookupEntity)entity);
					this.LookupCollectionViaCustomerRegistrationNotes.IsReadOnly = true;
					break;
				case "LookupCollectionViaCustomerProfileHistory_":
					this.LookupCollectionViaCustomerProfileHistory_.IsReadOnly = false;
					this.LookupCollectionViaCustomerProfileHistory_.Add((LookupEntity)entity);
					this.LookupCollectionViaCustomerProfileHistory_.IsReadOnly = true;
					break;
				case "LookupCollectionViaCustomerPrimaryCarePhysician__":
					this.LookupCollectionViaCustomerPrimaryCarePhysician__.IsReadOnly = false;
					this.LookupCollectionViaCustomerPrimaryCarePhysician__.Add((LookupEntity)entity);
					this.LookupCollectionViaCustomerPrimaryCarePhysician__.IsReadOnly = true;
					break;
				case "LookupCollectionViaCustomerEventTestState__":
					this.LookupCollectionViaCustomerEventTestState__.IsReadOnly = false;
					this.LookupCollectionViaCustomerEventTestState__.Add((LookupEntity)entity);
					this.LookupCollectionViaCustomerEventTestState__.IsReadOnly = true;
					break;
				case "LookupCollectionViaCustomerEventTestState_":
					this.LookupCollectionViaCustomerEventTestState_.IsReadOnly = false;
					this.LookupCollectionViaCustomerEventTestState_.Add((LookupEntity)entity);
					this.LookupCollectionViaCustomerEventTestState_.IsReadOnly = true;
					break;
				case "LookupCollectionViaCustomerEventTestState":
					this.LookupCollectionViaCustomerEventTestState.IsReadOnly = false;
					this.LookupCollectionViaCustomerEventTestState.Add((LookupEntity)entity);
					this.LookupCollectionViaCustomerEventTestState.IsReadOnly = true;
					break;
				case "LookupCollectionViaCustomerPrimaryCarePhysician_":
					this.LookupCollectionViaCustomerPrimaryCarePhysician_.IsReadOnly = false;
					this.LookupCollectionViaCustomerPrimaryCarePhysician_.Add((LookupEntity)entity);
					this.LookupCollectionViaCustomerPrimaryCarePhysician_.IsReadOnly = true;
					break;
				case "LookupCollectionViaCustomerPrimaryCarePhysician":
					this.LookupCollectionViaCustomerPrimaryCarePhysician.IsReadOnly = false;
					this.LookupCollectionViaCustomerPrimaryCarePhysician.Add((LookupEntity)entity);
					this.LookupCollectionViaCustomerPrimaryCarePhysician.IsReadOnly = true;
					break;
				case "LookupCollectionViaCustomerPhoneNumberUpdateUpload":
					this.LookupCollectionViaCustomerPhoneNumberUpdateUpload.IsReadOnly = false;
					this.LookupCollectionViaCustomerPhoneNumberUpdateUpload.Add((LookupEntity)entity);
					this.LookupCollectionViaCustomerPhoneNumberUpdateUpload.IsReadOnly = true;
					break;
				case "LookupCollectionViaEligibilityUpload":
					this.LookupCollectionViaEligibilityUpload.IsReadOnly = false;
					this.LookupCollectionViaEligibilityUpload.Add((LookupEntity)entity);
					this.LookupCollectionViaEligibilityUpload.IsReadOnly = true;
					break;
				case "LookupCollectionViaEventCustomerResult__":
					this.LookupCollectionViaEventCustomerResult__.IsReadOnly = false;
					this.LookupCollectionViaEventCustomerResult__.Add((LookupEntity)entity);
					this.LookupCollectionViaEventCustomerResult__.IsReadOnly = true;
					break;
				case "LookupCollectionViaEventCustomerResult______":
					this.LookupCollectionViaEventCustomerResult______.IsReadOnly = false;
					this.LookupCollectionViaEventCustomerResult______.Add((LookupEntity)entity);
					this.LookupCollectionViaEventCustomerResult______.IsReadOnly = true;
					break;
				case "LookupCollectionViaEventCustomerResult_____":
					this.LookupCollectionViaEventCustomerResult_____.IsReadOnly = false;
					this.LookupCollectionViaEventCustomerResult_____.Add((LookupEntity)entity);
					this.LookupCollectionViaEventCustomerResult_____.IsReadOnly = true;
					break;
				case "LookupCollectionViaEventCustomerResult_":
					this.LookupCollectionViaEventCustomerResult_.IsReadOnly = false;
					this.LookupCollectionViaEventCustomerResult_.Add((LookupEntity)entity);
					this.LookupCollectionViaEventCustomerResult_.IsReadOnly = true;
					break;
				case "LookupCollectionViaEventCustomerResult____":
					this.LookupCollectionViaEventCustomerResult____.IsReadOnly = false;
					this.LookupCollectionViaEventCustomerResult____.Add((LookupEntity)entity);
					this.LookupCollectionViaEventCustomerResult____.IsReadOnly = true;
					break;
				case "LookupCollectionViaEventCustomerResult___":
					this.LookupCollectionViaEventCustomerResult___.IsReadOnly = false;
					this.LookupCollectionViaEventCustomerResult___.Add((LookupEntity)entity);
					this.LookupCollectionViaEventCustomerResult___.IsReadOnly = true;
					break;
				case "LookupCollectionViaEventCustomerResult________":
					this.LookupCollectionViaEventCustomerResult________.IsReadOnly = false;
					this.LookupCollectionViaEventCustomerResult________.Add((LookupEntity)entity);
					this.LookupCollectionViaEventCustomerResult________.IsReadOnly = true;
					break;
				case "LookupCollectionViaEventAppointmentCancellationLog":
					this.LookupCollectionViaEventAppointmentCancellationLog.IsReadOnly = false;
					this.LookupCollectionViaEventAppointmentCancellationLog.Add((LookupEntity)entity);
					this.LookupCollectionViaEventAppointmentCancellationLog.IsReadOnly = true;
					break;
				case "LookupCollectionViaEmailTemplate_":
					this.LookupCollectionViaEmailTemplate_.IsReadOnly = false;
					this.LookupCollectionViaEmailTemplate_.Add((LookupEntity)entity);
					this.LookupCollectionViaEmailTemplate_.IsReadOnly = true;
					break;
				case "LookupCollectionViaEmailTemplate":
					this.LookupCollectionViaEmailTemplate.IsReadOnly = false;
					this.LookupCollectionViaEmailTemplate.Add((LookupEntity)entity);
					this.LookupCollectionViaEmailTemplate.IsReadOnly = true;
					break;
				case "LookupCollectionViaEventCustomerResult_______":
					this.LookupCollectionViaEventCustomerResult_______.IsReadOnly = false;
					this.LookupCollectionViaEventCustomerResult_______.Add((LookupEntity)entity);
					this.LookupCollectionViaEventCustomerResult_______.IsReadOnly = true;
					break;
				case "LookupCollectionViaEventCustomerResult":
					this.LookupCollectionViaEventCustomerResult.IsReadOnly = false;
					this.LookupCollectionViaEventCustomerResult.Add((LookupEntity)entity);
					this.LookupCollectionViaEventCustomerResult.IsReadOnly = true;
					break;
				case "LookupCollectionViaEventAppointmentChangeLog":
					this.LookupCollectionViaEventAppointmentChangeLog.IsReadOnly = false;
					this.LookupCollectionViaEventAppointmentChangeLog.Add((LookupEntity)entity);
					this.LookupCollectionViaEventAppointmentChangeLog.IsReadOnly = true;
					break;
				case "LookupCollectionViaCustomerActivityTypeUpload":
					this.LookupCollectionViaCustomerActivityTypeUpload.IsReadOnly = false;
					this.LookupCollectionViaCustomerActivityTypeUpload.Add((LookupEntity)entity);
					this.LookupCollectionViaCustomerActivityTypeUpload.IsReadOnly = true;
					break;
				case "LookupCollectionViaCalls":
					this.LookupCollectionViaCalls.IsReadOnly = false;
					this.LookupCollectionViaCalls.Add((LookupEntity)entity);
					this.LookupCollectionViaCalls.IsReadOnly = true;
					break;
				case "LookupCollectionViaCalls_":
					this.LookupCollectionViaCalls_.IsReadOnly = false;
					this.LookupCollectionViaCalls_.Add((LookupEntity)entity);
					this.LookupCollectionViaCalls_.IsReadOnly = true;
					break;
				case "LookupCollectionViaCallRoundCallQueue":
					this.LookupCollectionViaCallRoundCallQueue.IsReadOnly = false;
					this.LookupCollectionViaCallRoundCallQueue.Add((LookupEntity)entity);
					this.LookupCollectionViaCallRoundCallQueue.IsReadOnly = true;
					break;
				case "LookupCollectionViaCampaign":
					this.LookupCollectionViaCampaign.IsReadOnly = false;
					this.LookupCollectionViaCampaign.Add((LookupEntity)entity);
					this.LookupCollectionViaCampaign.IsReadOnly = true;
					break;
				case "LookupCollectionViaCallUpload":
					this.LookupCollectionViaCallUpload.IsReadOnly = false;
					this.LookupCollectionViaCallUpload.Add((LookupEntity)entity);
					this.LookupCollectionViaCallUpload.IsReadOnly = true;
					break;
				case "LookupCollectionViaCalls__":
					this.LookupCollectionViaCalls__.IsReadOnly = false;
					this.LookupCollectionViaCalls__.Add((LookupEntity)entity);
					this.LookupCollectionViaCalls__.IsReadOnly = true;
					break;
				case "LookupCollectionViaCallQueueCustomer__":
					this.LookupCollectionViaCallQueueCustomer__.IsReadOnly = false;
					this.LookupCollectionViaCallQueueCustomer__.Add((LookupEntity)entity);
					this.LookupCollectionViaCallQueueCustomer__.IsReadOnly = true;
					break;
				case "LookupCollectionViaCallCenterTeam":
					this.LookupCollectionViaCallCenterTeam.IsReadOnly = false;
					this.LookupCollectionViaCallCenterTeam.Add((LookupEntity)entity);
					this.LookupCollectionViaCallCenterTeam.IsReadOnly = true;
					break;
				case "LookupCollectionViaAccountHraChatQuestionnaire_":
					this.LookupCollectionViaAccountHraChatQuestionnaire_.IsReadOnly = false;
					this.LookupCollectionViaAccountHraChatQuestionnaire_.Add((LookupEntity)entity);
					this.LookupCollectionViaAccountHraChatQuestionnaire_.IsReadOnly = true;
					break;
				case "LookupCollectionViaAccountHraChatQuestionnaire":
					this.LookupCollectionViaAccountHraChatQuestionnaire.IsReadOnly = false;
					this.LookupCollectionViaAccountHraChatQuestionnaire.Add((LookupEntity)entity);
					this.LookupCollectionViaAccountHraChatQuestionnaire.IsReadOnly = true;
					break;
				case "LookupCollectionViaCallQueueCustomer_":
					this.LookupCollectionViaCallQueueCustomer_.IsReadOnly = false;
					this.LookupCollectionViaCallQueueCustomer_.Add((LookupEntity)entity);
					this.LookupCollectionViaCallQueueCustomer_.IsReadOnly = true;
					break;
				case "LookupCollectionViaCallQueueCustomer":
					this.LookupCollectionViaCallQueueCustomer.IsReadOnly = false;
					this.LookupCollectionViaCallQueueCustomer.Add((LookupEntity)entity);
					this.LookupCollectionViaCallQueueCustomer.IsReadOnly = true;
					break;
				case "LookupCollectionViaCallCenterTeam_":
					this.LookupCollectionViaCallCenterTeam_.IsReadOnly = false;
					this.LookupCollectionViaCallCenterTeam_.Add((LookupEntity)entity);
					this.LookupCollectionViaCallCenterTeam_.IsReadOnly = true;
					break;
				case "LookupCollectionViaCampaign_":
					this.LookupCollectionViaCampaign_.IsReadOnly = false;
					this.LookupCollectionViaCampaign_.Add((LookupEntity)entity);
					this.LookupCollectionViaCampaign_.IsReadOnly = true;
					break;
				case "LookupCollectionViaClinicalTestQualificationCriteria_":
					this.LookupCollectionViaClinicalTestQualificationCriteria_.IsReadOnly = false;
					this.LookupCollectionViaClinicalTestQualificationCriteria_.Add((LookupEntity)entity);
					this.LookupCollectionViaClinicalTestQualificationCriteria_.IsReadOnly = true;
					break;
				case "LookupCollectionViaClinicalTestQualificationCriteria":
					this.LookupCollectionViaClinicalTestQualificationCriteria.IsReadOnly = false;
					this.LookupCollectionViaClinicalTestQualificationCriteria.Add((LookupEntity)entity);
					this.LookupCollectionViaClinicalTestQualificationCriteria.IsReadOnly = true;
					break;
				case "LookupCollectionViaCheckListTemplate_":
					this.LookupCollectionViaCheckListTemplate_.IsReadOnly = false;
					this.LookupCollectionViaCheckListTemplate_.Add((LookupEntity)entity);
					this.LookupCollectionViaCheckListTemplate_.IsReadOnly = true;
					break;
				case "LookupCollectionViaCorporateUpload":
					this.LookupCollectionViaCorporateUpload.IsReadOnly = false;
					this.LookupCollectionViaCorporateUpload.Add((LookupEntity)entity);
					this.LookupCollectionViaCorporateUpload.IsReadOnly = true;
					break;
				case "LookupCollectionViaClinicalTestQualificationCriteria___":
					this.LookupCollectionViaClinicalTestQualificationCriteria___.IsReadOnly = false;
					this.LookupCollectionViaClinicalTestQualificationCriteria___.Add((LookupEntity)entity);
					this.LookupCollectionViaClinicalTestQualificationCriteria___.IsReadOnly = true;
					break;
				case "LookupCollectionViaClinicalTestQualificationCriteria__":
					this.LookupCollectionViaClinicalTestQualificationCriteria__.IsReadOnly = false;
					this.LookupCollectionViaClinicalTestQualificationCriteria__.Add((LookupEntity)entity);
					this.LookupCollectionViaClinicalTestQualificationCriteria__.IsReadOnly = true;
					break;
				case "LookupCollectionViaCheckListTemplate":
					this.LookupCollectionViaCheckListTemplate.IsReadOnly = false;
					this.LookupCollectionViaCheckListTemplate.Add((LookupEntity)entity);
					this.LookupCollectionViaCheckListTemplate.IsReadOnly = true;
					break;
				case "LookupCollectionViaCampaignActivity":
					this.LookupCollectionViaCampaignActivity.IsReadOnly = false;
					this.LookupCollectionViaCampaignActivity.Add((LookupEntity)entity);
					this.LookupCollectionViaCampaignActivity.IsReadOnly = true;
					break;
				case "LookupCollectionViaCampaign___":
					this.LookupCollectionViaCampaign___.IsReadOnly = false;
					this.LookupCollectionViaCampaign___.Add((LookupEntity)entity);
					this.LookupCollectionViaCampaign___.IsReadOnly = true;
					break;
				case "LookupCollectionViaCampaign__":
					this.LookupCollectionViaCampaign__.IsReadOnly = false;
					this.LookupCollectionViaCampaign__.Add((LookupEntity)entity);
					this.LookupCollectionViaCampaign__.IsReadOnly = true;
					break;
				case "LookupCollectionViaCheckListAnswer_":
					this.LookupCollectionViaCheckListAnswer_.IsReadOnly = false;
					this.LookupCollectionViaCheckListAnswer_.Add((LookupEntity)entity);
					this.LookupCollectionViaCheckListAnswer_.IsReadOnly = true;
					break;
				case "LookupCollectionViaCheckListAnswer":
					this.LookupCollectionViaCheckListAnswer.IsReadOnly = false;
					this.LookupCollectionViaCheckListAnswer.Add((LookupEntity)entity);
					this.LookupCollectionViaCheckListAnswer.IsReadOnly = true;
					break;
				case "LookupCollectionViaCampaignActivity_":
					this.LookupCollectionViaCampaignActivity_.IsReadOnly = false;
					this.LookupCollectionViaCampaignActivity_.Add((LookupEntity)entity);
					this.LookupCollectionViaCampaignActivity_.IsReadOnly = true;
					break;
				case "LookupCollectionViaEvents________":
					this.LookupCollectionViaEvents________.IsReadOnly = false;
					this.LookupCollectionViaEvents________.Add((LookupEntity)entity);
					this.LookupCollectionViaEvents________.IsReadOnly = true;
					break;
				case "LookupCollectionViaEvents______________":
					this.LookupCollectionViaEvents______________.IsReadOnly = false;
					this.LookupCollectionViaEvents______________.Add((LookupEntity)entity);
					this.LookupCollectionViaEvents______________.IsReadOnly = true;
					break;
				case "LookupCollectionViaEvents_________":
					this.LookupCollectionViaEvents_________.IsReadOnly = false;
					this.LookupCollectionViaEvents_________.Add((LookupEntity)entity);
					this.LookupCollectionViaEvents_________.IsReadOnly = true;
					break;
				case "LookupCollectionViaEvents_____________":
					this.LookupCollectionViaEvents_____________.IsReadOnly = false;
					this.LookupCollectionViaEvents_____________.Add((LookupEntity)entity);
					this.LookupCollectionViaEvents_____________.IsReadOnly = true;
					break;
				case "LookupCollectionViaEvents___________________":
					this.LookupCollectionViaEvents___________________.IsReadOnly = false;
					this.LookupCollectionViaEvents___________________.Add((LookupEntity)entity);
					this.LookupCollectionViaEvents___________________.IsReadOnly = true;
					break;
				case "LookupCollectionViaEvents__________________":
					this.LookupCollectionViaEvents__________________.IsReadOnly = false;
					this.LookupCollectionViaEvents__________________.Add((LookupEntity)entity);
					this.LookupCollectionViaEvents__________________.IsReadOnly = true;
					break;
				case "LookupCollectionViaEvents_______________":
					this.LookupCollectionViaEvents_______________.IsReadOnly = false;
					this.LookupCollectionViaEvents_______________.Add((LookupEntity)entity);
					this.LookupCollectionViaEvents_______________.IsReadOnly = true;
					break;
				case "LookupCollectionViaEvents_______________________":
					this.LookupCollectionViaEvents_______________________.IsReadOnly = false;
					this.LookupCollectionViaEvents_______________________.Add((LookupEntity)entity);
					this.LookupCollectionViaEvents_______________________.IsReadOnly = true;
					break;
				case "LookupCollectionViaEvents____________":
					this.LookupCollectionViaEvents____________.IsReadOnly = false;
					this.LookupCollectionViaEvents____________.Add((LookupEntity)entity);
					this.LookupCollectionViaEvents____________.IsReadOnly = true;
					break;
				case "LookupCollectionViaEvents____":
					this.LookupCollectionViaEvents____.IsReadOnly = false;
					this.LookupCollectionViaEvents____.Add((LookupEntity)entity);
					this.LookupCollectionViaEvents____.IsReadOnly = true;
					break;
				case "LookupCollectionViaEvents________________":
					this.LookupCollectionViaEvents________________.IsReadOnly = false;
					this.LookupCollectionViaEvents________________.Add((LookupEntity)entity);
					this.LookupCollectionViaEvents________________.IsReadOnly = true;
					break;
				case "LookupCollectionViaEvents_______":
					this.LookupCollectionViaEvents_______.IsReadOnly = false;
					this.LookupCollectionViaEvents_______.Add((LookupEntity)entity);
					this.LookupCollectionViaEvents_______.IsReadOnly = true;
					break;
				case "LookupCollectionViaEvents_____":
					this.LookupCollectionViaEvents_____.IsReadOnly = false;
					this.LookupCollectionViaEvents_____.Add((LookupEntity)entity);
					this.LookupCollectionViaEvents_____.IsReadOnly = true;
					break;
				case "LookupCollectionViaEvents__________":
					this.LookupCollectionViaEvents__________.IsReadOnly = false;
					this.LookupCollectionViaEvents__________.Add((LookupEntity)entity);
					this.LookupCollectionViaEvents__________.IsReadOnly = true;
					break;
				case "LookupCollectionViaEvents_________________":
					this.LookupCollectionViaEvents_________________.IsReadOnly = false;
					this.LookupCollectionViaEvents_________________.Add((LookupEntity)entity);
					this.LookupCollectionViaEvents_________________.IsReadOnly = true;
					break;
				case "LookupCollectionViaEvents___________":
					this.LookupCollectionViaEvents___________.IsReadOnly = false;
					this.LookupCollectionViaEvents___________.Add((LookupEntity)entity);
					this.LookupCollectionViaEvents___________.IsReadOnly = true;
					break;
				case "LookupCollectionViaEvents______________________":
					this.LookupCollectionViaEvents______________________.IsReadOnly = false;
					this.LookupCollectionViaEvents______________________.Add((LookupEntity)entity);
					this.LookupCollectionViaEvents______________________.IsReadOnly = true;
					break;
				case "LookupCollectionViaEvents":
					this.LookupCollectionViaEvents.IsReadOnly = false;
					this.LookupCollectionViaEvents.Add((LookupEntity)entity);
					this.LookupCollectionViaEvents.IsReadOnly = true;
					break;
				case "LookupCollectionViaEvents______":
					this.LookupCollectionViaEvents______.IsReadOnly = false;
					this.LookupCollectionViaEvents______.Add((LookupEntity)entity);
					this.LookupCollectionViaEvents______.IsReadOnly = true;
					break;
				case "LookupCollectionViaEvents__":
					this.LookupCollectionViaEvents__.IsReadOnly = false;
					this.LookupCollectionViaEvents__.Add((LookupEntity)entity);
					this.LookupCollectionViaEvents__.IsReadOnly = true;
					break;
				case "LookupCollectionViaEventCustomers___":
					this.LookupCollectionViaEventCustomers___.IsReadOnly = false;
					this.LookupCollectionViaEventCustomers___.Add((LookupEntity)entity);
					this.LookupCollectionViaEventCustomers___.IsReadOnly = true;
					break;
				case "LookupCollectionViaEventCustomers":
					this.LookupCollectionViaEventCustomers.IsReadOnly = false;
					this.LookupCollectionViaEventCustomers.Add((LookupEntity)entity);
					this.LookupCollectionViaEventCustomers.IsReadOnly = true;
					break;
				case "LookupCollectionViaEventCustomers_":
					this.LookupCollectionViaEventCustomers_.IsReadOnly = false;
					this.LookupCollectionViaEventCustomers_.Add((LookupEntity)entity);
					this.LookupCollectionViaEventCustomers_.IsReadOnly = true;
					break;
				case "LookupCollectionViaEventCustomers__":
					this.LookupCollectionViaEventCustomers__.IsReadOnly = false;
					this.LookupCollectionViaEventCustomers__.Add((LookupEntity)entity);
					this.LookupCollectionViaEventCustomers__.IsReadOnly = true;
					break;
				case "LookupCollectionViaEvents___":
					this.LookupCollectionViaEvents___.IsReadOnly = false;
					this.LookupCollectionViaEvents___.Add((LookupEntity)entity);
					this.LookupCollectionViaEvents___.IsReadOnly = true;
					break;
				case "LookupCollectionViaEvents________________________":
					this.LookupCollectionViaEvents________________________.IsReadOnly = false;
					this.LookupCollectionViaEvents________________________.Add((LookupEntity)entity);
					this.LookupCollectionViaEvents________________________.IsReadOnly = true;
					break;
				case "LookupCollectionViaEvents____________________":
					this.LookupCollectionViaEvents____________________.IsReadOnly = false;
					this.LookupCollectionViaEvents____________________.Add((LookupEntity)entity);
					this.LookupCollectionViaEvents____________________.IsReadOnly = true;
					break;
				case "LookupCollectionViaEvents_____________________":
					this.LookupCollectionViaEvents_____________________.IsReadOnly = false;
					this.LookupCollectionViaEvents_____________________.Add((LookupEntity)entity);
					this.LookupCollectionViaEvents_____________________.IsReadOnly = true;
					break;
				case "LookupCollectionViaEvents_":
					this.LookupCollectionViaEvents_.IsReadOnly = false;
					this.LookupCollectionViaEvents_.Add((LookupEntity)entity);
					this.LookupCollectionViaEvents_.IsReadOnly = true;
					break;
				case "MarketingPrintOrderItemCollectionViaPrintOrderItemTracking":
					this.MarketingPrintOrderItemCollectionViaPrintOrderItemTracking.IsReadOnly = false;
					this.MarketingPrintOrderItemCollectionViaPrintOrderItemTracking.Add((MarketingPrintOrderItemEntity)entity);
					this.MarketingPrintOrderItemCollectionViaPrintOrderItemTracking.IsReadOnly = true;
					break;
				case "MarketingPrintOrderItemCollectionViaPrintOrderItemTracking_":
					this.MarketingPrintOrderItemCollectionViaPrintOrderItemTracking_.IsReadOnly = false;
					this.MarketingPrintOrderItemCollectionViaPrintOrderItemTracking_.Add((MarketingPrintOrderItemEntity)entity);
					this.MarketingPrintOrderItemCollectionViaPrintOrderItemTracking_.IsReadOnly = true;
					break;
				case "MedicareQuestionCollectionViaCustomerMedicareQuestionAnswer":
					this.MedicareQuestionCollectionViaCustomerMedicareQuestionAnswer.IsReadOnly = false;
					this.MedicareQuestionCollectionViaCustomerMedicareQuestionAnswer.Add((MedicareQuestionEntity)entity);
					this.MedicareQuestionCollectionViaCustomerMedicareQuestionAnswer.IsReadOnly = true;
					break;
				case "NdcCollectionViaCurrentMedication":
					this.NdcCollectionViaCurrentMedication.IsReadOnly = false;
					this.NdcCollectionViaCurrentMedication.Add((NdcEntity)entity);
					this.NdcCollectionViaCurrentMedication.IsReadOnly = true;
					break;
				case "NotesDetailsCollectionViaPriorityInQueue":
					this.NotesDetailsCollectionViaPriorityInQueue.IsReadOnly = false;
					this.NotesDetailsCollectionViaPriorityInQueue.Add((NotesDetailsEntity)entity);
					this.NotesDetailsCollectionViaPriorityInQueue.IsReadOnly = true;
					break;
				case "NotesDetailsCollectionViaPriorityInQueue_":
					this.NotesDetailsCollectionViaPriorityInQueue_.IsReadOnly = false;
					this.NotesDetailsCollectionViaPriorityInQueue_.Add((NotesDetailsEntity)entity);
					this.NotesDetailsCollectionViaPriorityInQueue_.IsReadOnly = true;
					break;
				case "NotesDetailsCollectionViaCallQueueCustomer_":
					this.NotesDetailsCollectionViaCallQueueCustomer_.IsReadOnly = false;
					this.NotesDetailsCollectionViaCallQueueCustomer_.Add((NotesDetailsEntity)entity);
					this.NotesDetailsCollectionViaCallQueueCustomer_.IsReadOnly = true;
					break;
				case "NotesDetailsCollectionViaEvents":
					this.NotesDetailsCollectionViaEvents.IsReadOnly = false;
					this.NotesDetailsCollectionViaEvents.Add((NotesDetailsEntity)entity);
					this.NotesDetailsCollectionViaEvents.IsReadOnly = true;
					break;
				case "NotesDetailsCollectionViaCallQueueCustomer__":
					this.NotesDetailsCollectionViaCallQueueCustomer__.IsReadOnly = false;
					this.NotesDetailsCollectionViaCallQueueCustomer__.Add((NotesDetailsEntity)entity);
					this.NotesDetailsCollectionViaCallQueueCustomer__.IsReadOnly = true;
					break;
				case "NotesDetailsCollectionViaEvents_":
					this.NotesDetailsCollectionViaEvents_.IsReadOnly = false;
					this.NotesDetailsCollectionViaEvents_.Add((NotesDetailsEntity)entity);
					this.NotesDetailsCollectionViaEvents_.IsReadOnly = true;
					break;
				case "NotesDetailsCollectionViaEvents___":
					this.NotesDetailsCollectionViaEvents___.IsReadOnly = false;
					this.NotesDetailsCollectionViaEvents___.Add((NotesDetailsEntity)entity);
					this.NotesDetailsCollectionViaEvents___.IsReadOnly = true;
					break;
				case "NotesDetailsCollectionViaCallQueueCustomer":
					this.NotesDetailsCollectionViaCallQueueCustomer.IsReadOnly = false;
					this.NotesDetailsCollectionViaCallQueueCustomer.Add((NotesDetailsEntity)entity);
					this.NotesDetailsCollectionViaCallQueueCustomer.IsReadOnly = true;
					break;
				case "NotesDetailsCollectionViaEvents____":
					this.NotesDetailsCollectionViaEvents____.IsReadOnly = false;
					this.NotesDetailsCollectionViaEvents____.Add((NotesDetailsEntity)entity);
					this.NotesDetailsCollectionViaEvents____.IsReadOnly = true;
					break;
				case "NotesDetailsCollectionViaEvents__":
					this.NotesDetailsCollectionViaEvents__.IsReadOnly = false;
					this.NotesDetailsCollectionViaEvents__.Add((NotesDetailsEntity)entity);
					this.NotesDetailsCollectionViaEvents__.IsReadOnly = true;
					break;
				case "NotificationMediumCollectionViaNotificationType":
					this.NotificationMediumCollectionViaNotificationType.IsReadOnly = false;
					this.NotificationMediumCollectionViaNotificationType.Add((NotificationMediumEntity)entity);
					this.NotificationMediumCollectionViaNotificationType.IsReadOnly = true;
					break;
				case "NotificationMediumCollectionViaNotification":
					this.NotificationMediumCollectionViaNotification.IsReadOnly = false;
					this.NotificationMediumCollectionViaNotification.Add((NotificationMediumEntity)entity);
					this.NotificationMediumCollectionViaNotification.IsReadOnly = true;
					break;
				case "NotificationTypeCollectionViaEventCustomerTestNotPerformedNotification":
					this.NotificationTypeCollectionViaEventCustomerTestNotPerformedNotification.IsReadOnly = false;
					this.NotificationTypeCollectionViaEventCustomerTestNotPerformedNotification.Add((NotificationTypeEntity)entity);
					this.NotificationTypeCollectionViaEventCustomerTestNotPerformedNotification.IsReadOnly = true;
					break;
				case "NotificationTypeCollectionViaEmailTemplate":
					this.NotificationTypeCollectionViaEmailTemplate.IsReadOnly = false;
					this.NotificationTypeCollectionViaEmailTemplate.Add((NotificationTypeEntity)entity);
					this.NotificationTypeCollectionViaEmailTemplate.IsReadOnly = true;
					break;
				case "NotificationTypeCollectionViaNotification":
					this.NotificationTypeCollectionViaNotification.IsReadOnly = false;
					this.NotificationTypeCollectionViaNotification.Add((NotificationTypeEntity)entity);
					this.NotificationTypeCollectionViaNotification.IsReadOnly = true;
					break;
				case "OrderCollectionViaRefundRequest_":
					this.OrderCollectionViaRefundRequest_.IsReadOnly = false;
					this.OrderCollectionViaRefundRequest_.Add((OrderEntity)entity);
					this.OrderCollectionViaRefundRequest_.IsReadOnly = true;
					break;
				case "OrderCollectionViaRefundRequest":
					this.OrderCollectionViaRefundRequest.IsReadOnly = false;
					this.OrderCollectionViaRefundRequest.Add((OrderEntity)entity);
					this.OrderCollectionViaRefundRequest.IsReadOnly = true;
					break;
				case "OrganizationCollectionViaAccountTestHcpcsCode_":
					this.OrganizationCollectionViaAccountTestHcpcsCode_.IsReadOnly = false;
					this.OrganizationCollectionViaAccountTestHcpcsCode_.Add((OrganizationEntity)entity);
					this.OrganizationCollectionViaAccountTestHcpcsCode_.IsReadOnly = true;
					break;
				case "OrganizationCollectionViaAccountTestHcpcsCode":
					this.OrganizationCollectionViaAccountTestHcpcsCode.IsReadOnly = false;
					this.OrganizationCollectionViaAccountTestHcpcsCode.Add((OrganizationEntity)entity);
					this.OrganizationCollectionViaAccountTestHcpcsCode.IsReadOnly = true;
					break;
				case "OrganizationCollectionViaAccountCallCenterOrganization":
					this.OrganizationCollectionViaAccountCallCenterOrganization.IsReadOnly = false;
					this.OrganizationCollectionViaAccountCallCenterOrganization.Add((OrganizationEntity)entity);
					this.OrganizationCollectionViaAccountCallCenterOrganization.IsReadOnly = true;
					break;
				case "OrganizationCollectionViaAccountCallCenterOrganization_":
					this.OrganizationCollectionViaAccountCallCenterOrganization_.IsReadOnly = false;
					this.OrganizationCollectionViaAccountCallCenterOrganization_.Add((OrganizationEntity)entity);
					this.OrganizationCollectionViaAccountCallCenterOrganization_.IsReadOnly = true;
					break;
				case "OrganizationCollectionViaEventAccountTestHcpcsCode_":
					this.OrganizationCollectionViaEventAccountTestHcpcsCode_.IsReadOnly = false;
					this.OrganizationCollectionViaEventAccountTestHcpcsCode_.Add((OrganizationEntity)entity);
					this.OrganizationCollectionViaEventAccountTestHcpcsCode_.IsReadOnly = true;
					break;
				case "OrganizationCollectionViaEventAccountTestHcpcsCode":
					this.OrganizationCollectionViaEventAccountTestHcpcsCode.IsReadOnly = false;
					this.OrganizationCollectionViaEventAccountTestHcpcsCode.Add((OrganizationEntity)entity);
					this.OrganizationCollectionViaEventAccountTestHcpcsCode.IsReadOnly = true;
					break;
				case "OrganizationCollectionViaMarketingPrintOrder":
					this.OrganizationCollectionViaMarketingPrintOrder.IsReadOnly = false;
					this.OrganizationCollectionViaMarketingPrintOrder.Add((OrganizationEntity)entity);
					this.OrganizationCollectionViaMarketingPrintOrder.IsReadOnly = true;
					break;
				case "OrganizationCollectionViaMarketingPrintOrder_":
					this.OrganizationCollectionViaMarketingPrintOrder_.IsReadOnly = false;
					this.OrganizationCollectionViaMarketingPrintOrder_.Add((OrganizationEntity)entity);
					this.OrganizationCollectionViaMarketingPrintOrder_.IsReadOnly = true;
					break;
				case "OrganizationCollectionViaAffiliateProfile":
					this.OrganizationCollectionViaAffiliateProfile.IsReadOnly = false;
					this.OrganizationCollectionViaAffiliateProfile.Add((OrganizationEntity)entity);
					this.OrganizationCollectionViaAffiliateProfile.IsReadOnly = true;
					break;
				case "PackageCollectionViaPreApprovedPackage":
					this.PackageCollectionViaPreApprovedPackage.IsReadOnly = false;
					this.PackageCollectionViaPreApprovedPackage.Add((PackageEntity)entity);
					this.PackageCollectionViaPreApprovedPackage.IsReadOnly = true;
					break;
				case "PhysicianMasterCollectionViaCustomerPrimaryCarePhysician":
					this.PhysicianMasterCollectionViaCustomerPrimaryCarePhysician.IsReadOnly = false;
					this.PhysicianMasterCollectionViaCustomerPrimaryCarePhysician.Add((PhysicianMasterEntity)entity);
					this.PhysicianMasterCollectionViaCustomerPrimaryCarePhysician.IsReadOnly = true;
					break;
				case "PhysicianMasterCollectionViaCustomerPrimaryCarePhysician_":
					this.PhysicianMasterCollectionViaCustomerPrimaryCarePhysician_.IsReadOnly = false;
					this.PhysicianMasterCollectionViaCustomerPrimaryCarePhysician_.Add((PhysicianMasterEntity)entity);
					this.PhysicianMasterCollectionViaCustomerPrimaryCarePhysician_.IsReadOnly = true;
					break;
				case "PhysicianMasterCollectionViaCustomerPrimaryCarePhysician__":
					this.PhysicianMasterCollectionViaCustomerPrimaryCarePhysician__.IsReadOnly = false;
					this.PhysicianMasterCollectionViaCustomerPrimaryCarePhysician__.Add((PhysicianMasterEntity)entity);
					this.PhysicianMasterCollectionViaCustomerPrimaryCarePhysician__.IsReadOnly = true;
					break;
				case "PodDetailsCollectionViaSalesRepPodAssigments":
					this.PodDetailsCollectionViaSalesRepPodAssigments.IsReadOnly = false;
					this.PodDetailsCollectionViaSalesRepPodAssigments.Add((PodDetailsEntity)entity);
					this.PodDetailsCollectionViaSalesRepPodAssigments.IsReadOnly = true;
					break;
				case "PodDetailsCollectionViaEventStaffAssignment":
					this.PodDetailsCollectionViaEventStaffAssignment.IsReadOnly = false;
					this.PodDetailsCollectionViaEventStaffAssignment.Add((PodDetailsEntity)entity);
					this.PodDetailsCollectionViaEventStaffAssignment.IsReadOnly = true;
					break;
				case "PodDetailsCollectionViaEventNote_":
					this.PodDetailsCollectionViaEventNote_.IsReadOnly = false;
					this.PodDetailsCollectionViaEventNote_.Add((PodDetailsEntity)entity);
					this.PodDetailsCollectionViaEventNote_.IsReadOnly = true;
					break;
				case "PodDetailsCollectionViaEventNote":
					this.PodDetailsCollectionViaEventNote.IsReadOnly = false;
					this.PodDetailsCollectionViaEventNote.Add((PodDetailsEntity)entity);
					this.PodDetailsCollectionViaEventNote.IsReadOnly = true;
					break;
				case "PodDetailsCollectionViaPodDefaultTeam":
					this.PodDetailsCollectionViaPodDefaultTeam.IsReadOnly = false;
					this.PodDetailsCollectionViaPodDefaultTeam.Add((PodDetailsEntity)entity);
					this.PodDetailsCollectionViaPodDefaultTeam.IsReadOnly = true;
					break;
				case "PodDetailsCollectionViaEventStaffAssignment_":
					this.PodDetailsCollectionViaEventStaffAssignment_.IsReadOnly = false;
					this.PodDetailsCollectionViaEventStaffAssignment_.Add((PodDetailsEntity)entity);
					this.PodDetailsCollectionViaEventStaffAssignment_.IsReadOnly = true;
					break;
				case "PodDetailsCollectionViaEventStaffAssignment__":
					this.PodDetailsCollectionViaEventStaffAssignment__.IsReadOnly = false;
					this.PodDetailsCollectionViaEventStaffAssignment__.Add((PodDetailsEntity)entity);
					this.PodDetailsCollectionViaEventStaffAssignment__.IsReadOnly = true;
					break;
				case "PreQualificationQuestionCollectionViaEventCustomerQuestionAnswer_":
					this.PreQualificationQuestionCollectionViaEventCustomerQuestionAnswer_.IsReadOnly = false;
					this.PreQualificationQuestionCollectionViaEventCustomerQuestionAnswer_.Add((PreQualificationQuestionEntity)entity);
					this.PreQualificationQuestionCollectionViaEventCustomerQuestionAnswer_.IsReadOnly = true;
					break;
				case "PreQualificationQuestionCollectionViaDisqualifiedTest":
					this.PreQualificationQuestionCollectionViaDisqualifiedTest.IsReadOnly = false;
					this.PreQualificationQuestionCollectionViaDisqualifiedTest.Add((PreQualificationQuestionEntity)entity);
					this.PreQualificationQuestionCollectionViaDisqualifiedTest.IsReadOnly = true;
					break;
				case "PreQualificationQuestionCollectionViaDisqualifiedTest_":
					this.PreQualificationQuestionCollectionViaDisqualifiedTest_.IsReadOnly = false;
					this.PreQualificationQuestionCollectionViaDisqualifiedTest_.Add((PreQualificationQuestionEntity)entity);
					this.PreQualificationQuestionCollectionViaDisqualifiedTest_.IsReadOnly = true;
					break;
				case "PreQualificationQuestionCollectionViaEventCustomerQuestionAnswer":
					this.PreQualificationQuestionCollectionViaEventCustomerQuestionAnswer.IsReadOnly = false;
					this.PreQualificationQuestionCollectionViaEventCustomerQuestionAnswer.Add((PreQualificationQuestionEntity)entity);
					this.PreQualificationQuestionCollectionViaEventCustomerQuestionAnswer.IsReadOnly = true;
					break;
				case "ProspectCustomerCollectionViaCallQueueCustomer_":
					this.ProspectCustomerCollectionViaCallQueueCustomer_.IsReadOnly = false;
					this.ProspectCustomerCollectionViaCallQueueCustomer_.Add((ProspectCustomerEntity)entity);
					this.ProspectCustomerCollectionViaCallQueueCustomer_.IsReadOnly = true;
					break;
				case "ProspectCustomerCollectionViaCallQueueCustomer":
					this.ProspectCustomerCollectionViaCallQueueCustomer.IsReadOnly = false;
					this.ProspectCustomerCollectionViaCallQueueCustomer.Add((ProspectCustomerEntity)entity);
					this.ProspectCustomerCollectionViaCallQueueCustomer.IsReadOnly = true;
					break;
				case "ProspectCustomerCollectionViaCallQueueCustomer__":
					this.ProspectCustomerCollectionViaCallQueueCustomer__.IsReadOnly = false;
					this.ProspectCustomerCollectionViaCallQueueCustomer__.Add((ProspectCustomerEntity)entity);
					this.ProspectCustomerCollectionViaCallQueueCustomer__.IsReadOnly = true;
					break;
				case "ProspectListDetailsCollectionViaProspects":
					this.ProspectListDetailsCollectionViaProspects.IsReadOnly = false;
					this.ProspectListDetailsCollectionViaProspects.Add((ProspectListDetailsEntity)entity);
					this.ProspectListDetailsCollectionViaProspects.IsReadOnly = true;
					break;
				case "ProspectsCollectionViaHostFacilityRanking":
					this.ProspectsCollectionViaHostFacilityRanking.IsReadOnly = false;
					this.ProspectsCollectionViaHostFacilityRanking.Add((ProspectsEntity)entity);
					this.ProspectsCollectionViaHostFacilityRanking.IsReadOnly = true;
					break;
				case "ProspectsCollectionViaHostPayment":
					this.ProspectsCollectionViaHostPayment.IsReadOnly = false;
					this.ProspectsCollectionViaHostPayment.Add((ProspectsEntity)entity);
					this.ProspectsCollectionViaHostPayment.IsReadOnly = true;
					break;
				case "ProspectTypeCollectionViaProspects":
					this.ProspectTypeCollectionViaProspects.IsReadOnly = false;
					this.ProspectTypeCollectionViaProspects.Add((ProspectTypeEntity)entity);
					this.ProspectTypeCollectionViaProspects.IsReadOnly = true;
					break;
				case "RefundRequestCollectionViaEventAppointmentCancellationLog":
					this.RefundRequestCollectionViaEventAppointmentCancellationLog.IsReadOnly = false;
					this.RefundRequestCollectionViaEventAppointmentCancellationLog.Add((RefundRequestEntity)entity);
					this.RefundRequestCollectionViaEventAppointmentCancellationLog.IsReadOnly = true;
					break;
				case "RelationshipCollectionViaGuardianDetails_":
					this.RelationshipCollectionViaGuardianDetails_.IsReadOnly = false;
					this.RelationshipCollectionViaGuardianDetails_.Add((RelationshipEntity)entity);
					this.RelationshipCollectionViaGuardianDetails_.IsReadOnly = true;
					break;
				case "RelationshipCollectionViaGuardianDetails":
					this.RelationshipCollectionViaGuardianDetails.IsReadOnly = false;
					this.RelationshipCollectionViaGuardianDetails.Add((RelationshipEntity)entity);
					this.RelationshipCollectionViaGuardianDetails.IsReadOnly = true;
					break;
				case "RescheduleCancelDispositionCollectionViaEventAppointmentChangeLog":
					this.RescheduleCancelDispositionCollectionViaEventAppointmentChangeLog.IsReadOnly = false;
					this.RescheduleCancelDispositionCollectionViaEventAppointmentChangeLog.Add((RescheduleCancelDispositionEntity)entity);
					this.RescheduleCancelDispositionCollectionViaEventAppointmentChangeLog.IsReadOnly = true;
					break;
				case "RescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog":
					this.RescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog.IsReadOnly = false;
					this.RescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog.Add((RescheduleCancelDispositionEntity)entity);
					this.RescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog.IsReadOnly = true;
					break;
				case "RoleCollectionViaUser":
					this.RoleCollectionViaUser.IsReadOnly = false;
					this.RoleCollectionViaUser.Add((RoleEntity)entity);
					this.RoleCollectionViaUser.IsReadOnly = true;
					break;
				case "RoleCollectionViaHostFacilityRanking":
					this.RoleCollectionViaHostFacilityRanking.IsReadOnly = false;
					this.RoleCollectionViaHostFacilityRanking.Add((RoleEntity)entity);
					this.RoleCollectionViaHostFacilityRanking.IsReadOnly = true;
					break;
				case "RoleCollectionViaUser_":
					this.RoleCollectionViaUser_.IsReadOnly = false;
					this.RoleCollectionViaUser_.Add((RoleEntity)entity);
					this.RoleCollectionViaUser_.IsReadOnly = true;
					break;
				case "ScheduleMethodCollectionViaEvents___":
					this.ScheduleMethodCollectionViaEvents___.IsReadOnly = false;
					this.ScheduleMethodCollectionViaEvents___.Add((ScheduleMethodEntity)entity);
					this.ScheduleMethodCollectionViaEvents___.IsReadOnly = true;
					break;
				case "ScheduleMethodCollectionViaEvents____":
					this.ScheduleMethodCollectionViaEvents____.IsReadOnly = false;
					this.ScheduleMethodCollectionViaEvents____.Add((ScheduleMethodEntity)entity);
					this.ScheduleMethodCollectionViaEvents____.IsReadOnly = true;
					break;
				case "ScheduleMethodCollectionViaEvents":
					this.ScheduleMethodCollectionViaEvents.IsReadOnly = false;
					this.ScheduleMethodCollectionViaEvents.Add((ScheduleMethodEntity)entity);
					this.ScheduleMethodCollectionViaEvents.IsReadOnly = true;
					break;
				case "ScheduleMethodCollectionViaEvents_":
					this.ScheduleMethodCollectionViaEvents_.IsReadOnly = false;
					this.ScheduleMethodCollectionViaEvents_.Add((ScheduleMethodEntity)entity);
					this.ScheduleMethodCollectionViaEvents_.IsReadOnly = true;
					break;
				case "ScheduleMethodCollectionViaEvents__":
					this.ScheduleMethodCollectionViaEvents__.IsReadOnly = false;
					this.ScheduleMethodCollectionViaEvents__.Add((ScheduleMethodEntity)entity);
					this.ScheduleMethodCollectionViaEvents__.IsReadOnly = true;
					break;
				case "ScriptsCollectionViaCallQueue":
					this.ScriptsCollectionViaCallQueue.IsReadOnly = false;
					this.ScriptsCollectionViaCallQueue.Add((ScriptsEntity)entity);
					this.ScriptsCollectionViaCallQueue.IsReadOnly = true;
					break;
				case "ScriptsCollectionViaCallQueue_":
					this.ScriptsCollectionViaCallQueue_.IsReadOnly = false;
					this.ScriptsCollectionViaCallQueue_.Add((ScriptsEntity)entity);
					this.ScriptsCollectionViaCallQueue_.IsReadOnly = true;
					break;
				case "ShippingOptionCollectionViaShippingDetail_":
					this.ShippingOptionCollectionViaShippingDetail_.IsReadOnly = false;
					this.ShippingOptionCollectionViaShippingDetail_.Add((ShippingOptionEntity)entity);
					this.ShippingOptionCollectionViaShippingDetail_.IsReadOnly = true;
					break;
				case "ShippingOptionCollectionViaShippingDetail":
					this.ShippingOptionCollectionViaShippingDetail.IsReadOnly = false;
					this.ShippingOptionCollectionViaShippingDetail.Add((ShippingOptionEntity)entity);
					this.ShippingOptionCollectionViaShippingDetail.IsReadOnly = true;
					break;
				case "StaffEventRoleCollectionViaEventStaffAssignment__":
					this.StaffEventRoleCollectionViaEventStaffAssignment__.IsReadOnly = false;
					this.StaffEventRoleCollectionViaEventStaffAssignment__.Add((StaffEventRoleEntity)entity);
					this.StaffEventRoleCollectionViaEventStaffAssignment__.IsReadOnly = true;
					break;
				case "StaffEventRoleCollectionViaPodDefaultTeam":
					this.StaffEventRoleCollectionViaPodDefaultTeam.IsReadOnly = false;
					this.StaffEventRoleCollectionViaPodDefaultTeam.Add((StaffEventRoleEntity)entity);
					this.StaffEventRoleCollectionViaPodDefaultTeam.IsReadOnly = true;
					break;
				case "StaffEventRoleCollectionViaEventStaffAssignment":
					this.StaffEventRoleCollectionViaEventStaffAssignment.IsReadOnly = false;
					this.StaffEventRoleCollectionViaEventStaffAssignment.Add((StaffEventRoleEntity)entity);
					this.StaffEventRoleCollectionViaEventStaffAssignment.IsReadOnly = true;
					break;
				case "StaffEventRoleCollectionViaEventStaffAssignment_":
					this.StaffEventRoleCollectionViaEventStaffAssignment_.IsReadOnly = false;
					this.StaffEventRoleCollectionViaEventStaffAssignment_.Add((StaffEventRoleEntity)entity);
					this.StaffEventRoleCollectionViaEventStaffAssignment_.IsReadOnly = true;
					break;
				case "StandardFindingTestReadingCollectionViaCustomerEventReading":
					this.StandardFindingTestReadingCollectionViaCustomerEventReading.IsReadOnly = false;
					this.StandardFindingTestReadingCollectionViaCustomerEventReading.Add((StandardFindingTestReadingEntity)entity);
					this.StandardFindingTestReadingCollectionViaCustomerEventReading.IsReadOnly = true;
					break;
				case "StateCollectionViaAddress":
					this.StateCollectionViaAddress.IsReadOnly = false;
					this.StateCollectionViaAddress.Add((StateEntity)entity);
					this.StateCollectionViaAddress.IsReadOnly = true;
					break;
				case "SurveyQuestionCollectionViaSurveyAnswer_":
					this.SurveyQuestionCollectionViaSurveyAnswer_.IsReadOnly = false;
					this.SurveyQuestionCollectionViaSurveyAnswer_.Add((SurveyQuestionEntity)entity);
					this.SurveyQuestionCollectionViaSurveyAnswer_.IsReadOnly = true;
					break;
				case "SurveyQuestionCollectionViaSurveyAnswer":
					this.SurveyQuestionCollectionViaSurveyAnswer.IsReadOnly = false;
					this.SurveyQuestionCollectionViaSurveyAnswer.Add((SurveyQuestionEntity)entity);
					this.SurveyQuestionCollectionViaSurveyAnswer.IsReadOnly = true;
					break;
				case "TagCollectionViaPreAssessmentCustomerCallQueueCallAttempt":
					this.TagCollectionViaPreAssessmentCustomerCallQueueCallAttempt.IsReadOnly = false;
					this.TagCollectionViaPreAssessmentCustomerCallQueueCallAttempt.Add((TagEntity)entity);
					this.TagCollectionViaPreAssessmentCustomerCallQueueCallAttempt.IsReadOnly = true;
					break;
				case "TagCollectionViaCustomerCallQueueCallAttempt":
					this.TagCollectionViaCustomerCallQueueCallAttempt.IsReadOnly = false;
					this.TagCollectionViaCustomerCallQueueCallAttempt.Add((TagEntity)entity);
					this.TagCollectionViaCustomerCallQueueCallAttempt.IsReadOnly = true;
					break;
				case "TaskPriorityTypesCollectionViaTaskDetails__":
					this.TaskPriorityTypesCollectionViaTaskDetails__.IsReadOnly = false;
					this.TaskPriorityTypesCollectionViaTaskDetails__.Add((TaskPriorityTypesEntity)entity);
					this.TaskPriorityTypesCollectionViaTaskDetails__.IsReadOnly = true;
					break;
				case "TaskPriorityTypesCollectionViaTaskDetails_":
					this.TaskPriorityTypesCollectionViaTaskDetails_.IsReadOnly = false;
					this.TaskPriorityTypesCollectionViaTaskDetails_.Add((TaskPriorityTypesEntity)entity);
					this.TaskPriorityTypesCollectionViaTaskDetails_.IsReadOnly = true;
					break;
				case "TaskPriorityTypesCollectionViaTaskDetails":
					this.TaskPriorityTypesCollectionViaTaskDetails.IsReadOnly = false;
					this.TaskPriorityTypesCollectionViaTaskDetails.Add((TaskPriorityTypesEntity)entity);
					this.TaskPriorityTypesCollectionViaTaskDetails.IsReadOnly = true;
					break;
				case "TaskStatusTypesCollectionViaTaskDetails_":
					this.TaskStatusTypesCollectionViaTaskDetails_.IsReadOnly = false;
					this.TaskStatusTypesCollectionViaTaskDetails_.Add((TaskStatusTypesEntity)entity);
					this.TaskStatusTypesCollectionViaTaskDetails_.IsReadOnly = true;
					break;
				case "TaskStatusTypesCollectionViaTaskDetails__":
					this.TaskStatusTypesCollectionViaTaskDetails__.IsReadOnly = false;
					this.TaskStatusTypesCollectionViaTaskDetails__.Add((TaskStatusTypesEntity)entity);
					this.TaskStatusTypesCollectionViaTaskDetails__.IsReadOnly = true;
					break;
				case "TaskStatusTypesCollectionViaTaskDetails":
					this.TaskStatusTypesCollectionViaTaskDetails.IsReadOnly = false;
					this.TaskStatusTypesCollectionViaTaskDetails.Add((TaskStatusTypesEntity)entity);
					this.TaskStatusTypesCollectionViaTaskDetails.IsReadOnly = true;
					break;
				case "TechnicianProfileCollectionViaPinChangelog":
					this.TechnicianProfileCollectionViaPinChangelog.IsReadOnly = false;
					this.TechnicianProfileCollectionViaPinChangelog.Add((TechnicianProfileEntity)entity);
					this.TechnicianProfileCollectionViaPinChangelog.IsReadOnly = true;
					break;
				case "TerritoryCollectionViaTerritory":
					this.TerritoryCollectionViaTerritory.IsReadOnly = false;
					this.TerritoryCollectionViaTerritory.Add((TerritoryEntity)entity);
					this.TerritoryCollectionViaTerritory.IsReadOnly = true;
					break;
				case "TerritoryCollectionViaOrganizationRoleUserTerritory":
					this.TerritoryCollectionViaOrganizationRoleUserTerritory.IsReadOnly = false;
					this.TerritoryCollectionViaOrganizationRoleUserTerritory.Add((TerritoryEntity)entity);
					this.TerritoryCollectionViaOrganizationRoleUserTerritory.IsReadOnly = true;
					break;
				case "TestCollectionViaEventCustomerTestNotPerformedNotification":
					this.TestCollectionViaEventCustomerTestNotPerformedNotification.IsReadOnly = false;
					this.TestCollectionViaEventCustomerTestNotPerformedNotification.Add((TestEntity)entity);
					this.TestCollectionViaEventCustomerTestNotPerformedNotification.IsReadOnly = true;
					break;
				case "TestCollectionViaEventPhysicianTest":
					this.TestCollectionViaEventPhysicianTest.IsReadOnly = false;
					this.TestCollectionViaEventPhysicianTest.Add((TestEntity)entity);
					this.TestCollectionViaEventPhysicianTest.IsReadOnly = true;
					break;
				case "TestCollectionViaDisqualifiedTest_":
					this.TestCollectionViaDisqualifiedTest_.IsReadOnly = false;
					this.TestCollectionViaDisqualifiedTest_.Add((TestEntity)entity);
					this.TestCollectionViaDisqualifiedTest_.IsReadOnly = true;
					break;
				case "TestCollectionViaEventCustomerRetest":
					this.TestCollectionViaEventCustomerRetest.IsReadOnly = false;
					this.TestCollectionViaEventCustomerRetest.Add((TestEntity)entity);
					this.TestCollectionViaEventCustomerRetest.IsReadOnly = true;
					break;
				case "TestCollectionViaEventPhysicianTest_":
					this.TestCollectionViaEventPhysicianTest_.IsReadOnly = false;
					this.TestCollectionViaEventPhysicianTest_.Add((TestEntity)entity);
					this.TestCollectionViaEventPhysicianTest_.IsReadOnly = true;
					break;
				case "TestCollectionViaKynLabValues_":
					this.TestCollectionViaKynLabValues_.IsReadOnly = false;
					this.TestCollectionViaKynLabValues_.Add((TestEntity)entity);
					this.TestCollectionViaKynLabValues_.IsReadOnly = true;
					break;
				case "TestCollectionViaEventPhysicianTest__":
					this.TestCollectionViaEventPhysicianTest__.IsReadOnly = false;
					this.TestCollectionViaEventPhysicianTest__.Add((TestEntity)entity);
					this.TestCollectionViaEventPhysicianTest__.IsReadOnly = true;
					break;
				case "TestCollectionViaTestHcpcsCode_":
					this.TestCollectionViaTestHcpcsCode_.IsReadOnly = false;
					this.TestCollectionViaTestHcpcsCode_.Add((TestEntity)entity);
					this.TestCollectionViaTestHcpcsCode_.IsReadOnly = true;
					break;
				case "TestCollectionViaTestHcpcsCode":
					this.TestCollectionViaTestHcpcsCode.IsReadOnly = false;
					this.TestCollectionViaTestHcpcsCode.Add((TestEntity)entity);
					this.TestCollectionViaTestHcpcsCode.IsReadOnly = true;
					break;
				case "TestCollectionViaKynLabValues":
					this.TestCollectionViaKynLabValues.IsReadOnly = false;
					this.TestCollectionViaKynLabValues.Add((TestEntity)entity);
					this.TestCollectionViaKynLabValues.IsReadOnly = true;
					break;
				case "TestCollectionViaPreApprovedTest":
					this.TestCollectionViaPreApprovedTest.IsReadOnly = false;
					this.TestCollectionViaPreApprovedTest.Add((TestEntity)entity);
					this.TestCollectionViaPreApprovedTest.IsReadOnly = true;
					break;
				case "TestCollectionViaClinicalTestQualificationCriteria":
					this.TestCollectionViaClinicalTestQualificationCriteria.IsReadOnly = false;
					this.TestCollectionViaClinicalTestQualificationCriteria.Add((TestEntity)entity);
					this.TestCollectionViaClinicalTestQualificationCriteria.IsReadOnly = true;
					break;
				case "TestCollectionViaRequiredTest":
					this.TestCollectionViaRequiredTest.IsReadOnly = false;
					this.TestCollectionViaRequiredTest.Add((TestEntity)entity);
					this.TestCollectionViaRequiredTest.IsReadOnly = true;
					break;
				case "TestCollectionViaClinicalTestQualificationCriteria_":
					this.TestCollectionViaClinicalTestQualificationCriteria_.IsReadOnly = false;
					this.TestCollectionViaClinicalTestQualificationCriteria_.Add((TestEntity)entity);
					this.TestCollectionViaClinicalTestQualificationCriteria_.IsReadOnly = true;
					break;
				case "TestCollectionViaDisqualifiedTest":
					this.TestCollectionViaDisqualifiedTest.IsReadOnly = false;
					this.TestCollectionViaDisqualifiedTest.Add((TestEntity)entity);
					this.TestCollectionViaDisqualifiedTest.IsReadOnly = true;
					break;
				case "TestCollectionViaPreQualificationTestTemplate":
					this.TestCollectionViaPreQualificationTestTemplate.IsReadOnly = false;
					this.TestCollectionViaPreQualificationTestTemplate.Add((TestEntity)entity);
					this.TestCollectionViaPreQualificationTestTemplate.IsReadOnly = true;
					break;
				case "TestCollectionViaPreQualificationTestTemplate_":
					this.TestCollectionViaPreQualificationTestTemplate_.IsReadOnly = false;
					this.TestCollectionViaPreQualificationTestTemplate_.Add((TestEntity)entity);
					this.TestCollectionViaPreQualificationTestTemplate_.IsReadOnly = true;
					break;
				case "TestCollectionViaPreQualificationQuestion":
					this.TestCollectionViaPreQualificationQuestion.IsReadOnly = false;
					this.TestCollectionViaPreQualificationQuestion.Add((TestEntity)entity);
					this.TestCollectionViaPreQualificationQuestion.IsReadOnly = true;
					break;
				case "TestHcpcsCodeCollectionViaEventAccountTestHcpcsCode_":
					this.TestHcpcsCodeCollectionViaEventAccountTestHcpcsCode_.IsReadOnly = false;
					this.TestHcpcsCodeCollectionViaEventAccountTestHcpcsCode_.Add((TestHcpcsCodeEntity)entity);
					this.TestHcpcsCodeCollectionViaEventAccountTestHcpcsCode_.IsReadOnly = true;
					break;
				case "TestHcpcsCodeCollectionViaEventAccountTestHcpcsCode":
					this.TestHcpcsCodeCollectionViaEventAccountTestHcpcsCode.IsReadOnly = false;
					this.TestHcpcsCodeCollectionViaEventAccountTestHcpcsCode.Add((TestHcpcsCodeEntity)entity);
					this.TestHcpcsCodeCollectionViaEventAccountTestHcpcsCode.IsReadOnly = true;
					break;
				case "TestHcpcsCodeCollectionViaAccountTestHcpcsCode_":
					this.TestHcpcsCodeCollectionViaAccountTestHcpcsCode_.IsReadOnly = false;
					this.TestHcpcsCodeCollectionViaAccountTestHcpcsCode_.Add((TestHcpcsCodeEntity)entity);
					this.TestHcpcsCodeCollectionViaAccountTestHcpcsCode_.IsReadOnly = true;
					break;
				case "TestHcpcsCodeCollectionViaAccountTestHcpcsCode":
					this.TestHcpcsCodeCollectionViaAccountTestHcpcsCode.IsReadOnly = false;
					this.TestHcpcsCodeCollectionViaAccountTestHcpcsCode.Add((TestHcpcsCodeEntity)entity);
					this.TestHcpcsCodeCollectionViaAccountTestHcpcsCode.IsReadOnly = true;
					break;
				case "TestNotPerformedReasonCollectionViaTestNotPerformed_":
					this.TestNotPerformedReasonCollectionViaTestNotPerformed_.IsReadOnly = false;
					this.TestNotPerformedReasonCollectionViaTestNotPerformed_.Add((TestNotPerformedReasonEntity)entity);
					this.TestNotPerformedReasonCollectionViaTestNotPerformed_.IsReadOnly = true;
					break;
				case "TestNotPerformedReasonCollectionViaTestNotPerformed":
					this.TestNotPerformedReasonCollectionViaTestNotPerformed.IsReadOnly = false;
					this.TestNotPerformedReasonCollectionViaTestNotPerformed.Add((TestNotPerformedReasonEntity)entity);
					this.TestNotPerformedReasonCollectionViaTestNotPerformed.IsReadOnly = true;
					break;
				case "TestReadingCollectionViaCustomerEventReading":
					this.TestReadingCollectionViaCustomerEventReading.IsReadOnly = false;
					this.TestReadingCollectionViaCustomerEventReading.Add((TestReadingEntity)entity);
					this.TestReadingCollectionViaCustomerEventReading.IsReadOnly = true;
					break;
				case "TestUnableScreenReasonCollectionViaCustomerEventUnableScreenReason":
					this.TestUnableScreenReasonCollectionViaCustomerEventUnableScreenReason.IsReadOnly = false;
					this.TestUnableScreenReasonCollectionViaCustomerEventUnableScreenReason.Add((TestUnableScreenReasonEntity)entity);
					this.TestUnableScreenReasonCollectionViaCustomerEventUnableScreenReason.IsReadOnly = true;
					break;
				case "UserLoginCollectionViaPasswordChangelog":
					this.UserLoginCollectionViaPasswordChangelog.IsReadOnly = false;
					this.UserLoginCollectionViaPasswordChangelog.Add((UserLoginEntity)entity);
					this.UserLoginCollectionViaPasswordChangelog.IsReadOnly = true;
					break;
				case "ZipCollectionViaAddress":
					this.ZipCollectionViaAddress.IsReadOnly = false;
					this.ZipCollectionViaAddress.Add((ZipEntity)entity);
					this.ZipCollectionViaAddress.IsReadOnly = true;
					break;
				case "AccountCoordinatorProfile":
					this.AccountCoordinatorProfile = (AccountCoordinatorProfileEntity)entity;
					break;
				case "AffiliateProfile_":
					this.AffiliateProfile_ = (AffiliateProfileEntity)entity;
					break;
				case "CallCenterRepProfile":
					this.CallCenterRepProfile = (CallCenterRepProfileEntity)entity;
					break;
				case "CustomerProfile":
					this.CustomerProfile = (CustomerProfileEntity)entity;
					break;
				case "PhysicianProfile":
					this.PhysicianProfile = (PhysicianProfileEntity)entity;
					break;
				case "TechnicianProfile":
					this.TechnicianProfile = (TechnicianProfileEntity)entity;
					break;
				default:
					break;
			}
		}
		
		/// <summary>Gets the relation objects which represent the relation the fieldName specified is mapped on. </summary>
		/// <param name="fieldName">Name of the field mapped onto the relation of which the relation objects have to be obtained.</param>
		/// <returns>RelationCollection with relation object(s) which represent the relation the field is maped on</returns>
		public override RelationCollection GetRelationsForFieldOfType(string fieldName)
		{
			return OrganizationRoleUserEntity.GetRelationsForField(fieldName);
		}

		/// <summary>Gets the relation objects which represent the relation the fieldName specified is mapped on. </summary>
		/// <param name="fieldName">Name of the field mapped onto the relation of which the relation objects have to be obtained.</param>
		/// <returns>RelationCollection with relation object(s) which represent the relation the field is maped on</returns>
		public static RelationCollection GetRelationsForField(string fieldName)
		{
			RelationCollection toReturn = new RelationCollection();
			switch(fieldName)
			{
				case "Organization":
					toReturn.Add(OrganizationRoleUserEntity.Relations.OrganizationEntityUsingOrganizationId);
					break;
				case "Role":
					toReturn.Add(OrganizationRoleUserEntity.Relations.RoleEntityUsingRoleId);
					break;
				case "User":
					toReturn.Add(OrganizationRoleUserEntity.Relations.UserEntityUsingUserId);
					break;
				case "AccountCallCenterOrganization_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AccountCallCenterOrganizationEntityUsingModifiedBy);
					break;
				case "AccountCallCenterOrganization":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AccountCallCenterOrganizationEntityUsingCreatedBy);
					break;
				case "AccountHraChatQuestionnaire_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AccountHraChatQuestionnaireEntityUsingModifiedBy);
					break;
				case "AccountHraChatQuestionnaire":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AccountHraChatQuestionnaireEntityUsingCreatedBy);
					break;
				case "AccountTestHcpcsCode_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AccountTestHcpcsCodeEntityUsingModifiedBy);
					break;
				case "AccountTestHcpcsCode":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AccountTestHcpcsCodeEntityUsingCreatedBy);
					break;
				case "ActivityType":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ActivityTypeEntityUsingCreatedBy);
					break;
				case "AdditionalFields_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AdditionalFieldsEntityUsingModifiedBy);
					break;
				case "AdditionalFields":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AdditionalFieldsEntityUsingCreatedBy);
					break;
				case "Address":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AddressEntityUsingVerificationOrgRoleUserId);
					break;
				case "AdvocateManagerTeam_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AdvocateManagerTeamEntityUsingSalesRepOrgRoleUserId);
					break;
				case "AdvocateManagerTeam":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AdvocateManagerTeamEntityUsingManagerOrgRoleUserId);
					break;
				case "Afcampaign_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AfcampaignEntityUsingRoleId);
					break;
				case "Afcampaign":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AfcampaignEntityUsingShellId);
					break;
				case "AffiliateProfile":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AffiliateProfileEntityUsingCreatedByOrgRoleUserId);
					break;
				case "ApplicationAuthentication_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ApplicationAuthenticationEntityUsingModifiedBy);
					break;
				case "ApplicationAuthentication":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ApplicationAuthenticationEntityUsingCreatedBy);
					break;
				case "Barrier_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.BarrierEntityUsingModifiedBy);
					break;
				case "Barrier":
					toReturn.Add(OrganizationRoleUserEntity.Relations.BarrierEntityUsingCreatedBy);
					break;
				case "CallCenterAgentTeam":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallCenterAgentTeamEntityUsingAgentId);
					break;
				case "CallCenterAgentTeamLog__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallCenterAgentTeamLogEntityUsingRemovedByOrgRoleUserId);
					break;
				case "CallCenterAgentTeamLog_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallCenterAgentTeamLogEntityUsingAssignedByOrgRoleUserId);
					break;
				case "CallCenterAgentTeamLog":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallCenterAgentTeamLogEntityUsingAgentId);
					break;
				case "CallCenterTeam_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallCenterTeamEntityUsingModifiedBy);
					break;
				case "CallCenterTeam":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallCenterTeamEntityUsingCreatedBy);
					break;
				case "CallQueue_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueEntityUsingModifiedByOrgRoleUserId);
					break;
				case "CallQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueEntityUsingCreatedByOrgRoleUserId);
					break;
				case "CallQueueAssignment":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueAssignmentEntityUsingAssignedOrgRoleUserId);
					break;
				case "CallQueueCustomer__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingModifiedByOrgRoleUserId);
					break;
				case "CallQueueCustomer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingCreatedByOrgRoleUserId);
					break;
				case "CallQueueCustomer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingAssignedToOrgRoleUserId);
					break;
				case "CallQueueCustomerLock":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerLockEntityUsingCreatedBy);
					break;
				case "CallQueueCustomTag":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomTagEntityUsingCreatedBy);
					break;
				case "CallRoundCallQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallRoundCallQueueEntityUsingModifiedBy);
					break;
				case "Calls":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallsEntityUsingCreatedByOrgRoleUserId);
					break;
				case "CallUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallUploadEntityUsingUploadedBy);
					break;
				case "Campaign_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CampaignEntityUsingModifiedby);
					break;
				case "Campaign":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CampaignEntityUsingCreatedby);
					break;
				case "CampaignActivity_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CampaignActivityEntityUsingModifiedby);
					break;
				case "CampaignActivity":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CampaignActivityEntityUsingCreatedby);
					break;
				case "CampaignActivityAssignment":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CampaignActivityAssignmentEntityUsingAssignedToOrgRoleUserId);
					break;
				case "CampaignAssignment":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CampaignAssignmentEntityUsingAssignedToOrgRoleUserId);
					break;
				case "CdcontentGeneratorTracking":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CdcontentGeneratorTrackingEntityUsingDownloadedByOrgRoleUserId);
					break;
				case "ChaperoneAnswer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ChaperoneAnswerEntityUsingModifiedBy);
					break;
				case "ChaperoneAnswer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ChaperoneAnswerEntityUsingCreatedBy);
					break;
				case "ChaperoneSignature":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ChaperoneSignatureEntityUsingCreatedBy);
					break;
				case "Check_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CheckEntityUsingDataRecoderModifierId);
					break;
				case "Check":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CheckEntityUsingDataRecoderCreatorId);
					break;
				case "CheckListAnswer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CheckListAnswerEntityUsingModifiedBy);
					break;
				case "CheckListAnswer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CheckListAnswerEntityUsingCreatedBy);
					break;
				case "CheckListTemplate_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CheckListTemplateEntityUsingModifiedBy);
					break;
				case "CheckListTemplate":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CheckListTemplateEntityUsingCreatedBy);
					break;
				case "ClinicalTestQualificationCriteria_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ClinicalTestQualificationCriteriaEntityUsingModifiedBy);
					break;
				case "ClinicalTestQualificationCriteria":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ClinicalTestQualificationCriteriaEntityUsingCreatedBy);
					break;
				case "ContactCall_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ContactCallEntityUsingCreatedByOrgRoleUserId);
					break;
				case "ContactCall":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ContactCallEntityUsingCreatedByRoleId);
					break;
				case "ContactMeeting_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ContactMeetingEntityUsingCreatedByOrgRoleUserId);
					break;
				case "ContactMeeting":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ContactMeetingEntityUsingCreatedByRoleId);
					break;
				case "Content_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ContentEntityUsingModifiedBy);
					break;
				case "Content":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ContentEntityUsingCreatedBy);
					break;
				case "CorporateTag_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CorporateTagEntityUsingModifiedBy);
					break;
				case "CorporateTag":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CorporateTagEntityUsingCreatedBy);
					break;
				case "CorporateUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CorporateUploadEntityUsingUploadedBy);
					break;
				case "Coupons_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CouponsEntityUsingModifiedByOrgRoleUserId);
					break;
				case "Coupons":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CouponsEntityUsingCreatedByOrgRoleUserId);
					break;
				case "CurrentMedication":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CurrentMedicationEntityUsingCreatedByOrgRoleUserId);
					break;
				case "CustomerActivityTypeUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerActivityTypeUploadEntityUsingUploadedBy);
					break;
				case "CustomerCallAttempts":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerCallAttemptsEntityUsingUpdatedBy);
					break;
				case "CustomerCallQueueCallAttempt":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerCallQueueCallAttemptEntityUsingCreatedBy);
					break;
				case "CustomerClinicalQuestionAnswer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerClinicalQuestionAnswerEntityUsingModifiedBy);
					break;
				case "CustomerClinicalQuestionAnswer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerClinicalQuestionAnswerEntityUsingCreatedBy);
					break;
				case "CustomerEligibility_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerEligibilityEntityUsingModifiedBy);
					break;
				case "CustomerEligibility":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerEligibilityEntityUsingCreatedBy);
					break;
				case "CustomerEventCriticalTestData_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerEventCriticalTestDataEntityUsingValidatingTechnicianId);
					break;
				case "CustomerEventCriticalTestData":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerEventCriticalTestDataEntityUsingTechnicianId);
					break;
				case "CustomerEventPriorityInQueueData_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerEventPriorityInQueueDataEntityUsingModifiedByOrgRoleUserId);
					break;
				case "CustomerEventPriorityInQueueData":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerEventPriorityInQueueDataEntityUsingCreatedByOrgRoleUserId);
					break;
				case "CustomerEventReading":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerEventReadingEntityUsingUpdatedByOrgRoleUserId);
					break;
				case "CustomerEventTestPhysicianEvaluation":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerEventTestPhysicianEvaluationEntityUsingUpdatedByOrgRoleUserId);
					break;
				case "CustomerEventTestState__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerEventTestStateEntityUsingUpdatedByOrgRoleUserId);
					break;
				case "CustomerEventTestState_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerEventTestStateEntityUsingEvaluatedByOrgRoleUserId);
					break;
				case "CustomerEventTestState":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerEventTestStateEntityUsingConductedByOrgRoleUserId);
					break;
				case "CustomerEventUnableScreenReason":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerEventUnableScreenReasonEntityUsingUpdatedByOrgRoleUserId);
					break;
				case "CustomerHealthInfo":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerHealthInfoEntityUsingCreatedByOrgRoleUserId);
					break;
				case "CustomerHealthInfoArchive":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerHealthInfoArchiveEntityUsingCreatedByOrgRoleUserId);
					break;
				case "CustomerIcdCode":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerIcdCodeEntityUsingCreatedByOrgRoleUserId);
					break;
				case "CustomerLockForCall":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerLockForCallEntityUsingCreatedBy);
					break;
				case "CustomerMedicareQuestionAnswer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerMedicareQuestionAnswerEntityUsingCreateBy);
					break;
				case "CustomerPhoneNumberUpdateUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerPhoneNumberUpdateUploadEntityUsingUploadedByOrgRoleUserId);
					break;
				case "CustomerPrimaryCarePhysician_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingCreatedByOrgRoleUserId);
					break;
				case "CustomerPrimaryCarePhysician__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingPcpAddressVerifiedBy);
					break;
				case "CustomerPrimaryCarePhysician":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingUpdatedByOrganizationRoleUserId);
					break;
				case "CustomerProfileHistory":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerProfileHistoryEntityUsingCreatedBy);
					break;
				case "CustomerRegistrationNotes":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerRegistrationNotesEntityUsingCreatedByOrgRoleUserId);
					break;
				case "CustomerResultScreeningCommunication__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerResultScreeningCommunicationEntityUsingPhysicianOrgRoleUserId);
					break;
				case "CustomerResultScreeningCommunication_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerResultScreeningCommunicationEntityUsingFranchiseeAdminOrgRoleUserId);
					break;
				case "CustomerResultScreeningCommunication":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerResultScreeningCommunicationEntityUsingCommunicationInitiatedByOrgRoleUserId);
					break;
				case "CustomerTag_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerTagEntityUsingModifiedByOrgRoleUserId);
					break;
				case "CustomerTag":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerTagEntityUsingCreatedByOrgRoleUserId);
					break;
				case "CustomerTargeted_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerTargetedEntityUsingModifiedBy);
					break;
				case "CustomerTargeted":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerTargetedEntityUsingCreatedBy);
					break;
				case "CustomerWarmTransfer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerWarmTransferEntityUsingModifiedBy);
					break;
				case "CustomerWarmTransfer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerWarmTransferEntityUsingCreatedBy);
					break;
				case "CustomEventNotification":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomEventNotificationEntityUsingCreatedBy);
					break;
				case "DirectMail":
					toReturn.Add(OrganizationRoleUserEntity.Relations.DirectMailEntityUsingMailedBy);
					break;
				case "DirectMailType_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.DirectMailTypeEntityUsingModifiedBy);
					break;
				case "DirectMailType":
					toReturn.Add(OrganizationRoleUserEntity.Relations.DirectMailTypeEntityUsingCreatedBy);
					break;
				case "DisqualifiedTest_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.DisqualifiedTestEntityUsingUpdatedBy);
					break;
				case "DisqualifiedTest":
					toReturn.Add(OrganizationRoleUserEntity.Relations.DisqualifiedTestEntityUsingCreatedBy);
					break;
				case "Eligibility":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EligibilityEntityUsingCreatedByOrgRoleUserId);
					break;
				case "EligibilityUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EligibilityUploadEntityUsingUploadedBy);
					break;
				case "EmailTemplate":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EmailTemplateEntityUsingModifiedByOrgRoleUserId);
					break;
				case "EventAccountTestHcpcsCode_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventAccountTestHcpcsCodeEntityUsingModifiedBy);
					break;
				case "EventAccountTestHcpcsCode":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventAccountTestHcpcsCodeEntityUsingCreatedBy);
					break;
				case "EventActivityTemplate":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventActivityTemplateEntityUsingOrganizationRoleUserId);
					break;
				case "EventActivityTemplateCall":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventActivityTemplateCallEntityUsingResponsibleOrgRoleUserId);
					break;
				case "EventActivityTemplateEmail":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventActivityTemplateEmailEntityUsingResponsibleOrgRoleUserId);
					break;
				case "EventActivityTemplateMeeting":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventActivityTemplateMeetingEntityUsingResponsibleOrgRoleUserId);
					break;
				case "EventActivityTemplateTask":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventActivityTemplateTaskEntityUsingResponsibleOrgRoleUserId);
					break;
				case "EventAppointment":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventAppointmentEntityUsingScheduledByOrgRoleUserId);
					break;
				case "EventAppointmentCancellationLog":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventAppointmentCancellationLogEntityUsingCreatedBy);
					break;
				case "EventAppointmentChangeLog":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventAppointmentChangeLogEntityUsingCreatedByOrgRoleUserId);
					break;
				case "EventCustomerBasicBioMetric":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerBasicBioMetricEntityUsingCreatedByOrgRoleUserId);
					break;
				case "EventCustomerGiftCard":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerGiftCardEntityUsingCreatedBy);
					break;
				case "EventCustomerPrimaryCarePhysician":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerPrimaryCarePhysicianEntityUsingPcpAddressVerifiedBy);
					break;
				case "EventCustomerQuestionAnswer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerQuestionAnswerEntityUsingUpdatedBy);
					break;
				case "EventCustomerQuestionAnswer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerQuestionAnswerEntityUsingCreatedBy);
					break;
				case "EventCustomerResult___":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingSignedOffBy);
					break;
				case "EventCustomerResult__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingRegeneratedBy);
					break;
				case "EventCustomerResult_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingModifiedByOrgRoleUserId);
					break;
				case "EventCustomerResult____":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingVerifiedBy);
					break;
				case "EventCustomerResult______":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingInvoiceDateUpdatedBy);
					break;
				case "EventCustomerResult_______":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingChatPdfReviewedByOverreadPhysicianId);
					break;
				case "EventCustomerResult":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingCreatedByOrgRoleUserId);
					break;
				case "EventCustomerResult_____":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingCodedBy);
					break;
				case "EventCustomerResult________":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingChatPdfReviewedByPhysicianId);
					break;
				case "EventCustomerResultBloodLab":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultBloodLabEntityUsingCreatedByOrgRoleUserid);
					break;
				case "EventCustomerResultHistory":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultHistoryEntityUsingInvoiceDateUpdatedBy);
					break;
				case "EventCustomerResultHistory_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultHistoryEntityUsingChatPdfReviewedByPhysicianId);
					break;
				case "EventCustomerResultHistory__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultHistoryEntityUsingChatPdfReviewedByOverreadPhysicianId);
					break;
				case "EventCustomerRetest":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerRetestEntityUsingCreatedBy);
					break;
				case "EventCustomers_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingConfirmedBy);
					break;
				case "EventCustomers":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingCreatedByOrgRoleUserId);
					break;
				case "EventCustomerTestNotPerformedNotification":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerTestNotPerformedNotificationEntityUsingCreatedBy);
					break;
				case "EventNote_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventNoteEntityUsingModifiedBy);
					break;
				case "EventNote":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventNoteEntityUsingCreatedBy);
					break;
				case "EventPhysicianTest__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventPhysicianTestEntityUsingPhysicianId);
					break;
				case "EventPhysicianTest_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventPhysicianTestEntityUsingModifiedByOrgRoleUserId);
					break;
				case "EventPhysicianTest":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventPhysicianTestEntityUsingAssignedByOrgRoleUserId);
					break;
				case "Events___":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingSignOffOrgRoleUserId);
					break;
				case "Events____":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingUpdatedByAdmin);
					break;
				case "Events__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingEventActivityOrgRoleUserId);
					break;
				case "Events":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingAssignedToOrgRoleUserId);
					break;
				case "Events_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingCreatedByOrgRoleUserId);
					break;
				case "EventStaffAssignment__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventStaffAssignmentEntityUsingScheduledByOrgRoleUserId);
					break;
				case "EventStaffAssignment_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventStaffAssignmentEntityUsingActualStaffOrgRoleUserId);
					break;
				case "EventStaffAssignment":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventStaffAssignmentEntityUsingScheduledStaffOrgRoleUserId);
					break;
				case "ExitInterviewAnswer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ExitInterviewAnswerEntityUsingModifiedBy);
					break;
				case "ExitInterviewAnswer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ExitInterviewAnswerEntityUsingCreatedBy);
					break;
				case "ExitInterviewSignature":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ExitInterviewSignatureEntityUsingCreatedBy);
					break;
				case "ExportableReportsQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ExportableReportsQueueEntityUsingRequestedBy);
					break;
				case "File":
					toReturn.Add(OrganizationRoleUserEntity.Relations.FileEntityUsingCreatedBy);
					break;
				case "FillEventCallQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.FillEventCallQueueEntityUsingModifiedBy);
					break;
				case "FluConsentAnswer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.FluConsentAnswerEntityUsingModifiedBy);
					break;
				case "FluConsentAnswer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.FluConsentAnswerEntityUsingCreatedBy);
					break;
				case "FluConsentSignature":
					toReturn.Add(OrganizationRoleUserEntity.Relations.FluConsentSignatureEntityUsingCreatedBy);
					break;
				case "FluConsentTemplate_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.FluConsentTemplateEntityUsingModifiedBy);
					break;
				case "FluConsentTemplate":
					toReturn.Add(OrganizationRoleUserEntity.Relations.FluConsentTemplateEntityUsingCreatedBy);
					break;
				case "GcNotGivenReason_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.GcNotGivenReasonEntityUsingModifiedBy);
					break;
				case "GcNotGivenReason":
					toReturn.Add(OrganizationRoleUserEntity.Relations.GcNotGivenReasonEntityUsingCreatedBy);
					break;
				case "GuardianDetails_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.GuardianDetailsEntityUsingModifiedBy);
					break;
				case "GuardianDetails":
					toReturn.Add(OrganizationRoleUserEntity.Relations.GuardianDetailsEntityUsingCreatedBy);
					break;
				case "HafTemplate_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HafTemplateEntityUsingModifiedBy);
					break;
				case "HafTemplate":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HafTemplateEntityUsingCreatedBy);
					break;
				case "HcpcsCode_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HcpcsCodeEntityUsingModifiedBy);
					break;
				case "HcpcsCode":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HcpcsCodeEntityUsingCreatedBy);
					break;
				case "HealthPlanCallQueueCriteria__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanCallQueueCriteriaEntityUsingModifiedByOrgRoleUserId);
					break;
				case "HealthPlanCallQueueCriteria_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanCallQueueCriteriaEntityUsingCreatedByOrgRoleUserId);
					break;
				case "HealthPlanCriteriaAssignment__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanCriteriaAssignmentEntityUsingModifiedBy);
					break;
				case "HealthPlanCriteriaAssignment_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanCriteriaAssignmentEntityUsingCreatedBy);
					break;
				case "HealthPlanCriteriaAssignment":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanCriteriaAssignmentEntityUsingAssignedToOrgRoleUserId);
					break;
				case "HealthPlanCriteriaAssignmentUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanCriteriaAssignmentUploadEntityUsingUploadedByOrgRoleUserId);
					break;
				case "HealthPlanCriteriaTeamAssignment_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanCriteriaTeamAssignmentEntityUsingModifiedBy);
					break;
				case "HealthPlanCriteriaTeamAssignment":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanCriteriaTeamAssignmentEntityUsingCreatedBy);
					break;
				case "HealthPlanRevenue_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanRevenueEntityUsingModifiedBy);
					break;
				case "HealthPlanRevenue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanRevenueEntityUsingCreatedBy);
					break;
				case "HospitalPartnerCustomer__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HospitalPartnerCustomerEntityUsingModifiedByOrgRoleUserId);
					break;
				case "HospitalPartnerCustomer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HospitalPartnerCustomerEntityUsingCreatedByOrgRoleUserId);
					break;
				case "HospitalPartnerCustomer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HospitalPartnerCustomerEntityUsingCareCoordinatorOrgRoleUserId);
					break;
				case "HostFacilityRanking":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HostFacilityRankingEntityUsingRankedByOrganizationRoleUserId);
					break;
				case "HostPayment":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HostPaymentEntityUsingCreatorOrganizationRoleUserId);
					break;
				case "HostPaymentTransaction":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HostPaymentTransactionEntityUsingCreatedByOrgRoleUserId);
					break;
				case "IcdCodes_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.IcdCodesEntityUsingModifiedBy);
					break;
				case "IcdCodes":
					toReturn.Add(OrganizationRoleUserEntity.Relations.IcdCodesEntityUsingCreatedBy);
					break;
				case "IncidentalFindings":
					toReturn.Add(OrganizationRoleUserEntity.Relations.IncidentalFindingsEntityUsingCreatedByOrgRoleUserId);
					break;
				case "KynLabValues_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.KynLabValuesEntityUsingModifiedByOrgRoleUserId);
					break;
				case "KynLabValues":
					toReturn.Add(OrganizationRoleUserEntity.Relations.KynLabValuesEntityUsingCreatedByOrgRoleUserId);
					break;
				case "Lab":
					toReturn.Add(OrganizationRoleUserEntity.Relations.LabEntityUsingCreatedByOrgRoleUserId);
					break;
				case "Language":
					toReturn.Add(OrganizationRoleUserEntity.Relations.LanguageEntityUsingCreatedByOrgRoleUserId);
					break;
				case "LanguageBarrierCallQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.LanguageBarrierCallQueueEntityUsingModifiedBy);
					break;
				case "MailRoundCallQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.MailRoundCallQueueEntityUsingModifiedBy);
					break;
				case "MarketingPrintOrder":
					toReturn.Add(OrganizationRoleUserEntity.Relations.MarketingPrintOrderEntityUsingOrgRoleUserId);
					break;
				case "Medication_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.MedicationEntityUsingModifiedBy);
					break;
				case "Medication":
					toReturn.Add(OrganizationRoleUserEntity.Relations.MedicationEntityUsingCreatedBy);
					break;
				case "MedicationUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.MedicationUploadEntityUsingUploadedBy);
					break;
				case "MergeCustomerUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.MergeCustomerUploadEntityUsingUploadedBy);
					break;
				case "NoShowCallQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.NoShowCallQueueEntityUsingModifiedBy);
					break;
				case "NotesDetails_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.NotesDetailsEntityUsingModifiedByOrgRoleUserId);
					break;
				case "NotesDetails":
					toReturn.Add(OrganizationRoleUserEntity.Relations.NotesDetailsEntityUsingCreatedByOrgRoleUserId);
					break;
				case "Notification":
					toReturn.Add(OrganizationRoleUserEntity.Relations.NotificationEntityUsingRequestedByOrgRoleUserId);
					break;
				case "NotificationType":
					toReturn.Add(OrganizationRoleUserEntity.Relations.NotificationTypeEntityUsingModifiedByOrgRoleUserId);
					break;
				case "OrganizationRoleUserTerritory":
					toReturn.Add(OrganizationRoleUserEntity.Relations.OrganizationRoleUserTerritoryEntityUsingOrganizationRoleUserId);
					break;
				case "OrgRoleUserActivity":
					toReturn.Add(OrganizationRoleUserEntity.Relations.OrgRoleUserActivityEntityUsingOrgRoleUserId);
					break;
				case "ParticipationConsentSignature":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ParticipationConsentSignatureEntityUsingCreatedBy);
					break;
				case "PasswordChangelog":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PasswordChangelogEntityUsingCreatedByOrgRoleUserId);
					break;
				case "PayPeriod_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PayPeriodEntityUsingModifiedBy);
					break;
				case "PayPeriod":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PayPeriodEntityUsingCreatedBy);
					break;
				case "PcpAppointment_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PcpAppointmentEntityUsingModifiedBy);
					break;
				case "PcpAppointment":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PcpAppointmentEntityUsingCreatedBy);
					break;
				case "PcpDisposition_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PcpDispositionEntityUsingModifiedBy);
					break;
				case "PcpDisposition":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PcpDispositionEntityUsingCreatedBy);
					break;
				case "PhysicianRecordRequestSignature":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PhysicianRecordRequestSignatureEntityUsingCreatedBy);
					break;
				case "PinChangelog":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PinChangelogEntityUsingCreatedByOrgRoleUserId);
					break;
				case "PodDefaultTeam":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PodDefaultTeamEntityUsingOrgnizationRoleUserId);
					break;
				case "PreApprovedPackage":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PreApprovedPackageEntityUsingCreatedByOrgRoleUserId);
					break;
				case "PreApprovedTest":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PreApprovedTestEntityUsingCreatedByOrgRoleUserId);
					break;
				case "PreAssessmentCallQueueCustomerLock":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PreAssessmentCallQueueCustomerLockEntityUsingCreatedBy);
					break;
				case "PreAssessmentCustomerCallQueueCallAttempt":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PreAssessmentCustomerCallQueueCallAttemptEntityUsingCreatedBy);
					break;
				case "PreQualificationQuestion":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PreQualificationQuestionEntityUsingCreatedBy);
					break;
				case "PreQualificationTestTemplate_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PreQualificationTestTemplateEntityUsingUpdatedBy);
					break;
				case "PreQualificationTestTemplate":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PreQualificationTestTemplateEntityUsingCreatedBy);
					break;
				case "PrintOrderItemTracking_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PrintOrderItemTrackingEntityUsingUpdatedByOrgRoleUserId);
					break;
				case "PrintOrderItemTracking":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PrintOrderItemTrackingEntityUsingCreatedByOrgRoleUserId);
					break;
				case "PriorityInQueue_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PriorityInQueueEntityUsingModifiedByOrgRoleUserId);
					break;
				case "PriorityInQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PriorityInQueueEntityUsingCreatedByOrgRoleUserId);
					break;
				case "ProspectCustomer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ProspectCustomerEntityUsingContactedBy);
					break;
				case "Prospects":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ProspectsEntityUsingOrgRoleUserId);
					break;
				case "RapsUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.RapsUploadEntityUsingUploadedBy);
					break;
				case "Referral":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ReferralEntityUsingReferedByOrgRoleUserId);
					break;
				case "RefundRequest_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.RefundRequestEntityUsingProcessedByOrgRoleUserId);
					break;
				case "RefundRequest":
					toReturn.Add(OrganizationRoleUserEntity.Relations.RefundRequestEntityUsingRequestedByOrgRoleUserId);
					break;
				case "RequiredTest":
					toReturn.Add(OrganizationRoleUserEntity.Relations.RequiredTestEntityUsingCreatedBy);
					break;
				case "SalesRepPodAssigments":
					toReturn.Add(OrganizationRoleUserEntity.Relations.SalesRepPodAssigmentsEntityUsingOrganizationRoleUserId);
					break;
				case "ScheduleTemplate_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ScheduleTemplateEntityUsingModifiedByOrgRoleUserId);
					break;
				case "ScheduleTemplate":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ScheduleTemplateEntityUsingModifiedBy);
					break;
				case "Seminars":
					toReturn.Add(OrganizationRoleUserEntity.Relations.SeminarsEntityUsingOrgRoleUserId);
					break;
				case "ShippingDetail_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ShippingDetailEntityUsingShippedByOrgRoleUserId);
					break;
				case "ShippingDetail":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ShippingDetailEntityUsingModifiedBy);
					break;
				case "SourceCodeChangeLog":
					toReturn.Add(OrganizationRoleUserEntity.Relations.SourceCodeChangeLogEntityUsingShellid);
					break;
				case "StaffEventScheduleUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.StaffEventScheduleUploadEntityUsingUploadedByOrgRoleUserId);
					break;
				case "SurveyAnswer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.SurveyAnswerEntityUsingModifiedBy);
					break;
				case "SurveyAnswer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.SurveyAnswerEntityUsingCreatedBy);
					break;
				case "SurveyTemplate_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.SurveyTemplateEntityUsingModifiedBy);
					break;
				case "SurveyTemplate":
					toReturn.Add(OrganizationRoleUserEntity.Relations.SurveyTemplateEntityUsingCreatedBy);
					break;
				case "SuspectConditionUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.SuspectConditionUploadEntityUsingUploadedBy);
					break;
				case "SystemGenertedCallQueueCriteria__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.SystemGeneratedCallQueueCriteriaEntityUsingModifiedByOrgRoleUserId);
					break;
				case "SystemGenertedCallQueueCriteria_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.SystemGeneratedCallQueueCriteriaEntityUsingCreatedByOrgRoleUserId);
					break;
				case "SystemGenertedCallQueueCriteria":
					toReturn.Add(OrganizationRoleUserEntity.Relations.SystemGeneratedCallQueueCriteriaEntityUsingAssignedToOrgRoleUserId);
					break;
				case "TaskDetails__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TaskDetailsEntityUsingModifiedByOrgRoleUserId);
					break;
				case "TaskDetails_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TaskDetailsEntityUsingCreatedByOrgRoleUserId);
					break;
				case "TaskDetails":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TaskDetailsEntityUsingAssignedToOrgRoleUserId);
					break;
				case "Territory":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TerritoryEntityUsingCreatedBy);
					break;
				case "TestHcpcsCode_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TestHcpcsCodeEntityUsingModifiedBy);
					break;
				case "TestHcpcsCode":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TestHcpcsCodeEntityUsingCreatedBy);
					break;
				case "TestNotPerformed_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TestNotPerformedEntityUsingUpdatedBy);
					break;
				case "TestNotPerformed":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TestNotPerformedEntityUsingCreatedBy);
					break;
				case "TestNotPerformedReason":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TestNotPerformedReasonEntityUsingCreatedBy);
					break;
				case "TestPerformedExternally_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TestPerformedExternallyEntityUsingModifiedBy);
					break;
				case "TestPerformedExternally":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TestPerformedExternallyEntityUsingCreatedBy);
					break;
				case "UncontactedCustomerCallQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.UncontactedCustomerCallQueueEntityUsingModifiedBy);
					break;
				case "UploadZipInfo":
					toReturn.Add(OrganizationRoleUserEntity.Relations.UploadZipInfoEntityUsingUploadedByOrgRoleUserId);
					break;
				case "User__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.UserEntityUsingModifiedByOrgRoleUserId);
					break;
				case "User_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.UserEntityUsingCreatedByOrgRoleUserId);
					break;
				case "AccountCollectionViaFillEventCallQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.FillEventCallQueueEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "FillEventCallQueue_", JoinHint.None);
					toReturn.Add(FillEventCallQueueEntity.Relations.AccountEntityUsingHealthPlanId, "FillEventCallQueue_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaMailRoundCallQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.MailRoundCallQueueEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "MailRoundCallQueue_", JoinHint.None);
					toReturn.Add(MailRoundCallQueueEntity.Relations.AccountEntityUsingHealthPlanId, "MailRoundCallQueue_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaEligibilityUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EligibilityUploadEntityUsingUploadedBy, "OrganizationRoleUserEntity__", "EligibilityUpload_", JoinHint.None);
					toReturn.Add(EligibilityUploadEntity.Relations.AccountEntityUsingAccountId, "EligibilityUpload_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaCorporateUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CorporateUploadEntityUsingUploadedBy, "OrganizationRoleUserEntity__", "CorporateUpload_", JoinHint.None);
					toReturn.Add(CorporateUploadEntity.Relations.AccountEntityUsingAccountId, "CorporateUpload_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaHealthPlanCallQueueCriteria":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanCallQueueCriteriaEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "HealthPlanCallQueueCriteria_", JoinHint.None);
					toReturn.Add(HealthPlanCallQueueCriteriaEntity.Relations.AccountEntityUsingHealthPlanId, "HealthPlanCallQueueCriteria_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaCallQueueCustomer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.AccountEntityUsingHealthPlanId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaCallQueueCustomer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingAssignedToOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.AccountEntityUsingHealthPlanId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaCallQueueCustomer__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.AccountEntityUsingHealthPlanId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaHealthPlanRevenue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanRevenueEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "HealthPlanRevenue_", JoinHint.None);
					toReturn.Add(HealthPlanRevenueEntity.Relations.AccountEntityUsingAccountId, "HealthPlanRevenue_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaHealthPlanRevenue_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanRevenueEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "HealthPlanRevenue_", JoinHint.None);
					toReturn.Add(HealthPlanRevenueEntity.Relations.AccountEntityUsingAccountId, "HealthPlanRevenue_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaCorporateTag_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CorporateTagEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "CorporateTag_", JoinHint.None);
					toReturn.Add(CorporateTagEntity.Relations.AccountEntityUsingCorporateId, "CorporateTag_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaLanguageBarrierCallQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.LanguageBarrierCallQueueEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "LanguageBarrierCallQueue_", JoinHint.None);
					toReturn.Add(LanguageBarrierCallQueueEntity.Relations.AccountEntityUsingHealthPlanId, "LanguageBarrierCallQueue_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaEventNote":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventNoteEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "EventNote_", JoinHint.None);
					toReturn.Add(EventNoteEntity.Relations.AccountEntityUsingHealthPlanId, "EventNote_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaCampaign":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CampaignEntityUsingCreatedby, "OrganizationRoleUserEntity__", "Campaign_", JoinHint.None);
					toReturn.Add(CampaignEntity.Relations.AccountEntityUsingAccountId, "Campaign_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaEventNote_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventNoteEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "EventNote_", JoinHint.None);
					toReturn.Add(EventNoteEntity.Relations.AccountEntityUsingHealthPlanId, "EventNote_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaCampaign_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CampaignEntityUsingModifiedby, "OrganizationRoleUserEntity__", "Campaign_", JoinHint.None);
					toReturn.Add(CampaignEntity.Relations.AccountEntityUsingAccountId, "Campaign_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaHealthPlanCallQueueCriteria_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanCallQueueCriteriaEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "HealthPlanCallQueueCriteria_", JoinHint.None);
					toReturn.Add(HealthPlanCallQueueCriteriaEntity.Relations.AccountEntityUsingHealthPlanId, "HealthPlanCallQueueCriteria_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaCorporateTag":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CorporateTagEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "CorporateTag_", JoinHint.None);
					toReturn.Add(CorporateTagEntity.Relations.AccountEntityUsingCorporateId, "CorporateTag_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaCallQueueCustomTag":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomTagEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "CallQueueCustomTag_", JoinHint.None);
					toReturn.Add(CallQueueCustomTagEntity.Relations.AccountEntityUsingHealthPlanId, "CallQueueCustomTag_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaCalls":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallsEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "Calls_", JoinHint.None);
					toReturn.Add(CallsEntity.Relations.AccountEntityUsingHealthPlanId, "Calls_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaCallRoundCallQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallRoundCallQueueEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "CallRoundCallQueue_", JoinHint.None);
					toReturn.Add(CallRoundCallQueueEntity.Relations.AccountEntityUsingHealthPlanId, "CallRoundCallQueue_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaAccountHraChatQuestionnaire_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AccountHraChatQuestionnaireEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "AccountHraChatQuestionnaire_", JoinHint.None);
					toReturn.Add(AccountHraChatQuestionnaireEntity.Relations.AccountEntityUsingAccountId, "AccountHraChatQuestionnaire_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaAccountHraChatQuestionnaire":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AccountHraChatQuestionnaireEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "AccountHraChatQuestionnaire_", JoinHint.None);
					toReturn.Add(AccountHraChatQuestionnaireEntity.Relations.AccountEntityUsingAccountId, "AccountHraChatQuestionnaire_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaUncontactedCustomerCallQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.UncontactedCustomerCallQueueEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "UncontactedCustomerCallQueue_", JoinHint.None);
					toReturn.Add(UncontactedCustomerCallQueueEntity.Relations.AccountEntityUsingHealthPlanId, "UncontactedCustomerCallQueue_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaCustomEventNotification":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomEventNotificationEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "CustomEventNotification_", JoinHint.None);
					toReturn.Add(CustomEventNotificationEntity.Relations.AccountEntityUsingAccountId, "CustomEventNotification_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaNoShowCallQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.NoShowCallQueueEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "NoShowCallQueue_", JoinHint.None);
					toReturn.Add(NoShowCallQueueEntity.Relations.AccountEntityUsingHealthPlanId, "NoShowCallQueue_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaAccountCallCenterOrganization_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AccountCallCenterOrganizationEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "AccountCallCenterOrganization_", JoinHint.None);
					toReturn.Add(AccountCallCenterOrganizationEntity.Relations.AccountEntityUsingAccountId, "AccountCallCenterOrganization_", string.Empty, JoinHint.None);
					break;
				case "AccountCollectionViaAccountCallCenterOrganization":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AccountCallCenterOrganizationEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "AccountCallCenterOrganization_", JoinHint.None);
					toReturn.Add(AccountCallCenterOrganizationEntity.Relations.AccountEntityUsingAccountId, "AccountCallCenterOrganization_", string.Empty, JoinHint.None);
					break;
				case "ActivityCollectionViaOrgRoleUserActivity":
					toReturn.Add(OrganizationRoleUserEntity.Relations.OrgRoleUserActivityEntityUsingOrgRoleUserId, "OrganizationRoleUserEntity__", "OrgRoleUserActivity_", JoinHint.None);
					toReturn.Add(OrgRoleUserActivityEntity.Relations.ActivityEntityUsingActivityId, "OrgRoleUserActivity_", string.Empty, JoinHint.None);
					break;
				case "ActivityTypeCollectionViaCallQueueCustomer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingAssignedToOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.ActivityTypeEntityUsingActivityId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "ActivityTypeCollectionViaCallQueueCustomer__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.ActivityTypeEntityUsingActivityId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "ActivityTypeCollectionViaCallQueueCustomer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.ActivityTypeEntityUsingActivityId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "AddressCollectionViaCustomerPrimaryCarePhysician_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerPrimaryCarePhysician_", JoinHint.None);
					toReturn.Add(CustomerPrimaryCarePhysicianEntity.Relations.AddressEntityUsingPcpaddress, "CustomerPrimaryCarePhysician_", string.Empty, JoinHint.None);
					break;
				case "AddressCollectionViaProspects":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ProspectsEntityUsingOrgRoleUserId, "OrganizationRoleUserEntity__", "Prospects_", JoinHint.None);
					toReturn.Add(ProspectsEntity.Relations.AddressEntityUsingAddressId, "Prospects_", string.Empty, JoinHint.None);
					break;
				case "AddressCollectionViaCustomerPrimaryCarePhysician___":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerPrimaryCarePhysician_", JoinHint.None);
					toReturn.Add(CustomerPrimaryCarePhysicianEntity.Relations.AddressEntityUsingMailingAddressId, "CustomerPrimaryCarePhysician_", string.Empty, JoinHint.None);
					break;
				case "AddressCollectionViaCustomerPrimaryCarePhysician____":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingPcpAddressVerifiedBy, "OrganizationRoleUserEntity__", "CustomerPrimaryCarePhysician_", JoinHint.None);
					toReturn.Add(CustomerPrimaryCarePhysicianEntity.Relations.AddressEntityUsingPcpaddress, "CustomerPrimaryCarePhysician_", string.Empty, JoinHint.None);
					break;
				case "AddressCollectionViaUser":
					toReturn.Add(OrganizationRoleUserEntity.Relations.UserEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "User_", JoinHint.None);
					toReturn.Add(UserEntity.Relations.AddressEntityUsingHomeAddressId, "User_", string.Empty, JoinHint.None);
					break;
				case "AddressCollectionViaUser_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.UserEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "User_", JoinHint.None);
					toReturn.Add(UserEntity.Relations.AddressEntityUsingHomeAddressId, "User_", string.Empty, JoinHint.None);
					break;
				case "AddressCollectionViaShippingDetail":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ShippingDetailEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "ShippingDetail_", JoinHint.None);
					toReturn.Add(ShippingDetailEntity.Relations.AddressEntityUsingShippingAddressId, "ShippingDetail_", string.Empty, JoinHint.None);
					break;
				case "AddressCollectionViaHostPayment":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HostPaymentEntityUsingCreatorOrganizationRoleUserId, "OrganizationRoleUserEntity__", "HostPayment_", JoinHint.None);
					toReturn.Add(HostPaymentEntity.Relations.AddressEntityUsingMailingAddressId, "HostPayment_", string.Empty, JoinHint.None);
					break;
				case "AddressCollectionViaShippingDetail_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ShippingDetailEntityUsingShippedByOrgRoleUserId, "OrganizationRoleUserEntity__", "ShippingDetail_", JoinHint.None);
					toReturn.Add(ShippingDetailEntity.Relations.AddressEntityUsingShippingAddressId, "ShippingDetail_", string.Empty, JoinHint.None);
					break;
				case "AddressCollectionViaCustomerPrimaryCarePhysician":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingUpdatedByOrganizationRoleUserId, "OrganizationRoleUserEntity__", "CustomerPrimaryCarePhysician_", JoinHint.None);
					toReturn.Add(CustomerPrimaryCarePhysicianEntity.Relations.AddressEntityUsingPcpaddress, "CustomerPrimaryCarePhysician_", string.Empty, JoinHint.None);
					break;
				case "AddressCollectionViaCustomerPrimaryCarePhysician__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingUpdatedByOrganizationRoleUserId, "OrganizationRoleUserEntity__", "CustomerPrimaryCarePhysician_", JoinHint.None);
					toReturn.Add(CustomerPrimaryCarePhysicianEntity.Relations.AddressEntityUsingMailingAddressId, "CustomerPrimaryCarePhysician_", string.Empty, JoinHint.None);
					break;
				case "AddressCollectionViaCustomerPrimaryCarePhysician_____":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingPcpAddressVerifiedBy, "OrganizationRoleUserEntity__", "CustomerPrimaryCarePhysician_", JoinHint.None);
					toReturn.Add(CustomerPrimaryCarePhysicianEntity.Relations.AddressEntityUsingMailingAddressId, "CustomerPrimaryCarePhysician_", string.Empty, JoinHint.None);
					break;
				case "AfadvertiserCollectionViaAfcampaign":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AfcampaignEntityUsingShellId, "OrganizationRoleUserEntity__", "Afcampaign_", JoinHint.None);
					toReturn.Add(AfcampaignEntity.Relations.AfadvertiserEntityUsingAdvertiserId, "Afcampaign_", string.Empty, JoinHint.None);
					break;
				case "AfadvertiserCollectionViaAfcampaign_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AfcampaignEntityUsingRoleId, "OrganizationRoleUserEntity__", "Afcampaign_", JoinHint.None);
					toReturn.Add(AfcampaignEntity.Relations.AfadvertiserEntityUsingAdvertiserId, "Afcampaign_", string.Empty, JoinHint.None);
					break;
				case "AfaffiliateCampaignCollectionViaEventCustomers":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "EventCustomers_", JoinHint.None);
					toReturn.Add(EventCustomersEntity.Relations.AfaffiliateCampaignEntityUsingAffiliateCampaignId, "EventCustomers_", string.Empty, JoinHint.None);
					break;
				case "AfaffiliateCampaignCollectionViaEventCustomers_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingConfirmedBy, "OrganizationRoleUserEntity__", "EventCustomers_", JoinHint.None);
					toReturn.Add(EventCustomersEntity.Relations.AfaffiliateCampaignEntityUsingAffiliateCampaignId, "EventCustomers_", string.Empty, JoinHint.None);
					break;
				case "AfaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ProspectCustomerEntityUsingContactedBy, "OrganizationRoleUserEntity__", "ProspectCustomer_", JoinHint.None);
					toReturn.Add(ProspectCustomerEntity.Relations.AfaffiliateCampaignMarketingMaterialEntityUsingAffiliateCampaignMarketingMaterialId, "ProspectCustomer_", string.Empty, JoinHint.None);
					break;
				case "CallCenterTeamCollectionViaCallCenterAgentTeam":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallCenterAgentTeamEntityUsingAgentId, "OrganizationRoleUserEntity__", "CallCenterAgentTeam_", JoinHint.None);
					toReturn.Add(CallCenterAgentTeamEntity.Relations.CallCenterTeamEntityUsingTeamId, "CallCenterAgentTeam_", string.Empty, JoinHint.None);
					break;
				case "CallCenterTeamCollectionViaCallCenterAgentTeamLog":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallCenterAgentTeamLogEntityUsingAgentId, "OrganizationRoleUserEntity__", "CallCenterAgentTeamLog_", JoinHint.None);
					toReturn.Add(CallCenterAgentTeamLogEntity.Relations.CallCenterTeamEntityUsingTeamId, "CallCenterAgentTeamLog_", string.Empty, JoinHint.None);
					break;
				case "CallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanCriteriaTeamAssignmentEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "HealthPlanCriteriaTeamAssignment_", JoinHint.None);
					toReturn.Add(HealthPlanCriteriaTeamAssignmentEntity.Relations.CallCenterTeamEntityUsingTeamId, "HealthPlanCriteriaTeamAssignment_", string.Empty, JoinHint.None);
					break;
				case "CallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanCriteriaTeamAssignmentEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "HealthPlanCriteriaTeamAssignment_", JoinHint.None);
					toReturn.Add(HealthPlanCriteriaTeamAssignmentEntity.Relations.CallCenterTeamEntityUsingTeamId, "HealthPlanCriteriaTeamAssignment_", string.Empty, JoinHint.None);
					break;
				case "CallCenterTeamCollectionViaCallCenterAgentTeamLog_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallCenterAgentTeamLogEntityUsingAssignedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CallCenterAgentTeamLog_", JoinHint.None);
					toReturn.Add(CallCenterAgentTeamLogEntity.Relations.CallCenterTeamEntityUsingTeamId, "CallCenterAgentTeamLog_", string.Empty, JoinHint.None);
					break;
				case "CallCenterTeamCollectionViaCallCenterAgentTeamLog__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallCenterAgentTeamLogEntityUsingRemovedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CallCenterAgentTeamLog_", JoinHint.None);
					toReturn.Add(CallCenterAgentTeamLogEntity.Relations.CallCenterTeamEntityUsingTeamId, "CallCenterAgentTeamLog_", string.Empty, JoinHint.None);
					break;
				case "CallQueueCollectionViaCallQueueCustomer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.CallQueueEntityUsingCallQueueId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "CallQueueCollectionViaHealthPlanCallQueueCriteria__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanCallQueueCriteriaEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "HealthPlanCallQueueCriteria_", JoinHint.None);
					toReturn.Add(HealthPlanCallQueueCriteriaEntity.Relations.CallQueueEntityUsingCallQueueId, "HealthPlanCallQueueCriteria_", string.Empty, JoinHint.None);
					break;
				case "CallQueueCollectionViaCallQueueCustomer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingAssignedToOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.CallQueueEntityUsingCallQueueId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "CallQueueCollectionViaCalls":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallsEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "Calls_", JoinHint.None);
					toReturn.Add(CallsEntity.Relations.CallQueueEntityUsingCallQueueId, "Calls_", string.Empty, JoinHint.None);
					break;
				case "CallQueueCollectionViaCallQueueAssignment":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueAssignmentEntityUsingAssignedOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueAssignment_", JoinHint.None);
					toReturn.Add(CallQueueAssignmentEntity.Relations.CallQueueEntityUsingCallQueueId, "CallQueueAssignment_", string.Empty, JoinHint.None);
					break;
				case "CallQueueCollectionViaSystemGenertedCallQueueCriteria__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.SystemGeneratedCallQueueCriteriaEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "SystemGeneratedCallQueueCriteria_", JoinHint.None);
					toReturn.Add(SystemGeneratedCallQueueCriteriaEntity.Relations.CallQueueEntityUsingCallQueueId, "SystemGeneratedCallQueueCriteria_", string.Empty, JoinHint.None);
					break;
				case "CallQueueCollectionViaSystemGenertedCallQueueCriteria_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.SystemGeneratedCallQueueCriteriaEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "SystemGeneratedCallQueueCriteria_", JoinHint.None);
					toReturn.Add(SystemGeneratedCallQueueCriteriaEntity.Relations.CallQueueEntityUsingCallQueueId, "SystemGeneratedCallQueueCriteria_", string.Empty, JoinHint.None);
					break;
				case "CallQueueCollectionViaCallQueueCustomer__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.CallQueueEntityUsingCallQueueId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "CallQueueCollectionViaHealthPlanCallQueueCriteria_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanCallQueueCriteriaEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "HealthPlanCallQueueCriteria_", JoinHint.None);
					toReturn.Add(HealthPlanCallQueueCriteriaEntity.Relations.CallQueueEntityUsingCallQueueId, "HealthPlanCallQueueCriteria_", string.Empty, JoinHint.None);
					break;
				case "CallQueueCollectionViaSystemGenertedCallQueueCriteria":
					toReturn.Add(OrganizationRoleUserEntity.Relations.SystemGeneratedCallQueueCriteriaEntityUsingAssignedToOrgRoleUserId, "OrganizationRoleUserEntity__", "SystemGeneratedCallQueueCriteria_", JoinHint.None);
					toReturn.Add(SystemGeneratedCallQueueCriteriaEntity.Relations.CallQueueEntityUsingCallQueueId, "SystemGeneratedCallQueueCriteria_", string.Empty, JoinHint.None);
					break;
				case "CallQueueCriteriaCollectionViaCallQueueCustomer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingAssignedToOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.CallQueueCriteriaEntityUsingCallQueueCriteriaId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "CallQueueCriteriaCollectionViaCallQueueCustomer__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.CallQueueCriteriaEntityUsingCallQueueCriteriaId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "CallQueueCriteriaCollectionViaCallQueueCustomer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.CallQueueCriteriaEntityUsingCallQueueCriteriaId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "CallQueueCustomerCollectionViaCustomerCallQueueCallAttempt":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerCallQueueCallAttemptEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "CustomerCallQueueCallAttempt_", JoinHint.None);
					toReturn.Add(CustomerCallQueueCallAttemptEntity.Relations.CallQueueCustomerEntityUsingCallQueueCustomerId, "CustomerCallQueueCallAttempt_", string.Empty, JoinHint.None);
					break;
				case "CallsCollectionViaCustomerCallQueueCallAttempt":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerCallQueueCallAttemptEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "CustomerCallQueueCallAttempt_", JoinHint.None);
					toReturn.Add(CustomerCallQueueCallAttemptEntity.Relations.CallsEntityUsingCallId, "CustomerCallQueueCallAttempt_", string.Empty, JoinHint.None);
					break;
				case "CallsCollectionViaPreAssessmentCustomerCallQueueCallAttempt":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PreAssessmentCustomerCallQueueCallAttemptEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "PreAssessmentCustomerCallQueueCallAttempt_", JoinHint.None);
					toReturn.Add(PreAssessmentCustomerCallQueueCallAttemptEntity.Relations.CallsEntityUsingCallId, "PreAssessmentCustomerCallQueueCallAttempt_", string.Empty, JoinHint.None);
					break;
				case "CallUploadCollectionViaDirectMail":
					toReturn.Add(OrganizationRoleUserEntity.Relations.DirectMailEntityUsingMailedBy, "OrganizationRoleUserEntity__", "DirectMail_", JoinHint.None);
					toReturn.Add(DirectMailEntity.Relations.CallUploadEntityUsingCallUploadId, "DirectMail_", string.Empty, JoinHint.None);
					break;
				case "CampaignCollectionViaCallQueueCustomer__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.CampaignEntityUsingCampaignId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "CampaignCollectionViaCampaignAssignment":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CampaignAssignmentEntityUsingAssignedToOrgRoleUserId, "OrganizationRoleUserEntity__", "CampaignAssignment_", JoinHint.None);
					toReturn.Add(CampaignAssignmentEntity.Relations.CampaignEntityUsingCampaignId, "CampaignAssignment_", string.Empty, JoinHint.None);
					break;
				case "CampaignCollectionViaCallQueueCustomer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingAssignedToOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.CampaignEntityUsingCampaignId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "CampaignCollectionViaCampaignActivity_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CampaignActivityEntityUsingModifiedby, "OrganizationRoleUserEntity__", "CampaignActivity_", JoinHint.None);
					toReturn.Add(CampaignActivityEntity.Relations.CampaignEntityUsingCampaignId, "CampaignActivity_", string.Empty, JoinHint.None);
					break;
				case "CampaignCollectionViaHealthPlanCallQueueCriteria_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanCallQueueCriteriaEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "HealthPlanCallQueueCriteria_", JoinHint.None);
					toReturn.Add(HealthPlanCallQueueCriteriaEntity.Relations.CampaignEntityUsingCampaignId, "HealthPlanCallQueueCriteria_", string.Empty, JoinHint.None);
					break;
				case "CampaignCollectionViaCampaignActivity":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CampaignActivityEntityUsingCreatedby, "OrganizationRoleUserEntity__", "CampaignActivity_", JoinHint.None);
					toReturn.Add(CampaignActivityEntity.Relations.CampaignEntityUsingCampaignId, "CampaignActivity_", string.Empty, JoinHint.None);
					break;
				case "CampaignCollectionViaCalls":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallsEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "Calls_", JoinHint.None);
					toReturn.Add(CallsEntity.Relations.CampaignEntityUsingCampaignId, "Calls_", string.Empty, JoinHint.None);
					break;
				case "CampaignCollectionViaEventCustomers_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingConfirmedBy, "OrganizationRoleUserEntity__", "EventCustomers_", JoinHint.None);
					toReturn.Add(EventCustomersEntity.Relations.CampaignEntityUsingCampaignId, "EventCustomers_", string.Empty, JoinHint.None);
					break;
				case "CampaignCollectionViaHealthPlanCallQueueCriteria":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanCallQueueCriteriaEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "HealthPlanCallQueueCriteria_", JoinHint.None);
					toReturn.Add(HealthPlanCallQueueCriteriaEntity.Relations.CampaignEntityUsingCampaignId, "HealthPlanCallQueueCriteria_", string.Empty, JoinHint.None);
					break;
				case "CampaignCollectionViaDirectMail":
					toReturn.Add(OrganizationRoleUserEntity.Relations.DirectMailEntityUsingMailedBy, "OrganizationRoleUserEntity__", "DirectMail_", JoinHint.None);
					toReturn.Add(DirectMailEntity.Relations.CampaignEntityUsingCampaignId, "DirectMail_", string.Empty, JoinHint.None);
					break;
				case "CampaignCollectionViaCallQueueCustomer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.CampaignEntityUsingCampaignId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "CampaignCollectionViaEventCustomers":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "EventCustomers_", JoinHint.None);
					toReturn.Add(EventCustomersEntity.Relations.CampaignEntityUsingCampaignId, "EventCustomers_", string.Empty, JoinHint.None);
					break;
				case "CampaignActivityCollectionViaCampaignActivityAssignment":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CampaignActivityAssignmentEntityUsingAssignedToOrgRoleUserId, "OrganizationRoleUserEntity__", "CampaignActivityAssignment_", JoinHint.None);
					toReturn.Add(CampaignActivityAssignmentEntity.Relations.CampaignActivityEntityUsingCampaignActivityId, "CampaignActivityAssignment_", string.Empty, JoinHint.None);
					break;
				case "ChaperoneQuestionCollectionViaChaperoneAnswer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ChaperoneAnswerEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "ChaperoneAnswer_", JoinHint.None);
					toReturn.Add(ChaperoneAnswerEntity.Relations.ChaperoneQuestionEntityUsingQuestionId, "ChaperoneAnswer_", string.Empty, JoinHint.None);
					break;
				case "ChaperoneQuestionCollectionViaChaperoneAnswer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ChaperoneAnswerEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "ChaperoneAnswer_", JoinHint.None);
					toReturn.Add(ChaperoneAnswerEntity.Relations.ChaperoneQuestionEntityUsingQuestionId, "ChaperoneAnswer_", string.Empty, JoinHint.None);
					break;
				case "CheckListQuestionCollectionViaCheckListAnswer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CheckListAnswerEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "CheckListAnswer_", JoinHint.None);
					toReturn.Add(CheckListAnswerEntity.Relations.CheckListQuestionEntityUsingQuestionId, "CheckListAnswer_", string.Empty, JoinHint.None);
					break;
				case "CheckListQuestionCollectionViaCheckListAnswer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CheckListAnswerEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "CheckListAnswer_", JoinHint.None);
					toReturn.Add(CheckListAnswerEntity.Relations.CheckListQuestionEntityUsingQuestionId, "CheckListAnswer_", string.Empty, JoinHint.None);
					break;
				case "CheckListQuestionCollectionViaExitInterviewSignature":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ExitInterviewSignatureEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "ExitInterviewSignature_", JoinHint.None);
					toReturn.Add(ExitInterviewSignatureEntity.Relations.CheckListQuestionEntityUsingQuestionId, "ExitInterviewSignature_", string.Empty, JoinHint.None);
					break;
				case "CityCollectionViaAddress":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AddressEntityUsingVerificationOrgRoleUserId, "OrganizationRoleUserEntity__", "Address_", JoinHint.None);
					toReturn.Add(AddressEntity.Relations.CityEntityUsingCityId, "Address_", string.Empty, JoinHint.None);
					break;
				case "CommunicationModeCollectionViaEvents____":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingUpdatedByAdmin, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.CommunicationModeEntityUsingCommunicationModeId, "Events_", string.Empty, JoinHint.None);
					break;
				case "CommunicationModeCollectionViaEvents":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingAssignedToOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.CommunicationModeEntityUsingCommunicationModeId, "Events_", string.Empty, JoinHint.None);
					break;
				case "CommunicationModeCollectionViaEvents___":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingSignOffOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.CommunicationModeEntityUsingCommunicationModeId, "Events_", string.Empty, JoinHint.None);
					break;
				case "CommunicationModeCollectionViaEvents__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingEventActivityOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.CommunicationModeEntityUsingCommunicationModeId, "Events_", string.Empty, JoinHint.None);
					break;
				case "CommunicationModeCollectionViaEvents_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.CommunicationModeEntityUsingCommunicationModeId, "Events_", string.Empty, JoinHint.None);
					break;
				case "ContactCallStatusCollectionViaContactCall":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ContactCallEntityUsingCreatedByRoleId, "OrganizationRoleUserEntity__", "ContactCall_", JoinHint.None);
					toReturn.Add(ContactCallEntity.Relations.ContactCallStatusEntityUsingContactCallStatusId, "ContactCall_", string.Empty, JoinHint.None);
					break;
				case "ContactCallStatusCollectionViaContactCall_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ContactCallEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "ContactCall_", JoinHint.None);
					toReturn.Add(ContactCallEntity.Relations.ContactCallStatusEntityUsingContactCallStatusId, "ContactCall_", string.Empty, JoinHint.None);
					break;
				case "ContactCallStatusCollectionViaContactMeeting_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ContactMeetingEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "ContactMeeting_", JoinHint.None);
					toReturn.Add(ContactMeetingEntity.Relations.ContactCallStatusEntityUsingContactMeetingStatusId, "ContactMeeting_", string.Empty, JoinHint.None);
					break;
				case "ContactCallStatusCollectionViaContactMeeting":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ContactMeetingEntityUsingCreatedByRoleId, "OrganizationRoleUserEntity__", "ContactMeeting_", JoinHint.None);
					toReturn.Add(ContactMeetingEntity.Relations.ContactCallStatusEntityUsingContactMeetingStatusId, "ContactMeeting_", string.Empty, JoinHint.None);
					break;
				case "CountryCollectionViaAddress":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AddressEntityUsingVerificationOrgRoleUserId, "OrganizationRoleUserEntity__", "Address_", JoinHint.None);
					toReturn.Add(AddressEntity.Relations.CountryEntityUsingCountryId, "Address_", string.Empty, JoinHint.None);
					break;
				case "CouponTypeCollectionViaCoupons_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CouponsEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "Coupons_", JoinHint.None);
					toReturn.Add(CouponsEntity.Relations.CouponTypeEntityUsingCouponTypeId, "Coupons_", string.Empty, JoinHint.None);
					break;
				case "CouponTypeCollectionViaCoupons":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CouponsEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "Coupons_", JoinHint.None);
					toReturn.Add(CouponsEntity.Relations.CouponTypeEntityUsingCouponTypeId, "Coupons_", string.Empty, JoinHint.None);
					break;
				case "CustomerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerEventTestPhysicianEvaluationEntityUsingUpdatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerEventTestPhysicianEvaluation_", JoinHint.None);
					toReturn.Add(CustomerEventTestPhysicianEvaluationEntity.Relations.CustomerEventScreeningTestsEntityUsingCustomerEventScreeningTestId, "CustomerEventTestPhysicianEvaluation_", string.Empty, JoinHint.None);
					break;
				case "CustomerEventScreeningTestsCollectionViaTestPerformedExternally_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TestPerformedExternallyEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "TestPerformedExternally_", JoinHint.None);
					toReturn.Add(TestPerformedExternallyEntity.Relations.CustomerEventScreeningTestsEntityUsingCustomerEventScreeningTestId, "TestPerformedExternally_", string.Empty, JoinHint.None);
					break;
				case "CustomerEventScreeningTestsCollectionViaCustomerEventTestState":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerEventTestStateEntityUsingConductedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerEventTestState_", JoinHint.None);
					toReturn.Add(CustomerEventTestStateEntity.Relations.CustomerEventScreeningTestsEntityUsingCustomerEventScreeningTestId, "CustomerEventTestState_", string.Empty, JoinHint.None);
					break;
				case "CustomerEventScreeningTestsCollectionViaCustomerEventTestState_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerEventTestStateEntityUsingEvaluatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerEventTestState_", JoinHint.None);
					toReturn.Add(CustomerEventTestStateEntity.Relations.CustomerEventScreeningTestsEntityUsingCustomerEventScreeningTestId, "CustomerEventTestState_", string.Empty, JoinHint.None);
					break;
				case "CustomerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerEventUnableScreenReasonEntityUsingUpdatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerEventUnableScreenReason_", JoinHint.None);
					toReturn.Add(CustomerEventUnableScreenReasonEntity.Relations.CustomerEventScreeningTestsEntityUsingCustomerEventScreeningTestId, "CustomerEventUnableScreenReason_", string.Empty, JoinHint.None);
					break;
				case "CustomerEventScreeningTestsCollectionViaCustomerEventTestState__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerEventTestStateEntityUsingUpdatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerEventTestState_", JoinHint.None);
					toReturn.Add(CustomerEventTestStateEntity.Relations.CustomerEventScreeningTestsEntityUsingCustomerEventScreeningTestId, "CustomerEventTestState_", string.Empty, JoinHint.None);
					break;
				case "CustomerEventScreeningTestsCollectionViaTestPerformedExternally":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TestPerformedExternallyEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "TestPerformedExternally_", JoinHint.None);
					toReturn.Add(TestPerformedExternallyEntity.Relations.CustomerEventScreeningTestsEntityUsingCustomerEventScreeningTestId, "TestPerformedExternally_", string.Empty, JoinHint.None);
					break;
				case "CustomerEventScreeningTestsCollectionViaCustomerEventReading":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerEventReadingEntityUsingUpdatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerEventReading_", JoinHint.None);
					toReturn.Add(CustomerEventReadingEntity.Relations.CustomerEventScreeningTestsEntityUsingCustomerEventScreeningTestId, "CustomerEventReading_", string.Empty, JoinHint.None);
					break;
				case "CustomerEventScreeningTestsCollectionViaTestNotPerformed":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TestNotPerformedEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "TestNotPerformed_", JoinHint.None);
					toReturn.Add(TestNotPerformedEntity.Relations.CustomerEventScreeningTestsEntityUsingCustomerEventScreeningTestId, "TestNotPerformed_", string.Empty, JoinHint.None);
					break;
				case "CustomerEventScreeningTestsCollectionViaTestNotPerformed_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TestNotPerformedEntityUsingUpdatedBy, "OrganizationRoleUserEntity__", "TestNotPerformed_", JoinHint.None);
					toReturn.Add(TestNotPerformedEntity.Relations.CustomerEventScreeningTestsEntityUsingCustomerEventScreeningTestId, "TestNotPerformed_", string.Empty, JoinHint.None);
					break;
				case "CustomerHealthQuestionsCollectionViaCustomerHealthInfo":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerHealthInfoEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerHealthInfo_", JoinHint.None);
					toReturn.Add(CustomerHealthInfoEntity.Relations.CustomerHealthQuestionsEntityUsingCustomerHealthQuestionId, "CustomerHealthInfo_", string.Empty, JoinHint.None);
					break;
				case "CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ClinicalTestQualificationCriteriaEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "ClinicalTestQualificationCriteria_", JoinHint.None);
					toReturn.Add(ClinicalTestQualificationCriteriaEntity.Relations.CustomerHealthQuestionsEntityUsingMedicationQuestionId, "ClinicalTestQualificationCriteria_", string.Empty, JoinHint.None);
					break;
				case "CustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerClinicalQuestionAnswerEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "CustomerClinicalQuestionAnswer_", JoinHint.None);
					toReturn.Add(CustomerClinicalQuestionAnswerEntity.Relations.CustomerHealthQuestionsEntityUsingClinicalHealthQuestionId, "CustomerClinicalQuestionAnswer_", string.Empty, JoinHint.None);
					break;
				case "CustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerClinicalQuestionAnswerEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "CustomerClinicalQuestionAnswer_", JoinHint.None);
					toReturn.Add(CustomerClinicalQuestionAnswerEntity.Relations.CustomerHealthQuestionsEntityUsingClinicalHealthQuestionId, "CustomerClinicalQuestionAnswer_", string.Empty, JoinHint.None);
					break;
				case "CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ClinicalTestQualificationCriteriaEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "ClinicalTestQualificationCriteria_", JoinHint.None);
					toReturn.Add(ClinicalTestQualificationCriteriaEntity.Relations.CustomerHealthQuestionsEntityUsingDisqualifierQuestionId, "ClinicalTestQualificationCriteria_", string.Empty, JoinHint.None);
					break;
				case "CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ClinicalTestQualificationCriteriaEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "ClinicalTestQualificationCriteria_", JoinHint.None);
					toReturn.Add(ClinicalTestQualificationCriteriaEntity.Relations.CustomerHealthQuestionsEntityUsingDisqualifierQuestionId, "ClinicalTestQualificationCriteria_", string.Empty, JoinHint.None);
					break;
				case "CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ClinicalTestQualificationCriteriaEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "ClinicalTestQualificationCriteria_", JoinHint.None);
					toReturn.Add(ClinicalTestQualificationCriteriaEntity.Relations.CustomerHealthQuestionsEntityUsingMedicationQuestionId, "ClinicalTestQualificationCriteria_", string.Empty, JoinHint.None);
					break;
				case "CustomerHealthQuestionsCollectionViaCustomerHealthInfoArchive":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerHealthInfoArchiveEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerHealthInfoArchive_", JoinHint.None);
					toReturn.Add(CustomerHealthInfoArchiveEntity.Relations.CustomerHealthQuestionsEntityUsingCustomerHealthQuestionId, "CustomerHealthInfoArchive_", string.Empty, JoinHint.None);
					break;
				case "CustomerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerPrimaryCarePhysicianEntityUsingPcpAddressVerifiedBy, "OrganizationRoleUserEntity__", "EventCustomerPrimaryCarePhysician_", JoinHint.None);
					toReturn.Add(EventCustomerPrimaryCarePhysicianEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingPrimaryCarePhysicianId, "EventCustomerPrimaryCarePhysician_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaFillEventCallQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.FillEventCallQueueEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "FillEventCallQueue_", JoinHint.None);
					toReturn.Add(FillEventCallQueueEntity.Relations.CustomerProfileEntityUsingCustomerId, "FillEventCallQueue_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaDisqualifiedTest_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.DisqualifiedTestEntityUsingUpdatedBy, "OrganizationRoleUserEntity__", "DisqualifiedTest_", JoinHint.None);
					toReturn.Add(DisqualifiedTestEntity.Relations.CustomerProfileEntityUsingCustomerId, "DisqualifiedTest_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaCustomerEligibility_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerEligibilityEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "CustomerEligibility_", JoinHint.None);
					toReturn.Add(CustomerEligibilityEntity.Relations.CustomerProfileEntityUsingCustomerId, "CustomerEligibility_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaEventCustomerResult_____":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingVerifiedBy, "OrganizationRoleUserEntity__", "EventCustomerResult_", JoinHint.None);
					toReturn.Add(EventCustomerResultEntity.Relations.CustomerProfileEntityUsingCustomerId, "EventCustomerResult_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaCustomerEligibility":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerEligibilityEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "CustomerEligibility_", JoinHint.None);
					toReturn.Add(CustomerEligibilityEntity.Relations.CustomerProfileEntityUsingCustomerId, "CustomerEligibility_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaLanguageBarrierCallQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.LanguageBarrierCallQueueEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "LanguageBarrierCallQueue_", JoinHint.None);
					toReturn.Add(LanguageBarrierCallQueueEntity.Relations.CustomerProfileEntityUsingCustomerId, "LanguageBarrierCallQueue_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaEventCustomerQuestionAnswer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerQuestionAnswerEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "EventCustomerQuestionAnswer_", JoinHint.None);
					toReturn.Add(EventCustomerQuestionAnswerEntity.Relations.CustomerProfileEntityUsingCustomerId, "EventCustomerQuestionAnswer_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaHospitalPartnerCustomer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HospitalPartnerCustomerEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "HospitalPartnerCustomer_", JoinHint.None);
					toReturn.Add(HospitalPartnerCustomerEntity.Relations.CustomerProfileEntityUsingCustomerId, "HospitalPartnerCustomer_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaHospitalPartnerCustomer__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HospitalPartnerCustomerEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "HospitalPartnerCustomer_", JoinHint.None);
					toReturn.Add(HospitalPartnerCustomerEntity.Relations.CustomerProfileEntityUsingCustomerId, "HospitalPartnerCustomer_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaHospitalPartnerCustomer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HospitalPartnerCustomerEntityUsingCareCoordinatorOrgRoleUserId, "OrganizationRoleUserEntity__", "HospitalPartnerCustomer_", JoinHint.None);
					toReturn.Add(HospitalPartnerCustomerEntity.Relations.CustomerProfileEntityUsingCustomerId, "HospitalPartnerCustomer_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaDisqualifiedTest":
					toReturn.Add(OrganizationRoleUserEntity.Relations.DisqualifiedTestEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "DisqualifiedTest_", JoinHint.None);
					toReturn.Add(DisqualifiedTestEntity.Relations.CustomerProfileEntityUsingCustomerId, "DisqualifiedTest_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaCustomerPrimaryCarePhysician_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingPcpAddressVerifiedBy, "OrganizationRoleUserEntity__", "CustomerPrimaryCarePhysician_", JoinHint.None);
					toReturn.Add(CustomerPrimaryCarePhysicianEntity.Relations.CustomerProfileEntityUsingCustomerId, "CustomerPrimaryCarePhysician_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaCustomerPrimaryCarePhysician__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerPrimaryCarePhysician_", JoinHint.None);
					toReturn.Add(CustomerPrimaryCarePhysicianEntity.Relations.CustomerProfileEntityUsingCustomerId, "CustomerPrimaryCarePhysician_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaNoShowCallQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.NoShowCallQueueEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "NoShowCallQueue_", JoinHint.None);
					toReturn.Add(NoShowCallQueueEntity.Relations.CustomerProfileEntityUsingCustomerId, "NoShowCallQueue_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaCustomerPrimaryCarePhysician":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingUpdatedByOrganizationRoleUserId, "OrganizationRoleUserEntity__", "CustomerPrimaryCarePhysician_", JoinHint.None);
					toReturn.Add(CustomerPrimaryCarePhysicianEntity.Relations.CustomerProfileEntityUsingCustomerId, "CustomerPrimaryCarePhysician_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaCallQueueCustomer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingAssignedToOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.CustomerProfileEntityUsingCustomerId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaCustomerHealthInfo":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerHealthInfoEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerHealthInfo_", JoinHint.None);
					toReturn.Add(CustomerHealthInfoEntity.Relations.CustomerProfileEntityUsingCustomerId, "CustomerHealthInfo_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaCallQueueCustomer__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.CustomerProfileEntityUsingCustomerId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaCallQueueCustomer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.CustomerProfileEntityUsingCustomerId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaEventCustomerResult______":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "EventCustomerResult_", JoinHint.None);
					toReturn.Add(EventCustomerResultEntity.Relations.CustomerProfileEntityUsingCustomerId, "EventCustomerResult_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaCustomerIcdCode":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerIcdCodeEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerIcdCode_", JoinHint.None);
					toReturn.Add(CustomerIcdCodeEntity.Relations.CustomerProfileEntityUsingCustomerId, "CustomerIcdCode_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaMailRoundCallQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.MailRoundCallQueueEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "MailRoundCallQueue_", JoinHint.None);
					toReturn.Add(MailRoundCallQueueEntity.Relations.CustomerProfileEntityUsingCustomerId, "MailRoundCallQueue_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaCustomerHealthInfoArchive":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerHealthInfoArchiveEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerHealthInfoArchive_", JoinHint.None);
					toReturn.Add(CustomerHealthInfoArchiveEntity.Relations.CustomerProfileEntityUsingCustomerId, "CustomerHealthInfoArchive_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaEventCustomerQuestionAnswer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerQuestionAnswerEntityUsingUpdatedBy, "OrganizationRoleUserEntity__", "EventCustomerQuestionAnswer_", JoinHint.None);
					toReturn.Add(EventCustomerQuestionAnswerEntity.Relations.CustomerProfileEntityUsingCustomerId, "EventCustomerQuestionAnswer_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaRequiredTest":
					toReturn.Add(OrganizationRoleUserEntity.Relations.RequiredTestEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "RequiredTest_", JoinHint.None);
					toReturn.Add(RequiredTestEntity.Relations.CustomerProfileEntityUsingCustomerId, "RequiredTest_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaCustomerWarmTransfer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerWarmTransferEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "CustomerWarmTransfer_", JoinHint.None);
					toReturn.Add(CustomerWarmTransferEntity.Relations.CustomerProfileEntityUsingCustomerId, "CustomerWarmTransfer_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaProspectCustomer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ProspectCustomerEntityUsingContactedBy, "OrganizationRoleUserEntity__", "ProspectCustomer_", JoinHint.None);
					toReturn.Add(ProspectCustomerEntity.Relations.CustomerProfileEntityUsingCustomerId, "ProspectCustomer_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaEventCustomerResult_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingCodedBy, "OrganizationRoleUserEntity__", "EventCustomerResult_", JoinHint.None);
					toReturn.Add(EventCustomerResultEntity.Relations.CustomerProfileEntityUsingCustomerId, "EventCustomerResult_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaEventCustomerResult__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingInvoiceDateUpdatedBy, "OrganizationRoleUserEntity__", "EventCustomerResult_", JoinHint.None);
					toReturn.Add(EventCustomerResultEntity.Relations.CustomerProfileEntityUsingCustomerId, "EventCustomerResult_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaUncontactedCustomerCallQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.UncontactedCustomerCallQueueEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "UncontactedCustomerCallQueue_", JoinHint.None);
					toReturn.Add(UncontactedCustomerCallQueueEntity.Relations.CustomerProfileEntityUsingCustomerId, "UncontactedCustomerCallQueue_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaCustomerWarmTransfer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerWarmTransferEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "CustomerWarmTransfer_", JoinHint.None);
					toReturn.Add(CustomerWarmTransferEntity.Relations.CustomerProfileEntityUsingCustomerId, "CustomerWarmTransfer_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaMedication_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.MedicationEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "Medication_", JoinHint.None);
					toReturn.Add(MedicationEntity.Relations.CustomerProfileEntityUsingCustomerId, "Medication_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaCallRoundCallQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallRoundCallQueueEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "CallRoundCallQueue_", JoinHint.None);
					toReturn.Add(CallRoundCallQueueEntity.Relations.CustomerProfileEntityUsingCustomerId, "CallRoundCallQueue_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaCustomerTag_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerTagEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerTag_", JoinHint.None);
					toReturn.Add(CustomerTagEntity.Relations.CustomerProfileEntityUsingCustomerId, "CustomerTag_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaReferral":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ReferralEntityUsingReferedByOrgRoleUserId, "OrganizationRoleUserEntity__", "Referral_", JoinHint.None);
					toReturn.Add(ReferralEntity.Relations.CustomerProfileEntityUsingReferedCustomerId, "Referral_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaCustomerTargeted_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerTargetedEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "CustomerTargeted_", JoinHint.None);
					toReturn.Add(CustomerTargetedEntity.Relations.CustomerProfileEntityUsingCustomerId, "CustomerTargeted_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaCustomerTargeted":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerTargetedEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "CustomerTargeted_", JoinHint.None);
					toReturn.Add(CustomerTargetedEntity.Relations.CustomerProfileEntityUsingCustomerId, "CustomerTargeted_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaCustomerTag":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerTagEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerTag_", JoinHint.None);
					toReturn.Add(CustomerTagEntity.Relations.CustomerProfileEntityUsingCustomerId, "CustomerTag_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaMedication":
					toReturn.Add(OrganizationRoleUserEntity.Relations.MedicationEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "Medication_", JoinHint.None);
					toReturn.Add(MedicationEntity.Relations.CustomerProfileEntityUsingCustomerId, "Medication_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaEventCustomerResult________":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingChatPdfReviewedByPhysicianId, "OrganizationRoleUserEntity__", "EventCustomerResult_", JoinHint.None);
					toReturn.Add(EventCustomerResultEntity.Relations.CustomerProfileEntityUsingCustomerId, "EventCustomerResult_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaEventCustomerResult":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "EventCustomerResult_", JoinHint.None);
					toReturn.Add(EventCustomerResultEntity.Relations.CustomerProfileEntityUsingCustomerId, "EventCustomerResult_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaEventCustomerResult_______":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingChatPdfReviewedByOverreadPhysicianId, "OrganizationRoleUserEntity__", "EventCustomerResult_", JoinHint.None);
					toReturn.Add(EventCustomerResultEntity.Relations.CustomerProfileEntityUsingCustomerId, "EventCustomerResult_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaDirectMail":
					toReturn.Add(OrganizationRoleUserEntity.Relations.DirectMailEntityUsingMailedBy, "OrganizationRoleUserEntity__", "DirectMail_", JoinHint.None);
					toReturn.Add(DirectMailEntity.Relations.CustomerProfileEntityUsingCustomerId, "DirectMail_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaEventCustomerResult____":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingSignedOffBy, "OrganizationRoleUserEntity__", "EventCustomerResult_", JoinHint.None);
					toReturn.Add(EventCustomerResultEntity.Relations.CustomerProfileEntityUsingCustomerId, "EventCustomerResult_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaCurrentMedication":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CurrentMedicationEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CurrentMedication_", JoinHint.None);
					toReturn.Add(CurrentMedicationEntity.Relations.CustomerProfileEntityUsingCustomerId, "CurrentMedication_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaGuardianDetails":
					toReturn.Add(OrganizationRoleUserEntity.Relations.GuardianDetailsEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "GuardianDetails_", JoinHint.None);
					toReturn.Add(GuardianDetailsEntity.Relations.CustomerProfileEntityUsingCustomerId, "GuardianDetails_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaEventCustomers":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "EventCustomers_", JoinHint.None);
					toReturn.Add(EventCustomersEntity.Relations.CustomerProfileEntityUsingCustomerId, "EventCustomers_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaEventCustomers_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingConfirmedBy, "OrganizationRoleUserEntity__", "EventCustomers_", JoinHint.None);
					toReturn.Add(EventCustomersEntity.Relations.CustomerProfileEntityUsingCustomerId, "EventCustomers_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaCustomerCallQueueCallAttempt":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerCallQueueCallAttemptEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "CustomerCallQueueCallAttempt_", JoinHint.None);
					toReturn.Add(CustomerCallQueueCallAttemptEntity.Relations.CustomerProfileEntityUsingCustomerId, "CustomerCallQueueCallAttempt_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaEventCustomerResult___":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingRegeneratedBy, "OrganizationRoleUserEntity__", "EventCustomerResult_", JoinHint.None);
					toReturn.Add(EventCustomerResultEntity.Relations.CustomerProfileEntityUsingCustomerId, "EventCustomerResult_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaCustomerProfileHistory":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerProfileHistoryEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "CustomerProfileHistory_", JoinHint.None);
					toReturn.Add(CustomerProfileHistoryEntity.Relations.CustomerProfileEntityUsingCustomerId, "CustomerProfileHistory_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PreAssessmentCustomerCallQueueCallAttemptEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "PreAssessmentCustomerCallQueueCallAttempt_", JoinHint.None);
					toReturn.Add(PreAssessmentCustomerCallQueueCallAttemptEntity.Relations.CustomerProfileEntityUsingCustomerId, "PreAssessmentCustomerCallQueueCallAttempt_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaCustomerClinicalQuestionAnswer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerClinicalQuestionAnswerEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "CustomerClinicalQuestionAnswer_", JoinHint.None);
					toReturn.Add(CustomerClinicalQuestionAnswerEntity.Relations.CustomerProfileEntityUsingCustomerId, "CustomerClinicalQuestionAnswer_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaCustomerClinicalQuestionAnswer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerClinicalQuestionAnswerEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "CustomerClinicalQuestionAnswer_", JoinHint.None);
					toReturn.Add(CustomerClinicalQuestionAnswerEntity.Relations.CustomerProfileEntityUsingCustomerId, "CustomerClinicalQuestionAnswer_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileCollectionViaGuardianDetails_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.GuardianDetailsEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "GuardianDetails_", JoinHint.None);
					toReturn.Add(GuardianDetailsEntity.Relations.CustomerProfileEntityUsingCustomerId, "GuardianDetails_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileHistoryCollectionViaEventCustomers_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingConfirmedBy, "OrganizationRoleUserEntity__", "EventCustomers_", JoinHint.None);
					toReturn.Add(EventCustomersEntity.Relations.CustomerProfileHistoryEntityUsingCustomerProfileHistoryId, "EventCustomers_", string.Empty, JoinHint.None);
					break;
				case "CustomerProfileHistoryCollectionViaEventCustomers":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "EventCustomers_", JoinHint.None);
					toReturn.Add(EventCustomersEntity.Relations.CustomerProfileHistoryEntityUsingCustomerProfileHistoryId, "EventCustomers_", string.Empty, JoinHint.None);
					break;
				case "CustomerRegistrationNotesCollectionViaEventAppointmentCancellationLog":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventAppointmentCancellationLogEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "EventAppointmentCancellationLog_", JoinHint.None);
					toReturn.Add(EventAppointmentCancellationLogEntity.Relations.CustomerRegistrationNotesEntityUsingNoteId, "EventAppointmentCancellationLog_", string.Empty, JoinHint.None);
					break;
				case "CustomerRegistrationNotesCollectionViaEventCustomers_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingConfirmedBy, "OrganizationRoleUserEntity__", "EventCustomers_", JoinHint.None);
					toReturn.Add(EventCustomersEntity.Relations.CustomerRegistrationNotesEntityUsingLeftWithoutScreeningNotesId, "EventCustomers_", string.Empty, JoinHint.None);
					break;
				case "CustomerRegistrationNotesCollectionViaEventCustomers":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "EventCustomers_", JoinHint.None);
					toReturn.Add(EventCustomersEntity.Relations.CustomerRegistrationNotesEntityUsingLeftWithoutScreeningNotesId, "EventCustomers_", string.Empty, JoinHint.None);
					break;
				case "DirectMailTypeCollectionViaDirectMail":
					toReturn.Add(OrganizationRoleUserEntity.Relations.DirectMailEntityUsingMailedBy, "OrganizationRoleUserEntity__", "DirectMail_", JoinHint.None);
					toReturn.Add(DirectMailEntity.Relations.DirectMailTypeEntityUsingDirectMailTypeId, "DirectMail_", string.Empty, JoinHint.None);
					break;
				case "DirectMailTypeCollectionViaCampaignActivity":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CampaignActivityEntityUsingCreatedby, "OrganizationRoleUserEntity__", "CampaignActivity_", JoinHint.None);
					toReturn.Add(CampaignActivityEntity.Relations.DirectMailTypeEntityUsingDirectMailTypeId, "CampaignActivity_", string.Empty, JoinHint.None);
					break;
				case "DirectMailTypeCollectionViaCampaignActivity_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CampaignActivityEntityUsingModifiedby, "OrganizationRoleUserEntity__", "CampaignActivity_", JoinHint.None);
					toReturn.Add(CampaignActivityEntity.Relations.DirectMailTypeEntityUsingDirectMailTypeId, "CampaignActivity_", string.Empty, JoinHint.None);
					break;
				case "EventActivityTemplateCollectionViaEventActivityTemplateMeeting":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventActivityTemplateMeetingEntityUsingResponsibleOrgRoleUserId, "OrganizationRoleUserEntity__", "EventActivityTemplateMeeting_", JoinHint.None);
					toReturn.Add(EventActivityTemplateMeetingEntity.Relations.EventActivityTemplateEntityUsingEventActivityTemplateId, "EventActivityTemplateMeeting_", string.Empty, JoinHint.None);
					break;
				case "EventActivityTemplateCollectionViaEventActivityTemplateTask":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventActivityTemplateTaskEntityUsingResponsibleOrgRoleUserId, "OrganizationRoleUserEntity__", "EventActivityTemplateTask_", JoinHint.None);
					toReturn.Add(EventActivityTemplateTaskEntity.Relations.EventActivityTemplateEntityUsingEventActivityTemplateId, "EventActivityTemplateTask_", string.Empty, JoinHint.None);
					break;
				case "EventActivityTemplateCollectionViaEventActivityTemplateCall":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventActivityTemplateCallEntityUsingResponsibleOrgRoleUserId, "OrganizationRoleUserEntity__", "EventActivityTemplateCall_", JoinHint.None);
					toReturn.Add(EventActivityTemplateCallEntity.Relations.EventActivityTemplateEntityUsingEventActivityTemplateId, "EventActivityTemplateCall_", string.Empty, JoinHint.None);
					break;
				case "EventActivityTemplateCollectionViaEventActivityTemplateEmail":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventActivityTemplateEmailEntityUsingResponsibleOrgRoleUserId, "OrganizationRoleUserEntity__", "EventActivityTemplateEmail_", JoinHint.None);
					toReturn.Add(EventActivityTemplateEmailEntity.Relations.EventActivityTemplateEntityUsingEventActivityTemplateId, "EventActivityTemplateEmail_", string.Empty, JoinHint.None);
					break;
				case "EventAppointmentCollectionViaEventCustomers":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "EventCustomers_", JoinHint.None);
					toReturn.Add(EventCustomersEntity.Relations.EventAppointmentEntityUsingAppointmentId, "EventCustomers_", string.Empty, JoinHint.None);
					break;
				case "EventAppointmentCollectionViaEventCustomers_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingConfirmedBy, "OrganizationRoleUserEntity__", "EventCustomers_", JoinHint.None);
					toReturn.Add(EventCustomersEntity.Relations.EventAppointmentEntityUsingAppointmentId, "EventCustomers_", string.Empty, JoinHint.None);
					break;
				case "EventCustomerResultCollectionViaCustomerResultScreeningCommunication":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerResultScreeningCommunicationEntityUsingCommunicationInitiatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerResultScreeningCommunication_", JoinHint.None);
					toReturn.Add(CustomerResultScreeningCommunicationEntity.Relations.EventCustomerResultEntityUsingEventCustomerResultId, "CustomerResultScreeningCommunication_", string.Empty, JoinHint.None);
					break;
				case "EventCustomerResultCollectionViaPriorityInQueue_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PriorityInQueueEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "PriorityInQueue_", JoinHint.None);
					toReturn.Add(PriorityInQueueEntity.Relations.EventCustomerResultEntityUsingEventCustomerResultId, "PriorityInQueue_", string.Empty, JoinHint.None);
					break;
				case "EventCustomerResultCollectionViaKynLabValues":
					toReturn.Add(OrganizationRoleUserEntity.Relations.KynLabValuesEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "KynLabValues_", JoinHint.None);
					toReturn.Add(KynLabValuesEntity.Relations.EventCustomerResultEntityUsingEventCustomerResultId, "KynLabValues_", string.Empty, JoinHint.None);
					break;
				case "EventCustomerResultCollectionViaCustomerResultScreeningCommunication__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerResultScreeningCommunicationEntityUsingPhysicianOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerResultScreeningCommunication_", JoinHint.None);
					toReturn.Add(CustomerResultScreeningCommunicationEntity.Relations.EventCustomerResultEntityUsingEventCustomerResultId, "CustomerResultScreeningCommunication_", string.Empty, JoinHint.None);
					break;
				case "EventCustomerResultCollectionViaCustomerResultScreeningCommunication_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerResultScreeningCommunicationEntityUsingFranchiseeAdminOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerResultScreeningCommunication_", JoinHint.None);
					toReturn.Add(CustomerResultScreeningCommunicationEntity.Relations.EventCustomerResultEntityUsingEventCustomerResultId, "CustomerResultScreeningCommunication_", string.Empty, JoinHint.None);
					break;
				case "EventCustomerResultCollectionViaCdcontentGeneratorTracking":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CdcontentGeneratorTrackingEntityUsingDownloadedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CdcontentGeneratorTracking_", JoinHint.None);
					toReturn.Add(CdcontentGeneratorTrackingEntity.Relations.EventCustomerResultEntityUsingEventCustomerResultId, "CdcontentGeneratorTracking_", string.Empty, JoinHint.None);
					break;
				case "EventCustomerResultCollectionViaKynLabValues_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.KynLabValuesEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "KynLabValues_", JoinHint.None);
					toReturn.Add(KynLabValuesEntity.Relations.EventCustomerResultEntityUsingEventCustomerResultId, "KynLabValues_", string.Empty, JoinHint.None);
					break;
				case "EventCustomerResultCollectionViaPriorityInQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PriorityInQueueEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "PriorityInQueue_", JoinHint.None);
					toReturn.Add(PriorityInQueueEntity.Relations.EventCustomerResultEntityUsingEventCustomerResultId, "PriorityInQueue_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaDisqualifiedTest_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.DisqualifiedTestEntityUsingUpdatedBy, "OrganizationRoleUserEntity__", "DisqualifiedTest_", JoinHint.None);
					toReturn.Add(DisqualifiedTestEntity.Relations.EventCustomersEntityUsingEventCustomerId, "DisqualifiedTest_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaEventAppointmentChangeLog":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventAppointmentChangeLogEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "EventAppointmentChangeLog_", JoinHint.None);
					toReturn.Add(EventAppointmentChangeLogEntity.Relations.EventCustomersEntityUsingEventCustomerId, "EventAppointmentChangeLog_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaDisqualifiedTest":
					toReturn.Add(OrganizationRoleUserEntity.Relations.DisqualifiedTestEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "DisqualifiedTest_", JoinHint.None);
					toReturn.Add(DisqualifiedTestEntity.Relations.EventCustomersEntityUsingEventCustomerId, "DisqualifiedTest_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaEventCustomerPrimaryCarePhysician":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerPrimaryCarePhysicianEntityUsingPcpAddressVerifiedBy, "OrganizationRoleUserEntity__", "EventCustomerPrimaryCarePhysician_", JoinHint.None);
					toReturn.Add(EventCustomerPrimaryCarePhysicianEntity.Relations.EventCustomersEntityUsingEventCustomerId, "EventCustomerPrimaryCarePhysician_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaEventCustomerQuestionAnswer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerQuestionAnswerEntityUsingUpdatedBy, "OrganizationRoleUserEntity__", "EventCustomerQuestionAnswer_", JoinHint.None);
					toReturn.Add(EventCustomerQuestionAnswerEntity.Relations.EventCustomersEntityUsingEventCustomerId, "EventCustomerQuestionAnswer_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaEventAppointmentCancellationLog":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventAppointmentCancellationLogEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "EventAppointmentCancellationLog_", JoinHint.None);
					toReturn.Add(EventAppointmentCancellationLogEntity.Relations.EventCustomersEntityUsingEventCustomerId, "EventAppointmentCancellationLog_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaEventCustomerQuestionAnswer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerQuestionAnswerEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "EventCustomerQuestionAnswer_", JoinHint.None);
					toReturn.Add(EventCustomerQuestionAnswerEntity.Relations.EventCustomersEntityUsingEventCustomerId, "EventCustomerQuestionAnswer_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaEventCustomerGiftCard":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerGiftCardEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "EventCustomerGiftCard_", JoinHint.None);
					toReturn.Add(EventCustomerGiftCardEntity.Relations.EventCustomersEntityUsingEventCustomerId, "EventCustomerGiftCard_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaSurveyAnswer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.SurveyAnswerEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "SurveyAnswer_", JoinHint.None);
					toReturn.Add(SurveyAnswerEntity.Relations.EventCustomersEntityUsingEventCustomerId, "SurveyAnswer_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaEventCustomerTestNotPerformedNotification":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerTestNotPerformedNotificationEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "EventCustomerTestNotPerformedNotification_", JoinHint.None);
					toReturn.Add(EventCustomerTestNotPerformedNotificationEntity.Relations.EventCustomersEntityUsingEventCustomerId, "EventCustomerTestNotPerformedNotification_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaPhysicianRecordRequestSignature":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PhysicianRecordRequestSignatureEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "PhysicianRecordRequestSignature_", JoinHint.None);
					toReturn.Add(PhysicianRecordRequestSignatureEntity.Relations.EventCustomersEntityUsingEventCustomerId, "PhysicianRecordRequestSignature_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaEventCustomerRetest":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerRetestEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "EventCustomerRetest_", JoinHint.None);
					toReturn.Add(EventCustomerRetestEntity.Relations.EventCustomersEntityUsingEventCustomerId, "EventCustomerRetest_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaPcpDisposition":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PcpDispositionEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "PcpDisposition_", JoinHint.None);
					toReturn.Add(PcpDispositionEntity.Relations.EventCustomersEntityUsingEventCustomerId, "PcpDisposition_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaPcpDisposition_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PcpDispositionEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "PcpDisposition_", JoinHint.None);
					toReturn.Add(PcpDispositionEntity.Relations.EventCustomersEntityUsingEventCustomerId, "PcpDisposition_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaChaperoneSignature":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ChaperoneSignatureEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "ChaperoneSignature_", JoinHint.None);
					toReturn.Add(ChaperoneSignatureEntity.Relations.EventCustomersEntityUsingEventCustomerId, "ChaperoneSignature_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaChaperoneAnswer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ChaperoneAnswerEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "ChaperoneAnswer_", JoinHint.None);
					toReturn.Add(ChaperoneAnswerEntity.Relations.EventCustomersEntityUsingEventCustomerId, "ChaperoneAnswer_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaChaperoneAnswer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ChaperoneAnswerEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "ChaperoneAnswer_", JoinHint.None);
					toReturn.Add(ChaperoneAnswerEntity.Relations.EventCustomersEntityUsingEventCustomerId, "ChaperoneAnswer_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaCallQueueCustomer__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.EventCustomersEntityUsingEventCustomerId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaCheckListAnswer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CheckListAnswerEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "CheckListAnswer_", JoinHint.None);
					toReturn.Add(CheckListAnswerEntity.Relations.EventCustomersEntityUsingEventCustomerId, "CheckListAnswer_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaCallQueueCustomer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingAssignedToOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.EventCustomersEntityUsingEventCustomerId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaCallQueueCustomer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.EventCustomersEntityUsingEventCustomerId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaCustomerHealthInfo":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerHealthInfoEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerHealthInfo_", JoinHint.None);
					toReturn.Add(CustomerHealthInfoEntity.Relations.EventCustomersEntityUsingEventCustomerId, "CustomerHealthInfo_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaExitInterviewSignature":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ExitInterviewSignatureEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "ExitInterviewSignature_", JoinHint.None);
					toReturn.Add(ExitInterviewSignatureEntity.Relations.EventCustomersEntityUsingEventCustomerId, "ExitInterviewSignature_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaFluConsentAnswer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.FluConsentAnswerEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "FluConsentAnswer_", JoinHint.None);
					toReturn.Add(FluConsentAnswerEntity.Relations.EventCustomersEntityUsingEventCustomerId, "FluConsentAnswer_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaExitInterviewAnswer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ExitInterviewAnswerEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "ExitInterviewAnswer_", JoinHint.None);
					toReturn.Add(ExitInterviewAnswerEntity.Relations.EventCustomersEntityUsingEventCustomerId, "ExitInterviewAnswer_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaCheckListAnswer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CheckListAnswerEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "CheckListAnswer_", JoinHint.None);
					toReturn.Add(CheckListAnswerEntity.Relations.EventCustomersEntityUsingEventCustomerId, "CheckListAnswer_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaExitInterviewAnswer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ExitInterviewAnswerEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "ExitInterviewAnswer_", JoinHint.None);
					toReturn.Add(ExitInterviewAnswerEntity.Relations.EventCustomersEntityUsingEventCustomerId, "ExitInterviewAnswer_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaFluConsentAnswer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.FluConsentAnswerEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "FluConsentAnswer_", JoinHint.None);
					toReturn.Add(FluConsentAnswerEntity.Relations.EventCustomersEntityUsingEventCustomerId, "FluConsentAnswer_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaSurveyAnswer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.SurveyAnswerEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "SurveyAnswer_", JoinHint.None);
					toReturn.Add(SurveyAnswerEntity.Relations.EventCustomersEntityUsingEventCustomerId, "SurveyAnswer_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaCustomerHealthInfoArchive":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerHealthInfoArchiveEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerHealthInfoArchive_", JoinHint.None);
					toReturn.Add(CustomerHealthInfoArchiveEntity.Relations.EventCustomersEntityUsingEventCustomerId, "CustomerHealthInfoArchive_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaCustomerMedicareQuestionAnswer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerMedicareQuestionAnswerEntityUsingCreateBy, "OrganizationRoleUserEntity__", "CustomerMedicareQuestionAnswer_", JoinHint.None);
					toReturn.Add(CustomerMedicareQuestionAnswerEntity.Relations.EventCustomersEntityUsingEventCustomerId, "CustomerMedicareQuestionAnswer_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaFluConsentSignature":
					toReturn.Add(OrganizationRoleUserEntity.Relations.FluConsentSignatureEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "FluConsentSignature_", JoinHint.None);
					toReturn.Add(FluConsentSignatureEntity.Relations.EventCustomersEntityUsingEventCustomerId, "FluConsentSignature_", string.Empty, JoinHint.None);
					break;
				case "EventCustomersCollectionViaParticipationConsentSignature":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ParticipationConsentSignatureEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "ParticipationConsentSignature_", JoinHint.None);
					toReturn.Add(ParticipationConsentSignatureEntity.Relations.EventCustomersEntityUsingEventCustomerId, "ParticipationConsentSignature_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaEventCustomerQuestionAnswer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerQuestionAnswerEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "EventCustomerQuestionAnswer_", JoinHint.None);
					toReturn.Add(EventCustomerQuestionAnswerEntity.Relations.EventsEntityUsingEventId, "EventCustomerQuestionAnswer_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaEventPhysicianTest__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventPhysicianTestEntityUsingPhysicianId, "OrganizationRoleUserEntity__", "EventPhysicianTest_", JoinHint.None);
					toReturn.Add(EventPhysicianTestEntity.Relations.EventsEntityUsingEventId, "EventPhysicianTest_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaEventStaffAssignment__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventStaffAssignmentEntityUsingScheduledByOrgRoleUserId, "OrganizationRoleUserEntity__", "EventStaffAssignment_", JoinHint.None);
					toReturn.Add(EventStaffAssignmentEntity.Relations.EventsEntityUsingEventId, "EventStaffAssignment_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaEventStaffAssignment_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventStaffAssignmentEntityUsingActualStaffOrgRoleUserId, "OrganizationRoleUserEntity__", "EventStaffAssignment_", JoinHint.None);
					toReturn.Add(EventStaffAssignmentEntity.Relations.EventsEntityUsingEventId, "EventStaffAssignment_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaEventCustomers":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "EventCustomers_", JoinHint.None);
					toReturn.Add(EventCustomersEntity.Relations.EventsEntityUsingEventId, "EventCustomers_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaEventCustomerResult____":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingVerifiedBy, "OrganizationRoleUserEntity__", "EventCustomerResult_", JoinHint.None);
					toReturn.Add(EventCustomerResultEntity.Relations.EventsEntityUsingEventId, "EventCustomerResult_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaEventCustomerResult___":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingSignedOffBy, "OrganizationRoleUserEntity__", "EventCustomerResult_", JoinHint.None);
					toReturn.Add(EventCustomerResultEntity.Relations.EventsEntityUsingEventId, "EventCustomerResult_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaHospitalPartnerCustomer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HospitalPartnerCustomerEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "HospitalPartnerCustomer_", JoinHint.None);
					toReturn.Add(HospitalPartnerCustomerEntity.Relations.EventsEntityUsingEventId, "HospitalPartnerCustomer_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaEventCustomerResult_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "EventCustomerResult_", JoinHint.None);
					toReturn.Add(EventCustomerResultEntity.Relations.EventsEntityUsingEventId, "EventCustomerResult_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaEventCustomerResult________":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingChatPdfReviewedByPhysicianId, "OrganizationRoleUserEntity__", "EventCustomerResult_", JoinHint.None);
					toReturn.Add(EventCustomerResultEntity.Relations.EventsEntityUsingEventId, "EventCustomerResult_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaEventCustomerResult______":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingInvoiceDateUpdatedBy, "OrganizationRoleUserEntity__", "EventCustomerResult_", JoinHint.None);
					toReturn.Add(EventCustomerResultEntity.Relations.EventsEntityUsingEventId, "EventCustomerResult_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaEventCustomerResult__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingRegeneratedBy, "OrganizationRoleUserEntity__", "EventCustomerResult_", JoinHint.None);
					toReturn.Add(EventCustomerResultEntity.Relations.EventsEntityUsingEventId, "EventCustomerResult_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaEventCustomerResult_______":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingChatPdfReviewedByOverreadPhysicianId, "OrganizationRoleUserEntity__", "EventCustomerResult_", JoinHint.None);
					toReturn.Add(EventCustomerResultEntity.Relations.EventsEntityUsingEventId, "EventCustomerResult_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaEventPhysicianTest_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventPhysicianTestEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "EventPhysicianTest_", JoinHint.None);
					toReturn.Add(EventPhysicianTestEntity.Relations.EventsEntityUsingEventId, "EventPhysicianTest_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaEventPhysicianTest":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventPhysicianTestEntityUsingAssignedByOrgRoleUserId, "OrganizationRoleUserEntity__", "EventPhysicianTest_", JoinHint.None);
					toReturn.Add(EventPhysicianTestEntity.Relations.EventsEntityUsingEventId, "EventPhysicianTest_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaEventCustomerQuestionAnswer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerQuestionAnswerEntityUsingUpdatedBy, "OrganizationRoleUserEntity__", "EventCustomerQuestionAnswer_", JoinHint.None);
					toReturn.Add(EventCustomerQuestionAnswerEntity.Relations.EventsEntityUsingEventId, "EventCustomerQuestionAnswer_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaHospitalPartnerCustomer__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HospitalPartnerCustomerEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "HospitalPartnerCustomer_", JoinHint.None);
					toReturn.Add(HospitalPartnerCustomerEntity.Relations.EventsEntityUsingEventId, "HospitalPartnerCustomer_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaEventCustomerResult":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "EventCustomerResult_", JoinHint.None);
					toReturn.Add(EventCustomerResultEntity.Relations.EventsEntityUsingEventId, "EventCustomerResult_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaHospitalPartnerCustomer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HospitalPartnerCustomerEntityUsingCareCoordinatorOrgRoleUserId, "OrganizationRoleUserEntity__", "HospitalPartnerCustomer_", JoinHint.None);
					toReturn.Add(HospitalPartnerCustomerEntity.Relations.EventsEntityUsingEventId, "HospitalPartnerCustomer_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaEventCustomerResult_____":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingCodedBy, "OrganizationRoleUserEntity__", "EventCustomerResult_", JoinHint.None);
					toReturn.Add(EventCustomerResultEntity.Relations.EventsEntityUsingEventId, "EventCustomerResult_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaEventCustomers_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingConfirmedBy, "OrganizationRoleUserEntity__", "EventCustomers_", JoinHint.None);
					toReturn.Add(EventCustomersEntity.Relations.EventsEntityUsingEventId, "EventCustomers_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaEventAccountTestHcpcsCode":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventAccountTestHcpcsCodeEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "EventAccountTestHcpcsCode_", JoinHint.None);
					toReturn.Add(EventAccountTestHcpcsCodeEntity.Relations.EventsEntityUsingEventId, "EventAccountTestHcpcsCode_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaCustomerRegistrationNotes":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerRegistrationNotesEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerRegistrationNotes_", JoinHint.None);
					toReturn.Add(CustomerRegistrationNotesEntity.Relations.EventsEntityUsingEventId, "CustomerRegistrationNotes_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaCallQueueCustomer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingAssignedToOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.EventsEntityUsingEventId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaEventAccountTestHcpcsCode_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventAccountTestHcpcsCodeEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "EventAccountTestHcpcsCode_", JoinHint.None);
					toReturn.Add(EventAccountTestHcpcsCodeEntity.Relations.EventsEntityUsingEventId, "EventAccountTestHcpcsCode_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaSeminars":
					toReturn.Add(OrganizationRoleUserEntity.Relations.SeminarsEntityUsingOrgRoleUserId, "OrganizationRoleUserEntity__", "Seminars_", JoinHint.None);
					toReturn.Add(SeminarsEntity.Relations.EventsEntityUsingEventId, "Seminars_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaDisqualifiedTest_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.DisqualifiedTestEntityUsingUpdatedBy, "OrganizationRoleUserEntity__", "DisqualifiedTest_", JoinHint.None);
					toReturn.Add(DisqualifiedTestEntity.Relations.EventsEntityUsingEventId, "DisqualifiedTest_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaDisqualifiedTest":
					toReturn.Add(OrganizationRoleUserEntity.Relations.DisqualifiedTestEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "DisqualifiedTest_", JoinHint.None);
					toReturn.Add(DisqualifiedTestEntity.Relations.EventsEntityUsingEventId, "DisqualifiedTest_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaCustomEventNotification":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomEventNotificationEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "CustomEventNotification_", JoinHint.None);
					toReturn.Add(CustomEventNotificationEntity.Relations.EventsEntityUsingEventId, "CustomEventNotification_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaCallQueueCustomer__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.EventsEntityUsingEventId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaCustomerClinicalQuestionAnswer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerClinicalQuestionAnswerEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "CustomerClinicalQuestionAnswer_", JoinHint.None);
					toReturn.Add(CustomerClinicalQuestionAnswerEntity.Relations.EventsEntityUsingEventId, "CustomerClinicalQuestionAnswer_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaCustomerClinicalQuestionAnswer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerClinicalQuestionAnswerEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "CustomerClinicalQuestionAnswer_", JoinHint.None);
					toReturn.Add(CustomerClinicalQuestionAnswerEntity.Relations.EventsEntityUsingEventId, "CustomerClinicalQuestionAnswer_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaEventAppointmentChangeLog":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventAppointmentChangeLogEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "EventAppointmentChangeLog_", JoinHint.None);
					toReturn.Add(EventAppointmentChangeLogEntity.Relations.EventsEntityUsingNewEventId, "EventAppointmentChangeLog_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaEventAppointmentChangeLog_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventAppointmentChangeLogEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "EventAppointmentChangeLog_", JoinHint.None);
					toReturn.Add(EventAppointmentChangeLogEntity.Relations.EventsEntityUsingOldEventId, "EventAppointmentChangeLog_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaCallQueueCustomer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.EventsEntityUsingEventId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaHostPayment":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HostPaymentEntityUsingCreatorOrganizationRoleUserId, "OrganizationRoleUserEntity__", "HostPayment_", JoinHint.None);
					toReturn.Add(HostPaymentEntity.Relations.EventsEntityUsingEventId, "HostPayment_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaEventStaffAssignment":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventStaffAssignmentEntityUsingScheduledStaffOrgRoleUserId, "OrganizationRoleUserEntity__", "EventStaffAssignment_", JoinHint.None);
					toReturn.Add(EventStaffAssignmentEntity.Relations.EventsEntityUsingEventId, "EventStaffAssignment_", string.Empty, JoinHint.None);
					break;
				case "EventsCollectionViaEventAppointmentCancellationLog":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventAppointmentCancellationLogEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "EventAppointmentCancellationLog_", JoinHint.None);
					toReturn.Add(EventAppointmentCancellationLogEntity.Relations.EventsEntityUsingEventId, "EventAppointmentCancellationLog_", string.Empty, JoinHint.None);
					break;
				case "EventTypeCollectionViaEvents":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingAssignedToOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.EventTypeEntityUsingEventTypeId, "Events_", string.Empty, JoinHint.None);
					break;
				case "EventTypeCollectionViaEvents____":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingUpdatedByAdmin, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.EventTypeEntityUsingEventTypeId, "Events_", string.Empty, JoinHint.None);
					break;
				case "EventTypeCollectionViaEvents___":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingSignOffOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.EventTypeEntityUsingEventTypeId, "Events_", string.Empty, JoinHint.None);
					break;
				case "EventTypeCollectionViaEvents_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.EventTypeEntityUsingEventTypeId, "Events_", string.Empty, JoinHint.None);
					break;
				case "EventTypeCollectionViaEvents__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingEventActivityOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.EventTypeEntityUsingEventTypeId, "Events_", string.Empty, JoinHint.None);
					break;
				case "ExitInterviewQuestionCollectionViaExitInterviewAnswer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ExitInterviewAnswerEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "ExitInterviewAnswer_", JoinHint.None);
					toReturn.Add(ExitInterviewAnswerEntity.Relations.ExitInterviewQuestionEntityUsingQuestionId, "ExitInterviewAnswer_", string.Empty, JoinHint.None);
					break;
				case "ExitInterviewQuestionCollectionViaExitInterviewAnswer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ExitInterviewAnswerEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "ExitInterviewAnswer_", JoinHint.None);
					toReturn.Add(ExitInterviewAnswerEntity.Relations.ExitInterviewQuestionEntityUsingQuestionId, "ExitInterviewAnswer_", string.Empty, JoinHint.None);
					break;
				case "ExportableReportsCollectionViaExportableReportsQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ExportableReportsQueueEntityUsingRequestedBy, "OrganizationRoleUserEntity__", "ExportableReportsQueue_", JoinHint.None);
					toReturn.Add(ExportableReportsQueueEntity.Relations.ExportableReportsEntityUsingReportId, "ExportableReportsQueue_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaCustomerActivityTypeUpload_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerActivityTypeUploadEntityUsingUploadedBy, "OrganizationRoleUserEntity__", "CustomerActivityTypeUpload_", JoinHint.None);
					toReturn.Add(CustomerActivityTypeUploadEntity.Relations.FileEntityUsingLogFileId, "CustomerActivityTypeUpload_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaCorporateUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CorporateUploadEntityUsingUploadedBy, "OrganizationRoleUserEntity__", "CorporateUpload_", JoinHint.None);
					toReturn.Add(CorporateUploadEntity.Relations.FileEntityUsingFileId, "CorporateUpload_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaStaffEventScheduleUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.StaffEventScheduleUploadEntityUsingUploadedByOrgRoleUserId, "OrganizationRoleUserEntity__", "StaffEventScheduleUpload_", JoinHint.None);
					toReturn.Add(StaffEventScheduleUploadEntity.Relations.FileEntityUsingFileId, "StaffEventScheduleUpload_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaCorporateUpload_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CorporateUploadEntityUsingUploadedBy, "OrganizationRoleUserEntity__", "CorporateUpload_", JoinHint.None);
					toReturn.Add(CorporateUploadEntity.Relations.FileEntityUsingLogFileId, "CorporateUpload_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaPhysicianRecordRequestSignature":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PhysicianRecordRequestSignatureEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "PhysicianRecordRequestSignature_", JoinHint.None);
					toReturn.Add(PhysicianRecordRequestSignatureEntity.Relations.FileEntityUsingSignatureFileId, "PhysicianRecordRequestSignature_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaCustomerActivityTypeUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerActivityTypeUploadEntityUsingUploadedBy, "OrganizationRoleUserEntity__", "CustomerActivityTypeUpload_", JoinHint.None);
					toReturn.Add(CustomerActivityTypeUploadEntity.Relations.FileEntityUsingFileId, "CustomerActivityTypeUpload_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaRapsUpload_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.RapsUploadEntityUsingUploadedBy, "OrganizationRoleUserEntity__", "RapsUpload_", JoinHint.None);
					toReturn.Add(RapsUploadEntity.Relations.FileEntityUsingLogFileId, "RapsUpload_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaCallUpload_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallUploadEntityUsingUploadedBy, "OrganizationRoleUserEntity__", "CallUpload_", JoinHint.None);
					toReturn.Add(CallUploadEntity.Relations.FileEntityUsingLogFileId, "CallUpload_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaChaperoneSignature_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ChaperoneSignatureEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "ChaperoneSignature_", JoinHint.None);
					toReturn.Add(ChaperoneSignatureEntity.Relations.FileEntityUsingStaffSignatureFileId, "ChaperoneSignature_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaRapsUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.RapsUploadEntityUsingUploadedBy, "OrganizationRoleUserEntity__", "RapsUpload_", JoinHint.None);
					toReturn.Add(RapsUploadEntity.Relations.FileEntityUsingFileId, "RapsUpload_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaChaperoneSignature":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ChaperoneSignatureEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "ChaperoneSignature_", JoinHint.None);
					toReturn.Add(ChaperoneSignatureEntity.Relations.FileEntityUsingSignatureFileId, "ChaperoneSignature_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaCorporateUpload__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CorporateUploadEntityUsingUploadedBy, "OrganizationRoleUserEntity__", "CorporateUpload_", JoinHint.None);
					toReturn.Add(CorporateUploadEntity.Relations.FileEntityUsingAdjustOrderLogFileId, "CorporateUpload_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaCallUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallUploadEntityUsingUploadedBy, "OrganizationRoleUserEntity__", "CallUpload_", JoinHint.None);
					toReturn.Add(CallUploadEntity.Relations.FileEntityUsingFileId, "CallUpload_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaHealthPlanCriteriaAssignmentUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanCriteriaAssignmentUploadEntityUsingUploadedByOrgRoleUserId, "OrganizationRoleUserEntity__", "HealthPlanCriteriaAssignmentUpload_", JoinHint.None);
					toReturn.Add(HealthPlanCriteriaAssignmentUploadEntity.Relations.FileEntityUsingFileId, "HealthPlanCriteriaAssignmentUpload_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaParticipationConsentSignature_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ParticipationConsentSignatureEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "ParticipationConsentSignature_", JoinHint.None);
					toReturn.Add(ParticipationConsentSignatureEntity.Relations.FileEntityUsingSignatureFileId, "ParticipationConsentSignature_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaMergeCustomerUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.MergeCustomerUploadEntityUsingUploadedBy, "OrganizationRoleUserEntity__", "MergeCustomerUpload_", JoinHint.None);
					toReturn.Add(MergeCustomerUploadEntity.Relations.FileEntityUsingFileId, "MergeCustomerUpload_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaMedicationUpload_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.MedicationUploadEntityUsingUploadedBy, "OrganizationRoleUserEntity__", "MedicationUpload_", JoinHint.None);
					toReturn.Add(MedicationUploadEntity.Relations.FileEntityUsingLogFileId, "MedicationUpload_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaMedicationUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.MedicationUploadEntityUsingUploadedBy, "OrganizationRoleUserEntity__", "MedicationUpload_", JoinHint.None);
					toReturn.Add(MedicationUploadEntity.Relations.FileEntityUsingFileId, "MedicationUpload_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaFluConsentSignature_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.FluConsentSignatureEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "FluConsentSignature_", JoinHint.None);
					toReturn.Add(FluConsentSignatureEntity.Relations.FileEntityUsingClinicalProviderSignatureFileId, "FluConsentSignature_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaFluConsentSignature":
					toReturn.Add(OrganizationRoleUserEntity.Relations.FluConsentSignatureEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "FluConsentSignature_", JoinHint.None);
					toReturn.Add(FluConsentSignatureEntity.Relations.FileEntityUsingSignatureFileId, "FluConsentSignature_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaMergeCustomerUpload_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.MergeCustomerUploadEntityUsingUploadedBy, "OrganizationRoleUserEntity__", "MergeCustomerUpload_", JoinHint.None);
					toReturn.Add(MergeCustomerUploadEntity.Relations.FileEntityUsingLogFileId, "MergeCustomerUpload_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaExitInterviewSignature":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ExitInterviewSignatureEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "ExitInterviewSignature_", JoinHint.None);
					toReturn.Add(ExitInterviewSignatureEntity.Relations.FileEntityUsingSignatureFileId, "ExitInterviewSignature_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaEventCustomerGiftCard_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerGiftCardEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "EventCustomerGiftCard_", JoinHint.None);
					toReturn.Add(EventCustomerGiftCardEntity.Relations.FileEntityUsingTechnicianSignatureFileId, "EventCustomerGiftCard_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaEventCustomerGiftCard":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerGiftCardEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "EventCustomerGiftCard_", JoinHint.None);
					toReturn.Add(EventCustomerGiftCardEntity.Relations.FileEntityUsingPatientSignatureFileId, "EventCustomerGiftCard_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaEligibilityUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EligibilityUploadEntityUsingUploadedBy, "OrganizationRoleUserEntity__", "EligibilityUpload_", JoinHint.None);
					toReturn.Add(EligibilityUploadEntity.Relations.FileEntityUsingFileId, "EligibilityUpload_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaEligibilityUpload_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EligibilityUploadEntityUsingUploadedBy, "OrganizationRoleUserEntity__", "EligibilityUpload_", JoinHint.None);
					toReturn.Add(EligibilityUploadEntity.Relations.FileEntityUsingLogFileId, "EligibilityUpload_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaExportableReportsQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ExportableReportsQueueEntityUsingRequestedBy, "OrganizationRoleUserEntity__", "ExportableReportsQueue_", JoinHint.None);
					toReturn.Add(ExportableReportsQueueEntity.Relations.FileEntityUsingFileId, "ExportableReportsQueue_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaSuspectConditionUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.SuspectConditionUploadEntityUsingUploadedBy, "OrganizationRoleUserEntity__", "SuspectConditionUpload_", JoinHint.None);
					toReturn.Add(SuspectConditionUploadEntity.Relations.FileEntityUsingFileId, "SuspectConditionUpload_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaStaffEventScheduleUpload_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.StaffEventScheduleUploadEntityUsingUploadedByOrgRoleUserId, "OrganizationRoleUserEntity__", "StaffEventScheduleUpload_", JoinHint.None);
					toReturn.Add(StaffEventScheduleUploadEntity.Relations.FileEntityUsingLogFileId, "StaffEventScheduleUpload_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaParticipationConsentSignature":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ParticipationConsentSignatureEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "ParticipationConsentSignature_", JoinHint.None);
					toReturn.Add(ParticipationConsentSignatureEntity.Relations.FileEntityUsingInsuranceSignatureFileId, "ParticipationConsentSignature_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaCustomerPhoneNumberUpdateUpload_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerPhoneNumberUpdateUploadEntityUsingUploadedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerPhoneNumberUpdateUpload_", JoinHint.None);
					toReturn.Add(CustomerPhoneNumberUpdateUploadEntity.Relations.FileEntityUsingLogFileId, "CustomerPhoneNumberUpdateUpload_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaCustomerPhoneNumberUpdateUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerPhoneNumberUpdateUploadEntityUsingUploadedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerPhoneNumberUpdateUpload_", JoinHint.None);
					toReturn.Add(CustomerPhoneNumberUpdateUploadEntity.Relations.FileEntityUsingFileId, "CustomerPhoneNumberUpdateUpload_", string.Empty, JoinHint.None);
					break;
				case "FileCollectionViaSuspectConditionUpload_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.SuspectConditionUploadEntityUsingUploadedBy, "OrganizationRoleUserEntity__", "SuspectConditionUpload_", JoinHint.None);
					toReturn.Add(SuspectConditionUploadEntity.Relations.FileEntityUsingLogFileId, "SuspectConditionUpload_", string.Empty, JoinHint.None);
					break;
				case "FluConsentQuestionCollectionViaFluConsentAnswer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.FluConsentAnswerEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "FluConsentAnswer_", JoinHint.None);
					toReturn.Add(FluConsentAnswerEntity.Relations.FluConsentQuestionEntityUsingQuestionId, "FluConsentAnswer_", string.Empty, JoinHint.None);
					break;
				case "FluConsentQuestionCollectionViaFluConsentAnswer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.FluConsentAnswerEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "FluConsentAnswer_", JoinHint.None);
					toReturn.Add(FluConsentAnswerEntity.Relations.FluConsentQuestionEntityUsingQuestionId, "FluConsentAnswer_", string.Empty, JoinHint.None);
					break;
				case "GcNotGivenReasonCollectionViaEventCustomers":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "EventCustomers_", JoinHint.None);
					toReturn.Add(EventCustomersEntity.Relations.GcNotGivenReasonEntityUsingGcNotGivenReasonId, "EventCustomers_", string.Empty, JoinHint.None);
					break;
				case "GcNotGivenReasonCollectionViaEventCustomers_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingConfirmedBy, "OrganizationRoleUserEntity__", "EventCustomers_", JoinHint.None);
					toReturn.Add(EventCustomersEntity.Relations.GcNotGivenReasonEntityUsingGcNotGivenReasonId, "EventCustomers_", string.Empty, JoinHint.None);
					break;
				case "HafTemplateCollectionViaClinicalTestQualificationCriteria":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ClinicalTestQualificationCriteriaEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "ClinicalTestQualificationCriteria_", JoinHint.None);
					toReturn.Add(ClinicalTestQualificationCriteriaEntity.Relations.HafTemplateEntityUsingTemplateId, "ClinicalTestQualificationCriteria_", string.Empty, JoinHint.None);
					break;
				case "HafTemplateCollectionViaEvents___":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingSignOffOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.HafTemplateEntityUsingHafTemplateId, "Events_", string.Empty, JoinHint.None);
					break;
				case "HafTemplateCollectionViaEvents":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingAssignedToOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.HafTemplateEntityUsingHafTemplateId, "Events_", string.Empty, JoinHint.None);
					break;
				case "HafTemplateCollectionViaEvents____":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingUpdatedByAdmin, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.HafTemplateEntityUsingHafTemplateId, "Events_", string.Empty, JoinHint.None);
					break;
				case "HafTemplateCollectionViaEvents_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.HafTemplateEntityUsingHafTemplateId, "Events_", string.Empty, JoinHint.None);
					break;
				case "HafTemplateCollectionViaCustomerClinicalQuestionAnswer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerClinicalQuestionAnswerEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "CustomerClinicalQuestionAnswer_", JoinHint.None);
					toReturn.Add(CustomerClinicalQuestionAnswerEntity.Relations.HafTemplateEntityUsingClinicalQuestionTemplateId, "CustomerClinicalQuestionAnswer_", string.Empty, JoinHint.None);
					break;
				case "HafTemplateCollectionViaEvents__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingEventActivityOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.HafTemplateEntityUsingHafTemplateId, "Events_", string.Empty, JoinHint.None);
					break;
				case "HafTemplateCollectionViaCustomerClinicalQuestionAnswer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerClinicalQuestionAnswerEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "CustomerClinicalQuestionAnswer_", JoinHint.None);
					toReturn.Add(CustomerClinicalQuestionAnswerEntity.Relations.HafTemplateEntityUsingClinicalQuestionTemplateId, "CustomerClinicalQuestionAnswer_", string.Empty, JoinHint.None);
					break;
				case "HafTemplateCollectionViaClinicalTestQualificationCriteria_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ClinicalTestQualificationCriteriaEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "ClinicalTestQualificationCriteria_", JoinHint.None);
					toReturn.Add(ClinicalTestQualificationCriteriaEntity.Relations.HafTemplateEntityUsingTemplateId, "ClinicalTestQualificationCriteria_", string.Empty, JoinHint.None);
					break;
				case "HcpcsCodeCollectionViaTestHcpcsCode_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TestHcpcsCodeEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "TestHcpcsCode_", JoinHint.None);
					toReturn.Add(TestHcpcsCodeEntity.Relations.HcpcsCodeEntityUsingHcpcsCodeId, "TestHcpcsCode_", string.Empty, JoinHint.None);
					break;
				case "HcpcsCodeCollectionViaTestHcpcsCode":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TestHcpcsCodeEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "TestHcpcsCode_", JoinHint.None);
					toReturn.Add(TestHcpcsCodeEntity.Relations.HcpcsCodeEntityUsingHcpcsCodeId, "TestHcpcsCode_", string.Empty, JoinHint.None);
					break;
				case "HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanCriteriaAssignmentUploadEntityUsingUploadedByOrgRoleUserId, "OrganizationRoleUserEntity__", "HealthPlanCriteriaAssignmentUpload_", JoinHint.None);
					toReturn.Add(HealthPlanCriteriaAssignmentUploadEntity.Relations.HealthPlanCallQueueCriteriaEntityUsingCriteriaId, "HealthPlanCriteriaAssignmentUpload_", string.Empty, JoinHint.None);
					break;
				case "HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanCriteriaTeamAssignmentEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "HealthPlanCriteriaTeamAssignment_", JoinHint.None);
					toReturn.Add(HealthPlanCriteriaTeamAssignmentEntity.Relations.HealthPlanCallQueueCriteriaEntityUsingHealthPlanCriteriaId, "HealthPlanCriteriaTeamAssignment_", string.Empty, JoinHint.None);
					break;
				case "HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanCriteriaTeamAssignmentEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "HealthPlanCriteriaTeamAssignment_", JoinHint.None);
					toReturn.Add(HealthPlanCriteriaTeamAssignmentEntity.Relations.HealthPlanCallQueueCriteriaEntityUsingHealthPlanCriteriaId, "HealthPlanCriteriaTeamAssignment_", string.Empty, JoinHint.None);
					break;
				case "HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanCriteriaAssignmentEntityUsingAssignedToOrgRoleUserId, "OrganizationRoleUserEntity__", "HealthPlanCriteriaAssignment_", JoinHint.None);
					toReturn.Add(HealthPlanCriteriaAssignmentEntity.Relations.HealthPlanCallQueueCriteriaEntityUsingHealthPlanCriteriaId, "HealthPlanCriteriaAssignment_", string.Empty, JoinHint.None);
					break;
				case "HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanCriteriaAssignmentEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "HealthPlanCriteriaAssignment_", JoinHint.None);
					toReturn.Add(HealthPlanCriteriaAssignmentEntity.Relations.HealthPlanCallQueueCriteriaEntityUsingHealthPlanCriteriaId, "HealthPlanCriteriaAssignment_", string.Empty, JoinHint.None);
					break;
				case "HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanCriteriaAssignmentEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "HealthPlanCriteriaAssignment_", JoinHint.None);
					toReturn.Add(HealthPlanCriteriaAssignmentEntity.Relations.HealthPlanCallQueueCriteriaEntityUsingHealthPlanCriteriaId, "HealthPlanCriteriaAssignment_", string.Empty, JoinHint.None);
					break;
				case "HospitalFacilityCollectionViaEventCustomers":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "EventCustomers_", JoinHint.None);
					toReturn.Add(EventCustomersEntity.Relations.HospitalFacilityEntityUsingHospitalFacilityId, "EventCustomers_", string.Empty, JoinHint.None);
					break;
				case "HospitalFacilityCollectionViaEventCustomers_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingConfirmedBy, "OrganizationRoleUserEntity__", "EventCustomers_", JoinHint.None);
					toReturn.Add(EventCustomersEntity.Relations.HospitalFacilityEntityUsingHospitalFacilityId, "EventCustomers_", string.Empty, JoinHint.None);
					break;
				case "HostPaymentCollectionViaHostPaymentTransaction":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HostPaymentTransactionEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "HostPaymentTransaction_", JoinHint.None);
					toReturn.Add(HostPaymentTransactionEntity.Relations.HostPaymentEntityUsingHostPaymentId, "HostPaymentTransaction_", string.Empty, JoinHint.None);
					break;
				case "IcdCodesCollectionViaCustomerIcdCode":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerIcdCodeEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerIcdCode_", JoinHint.None);
					toReturn.Add(CustomerIcdCodeEntity.Relations.IcdCodesEntityUsingIcdCodeId, "CustomerIcdCode_", string.Empty, JoinHint.None);
					break;
				case "InsuranceCompanyCollectionViaEligibility":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EligibilityEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "Eligibility_", JoinHint.None);
					toReturn.Add(EligibilityEntity.Relations.InsuranceCompanyEntityUsingInsuranceCompanyId, "Eligibility_", string.Empty, JoinHint.None);
					break;
				case "LanguageCollectionViaHealthPlanCallQueueCriteria":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanCallQueueCriteriaEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "HealthPlanCallQueueCriteria_", JoinHint.None);
					toReturn.Add(HealthPlanCallQueueCriteriaEntity.Relations.LanguageEntityUsingLanguageId, "HealthPlanCallQueueCriteria_", string.Empty, JoinHint.None);
					break;
				case "LanguageCollectionViaCallQueueCustomer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.LanguageEntityUsingLanguageId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "LanguageCollectionViaCallQueueCustomer__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.LanguageEntityUsingLanguageId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "LanguageCollectionViaCallQueueCustomer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingAssignedToOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.LanguageEntityUsingLanguageId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "LanguageCollectionViaHealthPlanCallQueueCriteria_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanCallQueueCriteriaEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "HealthPlanCallQueueCriteria_", JoinHint.None);
					toReturn.Add(HealthPlanCallQueueCriteriaEntity.Relations.LanguageEntityUsingLanguageId, "HealthPlanCallQueueCriteria_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaUncontactedCustomerCallQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.UncontactedCustomerCallQueueEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "UncontactedCustomerCallQueue_", JoinHint.None);
					toReturn.Add(UncontactedCustomerCallQueueEntity.Relations.LookupEntityUsingStatus, "UncontactedCustomerCallQueue_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaFillEventCallQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.FillEventCallQueueEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "FillEventCallQueue_", JoinHint.None);
					toReturn.Add(FillEventCallQueueEntity.Relations.LookupEntityUsingStatus, "FillEventCallQueue_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaTestPerformedExternally_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TestPerformedExternallyEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "TestPerformedExternally_", JoinHint.None);
					toReturn.Add(TestPerformedExternallyEntity.Relations.LookupEntityUsingResultEntryTypeId, "TestPerformedExternally_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaLanguageBarrierCallQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.LanguageBarrierCallQueueEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "LanguageBarrierCallQueue_", JoinHint.None);
					toReturn.Add(LanguageBarrierCallQueueEntity.Relations.LookupEntityUsingStatus, "LanguageBarrierCallQueue_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaMedicationUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.MedicationUploadEntityUsingUploadedBy, "OrganizationRoleUserEntity__", "MedicationUpload_", JoinHint.None);
					toReturn.Add(MedicationUploadEntity.Relations.LookupEntityUsingStatusId, "MedicationUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaHostFacilityRanking":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HostFacilityRankingEntityUsingRankedByOrganizationRoleUserId, "OrganizationRoleUserEntity__", "HostFacilityRanking_", JoinHint.None);
					toReturn.Add(HostFacilityRankingEntity.Relations.LookupEntityUsingInternetAccess, "HostFacilityRanking_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaHostFacilityRanking_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HostFacilityRankingEntityUsingRankedByOrganizationRoleUserId, "OrganizationRoleUserEntity__", "HostFacilityRanking_", JoinHint.None);
					toReturn.Add(HostFacilityRankingEntity.Relations.LookupEntityUsingRanking, "HostFacilityRanking_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaMailRoundCallQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.MailRoundCallQueueEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "MailRoundCallQueue_", JoinHint.None);
					toReturn.Add(MailRoundCallQueueEntity.Relations.LookupEntityUsingStatus, "MailRoundCallQueue_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaHostPaymentTransaction_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HostPaymentTransactionEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "HostPaymentTransaction_", JoinHint.None);
					toReturn.Add(HostPaymentTransactionEntity.Relations.LookupEntityUsingTransactionType, "HostPaymentTransaction_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaHostPayment":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HostPaymentEntityUsingCreatorOrganizationRoleUserId, "OrganizationRoleUserEntity__", "HostPayment_", JoinHint.None);
					toReturn.Add(HostPaymentEntity.Relations.LookupEntityUsingDepositType, "HostPayment_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaHostPaymentTransaction":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HostPaymentTransactionEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "HostPaymentTransaction_", JoinHint.None);
					toReturn.Add(HostPaymentTransactionEntity.Relations.LookupEntityUsingPaymentMethod, "HostPaymentTransaction_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaHostPayment_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HostPaymentEntityUsingCreatorOrganizationRoleUserId, "OrganizationRoleUserEntity__", "HostPayment_", JoinHint.None);
					toReturn.Add(HostPaymentEntity.Relations.LookupEntityUsingStatus, "HostPayment_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaKynLabValues":
					toReturn.Add(OrganizationRoleUserEntity.Relations.KynLabValuesEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "KynLabValues_", JoinHint.None);
					toReturn.Add(KynLabValuesEntity.Relations.LookupEntityUsingFastingStatus, "KynLabValues_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaExportableReportsQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ExportableReportsQueueEntityUsingRequestedBy, "OrganizationRoleUserEntity__", "ExportableReportsQueue_", JoinHint.None);
					toReturn.Add(ExportableReportsQueueEntity.Relations.LookupEntityUsingStatusId, "ExportableReportsQueue_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaFile":
					toReturn.Add(OrganizationRoleUserEntity.Relations.FileEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "File_", JoinHint.None);
					toReturn.Add(FileEntity.Relations.LookupEntityUsingType, "File_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaTestPerformedExternally":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TestPerformedExternallyEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "TestPerformedExternally_", JoinHint.None);
					toReturn.Add(TestPerformedExternallyEntity.Relations.LookupEntityUsingResultEntryTypeId, "TestPerformedExternally_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaKynLabValues_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.KynLabValuesEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "KynLabValues_", JoinHint.None);
					toReturn.Add(KynLabValuesEntity.Relations.LookupEntityUsingFastingStatus, "KynLabValues_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaPreQualificationQuestion":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PreQualificationQuestionEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "PreQualificationQuestion_", JoinHint.None);
					toReturn.Add(PreQualificationQuestionEntity.Relations.LookupEntityUsingTypeId, "PreQualificationQuestion_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaPrintOrderItemTracking__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PrintOrderItemTrackingEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "PrintOrderItemTracking_", JoinHint.None);
					toReturn.Add(PrintOrderItemTrackingEntity.Relations.LookupEntityUsingConfirmationMode, "PrintOrderItemTracking_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaPcpDisposition_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PcpDispositionEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "PcpDisposition_", JoinHint.None);
					toReturn.Add(PcpDispositionEntity.Relations.LookupEntityUsingDispositionId, "PcpDisposition_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaPcpAppointment_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PcpAppointmentEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "PcpAppointment_", JoinHint.None);
					toReturn.Add(PcpAppointmentEntity.Relations.LookupEntityUsingPreferredContactMethod, "PcpAppointment_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaPcpDisposition":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PcpDispositionEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "PcpDisposition_", JoinHint.None);
					toReturn.Add(PcpDispositionEntity.Relations.LookupEntityUsingDispositionId, "PcpDisposition_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaRefundRequest":
					toReturn.Add(OrganizationRoleUserEntity.Relations.RefundRequestEntityUsingRequestedByOrgRoleUserId, "OrganizationRoleUserEntity__", "RefundRequest_", JoinHint.None);
					toReturn.Add(RefundRequestEntity.Relations.LookupEntityUsingRequestStatus, "RefundRequest_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaRapsUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.RapsUploadEntityUsingUploadedBy, "OrganizationRoleUserEntity__", "RapsUpload_", JoinHint.None);
					toReturn.Add(RapsUploadEntity.Relations.LookupEntityUsingStatusId, "RapsUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaRefundRequest_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.RefundRequestEntityUsingProcessedByOrgRoleUserId, "OrganizationRoleUserEntity__", "RefundRequest_", JoinHint.None);
					toReturn.Add(RefundRequestEntity.Relations.LookupEntityUsingRequestStatus, "RefundRequest_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaPrintOrderItemTracking___":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PrintOrderItemTrackingEntityUsingUpdatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "PrintOrderItemTracking_", JoinHint.None);
					toReturn.Add(PrintOrderItemTrackingEntity.Relations.LookupEntityUsingConfirmationMode, "PrintOrderItemTracking_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaProspectCustomer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ProspectCustomerEntityUsingContactedBy, "OrganizationRoleUserEntity__", "ProspectCustomer_", JoinHint.None);
					toReturn.Add(ProspectCustomerEntity.Relations.LookupEntityUsingSource, "ProspectCustomer_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaPcpAppointment":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PcpAppointmentEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "PcpAppointment_", JoinHint.None);
					toReturn.Add(PcpAppointmentEntity.Relations.LookupEntityUsingPreferredContactMethod, "PcpAppointment_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaHafTemplate":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HafTemplateEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "HafTemplate_", JoinHint.None);
					toReturn.Add(HafTemplateEntity.Relations.LookupEntityUsingType, "HafTemplate_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaHafTemplate_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HafTemplateEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "HafTemplate_", JoinHint.None);
					toReturn.Add(HafTemplateEntity.Relations.LookupEntityUsingType, "HafTemplate_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaSuspectConditionUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.SuspectConditionUploadEntityUsingUploadedBy, "OrganizationRoleUserEntity__", "SuspectConditionUpload_", JoinHint.None);
					toReturn.Add(SuspectConditionUploadEntity.Relations.LookupEntityUsingStatusId, "SuspectConditionUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaMergeCustomerUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.MergeCustomerUploadEntityUsingUploadedBy, "OrganizationRoleUserEntity__", "MergeCustomerUpload_", JoinHint.None);
					toReturn.Add(MergeCustomerUploadEntity.Relations.LookupEntityUsingStatusId, "MergeCustomerUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaNoShowCallQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.NoShowCallQueueEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "NoShowCallQueue_", JoinHint.None);
					toReturn.Add(NoShowCallQueueEntity.Relations.LookupEntityUsingStatus, "NoShowCallQueue_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaStaffEventScheduleUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.StaffEventScheduleUploadEntityUsingUploadedByOrgRoleUserId, "OrganizationRoleUserEntity__", "StaffEventScheduleUpload_", JoinHint.None);
					toReturn.Add(StaffEventScheduleUploadEntity.Relations.LookupEntityUsingStatusId, "StaffEventScheduleUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaHealthPlanRevenue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanRevenueEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "HealthPlanRevenue_", JoinHint.None);
					toReturn.Add(HealthPlanRevenueEntity.Relations.LookupEntityUsingRevenueItemTypeId, "HealthPlanRevenue_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaHealthPlanRevenue_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HealthPlanRevenueEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "HealthPlanRevenue_", JoinHint.None);
					toReturn.Add(HealthPlanRevenueEntity.Relations.LookupEntityUsingRevenueItemTypeId, "HealthPlanRevenue_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaHafTemplate__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HafTemplateEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "HafTemplate_", JoinHint.None);
					toReturn.Add(HafTemplateEntity.Relations.LookupEntityUsingCategory, "HafTemplate_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaHafTemplate___":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HafTemplateEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "HafTemplate_", JoinHint.None);
					toReturn.Add(HafTemplateEntity.Relations.LookupEntityUsingCategory, "HafTemplate_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCustomerProfileHistory___":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerProfileHistoryEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "CustomerProfileHistory_", JoinHint.None);
					toReturn.Add(CustomerProfileHistoryEntity.Relations.LookupEntityUsingPreferredContactType, "CustomerProfileHistory_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCustomerProfileHistory__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerProfileHistoryEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "CustomerProfileHistory_", JoinHint.None);
					toReturn.Add(CustomerProfileHistoryEntity.Relations.LookupEntityUsingMemberUploadSourceId, "CustomerProfileHistory_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCustomerProfileHistory":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerProfileHistoryEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "CustomerProfileHistory_", JoinHint.None);
					toReturn.Add(CustomerProfileHistoryEntity.Relations.LookupEntityUsingDoNotContactUpdateSource, "CustomerProfileHistory_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCustomEventNotification":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomEventNotificationEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "CustomEventNotification_", JoinHint.None);
					toReturn.Add(CustomEventNotificationEntity.Relations.LookupEntityUsingServiceStatus, "CustomEventNotification_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCustomerRegistrationNotes":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerRegistrationNotesEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerRegistrationNotes_", JoinHint.None);
					toReturn.Add(CustomerRegistrationNotesEntity.Relations.LookupEntityUsingReasonId, "CustomerRegistrationNotes_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCustomerProfileHistory_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerProfileHistoryEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "CustomerProfileHistory_", JoinHint.None);
					toReturn.Add(CustomerProfileHistoryEntity.Relations.LookupEntityUsingProductTypeId, "CustomerProfileHistory_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCustomerPrimaryCarePhysician__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerPrimaryCarePhysician_", JoinHint.None);
					toReturn.Add(CustomerPrimaryCarePhysicianEntity.Relations.LookupEntityUsingSource, "CustomerPrimaryCarePhysician_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCustomerEventTestState__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerEventTestStateEntityUsingUpdatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerEventTestState_", JoinHint.None);
					toReturn.Add(CustomerEventTestStateEntity.Relations.LookupEntityUsingTestSummary, "CustomerEventTestState_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCustomerEventTestState_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerEventTestStateEntityUsingEvaluatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerEventTestState_", JoinHint.None);
					toReturn.Add(CustomerEventTestStateEntity.Relations.LookupEntityUsingTestSummary, "CustomerEventTestState_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCustomerEventTestState":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerEventTestStateEntityUsingConductedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerEventTestState_", JoinHint.None);
					toReturn.Add(CustomerEventTestStateEntity.Relations.LookupEntityUsingTestSummary, "CustomerEventTestState_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCustomerPrimaryCarePhysician_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingPcpAddressVerifiedBy, "OrganizationRoleUserEntity__", "CustomerPrimaryCarePhysician_", JoinHint.None);
					toReturn.Add(CustomerPrimaryCarePhysicianEntity.Relations.LookupEntityUsingSource, "CustomerPrimaryCarePhysician_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCustomerPrimaryCarePhysician":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingUpdatedByOrganizationRoleUserId, "OrganizationRoleUserEntity__", "CustomerPrimaryCarePhysician_", JoinHint.None);
					toReturn.Add(CustomerPrimaryCarePhysicianEntity.Relations.LookupEntityUsingSource, "CustomerPrimaryCarePhysician_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCustomerPhoneNumberUpdateUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerPhoneNumberUpdateUploadEntityUsingUploadedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerPhoneNumberUpdateUpload_", JoinHint.None);
					toReturn.Add(CustomerPhoneNumberUpdateUploadEntity.Relations.LookupEntityUsingStatusId, "CustomerPhoneNumberUpdateUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEligibilityUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EligibilityUploadEntityUsingUploadedBy, "OrganizationRoleUserEntity__", "EligibilityUpload_", JoinHint.None);
					toReturn.Add(EligibilityUploadEntity.Relations.LookupEntityUsingStatusId, "EligibilityUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEventCustomerResult__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingRegeneratedBy, "OrganizationRoleUserEntity__", "EventCustomerResult_", JoinHint.None);
					toReturn.Add(EventCustomerResultEntity.Relations.LookupEntityUsingResultSummary, "EventCustomerResult_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEventCustomerResult______":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingInvoiceDateUpdatedBy, "OrganizationRoleUserEntity__", "EventCustomerResult_", JoinHint.None);
					toReturn.Add(EventCustomerResultEntity.Relations.LookupEntityUsingResultSummary, "EventCustomerResult_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEventCustomerResult_____":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingCodedBy, "OrganizationRoleUserEntity__", "EventCustomerResult_", JoinHint.None);
					toReturn.Add(EventCustomerResultEntity.Relations.LookupEntityUsingResultSummary, "EventCustomerResult_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEventCustomerResult_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "EventCustomerResult_", JoinHint.None);
					toReturn.Add(EventCustomerResultEntity.Relations.LookupEntityUsingResultSummary, "EventCustomerResult_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEventCustomerResult____":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingVerifiedBy, "OrganizationRoleUserEntity__", "EventCustomerResult_", JoinHint.None);
					toReturn.Add(EventCustomerResultEntity.Relations.LookupEntityUsingResultSummary, "EventCustomerResult_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEventCustomerResult___":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingSignedOffBy, "OrganizationRoleUserEntity__", "EventCustomerResult_", JoinHint.None);
					toReturn.Add(EventCustomerResultEntity.Relations.LookupEntityUsingResultSummary, "EventCustomerResult_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEventCustomerResult________":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingChatPdfReviewedByPhysicianId, "OrganizationRoleUserEntity__", "EventCustomerResult_", JoinHint.None);
					toReturn.Add(EventCustomerResultEntity.Relations.LookupEntityUsingResultSummary, "EventCustomerResult_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEventAppointmentCancellationLog":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventAppointmentCancellationLogEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "EventAppointmentCancellationLog_", JoinHint.None);
					toReturn.Add(EventAppointmentCancellationLogEntity.Relations.LookupEntityUsingReasonId, "EventAppointmentCancellationLog_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEmailTemplate_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EmailTemplateEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "EmailTemplate_", JoinHint.None);
					toReturn.Add(EmailTemplateEntity.Relations.LookupEntityUsingCoverLetterTypeLookupId, "EmailTemplate_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEmailTemplate":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EmailTemplateEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "EmailTemplate_", JoinHint.None);
					toReturn.Add(EmailTemplateEntity.Relations.LookupEntityUsingTemplateType, "EmailTemplate_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEventCustomerResult_______":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingChatPdfReviewedByOverreadPhysicianId, "OrganizationRoleUserEntity__", "EventCustomerResult_", JoinHint.None);
					toReturn.Add(EventCustomerResultEntity.Relations.LookupEntityUsingResultSummary, "EventCustomerResult_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEventCustomerResult":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "EventCustomerResult_", JoinHint.None);
					toReturn.Add(EventCustomerResultEntity.Relations.LookupEntityUsingResultSummary, "EventCustomerResult_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEventAppointmentChangeLog":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventAppointmentChangeLogEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "EventAppointmentChangeLog_", JoinHint.None);
					toReturn.Add(EventAppointmentChangeLogEntity.Relations.LookupEntityUsingReasonId, "EventAppointmentChangeLog_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCustomerActivityTypeUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerActivityTypeUploadEntityUsingUploadedBy, "OrganizationRoleUserEntity__", "CustomerActivityTypeUpload_", JoinHint.None);
					toReturn.Add(CustomerActivityTypeUploadEntity.Relations.LookupEntityUsingStatusId, "CustomerActivityTypeUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCalls":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallsEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "Calls_", JoinHint.None);
					toReturn.Add(CallsEntity.Relations.LookupEntityUsingNotInterestedReasonId, "Calls_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCalls_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallsEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "Calls_", JoinHint.None);
					toReturn.Add(CallsEntity.Relations.LookupEntityUsingDialerType, "Calls_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCallRoundCallQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallRoundCallQueueEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "CallRoundCallQueue_", JoinHint.None);
					toReturn.Add(CallRoundCallQueueEntity.Relations.LookupEntityUsingStatus, "CallRoundCallQueue_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCampaign":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CampaignEntityUsingCreatedby, "OrganizationRoleUserEntity__", "Campaign_", JoinHint.None);
					toReturn.Add(CampaignEntity.Relations.LookupEntityUsingModeId, "Campaign_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCallUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallUploadEntityUsingUploadedBy, "OrganizationRoleUserEntity__", "CallUpload_", JoinHint.None);
					toReturn.Add(CallUploadEntity.Relations.LookupEntityUsingStatusId, "CallUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCalls__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallsEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "Calls_", JoinHint.None);
					toReturn.Add(CallsEntity.Relations.LookupEntityUsingProductTypeId, "Calls_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCallQueueCustomer__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.LookupEntityUsingDoNotContactUpdateSource, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCallCenterTeam":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallCenterTeamEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "CallCenterTeam_", JoinHint.None);
					toReturn.Add(CallCenterTeamEntity.Relations.LookupEntityUsingTypeId, "CallCenterTeam_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaAccountHraChatQuestionnaire_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AccountHraChatQuestionnaireEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "AccountHraChatQuestionnaire_", JoinHint.None);
					toReturn.Add(AccountHraChatQuestionnaireEntity.Relations.LookupEntityUsingQuestionnaireType, "AccountHraChatQuestionnaire_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaAccountHraChatQuestionnaire":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AccountHraChatQuestionnaireEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "AccountHraChatQuestionnaire_", JoinHint.None);
					toReturn.Add(AccountHraChatQuestionnaireEntity.Relations.LookupEntityUsingQuestionnaireType, "AccountHraChatQuestionnaire_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCallQueueCustomer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.LookupEntityUsingDoNotContactUpdateSource, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCallQueueCustomer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingAssignedToOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.LookupEntityUsingDoNotContactUpdateSource, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCallCenterTeam_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallCenterTeamEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "CallCenterTeam_", JoinHint.None);
					toReturn.Add(CallCenterTeamEntity.Relations.LookupEntityUsingTypeId, "CallCenterTeam_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCampaign_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CampaignEntityUsingModifiedby, "OrganizationRoleUserEntity__", "Campaign_", JoinHint.None);
					toReturn.Add(CampaignEntity.Relations.LookupEntityUsingModeId, "Campaign_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaClinicalTestQualificationCriteria_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ClinicalTestQualificationCriteriaEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "ClinicalTestQualificationCriteria_", JoinHint.None);
					toReturn.Add(ClinicalTestQualificationCriteriaEntity.Relations.LookupEntityUsingAgeCondition, "ClinicalTestQualificationCriteria_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaClinicalTestQualificationCriteria":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ClinicalTestQualificationCriteriaEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "ClinicalTestQualificationCriteria_", JoinHint.None);
					toReturn.Add(ClinicalTestQualificationCriteriaEntity.Relations.LookupEntityUsingAgeCondition, "ClinicalTestQualificationCriteria_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCheckListTemplate_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CheckListTemplateEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "CheckListTemplate_", JoinHint.None);
					toReturn.Add(CheckListTemplateEntity.Relations.LookupEntityUsingType, "CheckListTemplate_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCorporateUpload":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CorporateUploadEntityUsingUploadedBy, "OrganizationRoleUserEntity__", "CorporateUpload_", JoinHint.None);
					toReturn.Add(CorporateUploadEntity.Relations.LookupEntityUsingSourceId, "CorporateUpload_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaClinicalTestQualificationCriteria___":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ClinicalTestQualificationCriteriaEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "ClinicalTestQualificationCriteria_", JoinHint.None);
					toReturn.Add(ClinicalTestQualificationCriteriaEntity.Relations.LookupEntityUsingGender, "ClinicalTestQualificationCriteria_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaClinicalTestQualificationCriteria__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ClinicalTestQualificationCriteriaEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "ClinicalTestQualificationCriteria_", JoinHint.None);
					toReturn.Add(ClinicalTestQualificationCriteriaEntity.Relations.LookupEntityUsingGender, "ClinicalTestQualificationCriteria_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCheckListTemplate":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CheckListTemplateEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "CheckListTemplate_", JoinHint.None);
					toReturn.Add(CheckListTemplateEntity.Relations.LookupEntityUsingType, "CheckListTemplate_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCampaignActivity":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CampaignActivityEntityUsingCreatedby, "OrganizationRoleUserEntity__", "CampaignActivity_", JoinHint.None);
					toReturn.Add(CampaignActivityEntity.Relations.LookupEntityUsingTypeId, "CampaignActivity_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCampaign___":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CampaignEntityUsingModifiedby, "OrganizationRoleUserEntity__", "Campaign_", JoinHint.None);
					toReturn.Add(CampaignEntity.Relations.LookupEntityUsingTypeId, "Campaign_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCampaign__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CampaignEntityUsingCreatedby, "OrganizationRoleUserEntity__", "Campaign_", JoinHint.None);
					toReturn.Add(CampaignEntity.Relations.LookupEntityUsingTypeId, "Campaign_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCheckListAnswer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CheckListAnswerEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "CheckListAnswer_", JoinHint.None);
					toReturn.Add(CheckListAnswerEntity.Relations.LookupEntityUsingType, "CheckListAnswer_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCheckListAnswer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CheckListAnswerEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "CheckListAnswer_", JoinHint.None);
					toReturn.Add(CheckListAnswerEntity.Relations.LookupEntityUsingType, "CheckListAnswer_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaCampaignActivity_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CampaignActivityEntityUsingModifiedby, "OrganizationRoleUserEntity__", "CampaignActivity_", JoinHint.None);
					toReturn.Add(CampaignActivityEntity.Relations.LookupEntityUsingTypeId, "CampaignActivity_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEvents________":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingAssignedToOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.LookupEntityUsingGenerateHkynXml, "Events_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEvents______________":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingEventActivityOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.LookupEntityUsingGenerateMyBioCheckAssessment, "Events_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEvents_________":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.LookupEntityUsingGenerateHkynXml, "Events_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEvents_____________":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.LookupEntityUsingGenerateMyBioCheckAssessment, "Events_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEvents___________________":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingUpdatedByAdmin, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.LookupEntityUsingGenerateKynXml, "Events_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEvents__________________":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingUpdatedByAdmin, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.LookupEntityUsingGenerateMyBioCheckAssessment, "Events_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEvents_______________":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingSignOffOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.LookupEntityUsingGenerateMyBioCheckAssessment, "Events_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEvents_______________________":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingUpdatedByAdmin, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.LookupEntityUsingGenerateHealthAssesmentFormStatus, "Events_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEvents____________":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingAssignedToOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.LookupEntityUsingGenerateMyBioCheckAssessment, "Events_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEvents____":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingAssignedToOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.LookupEntityUsingEventCancellationReasonId, "Events_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEvents________________":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingUpdatedByAdmin, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.LookupEntityUsingGenerateHkynXml, "Events_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEvents_______":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingSignOffOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.LookupEntityUsingEventCancellationReasonId, "Events_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEvents_____":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.LookupEntityUsingEventCancellationReasonId, "Events_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEvents__________":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingEventActivityOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.LookupEntityUsingGenerateHkynXml, "Events_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEvents_________________":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingUpdatedByAdmin, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.LookupEntityUsingEventCancellationReasonId, "Events_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEvents___________":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingSignOffOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.LookupEntityUsingGenerateHkynXml, "Events_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEvents______________________":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.LookupEntityUsingGenerateHealthAssesmentFormStatus, "Events_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEvents":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingAssignedToOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.LookupEntityUsingGenerateKynXml, "Events_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEvents______":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingEventActivityOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.LookupEntityUsingEventCancellationReasonId, "Events_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEvents__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingEventActivityOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.LookupEntityUsingGenerateKynXml, "Events_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEventCustomers___":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingConfirmedBy, "OrganizationRoleUserEntity__", "EventCustomers_", JoinHint.None);
					toReturn.Add(EventCustomersEntity.Relations.LookupEntityUsingPreferredContactType, "EventCustomers_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEventCustomers":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "EventCustomers_", JoinHint.None);
					toReturn.Add(EventCustomersEntity.Relations.LookupEntityUsingLeftWithoutScreeningReasonId, "EventCustomers_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEventCustomers_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingConfirmedBy, "OrganizationRoleUserEntity__", "EventCustomers_", JoinHint.None);
					toReturn.Add(EventCustomersEntity.Relations.LookupEntityUsingLeftWithoutScreeningReasonId, "EventCustomers_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEventCustomers__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "EventCustomers_", JoinHint.None);
					toReturn.Add(EventCustomersEntity.Relations.LookupEntityUsingPreferredContactType, "EventCustomers_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEvents___":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingSignOffOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.LookupEntityUsingGenerateKynXml, "Events_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEvents________________________":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingEventActivityOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.LookupEntityUsingGenerateHealthAssesmentFormStatus, "Events_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEvents____________________":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingAssignedToOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.LookupEntityUsingGenerateHealthAssesmentFormStatus, "Events_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEvents_____________________":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingSignOffOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.LookupEntityUsingGenerateHealthAssesmentFormStatus, "Events_", string.Empty, JoinHint.None);
					break;
				case "LookupCollectionViaEvents_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.LookupEntityUsingGenerateKynXml, "Events_", string.Empty, JoinHint.None);
					break;
				case "MarketingPrintOrderItemCollectionViaPrintOrderItemTracking":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PrintOrderItemTrackingEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "PrintOrderItemTracking_", JoinHint.None);
					toReturn.Add(PrintOrderItemTrackingEntity.Relations.MarketingPrintOrderItemEntityUsingPrintOrderItemId, "PrintOrderItemTracking_", string.Empty, JoinHint.None);
					break;
				case "MarketingPrintOrderItemCollectionViaPrintOrderItemTracking_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PrintOrderItemTrackingEntityUsingUpdatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "PrintOrderItemTracking_", JoinHint.None);
					toReturn.Add(PrintOrderItemTrackingEntity.Relations.MarketingPrintOrderItemEntityUsingPrintOrderItemId, "PrintOrderItemTracking_", string.Empty, JoinHint.None);
					break;
				case "MedicareQuestionCollectionViaCustomerMedicareQuestionAnswer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerMedicareQuestionAnswerEntityUsingCreateBy, "OrganizationRoleUserEntity__", "CustomerMedicareQuestionAnswer_", JoinHint.None);
					toReturn.Add(CustomerMedicareQuestionAnswerEntity.Relations.MedicareQuestionEntityUsingQuestionId, "CustomerMedicareQuestionAnswer_", string.Empty, JoinHint.None);
					break;
				case "NdcCollectionViaCurrentMedication":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CurrentMedicationEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CurrentMedication_", JoinHint.None);
					toReturn.Add(CurrentMedicationEntity.Relations.NdcEntityUsingNdcId, "CurrentMedication_", string.Empty, JoinHint.None);
					break;
				case "NotesDetailsCollectionViaPriorityInQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PriorityInQueueEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "PriorityInQueue_", JoinHint.None);
					toReturn.Add(PriorityInQueueEntity.Relations.NotesDetailsEntityUsingNoteId, "PriorityInQueue_", string.Empty, JoinHint.None);
					break;
				case "NotesDetailsCollectionViaPriorityInQueue_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PriorityInQueueEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "PriorityInQueue_", JoinHint.None);
					toReturn.Add(PriorityInQueueEntity.Relations.NotesDetailsEntityUsingNoteId, "PriorityInQueue_", string.Empty, JoinHint.None);
					break;
				case "NotesDetailsCollectionViaCallQueueCustomer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.NotesDetailsEntityUsingNotesId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "NotesDetailsCollectionViaEvents":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingAssignedToOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.NotesDetailsEntityUsingEmrNotesId, "Events_", string.Empty, JoinHint.None);
					break;
				case "NotesDetailsCollectionViaCallQueueCustomer__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.NotesDetailsEntityUsingNotesId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "NotesDetailsCollectionViaEvents_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.NotesDetailsEntityUsingEmrNotesId, "Events_", string.Empty, JoinHint.None);
					break;
				case "NotesDetailsCollectionViaEvents___":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingSignOffOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.NotesDetailsEntityUsingEmrNotesId, "Events_", string.Empty, JoinHint.None);
					break;
				case "NotesDetailsCollectionViaCallQueueCustomer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingAssignedToOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.NotesDetailsEntityUsingNotesId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "NotesDetailsCollectionViaEvents____":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingUpdatedByAdmin, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.NotesDetailsEntityUsingEmrNotesId, "Events_", string.Empty, JoinHint.None);
					break;
				case "NotesDetailsCollectionViaEvents__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingEventActivityOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.NotesDetailsEntityUsingEmrNotesId, "Events_", string.Empty, JoinHint.None);
					break;
				case "NotificationMediumCollectionViaNotificationType":
					toReturn.Add(OrganizationRoleUserEntity.Relations.NotificationTypeEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "NotificationType_", JoinHint.None);
					toReturn.Add(NotificationTypeEntity.Relations.NotificationMediumEntityUsingNotificationMediumId, "NotificationType_", string.Empty, JoinHint.None);
					break;
				case "NotificationMediumCollectionViaNotification":
					toReturn.Add(OrganizationRoleUserEntity.Relations.NotificationEntityUsingRequestedByOrgRoleUserId, "OrganizationRoleUserEntity__", "Notification_", JoinHint.None);
					toReturn.Add(NotificationEntity.Relations.NotificationMediumEntityUsingNotificationMediumId, "Notification_", string.Empty, JoinHint.None);
					break;
				case "NotificationTypeCollectionViaEventCustomerTestNotPerformedNotification":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerTestNotPerformedNotificationEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "EventCustomerTestNotPerformedNotification_", JoinHint.None);
					toReturn.Add(EventCustomerTestNotPerformedNotificationEntity.Relations.NotificationTypeEntityUsingNotificationTypeId, "EventCustomerTestNotPerformedNotification_", string.Empty, JoinHint.None);
					break;
				case "NotificationTypeCollectionViaEmailTemplate":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EmailTemplateEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "EmailTemplate_", JoinHint.None);
					toReturn.Add(EmailTemplateEntity.Relations.NotificationTypeEntityUsingNotificationTypeId, "EmailTemplate_", string.Empty, JoinHint.None);
					break;
				case "NotificationTypeCollectionViaNotification":
					toReturn.Add(OrganizationRoleUserEntity.Relations.NotificationEntityUsingRequestedByOrgRoleUserId, "OrganizationRoleUserEntity__", "Notification_", JoinHint.None);
					toReturn.Add(NotificationEntity.Relations.NotificationTypeEntityUsingNotificationTypeId, "Notification_", string.Empty, JoinHint.None);
					break;
				case "OrderCollectionViaRefundRequest_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.RefundRequestEntityUsingProcessedByOrgRoleUserId, "OrganizationRoleUserEntity__", "RefundRequest_", JoinHint.None);
					toReturn.Add(RefundRequestEntity.Relations.OrderEntityUsingOrderId, "RefundRequest_", string.Empty, JoinHint.None);
					break;
				case "OrderCollectionViaRefundRequest":
					toReturn.Add(OrganizationRoleUserEntity.Relations.RefundRequestEntityUsingRequestedByOrgRoleUserId, "OrganizationRoleUserEntity__", "RefundRequest_", JoinHint.None);
					toReturn.Add(RefundRequestEntity.Relations.OrderEntityUsingOrderId, "RefundRequest_", string.Empty, JoinHint.None);
					break;
				case "OrganizationCollectionViaAccountTestHcpcsCode_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AccountTestHcpcsCodeEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "AccountTestHcpcsCode_", JoinHint.None);
					toReturn.Add(AccountTestHcpcsCodeEntity.Relations.OrganizationEntityUsingAccountId, "AccountTestHcpcsCode_", string.Empty, JoinHint.None);
					break;
				case "OrganizationCollectionViaAccountTestHcpcsCode":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AccountTestHcpcsCodeEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "AccountTestHcpcsCode_", JoinHint.None);
					toReturn.Add(AccountTestHcpcsCodeEntity.Relations.OrganizationEntityUsingAccountId, "AccountTestHcpcsCode_", string.Empty, JoinHint.None);
					break;
				case "OrganizationCollectionViaAccountCallCenterOrganization":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AccountCallCenterOrganizationEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "AccountCallCenterOrganization_", JoinHint.None);
					toReturn.Add(AccountCallCenterOrganizationEntity.Relations.OrganizationEntityUsingOrganizationId, "AccountCallCenterOrganization_", string.Empty, JoinHint.None);
					break;
				case "OrganizationCollectionViaAccountCallCenterOrganization_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AccountCallCenterOrganizationEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "AccountCallCenterOrganization_", JoinHint.None);
					toReturn.Add(AccountCallCenterOrganizationEntity.Relations.OrganizationEntityUsingOrganizationId, "AccountCallCenterOrganization_", string.Empty, JoinHint.None);
					break;
				case "OrganizationCollectionViaEventAccountTestHcpcsCode_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventAccountTestHcpcsCodeEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "EventAccountTestHcpcsCode_", JoinHint.None);
					toReturn.Add(EventAccountTestHcpcsCodeEntity.Relations.OrganizationEntityUsingAccountId, "EventAccountTestHcpcsCode_", string.Empty, JoinHint.None);
					break;
				case "OrganizationCollectionViaEventAccountTestHcpcsCode":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventAccountTestHcpcsCodeEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "EventAccountTestHcpcsCode_", JoinHint.None);
					toReturn.Add(EventAccountTestHcpcsCodeEntity.Relations.OrganizationEntityUsingAccountId, "EventAccountTestHcpcsCode_", string.Empty, JoinHint.None);
					break;
				case "OrganizationCollectionViaMarketingPrintOrder":
					toReturn.Add(OrganizationRoleUserEntity.Relations.MarketingPrintOrderEntityUsingOrgRoleUserId, "OrganizationRoleUserEntity__", "MarketingPrintOrder_", JoinHint.None);
					toReturn.Add(MarketingPrintOrderEntity.Relations.OrganizationEntityUsingFranchiseeOrganizationId, "MarketingPrintOrder_", string.Empty, JoinHint.None);
					break;
				case "OrganizationCollectionViaMarketingPrintOrder_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.MarketingPrintOrderEntityUsingOrgRoleUserId, "OrganizationRoleUserEntity__", "MarketingPrintOrder_", JoinHint.None);
					toReturn.Add(MarketingPrintOrderEntity.Relations.OrganizationEntityUsingPrintVendorOrganizationId, "MarketingPrintOrder_", string.Empty, JoinHint.None);
					break;
				case "OrganizationCollectionViaAffiliateProfile":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AffiliateProfileEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "AffiliateProfile_", JoinHint.None);
					toReturn.Add(AffiliateProfileEntity.Relations.OrganizationEntityUsingOwnerOrganizationId, "AffiliateProfile_", string.Empty, JoinHint.None);
					break;
				case "PackageCollectionViaPreApprovedPackage":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PreApprovedPackageEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "PreApprovedPackage_", JoinHint.None);
					toReturn.Add(PreApprovedPackageEntity.Relations.PackageEntityUsingPackageId, "PreApprovedPackage_", string.Empty, JoinHint.None);
					break;
				case "PhysicianMasterCollectionViaCustomerPrimaryCarePhysician":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingUpdatedByOrganizationRoleUserId, "OrganizationRoleUserEntity__", "CustomerPrimaryCarePhysician_", JoinHint.None);
					toReturn.Add(CustomerPrimaryCarePhysicianEntity.Relations.PhysicianMasterEntityUsingPhysicianMasterId, "CustomerPrimaryCarePhysician_", string.Empty, JoinHint.None);
					break;
				case "PhysicianMasterCollectionViaCustomerPrimaryCarePhysician_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerPrimaryCarePhysician_", JoinHint.None);
					toReturn.Add(CustomerPrimaryCarePhysicianEntity.Relations.PhysicianMasterEntityUsingPhysicianMasterId, "CustomerPrimaryCarePhysician_", string.Empty, JoinHint.None);
					break;
				case "PhysicianMasterCollectionViaCustomerPrimaryCarePhysician__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingPcpAddressVerifiedBy, "OrganizationRoleUserEntity__", "CustomerPrimaryCarePhysician_", JoinHint.None);
					toReturn.Add(CustomerPrimaryCarePhysicianEntity.Relations.PhysicianMasterEntityUsingPhysicianMasterId, "CustomerPrimaryCarePhysician_", string.Empty, JoinHint.None);
					break;
				case "PodDetailsCollectionViaSalesRepPodAssigments":
					toReturn.Add(OrganizationRoleUserEntity.Relations.SalesRepPodAssigmentsEntityUsingOrganizationRoleUserId, "OrganizationRoleUserEntity__", "SalesRepPodAssigments_", JoinHint.None);
					toReturn.Add(SalesRepPodAssigmentsEntity.Relations.PodDetailsEntityUsingPodId, "SalesRepPodAssigments_", string.Empty, JoinHint.None);
					break;
				case "PodDetailsCollectionViaEventStaffAssignment":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventStaffAssignmentEntityUsingScheduledStaffOrgRoleUserId, "OrganizationRoleUserEntity__", "EventStaffAssignment_", JoinHint.None);
					toReturn.Add(EventStaffAssignmentEntity.Relations.PodDetailsEntityUsingPodId, "EventStaffAssignment_", string.Empty, JoinHint.None);
					break;
				case "PodDetailsCollectionViaEventNote_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventNoteEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "EventNote_", JoinHint.None);
					toReturn.Add(EventNoteEntity.Relations.PodDetailsEntityUsingPodId, "EventNote_", string.Empty, JoinHint.None);
					break;
				case "PodDetailsCollectionViaEventNote":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventNoteEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "EventNote_", JoinHint.None);
					toReturn.Add(EventNoteEntity.Relations.PodDetailsEntityUsingPodId, "EventNote_", string.Empty, JoinHint.None);
					break;
				case "PodDetailsCollectionViaPodDefaultTeam":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PodDefaultTeamEntityUsingOrgnizationRoleUserId, "OrganizationRoleUserEntity__", "PodDefaultTeam_", JoinHint.None);
					toReturn.Add(PodDefaultTeamEntity.Relations.PodDetailsEntityUsingPodId, "PodDefaultTeam_", string.Empty, JoinHint.None);
					break;
				case "PodDetailsCollectionViaEventStaffAssignment_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventStaffAssignmentEntityUsingActualStaffOrgRoleUserId, "OrganizationRoleUserEntity__", "EventStaffAssignment_", JoinHint.None);
					toReturn.Add(EventStaffAssignmentEntity.Relations.PodDetailsEntityUsingPodId, "EventStaffAssignment_", string.Empty, JoinHint.None);
					break;
				case "PodDetailsCollectionViaEventStaffAssignment__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventStaffAssignmentEntityUsingScheduledByOrgRoleUserId, "OrganizationRoleUserEntity__", "EventStaffAssignment_", JoinHint.None);
					toReturn.Add(EventStaffAssignmentEntity.Relations.PodDetailsEntityUsingPodId, "EventStaffAssignment_", string.Empty, JoinHint.None);
					break;
				case "PreQualificationQuestionCollectionViaEventCustomerQuestionAnswer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerQuestionAnswerEntityUsingUpdatedBy, "OrganizationRoleUserEntity__", "EventCustomerQuestionAnswer_", JoinHint.None);
					toReturn.Add(EventCustomerQuestionAnswerEntity.Relations.PreQualificationQuestionEntityUsingQuestionId, "EventCustomerQuestionAnswer_", string.Empty, JoinHint.None);
					break;
				case "PreQualificationQuestionCollectionViaDisqualifiedTest":
					toReturn.Add(OrganizationRoleUserEntity.Relations.DisqualifiedTestEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "DisqualifiedTest_", JoinHint.None);
					toReturn.Add(DisqualifiedTestEntity.Relations.PreQualificationQuestionEntityUsingQuestionId, "DisqualifiedTest_", string.Empty, JoinHint.None);
					break;
				case "PreQualificationQuestionCollectionViaDisqualifiedTest_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.DisqualifiedTestEntityUsingUpdatedBy, "OrganizationRoleUserEntity__", "DisqualifiedTest_", JoinHint.None);
					toReturn.Add(DisqualifiedTestEntity.Relations.PreQualificationQuestionEntityUsingQuestionId, "DisqualifiedTest_", string.Empty, JoinHint.None);
					break;
				case "PreQualificationQuestionCollectionViaEventCustomerQuestionAnswer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerQuestionAnswerEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "EventCustomerQuestionAnswer_", JoinHint.None);
					toReturn.Add(EventCustomerQuestionAnswerEntity.Relations.PreQualificationQuestionEntityUsingQuestionId, "EventCustomerQuestionAnswer_", string.Empty, JoinHint.None);
					break;
				case "ProspectCustomerCollectionViaCallQueueCustomer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.ProspectCustomerEntityUsingProspectCustomerId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "ProspectCustomerCollectionViaCallQueueCustomer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingAssignedToOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.ProspectCustomerEntityUsingProspectCustomerId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "ProspectCustomerCollectionViaCallQueueCustomer__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueueCustomer_", JoinHint.None);
					toReturn.Add(CallQueueCustomerEntity.Relations.ProspectCustomerEntityUsingProspectCustomerId, "CallQueueCustomer_", string.Empty, JoinHint.None);
					break;
				case "ProspectListDetailsCollectionViaProspects":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ProspectsEntityUsingOrgRoleUserId, "OrganizationRoleUserEntity__", "Prospects_", JoinHint.None);
					toReturn.Add(ProspectsEntity.Relations.ProspectListDetailsEntityUsingProspectListId, "Prospects_", string.Empty, JoinHint.None);
					break;
				case "ProspectsCollectionViaHostFacilityRanking":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HostFacilityRankingEntityUsingRankedByOrganizationRoleUserId, "OrganizationRoleUserEntity__", "HostFacilityRanking_", JoinHint.None);
					toReturn.Add(HostFacilityRankingEntity.Relations.ProspectsEntityUsingHostId, "HostFacilityRanking_", string.Empty, JoinHint.None);
					break;
				case "ProspectsCollectionViaHostPayment":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HostPaymentEntityUsingCreatorOrganizationRoleUserId, "OrganizationRoleUserEntity__", "HostPayment_", JoinHint.None);
					toReturn.Add(HostPaymentEntity.Relations.ProspectsEntityUsingHostId, "HostPayment_", string.Empty, JoinHint.None);
					break;
				case "ProspectTypeCollectionViaProspects":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ProspectsEntityUsingOrgRoleUserId, "OrganizationRoleUserEntity__", "Prospects_", JoinHint.None);
					toReturn.Add(ProspectsEntity.Relations.ProspectTypeEntityUsingProspectTypeId, "Prospects_", string.Empty, JoinHint.None);
					break;
				case "RefundRequestCollectionViaEventAppointmentCancellationLog":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventAppointmentCancellationLogEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "EventAppointmentCancellationLog_", JoinHint.None);
					toReturn.Add(EventAppointmentCancellationLogEntity.Relations.RefundRequestEntityUsingRefundRequestId, "EventAppointmentCancellationLog_", string.Empty, JoinHint.None);
					break;
				case "RelationshipCollectionViaGuardianDetails_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.GuardianDetailsEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "GuardianDetails_", JoinHint.None);
					toReturn.Add(GuardianDetailsEntity.Relations.RelationshipEntityUsingRelationshipId, "GuardianDetails_", string.Empty, JoinHint.None);
					break;
				case "RelationshipCollectionViaGuardianDetails":
					toReturn.Add(OrganizationRoleUserEntity.Relations.GuardianDetailsEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "GuardianDetails_", JoinHint.None);
					toReturn.Add(GuardianDetailsEntity.Relations.RelationshipEntityUsingRelationshipId, "GuardianDetails_", string.Empty, JoinHint.None);
					break;
				case "RescheduleCancelDispositionCollectionViaEventAppointmentChangeLog":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventAppointmentChangeLogEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "EventAppointmentChangeLog_", JoinHint.None);
					toReturn.Add(EventAppointmentChangeLogEntity.Relations.RescheduleCancelDispositionEntityUsingSubReasonId, "EventAppointmentChangeLog_", string.Empty, JoinHint.None);
					break;
				case "RescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventAppointmentCancellationLogEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "EventAppointmentCancellationLog_", JoinHint.None);
					toReturn.Add(EventAppointmentCancellationLogEntity.Relations.RescheduleCancelDispositionEntityUsingSubReasonId, "EventAppointmentCancellationLog_", string.Empty, JoinHint.None);
					break;
				case "RoleCollectionViaUser":
					toReturn.Add(OrganizationRoleUserEntity.Relations.UserEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "User_", JoinHint.None);
					toReturn.Add(UserEntity.Relations.RoleEntityUsingDefaultRoleId, "User_", string.Empty, JoinHint.None);
					break;
				case "RoleCollectionViaHostFacilityRanking":
					toReturn.Add(OrganizationRoleUserEntity.Relations.HostFacilityRankingEntityUsingRankedByOrganizationRoleUserId, "OrganizationRoleUserEntity__", "HostFacilityRanking_", JoinHint.None);
					toReturn.Add(HostFacilityRankingEntity.Relations.RoleEntityUsingRankedByRole, "HostFacilityRanking_", string.Empty, JoinHint.None);
					break;
				case "RoleCollectionViaUser_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.UserEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "User_", JoinHint.None);
					toReturn.Add(UserEntity.Relations.RoleEntityUsingDefaultRoleId, "User_", string.Empty, JoinHint.None);
					break;
				case "ScheduleMethodCollectionViaEvents___":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingSignOffOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.ScheduleMethodEntityUsingScheduleMethodId, "Events_", string.Empty, JoinHint.None);
					break;
				case "ScheduleMethodCollectionViaEvents____":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingUpdatedByAdmin, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.ScheduleMethodEntityUsingScheduleMethodId, "Events_", string.Empty, JoinHint.None);
					break;
				case "ScheduleMethodCollectionViaEvents":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingAssignedToOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.ScheduleMethodEntityUsingScheduleMethodId, "Events_", string.Empty, JoinHint.None);
					break;
				case "ScheduleMethodCollectionViaEvents_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.ScheduleMethodEntityUsingScheduleMethodId, "Events_", string.Empty, JoinHint.None);
					break;
				case "ScheduleMethodCollectionViaEvents__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventsEntityUsingEventActivityOrgRoleUserId, "OrganizationRoleUserEntity__", "Events_", JoinHint.None);
					toReturn.Add(EventsEntity.Relations.ScheduleMethodEntityUsingScheduleMethodId, "Events_", string.Empty, JoinHint.None);
					break;
				case "ScriptsCollectionViaCallQueue":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueue_", JoinHint.None);
					toReturn.Add(CallQueueEntity.Relations.ScriptsEntityUsingScriptId, "CallQueue_", string.Empty, JoinHint.None);
					break;
				case "ScriptsCollectionViaCallQueue_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallQueueEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CallQueue_", JoinHint.None);
					toReturn.Add(CallQueueEntity.Relations.ScriptsEntityUsingScriptId, "CallQueue_", string.Empty, JoinHint.None);
					break;
				case "ShippingOptionCollectionViaShippingDetail_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ShippingDetailEntityUsingShippedByOrgRoleUserId, "OrganizationRoleUserEntity__", "ShippingDetail_", JoinHint.None);
					toReturn.Add(ShippingDetailEntity.Relations.ShippingOptionEntityUsingShippingOptionId, "ShippingDetail_", string.Empty, JoinHint.None);
					break;
				case "ShippingOptionCollectionViaShippingDetail":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ShippingDetailEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "ShippingDetail_", JoinHint.None);
					toReturn.Add(ShippingDetailEntity.Relations.ShippingOptionEntityUsingShippingOptionId, "ShippingDetail_", string.Empty, JoinHint.None);
					break;
				case "StaffEventRoleCollectionViaEventStaffAssignment__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventStaffAssignmentEntityUsingScheduledByOrgRoleUserId, "OrganizationRoleUserEntity__", "EventStaffAssignment_", JoinHint.None);
					toReturn.Add(EventStaffAssignmentEntity.Relations.StaffEventRoleEntityUsingStaffEventRoleId, "EventStaffAssignment_", string.Empty, JoinHint.None);
					break;
				case "StaffEventRoleCollectionViaPodDefaultTeam":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PodDefaultTeamEntityUsingOrgnizationRoleUserId, "OrganizationRoleUserEntity__", "PodDefaultTeam_", JoinHint.None);
					toReturn.Add(PodDefaultTeamEntity.Relations.StaffEventRoleEntityUsingEventRoleId, "PodDefaultTeam_", string.Empty, JoinHint.None);
					break;
				case "StaffEventRoleCollectionViaEventStaffAssignment":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventStaffAssignmentEntityUsingScheduledStaffOrgRoleUserId, "OrganizationRoleUserEntity__", "EventStaffAssignment_", JoinHint.None);
					toReturn.Add(EventStaffAssignmentEntity.Relations.StaffEventRoleEntityUsingStaffEventRoleId, "EventStaffAssignment_", string.Empty, JoinHint.None);
					break;
				case "StaffEventRoleCollectionViaEventStaffAssignment_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventStaffAssignmentEntityUsingActualStaffOrgRoleUserId, "OrganizationRoleUserEntity__", "EventStaffAssignment_", JoinHint.None);
					toReturn.Add(EventStaffAssignmentEntity.Relations.StaffEventRoleEntityUsingStaffEventRoleId, "EventStaffAssignment_", string.Empty, JoinHint.None);
					break;
				case "StandardFindingTestReadingCollectionViaCustomerEventReading":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerEventReadingEntityUsingUpdatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerEventReading_", JoinHint.None);
					toReturn.Add(CustomerEventReadingEntity.Relations.StandardFindingTestReadingEntityUsingStandardFindingTestReadingId, "CustomerEventReading_", string.Empty, JoinHint.None);
					break;
				case "StateCollectionViaAddress":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AddressEntityUsingVerificationOrgRoleUserId, "OrganizationRoleUserEntity__", "Address_", JoinHint.None);
					toReturn.Add(AddressEntity.Relations.StateEntityUsingStateId, "Address_", string.Empty, JoinHint.None);
					break;
				case "SurveyQuestionCollectionViaSurveyAnswer_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.SurveyAnswerEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "SurveyAnswer_", JoinHint.None);
					toReturn.Add(SurveyAnswerEntity.Relations.SurveyQuestionEntityUsingQuestionId, "SurveyAnswer_", string.Empty, JoinHint.None);
					break;
				case "SurveyQuestionCollectionViaSurveyAnswer":
					toReturn.Add(OrganizationRoleUserEntity.Relations.SurveyAnswerEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "SurveyAnswer_", JoinHint.None);
					toReturn.Add(SurveyAnswerEntity.Relations.SurveyQuestionEntityUsingQuestionId, "SurveyAnswer_", string.Empty, JoinHint.None);
					break;
				case "TagCollectionViaPreAssessmentCustomerCallQueueCallAttempt":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PreAssessmentCustomerCallQueueCallAttemptEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "PreAssessmentCustomerCallQueueCallAttempt_", JoinHint.None);
					toReturn.Add(PreAssessmentCustomerCallQueueCallAttemptEntity.Relations.TagEntityUsingNotInterestedReasonId, "PreAssessmentCustomerCallQueueCallAttempt_", string.Empty, JoinHint.None);
					break;
				case "TagCollectionViaCustomerCallQueueCallAttempt":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerCallQueueCallAttemptEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "CustomerCallQueueCallAttempt_", JoinHint.None);
					toReturn.Add(CustomerCallQueueCallAttemptEntity.Relations.TagEntityUsingNotInterestedReasonId, "CustomerCallQueueCallAttempt_", string.Empty, JoinHint.None);
					break;
				case "TaskPriorityTypesCollectionViaTaskDetails__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TaskDetailsEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "TaskDetails_", JoinHint.None);
					toReturn.Add(TaskDetailsEntity.Relations.TaskPriorityTypesEntityUsingTaskPriorityId, "TaskDetails_", string.Empty, JoinHint.None);
					break;
				case "TaskPriorityTypesCollectionViaTaskDetails_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TaskDetailsEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "TaskDetails_", JoinHint.None);
					toReturn.Add(TaskDetailsEntity.Relations.TaskPriorityTypesEntityUsingTaskPriorityId, "TaskDetails_", string.Empty, JoinHint.None);
					break;
				case "TaskPriorityTypesCollectionViaTaskDetails":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TaskDetailsEntityUsingAssignedToOrgRoleUserId, "OrganizationRoleUserEntity__", "TaskDetails_", JoinHint.None);
					toReturn.Add(TaskDetailsEntity.Relations.TaskPriorityTypesEntityUsingTaskPriorityId, "TaskDetails_", string.Empty, JoinHint.None);
					break;
				case "TaskStatusTypesCollectionViaTaskDetails_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TaskDetailsEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "TaskDetails_", JoinHint.None);
					toReturn.Add(TaskDetailsEntity.Relations.TaskStatusTypesEntityUsingTaskStatusId, "TaskDetails_", string.Empty, JoinHint.None);
					break;
				case "TaskStatusTypesCollectionViaTaskDetails__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TaskDetailsEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "TaskDetails_", JoinHint.None);
					toReturn.Add(TaskDetailsEntity.Relations.TaskStatusTypesEntityUsingTaskStatusId, "TaskDetails_", string.Empty, JoinHint.None);
					break;
				case "TaskStatusTypesCollectionViaTaskDetails":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TaskDetailsEntityUsingAssignedToOrgRoleUserId, "OrganizationRoleUserEntity__", "TaskDetails_", JoinHint.None);
					toReturn.Add(TaskDetailsEntity.Relations.TaskStatusTypesEntityUsingTaskStatusId, "TaskDetails_", string.Empty, JoinHint.None);
					break;
				case "TechnicianProfileCollectionViaPinChangelog":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PinChangelogEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "PinChangelog_", JoinHint.None);
					toReturn.Add(PinChangelogEntity.Relations.TechnicianProfileEntityUsingTechnicianId, "PinChangelog_", string.Empty, JoinHint.None);
					break;
				case "TerritoryCollectionViaTerritory":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TerritoryEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "Territory_", JoinHint.None);
					toReturn.Add(TerritoryEntity.Relations.TerritoryEntityUsingParentTerritoryId, "Territory_", string.Empty, JoinHint.None);
					break;
				case "TerritoryCollectionViaOrganizationRoleUserTerritory":
					toReturn.Add(OrganizationRoleUserEntity.Relations.OrganizationRoleUserTerritoryEntityUsingOrganizationRoleUserId, "OrganizationRoleUserEntity__", "OrganizationRoleUserTerritory_", JoinHint.None);
					toReturn.Add(OrganizationRoleUserTerritoryEntity.Relations.TerritoryEntityUsingTerritoryId, "OrganizationRoleUserTerritory_", string.Empty, JoinHint.None);
					break;
				case "TestCollectionViaEventCustomerTestNotPerformedNotification":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerTestNotPerformedNotificationEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "EventCustomerTestNotPerformedNotification_", JoinHint.None);
					toReturn.Add(EventCustomerTestNotPerformedNotificationEntity.Relations.TestEntityUsingTestId, "EventCustomerTestNotPerformedNotification_", string.Empty, JoinHint.None);
					break;
				case "TestCollectionViaEventPhysicianTest":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventPhysicianTestEntityUsingAssignedByOrgRoleUserId, "OrganizationRoleUserEntity__", "EventPhysicianTest_", JoinHint.None);
					toReturn.Add(EventPhysicianTestEntity.Relations.TestEntityUsingTestId, "EventPhysicianTest_", string.Empty, JoinHint.None);
					break;
				case "TestCollectionViaDisqualifiedTest_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.DisqualifiedTestEntityUsingUpdatedBy, "OrganizationRoleUserEntity__", "DisqualifiedTest_", JoinHint.None);
					toReturn.Add(DisqualifiedTestEntity.Relations.TestEntityUsingTestId, "DisqualifiedTest_", string.Empty, JoinHint.None);
					break;
				case "TestCollectionViaEventCustomerRetest":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventCustomerRetestEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "EventCustomerRetest_", JoinHint.None);
					toReturn.Add(EventCustomerRetestEntity.Relations.TestEntityUsingTestId, "EventCustomerRetest_", string.Empty, JoinHint.None);
					break;
				case "TestCollectionViaEventPhysicianTest_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventPhysicianTestEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "EventPhysicianTest_", JoinHint.None);
					toReturn.Add(EventPhysicianTestEntity.Relations.TestEntityUsingTestId, "EventPhysicianTest_", string.Empty, JoinHint.None);
					break;
				case "TestCollectionViaKynLabValues_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.KynLabValuesEntityUsingModifiedByOrgRoleUserId, "OrganizationRoleUserEntity__", "KynLabValues_", JoinHint.None);
					toReturn.Add(KynLabValuesEntity.Relations.TestEntityUsingTestId, "KynLabValues_", string.Empty, JoinHint.None);
					break;
				case "TestCollectionViaEventPhysicianTest__":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventPhysicianTestEntityUsingPhysicianId, "OrganizationRoleUserEntity__", "EventPhysicianTest_", JoinHint.None);
					toReturn.Add(EventPhysicianTestEntity.Relations.TestEntityUsingTestId, "EventPhysicianTest_", string.Empty, JoinHint.None);
					break;
				case "TestCollectionViaTestHcpcsCode_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TestHcpcsCodeEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "TestHcpcsCode_", JoinHint.None);
					toReturn.Add(TestHcpcsCodeEntity.Relations.TestEntityUsingTestId, "TestHcpcsCode_", string.Empty, JoinHint.None);
					break;
				case "TestCollectionViaTestHcpcsCode":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TestHcpcsCodeEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "TestHcpcsCode_", JoinHint.None);
					toReturn.Add(TestHcpcsCodeEntity.Relations.TestEntityUsingTestId, "TestHcpcsCode_", string.Empty, JoinHint.None);
					break;
				case "TestCollectionViaKynLabValues":
					toReturn.Add(OrganizationRoleUserEntity.Relations.KynLabValuesEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "KynLabValues_", JoinHint.None);
					toReturn.Add(KynLabValuesEntity.Relations.TestEntityUsingTestId, "KynLabValues_", string.Empty, JoinHint.None);
					break;
				case "TestCollectionViaPreApprovedTest":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PreApprovedTestEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "PreApprovedTest_", JoinHint.None);
					toReturn.Add(PreApprovedTestEntity.Relations.TestEntityUsingTestId, "PreApprovedTest_", string.Empty, JoinHint.None);
					break;
				case "TestCollectionViaClinicalTestQualificationCriteria":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ClinicalTestQualificationCriteriaEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "ClinicalTestQualificationCriteria_", JoinHint.None);
					toReturn.Add(ClinicalTestQualificationCriteriaEntity.Relations.TestEntityUsingTestId, "ClinicalTestQualificationCriteria_", string.Empty, JoinHint.None);
					break;
				case "TestCollectionViaRequiredTest":
					toReturn.Add(OrganizationRoleUserEntity.Relations.RequiredTestEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "RequiredTest_", JoinHint.None);
					toReturn.Add(RequiredTestEntity.Relations.TestEntityUsingTestId, "RequiredTest_", string.Empty, JoinHint.None);
					break;
				case "TestCollectionViaClinicalTestQualificationCriteria_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.ClinicalTestQualificationCriteriaEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "ClinicalTestQualificationCriteria_", JoinHint.None);
					toReturn.Add(ClinicalTestQualificationCriteriaEntity.Relations.TestEntityUsingTestId, "ClinicalTestQualificationCriteria_", string.Empty, JoinHint.None);
					break;
				case "TestCollectionViaDisqualifiedTest":
					toReturn.Add(OrganizationRoleUserEntity.Relations.DisqualifiedTestEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "DisqualifiedTest_", JoinHint.None);
					toReturn.Add(DisqualifiedTestEntity.Relations.TestEntityUsingTestId, "DisqualifiedTest_", string.Empty, JoinHint.None);
					break;
				case "TestCollectionViaPreQualificationTestTemplate":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PreQualificationTestTemplateEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "PreQualificationTestTemplate_", JoinHint.None);
					toReturn.Add(PreQualificationTestTemplateEntity.Relations.TestEntityUsingTestId, "PreQualificationTestTemplate_", string.Empty, JoinHint.None);
					break;
				case "TestCollectionViaPreQualificationTestTemplate_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PreQualificationTestTemplateEntityUsingUpdatedBy, "OrganizationRoleUserEntity__", "PreQualificationTestTemplate_", JoinHint.None);
					toReturn.Add(PreQualificationTestTemplateEntity.Relations.TestEntityUsingTestId, "PreQualificationTestTemplate_", string.Empty, JoinHint.None);
					break;
				case "TestCollectionViaPreQualificationQuestion":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PreQualificationQuestionEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "PreQualificationQuestion_", JoinHint.None);
					toReturn.Add(PreQualificationQuestionEntity.Relations.TestEntityUsingTestId, "PreQualificationQuestion_", string.Empty, JoinHint.None);
					break;
				case "TestHcpcsCodeCollectionViaEventAccountTestHcpcsCode_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventAccountTestHcpcsCodeEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "EventAccountTestHcpcsCode_", JoinHint.None);
					toReturn.Add(EventAccountTestHcpcsCodeEntity.Relations.TestHcpcsCodeEntityUsingTestHcpcsCodeId, "EventAccountTestHcpcsCode_", string.Empty, JoinHint.None);
					break;
				case "TestHcpcsCodeCollectionViaEventAccountTestHcpcsCode":
					toReturn.Add(OrganizationRoleUserEntity.Relations.EventAccountTestHcpcsCodeEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "EventAccountTestHcpcsCode_", JoinHint.None);
					toReturn.Add(EventAccountTestHcpcsCodeEntity.Relations.TestHcpcsCodeEntityUsingTestHcpcsCodeId, "EventAccountTestHcpcsCode_", string.Empty, JoinHint.None);
					break;
				case "TestHcpcsCodeCollectionViaAccountTestHcpcsCode_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AccountTestHcpcsCodeEntityUsingModifiedBy, "OrganizationRoleUserEntity__", "AccountTestHcpcsCode_", JoinHint.None);
					toReturn.Add(AccountTestHcpcsCodeEntity.Relations.TestHcpcsCodeEntityUsingTestHcpcsCodeId, "AccountTestHcpcsCode_", string.Empty, JoinHint.None);
					break;
				case "TestHcpcsCodeCollectionViaAccountTestHcpcsCode":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AccountTestHcpcsCodeEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "AccountTestHcpcsCode_", JoinHint.None);
					toReturn.Add(AccountTestHcpcsCodeEntity.Relations.TestHcpcsCodeEntityUsingTestHcpcsCodeId, "AccountTestHcpcsCode_", string.Empty, JoinHint.None);
					break;
				case "TestNotPerformedReasonCollectionViaTestNotPerformed_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TestNotPerformedEntityUsingUpdatedBy, "OrganizationRoleUserEntity__", "TestNotPerformed_", JoinHint.None);
					toReturn.Add(TestNotPerformedEntity.Relations.TestNotPerformedReasonEntityUsingTestNotPerformedReasonId, "TestNotPerformed_", string.Empty, JoinHint.None);
					break;
				case "TestNotPerformedReasonCollectionViaTestNotPerformed":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TestNotPerformedEntityUsingCreatedBy, "OrganizationRoleUserEntity__", "TestNotPerformed_", JoinHint.None);
					toReturn.Add(TestNotPerformedEntity.Relations.TestNotPerformedReasonEntityUsingTestNotPerformedReasonId, "TestNotPerformed_", string.Empty, JoinHint.None);
					break;
				case "TestReadingCollectionViaCustomerEventReading":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerEventReadingEntityUsingUpdatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerEventReading_", JoinHint.None);
					toReturn.Add(CustomerEventReadingEntity.Relations.TestReadingEntityUsingTestReadingId, "CustomerEventReading_", string.Empty, JoinHint.None);
					break;
				case "TestUnableScreenReasonCollectionViaCustomerEventUnableScreenReason":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerEventUnableScreenReasonEntityUsingUpdatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "CustomerEventUnableScreenReason_", JoinHint.None);
					toReturn.Add(CustomerEventUnableScreenReasonEntity.Relations.TestUnableScreenReasonEntityUsingTestUnableScreenReasonId, "CustomerEventUnableScreenReason_", string.Empty, JoinHint.None);
					break;
				case "UserLoginCollectionViaPasswordChangelog":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PasswordChangelogEntityUsingCreatedByOrgRoleUserId, "OrganizationRoleUserEntity__", "PasswordChangelog_", JoinHint.None);
					toReturn.Add(PasswordChangelogEntity.Relations.UserLoginEntityUsingUserLoginId, "PasswordChangelog_", string.Empty, JoinHint.None);
					break;
				case "ZipCollectionViaAddress":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AddressEntityUsingVerificationOrgRoleUserId, "OrganizationRoleUserEntity__", "Address_", JoinHint.None);
					toReturn.Add(AddressEntity.Relations.ZipEntityUsingZipId, "Address_", string.Empty, JoinHint.None);
					break;
				case "AccountCoordinatorProfile":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AccountCoordinatorProfileEntityUsingOrganizationRoleUserId);
					break;
				case "AffiliateProfile_":
					toReturn.Add(OrganizationRoleUserEntity.Relations.AffiliateProfileEntityUsingAffiliateId);
					break;
				case "CallCenterRepProfile":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CallCenterRepProfileEntityUsingCallCenterRepId);
					break;
				case "CustomerProfile":
					toReturn.Add(OrganizationRoleUserEntity.Relations.CustomerProfileEntityUsingCustomerId);
					break;
				case "PhysicianProfile":
					toReturn.Add(OrganizationRoleUserEntity.Relations.PhysicianProfileEntityUsingPhysicianId);
					break;
				case "TechnicianProfile":
					toReturn.Add(OrganizationRoleUserEntity.Relations.TechnicianProfileEntityUsingOrganizationRoleUserId);
					break;
				default:

					break;				
			}
			return toReturn;
		}
#if !CF
		/// <summary>Checks if the relation mapped by the property with the name specified is a one way / single sided relation. If the passed in name is null, it
		/// will return true if the entity has any single-sided relation</summary>
		/// <param name="propertyName">Name of the property which is mapped onto the relation to check, or null to check if the entity has any relation/ which is single sided</param>
		/// <returns>true if the relation is single sided / one way (so the opposite relation isn't present), false otherwise</returns>
		[EditorBrowsable(EditorBrowsableState.Never)]
		protected override bool CheckOneWayRelations(string propertyName)
		{
			// use template trick to calculate the # of single-sided / oneway relations
			int numberOfOneWayRelations = 0;
			switch(propertyName)
			{
				case null:
					return ((numberOfOneWayRelations > 0) || base.CheckOneWayRelations(null));









				default:
					return base.CheckOneWayRelations(propertyName);
			}
		}
#endif
		/// <summary> Sets the internal parameter related to the fieldname passed to the instance relatedEntity. </summary>
		/// <param name="relatedEntity">Instance to set as the related entity of type entityType</param>
		/// <param name="fieldName">Name of field mapped onto the relation which resolves in the instance relatedEntity</param>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public override void SetRelatedEntity(IEntity2 relatedEntity, string fieldName)
		{
			switch(fieldName)
			{
				case "Organization":
					SetupSyncOrganization(relatedEntity);
					break;
				case "Role":
					SetupSyncRole(relatedEntity);
					break;
				case "User":
					SetupSyncUser(relatedEntity);
					break;
				case "AccountCallCenterOrganization_":
					this.AccountCallCenterOrganization_.Add((AccountCallCenterOrganizationEntity)relatedEntity);
					break;
				case "AccountCallCenterOrganization":
					this.AccountCallCenterOrganization.Add((AccountCallCenterOrganizationEntity)relatedEntity);
					break;
				case "AccountHraChatQuestionnaire_":
					this.AccountHraChatQuestionnaire_.Add((AccountHraChatQuestionnaireEntity)relatedEntity);
					break;
				case "AccountHraChatQuestionnaire":
					this.AccountHraChatQuestionnaire.Add((AccountHraChatQuestionnaireEntity)relatedEntity);
					break;
				case "AccountTestHcpcsCode_":
					this.AccountTestHcpcsCode_.Add((AccountTestHcpcsCodeEntity)relatedEntity);
					break;
				case "AccountTestHcpcsCode":
					this.AccountTestHcpcsCode.Add((AccountTestHcpcsCodeEntity)relatedEntity);
					break;
				case "ActivityType":
					this.ActivityType.Add((ActivityTypeEntity)relatedEntity);
					break;
				case "AdditionalFields_":
					this.AdditionalFields_.Add((AdditionalFieldsEntity)relatedEntity);
					break;
				case "AdditionalFields":
					this.AdditionalFields.Add((AdditionalFieldsEntity)relatedEntity);
					break;
				case "Address":
					this.Address.Add((AddressEntity)relatedEntity);
					break;
				case "AdvocateManagerTeam_":
					this.AdvocateManagerTeam_.Add((AdvocateManagerTeamEntity)relatedEntity);
					break;
				case "AdvocateManagerTeam":
					this.AdvocateManagerTeam.Add((AdvocateManagerTeamEntity)relatedEntity);
					break;
				case "Afcampaign_":
					this.Afcampaign_.Add((AfcampaignEntity)relatedEntity);
					break;
				case "Afcampaign":
					this.Afcampaign.Add((AfcampaignEntity)relatedEntity);
					break;
				case "AffiliateProfile":
					this.AffiliateProfile.Add((AffiliateProfileEntity)relatedEntity);
					break;
				case "ApplicationAuthentication_":
					this.ApplicationAuthentication_.Add((ApplicationAuthenticationEntity)relatedEntity);
					break;
				case "ApplicationAuthentication":
					this.ApplicationAuthentication.Add((ApplicationAuthenticationEntity)relatedEntity);
					break;
				case "Barrier_":
					this.Barrier_.Add((BarrierEntity)relatedEntity);
					break;
				case "Barrier":
					this.Barrier.Add((BarrierEntity)relatedEntity);
					break;
				case "CallCenterAgentTeam":
					this.CallCenterAgentTeam.Add((CallCenterAgentTeamEntity)relatedEntity);
					break;
				case "CallCenterAgentTeamLog__":
					this.CallCenterAgentTeamLog__.Add((CallCenterAgentTeamLogEntity)relatedEntity);
					break;
				case "CallCenterAgentTeamLog_":
					this.CallCenterAgentTeamLog_.Add((CallCenterAgentTeamLogEntity)relatedEntity);
					break;
				case "CallCenterAgentTeamLog":
					this.CallCenterAgentTeamLog.Add((CallCenterAgentTeamLogEntity)relatedEntity);
					break;
				case "CallCenterTeam_":
					this.CallCenterTeam_.Add((CallCenterTeamEntity)relatedEntity);
					break;
				case "CallCenterTeam":
					this.CallCenterTeam.Add((CallCenterTeamEntity)relatedEntity);
					break;
				case "CallQueue_":
					this.CallQueue_.Add((CallQueueEntity)relatedEntity);
					break;
				case "CallQueue":
					this.CallQueue.Add((CallQueueEntity)relatedEntity);
					break;
				case "CallQueueAssignment":
					this.CallQueueAssignment.Add((CallQueueAssignmentEntity)relatedEntity);
					break;
				case "CallQueueCustomer__":
					this.CallQueueCustomer__.Add((CallQueueCustomerEntity)relatedEntity);
					break;
				case "CallQueueCustomer_":
					this.CallQueueCustomer_.Add((CallQueueCustomerEntity)relatedEntity);
					break;
				case "CallQueueCustomer":
					this.CallQueueCustomer.Add((CallQueueCustomerEntity)relatedEntity);
					break;
				case "CallQueueCustomerLock":
					this.CallQueueCustomerLock.Add((CallQueueCustomerLockEntity)relatedEntity);
					break;
				case "CallQueueCustomTag":
					this.CallQueueCustomTag.Add((CallQueueCustomTagEntity)relatedEntity);
					break;
				case "CallRoundCallQueue":
					this.CallRoundCallQueue.Add((CallRoundCallQueueEntity)relatedEntity);
					break;
				case "Calls":
					this.Calls.Add((CallsEntity)relatedEntity);
					break;
				case "CallUpload":
					this.CallUpload.Add((CallUploadEntity)relatedEntity);
					break;
				case "Campaign_":
					this.Campaign_.Add((CampaignEntity)relatedEntity);
					break;
				case "Campaign":
					this.Campaign.Add((CampaignEntity)relatedEntity);
					break;
				case "CampaignActivity_":
					this.CampaignActivity_.Add((CampaignActivityEntity)relatedEntity);
					break;
				case "CampaignActivity":
					this.CampaignActivity.Add((CampaignActivityEntity)relatedEntity);
					break;
				case "CampaignActivityAssignment":
					this.CampaignActivityAssignment.Add((CampaignActivityAssignmentEntity)relatedEntity);
					break;
				case "CampaignAssignment":
					this.CampaignAssignment.Add((CampaignAssignmentEntity)relatedEntity);
					break;
				case "CdcontentGeneratorTracking":
					this.CdcontentGeneratorTracking.Add((CdcontentGeneratorTrackingEntity)relatedEntity);
					break;
				case "ChaperoneAnswer_":
					this.ChaperoneAnswer_.Add((ChaperoneAnswerEntity)relatedEntity);
					break;
				case "ChaperoneAnswer":
					this.ChaperoneAnswer.Add((ChaperoneAnswerEntity)relatedEntity);
					break;
				case "ChaperoneSignature":
					this.ChaperoneSignature.Add((ChaperoneSignatureEntity)relatedEntity);
					break;
				case "Check_":
					this.Check_.Add((CheckEntity)relatedEntity);
					break;
				case "Check":
					this.Check.Add((CheckEntity)relatedEntity);
					break;
				case "CheckListAnswer_":
					this.CheckListAnswer_.Add((CheckListAnswerEntity)relatedEntity);
					break;
				case "CheckListAnswer":
					this.CheckListAnswer.Add((CheckListAnswerEntity)relatedEntity);
					break;
				case "CheckListTemplate_":
					this.CheckListTemplate_.Add((CheckListTemplateEntity)relatedEntity);
					break;
				case "CheckListTemplate":
					this.CheckListTemplate.Add((CheckListTemplateEntity)relatedEntity);
					break;
				case "ClinicalTestQualificationCriteria_":
					this.ClinicalTestQualificationCriteria_.Add((ClinicalTestQualificationCriteriaEntity)relatedEntity);
					break;
				case "ClinicalTestQualificationCriteria":
					this.ClinicalTestQualificationCriteria.Add((ClinicalTestQualificationCriteriaEntity)relatedEntity);
					break;
				case "ContactCall_":
					this.ContactCall_.Add((ContactCallEntity)relatedEntity);
					break;
				case "ContactCall":
					this.ContactCall.Add((ContactCallEntity)relatedEntity);
					break;
				case "ContactMeeting_":
					this.ContactMeeting_.Add((ContactMeetingEntity)relatedEntity);
					break;
				case "ContactMeeting":
					this.ContactMeeting.Add((ContactMeetingEntity)relatedEntity);
					break;
				case "Content_":
					this.Content_.Add((ContentEntity)relatedEntity);
					break;
				case "Content":
					this.Content.Add((ContentEntity)relatedEntity);
					break;
				case "CorporateTag_":
					this.CorporateTag_.Add((CorporateTagEntity)relatedEntity);
					break;
				case "CorporateTag":
					this.CorporateTag.Add((CorporateTagEntity)relatedEntity);
					break;
				case "CorporateUpload":
					this.CorporateUpload.Add((CorporateUploadEntity)relatedEntity);
					break;
				case "Coupons_":
					this.Coupons_.Add((CouponsEntity)relatedEntity);
					break;
				case "Coupons":
					this.Coupons.Add((CouponsEntity)relatedEntity);
					break;
				case "CurrentMedication":
					this.CurrentMedication.Add((CurrentMedicationEntity)relatedEntity);
					break;
				case "CustomerActivityTypeUpload":
					this.CustomerActivityTypeUpload.Add((CustomerActivityTypeUploadEntity)relatedEntity);
					break;
				case "CustomerCallAttempts":
					this.CustomerCallAttempts.Add((CustomerCallAttemptsEntity)relatedEntity);
					break;
				case "CustomerCallQueueCallAttempt":
					this.CustomerCallQueueCallAttempt.Add((CustomerCallQueueCallAttemptEntity)relatedEntity);
					break;
				case "CustomerClinicalQuestionAnswer_":
					this.CustomerClinicalQuestionAnswer_.Add((CustomerClinicalQuestionAnswerEntity)relatedEntity);
					break;
				case "CustomerClinicalQuestionAnswer":
					this.CustomerClinicalQuestionAnswer.Add((CustomerClinicalQuestionAnswerEntity)relatedEntity);
					break;
				case "CustomerEligibility_":
					this.CustomerEligibility_.Add((CustomerEligibilityEntity)relatedEntity);
					break;
				case "CustomerEligibility":
					this.CustomerEligibility.Add((CustomerEligibilityEntity)relatedEntity);
					break;
				case "CustomerEventCriticalTestData_":
					this.CustomerEventCriticalTestData_.Add((CustomerEventCriticalTestDataEntity)relatedEntity);
					break;
				case "CustomerEventCriticalTestData":
					this.CustomerEventCriticalTestData.Add((CustomerEventCriticalTestDataEntity)relatedEntity);
					break;
				case "CustomerEventPriorityInQueueData_":
					this.CustomerEventPriorityInQueueData_.Add((CustomerEventPriorityInQueueDataEntity)relatedEntity);
					break;
				case "CustomerEventPriorityInQueueData":
					this.CustomerEventPriorityInQueueData.Add((CustomerEventPriorityInQueueDataEntity)relatedEntity);
					break;
				case "CustomerEventReading":
					this.CustomerEventReading.Add((CustomerEventReadingEntity)relatedEntity);
					break;
				case "CustomerEventTestPhysicianEvaluation":
					this.CustomerEventTestPhysicianEvaluation.Add((CustomerEventTestPhysicianEvaluationEntity)relatedEntity);
					break;
				case "CustomerEventTestState__":
					this.CustomerEventTestState__.Add((CustomerEventTestStateEntity)relatedEntity);
					break;
				case "CustomerEventTestState_":
					this.CustomerEventTestState_.Add((CustomerEventTestStateEntity)relatedEntity);
					break;
				case "CustomerEventTestState":
					this.CustomerEventTestState.Add((CustomerEventTestStateEntity)relatedEntity);
					break;
				case "CustomerEventUnableScreenReason":
					this.CustomerEventUnableScreenReason.Add((CustomerEventUnableScreenReasonEntity)relatedEntity);
					break;
				case "CustomerHealthInfo":
					this.CustomerHealthInfo.Add((CustomerHealthInfoEntity)relatedEntity);
					break;
				case "CustomerHealthInfoArchive":
					this.CustomerHealthInfoArchive.Add((CustomerHealthInfoArchiveEntity)relatedEntity);
					break;
				case "CustomerIcdCode":
					this.CustomerIcdCode.Add((CustomerIcdCodeEntity)relatedEntity);
					break;
				case "CustomerLockForCall":
					this.CustomerLockForCall.Add((CustomerLockForCallEntity)relatedEntity);
					break;
				case "CustomerMedicareQuestionAnswer":
					this.CustomerMedicareQuestionAnswer.Add((CustomerMedicareQuestionAnswerEntity)relatedEntity);
					break;
				case "CustomerPhoneNumberUpdateUpload":
					this.CustomerPhoneNumberUpdateUpload.Add((CustomerPhoneNumberUpdateUploadEntity)relatedEntity);
					break;
				case "CustomerPrimaryCarePhysician_":
					this.CustomerPrimaryCarePhysician_.Add((CustomerPrimaryCarePhysicianEntity)relatedEntity);
					break;
				case "CustomerPrimaryCarePhysician__":
					this.CustomerPrimaryCarePhysician__.Add((CustomerPrimaryCarePhysicianEntity)relatedEntity);
					break;
				case "CustomerPrimaryCarePhysician":
					this.CustomerPrimaryCarePhysician.Add((CustomerPrimaryCarePhysicianEntity)relatedEntity);
					break;
				case "CustomerProfileHistory":
					this.CustomerProfileHistory.Add((CustomerProfileHistoryEntity)relatedEntity);
					break;
				case "CustomerRegistrationNotes":
					this.CustomerRegistrationNotes.Add((CustomerRegistrationNotesEntity)relatedEntity);
					break;
				case "CustomerResultScreeningCommunication__":
					this.CustomerResultScreeningCommunication__.Add((CustomerResultScreeningCommunicationEntity)relatedEntity);
					break;
				case "CustomerResultScreeningCommunication_":
					this.CustomerResultScreeningCommunication_.Add((CustomerResultScreeningCommunicationEntity)relatedEntity);
					break;
				case "CustomerResultScreeningCommunication":
					this.CustomerResultScreeningCommunication.Add((CustomerResultScreeningCommunicationEntity)relatedEntity);
					break;
				case "CustomerTag_":
					this.CustomerTag_.Add((CustomerTagEntity)relatedEntity);
					break;
				case "CustomerTag":
					this.CustomerTag.Add((CustomerTagEntity)relatedEntity);
					break;
				case "CustomerTargeted_":
					this.CustomerTargeted_.Add((CustomerTargetedEntity)relatedEntity);
					break;
				case "CustomerTargeted":
					this.CustomerTargeted.Add((CustomerTargetedEntity)relatedEntity);
					break;
				case "CustomerWarmTransfer_":
					this.CustomerWarmTransfer_.Add((CustomerWarmTransferEntity)relatedEntity);
					break;
				case "CustomerWarmTransfer":
					this.CustomerWarmTransfer.Add((CustomerWarmTransferEntity)relatedEntity);
					break;
				case "CustomEventNotification":
					this.CustomEventNotification.Add((CustomEventNotificationEntity)relatedEntity);
					break;
				case "DirectMail":
					this.DirectMail.Add((DirectMailEntity)relatedEntity);
					break;
				case "DirectMailType_":
					this.DirectMailType_.Add((DirectMailTypeEntity)relatedEntity);
					break;
				case "DirectMailType":
					this.DirectMailType.Add((DirectMailTypeEntity)relatedEntity);
					break;
				case "DisqualifiedTest_":
					this.DisqualifiedTest_.Add((DisqualifiedTestEntity)relatedEntity);
					break;
				case "DisqualifiedTest":
					this.DisqualifiedTest.Add((DisqualifiedTestEntity)relatedEntity);
					break;
				case "Eligibility":
					this.Eligibility.Add((EligibilityEntity)relatedEntity);
					break;
				case "EligibilityUpload":
					this.EligibilityUpload.Add((EligibilityUploadEntity)relatedEntity);
					break;
				case "EmailTemplate":
					this.EmailTemplate.Add((EmailTemplateEntity)relatedEntity);
					break;
				case "EventAccountTestHcpcsCode_":
					this.EventAccountTestHcpcsCode_.Add((EventAccountTestHcpcsCodeEntity)relatedEntity);
					break;
				case "EventAccountTestHcpcsCode":
					this.EventAccountTestHcpcsCode.Add((EventAccountTestHcpcsCodeEntity)relatedEntity);
					break;
				case "EventActivityTemplate":
					this.EventActivityTemplate.Add((EventActivityTemplateEntity)relatedEntity);
					break;
				case "EventActivityTemplateCall":
					this.EventActivityTemplateCall.Add((EventActivityTemplateCallEntity)relatedEntity);
					break;
				case "EventActivityTemplateEmail":
					this.EventActivityTemplateEmail.Add((EventActivityTemplateEmailEntity)relatedEntity);
					break;
				case "EventActivityTemplateMeeting":
					this.EventActivityTemplateMeeting.Add((EventActivityTemplateMeetingEntity)relatedEntity);
					break;
				case "EventActivityTemplateTask":
					this.EventActivityTemplateTask.Add((EventActivityTemplateTaskEntity)relatedEntity);
					break;
				case "EventAppointment":
					this.EventAppointment.Add((EventAppointmentEntity)relatedEntity);
					break;
				case "EventAppointmentCancellationLog":
					this.EventAppointmentCancellationLog.Add((EventAppointmentCancellationLogEntity)relatedEntity);
					break;
				case "EventAppointmentChangeLog":
					this.EventAppointmentChangeLog.Add((EventAppointmentChangeLogEntity)relatedEntity);
					break;
				case "EventCustomerBasicBioMetric":
					this.EventCustomerBasicBioMetric.Add((EventCustomerBasicBioMetricEntity)relatedEntity);
					break;
				case "EventCustomerGiftCard":
					this.EventCustomerGiftCard.Add((EventCustomerGiftCardEntity)relatedEntity);
					break;
				case "EventCustomerPrimaryCarePhysician":
					this.EventCustomerPrimaryCarePhysician.Add((EventCustomerPrimaryCarePhysicianEntity)relatedEntity);
					break;
				case "EventCustomerQuestionAnswer_":
					this.EventCustomerQuestionAnswer_.Add((EventCustomerQuestionAnswerEntity)relatedEntity);
					break;
				case "EventCustomerQuestionAnswer":
					this.EventCustomerQuestionAnswer.Add((EventCustomerQuestionAnswerEntity)relatedEntity);
					break;
				case "EventCustomerResult___":
					this.EventCustomerResult___.Add((EventCustomerResultEntity)relatedEntity);
					break;
				case "EventCustomerResult__":
					this.EventCustomerResult__.Add((EventCustomerResultEntity)relatedEntity);
					break;
				case "EventCustomerResult_":
					this.EventCustomerResult_.Add((EventCustomerResultEntity)relatedEntity);
					break;
				case "EventCustomerResult____":
					this.EventCustomerResult____.Add((EventCustomerResultEntity)relatedEntity);
					break;
				case "EventCustomerResult______":
					this.EventCustomerResult______.Add((EventCustomerResultEntity)relatedEntity);
					break;
				case "EventCustomerResult_______":
					this.EventCustomerResult_______.Add((EventCustomerResultEntity)relatedEntity);
					break;
				case "EventCustomerResult":
					this.EventCustomerResult.Add((EventCustomerResultEntity)relatedEntity);
					break;
				case "EventCustomerResult_____":
					this.EventCustomerResult_____.Add((EventCustomerResultEntity)relatedEntity);
					break;
				case "EventCustomerResult________":
					this.EventCustomerResult________.Add((EventCustomerResultEntity)relatedEntity);
					break;
				case "EventCustomerResultBloodLab":
					this.EventCustomerResultBloodLab.Add((EventCustomerResultBloodLabEntity)relatedEntity);
					break;
				case "EventCustomerResultHistory":
					this.EventCustomerResultHistory.Add((EventCustomerResultHistoryEntity)relatedEntity);
					break;
				case "EventCustomerResultHistory_":
					this.EventCustomerResultHistory_.Add((EventCustomerResultHistoryEntity)relatedEntity);
					break;
				case "EventCustomerResultHistory__":
					this.EventCustomerResultHistory__.Add((EventCustomerResultHistoryEntity)relatedEntity);
					break;
				case "EventCustomerRetest":
					this.EventCustomerRetest.Add((EventCustomerRetestEntity)relatedEntity);
					break;
				case "EventCustomers_":
					this.EventCustomers_.Add((EventCustomersEntity)relatedEntity);
					break;
				case "EventCustomers":
					this.EventCustomers.Add((EventCustomersEntity)relatedEntity);
					break;
				case "EventCustomerTestNotPerformedNotification":
					this.EventCustomerTestNotPerformedNotification.Add((EventCustomerTestNotPerformedNotificationEntity)relatedEntity);
					break;
				case "EventNote_":
					this.EventNote_.Add((EventNoteEntity)relatedEntity);
					break;
				case "EventNote":
					this.EventNote.Add((EventNoteEntity)relatedEntity);
					break;
				case "EventPhysicianTest__":
					this.EventPhysicianTest__.Add((EventPhysicianTestEntity)relatedEntity);
					break;
				case "EventPhysicianTest_":
					this.EventPhysicianTest_.Add((EventPhysicianTestEntity)relatedEntity);
					break;
				case "EventPhysicianTest":
					this.EventPhysicianTest.Add((EventPhysicianTestEntity)relatedEntity);
					break;
				case "Events___":
					this.Events___.Add((EventsEntity)relatedEntity);
					break;
				case "Events____":
					this.Events____.Add((EventsEntity)relatedEntity);
					break;
				case "Events__":
					this.Events__.Add((EventsEntity)relatedEntity);
					break;
				case "Events":
					this.Events.Add((EventsEntity)relatedEntity);
					break;
				case "Events_":
					this.Events_.Add((EventsEntity)relatedEntity);
					break;
				case "EventStaffAssignment__":
					this.EventStaffAssignment__.Add((EventStaffAssignmentEntity)relatedEntity);
					break;
				case "EventStaffAssignment_":
					this.EventStaffAssignment_.Add((EventStaffAssignmentEntity)relatedEntity);
					break;
				case "EventStaffAssignment":
					this.EventStaffAssignment.Add((EventStaffAssignmentEntity)relatedEntity);
					break;
				case "ExitInterviewAnswer_":
					this.ExitInterviewAnswer_.Add((ExitInterviewAnswerEntity)relatedEntity);
					break;
				case "ExitInterviewAnswer":
					this.ExitInterviewAnswer.Add((ExitInterviewAnswerEntity)relatedEntity);
					break;
				case "ExitInterviewSignature":
					this.ExitInterviewSignature.Add((ExitInterviewSignatureEntity)relatedEntity);
					break;
				case "ExportableReportsQueue":
					this.ExportableReportsQueue.Add((ExportableReportsQueueEntity)relatedEntity);
					break;
				case "File":
					this.File.Add((FileEntity)relatedEntity);
					break;
				case "FillEventCallQueue":
					this.FillEventCallQueue.Add((FillEventCallQueueEntity)relatedEntity);
					break;
				case "FluConsentAnswer_":
					this.FluConsentAnswer_.Add((FluConsentAnswerEntity)relatedEntity);
					break;
				case "FluConsentAnswer":
					this.FluConsentAnswer.Add((FluConsentAnswerEntity)relatedEntity);
					break;
				case "FluConsentSignature":
					this.FluConsentSignature.Add((FluConsentSignatureEntity)relatedEntity);
					break;
				case "FluConsentTemplate_":
					this.FluConsentTemplate_.Add((FluConsentTemplateEntity)relatedEntity);
					break;
				case "FluConsentTemplate":
					this.FluConsentTemplate.Add((FluConsentTemplateEntity)relatedEntity);
					break;
				case "GcNotGivenReason_":
					this.GcNotGivenReason_.Add((GcNotGivenReasonEntity)relatedEntity);
					break;
				case "GcNotGivenReason":
					this.GcNotGivenReason.Add((GcNotGivenReasonEntity)relatedEntity);
					break;
				case "GuardianDetails_":
					this.GuardianDetails_.Add((GuardianDetailsEntity)relatedEntity);
					break;
				case "GuardianDetails":
					this.GuardianDetails.Add((GuardianDetailsEntity)relatedEntity);
					break;
				case "HafTemplate_":
					this.HafTemplate_.Add((HafTemplateEntity)relatedEntity);
					break;
				case "HafTemplate":
					this.HafTemplate.Add((HafTemplateEntity)relatedEntity);
					break;
				case "HcpcsCode_":
					this.HcpcsCode_.Add((HcpcsCodeEntity)relatedEntity);
					break;
				case "HcpcsCode":
					this.HcpcsCode.Add((HcpcsCodeEntity)relatedEntity);
					break;
				case "HealthPlanCallQueueCriteria__":
					this.HealthPlanCallQueueCriteria__.Add((HealthPlanCallQueueCriteriaEntity)relatedEntity);
					break;
				case "HealthPlanCallQueueCriteria_":
					this.HealthPlanCallQueueCriteria_.Add((HealthPlanCallQueueCriteriaEntity)relatedEntity);
					break;
				case "HealthPlanCriteriaAssignment__":
					this.HealthPlanCriteriaAssignment__.Add((HealthPlanCriteriaAssignmentEntity)relatedEntity);
					break;
				case "HealthPlanCriteriaAssignment_":
					this.HealthPlanCriteriaAssignment_.Add((HealthPlanCriteriaAssignmentEntity)relatedEntity);
					break;
				case "HealthPlanCriteriaAssignment":
					this.HealthPlanCriteriaAssignment.Add((HealthPlanCriteriaAssignmentEntity)relatedEntity);
					break;
				case "HealthPlanCriteriaAssignmentUpload":
					this.HealthPlanCriteriaAssignmentUpload.Add((HealthPlanCriteriaAssignmentUploadEntity)relatedEntity);
					break;
				case "HealthPlanCriteriaTeamAssignment_":
					this.HealthPlanCriteriaTeamAssignment_.Add((HealthPlanCriteriaTeamAssignmentEntity)relatedEntity);
					break;
				case "HealthPlanCriteriaTeamAssignment":
					this.HealthPlanCriteriaTeamAssignment.Add((HealthPlanCriteriaTeamAssignmentEntity)relatedEntity);
					break;
				case "HealthPlanRevenue_":
					this.HealthPlanRevenue_.Add((HealthPlanRevenueEntity)relatedEntity);
					break;
				case "HealthPlanRevenue":
					this.HealthPlanRevenue.Add((HealthPlanRevenueEntity)relatedEntity);
					break;
				case "HospitalPartnerCustomer__":
					this.HospitalPartnerCustomer__.Add((HospitalPartnerCustomerEntity)relatedEntity);
					break;
				case "HospitalPartnerCustomer_":
					this.HospitalPartnerCustomer_.Add((HospitalPartnerCustomerEntity)relatedEntity);
					break;
				case "HospitalPartnerCustomer":
					this.HospitalPartnerCustomer.Add((HospitalPartnerCustomerEntity)relatedEntity);
					break;
				case "HostFacilityRanking":
					this.HostFacilityRanking.Add((HostFacilityRankingEntity)relatedEntity);
					break;
				case "HostPayment":
					this.HostPayment.Add((HostPaymentEntity)relatedEntity);
					break;
				case "HostPaymentTransaction":
					this.HostPaymentTransaction.Add((HostPaymentTransactionEntity)relatedEntity);
					break;
				case "IcdCodes_":
					this.IcdCodes_.Add((IcdCodesEntity)relatedEntity);
					break;
				case "IcdCodes":
					this.IcdCodes.Add((IcdCodesEntity)relatedEntity);
					break;
				case "IncidentalFindings":
					this.IncidentalFindings.Add((IncidentalFindingsEntity)relatedEntity);
					break;
				case "KynLabValues_":
					this.KynLabValues_.Add((KynLabValuesEntity)relatedEntity);
					break;
				case "KynLabValues":
					this.KynLabValues.Add((KynLabValuesEntity)relatedEntity);
					break;
				case "Lab":
					this.Lab.Add((LabEntity)relatedEntity);
					break;
				case "Language":
					this.Language.Add((LanguageEntity)relatedEntity);
					break;
				case "LanguageBarrierCallQueue":
					this.LanguageBarrierCallQueue.Add((LanguageBarrierCallQueueEntity)relatedEntity);
					break;
				case "MailRoundCallQueue":
					this.MailRoundCallQueue.Add((MailRoundCallQueueEntity)relatedEntity);
					break;
				case "MarketingPrintOrder":
					this.MarketingPrintOrder.Add((MarketingPrintOrderEntity)relatedEntity);
					break;
				case "Medication_":
					this.Medication_.Add((MedicationEntity)relatedEntity);
					break;
				case "Medication":
					this.Medication.Add((MedicationEntity)relatedEntity);
					break;
				case "MedicationUpload":
					this.MedicationUpload.Add((MedicationUploadEntity)relatedEntity);
					break;
				case "MergeCustomerUpload":
					this.MergeCustomerUpload.Add((MergeCustomerUploadEntity)relatedEntity);
					break;
				case "NoShowCallQueue":
					this.NoShowCallQueue.Add((NoShowCallQueueEntity)relatedEntity);
					break;
				case "NotesDetails_":
					this.NotesDetails_.Add((NotesDetailsEntity)relatedEntity);
					break;
				case "NotesDetails":
					this.NotesDetails.Add((NotesDetailsEntity)relatedEntity);
					break;
				case "Notification":
					this.Notification.Add((NotificationEntity)relatedEntity);
					break;
				case "NotificationType":
					this.NotificationType.Add((NotificationTypeEntity)relatedEntity);
					break;
				case "OrganizationRoleUserTerritory":
					this.OrganizationRoleUserTerritory.Add((OrganizationRoleUserTerritoryEntity)relatedEntity);
					break;
				case "OrgRoleUserActivity":
					this.OrgRoleUserActivity.Add((OrgRoleUserActivityEntity)relatedEntity);
					break;
				case "ParticipationConsentSignature":
					this.ParticipationConsentSignature.Add((ParticipationConsentSignatureEntity)relatedEntity);
					break;
				case "PasswordChangelog":
					this.PasswordChangelog.Add((PasswordChangelogEntity)relatedEntity);
					break;
				case "PayPeriod_":
					this.PayPeriod_.Add((PayPeriodEntity)relatedEntity);
					break;
				case "PayPeriod":
					this.PayPeriod.Add((PayPeriodEntity)relatedEntity);
					break;
				case "PcpAppointment_":
					this.PcpAppointment_.Add((PcpAppointmentEntity)relatedEntity);
					break;
				case "PcpAppointment":
					this.PcpAppointment.Add((PcpAppointmentEntity)relatedEntity);
					break;
				case "PcpDisposition_":
					this.PcpDisposition_.Add((PcpDispositionEntity)relatedEntity);
					break;
				case "PcpDisposition":
					this.PcpDisposition.Add((PcpDispositionEntity)relatedEntity);
					break;
				case "PhysicianRecordRequestSignature":
					this.PhysicianRecordRequestSignature.Add((PhysicianRecordRequestSignatureEntity)relatedEntity);
					break;
				case "PinChangelog":
					this.PinChangelog.Add((PinChangelogEntity)relatedEntity);
					break;
				case "PodDefaultTeam":
					this.PodDefaultTeam.Add((PodDefaultTeamEntity)relatedEntity);
					break;
				case "PreApprovedPackage":
					this.PreApprovedPackage.Add((PreApprovedPackageEntity)relatedEntity);
					break;
				case "PreApprovedTest":
					this.PreApprovedTest.Add((PreApprovedTestEntity)relatedEntity);
					break;
				case "PreAssessmentCallQueueCustomerLock":
					this.PreAssessmentCallQueueCustomerLock.Add((PreAssessmentCallQueueCustomerLockEntity)relatedEntity);
					break;
				case "PreAssessmentCustomerCallQueueCallAttempt":
					this.PreAssessmentCustomerCallQueueCallAttempt.Add((PreAssessmentCustomerCallQueueCallAttemptEntity)relatedEntity);
					break;
				case "PreQualificationQuestion":
					this.PreQualificationQuestion.Add((PreQualificationQuestionEntity)relatedEntity);
					break;
				case "PreQualificationTestTemplate_":
					this.PreQualificationTestTemplate_.Add((PreQualificationTestTemplateEntity)relatedEntity);
					break;
				case "PreQualificationTestTemplate":
					this.PreQualificationTestTemplate.Add((PreQualificationTestTemplateEntity)relatedEntity);
					break;
				case "PrintOrderItemTracking_":
					this.PrintOrderItemTracking_.Add((PrintOrderItemTrackingEntity)relatedEntity);
					break;
				case "PrintOrderItemTracking":
					this.PrintOrderItemTracking.Add((PrintOrderItemTrackingEntity)relatedEntity);
					break;
				case "PriorityInQueue_":
					this.PriorityInQueue_.Add((PriorityInQueueEntity)relatedEntity);
					break;
				case "PriorityInQueue":
					this.PriorityInQueue.Add((PriorityInQueueEntity)relatedEntity);
					break;
				case "ProspectCustomer":
					this.ProspectCustomer.Add((ProspectCustomerEntity)relatedEntity);
					break;
				case "Prospects":
					this.Prospects.Add((ProspectsEntity)relatedEntity);
					break;
				case "RapsUpload":
					this.RapsUpload.Add((RapsUploadEntity)relatedEntity);
					break;
				case "Referral":
					this.Referral.Add((ReferralEntity)relatedEntity);
					break;
				case "RefundRequest_":
					this.RefundRequest_.Add((RefundRequestEntity)relatedEntity);
					break;
				case "RefundRequest":
					this.RefundRequest.Add((RefundRequestEntity)relatedEntity);
					break;
				case "RequiredTest":
					this.RequiredTest.Add((RequiredTestEntity)relatedEntity);
					break;
				case "SalesRepPodAssigments":
					this.SalesRepPodAssigments.Add((SalesRepPodAssigmentsEntity)relatedEntity);
					break;
				case "ScheduleTemplate_":
					this.ScheduleTemplate_.Add((ScheduleTemplateEntity)relatedEntity);
					break;
				case "ScheduleTemplate":
					this.ScheduleTemplate.Add((ScheduleTemplateEntity)relatedEntity);
					break;
				case "Seminars":
					this.Seminars.Add((SeminarsEntity)relatedEntity);
					break;
				case "ShippingDetail_":
					this.ShippingDetail_.Add((ShippingDetailEntity)relatedEntity);
					break;
				case "ShippingDetail":
					this.ShippingDetail.Add((ShippingDetailEntity)relatedEntity);
					break;
				case "SourceCodeChangeLog":
					this.SourceCodeChangeLog.Add((SourceCodeChangeLogEntity)relatedEntity);
					break;
				case "StaffEventScheduleUpload":
					this.StaffEventScheduleUpload.Add((StaffEventScheduleUploadEntity)relatedEntity);
					break;
				case "SurveyAnswer_":
					this.SurveyAnswer_.Add((SurveyAnswerEntity)relatedEntity);
					break;
				case "SurveyAnswer":
					this.SurveyAnswer.Add((SurveyAnswerEntity)relatedEntity);
					break;
				case "SurveyTemplate_":
					this.SurveyTemplate_.Add((SurveyTemplateEntity)relatedEntity);
					break;
				case "SurveyTemplate":
					this.SurveyTemplate.Add((SurveyTemplateEntity)relatedEntity);
					break;
				case "SuspectConditionUpload":
					this.SuspectConditionUpload.Add((SuspectConditionUploadEntity)relatedEntity);
					break;
				case "SystemGenertedCallQueueCriteria__":
					this.SystemGenertedCallQueueCriteria__.Add((SystemGeneratedCallQueueCriteriaEntity)relatedEntity);
					break;
				case "SystemGenertedCallQueueCriteria_":
					this.SystemGenertedCallQueueCriteria_.Add((SystemGeneratedCallQueueCriteriaEntity)relatedEntity);
					break;
				case "SystemGenertedCallQueueCriteria":
					this.SystemGenertedCallQueueCriteria.Add((SystemGeneratedCallQueueCriteriaEntity)relatedEntity);
					break;
				case "TaskDetails__":
					this.TaskDetails__.Add((TaskDetailsEntity)relatedEntity);
					break;
				case "TaskDetails_":
					this.TaskDetails_.Add((TaskDetailsEntity)relatedEntity);
					break;
				case "TaskDetails":
					this.TaskDetails.Add((TaskDetailsEntity)relatedEntity);
					break;
				case "Territory":
					this.Territory.Add((TerritoryEntity)relatedEntity);
					break;
				case "TestHcpcsCode_":
					this.TestHcpcsCode_.Add((TestHcpcsCodeEntity)relatedEntity);
					break;
				case "TestHcpcsCode":
					this.TestHcpcsCode.Add((TestHcpcsCodeEntity)relatedEntity);
					break;
				case "TestNotPerformed_":
					this.TestNotPerformed_.Add((TestNotPerformedEntity)relatedEntity);
					break;
				case "TestNotPerformed":
					this.TestNotPerformed.Add((TestNotPerformedEntity)relatedEntity);
					break;
				case "TestNotPerformedReason":
					this.TestNotPerformedReason.Add((TestNotPerformedReasonEntity)relatedEntity);
					break;
				case "TestPerformedExternally_":
					this.TestPerformedExternally_.Add((TestPerformedExternallyEntity)relatedEntity);
					break;
				case "TestPerformedExternally":
					this.TestPerformedExternally.Add((TestPerformedExternallyEntity)relatedEntity);
					break;
				case "UncontactedCustomerCallQueue":
					this.UncontactedCustomerCallQueue.Add((UncontactedCustomerCallQueueEntity)relatedEntity);
					break;
				case "UploadZipInfo":
					this.UploadZipInfo.Add((UploadZipInfoEntity)relatedEntity);
					break;
				case "User__":
					this.User__.Add((UserEntity)relatedEntity);
					break;
				case "User_":
					this.User_.Add((UserEntity)relatedEntity);
					break;
				case "AccountCoordinatorProfile":
					SetupSyncAccountCoordinatorProfile(relatedEntity);
					break;
				case "AffiliateProfile_":
					SetupSyncAffiliateProfile_(relatedEntity);
					break;
				case "CallCenterRepProfile":
					SetupSyncCallCenterRepProfile(relatedEntity);
					break;
				case "CustomerProfile":
					SetupSyncCustomerProfile(relatedEntity);
					break;
				case "PhysicianProfile":
					SetupSyncPhysicianProfile(relatedEntity);
					break;
				case "TechnicianProfile":
					SetupSyncTechnicianProfile(relatedEntity);
					break;
				default:
					break;
			}
		}

		/// <summary> Unsets the internal parameter related to the fieldname passed to the instance relatedEntity. Reverses the actions taken by SetRelatedEntity() </summary>
		/// <param name="relatedEntity">Instance to unset as the related entity of type entityType</param>
		/// <param name="fieldName">Name of field mapped onto the relation which resolves in the instance relatedEntity</param>
		/// <param name="signalRelatedEntityManyToOne">if set to true it will notify the manytoone side, if applicable.</param>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public override void UnsetRelatedEntity(IEntity2 relatedEntity, string fieldName, bool signalRelatedEntityManyToOne)
		{
			switch(fieldName)
			{
				case "Organization":
					DesetupSyncOrganization(false, true);
					break;
				case "Role":
					DesetupSyncRole(false, true);
					break;
				case "User":
					DesetupSyncUser(false, true);
					break;
				case "AccountCallCenterOrganization_":
					base.PerformRelatedEntityRemoval(this.AccountCallCenterOrganization_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "AccountCallCenterOrganization":
					base.PerformRelatedEntityRemoval(this.AccountCallCenterOrganization, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "AccountHraChatQuestionnaire_":
					base.PerformRelatedEntityRemoval(this.AccountHraChatQuestionnaire_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "AccountHraChatQuestionnaire":
					base.PerformRelatedEntityRemoval(this.AccountHraChatQuestionnaire, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "AccountTestHcpcsCode_":
					base.PerformRelatedEntityRemoval(this.AccountTestHcpcsCode_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "AccountTestHcpcsCode":
					base.PerformRelatedEntityRemoval(this.AccountTestHcpcsCode, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "ActivityType":
					base.PerformRelatedEntityRemoval(this.ActivityType, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "AdditionalFields_":
					base.PerformRelatedEntityRemoval(this.AdditionalFields_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "AdditionalFields":
					base.PerformRelatedEntityRemoval(this.AdditionalFields, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Address":
					base.PerformRelatedEntityRemoval(this.Address, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "AdvocateManagerTeam_":
					base.PerformRelatedEntityRemoval(this.AdvocateManagerTeam_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "AdvocateManagerTeam":
					base.PerformRelatedEntityRemoval(this.AdvocateManagerTeam, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Afcampaign_":
					base.PerformRelatedEntityRemoval(this.Afcampaign_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Afcampaign":
					base.PerformRelatedEntityRemoval(this.Afcampaign, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "AffiliateProfile":
					base.PerformRelatedEntityRemoval(this.AffiliateProfile, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "ApplicationAuthentication_":
					base.PerformRelatedEntityRemoval(this.ApplicationAuthentication_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "ApplicationAuthentication":
					base.PerformRelatedEntityRemoval(this.ApplicationAuthentication, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Barrier_":
					base.PerformRelatedEntityRemoval(this.Barrier_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Barrier":
					base.PerformRelatedEntityRemoval(this.Barrier, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CallCenterAgentTeam":
					base.PerformRelatedEntityRemoval(this.CallCenterAgentTeam, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CallCenterAgentTeamLog__":
					base.PerformRelatedEntityRemoval(this.CallCenterAgentTeamLog__, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CallCenterAgentTeamLog_":
					base.PerformRelatedEntityRemoval(this.CallCenterAgentTeamLog_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CallCenterAgentTeamLog":
					base.PerformRelatedEntityRemoval(this.CallCenterAgentTeamLog, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CallCenterTeam_":
					base.PerformRelatedEntityRemoval(this.CallCenterTeam_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CallCenterTeam":
					base.PerformRelatedEntityRemoval(this.CallCenterTeam, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CallQueue_":
					base.PerformRelatedEntityRemoval(this.CallQueue_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CallQueue":
					base.PerformRelatedEntityRemoval(this.CallQueue, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CallQueueAssignment":
					base.PerformRelatedEntityRemoval(this.CallQueueAssignment, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CallQueueCustomer__":
					base.PerformRelatedEntityRemoval(this.CallQueueCustomer__, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CallQueueCustomer_":
					base.PerformRelatedEntityRemoval(this.CallQueueCustomer_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CallQueueCustomer":
					base.PerformRelatedEntityRemoval(this.CallQueueCustomer, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CallQueueCustomerLock":
					base.PerformRelatedEntityRemoval(this.CallQueueCustomerLock, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CallQueueCustomTag":
					base.PerformRelatedEntityRemoval(this.CallQueueCustomTag, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CallRoundCallQueue":
					base.PerformRelatedEntityRemoval(this.CallRoundCallQueue, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Calls":
					base.PerformRelatedEntityRemoval(this.Calls, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CallUpload":
					base.PerformRelatedEntityRemoval(this.CallUpload, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Campaign_":
					base.PerformRelatedEntityRemoval(this.Campaign_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Campaign":
					base.PerformRelatedEntityRemoval(this.Campaign, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CampaignActivity_":
					base.PerformRelatedEntityRemoval(this.CampaignActivity_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CampaignActivity":
					base.PerformRelatedEntityRemoval(this.CampaignActivity, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CampaignActivityAssignment":
					base.PerformRelatedEntityRemoval(this.CampaignActivityAssignment, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CampaignAssignment":
					base.PerformRelatedEntityRemoval(this.CampaignAssignment, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CdcontentGeneratorTracking":
					base.PerformRelatedEntityRemoval(this.CdcontentGeneratorTracking, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "ChaperoneAnswer_":
					base.PerformRelatedEntityRemoval(this.ChaperoneAnswer_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "ChaperoneAnswer":
					base.PerformRelatedEntityRemoval(this.ChaperoneAnswer, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "ChaperoneSignature":
					base.PerformRelatedEntityRemoval(this.ChaperoneSignature, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Check_":
					base.PerformRelatedEntityRemoval(this.Check_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Check":
					base.PerformRelatedEntityRemoval(this.Check, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CheckListAnswer_":
					base.PerformRelatedEntityRemoval(this.CheckListAnswer_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CheckListAnswer":
					base.PerformRelatedEntityRemoval(this.CheckListAnswer, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CheckListTemplate_":
					base.PerformRelatedEntityRemoval(this.CheckListTemplate_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CheckListTemplate":
					base.PerformRelatedEntityRemoval(this.CheckListTemplate, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "ClinicalTestQualificationCriteria_":
					base.PerformRelatedEntityRemoval(this.ClinicalTestQualificationCriteria_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "ClinicalTestQualificationCriteria":
					base.PerformRelatedEntityRemoval(this.ClinicalTestQualificationCriteria, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "ContactCall_":
					base.PerformRelatedEntityRemoval(this.ContactCall_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "ContactCall":
					base.PerformRelatedEntityRemoval(this.ContactCall, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "ContactMeeting_":
					base.PerformRelatedEntityRemoval(this.ContactMeeting_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "ContactMeeting":
					base.PerformRelatedEntityRemoval(this.ContactMeeting, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Content_":
					base.PerformRelatedEntityRemoval(this.Content_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Content":
					base.PerformRelatedEntityRemoval(this.Content, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CorporateTag_":
					base.PerformRelatedEntityRemoval(this.CorporateTag_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CorporateTag":
					base.PerformRelatedEntityRemoval(this.CorporateTag, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CorporateUpload":
					base.PerformRelatedEntityRemoval(this.CorporateUpload, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Coupons_":
					base.PerformRelatedEntityRemoval(this.Coupons_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Coupons":
					base.PerformRelatedEntityRemoval(this.Coupons, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CurrentMedication":
					base.PerformRelatedEntityRemoval(this.CurrentMedication, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerActivityTypeUpload":
					base.PerformRelatedEntityRemoval(this.CustomerActivityTypeUpload, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerCallAttempts":
					base.PerformRelatedEntityRemoval(this.CustomerCallAttempts, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerCallQueueCallAttempt":
					base.PerformRelatedEntityRemoval(this.CustomerCallQueueCallAttempt, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerClinicalQuestionAnswer_":
					base.PerformRelatedEntityRemoval(this.CustomerClinicalQuestionAnswer_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerClinicalQuestionAnswer":
					base.PerformRelatedEntityRemoval(this.CustomerClinicalQuestionAnswer, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerEligibility_":
					base.PerformRelatedEntityRemoval(this.CustomerEligibility_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerEligibility":
					base.PerformRelatedEntityRemoval(this.CustomerEligibility, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerEventCriticalTestData_":
					base.PerformRelatedEntityRemoval(this.CustomerEventCriticalTestData_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerEventCriticalTestData":
					base.PerformRelatedEntityRemoval(this.CustomerEventCriticalTestData, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerEventPriorityInQueueData_":
					base.PerformRelatedEntityRemoval(this.CustomerEventPriorityInQueueData_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerEventPriorityInQueueData":
					base.PerformRelatedEntityRemoval(this.CustomerEventPriorityInQueueData, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerEventReading":
					base.PerformRelatedEntityRemoval(this.CustomerEventReading, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerEventTestPhysicianEvaluation":
					base.PerformRelatedEntityRemoval(this.CustomerEventTestPhysicianEvaluation, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerEventTestState__":
					base.PerformRelatedEntityRemoval(this.CustomerEventTestState__, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerEventTestState_":
					base.PerformRelatedEntityRemoval(this.CustomerEventTestState_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerEventTestState":
					base.PerformRelatedEntityRemoval(this.CustomerEventTestState, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerEventUnableScreenReason":
					base.PerformRelatedEntityRemoval(this.CustomerEventUnableScreenReason, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerHealthInfo":
					base.PerformRelatedEntityRemoval(this.CustomerHealthInfo, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerHealthInfoArchive":
					base.PerformRelatedEntityRemoval(this.CustomerHealthInfoArchive, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerIcdCode":
					base.PerformRelatedEntityRemoval(this.CustomerIcdCode, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerLockForCall":
					base.PerformRelatedEntityRemoval(this.CustomerLockForCall, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerMedicareQuestionAnswer":
					base.PerformRelatedEntityRemoval(this.CustomerMedicareQuestionAnswer, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerPhoneNumberUpdateUpload":
					base.PerformRelatedEntityRemoval(this.CustomerPhoneNumberUpdateUpload, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerPrimaryCarePhysician_":
					base.PerformRelatedEntityRemoval(this.CustomerPrimaryCarePhysician_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerPrimaryCarePhysician__":
					base.PerformRelatedEntityRemoval(this.CustomerPrimaryCarePhysician__, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerPrimaryCarePhysician":
					base.PerformRelatedEntityRemoval(this.CustomerPrimaryCarePhysician, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerProfileHistory":
					base.PerformRelatedEntityRemoval(this.CustomerProfileHistory, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerRegistrationNotes":
					base.PerformRelatedEntityRemoval(this.CustomerRegistrationNotes, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerResultScreeningCommunication__":
					base.PerformRelatedEntityRemoval(this.CustomerResultScreeningCommunication__, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerResultScreeningCommunication_":
					base.PerformRelatedEntityRemoval(this.CustomerResultScreeningCommunication_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerResultScreeningCommunication":
					base.PerformRelatedEntityRemoval(this.CustomerResultScreeningCommunication, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerTag_":
					base.PerformRelatedEntityRemoval(this.CustomerTag_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerTag":
					base.PerformRelatedEntityRemoval(this.CustomerTag, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerTargeted_":
					base.PerformRelatedEntityRemoval(this.CustomerTargeted_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerTargeted":
					base.PerformRelatedEntityRemoval(this.CustomerTargeted, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerWarmTransfer_":
					base.PerformRelatedEntityRemoval(this.CustomerWarmTransfer_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomerWarmTransfer":
					base.PerformRelatedEntityRemoval(this.CustomerWarmTransfer, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "CustomEventNotification":
					base.PerformRelatedEntityRemoval(this.CustomEventNotification, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "DirectMail":
					base.PerformRelatedEntityRemoval(this.DirectMail, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "DirectMailType_":
					base.PerformRelatedEntityRemoval(this.DirectMailType_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "DirectMailType":
					base.PerformRelatedEntityRemoval(this.DirectMailType, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "DisqualifiedTest_":
					base.PerformRelatedEntityRemoval(this.DisqualifiedTest_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "DisqualifiedTest":
					base.PerformRelatedEntityRemoval(this.DisqualifiedTest, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Eligibility":
					base.PerformRelatedEntityRemoval(this.Eligibility, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EligibilityUpload":
					base.PerformRelatedEntityRemoval(this.EligibilityUpload, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EmailTemplate":
					base.PerformRelatedEntityRemoval(this.EmailTemplate, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventAccountTestHcpcsCode_":
					base.PerformRelatedEntityRemoval(this.EventAccountTestHcpcsCode_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventAccountTestHcpcsCode":
					base.PerformRelatedEntityRemoval(this.EventAccountTestHcpcsCode, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventActivityTemplate":
					base.PerformRelatedEntityRemoval(this.EventActivityTemplate, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventActivityTemplateCall":
					base.PerformRelatedEntityRemoval(this.EventActivityTemplateCall, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventActivityTemplateEmail":
					base.PerformRelatedEntityRemoval(this.EventActivityTemplateEmail, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventActivityTemplateMeeting":
					base.PerformRelatedEntityRemoval(this.EventActivityTemplateMeeting, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventActivityTemplateTask":
					base.PerformRelatedEntityRemoval(this.EventActivityTemplateTask, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventAppointment":
					base.PerformRelatedEntityRemoval(this.EventAppointment, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventAppointmentCancellationLog":
					base.PerformRelatedEntityRemoval(this.EventAppointmentCancellationLog, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventAppointmentChangeLog":
					base.PerformRelatedEntityRemoval(this.EventAppointmentChangeLog, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventCustomerBasicBioMetric":
					base.PerformRelatedEntityRemoval(this.EventCustomerBasicBioMetric, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventCustomerGiftCard":
					base.PerformRelatedEntityRemoval(this.EventCustomerGiftCard, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventCustomerPrimaryCarePhysician":
					base.PerformRelatedEntityRemoval(this.EventCustomerPrimaryCarePhysician, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventCustomerQuestionAnswer_":
					base.PerformRelatedEntityRemoval(this.EventCustomerQuestionAnswer_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventCustomerQuestionAnswer":
					base.PerformRelatedEntityRemoval(this.EventCustomerQuestionAnswer, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventCustomerResult___":
					base.PerformRelatedEntityRemoval(this.EventCustomerResult___, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventCustomerResult__":
					base.PerformRelatedEntityRemoval(this.EventCustomerResult__, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventCustomerResult_":
					base.PerformRelatedEntityRemoval(this.EventCustomerResult_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventCustomerResult____":
					base.PerformRelatedEntityRemoval(this.EventCustomerResult____, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventCustomerResult______":
					base.PerformRelatedEntityRemoval(this.EventCustomerResult______, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventCustomerResult_______":
					base.PerformRelatedEntityRemoval(this.EventCustomerResult_______, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventCustomerResult":
					base.PerformRelatedEntityRemoval(this.EventCustomerResult, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventCustomerResult_____":
					base.PerformRelatedEntityRemoval(this.EventCustomerResult_____, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventCustomerResult________":
					base.PerformRelatedEntityRemoval(this.EventCustomerResult________, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventCustomerResultBloodLab":
					base.PerformRelatedEntityRemoval(this.EventCustomerResultBloodLab, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventCustomerResultHistory":
					base.PerformRelatedEntityRemoval(this.EventCustomerResultHistory, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventCustomerResultHistory_":
					base.PerformRelatedEntityRemoval(this.EventCustomerResultHistory_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventCustomerResultHistory__":
					base.PerformRelatedEntityRemoval(this.EventCustomerResultHistory__, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventCustomerRetest":
					base.PerformRelatedEntityRemoval(this.EventCustomerRetest, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventCustomers_":
					base.PerformRelatedEntityRemoval(this.EventCustomers_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventCustomers":
					base.PerformRelatedEntityRemoval(this.EventCustomers, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventCustomerTestNotPerformedNotification":
					base.PerformRelatedEntityRemoval(this.EventCustomerTestNotPerformedNotification, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventNote_":
					base.PerformRelatedEntityRemoval(this.EventNote_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventNote":
					base.PerformRelatedEntityRemoval(this.EventNote, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventPhysicianTest__":
					base.PerformRelatedEntityRemoval(this.EventPhysicianTest__, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventPhysicianTest_":
					base.PerformRelatedEntityRemoval(this.EventPhysicianTest_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventPhysicianTest":
					base.PerformRelatedEntityRemoval(this.EventPhysicianTest, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Events___":
					base.PerformRelatedEntityRemoval(this.Events___, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Events____":
					base.PerformRelatedEntityRemoval(this.Events____, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Events__":
					base.PerformRelatedEntityRemoval(this.Events__, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Events":
					base.PerformRelatedEntityRemoval(this.Events, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Events_":
					base.PerformRelatedEntityRemoval(this.Events_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventStaffAssignment__":
					base.PerformRelatedEntityRemoval(this.EventStaffAssignment__, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventStaffAssignment_":
					base.PerformRelatedEntityRemoval(this.EventStaffAssignment_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "EventStaffAssignment":
					base.PerformRelatedEntityRemoval(this.EventStaffAssignment, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "ExitInterviewAnswer_":
					base.PerformRelatedEntityRemoval(this.ExitInterviewAnswer_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "ExitInterviewAnswer":
					base.PerformRelatedEntityRemoval(this.ExitInterviewAnswer, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "ExitInterviewSignature":
					base.PerformRelatedEntityRemoval(this.ExitInterviewSignature, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "ExportableReportsQueue":
					base.PerformRelatedEntityRemoval(this.ExportableReportsQueue, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "File":
					base.PerformRelatedEntityRemoval(this.File, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "FillEventCallQueue":
					base.PerformRelatedEntityRemoval(this.FillEventCallQueue, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "FluConsentAnswer_":
					base.PerformRelatedEntityRemoval(this.FluConsentAnswer_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "FluConsentAnswer":
					base.PerformRelatedEntityRemoval(this.FluConsentAnswer, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "FluConsentSignature":
					base.PerformRelatedEntityRemoval(this.FluConsentSignature, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "FluConsentTemplate_":
					base.PerformRelatedEntityRemoval(this.FluConsentTemplate_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "FluConsentTemplate":
					base.PerformRelatedEntityRemoval(this.FluConsentTemplate, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "GcNotGivenReason_":
					base.PerformRelatedEntityRemoval(this.GcNotGivenReason_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "GcNotGivenReason":
					base.PerformRelatedEntityRemoval(this.GcNotGivenReason, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "GuardianDetails_":
					base.PerformRelatedEntityRemoval(this.GuardianDetails_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "GuardianDetails":
					base.PerformRelatedEntityRemoval(this.GuardianDetails, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "HafTemplate_":
					base.PerformRelatedEntityRemoval(this.HafTemplate_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "HafTemplate":
					base.PerformRelatedEntityRemoval(this.HafTemplate, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "HcpcsCode_":
					base.PerformRelatedEntityRemoval(this.HcpcsCode_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "HcpcsCode":
					base.PerformRelatedEntityRemoval(this.HcpcsCode, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "HealthPlanCallQueueCriteria__":
					base.PerformRelatedEntityRemoval(this.HealthPlanCallQueueCriteria__, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "HealthPlanCallQueueCriteria_":
					base.PerformRelatedEntityRemoval(this.HealthPlanCallQueueCriteria_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "HealthPlanCriteriaAssignment__":
					base.PerformRelatedEntityRemoval(this.HealthPlanCriteriaAssignment__, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "HealthPlanCriteriaAssignment_":
					base.PerformRelatedEntityRemoval(this.HealthPlanCriteriaAssignment_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "HealthPlanCriteriaAssignment":
					base.PerformRelatedEntityRemoval(this.HealthPlanCriteriaAssignment, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "HealthPlanCriteriaAssignmentUpload":
					base.PerformRelatedEntityRemoval(this.HealthPlanCriteriaAssignmentUpload, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "HealthPlanCriteriaTeamAssignment_":
					base.PerformRelatedEntityRemoval(this.HealthPlanCriteriaTeamAssignment_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "HealthPlanCriteriaTeamAssignment":
					base.PerformRelatedEntityRemoval(this.HealthPlanCriteriaTeamAssignment, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "HealthPlanRevenue_":
					base.PerformRelatedEntityRemoval(this.HealthPlanRevenue_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "HealthPlanRevenue":
					base.PerformRelatedEntityRemoval(this.HealthPlanRevenue, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "HospitalPartnerCustomer__":
					base.PerformRelatedEntityRemoval(this.HospitalPartnerCustomer__, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "HospitalPartnerCustomer_":
					base.PerformRelatedEntityRemoval(this.HospitalPartnerCustomer_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "HospitalPartnerCustomer":
					base.PerformRelatedEntityRemoval(this.HospitalPartnerCustomer, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "HostFacilityRanking":
					base.PerformRelatedEntityRemoval(this.HostFacilityRanking, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "HostPayment":
					base.PerformRelatedEntityRemoval(this.HostPayment, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "HostPaymentTransaction":
					base.PerformRelatedEntityRemoval(this.HostPaymentTransaction, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "IcdCodes_":
					base.PerformRelatedEntityRemoval(this.IcdCodes_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "IcdCodes":
					base.PerformRelatedEntityRemoval(this.IcdCodes, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "IncidentalFindings":
					base.PerformRelatedEntityRemoval(this.IncidentalFindings, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "KynLabValues_":
					base.PerformRelatedEntityRemoval(this.KynLabValues_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "KynLabValues":
					base.PerformRelatedEntityRemoval(this.KynLabValues, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Lab":
					base.PerformRelatedEntityRemoval(this.Lab, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Language":
					base.PerformRelatedEntityRemoval(this.Language, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "LanguageBarrierCallQueue":
					base.PerformRelatedEntityRemoval(this.LanguageBarrierCallQueue, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "MailRoundCallQueue":
					base.PerformRelatedEntityRemoval(this.MailRoundCallQueue, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "MarketingPrintOrder":
					base.PerformRelatedEntityRemoval(this.MarketingPrintOrder, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Medication_":
					base.PerformRelatedEntityRemoval(this.Medication_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Medication":
					base.PerformRelatedEntityRemoval(this.Medication, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "MedicationUpload":
					base.PerformRelatedEntityRemoval(this.MedicationUpload, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "MergeCustomerUpload":
					base.PerformRelatedEntityRemoval(this.MergeCustomerUpload, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "NoShowCallQueue":
					base.PerformRelatedEntityRemoval(this.NoShowCallQueue, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "NotesDetails_":
					base.PerformRelatedEntityRemoval(this.NotesDetails_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "NotesDetails":
					base.PerformRelatedEntityRemoval(this.NotesDetails, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Notification":
					base.PerformRelatedEntityRemoval(this.Notification, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "NotificationType":
					base.PerformRelatedEntityRemoval(this.NotificationType, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "OrganizationRoleUserTerritory":
					base.PerformRelatedEntityRemoval(this.OrganizationRoleUserTerritory, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "OrgRoleUserActivity":
					base.PerformRelatedEntityRemoval(this.OrgRoleUserActivity, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "ParticipationConsentSignature":
					base.PerformRelatedEntityRemoval(this.ParticipationConsentSignature, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "PasswordChangelog":
					base.PerformRelatedEntityRemoval(this.PasswordChangelog, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "PayPeriod_":
					base.PerformRelatedEntityRemoval(this.PayPeriod_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "PayPeriod":
					base.PerformRelatedEntityRemoval(this.PayPeriod, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "PcpAppointment_":
					base.PerformRelatedEntityRemoval(this.PcpAppointment_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "PcpAppointment":
					base.PerformRelatedEntityRemoval(this.PcpAppointment, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "PcpDisposition_":
					base.PerformRelatedEntityRemoval(this.PcpDisposition_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "PcpDisposition":
					base.PerformRelatedEntityRemoval(this.PcpDisposition, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "PhysicianRecordRequestSignature":
					base.PerformRelatedEntityRemoval(this.PhysicianRecordRequestSignature, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "PinChangelog":
					base.PerformRelatedEntityRemoval(this.PinChangelog, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "PodDefaultTeam":
					base.PerformRelatedEntityRemoval(this.PodDefaultTeam, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "PreApprovedPackage":
					base.PerformRelatedEntityRemoval(this.PreApprovedPackage, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "PreApprovedTest":
					base.PerformRelatedEntityRemoval(this.PreApprovedTest, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "PreAssessmentCallQueueCustomerLock":
					base.PerformRelatedEntityRemoval(this.PreAssessmentCallQueueCustomerLock, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "PreAssessmentCustomerCallQueueCallAttempt":
					base.PerformRelatedEntityRemoval(this.PreAssessmentCustomerCallQueueCallAttempt, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "PreQualificationQuestion":
					base.PerformRelatedEntityRemoval(this.PreQualificationQuestion, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "PreQualificationTestTemplate_":
					base.PerformRelatedEntityRemoval(this.PreQualificationTestTemplate_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "PreQualificationTestTemplate":
					base.PerformRelatedEntityRemoval(this.PreQualificationTestTemplate, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "PrintOrderItemTracking_":
					base.PerformRelatedEntityRemoval(this.PrintOrderItemTracking_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "PrintOrderItemTracking":
					base.PerformRelatedEntityRemoval(this.PrintOrderItemTracking, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "PriorityInQueue_":
					base.PerformRelatedEntityRemoval(this.PriorityInQueue_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "PriorityInQueue":
					base.PerformRelatedEntityRemoval(this.PriorityInQueue, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "ProspectCustomer":
					base.PerformRelatedEntityRemoval(this.ProspectCustomer, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Prospects":
					base.PerformRelatedEntityRemoval(this.Prospects, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "RapsUpload":
					base.PerformRelatedEntityRemoval(this.RapsUpload, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Referral":
					base.PerformRelatedEntityRemoval(this.Referral, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "RefundRequest_":
					base.PerformRelatedEntityRemoval(this.RefundRequest_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "RefundRequest":
					base.PerformRelatedEntityRemoval(this.RefundRequest, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "RequiredTest":
					base.PerformRelatedEntityRemoval(this.RequiredTest, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "SalesRepPodAssigments":
					base.PerformRelatedEntityRemoval(this.SalesRepPodAssigments, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "ScheduleTemplate_":
					base.PerformRelatedEntityRemoval(this.ScheduleTemplate_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "ScheduleTemplate":
					base.PerformRelatedEntityRemoval(this.ScheduleTemplate, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Seminars":
					base.PerformRelatedEntityRemoval(this.Seminars, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "ShippingDetail_":
					base.PerformRelatedEntityRemoval(this.ShippingDetail_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "ShippingDetail":
					base.PerformRelatedEntityRemoval(this.ShippingDetail, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "SourceCodeChangeLog":
					base.PerformRelatedEntityRemoval(this.SourceCodeChangeLog, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "StaffEventScheduleUpload":
					base.PerformRelatedEntityRemoval(this.StaffEventScheduleUpload, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "SurveyAnswer_":
					base.PerformRelatedEntityRemoval(this.SurveyAnswer_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "SurveyAnswer":
					base.PerformRelatedEntityRemoval(this.SurveyAnswer, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "SurveyTemplate_":
					base.PerformRelatedEntityRemoval(this.SurveyTemplate_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "SurveyTemplate":
					base.PerformRelatedEntityRemoval(this.SurveyTemplate, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "SuspectConditionUpload":
					base.PerformRelatedEntityRemoval(this.SuspectConditionUpload, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "SystemGenertedCallQueueCriteria__":
					base.PerformRelatedEntityRemoval(this.SystemGenertedCallQueueCriteria__, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "SystemGenertedCallQueueCriteria_":
					base.PerformRelatedEntityRemoval(this.SystemGenertedCallQueueCriteria_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "SystemGenertedCallQueueCriteria":
					base.PerformRelatedEntityRemoval(this.SystemGenertedCallQueueCriteria, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "TaskDetails__":
					base.PerformRelatedEntityRemoval(this.TaskDetails__, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "TaskDetails_":
					base.PerformRelatedEntityRemoval(this.TaskDetails_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "TaskDetails":
					base.PerformRelatedEntityRemoval(this.TaskDetails, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "Territory":
					base.PerformRelatedEntityRemoval(this.Territory, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "TestHcpcsCode_":
					base.PerformRelatedEntityRemoval(this.TestHcpcsCode_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "TestHcpcsCode":
					base.PerformRelatedEntityRemoval(this.TestHcpcsCode, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "TestNotPerformed_":
					base.PerformRelatedEntityRemoval(this.TestNotPerformed_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "TestNotPerformed":
					base.PerformRelatedEntityRemoval(this.TestNotPerformed, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "TestNotPerformedReason":
					base.PerformRelatedEntityRemoval(this.TestNotPerformedReason, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "TestPerformedExternally_":
					base.PerformRelatedEntityRemoval(this.TestPerformedExternally_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "TestPerformedExternally":
					base.PerformRelatedEntityRemoval(this.TestPerformedExternally, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "UncontactedCustomerCallQueue":
					base.PerformRelatedEntityRemoval(this.UncontactedCustomerCallQueue, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "UploadZipInfo":
					base.PerformRelatedEntityRemoval(this.UploadZipInfo, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "User__":
					base.PerformRelatedEntityRemoval(this.User__, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "User_":
					base.PerformRelatedEntityRemoval(this.User_, relatedEntity, signalRelatedEntityManyToOne);
					break;
				case "AccountCoordinatorProfile":
					DesetupSyncAccountCoordinatorProfile(false, true);
					break;
				case "AffiliateProfile_":
					DesetupSyncAffiliateProfile_(false, true);
					break;
				case "CallCenterRepProfile":
					DesetupSyncCallCenterRepProfile(false, true);
					break;
				case "CustomerProfile":
					DesetupSyncCustomerProfile(false, true);
					break;
				case "PhysicianProfile":
					DesetupSyncPhysicianProfile(false, true);
					break;
				case "TechnicianProfile":
					DesetupSyncTechnicianProfile(false, true);
					break;
				default:
					break;
			}
		}

		/// <summary> Gets a collection of related entities referenced by this entity which depend on this entity (this entity is the PK side of their FK fields). These entities will have to be persisted after this entity during a recursive save.</summary>
		/// <returns>Collection with 0 or more IEntity2 objects, referenced by this entity</returns>
		public override List<IEntity2> GetDependingRelatedEntities()
		{
			List<IEntity2> toReturn = new List<IEntity2>();
			if(_accountCoordinatorProfile!=null)
			{
				toReturn.Add(_accountCoordinatorProfile);
			}

			if(_affiliateProfile_!=null)
			{
				toReturn.Add(_affiliateProfile_);
			}

			if(_callCenterRepProfile!=null)
			{
				toReturn.Add(_callCenterRepProfile);
			}

			if(_customerProfile!=null)
			{
				toReturn.Add(_customerProfile);
			}

			if(_physicianProfile!=null)
			{
				toReturn.Add(_physicianProfile);
			}

			if(_technicianProfile!=null)
			{
				toReturn.Add(_technicianProfile);
			}

			return toReturn;
		}
		
		/// <summary> Gets a collection of related entities referenced by this entity which this entity depends on (this entity is the FK side of their PK fields). These
		/// entities will have to be persisted before this entity during a recursive save.</summary>
		/// <returns>Collection with 0 or more IEntity2 objects, referenced by this entity</returns>
		public override List<IEntity2> GetDependentRelatedEntities()
		{
			List<IEntity2> toReturn = new List<IEntity2>();
			if(_organization!=null)
			{
				toReturn.Add(_organization);
			}
			if(_role!=null)
			{
				toReturn.Add(_role);
			}
			if(_user!=null)
			{
				toReturn.Add(_user);
			}












			return toReturn;
		}
		
		/// <summary>Gets a list of all entity collections stored as member variables in this entity. The contents of the ArrayList is used by the DataAccessAdapter to perform recursive saves. Only 1:n related collections are returned.</summary>
		/// <returns>Collection with 0 or more IEntityCollection2 objects, referenced by this entity</returns>
		public override List<IEntityCollection2> GetMemberEntityCollections()
		{
			List<IEntityCollection2> toReturn = new List<IEntityCollection2>();
			toReturn.Add(this.AccountCallCenterOrganization_);
			toReturn.Add(this.AccountCallCenterOrganization);
			toReturn.Add(this.AccountHraChatQuestionnaire_);
			toReturn.Add(this.AccountHraChatQuestionnaire);
			toReturn.Add(this.AccountTestHcpcsCode_);
			toReturn.Add(this.AccountTestHcpcsCode);
			toReturn.Add(this.ActivityType);
			toReturn.Add(this.AdditionalFields_);
			toReturn.Add(this.AdditionalFields);
			toReturn.Add(this.Address);
			toReturn.Add(this.AdvocateManagerTeam_);
			toReturn.Add(this.AdvocateManagerTeam);
			toReturn.Add(this.Afcampaign_);
			toReturn.Add(this.Afcampaign);
			toReturn.Add(this.AffiliateProfile);
			toReturn.Add(this.ApplicationAuthentication_);
			toReturn.Add(this.ApplicationAuthentication);
			toReturn.Add(this.Barrier_);
			toReturn.Add(this.Barrier);
			toReturn.Add(this.CallCenterAgentTeam);
			toReturn.Add(this.CallCenterAgentTeamLog__);
			toReturn.Add(this.CallCenterAgentTeamLog_);
			toReturn.Add(this.CallCenterAgentTeamLog);
			toReturn.Add(this.CallCenterTeam_);
			toReturn.Add(this.CallCenterTeam);
			toReturn.Add(this.CallQueue_);
			toReturn.Add(this.CallQueue);
			toReturn.Add(this.CallQueueAssignment);
			toReturn.Add(this.CallQueueCustomer__);
			toReturn.Add(this.CallQueueCustomer_);
			toReturn.Add(this.CallQueueCustomer);
			toReturn.Add(this.CallQueueCustomerLock);
			toReturn.Add(this.CallQueueCustomTag);
			toReturn.Add(this.CallRoundCallQueue);
			toReturn.Add(this.Calls);
			toReturn.Add(this.CallUpload);
			toReturn.Add(this.Campaign_);
			toReturn.Add(this.Campaign);
			toReturn.Add(this.CampaignActivity_);
			toReturn.Add(this.CampaignActivity);
			toReturn.Add(this.CampaignActivityAssignment);
			toReturn.Add(this.CampaignAssignment);
			toReturn.Add(this.CdcontentGeneratorTracking);
			toReturn.Add(this.ChaperoneAnswer_);
			toReturn.Add(this.ChaperoneAnswer);
			toReturn.Add(this.ChaperoneSignature);
			toReturn.Add(this.Check_);
			toReturn.Add(this.Check);
			toReturn.Add(this.CheckListAnswer_);
			toReturn.Add(this.CheckListAnswer);
			toReturn.Add(this.CheckListTemplate_);
			toReturn.Add(this.CheckListTemplate);
			toReturn.Add(this.ClinicalTestQualificationCriteria_);
			toReturn.Add(this.ClinicalTestQualificationCriteria);
			toReturn.Add(this.ContactCall_);
			toReturn.Add(this.ContactCall);
			toReturn.Add(this.ContactMeeting_);
			toReturn.Add(this.ContactMeeting);
			toReturn.Add(this.Content_);
			toReturn.Add(this.Content);
			toReturn.Add(this.CorporateTag_);
			toReturn.Add(this.CorporateTag);
			toReturn.Add(this.CorporateUpload);
			toReturn.Add(this.Coupons_);
			toReturn.Add(this.Coupons);
			toReturn.Add(this.CurrentMedication);
			toReturn.Add(this.CustomerActivityTypeUpload);
			toReturn.Add(this.CustomerCallAttempts);
			toReturn.Add(this.CustomerCallQueueCallAttempt);
			toReturn.Add(this.CustomerClinicalQuestionAnswer_);
			toReturn.Add(this.CustomerClinicalQuestionAnswer);
			toReturn.Add(this.CustomerEligibility_);
			toReturn.Add(this.CustomerEligibility);
			toReturn.Add(this.CustomerEventCriticalTestData_);
			toReturn.Add(this.CustomerEventCriticalTestData);
			toReturn.Add(this.CustomerEventPriorityInQueueData_);
			toReturn.Add(this.CustomerEventPriorityInQueueData);
			toReturn.Add(this.CustomerEventReading);
			toReturn.Add(this.CustomerEventTestPhysicianEvaluation);
			toReturn.Add(this.CustomerEventTestState__);
			toReturn.Add(this.CustomerEventTestState_);
			toReturn.Add(this.CustomerEventTestState);
			toReturn.Add(this.CustomerEventUnableScreenReason);
			toReturn.Add(this.CustomerHealthInfo);
			toReturn.Add(this.CustomerHealthInfoArchive);
			toReturn.Add(this.CustomerIcdCode);
			toReturn.Add(this.CustomerLockForCall);
			toReturn.Add(this.CustomerMedicareQuestionAnswer);
			toReturn.Add(this.CustomerPhoneNumberUpdateUpload);
			toReturn.Add(this.CustomerPrimaryCarePhysician_);
			toReturn.Add(this.CustomerPrimaryCarePhysician__);
			toReturn.Add(this.CustomerPrimaryCarePhysician);
			toReturn.Add(this.CustomerProfileHistory);
			toReturn.Add(this.CustomerRegistrationNotes);
			toReturn.Add(this.CustomerResultScreeningCommunication__);
			toReturn.Add(this.CustomerResultScreeningCommunication_);
			toReturn.Add(this.CustomerResultScreeningCommunication);
			toReturn.Add(this.CustomerTag_);
			toReturn.Add(this.CustomerTag);
			toReturn.Add(this.CustomerTargeted_);
			toReturn.Add(this.CustomerTargeted);
			toReturn.Add(this.CustomerWarmTransfer_);
			toReturn.Add(this.CustomerWarmTransfer);
			toReturn.Add(this.CustomEventNotification);
			toReturn.Add(this.DirectMail);
			toReturn.Add(this.DirectMailType_);
			toReturn.Add(this.DirectMailType);
			toReturn.Add(this.DisqualifiedTest_);
			toReturn.Add(this.DisqualifiedTest);
			toReturn.Add(this.Eligibility);
			toReturn.Add(this.EligibilityUpload);
			toReturn.Add(this.EmailTemplate);
			toReturn.Add(this.EventAccountTestHcpcsCode_);
			toReturn.Add(this.EventAccountTestHcpcsCode);
			toReturn.Add(this.EventActivityTemplate);
			toReturn.Add(this.EventActivityTemplateCall);
			toReturn.Add(this.EventActivityTemplateEmail);
			toReturn.Add(this.EventActivityTemplateMeeting);
			toReturn.Add(this.EventActivityTemplateTask);
			toReturn.Add(this.EventAppointment);
			toReturn.Add(this.EventAppointmentCancellationLog);
			toReturn.Add(this.EventAppointmentChangeLog);
			toReturn.Add(this.EventCustomerBasicBioMetric);
			toReturn.Add(this.EventCustomerGiftCard);
			toReturn.Add(this.EventCustomerPrimaryCarePhysician);
			toReturn.Add(this.EventCustomerQuestionAnswer_);
			toReturn.Add(this.EventCustomerQuestionAnswer);
			toReturn.Add(this.EventCustomerResult___);
			toReturn.Add(this.EventCustomerResult__);
			toReturn.Add(this.EventCustomerResult_);
			toReturn.Add(this.EventCustomerResult____);
			toReturn.Add(this.EventCustomerResult______);
			toReturn.Add(this.EventCustomerResult_______);
			toReturn.Add(this.EventCustomerResult);
			toReturn.Add(this.EventCustomerResult_____);
			toReturn.Add(this.EventCustomerResult________);
			toReturn.Add(this.EventCustomerResultBloodLab);
			toReturn.Add(this.EventCustomerResultHistory);
			toReturn.Add(this.EventCustomerResultHistory_);
			toReturn.Add(this.EventCustomerResultHistory__);
			toReturn.Add(this.EventCustomerRetest);
			toReturn.Add(this.EventCustomers_);
			toReturn.Add(this.EventCustomers);
			toReturn.Add(this.EventCustomerTestNotPerformedNotification);
			toReturn.Add(this.EventNote_);
			toReturn.Add(this.EventNote);
			toReturn.Add(this.EventPhysicianTest__);
			toReturn.Add(this.EventPhysicianTest_);
			toReturn.Add(this.EventPhysicianTest);
			toReturn.Add(this.Events___);
			toReturn.Add(this.Events____);
			toReturn.Add(this.Events__);
			toReturn.Add(this.Events);
			toReturn.Add(this.Events_);
			toReturn.Add(this.EventStaffAssignment__);
			toReturn.Add(this.EventStaffAssignment_);
			toReturn.Add(this.EventStaffAssignment);
			toReturn.Add(this.ExitInterviewAnswer_);
			toReturn.Add(this.ExitInterviewAnswer);
			toReturn.Add(this.ExitInterviewSignature);
			toReturn.Add(this.ExportableReportsQueue);
			toReturn.Add(this.File);
			toReturn.Add(this.FillEventCallQueue);
			toReturn.Add(this.FluConsentAnswer_);
			toReturn.Add(this.FluConsentAnswer);
			toReturn.Add(this.FluConsentSignature);
			toReturn.Add(this.FluConsentTemplate_);
			toReturn.Add(this.FluConsentTemplate);
			toReturn.Add(this.GcNotGivenReason_);
			toReturn.Add(this.GcNotGivenReason);
			toReturn.Add(this.GuardianDetails_);
			toReturn.Add(this.GuardianDetails);
			toReturn.Add(this.HafTemplate_);
			toReturn.Add(this.HafTemplate);
			toReturn.Add(this.HcpcsCode_);
			toReturn.Add(this.HcpcsCode);
			toReturn.Add(this.HealthPlanCallQueueCriteria__);
			toReturn.Add(this.HealthPlanCallQueueCriteria_);
			toReturn.Add(this.HealthPlanCriteriaAssignment__);
			toReturn.Add(this.HealthPlanCriteriaAssignment_);
			toReturn.Add(this.HealthPlanCriteriaAssignment);
			toReturn.Add(this.HealthPlanCriteriaAssignmentUpload);
			toReturn.Add(this.HealthPlanCriteriaTeamAssignment_);
			toReturn.Add(this.HealthPlanCriteriaTeamAssignment);
			toReturn.Add(this.HealthPlanRevenue_);
			toReturn.Add(this.HealthPlanRevenue);
			toReturn.Add(this.HospitalPartnerCustomer__);
			toReturn.Add(this.HospitalPartnerCustomer_);
			toReturn.Add(this.HospitalPartnerCustomer);
			toReturn.Add(this.HostFacilityRanking);
			toReturn.Add(this.HostPayment);
			toReturn.Add(this.HostPaymentTransaction);
			toReturn.Add(this.IcdCodes_);
			toReturn.Add(this.IcdCodes);
			toReturn.Add(this.IncidentalFindings);
			toReturn.Add(this.KynLabValues_);
			toReturn.Add(this.KynLabValues);
			toReturn.Add(this.Lab);
			toReturn.Add(this.Language);
			toReturn.Add(this.LanguageBarrierCallQueue);
			toReturn.Add(this.MailRoundCallQueue);
			toReturn.Add(this.MarketingPrintOrder);
			toReturn.Add(this.Medication_);
			toReturn.Add(this.Medication);
			toReturn.Add(this.MedicationUpload);
			toReturn.Add(this.MergeCustomerUpload);
			toReturn.Add(this.NoShowCallQueue);
			toReturn.Add(this.NotesDetails_);
			toReturn.Add(this.NotesDetails);
			toReturn.Add(this.Notification);
			toReturn.Add(this.NotificationType);
			toReturn.Add(this.OrganizationRoleUserTerritory);
			toReturn.Add(this.OrgRoleUserActivity);
			toReturn.Add(this.ParticipationConsentSignature);
			toReturn.Add(this.PasswordChangelog);
			toReturn.Add(this.PayPeriod_);
			toReturn.Add(this.PayPeriod);
			toReturn.Add(this.PcpAppointment_);
			toReturn.Add(this.PcpAppointment);
			toReturn.Add(this.PcpDisposition_);
			toReturn.Add(this.PcpDisposition);
			toReturn.Add(this.PhysicianRecordRequestSignature);
			toReturn.Add(this.PinChangelog);
			toReturn.Add(this.PodDefaultTeam);
			toReturn.Add(this.PreApprovedPackage);
			toReturn.Add(this.PreApprovedTest);
			toReturn.Add(this.PreAssessmentCallQueueCustomerLock);
			toReturn.Add(this.PreAssessmentCustomerCallQueueCallAttempt);
			toReturn.Add(this.PreQualificationQuestion);
			toReturn.Add(this.PreQualificationTestTemplate_);
			toReturn.Add(this.PreQualificationTestTemplate);
			toReturn.Add(this.PrintOrderItemTracking_);
			toReturn.Add(this.PrintOrderItemTracking);
			toReturn.Add(this.PriorityInQueue_);
			toReturn.Add(this.PriorityInQueue);
			toReturn.Add(this.ProspectCustomer);
			toReturn.Add(this.Prospects);
			toReturn.Add(this.RapsUpload);
			toReturn.Add(this.Referral);
			toReturn.Add(this.RefundRequest_);
			toReturn.Add(this.RefundRequest);
			toReturn.Add(this.RequiredTest);
			toReturn.Add(this.SalesRepPodAssigments);
			toReturn.Add(this.ScheduleTemplate_);
			toReturn.Add(this.ScheduleTemplate);
			toReturn.Add(this.Seminars);
			toReturn.Add(this.ShippingDetail_);
			toReturn.Add(this.ShippingDetail);
			toReturn.Add(this.SourceCodeChangeLog);
			toReturn.Add(this.StaffEventScheduleUpload);
			toReturn.Add(this.SurveyAnswer_);
			toReturn.Add(this.SurveyAnswer);
			toReturn.Add(this.SurveyTemplate_);
			toReturn.Add(this.SurveyTemplate);
			toReturn.Add(this.SuspectConditionUpload);
			toReturn.Add(this.SystemGenertedCallQueueCriteria__);
			toReturn.Add(this.SystemGenertedCallQueueCriteria_);
			toReturn.Add(this.SystemGenertedCallQueueCriteria);
			toReturn.Add(this.TaskDetails__);
			toReturn.Add(this.TaskDetails_);
			toReturn.Add(this.TaskDetails);
			toReturn.Add(this.Territory);
			toReturn.Add(this.TestHcpcsCode_);
			toReturn.Add(this.TestHcpcsCode);
			toReturn.Add(this.TestNotPerformed_);
			toReturn.Add(this.TestNotPerformed);
			toReturn.Add(this.TestNotPerformedReason);
			toReturn.Add(this.TestPerformedExternally_);
			toReturn.Add(this.TestPerformedExternally);
			toReturn.Add(this.UncontactedCustomerCallQueue);
			toReturn.Add(this.UploadZipInfo);
			toReturn.Add(this.User__);
			toReturn.Add(this.User_);

			return toReturn;
		}
		


		/// <summary>ISerializable member. Does custom serialization so event handlers do not get serialized. Serializes members of this entity class and uses the base class' implementation to serialize the rest.</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public override void GetObjectData(SerializationInfo info, StreamingContext context)
		{
			if (SerializationHelper.Optimization != SerializationOptimization.Fast) 
			{
				info.AddValue("_accountCallCenterOrganization_", ((_accountCallCenterOrganization_!=null) && (_accountCallCenterOrganization_.Count>0) && !this.MarkedForDeletion)?_accountCallCenterOrganization_:null);
				info.AddValue("_accountCallCenterOrganization", ((_accountCallCenterOrganization!=null) && (_accountCallCenterOrganization.Count>0) && !this.MarkedForDeletion)?_accountCallCenterOrganization:null);
				info.AddValue("_accountHraChatQuestionnaire_", ((_accountHraChatQuestionnaire_!=null) && (_accountHraChatQuestionnaire_.Count>0) && !this.MarkedForDeletion)?_accountHraChatQuestionnaire_:null);
				info.AddValue("_accountHraChatQuestionnaire", ((_accountHraChatQuestionnaire!=null) && (_accountHraChatQuestionnaire.Count>0) && !this.MarkedForDeletion)?_accountHraChatQuestionnaire:null);
				info.AddValue("_accountTestHcpcsCode_", ((_accountTestHcpcsCode_!=null) && (_accountTestHcpcsCode_.Count>0) && !this.MarkedForDeletion)?_accountTestHcpcsCode_:null);
				info.AddValue("_accountTestHcpcsCode", ((_accountTestHcpcsCode!=null) && (_accountTestHcpcsCode.Count>0) && !this.MarkedForDeletion)?_accountTestHcpcsCode:null);
				info.AddValue("_activityType", ((_activityType!=null) && (_activityType.Count>0) && !this.MarkedForDeletion)?_activityType:null);
				info.AddValue("_additionalFields_", ((_additionalFields_!=null) && (_additionalFields_.Count>0) && !this.MarkedForDeletion)?_additionalFields_:null);
				info.AddValue("_additionalFields", ((_additionalFields!=null) && (_additionalFields.Count>0) && !this.MarkedForDeletion)?_additionalFields:null);
				info.AddValue("_address", ((_address!=null) && (_address.Count>0) && !this.MarkedForDeletion)?_address:null);
				info.AddValue("_advocateManagerTeam_", ((_advocateManagerTeam_!=null) && (_advocateManagerTeam_.Count>0) && !this.MarkedForDeletion)?_advocateManagerTeam_:null);
				info.AddValue("_advocateManagerTeam", ((_advocateManagerTeam!=null) && (_advocateManagerTeam.Count>0) && !this.MarkedForDeletion)?_advocateManagerTeam:null);
				info.AddValue("_afcampaign_", ((_afcampaign_!=null) && (_afcampaign_.Count>0) && !this.MarkedForDeletion)?_afcampaign_:null);
				info.AddValue("_afcampaign", ((_afcampaign!=null) && (_afcampaign.Count>0) && !this.MarkedForDeletion)?_afcampaign:null);
				info.AddValue("_affiliateProfile", ((_affiliateProfile!=null) && (_affiliateProfile.Count>0) && !this.MarkedForDeletion)?_affiliateProfile:null);
				info.AddValue("_applicationAuthentication_", ((_applicationAuthentication_!=null) && (_applicationAuthentication_.Count>0) && !this.MarkedForDeletion)?_applicationAuthentication_:null);
				info.AddValue("_applicationAuthentication", ((_applicationAuthentication!=null) && (_applicationAuthentication.Count>0) && !this.MarkedForDeletion)?_applicationAuthentication:null);
				info.AddValue("_barrier_", ((_barrier_!=null) && (_barrier_.Count>0) && !this.MarkedForDeletion)?_barrier_:null);
				info.AddValue("_barrier", ((_barrier!=null) && (_barrier.Count>0) && !this.MarkedForDeletion)?_barrier:null);
				info.AddValue("_callCenterAgentTeam", ((_callCenterAgentTeam!=null) && (_callCenterAgentTeam.Count>0) && !this.MarkedForDeletion)?_callCenterAgentTeam:null);
				info.AddValue("_callCenterAgentTeamLog__", ((_callCenterAgentTeamLog__!=null) && (_callCenterAgentTeamLog__.Count>0) && !this.MarkedForDeletion)?_callCenterAgentTeamLog__:null);
				info.AddValue("_callCenterAgentTeamLog_", ((_callCenterAgentTeamLog_!=null) && (_callCenterAgentTeamLog_.Count>0) && !this.MarkedForDeletion)?_callCenterAgentTeamLog_:null);
				info.AddValue("_callCenterAgentTeamLog", ((_callCenterAgentTeamLog!=null) && (_callCenterAgentTeamLog.Count>0) && !this.MarkedForDeletion)?_callCenterAgentTeamLog:null);
				info.AddValue("_callCenterTeam_", ((_callCenterTeam_!=null) && (_callCenterTeam_.Count>0) && !this.MarkedForDeletion)?_callCenterTeam_:null);
				info.AddValue("_callCenterTeam", ((_callCenterTeam!=null) && (_callCenterTeam.Count>0) && !this.MarkedForDeletion)?_callCenterTeam:null);
				info.AddValue("_callQueue_", ((_callQueue_!=null) && (_callQueue_.Count>0) && !this.MarkedForDeletion)?_callQueue_:null);
				info.AddValue("_callQueue", ((_callQueue!=null) && (_callQueue.Count>0) && !this.MarkedForDeletion)?_callQueue:null);
				info.AddValue("_callQueueAssignment", ((_callQueueAssignment!=null) && (_callQueueAssignment.Count>0) && !this.MarkedForDeletion)?_callQueueAssignment:null);
				info.AddValue("_callQueueCustomer__", ((_callQueueCustomer__!=null) && (_callQueueCustomer__.Count>0) && !this.MarkedForDeletion)?_callQueueCustomer__:null);
				info.AddValue("_callQueueCustomer_", ((_callQueueCustomer_!=null) && (_callQueueCustomer_.Count>0) && !this.MarkedForDeletion)?_callQueueCustomer_:null);
				info.AddValue("_callQueueCustomer", ((_callQueueCustomer!=null) && (_callQueueCustomer.Count>0) && !this.MarkedForDeletion)?_callQueueCustomer:null);
				info.AddValue("_callQueueCustomerLock", ((_callQueueCustomerLock!=null) && (_callQueueCustomerLock.Count>0) && !this.MarkedForDeletion)?_callQueueCustomerLock:null);
				info.AddValue("_callQueueCustomTag", ((_callQueueCustomTag!=null) && (_callQueueCustomTag.Count>0) && !this.MarkedForDeletion)?_callQueueCustomTag:null);
				info.AddValue("_callRoundCallQueue", ((_callRoundCallQueue!=null) && (_callRoundCallQueue.Count>0) && !this.MarkedForDeletion)?_callRoundCallQueue:null);
				info.AddValue("_calls", ((_calls!=null) && (_calls.Count>0) && !this.MarkedForDeletion)?_calls:null);
				info.AddValue("_callUpload", ((_callUpload!=null) && (_callUpload.Count>0) && !this.MarkedForDeletion)?_callUpload:null);
				info.AddValue("_campaign_", ((_campaign_!=null) && (_campaign_.Count>0) && !this.MarkedForDeletion)?_campaign_:null);
				info.AddValue("_campaign", ((_campaign!=null) && (_campaign.Count>0) && !this.MarkedForDeletion)?_campaign:null);
				info.AddValue("_campaignActivity_", ((_campaignActivity_!=null) && (_campaignActivity_.Count>0) && !this.MarkedForDeletion)?_campaignActivity_:null);
				info.AddValue("_campaignActivity", ((_campaignActivity!=null) && (_campaignActivity.Count>0) && !this.MarkedForDeletion)?_campaignActivity:null);
				info.AddValue("_campaignActivityAssignment", ((_campaignActivityAssignment!=null) && (_campaignActivityAssignment.Count>0) && !this.MarkedForDeletion)?_campaignActivityAssignment:null);
				info.AddValue("_campaignAssignment", ((_campaignAssignment!=null) && (_campaignAssignment.Count>0) && !this.MarkedForDeletion)?_campaignAssignment:null);
				info.AddValue("_cdcontentGeneratorTracking", ((_cdcontentGeneratorTracking!=null) && (_cdcontentGeneratorTracking.Count>0) && !this.MarkedForDeletion)?_cdcontentGeneratorTracking:null);
				info.AddValue("_chaperoneAnswer_", ((_chaperoneAnswer_!=null) && (_chaperoneAnswer_.Count>0) && !this.MarkedForDeletion)?_chaperoneAnswer_:null);
				info.AddValue("_chaperoneAnswer", ((_chaperoneAnswer!=null) && (_chaperoneAnswer.Count>0) && !this.MarkedForDeletion)?_chaperoneAnswer:null);
				info.AddValue("_chaperoneSignature", ((_chaperoneSignature!=null) && (_chaperoneSignature.Count>0) && !this.MarkedForDeletion)?_chaperoneSignature:null);
				info.AddValue("_check_", ((_check_!=null) && (_check_.Count>0) && !this.MarkedForDeletion)?_check_:null);
				info.AddValue("_check", ((_check!=null) && (_check.Count>0) && !this.MarkedForDeletion)?_check:null);
				info.AddValue("_checkListAnswer_", ((_checkListAnswer_!=null) && (_checkListAnswer_.Count>0) && !this.MarkedForDeletion)?_checkListAnswer_:null);
				info.AddValue("_checkListAnswer", ((_checkListAnswer!=null) && (_checkListAnswer.Count>0) && !this.MarkedForDeletion)?_checkListAnswer:null);
				info.AddValue("_checkListTemplate_", ((_checkListTemplate_!=null) && (_checkListTemplate_.Count>0) && !this.MarkedForDeletion)?_checkListTemplate_:null);
				info.AddValue("_checkListTemplate", ((_checkListTemplate!=null) && (_checkListTemplate.Count>0) && !this.MarkedForDeletion)?_checkListTemplate:null);
				info.AddValue("_clinicalTestQualificationCriteria_", ((_clinicalTestQualificationCriteria_!=null) && (_clinicalTestQualificationCriteria_.Count>0) && !this.MarkedForDeletion)?_clinicalTestQualificationCriteria_:null);
				info.AddValue("_clinicalTestQualificationCriteria", ((_clinicalTestQualificationCriteria!=null) && (_clinicalTestQualificationCriteria.Count>0) && !this.MarkedForDeletion)?_clinicalTestQualificationCriteria:null);
				info.AddValue("_contactCall_", ((_contactCall_!=null) && (_contactCall_.Count>0) && !this.MarkedForDeletion)?_contactCall_:null);
				info.AddValue("_contactCall", ((_contactCall!=null) && (_contactCall.Count>0) && !this.MarkedForDeletion)?_contactCall:null);
				info.AddValue("_contactMeeting_", ((_contactMeeting_!=null) && (_contactMeeting_.Count>0) && !this.MarkedForDeletion)?_contactMeeting_:null);
				info.AddValue("_contactMeeting", ((_contactMeeting!=null) && (_contactMeeting.Count>0) && !this.MarkedForDeletion)?_contactMeeting:null);
				info.AddValue("_content_", ((_content_!=null) && (_content_.Count>0) && !this.MarkedForDeletion)?_content_:null);
				info.AddValue("_content", ((_content!=null) && (_content.Count>0) && !this.MarkedForDeletion)?_content:null);
				info.AddValue("_corporateTag_", ((_corporateTag_!=null) && (_corporateTag_.Count>0) && !this.MarkedForDeletion)?_corporateTag_:null);
				info.AddValue("_corporateTag", ((_corporateTag!=null) && (_corporateTag.Count>0) && !this.MarkedForDeletion)?_corporateTag:null);
				info.AddValue("_corporateUpload", ((_corporateUpload!=null) && (_corporateUpload.Count>0) && !this.MarkedForDeletion)?_corporateUpload:null);
				info.AddValue("_coupons_", ((_coupons_!=null) && (_coupons_.Count>0) && !this.MarkedForDeletion)?_coupons_:null);
				info.AddValue("_coupons", ((_coupons!=null) && (_coupons.Count>0) && !this.MarkedForDeletion)?_coupons:null);
				info.AddValue("_currentMedication", ((_currentMedication!=null) && (_currentMedication.Count>0) && !this.MarkedForDeletion)?_currentMedication:null);
				info.AddValue("_customerActivityTypeUpload", ((_customerActivityTypeUpload!=null) && (_customerActivityTypeUpload.Count>0) && !this.MarkedForDeletion)?_customerActivityTypeUpload:null);
				info.AddValue("_customerCallAttempts", ((_customerCallAttempts!=null) && (_customerCallAttempts.Count>0) && !this.MarkedForDeletion)?_customerCallAttempts:null);
				info.AddValue("_customerCallQueueCallAttempt", ((_customerCallQueueCallAttempt!=null) && (_customerCallQueueCallAttempt.Count>0) && !this.MarkedForDeletion)?_customerCallQueueCallAttempt:null);
				info.AddValue("_customerClinicalQuestionAnswer_", ((_customerClinicalQuestionAnswer_!=null) && (_customerClinicalQuestionAnswer_.Count>0) && !this.MarkedForDeletion)?_customerClinicalQuestionAnswer_:null);
				info.AddValue("_customerClinicalQuestionAnswer", ((_customerClinicalQuestionAnswer!=null) && (_customerClinicalQuestionAnswer.Count>0) && !this.MarkedForDeletion)?_customerClinicalQuestionAnswer:null);
				info.AddValue("_customerEligibility_", ((_customerEligibility_!=null) && (_customerEligibility_.Count>0) && !this.MarkedForDeletion)?_customerEligibility_:null);
				info.AddValue("_customerEligibility", ((_customerEligibility!=null) && (_customerEligibility.Count>0) && !this.MarkedForDeletion)?_customerEligibility:null);
				info.AddValue("_customerEventCriticalTestData_", ((_customerEventCriticalTestData_!=null) && (_customerEventCriticalTestData_.Count>0) && !this.MarkedForDeletion)?_customerEventCriticalTestData_:null);
				info.AddValue("_customerEventCriticalTestData", ((_customerEventCriticalTestData!=null) && (_customerEventCriticalTestData.Count>0) && !this.MarkedForDeletion)?_customerEventCriticalTestData:null);
				info.AddValue("_customerEventPriorityInQueueData_", ((_customerEventPriorityInQueueData_!=null) && (_customerEventPriorityInQueueData_.Count>0) && !this.MarkedForDeletion)?_customerEventPriorityInQueueData_:null);
				info.AddValue("_customerEventPriorityInQueueData", ((_customerEventPriorityInQueueData!=null) && (_customerEventPriorityInQueueData.Count>0) && !this.MarkedForDeletion)?_customerEventPriorityInQueueData:null);
				info.AddValue("_customerEventReading", ((_customerEventReading!=null) && (_customerEventReading.Count>0) && !this.MarkedForDeletion)?_customerEventReading:null);
				info.AddValue("_customerEventTestPhysicianEvaluation", ((_customerEventTestPhysicianEvaluation!=null) && (_customerEventTestPhysicianEvaluation.Count>0) && !this.MarkedForDeletion)?_customerEventTestPhysicianEvaluation:null);
				info.AddValue("_customerEventTestState__", ((_customerEventTestState__!=null) && (_customerEventTestState__.Count>0) && !this.MarkedForDeletion)?_customerEventTestState__:null);
				info.AddValue("_customerEventTestState_", ((_customerEventTestState_!=null) && (_customerEventTestState_.Count>0) && !this.MarkedForDeletion)?_customerEventTestState_:null);
				info.AddValue("_customerEventTestState", ((_customerEventTestState!=null) && (_customerEventTestState.Count>0) && !this.MarkedForDeletion)?_customerEventTestState:null);
				info.AddValue("_customerEventUnableScreenReason", ((_customerEventUnableScreenReason!=null) && (_customerEventUnableScreenReason.Count>0) && !this.MarkedForDeletion)?_customerEventUnableScreenReason:null);
				info.AddValue("_customerHealthInfo", ((_customerHealthInfo!=null) && (_customerHealthInfo.Count>0) && !this.MarkedForDeletion)?_customerHealthInfo:null);
				info.AddValue("_customerHealthInfoArchive", ((_customerHealthInfoArchive!=null) && (_customerHealthInfoArchive.Count>0) && !this.MarkedForDeletion)?_customerHealthInfoArchive:null);
				info.AddValue("_customerIcdCode", ((_customerIcdCode!=null) && (_customerIcdCode.Count>0) && !this.MarkedForDeletion)?_customerIcdCode:null);
				info.AddValue("_customerLockForCall", ((_customerLockForCall!=null) && (_customerLockForCall.Count>0) && !this.MarkedForDeletion)?_customerLockForCall:null);
				info.AddValue("_customerMedicareQuestionAnswer", ((_customerMedicareQuestionAnswer!=null) && (_customerMedicareQuestionAnswer.Count>0) && !this.MarkedForDeletion)?_customerMedicareQuestionAnswer:null);
				info.AddValue("_customerPhoneNumberUpdateUpload", ((_customerPhoneNumberUpdateUpload!=null) && (_customerPhoneNumberUpdateUpload.Count>0) && !this.MarkedForDeletion)?_customerPhoneNumberUpdateUpload:null);
				info.AddValue("_customerPrimaryCarePhysician_", ((_customerPrimaryCarePhysician_!=null) && (_customerPrimaryCarePhysician_.Count>0) && !this.MarkedForDeletion)?_customerPrimaryCarePhysician_:null);
				info.AddValue("_customerPrimaryCarePhysician__", ((_customerPrimaryCarePhysician__!=null) && (_customerPrimaryCarePhysician__.Count>0) && !this.MarkedForDeletion)?_customerPrimaryCarePhysician__:null);
				info.AddValue("_customerPrimaryCarePhysician", ((_customerPrimaryCarePhysician!=null) && (_customerPrimaryCarePhysician.Count>0) && !this.MarkedForDeletion)?_customerPrimaryCarePhysician:null);
				info.AddValue("_customerProfileHistory", ((_customerProfileHistory!=null) && (_customerProfileHistory.Count>0) && !this.MarkedForDeletion)?_customerProfileHistory:null);
				info.AddValue("_customerRegistrationNotes", ((_customerRegistrationNotes!=null) && (_customerRegistrationNotes.Count>0) && !this.MarkedForDeletion)?_customerRegistrationNotes:null);
				info.AddValue("_customerResultScreeningCommunication__", ((_customerResultScreeningCommunication__!=null) && (_customerResultScreeningCommunication__.Count>0) && !this.MarkedForDeletion)?_customerResultScreeningCommunication__:null);
				info.AddValue("_customerResultScreeningCommunication_", ((_customerResultScreeningCommunication_!=null) && (_customerResultScreeningCommunication_.Count>0) && !this.MarkedForDeletion)?_customerResultScreeningCommunication_:null);
				info.AddValue("_customerResultScreeningCommunication", ((_customerResultScreeningCommunication!=null) && (_customerResultScreeningCommunication.Count>0) && !this.MarkedForDeletion)?_customerResultScreeningCommunication:null);
				info.AddValue("_customerTag_", ((_customerTag_!=null) && (_customerTag_.Count>0) && !this.MarkedForDeletion)?_customerTag_:null);
				info.AddValue("_customerTag", ((_customerTag!=null) && (_customerTag.Count>0) && !this.MarkedForDeletion)?_customerTag:null);
				info.AddValue("_customerTargeted_", ((_customerTargeted_!=null) && (_customerTargeted_.Count>0) && !this.MarkedForDeletion)?_customerTargeted_:null);
				info.AddValue("_customerTargeted", ((_customerTargeted!=null) && (_customerTargeted.Count>0) && !this.MarkedForDeletion)?_customerTargeted:null);
				info.AddValue("_customerWarmTransfer_", ((_customerWarmTransfer_!=null) && (_customerWarmTransfer_.Count>0) && !this.MarkedForDeletion)?_customerWarmTransfer_:null);
				info.AddValue("_customerWarmTransfer", ((_customerWarmTransfer!=null) && (_customerWarmTransfer.Count>0) && !this.MarkedForDeletion)?_customerWarmTransfer:null);
				info.AddValue("_customEventNotification", ((_customEventNotification!=null) && (_customEventNotification.Count>0) && !this.MarkedForDeletion)?_customEventNotification:null);
				info.AddValue("_directMail", ((_directMail!=null) && (_directMail.Count>0) && !this.MarkedForDeletion)?_directMail:null);
				info.AddValue("_directMailType_", ((_directMailType_!=null) && (_directMailType_.Count>0) && !this.MarkedForDeletion)?_directMailType_:null);
				info.AddValue("_directMailType", ((_directMailType!=null) && (_directMailType.Count>0) && !this.MarkedForDeletion)?_directMailType:null);
				info.AddValue("_disqualifiedTest_", ((_disqualifiedTest_!=null) && (_disqualifiedTest_.Count>0) && !this.MarkedForDeletion)?_disqualifiedTest_:null);
				info.AddValue("_disqualifiedTest", ((_disqualifiedTest!=null) && (_disqualifiedTest.Count>0) && !this.MarkedForDeletion)?_disqualifiedTest:null);
				info.AddValue("_eligibility", ((_eligibility!=null) && (_eligibility.Count>0) && !this.MarkedForDeletion)?_eligibility:null);
				info.AddValue("_eligibilityUpload", ((_eligibilityUpload!=null) && (_eligibilityUpload.Count>0) && !this.MarkedForDeletion)?_eligibilityUpload:null);
				info.AddValue("_emailTemplate", ((_emailTemplate!=null) && (_emailTemplate.Count>0) && !this.MarkedForDeletion)?_emailTemplate:null);
				info.AddValue("_eventAccountTestHcpcsCode_", ((_eventAccountTestHcpcsCode_!=null) && (_eventAccountTestHcpcsCode_.Count>0) && !this.MarkedForDeletion)?_eventAccountTestHcpcsCode_:null);
				info.AddValue("_eventAccountTestHcpcsCode", ((_eventAccountTestHcpcsCode!=null) && (_eventAccountTestHcpcsCode.Count>0) && !this.MarkedForDeletion)?_eventAccountTestHcpcsCode:null);
				info.AddValue("_eventActivityTemplate", ((_eventActivityTemplate!=null) && (_eventActivityTemplate.Count>0) && !this.MarkedForDeletion)?_eventActivityTemplate:null);
				info.AddValue("_eventActivityTemplateCall", ((_eventActivityTemplateCall!=null) && (_eventActivityTemplateCall.Count>0) && !this.MarkedForDeletion)?_eventActivityTemplateCall:null);
				info.AddValue("_eventActivityTemplateEmail", ((_eventActivityTemplateEmail!=null) && (_eventActivityTemplateEmail.Count>0) && !this.MarkedForDeletion)?_eventActivityTemplateEmail:null);
				info.AddValue("_eventActivityTemplateMeeting", ((_eventActivityTemplateMeeting!=null) && (_eventActivityTemplateMeeting.Count>0) && !this.MarkedForDeletion)?_eventActivityTemplateMeeting:null);
				info.AddValue("_eventActivityTemplateTask", ((_eventActivityTemplateTask!=null) && (_eventActivityTemplateTask.Count>0) && !this.MarkedForDeletion)?_eventActivityTemplateTask:null);
				info.AddValue("_eventAppointment", ((_eventAppointment!=null) && (_eventAppointment.Count>0) && !this.MarkedForDeletion)?_eventAppointment:null);
				info.AddValue("_eventAppointmentCancellationLog", ((_eventAppointmentCancellationLog!=null) && (_eventAppointmentCancellationLog.Count>0) && !this.MarkedForDeletion)?_eventAppointmentCancellationLog:null);
				info.AddValue("_eventAppointmentChangeLog", ((_eventAppointmentChangeLog!=null) && (_eventAppointmentChangeLog.Count>0) && !this.MarkedForDeletion)?_eventAppointmentChangeLog:null);
				info.AddValue("_eventCustomerBasicBioMetric", ((_eventCustomerBasicBioMetric!=null) && (_eventCustomerBasicBioMetric.Count>0) && !this.MarkedForDeletion)?_eventCustomerBasicBioMetric:null);
				info.AddValue("_eventCustomerGiftCard", ((_eventCustomerGiftCard!=null) && (_eventCustomerGiftCard.Count>0) && !this.MarkedForDeletion)?_eventCustomerGiftCard:null);
				info.AddValue("_eventCustomerPrimaryCarePhysician", ((_eventCustomerPrimaryCarePhysician!=null) && (_eventCustomerPrimaryCarePhysician.Count>0) && !this.MarkedForDeletion)?_eventCustomerPrimaryCarePhysician:null);
				info.AddValue("_eventCustomerQuestionAnswer_", ((_eventCustomerQuestionAnswer_!=null) && (_eventCustomerQuestionAnswer_.Count>0) && !this.MarkedForDeletion)?_eventCustomerQuestionAnswer_:null);
				info.AddValue("_eventCustomerQuestionAnswer", ((_eventCustomerQuestionAnswer!=null) && (_eventCustomerQuestionAnswer.Count>0) && !this.MarkedForDeletion)?_eventCustomerQuestionAnswer:null);
				info.AddValue("_eventCustomerResult___", ((_eventCustomerResult___!=null) && (_eventCustomerResult___.Count>0) && !this.MarkedForDeletion)?_eventCustomerResult___:null);
				info.AddValue("_eventCustomerResult__", ((_eventCustomerResult__!=null) && (_eventCustomerResult__.Count>0) && !this.MarkedForDeletion)?_eventCustomerResult__:null);
				info.AddValue("_eventCustomerResult_", ((_eventCustomerResult_!=null) && (_eventCustomerResult_.Count>0) && !this.MarkedForDeletion)?_eventCustomerResult_:null);
				info.AddValue("_eventCustomerResult____", ((_eventCustomerResult____!=null) && (_eventCustomerResult____.Count>0) && !this.MarkedForDeletion)?_eventCustomerResult____:null);
				info.AddValue("_eventCustomerResult______", ((_eventCustomerResult______!=null) && (_eventCustomerResult______.Count>0) && !this.MarkedForDeletion)?_eventCustomerResult______:null);
				info.AddValue("_eventCustomerResult_______", ((_eventCustomerResult_______!=null) && (_eventCustomerResult_______.Count>0) && !this.MarkedForDeletion)?_eventCustomerResult_______:null);
				info.AddValue("_eventCustomerResult", ((_eventCustomerResult!=null) && (_eventCustomerResult.Count>0) && !this.MarkedForDeletion)?_eventCustomerResult:null);
				info.AddValue("_eventCustomerResult_____", ((_eventCustomerResult_____!=null) && (_eventCustomerResult_____.Count>0) && !this.MarkedForDeletion)?_eventCustomerResult_____:null);
				info.AddValue("_eventCustomerResult________", ((_eventCustomerResult________!=null) && (_eventCustomerResult________.Count>0) && !this.MarkedForDeletion)?_eventCustomerResult________:null);
				info.AddValue("_eventCustomerResultBloodLab", ((_eventCustomerResultBloodLab!=null) && (_eventCustomerResultBloodLab.Count>0) && !this.MarkedForDeletion)?_eventCustomerResultBloodLab:null);
				info.AddValue("_eventCustomerResultHistory", ((_eventCustomerResultHistory!=null) && (_eventCustomerResultHistory.Count>0) && !this.MarkedForDeletion)?_eventCustomerResultHistory:null);
				info.AddValue("_eventCustomerResultHistory_", ((_eventCustomerResultHistory_!=null) && (_eventCustomerResultHistory_.Count>0) && !this.MarkedForDeletion)?_eventCustomerResultHistory_:null);
				info.AddValue("_eventCustomerResultHistory__", ((_eventCustomerResultHistory__!=null) && (_eventCustomerResultHistory__.Count>0) && !this.MarkedForDeletion)?_eventCustomerResultHistory__:null);
				info.AddValue("_eventCustomerRetest", ((_eventCustomerRetest!=null) && (_eventCustomerRetest.Count>0) && !this.MarkedForDeletion)?_eventCustomerRetest:null);
				info.AddValue("_eventCustomers_", ((_eventCustomers_!=null) && (_eventCustomers_.Count>0) && !this.MarkedForDeletion)?_eventCustomers_:null);
				info.AddValue("_eventCustomers", ((_eventCustomers!=null) && (_eventCustomers.Count>0) && !this.MarkedForDeletion)?_eventCustomers:null);
				info.AddValue("_eventCustomerTestNotPerformedNotification", ((_eventCustomerTestNotPerformedNotification!=null) && (_eventCustomerTestNotPerformedNotification.Count>0) && !this.MarkedForDeletion)?_eventCustomerTestNotPerformedNotification:null);
				info.AddValue("_eventNote_", ((_eventNote_!=null) && (_eventNote_.Count>0) && !this.MarkedForDeletion)?_eventNote_:null);
				info.AddValue("_eventNote", ((_eventNote!=null) && (_eventNote.Count>0) && !this.MarkedForDeletion)?_eventNote:null);
				info.AddValue("_eventPhysicianTest__", ((_eventPhysicianTest__!=null) && (_eventPhysicianTest__.Count>0) && !this.MarkedForDeletion)?_eventPhysicianTest__:null);
				info.AddValue("_eventPhysicianTest_", ((_eventPhysicianTest_!=null) && (_eventPhysicianTest_.Count>0) && !this.MarkedForDeletion)?_eventPhysicianTest_:null);
				info.AddValue("_eventPhysicianTest", ((_eventPhysicianTest!=null) && (_eventPhysicianTest.Count>0) && !this.MarkedForDeletion)?_eventPhysicianTest:null);
				info.AddValue("_events___", ((_events___!=null) && (_events___.Count>0) && !this.MarkedForDeletion)?_events___:null);
				info.AddValue("_events____", ((_events____!=null) && (_events____.Count>0) && !this.MarkedForDeletion)?_events____:null);
				info.AddValue("_events__", ((_events__!=null) && (_events__.Count>0) && !this.MarkedForDeletion)?_events__:null);
				info.AddValue("_events", ((_events!=null) && (_events.Count>0) && !this.MarkedForDeletion)?_events:null);
				info.AddValue("_events_", ((_events_!=null) && (_events_.Count>0) && !this.MarkedForDeletion)?_events_:null);
				info.AddValue("_eventStaffAssignment__", ((_eventStaffAssignment__!=null) && (_eventStaffAssignment__.Count>0) && !this.MarkedForDeletion)?_eventStaffAssignment__:null);
				info.AddValue("_eventStaffAssignment_", ((_eventStaffAssignment_!=null) && (_eventStaffAssignment_.Count>0) && !this.MarkedForDeletion)?_eventStaffAssignment_:null);
				info.AddValue("_eventStaffAssignment", ((_eventStaffAssignment!=null) && (_eventStaffAssignment.Count>0) && !this.MarkedForDeletion)?_eventStaffAssignment:null);
				info.AddValue("_exitInterviewAnswer_", ((_exitInterviewAnswer_!=null) && (_exitInterviewAnswer_.Count>0) && !this.MarkedForDeletion)?_exitInterviewAnswer_:null);
				info.AddValue("_exitInterviewAnswer", ((_exitInterviewAnswer!=null) && (_exitInterviewAnswer.Count>0) && !this.MarkedForDeletion)?_exitInterviewAnswer:null);
				info.AddValue("_exitInterviewSignature", ((_exitInterviewSignature!=null) && (_exitInterviewSignature.Count>0) && !this.MarkedForDeletion)?_exitInterviewSignature:null);
				info.AddValue("_exportableReportsQueue", ((_exportableReportsQueue!=null) && (_exportableReportsQueue.Count>0) && !this.MarkedForDeletion)?_exportableReportsQueue:null);
				info.AddValue("_file", ((_file!=null) && (_file.Count>0) && !this.MarkedForDeletion)?_file:null);
				info.AddValue("_fillEventCallQueue", ((_fillEventCallQueue!=null) && (_fillEventCallQueue.Count>0) && !this.MarkedForDeletion)?_fillEventCallQueue:null);
				info.AddValue("_fluConsentAnswer_", ((_fluConsentAnswer_!=null) && (_fluConsentAnswer_.Count>0) && !this.MarkedForDeletion)?_fluConsentAnswer_:null);
				info.AddValue("_fluConsentAnswer", ((_fluConsentAnswer!=null) && (_fluConsentAnswer.Count>0) && !this.MarkedForDeletion)?_fluConsentAnswer:null);
				info.AddValue("_fluConsentSignature", ((_fluConsentSignature!=null) && (_fluConsentSignature.Count>0) && !this.MarkedForDeletion)?_fluConsentSignature:null);
				info.AddValue("_fluConsentTemplate_", ((_fluConsentTemplate_!=null) && (_fluConsentTemplate_.Count>0) && !this.MarkedForDeletion)?_fluConsentTemplate_:null);
				info.AddValue("_fluConsentTemplate", ((_fluConsentTemplate!=null) && (_fluConsentTemplate.Count>0) && !this.MarkedForDeletion)?_fluConsentTemplate:null);
				info.AddValue("_gcNotGivenReason_", ((_gcNotGivenReason_!=null) && (_gcNotGivenReason_.Count>0) && !this.MarkedForDeletion)?_gcNotGivenReason_:null);
				info.AddValue("_gcNotGivenReason", ((_gcNotGivenReason!=null) && (_gcNotGivenReason.Count>0) && !this.MarkedForDeletion)?_gcNotGivenReason:null);
				info.AddValue("_guardianDetails_", ((_guardianDetails_!=null) && (_guardianDetails_.Count>0) && !this.MarkedForDeletion)?_guardianDetails_:null);
				info.AddValue("_guardianDetails", ((_guardianDetails!=null) && (_guardianDetails.Count>0) && !this.MarkedForDeletion)?_guardianDetails:null);
				info.AddValue("_hafTemplate_", ((_hafTemplate_!=null) && (_hafTemplate_.Count>0) && !this.MarkedForDeletion)?_hafTemplate_:null);
				info.AddValue("_hafTemplate", ((_hafTemplate!=null) && (_hafTemplate.Count>0) && !this.MarkedForDeletion)?_hafTemplate:null);
				info.AddValue("_hcpcsCode_", ((_hcpcsCode_!=null) && (_hcpcsCode_.Count>0) && !this.MarkedForDeletion)?_hcpcsCode_:null);
				info.AddValue("_hcpcsCode", ((_hcpcsCode!=null) && (_hcpcsCode.Count>0) && !this.MarkedForDeletion)?_hcpcsCode:null);
				info.AddValue("_healthPlanCallQueueCriteria__", ((_healthPlanCallQueueCriteria__!=null) && (_healthPlanCallQueueCriteria__.Count>0) && !this.MarkedForDeletion)?_healthPlanCallQueueCriteria__:null);
				info.AddValue("_healthPlanCallQueueCriteria_", ((_healthPlanCallQueueCriteria_!=null) && (_healthPlanCallQueueCriteria_.Count>0) && !this.MarkedForDeletion)?_healthPlanCallQueueCriteria_:null);
				info.AddValue("_healthPlanCriteriaAssignment__", ((_healthPlanCriteriaAssignment__!=null) && (_healthPlanCriteriaAssignment__.Count>0) && !this.MarkedForDeletion)?_healthPlanCriteriaAssignment__:null);
				info.AddValue("_healthPlanCriteriaAssignment_", ((_healthPlanCriteriaAssignment_!=null) && (_healthPlanCriteriaAssignment_.Count>0) && !this.MarkedForDeletion)?_healthPlanCriteriaAssignment_:null);
				info.AddValue("_healthPlanCriteriaAssignment", ((_healthPlanCriteriaAssignment!=null) && (_healthPlanCriteriaAssignment.Count>0) && !this.MarkedForDeletion)?_healthPlanCriteriaAssignment:null);
				info.AddValue("_healthPlanCriteriaAssignmentUpload", ((_healthPlanCriteriaAssignmentUpload!=null) && (_healthPlanCriteriaAssignmentUpload.Count>0) && !this.MarkedForDeletion)?_healthPlanCriteriaAssignmentUpload:null);
				info.AddValue("_healthPlanCriteriaTeamAssignment_", ((_healthPlanCriteriaTeamAssignment_!=null) && (_healthPlanCriteriaTeamAssignment_.Count>0) && !this.MarkedForDeletion)?_healthPlanCriteriaTeamAssignment_:null);
				info.AddValue("_healthPlanCriteriaTeamAssignment", ((_healthPlanCriteriaTeamAssignment!=null) && (_healthPlanCriteriaTeamAssignment.Count>0) && !this.MarkedForDeletion)?_healthPlanCriteriaTeamAssignment:null);
				info.AddValue("_healthPlanRevenue_", ((_healthPlanRevenue_!=null) && (_healthPlanRevenue_.Count>0) && !this.MarkedForDeletion)?_healthPlanRevenue_:null);
				info.AddValue("_healthPlanRevenue", ((_healthPlanRevenue!=null) && (_healthPlanRevenue.Count>0) && !this.MarkedForDeletion)?_healthPlanRevenue:null);
				info.AddValue("_hospitalPartnerCustomer__", ((_hospitalPartnerCustomer__!=null) && (_hospitalPartnerCustomer__.Count>0) && !this.MarkedForDeletion)?_hospitalPartnerCustomer__:null);
				info.AddValue("_hospitalPartnerCustomer_", ((_hospitalPartnerCustomer_!=null) && (_hospitalPartnerCustomer_.Count>0) && !this.MarkedForDeletion)?_hospitalPartnerCustomer_:null);
				info.AddValue("_hospitalPartnerCustomer", ((_hospitalPartnerCustomer!=null) && (_hospitalPartnerCustomer.Count>0) && !this.MarkedForDeletion)?_hospitalPartnerCustomer:null);
				info.AddValue("_hostFacilityRanking", ((_hostFacilityRanking!=null) && (_hostFacilityRanking.Count>0) && !this.MarkedForDeletion)?_hostFacilityRanking:null);
				info.AddValue("_hostPayment", ((_hostPayment!=null) && (_hostPayment.Count>0) && !this.MarkedForDeletion)?_hostPayment:null);
				info.AddValue("_hostPaymentTransaction", ((_hostPaymentTransaction!=null) && (_hostPaymentTransaction.Count>0) && !this.MarkedForDeletion)?_hostPaymentTransaction:null);
				info.AddValue("_icdCodes_", ((_icdCodes_!=null) && (_icdCodes_.Count>0) && !this.MarkedForDeletion)?_icdCodes_:null);
				info.AddValue("_icdCodes", ((_icdCodes!=null) && (_icdCodes.Count>0) && !this.MarkedForDeletion)?_icdCodes:null);
				info.AddValue("_incidentalFindings", ((_incidentalFindings!=null) && (_incidentalFindings.Count>0) && !this.MarkedForDeletion)?_incidentalFindings:null);
				info.AddValue("_kynLabValues_", ((_kynLabValues_!=null) && (_kynLabValues_.Count>0) && !this.MarkedForDeletion)?_kynLabValues_:null);
				info.AddValue("_kynLabValues", ((_kynLabValues!=null) && (_kynLabValues.Count>0) && !this.MarkedForDeletion)?_kynLabValues:null);
				info.AddValue("_lab", ((_lab!=null) && (_lab.Count>0) && !this.MarkedForDeletion)?_lab:null);
				info.AddValue("_language", ((_language!=null) && (_language.Count>0) && !this.MarkedForDeletion)?_language:null);
				info.AddValue("_languageBarrierCallQueue", ((_languageBarrierCallQueue!=null) && (_languageBarrierCallQueue.Count>0) && !this.MarkedForDeletion)?_languageBarrierCallQueue:null);
				info.AddValue("_mailRoundCallQueue", ((_mailRoundCallQueue!=null) && (_mailRoundCallQueue.Count>0) && !this.MarkedForDeletion)?_mailRoundCallQueue:null);
				info.AddValue("_marketingPrintOrder", ((_marketingPrintOrder!=null) && (_marketingPrintOrder.Count>0) && !this.MarkedForDeletion)?_marketingPrintOrder:null);
				info.AddValue("_medication_", ((_medication_!=null) && (_medication_.Count>0) && !this.MarkedForDeletion)?_medication_:null);
				info.AddValue("_medication", ((_medication!=null) && (_medication.Count>0) && !this.MarkedForDeletion)?_medication:null);
				info.AddValue("_medicationUpload", ((_medicationUpload!=null) && (_medicationUpload.Count>0) && !this.MarkedForDeletion)?_medicationUpload:null);
				info.AddValue("_mergeCustomerUpload", ((_mergeCustomerUpload!=null) && (_mergeCustomerUpload.Count>0) && !this.MarkedForDeletion)?_mergeCustomerUpload:null);
				info.AddValue("_noShowCallQueue", ((_noShowCallQueue!=null) && (_noShowCallQueue.Count>0) && !this.MarkedForDeletion)?_noShowCallQueue:null);
				info.AddValue("_notesDetails_", ((_notesDetails_!=null) && (_notesDetails_.Count>0) && !this.MarkedForDeletion)?_notesDetails_:null);
				info.AddValue("_notesDetails", ((_notesDetails!=null) && (_notesDetails.Count>0) && !this.MarkedForDeletion)?_notesDetails:null);
				info.AddValue("_notification", ((_notification!=null) && (_notification.Count>0) && !this.MarkedForDeletion)?_notification:null);
				info.AddValue("_notificationType", ((_notificationType!=null) && (_notificationType.Count>0) && !this.MarkedForDeletion)?_notificationType:null);
				info.AddValue("_organizationRoleUserTerritory", ((_organizationRoleUserTerritory!=null) && (_organizationRoleUserTerritory.Count>0) && !this.MarkedForDeletion)?_organizationRoleUserTerritory:null);
				info.AddValue("_orgRoleUserActivity", ((_orgRoleUserActivity!=null) && (_orgRoleUserActivity.Count>0) && !this.MarkedForDeletion)?_orgRoleUserActivity:null);
				info.AddValue("_participationConsentSignature", ((_participationConsentSignature!=null) && (_participationConsentSignature.Count>0) && !this.MarkedForDeletion)?_participationConsentSignature:null);
				info.AddValue("_passwordChangelog", ((_passwordChangelog!=null) && (_passwordChangelog.Count>0) && !this.MarkedForDeletion)?_passwordChangelog:null);
				info.AddValue("_payPeriod_", ((_payPeriod_!=null) && (_payPeriod_.Count>0) && !this.MarkedForDeletion)?_payPeriod_:null);
				info.AddValue("_payPeriod", ((_payPeriod!=null) && (_payPeriod.Count>0) && !this.MarkedForDeletion)?_payPeriod:null);
				info.AddValue("_pcpAppointment_", ((_pcpAppointment_!=null) && (_pcpAppointment_.Count>0) && !this.MarkedForDeletion)?_pcpAppointment_:null);
				info.AddValue("_pcpAppointment", ((_pcpAppointment!=null) && (_pcpAppointment.Count>0) && !this.MarkedForDeletion)?_pcpAppointment:null);
				info.AddValue("_pcpDisposition_", ((_pcpDisposition_!=null) && (_pcpDisposition_.Count>0) && !this.MarkedForDeletion)?_pcpDisposition_:null);
				info.AddValue("_pcpDisposition", ((_pcpDisposition!=null) && (_pcpDisposition.Count>0) && !this.MarkedForDeletion)?_pcpDisposition:null);
				info.AddValue("_physicianRecordRequestSignature", ((_physicianRecordRequestSignature!=null) && (_physicianRecordRequestSignature.Count>0) && !this.MarkedForDeletion)?_physicianRecordRequestSignature:null);
				info.AddValue("_pinChangelog", ((_pinChangelog!=null) && (_pinChangelog.Count>0) && !this.MarkedForDeletion)?_pinChangelog:null);
				info.AddValue("_podDefaultTeam", ((_podDefaultTeam!=null) && (_podDefaultTeam.Count>0) && !this.MarkedForDeletion)?_podDefaultTeam:null);
				info.AddValue("_preApprovedPackage", ((_preApprovedPackage!=null) && (_preApprovedPackage.Count>0) && !this.MarkedForDeletion)?_preApprovedPackage:null);
				info.AddValue("_preApprovedTest", ((_preApprovedTest!=null) && (_preApprovedTest.Count>0) && !this.MarkedForDeletion)?_preApprovedTest:null);
				info.AddValue("_preAssessmentCallQueueCustomerLock", ((_preAssessmentCallQueueCustomerLock!=null) && (_preAssessmentCallQueueCustomerLock.Count>0) && !this.MarkedForDeletion)?_preAssessmentCallQueueCustomerLock:null);
				info.AddValue("_preAssessmentCustomerCallQueueCallAttempt", ((_preAssessmentCustomerCallQueueCallAttempt!=null) && (_preAssessmentCustomerCallQueueCallAttempt.Count>0) && !this.MarkedForDeletion)?_preAssessmentCustomerCallQueueCallAttempt:null);
				info.AddValue("_preQualificationQuestion", ((_preQualificationQuestion!=null) && (_preQualificationQuestion.Count>0) && !this.MarkedForDeletion)?_preQualificationQuestion:null);
				info.AddValue("_preQualificationTestTemplate_", ((_preQualificationTestTemplate_!=null) && (_preQualificationTestTemplate_.Count>0) && !this.MarkedForDeletion)?_preQualificationTestTemplate_:null);
				info.AddValue("_preQualificationTestTemplate", ((_preQualificationTestTemplate!=null) && (_preQualificationTestTemplate.Count>0) && !this.MarkedForDeletion)?_preQualificationTestTemplate:null);
				info.AddValue("_printOrderItemTracking_", ((_printOrderItemTracking_!=null) && (_printOrderItemTracking_.Count>0) && !this.MarkedForDeletion)?_printOrderItemTracking_:null);
				info.AddValue("_printOrderItemTracking", ((_printOrderItemTracking!=null) && (_printOrderItemTracking.Count>0) && !this.MarkedForDeletion)?_printOrderItemTracking:null);
				info.AddValue("_priorityInQueue_", ((_priorityInQueue_!=null) && (_priorityInQueue_.Count>0) && !this.MarkedForDeletion)?_priorityInQueue_:null);
				info.AddValue("_priorityInQueue", ((_priorityInQueue!=null) && (_priorityInQueue.Count>0) && !this.MarkedForDeletion)?_priorityInQueue:null);
				info.AddValue("_prospectCustomer", ((_prospectCustomer!=null) && (_prospectCustomer.Count>0) && !this.MarkedForDeletion)?_prospectCustomer:null);
				info.AddValue("_prospects", ((_prospects!=null) && (_prospects.Count>0) && !this.MarkedForDeletion)?_prospects:null);
				info.AddValue("_rapsUpload", ((_rapsUpload!=null) && (_rapsUpload.Count>0) && !this.MarkedForDeletion)?_rapsUpload:null);
				info.AddValue("_referral", ((_referral!=null) && (_referral.Count>0) && !this.MarkedForDeletion)?_referral:null);
				info.AddValue("_refundRequest_", ((_refundRequest_!=null) && (_refundRequest_.Count>0) && !this.MarkedForDeletion)?_refundRequest_:null);
				info.AddValue("_refundRequest", ((_refundRequest!=null) && (_refundRequest.Count>0) && !this.MarkedForDeletion)?_refundRequest:null);
				info.AddValue("_requiredTest", ((_requiredTest!=null) && (_requiredTest.Count>0) && !this.MarkedForDeletion)?_requiredTest:null);
				info.AddValue("_salesRepPodAssigments", ((_salesRepPodAssigments!=null) && (_salesRepPodAssigments.Count>0) && !this.MarkedForDeletion)?_salesRepPodAssigments:null);
				info.AddValue("_scheduleTemplate_", ((_scheduleTemplate_!=null) && (_scheduleTemplate_.Count>0) && !this.MarkedForDeletion)?_scheduleTemplate_:null);
				info.AddValue("_scheduleTemplate", ((_scheduleTemplate!=null) && (_scheduleTemplate.Count>0) && !this.MarkedForDeletion)?_scheduleTemplate:null);
				info.AddValue("_seminars", ((_seminars!=null) && (_seminars.Count>0) && !this.MarkedForDeletion)?_seminars:null);
				info.AddValue("_shippingDetail_", ((_shippingDetail_!=null) && (_shippingDetail_.Count>0) && !this.MarkedForDeletion)?_shippingDetail_:null);
				info.AddValue("_shippingDetail", ((_shippingDetail!=null) && (_shippingDetail.Count>0) && !this.MarkedForDeletion)?_shippingDetail:null);
				info.AddValue("_sourceCodeChangeLog", ((_sourceCodeChangeLog!=null) && (_sourceCodeChangeLog.Count>0) && !this.MarkedForDeletion)?_sourceCodeChangeLog:null);
				info.AddValue("_staffEventScheduleUpload", ((_staffEventScheduleUpload!=null) && (_staffEventScheduleUpload.Count>0) && !this.MarkedForDeletion)?_staffEventScheduleUpload:null);
				info.AddValue("_surveyAnswer_", ((_surveyAnswer_!=null) && (_surveyAnswer_.Count>0) && !this.MarkedForDeletion)?_surveyAnswer_:null);
				info.AddValue("_surveyAnswer", ((_surveyAnswer!=null) && (_surveyAnswer.Count>0) && !this.MarkedForDeletion)?_surveyAnswer:null);
				info.AddValue("_surveyTemplate_", ((_surveyTemplate_!=null) && (_surveyTemplate_.Count>0) && !this.MarkedForDeletion)?_surveyTemplate_:null);
				info.AddValue("_surveyTemplate", ((_surveyTemplate!=null) && (_surveyTemplate.Count>0) && !this.MarkedForDeletion)?_surveyTemplate:null);
				info.AddValue("_suspectConditionUpload", ((_suspectConditionUpload!=null) && (_suspectConditionUpload.Count>0) && !this.MarkedForDeletion)?_suspectConditionUpload:null);
				info.AddValue("_systemGenertedCallQueueCriteria__", ((_systemGenertedCallQueueCriteria__!=null) && (_systemGenertedCallQueueCriteria__.Count>0) && !this.MarkedForDeletion)?_systemGenertedCallQueueCriteria__:null);
				info.AddValue("_systemGenertedCallQueueCriteria_", ((_systemGenertedCallQueueCriteria_!=null) && (_systemGenertedCallQueueCriteria_.Count>0) && !this.MarkedForDeletion)?_systemGenertedCallQueueCriteria_:null);
				info.AddValue("_systemGenertedCallQueueCriteria", ((_systemGenertedCallQueueCriteria!=null) && (_systemGenertedCallQueueCriteria.Count>0) && !this.MarkedForDeletion)?_systemGenertedCallQueueCriteria:null);
				info.AddValue("_taskDetails__", ((_taskDetails__!=null) && (_taskDetails__.Count>0) && !this.MarkedForDeletion)?_taskDetails__:null);
				info.AddValue("_taskDetails_", ((_taskDetails_!=null) && (_taskDetails_.Count>0) && !this.MarkedForDeletion)?_taskDetails_:null);
				info.AddValue("_taskDetails", ((_taskDetails!=null) && (_taskDetails.Count>0) && !this.MarkedForDeletion)?_taskDetails:null);
				info.AddValue("_territory", ((_territory!=null) && (_territory.Count>0) && !this.MarkedForDeletion)?_territory:null);
				info.AddValue("_testHcpcsCode_", ((_testHcpcsCode_!=null) && (_testHcpcsCode_.Count>0) && !this.MarkedForDeletion)?_testHcpcsCode_:null);
				info.AddValue("_testHcpcsCode", ((_testHcpcsCode!=null) && (_testHcpcsCode.Count>0) && !this.MarkedForDeletion)?_testHcpcsCode:null);
				info.AddValue("_testNotPerformed_", ((_testNotPerformed_!=null) && (_testNotPerformed_.Count>0) && !this.MarkedForDeletion)?_testNotPerformed_:null);
				info.AddValue("_testNotPerformed", ((_testNotPerformed!=null) && (_testNotPerformed.Count>0) && !this.MarkedForDeletion)?_testNotPerformed:null);
				info.AddValue("_testNotPerformedReason", ((_testNotPerformedReason!=null) && (_testNotPerformedReason.Count>0) && !this.MarkedForDeletion)?_testNotPerformedReason:null);
				info.AddValue("_testPerformedExternally_", ((_testPerformedExternally_!=null) && (_testPerformedExternally_.Count>0) && !this.MarkedForDeletion)?_testPerformedExternally_:null);
				info.AddValue("_testPerformedExternally", ((_testPerformedExternally!=null) && (_testPerformedExternally.Count>0) && !this.MarkedForDeletion)?_testPerformedExternally:null);
				info.AddValue("_uncontactedCustomerCallQueue", ((_uncontactedCustomerCallQueue!=null) && (_uncontactedCustomerCallQueue.Count>0) && !this.MarkedForDeletion)?_uncontactedCustomerCallQueue:null);
				info.AddValue("_uploadZipInfo", ((_uploadZipInfo!=null) && (_uploadZipInfo.Count>0) && !this.MarkedForDeletion)?_uploadZipInfo:null);
				info.AddValue("_user__", ((_user__!=null) && (_user__.Count>0) && !this.MarkedForDeletion)?_user__:null);
				info.AddValue("_user_", ((_user_!=null) && (_user_.Count>0) && !this.MarkedForDeletion)?_user_:null);
				info.AddValue("_accountCollectionViaFillEventCallQueue", ((_accountCollectionViaFillEventCallQueue!=null) && (_accountCollectionViaFillEventCallQueue.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaFillEventCallQueue:null);
				info.AddValue("_accountCollectionViaMailRoundCallQueue", ((_accountCollectionViaMailRoundCallQueue!=null) && (_accountCollectionViaMailRoundCallQueue.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaMailRoundCallQueue:null);
				info.AddValue("_accountCollectionViaEligibilityUpload", ((_accountCollectionViaEligibilityUpload!=null) && (_accountCollectionViaEligibilityUpload.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaEligibilityUpload:null);
				info.AddValue("_accountCollectionViaCorporateUpload", ((_accountCollectionViaCorporateUpload!=null) && (_accountCollectionViaCorporateUpload.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaCorporateUpload:null);
				info.AddValue("_accountCollectionViaHealthPlanCallQueueCriteria", ((_accountCollectionViaHealthPlanCallQueueCriteria!=null) && (_accountCollectionViaHealthPlanCallQueueCriteria.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaHealthPlanCallQueueCriteria:null);
				info.AddValue("_accountCollectionViaCallQueueCustomer_", ((_accountCollectionViaCallQueueCustomer_!=null) && (_accountCollectionViaCallQueueCustomer_.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaCallQueueCustomer_:null);
				info.AddValue("_accountCollectionViaCallQueueCustomer", ((_accountCollectionViaCallQueueCustomer!=null) && (_accountCollectionViaCallQueueCustomer.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaCallQueueCustomer:null);
				info.AddValue("_accountCollectionViaCallQueueCustomer__", ((_accountCollectionViaCallQueueCustomer__!=null) && (_accountCollectionViaCallQueueCustomer__.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaCallQueueCustomer__:null);
				info.AddValue("_accountCollectionViaHealthPlanRevenue", ((_accountCollectionViaHealthPlanRevenue!=null) && (_accountCollectionViaHealthPlanRevenue.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaHealthPlanRevenue:null);
				info.AddValue("_accountCollectionViaHealthPlanRevenue_", ((_accountCollectionViaHealthPlanRevenue_!=null) && (_accountCollectionViaHealthPlanRevenue_.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaHealthPlanRevenue_:null);
				info.AddValue("_accountCollectionViaCorporateTag_", ((_accountCollectionViaCorporateTag_!=null) && (_accountCollectionViaCorporateTag_.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaCorporateTag_:null);
				info.AddValue("_accountCollectionViaLanguageBarrierCallQueue", ((_accountCollectionViaLanguageBarrierCallQueue!=null) && (_accountCollectionViaLanguageBarrierCallQueue.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaLanguageBarrierCallQueue:null);
				info.AddValue("_accountCollectionViaEventNote", ((_accountCollectionViaEventNote!=null) && (_accountCollectionViaEventNote.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaEventNote:null);
				info.AddValue("_accountCollectionViaCampaign", ((_accountCollectionViaCampaign!=null) && (_accountCollectionViaCampaign.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaCampaign:null);
				info.AddValue("_accountCollectionViaEventNote_", ((_accountCollectionViaEventNote_!=null) && (_accountCollectionViaEventNote_.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaEventNote_:null);
				info.AddValue("_accountCollectionViaCampaign_", ((_accountCollectionViaCampaign_!=null) && (_accountCollectionViaCampaign_.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaCampaign_:null);
				info.AddValue("_accountCollectionViaHealthPlanCallQueueCriteria_", ((_accountCollectionViaHealthPlanCallQueueCriteria_!=null) && (_accountCollectionViaHealthPlanCallQueueCriteria_.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaHealthPlanCallQueueCriteria_:null);
				info.AddValue("_accountCollectionViaCorporateTag", ((_accountCollectionViaCorporateTag!=null) && (_accountCollectionViaCorporateTag.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaCorporateTag:null);
				info.AddValue("_accountCollectionViaCallQueueCustomTag", ((_accountCollectionViaCallQueueCustomTag!=null) && (_accountCollectionViaCallQueueCustomTag.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaCallQueueCustomTag:null);
				info.AddValue("_accountCollectionViaCalls", ((_accountCollectionViaCalls!=null) && (_accountCollectionViaCalls.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaCalls:null);
				info.AddValue("_accountCollectionViaCallRoundCallQueue", ((_accountCollectionViaCallRoundCallQueue!=null) && (_accountCollectionViaCallRoundCallQueue.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaCallRoundCallQueue:null);
				info.AddValue("_accountCollectionViaAccountHraChatQuestionnaire_", ((_accountCollectionViaAccountHraChatQuestionnaire_!=null) && (_accountCollectionViaAccountHraChatQuestionnaire_.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaAccountHraChatQuestionnaire_:null);
				info.AddValue("_accountCollectionViaAccountHraChatQuestionnaire", ((_accountCollectionViaAccountHraChatQuestionnaire!=null) && (_accountCollectionViaAccountHraChatQuestionnaire.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaAccountHraChatQuestionnaire:null);
				info.AddValue("_accountCollectionViaUncontactedCustomerCallQueue", ((_accountCollectionViaUncontactedCustomerCallQueue!=null) && (_accountCollectionViaUncontactedCustomerCallQueue.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaUncontactedCustomerCallQueue:null);
				info.AddValue("_accountCollectionViaCustomEventNotification", ((_accountCollectionViaCustomEventNotification!=null) && (_accountCollectionViaCustomEventNotification.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaCustomEventNotification:null);
				info.AddValue("_accountCollectionViaNoShowCallQueue", ((_accountCollectionViaNoShowCallQueue!=null) && (_accountCollectionViaNoShowCallQueue.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaNoShowCallQueue:null);
				info.AddValue("_accountCollectionViaAccountCallCenterOrganization_", ((_accountCollectionViaAccountCallCenterOrganization_!=null) && (_accountCollectionViaAccountCallCenterOrganization_.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaAccountCallCenterOrganization_:null);
				info.AddValue("_accountCollectionViaAccountCallCenterOrganization", ((_accountCollectionViaAccountCallCenterOrganization!=null) && (_accountCollectionViaAccountCallCenterOrganization.Count>0) && !this.MarkedForDeletion)?_accountCollectionViaAccountCallCenterOrganization:null);
				info.AddValue("_activityCollectionViaOrgRoleUserActivity", ((_activityCollectionViaOrgRoleUserActivity!=null) && (_activityCollectionViaOrgRoleUserActivity.Count>0) && !this.MarkedForDeletion)?_activityCollectionViaOrgRoleUserActivity:null);
				info.AddValue("_activityTypeCollectionViaCallQueueCustomer", ((_activityTypeCollectionViaCallQueueCustomer!=null) && (_activityTypeCollectionViaCallQueueCustomer.Count>0) && !this.MarkedForDeletion)?_activityTypeCollectionViaCallQueueCustomer:null);
				info.AddValue("_activityTypeCollectionViaCallQueueCustomer__", ((_activityTypeCollectionViaCallQueueCustomer__!=null) && (_activityTypeCollectionViaCallQueueCustomer__.Count>0) && !this.MarkedForDeletion)?_activityTypeCollectionViaCallQueueCustomer__:null);
				info.AddValue("_activityTypeCollectionViaCallQueueCustomer_", ((_activityTypeCollectionViaCallQueueCustomer_!=null) && (_activityTypeCollectionViaCallQueueCustomer_.Count>0) && !this.MarkedForDeletion)?_activityTypeCollectionViaCallQueueCustomer_:null);
				info.AddValue("_addressCollectionViaCustomerPrimaryCarePhysician_", ((_addressCollectionViaCustomerPrimaryCarePhysician_!=null) && (_addressCollectionViaCustomerPrimaryCarePhysician_.Count>0) && !this.MarkedForDeletion)?_addressCollectionViaCustomerPrimaryCarePhysician_:null);
				info.AddValue("_addressCollectionViaProspects", ((_addressCollectionViaProspects!=null) && (_addressCollectionViaProspects.Count>0) && !this.MarkedForDeletion)?_addressCollectionViaProspects:null);
				info.AddValue("_addressCollectionViaCustomerPrimaryCarePhysician___", ((_addressCollectionViaCustomerPrimaryCarePhysician___!=null) && (_addressCollectionViaCustomerPrimaryCarePhysician___.Count>0) && !this.MarkedForDeletion)?_addressCollectionViaCustomerPrimaryCarePhysician___:null);
				info.AddValue("_addressCollectionViaCustomerPrimaryCarePhysician____", ((_addressCollectionViaCustomerPrimaryCarePhysician____!=null) && (_addressCollectionViaCustomerPrimaryCarePhysician____.Count>0) && !this.MarkedForDeletion)?_addressCollectionViaCustomerPrimaryCarePhysician____:null);
				info.AddValue("_addressCollectionViaUser", ((_addressCollectionViaUser!=null) && (_addressCollectionViaUser.Count>0) && !this.MarkedForDeletion)?_addressCollectionViaUser:null);
				info.AddValue("_addressCollectionViaUser_", ((_addressCollectionViaUser_!=null) && (_addressCollectionViaUser_.Count>0) && !this.MarkedForDeletion)?_addressCollectionViaUser_:null);
				info.AddValue("_addressCollectionViaShippingDetail", ((_addressCollectionViaShippingDetail!=null) && (_addressCollectionViaShippingDetail.Count>0) && !this.MarkedForDeletion)?_addressCollectionViaShippingDetail:null);
				info.AddValue("_addressCollectionViaHostPayment", ((_addressCollectionViaHostPayment!=null) && (_addressCollectionViaHostPayment.Count>0) && !this.MarkedForDeletion)?_addressCollectionViaHostPayment:null);
				info.AddValue("_addressCollectionViaShippingDetail_", ((_addressCollectionViaShippingDetail_!=null) && (_addressCollectionViaShippingDetail_.Count>0) && !this.MarkedForDeletion)?_addressCollectionViaShippingDetail_:null);
				info.AddValue("_addressCollectionViaCustomerPrimaryCarePhysician", ((_addressCollectionViaCustomerPrimaryCarePhysician!=null) && (_addressCollectionViaCustomerPrimaryCarePhysician.Count>0) && !this.MarkedForDeletion)?_addressCollectionViaCustomerPrimaryCarePhysician:null);
				info.AddValue("_addressCollectionViaCustomerPrimaryCarePhysician__", ((_addressCollectionViaCustomerPrimaryCarePhysician__!=null) && (_addressCollectionViaCustomerPrimaryCarePhysician__.Count>0) && !this.MarkedForDeletion)?_addressCollectionViaCustomerPrimaryCarePhysician__:null);
				info.AddValue("_addressCollectionViaCustomerPrimaryCarePhysician_____", ((_addressCollectionViaCustomerPrimaryCarePhysician_____!=null) && (_addressCollectionViaCustomerPrimaryCarePhysician_____.Count>0) && !this.MarkedForDeletion)?_addressCollectionViaCustomerPrimaryCarePhysician_____:null);
				info.AddValue("_afadvertiserCollectionViaAfcampaign", ((_afadvertiserCollectionViaAfcampaign!=null) && (_afadvertiserCollectionViaAfcampaign.Count>0) && !this.MarkedForDeletion)?_afadvertiserCollectionViaAfcampaign:null);
				info.AddValue("_afadvertiserCollectionViaAfcampaign_", ((_afadvertiserCollectionViaAfcampaign_!=null) && (_afadvertiserCollectionViaAfcampaign_.Count>0) && !this.MarkedForDeletion)?_afadvertiserCollectionViaAfcampaign_:null);
				info.AddValue("_afaffiliateCampaignCollectionViaEventCustomers", ((_afaffiliateCampaignCollectionViaEventCustomers!=null) && (_afaffiliateCampaignCollectionViaEventCustomers.Count>0) && !this.MarkedForDeletion)?_afaffiliateCampaignCollectionViaEventCustomers:null);
				info.AddValue("_afaffiliateCampaignCollectionViaEventCustomers_", ((_afaffiliateCampaignCollectionViaEventCustomers_!=null) && (_afaffiliateCampaignCollectionViaEventCustomers_.Count>0) && !this.MarkedForDeletion)?_afaffiliateCampaignCollectionViaEventCustomers_:null);
				info.AddValue("_afaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer", ((_afaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer!=null) && (_afaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer.Count>0) && !this.MarkedForDeletion)?_afaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer:null);
				info.AddValue("_callCenterTeamCollectionViaCallCenterAgentTeam", ((_callCenterTeamCollectionViaCallCenterAgentTeam!=null) && (_callCenterTeamCollectionViaCallCenterAgentTeam.Count>0) && !this.MarkedForDeletion)?_callCenterTeamCollectionViaCallCenterAgentTeam:null);
				info.AddValue("_callCenterTeamCollectionViaCallCenterAgentTeamLog", ((_callCenterTeamCollectionViaCallCenterAgentTeamLog!=null) && (_callCenterTeamCollectionViaCallCenterAgentTeamLog.Count>0) && !this.MarkedForDeletion)?_callCenterTeamCollectionViaCallCenterAgentTeamLog:null);
				info.AddValue("_callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_", ((_callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_!=null) && (_callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_.Count>0) && !this.MarkedForDeletion)?_callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_:null);
				info.AddValue("_callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment", ((_callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment!=null) && (_callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment.Count>0) && !this.MarkedForDeletion)?_callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment:null);
				info.AddValue("_callCenterTeamCollectionViaCallCenterAgentTeamLog_", ((_callCenterTeamCollectionViaCallCenterAgentTeamLog_!=null) && (_callCenterTeamCollectionViaCallCenterAgentTeamLog_.Count>0) && !this.MarkedForDeletion)?_callCenterTeamCollectionViaCallCenterAgentTeamLog_:null);
				info.AddValue("_callCenterTeamCollectionViaCallCenterAgentTeamLog__", ((_callCenterTeamCollectionViaCallCenterAgentTeamLog__!=null) && (_callCenterTeamCollectionViaCallCenterAgentTeamLog__.Count>0) && !this.MarkedForDeletion)?_callCenterTeamCollectionViaCallCenterAgentTeamLog__:null);
				info.AddValue("_callQueueCollectionViaCallQueueCustomer_", ((_callQueueCollectionViaCallQueueCustomer_!=null) && (_callQueueCollectionViaCallQueueCustomer_.Count>0) && !this.MarkedForDeletion)?_callQueueCollectionViaCallQueueCustomer_:null);
				info.AddValue("_callQueueCollectionViaHealthPlanCallQueueCriteria__", ((_callQueueCollectionViaHealthPlanCallQueueCriteria__!=null) && (_callQueueCollectionViaHealthPlanCallQueueCriteria__.Count>0) && !this.MarkedForDeletion)?_callQueueCollectionViaHealthPlanCallQueueCriteria__:null);
				info.AddValue("_callQueueCollectionViaCallQueueCustomer", ((_callQueueCollectionViaCallQueueCustomer!=null) && (_callQueueCollectionViaCallQueueCustomer.Count>0) && !this.MarkedForDeletion)?_callQueueCollectionViaCallQueueCustomer:null);
				info.AddValue("_callQueueCollectionViaCalls", ((_callQueueCollectionViaCalls!=null) && (_callQueueCollectionViaCalls.Count>0) && !this.MarkedForDeletion)?_callQueueCollectionViaCalls:null);
				info.AddValue("_callQueueCollectionViaCallQueueAssignment", ((_callQueueCollectionViaCallQueueAssignment!=null) && (_callQueueCollectionViaCallQueueAssignment.Count>0) && !this.MarkedForDeletion)?_callQueueCollectionViaCallQueueAssignment:null);
				info.AddValue("_callQueueCollectionViaSystemGenertedCallQueueCriteria__", ((_callQueueCollectionViaSystemGenertedCallQueueCriteria__!=null) && (_callQueueCollectionViaSystemGenertedCallQueueCriteria__.Count>0) && !this.MarkedForDeletion)?_callQueueCollectionViaSystemGenertedCallQueueCriteria__:null);
				info.AddValue("_callQueueCollectionViaSystemGenertedCallQueueCriteria_", ((_callQueueCollectionViaSystemGenertedCallQueueCriteria_!=null) && (_callQueueCollectionViaSystemGenertedCallQueueCriteria_.Count>0) && !this.MarkedForDeletion)?_callQueueCollectionViaSystemGenertedCallQueueCriteria_:null);
				info.AddValue("_callQueueCollectionViaCallQueueCustomer__", ((_callQueueCollectionViaCallQueueCustomer__!=null) && (_callQueueCollectionViaCallQueueCustomer__.Count>0) && !this.MarkedForDeletion)?_callQueueCollectionViaCallQueueCustomer__:null);
				info.AddValue("_callQueueCollectionViaHealthPlanCallQueueCriteria_", ((_callQueueCollectionViaHealthPlanCallQueueCriteria_!=null) && (_callQueueCollectionViaHealthPlanCallQueueCriteria_.Count>0) && !this.MarkedForDeletion)?_callQueueCollectionViaHealthPlanCallQueueCriteria_:null);
				info.AddValue("_callQueueCollectionViaSystemGenertedCallQueueCriteria", ((_callQueueCollectionViaSystemGenertedCallQueueCriteria!=null) && (_callQueueCollectionViaSystemGenertedCallQueueCriteria.Count>0) && !this.MarkedForDeletion)?_callQueueCollectionViaSystemGenertedCallQueueCriteria:null);
				info.AddValue("_callQueueCriteriaCollectionViaCallQueueCustomer", ((_callQueueCriteriaCollectionViaCallQueueCustomer!=null) && (_callQueueCriteriaCollectionViaCallQueueCustomer.Count>0) && !this.MarkedForDeletion)?_callQueueCriteriaCollectionViaCallQueueCustomer:null);
				info.AddValue("_callQueueCriteriaCollectionViaCallQueueCustomer__", ((_callQueueCriteriaCollectionViaCallQueueCustomer__!=null) && (_callQueueCriteriaCollectionViaCallQueueCustomer__.Count>0) && !this.MarkedForDeletion)?_callQueueCriteriaCollectionViaCallQueueCustomer__:null);
				info.AddValue("_callQueueCriteriaCollectionViaCallQueueCustomer_", ((_callQueueCriteriaCollectionViaCallQueueCustomer_!=null) && (_callQueueCriteriaCollectionViaCallQueueCustomer_.Count>0) && !this.MarkedForDeletion)?_callQueueCriteriaCollectionViaCallQueueCustomer_:null);
				info.AddValue("_callQueueCustomerCollectionViaCustomerCallQueueCallAttempt", ((_callQueueCustomerCollectionViaCustomerCallQueueCallAttempt!=null) && (_callQueueCustomerCollectionViaCustomerCallQueueCallAttempt.Count>0) && !this.MarkedForDeletion)?_callQueueCustomerCollectionViaCustomerCallQueueCallAttempt:null);
				info.AddValue("_callsCollectionViaCustomerCallQueueCallAttempt", ((_callsCollectionViaCustomerCallQueueCallAttempt!=null) && (_callsCollectionViaCustomerCallQueueCallAttempt.Count>0) && !this.MarkedForDeletion)?_callsCollectionViaCustomerCallQueueCallAttempt:null);
				info.AddValue("_callsCollectionViaPreAssessmentCustomerCallQueueCallAttempt", ((_callsCollectionViaPreAssessmentCustomerCallQueueCallAttempt!=null) && (_callsCollectionViaPreAssessmentCustomerCallQueueCallAttempt.Count>0) && !this.MarkedForDeletion)?_callsCollectionViaPreAssessmentCustomerCallQueueCallAttempt:null);
				info.AddValue("_callUploadCollectionViaDirectMail", ((_callUploadCollectionViaDirectMail!=null) && (_callUploadCollectionViaDirectMail.Count>0) && !this.MarkedForDeletion)?_callUploadCollectionViaDirectMail:null);
				info.AddValue("_campaignCollectionViaCallQueueCustomer__", ((_campaignCollectionViaCallQueueCustomer__!=null) && (_campaignCollectionViaCallQueueCustomer__.Count>0) && !this.MarkedForDeletion)?_campaignCollectionViaCallQueueCustomer__:null);
				info.AddValue("_campaignCollectionViaCampaignAssignment", ((_campaignCollectionViaCampaignAssignment!=null) && (_campaignCollectionViaCampaignAssignment.Count>0) && !this.MarkedForDeletion)?_campaignCollectionViaCampaignAssignment:null);
				info.AddValue("_campaignCollectionViaCallQueueCustomer", ((_campaignCollectionViaCallQueueCustomer!=null) && (_campaignCollectionViaCallQueueCustomer.Count>0) && !this.MarkedForDeletion)?_campaignCollectionViaCallQueueCustomer:null);
				info.AddValue("_campaignCollectionViaCampaignActivity_", ((_campaignCollectionViaCampaignActivity_!=null) && (_campaignCollectionViaCampaignActivity_.Count>0) && !this.MarkedForDeletion)?_campaignCollectionViaCampaignActivity_:null);
				info.AddValue("_campaignCollectionViaHealthPlanCallQueueCriteria_", ((_campaignCollectionViaHealthPlanCallQueueCriteria_!=null) && (_campaignCollectionViaHealthPlanCallQueueCriteria_.Count>0) && !this.MarkedForDeletion)?_campaignCollectionViaHealthPlanCallQueueCriteria_:null);
				info.AddValue("_campaignCollectionViaCampaignActivity", ((_campaignCollectionViaCampaignActivity!=null) && (_campaignCollectionViaCampaignActivity.Count>0) && !this.MarkedForDeletion)?_campaignCollectionViaCampaignActivity:null);
				info.AddValue("_campaignCollectionViaCalls", ((_campaignCollectionViaCalls!=null) && (_campaignCollectionViaCalls.Count>0) && !this.MarkedForDeletion)?_campaignCollectionViaCalls:null);
				info.AddValue("_campaignCollectionViaEventCustomers_", ((_campaignCollectionViaEventCustomers_!=null) && (_campaignCollectionViaEventCustomers_.Count>0) && !this.MarkedForDeletion)?_campaignCollectionViaEventCustomers_:null);
				info.AddValue("_campaignCollectionViaHealthPlanCallQueueCriteria", ((_campaignCollectionViaHealthPlanCallQueueCriteria!=null) && (_campaignCollectionViaHealthPlanCallQueueCriteria.Count>0) && !this.MarkedForDeletion)?_campaignCollectionViaHealthPlanCallQueueCriteria:null);
				info.AddValue("_campaignCollectionViaDirectMail", ((_campaignCollectionViaDirectMail!=null) && (_campaignCollectionViaDirectMail.Count>0) && !this.MarkedForDeletion)?_campaignCollectionViaDirectMail:null);
				info.AddValue("_campaignCollectionViaCallQueueCustomer_", ((_campaignCollectionViaCallQueueCustomer_!=null) && (_campaignCollectionViaCallQueueCustomer_.Count>0) && !this.MarkedForDeletion)?_campaignCollectionViaCallQueueCustomer_:null);
				info.AddValue("_campaignCollectionViaEventCustomers", ((_campaignCollectionViaEventCustomers!=null) && (_campaignCollectionViaEventCustomers.Count>0) && !this.MarkedForDeletion)?_campaignCollectionViaEventCustomers:null);
				info.AddValue("_campaignActivityCollectionViaCampaignActivityAssignment", ((_campaignActivityCollectionViaCampaignActivityAssignment!=null) && (_campaignActivityCollectionViaCampaignActivityAssignment.Count>0) && !this.MarkedForDeletion)?_campaignActivityCollectionViaCampaignActivityAssignment:null);
				info.AddValue("_chaperoneQuestionCollectionViaChaperoneAnswer", ((_chaperoneQuestionCollectionViaChaperoneAnswer!=null) && (_chaperoneQuestionCollectionViaChaperoneAnswer.Count>0) && !this.MarkedForDeletion)?_chaperoneQuestionCollectionViaChaperoneAnswer:null);
				info.AddValue("_chaperoneQuestionCollectionViaChaperoneAnswer_", ((_chaperoneQuestionCollectionViaChaperoneAnswer_!=null) && (_chaperoneQuestionCollectionViaChaperoneAnswer_.Count>0) && !this.MarkedForDeletion)?_chaperoneQuestionCollectionViaChaperoneAnswer_:null);
				info.AddValue("_checkListQuestionCollectionViaCheckListAnswer_", ((_checkListQuestionCollectionViaCheckListAnswer_!=null) && (_checkListQuestionCollectionViaCheckListAnswer_.Count>0) && !this.MarkedForDeletion)?_checkListQuestionCollectionViaCheckListAnswer_:null);
				info.AddValue("_checkListQuestionCollectionViaCheckListAnswer", ((_checkListQuestionCollectionViaCheckListAnswer!=null) && (_checkListQuestionCollectionViaCheckListAnswer.Count>0) && !this.MarkedForDeletion)?_checkListQuestionCollectionViaCheckListAnswer:null);
				info.AddValue("_checkListQuestionCollectionViaExitInterviewSignature", ((_checkListQuestionCollectionViaExitInterviewSignature!=null) && (_checkListQuestionCollectionViaExitInterviewSignature.Count>0) && !this.MarkedForDeletion)?_checkListQuestionCollectionViaExitInterviewSignature:null);
				info.AddValue("_cityCollectionViaAddress", ((_cityCollectionViaAddress!=null) && (_cityCollectionViaAddress.Count>0) && !this.MarkedForDeletion)?_cityCollectionViaAddress:null);
				info.AddValue("_communicationModeCollectionViaEvents____", ((_communicationModeCollectionViaEvents____!=null) && (_communicationModeCollectionViaEvents____.Count>0) && !this.MarkedForDeletion)?_communicationModeCollectionViaEvents____:null);
				info.AddValue("_communicationModeCollectionViaEvents", ((_communicationModeCollectionViaEvents!=null) && (_communicationModeCollectionViaEvents.Count>0) && !this.MarkedForDeletion)?_communicationModeCollectionViaEvents:null);
				info.AddValue("_communicationModeCollectionViaEvents___", ((_communicationModeCollectionViaEvents___!=null) && (_communicationModeCollectionViaEvents___.Count>0) && !this.MarkedForDeletion)?_communicationModeCollectionViaEvents___:null);
				info.AddValue("_communicationModeCollectionViaEvents__", ((_communicationModeCollectionViaEvents__!=null) && (_communicationModeCollectionViaEvents__.Count>0) && !this.MarkedForDeletion)?_communicationModeCollectionViaEvents__:null);
				info.AddValue("_communicationModeCollectionViaEvents_", ((_communicationModeCollectionViaEvents_!=null) && (_communicationModeCollectionViaEvents_.Count>0) && !this.MarkedForDeletion)?_communicationModeCollectionViaEvents_:null);
				info.AddValue("_contactCallStatusCollectionViaContactCall", ((_contactCallStatusCollectionViaContactCall!=null) && (_contactCallStatusCollectionViaContactCall.Count>0) && !this.MarkedForDeletion)?_contactCallStatusCollectionViaContactCall:null);
				info.AddValue("_contactCallStatusCollectionViaContactCall_", ((_contactCallStatusCollectionViaContactCall_!=null) && (_contactCallStatusCollectionViaContactCall_.Count>0) && !this.MarkedForDeletion)?_contactCallStatusCollectionViaContactCall_:null);
				info.AddValue("_contactCallStatusCollectionViaContactMeeting_", ((_contactCallStatusCollectionViaContactMeeting_!=null) && (_contactCallStatusCollectionViaContactMeeting_.Count>0) && !this.MarkedForDeletion)?_contactCallStatusCollectionViaContactMeeting_:null);
				info.AddValue("_contactCallStatusCollectionViaContactMeeting", ((_contactCallStatusCollectionViaContactMeeting!=null) && (_contactCallStatusCollectionViaContactMeeting.Count>0) && !this.MarkedForDeletion)?_contactCallStatusCollectionViaContactMeeting:null);
				info.AddValue("_countryCollectionViaAddress", ((_countryCollectionViaAddress!=null) && (_countryCollectionViaAddress.Count>0) && !this.MarkedForDeletion)?_countryCollectionViaAddress:null);
				info.AddValue("_couponTypeCollectionViaCoupons_", ((_couponTypeCollectionViaCoupons_!=null) && (_couponTypeCollectionViaCoupons_.Count>0) && !this.MarkedForDeletion)?_couponTypeCollectionViaCoupons_:null);
				info.AddValue("_couponTypeCollectionViaCoupons", ((_couponTypeCollectionViaCoupons!=null) && (_couponTypeCollectionViaCoupons.Count>0) && !this.MarkedForDeletion)?_couponTypeCollectionViaCoupons:null);
				info.AddValue("_customerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation", ((_customerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation!=null) && (_customerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation.Count>0) && !this.MarkedForDeletion)?_customerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation:null);
				info.AddValue("_customerEventScreeningTestsCollectionViaTestPerformedExternally_", ((_customerEventScreeningTestsCollectionViaTestPerformedExternally_!=null) && (_customerEventScreeningTestsCollectionViaTestPerformedExternally_.Count>0) && !this.MarkedForDeletion)?_customerEventScreeningTestsCollectionViaTestPerformedExternally_:null);
				info.AddValue("_customerEventScreeningTestsCollectionViaCustomerEventTestState", ((_customerEventScreeningTestsCollectionViaCustomerEventTestState!=null) && (_customerEventScreeningTestsCollectionViaCustomerEventTestState.Count>0) && !this.MarkedForDeletion)?_customerEventScreeningTestsCollectionViaCustomerEventTestState:null);
				info.AddValue("_customerEventScreeningTestsCollectionViaCustomerEventTestState_", ((_customerEventScreeningTestsCollectionViaCustomerEventTestState_!=null) && (_customerEventScreeningTestsCollectionViaCustomerEventTestState_.Count>0) && !this.MarkedForDeletion)?_customerEventScreeningTestsCollectionViaCustomerEventTestState_:null);
				info.AddValue("_customerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason", ((_customerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason!=null) && (_customerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason.Count>0) && !this.MarkedForDeletion)?_customerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason:null);
				info.AddValue("_customerEventScreeningTestsCollectionViaCustomerEventTestState__", ((_customerEventScreeningTestsCollectionViaCustomerEventTestState__!=null) && (_customerEventScreeningTestsCollectionViaCustomerEventTestState__.Count>0) && !this.MarkedForDeletion)?_customerEventScreeningTestsCollectionViaCustomerEventTestState__:null);
				info.AddValue("_customerEventScreeningTestsCollectionViaTestPerformedExternally", ((_customerEventScreeningTestsCollectionViaTestPerformedExternally!=null) && (_customerEventScreeningTestsCollectionViaTestPerformedExternally.Count>0) && !this.MarkedForDeletion)?_customerEventScreeningTestsCollectionViaTestPerformedExternally:null);
				info.AddValue("_customerEventScreeningTestsCollectionViaCustomerEventReading", ((_customerEventScreeningTestsCollectionViaCustomerEventReading!=null) && (_customerEventScreeningTestsCollectionViaCustomerEventReading.Count>0) && !this.MarkedForDeletion)?_customerEventScreeningTestsCollectionViaCustomerEventReading:null);
				info.AddValue("_customerEventScreeningTestsCollectionViaTestNotPerformed", ((_customerEventScreeningTestsCollectionViaTestNotPerformed!=null) && (_customerEventScreeningTestsCollectionViaTestNotPerformed.Count>0) && !this.MarkedForDeletion)?_customerEventScreeningTestsCollectionViaTestNotPerformed:null);
				info.AddValue("_customerEventScreeningTestsCollectionViaTestNotPerformed_", ((_customerEventScreeningTestsCollectionViaTestNotPerformed_!=null) && (_customerEventScreeningTestsCollectionViaTestNotPerformed_.Count>0) && !this.MarkedForDeletion)?_customerEventScreeningTestsCollectionViaTestNotPerformed_:null);
				info.AddValue("_customerHealthQuestionsCollectionViaCustomerHealthInfo", ((_customerHealthQuestionsCollectionViaCustomerHealthInfo!=null) && (_customerHealthQuestionsCollectionViaCustomerHealthInfo.Count>0) && !this.MarkedForDeletion)?_customerHealthQuestionsCollectionViaCustomerHealthInfo:null);
				info.AddValue("_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_", ((_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_!=null) && (_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_.Count>0) && !this.MarkedForDeletion)?_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_:null);
				info.AddValue("_customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_", ((_customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_!=null) && (_customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_.Count>0) && !this.MarkedForDeletion)?_customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_:null);
				info.AddValue("_customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer", ((_customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer!=null) && (_customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer.Count>0) && !this.MarkedForDeletion)?_customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer:null);
				info.AddValue("_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__", ((_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__!=null) && (_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__.Count>0) && !this.MarkedForDeletion)?_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__:null);
				info.AddValue("_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___", ((_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___!=null) && (_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___.Count>0) && !this.MarkedForDeletion)?_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___:null);
				info.AddValue("_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria", ((_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria!=null) && (_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria.Count>0) && !this.MarkedForDeletion)?_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria:null);
				info.AddValue("_customerHealthQuestionsCollectionViaCustomerHealthInfoArchive", ((_customerHealthQuestionsCollectionViaCustomerHealthInfoArchive!=null) && (_customerHealthQuestionsCollectionViaCustomerHealthInfoArchive.Count>0) && !this.MarkedForDeletion)?_customerHealthQuestionsCollectionViaCustomerHealthInfoArchive:null);
				info.AddValue("_customerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician", ((_customerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician!=null) && (_customerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician.Count>0) && !this.MarkedForDeletion)?_customerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician:null);
				info.AddValue("_customerProfileCollectionViaFillEventCallQueue", ((_customerProfileCollectionViaFillEventCallQueue!=null) && (_customerProfileCollectionViaFillEventCallQueue.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaFillEventCallQueue:null);
				info.AddValue("_customerProfileCollectionViaDisqualifiedTest_", ((_customerProfileCollectionViaDisqualifiedTest_!=null) && (_customerProfileCollectionViaDisqualifiedTest_.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaDisqualifiedTest_:null);
				info.AddValue("_customerProfileCollectionViaCustomerEligibility_", ((_customerProfileCollectionViaCustomerEligibility_!=null) && (_customerProfileCollectionViaCustomerEligibility_.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaCustomerEligibility_:null);
				info.AddValue("_customerProfileCollectionViaEventCustomerResult_____", ((_customerProfileCollectionViaEventCustomerResult_____!=null) && (_customerProfileCollectionViaEventCustomerResult_____.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaEventCustomerResult_____:null);
				info.AddValue("_customerProfileCollectionViaCustomerEligibility", ((_customerProfileCollectionViaCustomerEligibility!=null) && (_customerProfileCollectionViaCustomerEligibility.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaCustomerEligibility:null);
				info.AddValue("_customerProfileCollectionViaLanguageBarrierCallQueue", ((_customerProfileCollectionViaLanguageBarrierCallQueue!=null) && (_customerProfileCollectionViaLanguageBarrierCallQueue.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaLanguageBarrierCallQueue:null);
				info.AddValue("_customerProfileCollectionViaEventCustomerQuestionAnswer", ((_customerProfileCollectionViaEventCustomerQuestionAnswer!=null) && (_customerProfileCollectionViaEventCustomerQuestionAnswer.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaEventCustomerQuestionAnswer:null);
				info.AddValue("_customerProfileCollectionViaHospitalPartnerCustomer_", ((_customerProfileCollectionViaHospitalPartnerCustomer_!=null) && (_customerProfileCollectionViaHospitalPartnerCustomer_.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaHospitalPartnerCustomer_:null);
				info.AddValue("_customerProfileCollectionViaHospitalPartnerCustomer__", ((_customerProfileCollectionViaHospitalPartnerCustomer__!=null) && (_customerProfileCollectionViaHospitalPartnerCustomer__.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaHospitalPartnerCustomer__:null);
				info.AddValue("_customerProfileCollectionViaHospitalPartnerCustomer", ((_customerProfileCollectionViaHospitalPartnerCustomer!=null) && (_customerProfileCollectionViaHospitalPartnerCustomer.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaHospitalPartnerCustomer:null);
				info.AddValue("_customerProfileCollectionViaDisqualifiedTest", ((_customerProfileCollectionViaDisqualifiedTest!=null) && (_customerProfileCollectionViaDisqualifiedTest.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaDisqualifiedTest:null);
				info.AddValue("_customerProfileCollectionViaCustomerPrimaryCarePhysician_", ((_customerProfileCollectionViaCustomerPrimaryCarePhysician_!=null) && (_customerProfileCollectionViaCustomerPrimaryCarePhysician_.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaCustomerPrimaryCarePhysician_:null);
				info.AddValue("_customerProfileCollectionViaCustomerPrimaryCarePhysician__", ((_customerProfileCollectionViaCustomerPrimaryCarePhysician__!=null) && (_customerProfileCollectionViaCustomerPrimaryCarePhysician__.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaCustomerPrimaryCarePhysician__:null);
				info.AddValue("_customerProfileCollectionViaNoShowCallQueue", ((_customerProfileCollectionViaNoShowCallQueue!=null) && (_customerProfileCollectionViaNoShowCallQueue.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaNoShowCallQueue:null);
				info.AddValue("_customerProfileCollectionViaCustomerPrimaryCarePhysician", ((_customerProfileCollectionViaCustomerPrimaryCarePhysician!=null) && (_customerProfileCollectionViaCustomerPrimaryCarePhysician.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaCustomerPrimaryCarePhysician:null);
				info.AddValue("_customerProfileCollectionViaCallQueueCustomer", ((_customerProfileCollectionViaCallQueueCustomer!=null) && (_customerProfileCollectionViaCallQueueCustomer.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaCallQueueCustomer:null);
				info.AddValue("_customerProfileCollectionViaCustomerHealthInfo", ((_customerProfileCollectionViaCustomerHealthInfo!=null) && (_customerProfileCollectionViaCustomerHealthInfo.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaCustomerHealthInfo:null);
				info.AddValue("_customerProfileCollectionViaCallQueueCustomer__", ((_customerProfileCollectionViaCallQueueCustomer__!=null) && (_customerProfileCollectionViaCallQueueCustomer__.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaCallQueueCustomer__:null);
				info.AddValue("_customerProfileCollectionViaCallQueueCustomer_", ((_customerProfileCollectionViaCallQueueCustomer_!=null) && (_customerProfileCollectionViaCallQueueCustomer_.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaCallQueueCustomer_:null);
				info.AddValue("_customerProfileCollectionViaEventCustomerResult______", ((_customerProfileCollectionViaEventCustomerResult______!=null) && (_customerProfileCollectionViaEventCustomerResult______.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaEventCustomerResult______:null);
				info.AddValue("_customerProfileCollectionViaCustomerIcdCode", ((_customerProfileCollectionViaCustomerIcdCode!=null) && (_customerProfileCollectionViaCustomerIcdCode.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaCustomerIcdCode:null);
				info.AddValue("_customerProfileCollectionViaMailRoundCallQueue", ((_customerProfileCollectionViaMailRoundCallQueue!=null) && (_customerProfileCollectionViaMailRoundCallQueue.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaMailRoundCallQueue:null);
				info.AddValue("_customerProfileCollectionViaCustomerHealthInfoArchive", ((_customerProfileCollectionViaCustomerHealthInfoArchive!=null) && (_customerProfileCollectionViaCustomerHealthInfoArchive.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaCustomerHealthInfoArchive:null);
				info.AddValue("_customerProfileCollectionViaEventCustomerQuestionAnswer_", ((_customerProfileCollectionViaEventCustomerQuestionAnswer_!=null) && (_customerProfileCollectionViaEventCustomerQuestionAnswer_.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaEventCustomerQuestionAnswer_:null);
				info.AddValue("_customerProfileCollectionViaRequiredTest", ((_customerProfileCollectionViaRequiredTest!=null) && (_customerProfileCollectionViaRequiredTest.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaRequiredTest:null);
				info.AddValue("_customerProfileCollectionViaCustomerWarmTransfer_", ((_customerProfileCollectionViaCustomerWarmTransfer_!=null) && (_customerProfileCollectionViaCustomerWarmTransfer_.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaCustomerWarmTransfer_:null);
				info.AddValue("_customerProfileCollectionViaProspectCustomer", ((_customerProfileCollectionViaProspectCustomer!=null) && (_customerProfileCollectionViaProspectCustomer.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaProspectCustomer:null);
				info.AddValue("_customerProfileCollectionViaEventCustomerResult_", ((_customerProfileCollectionViaEventCustomerResult_!=null) && (_customerProfileCollectionViaEventCustomerResult_.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaEventCustomerResult_:null);
				info.AddValue("_customerProfileCollectionViaEventCustomerResult__", ((_customerProfileCollectionViaEventCustomerResult__!=null) && (_customerProfileCollectionViaEventCustomerResult__.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaEventCustomerResult__:null);
				info.AddValue("_customerProfileCollectionViaUncontactedCustomerCallQueue", ((_customerProfileCollectionViaUncontactedCustomerCallQueue!=null) && (_customerProfileCollectionViaUncontactedCustomerCallQueue.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaUncontactedCustomerCallQueue:null);
				info.AddValue("_customerProfileCollectionViaCustomerWarmTransfer", ((_customerProfileCollectionViaCustomerWarmTransfer!=null) && (_customerProfileCollectionViaCustomerWarmTransfer.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaCustomerWarmTransfer:null);
				info.AddValue("_customerProfileCollectionViaMedication_", ((_customerProfileCollectionViaMedication_!=null) && (_customerProfileCollectionViaMedication_.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaMedication_:null);
				info.AddValue("_customerProfileCollectionViaCallRoundCallQueue", ((_customerProfileCollectionViaCallRoundCallQueue!=null) && (_customerProfileCollectionViaCallRoundCallQueue.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaCallRoundCallQueue:null);
				info.AddValue("_customerProfileCollectionViaCustomerTag_", ((_customerProfileCollectionViaCustomerTag_!=null) && (_customerProfileCollectionViaCustomerTag_.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaCustomerTag_:null);
				info.AddValue("_customerProfileCollectionViaReferral", ((_customerProfileCollectionViaReferral!=null) && (_customerProfileCollectionViaReferral.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaReferral:null);
				info.AddValue("_customerProfileCollectionViaCustomerTargeted_", ((_customerProfileCollectionViaCustomerTargeted_!=null) && (_customerProfileCollectionViaCustomerTargeted_.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaCustomerTargeted_:null);
				info.AddValue("_customerProfileCollectionViaCustomerTargeted", ((_customerProfileCollectionViaCustomerTargeted!=null) && (_customerProfileCollectionViaCustomerTargeted.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaCustomerTargeted:null);
				info.AddValue("_customerProfileCollectionViaCustomerTag", ((_customerProfileCollectionViaCustomerTag!=null) && (_customerProfileCollectionViaCustomerTag.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaCustomerTag:null);
				info.AddValue("_customerProfileCollectionViaMedication", ((_customerProfileCollectionViaMedication!=null) && (_customerProfileCollectionViaMedication.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaMedication:null);
				info.AddValue("_customerProfileCollectionViaEventCustomerResult________", ((_customerProfileCollectionViaEventCustomerResult________!=null) && (_customerProfileCollectionViaEventCustomerResult________.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaEventCustomerResult________:null);
				info.AddValue("_customerProfileCollectionViaEventCustomerResult", ((_customerProfileCollectionViaEventCustomerResult!=null) && (_customerProfileCollectionViaEventCustomerResult.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaEventCustomerResult:null);
				info.AddValue("_customerProfileCollectionViaEventCustomerResult_______", ((_customerProfileCollectionViaEventCustomerResult_______!=null) && (_customerProfileCollectionViaEventCustomerResult_______.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaEventCustomerResult_______:null);
				info.AddValue("_customerProfileCollectionViaDirectMail", ((_customerProfileCollectionViaDirectMail!=null) && (_customerProfileCollectionViaDirectMail.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaDirectMail:null);
				info.AddValue("_customerProfileCollectionViaEventCustomerResult____", ((_customerProfileCollectionViaEventCustomerResult____!=null) && (_customerProfileCollectionViaEventCustomerResult____.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaEventCustomerResult____:null);
				info.AddValue("_customerProfileCollectionViaCurrentMedication", ((_customerProfileCollectionViaCurrentMedication!=null) && (_customerProfileCollectionViaCurrentMedication.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaCurrentMedication:null);
				info.AddValue("_customerProfileCollectionViaGuardianDetails", ((_customerProfileCollectionViaGuardianDetails!=null) && (_customerProfileCollectionViaGuardianDetails.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaGuardianDetails:null);
				info.AddValue("_customerProfileCollectionViaEventCustomers", ((_customerProfileCollectionViaEventCustomers!=null) && (_customerProfileCollectionViaEventCustomers.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaEventCustomers:null);
				info.AddValue("_customerProfileCollectionViaEventCustomers_", ((_customerProfileCollectionViaEventCustomers_!=null) && (_customerProfileCollectionViaEventCustomers_.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaEventCustomers_:null);
				info.AddValue("_customerProfileCollectionViaCustomerCallQueueCallAttempt", ((_customerProfileCollectionViaCustomerCallQueueCallAttempt!=null) && (_customerProfileCollectionViaCustomerCallQueueCallAttempt.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaCustomerCallQueueCallAttempt:null);
				info.AddValue("_customerProfileCollectionViaEventCustomerResult___", ((_customerProfileCollectionViaEventCustomerResult___!=null) && (_customerProfileCollectionViaEventCustomerResult___.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaEventCustomerResult___:null);
				info.AddValue("_customerProfileCollectionViaCustomerProfileHistory", ((_customerProfileCollectionViaCustomerProfileHistory!=null) && (_customerProfileCollectionViaCustomerProfileHistory.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaCustomerProfileHistory:null);
				info.AddValue("_customerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt", ((_customerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt!=null) && (_customerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt:null);
				info.AddValue("_customerProfileCollectionViaCustomerClinicalQuestionAnswer", ((_customerProfileCollectionViaCustomerClinicalQuestionAnswer!=null) && (_customerProfileCollectionViaCustomerClinicalQuestionAnswer.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaCustomerClinicalQuestionAnswer:null);
				info.AddValue("_customerProfileCollectionViaCustomerClinicalQuestionAnswer_", ((_customerProfileCollectionViaCustomerClinicalQuestionAnswer_!=null) && (_customerProfileCollectionViaCustomerClinicalQuestionAnswer_.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaCustomerClinicalQuestionAnswer_:null);
				info.AddValue("_customerProfileCollectionViaGuardianDetails_", ((_customerProfileCollectionViaGuardianDetails_!=null) && (_customerProfileCollectionViaGuardianDetails_.Count>0) && !this.MarkedForDeletion)?_customerProfileCollectionViaGuardianDetails_:null);
				info.AddValue("_customerProfileHistoryCollectionViaEventCustomers_", ((_customerProfileHistoryCollectionViaEventCustomers_!=null) && (_customerProfileHistoryCollectionViaEventCustomers_.Count>0) && !this.MarkedForDeletion)?_customerProfileHistoryCollectionViaEventCustomers_:null);
				info.AddValue("_customerProfileHistoryCollectionViaEventCustomers", ((_customerProfileHistoryCollectionViaEventCustomers!=null) && (_customerProfileHistoryCollectionViaEventCustomers.Count>0) && !this.MarkedForDeletion)?_customerProfileHistoryCollectionViaEventCustomers:null);
				info.AddValue("_customerRegistrationNotesCollectionViaEventAppointmentCancellationLog", ((_customerRegistrationNotesCollectionViaEventAppointmentCancellationLog!=null) && (_customerRegistrationNotesCollectionViaEventAppointmentCancellationLog.Count>0) && !this.MarkedForDeletion)?_customerRegistrationNotesCollectionViaEventAppointmentCancellationLog:null);
				info.AddValue("_customerRegistrationNotesCollectionViaEventCustomers_", ((_customerRegistrationNotesCollectionViaEventCustomers_!=null) && (_customerRegistrationNotesCollectionViaEventCustomers_.Count>0) && !this.MarkedForDeletion)?_customerRegistrationNotesCollectionViaEventCustomers_:null);
				info.AddValue("_customerRegistrationNotesCollectionViaEventCustomers", ((_customerRegistrationNotesCollectionViaEventCustomers!=null) && (_customerRegistrationNotesCollectionViaEventCustomers.Count>0) && !this.MarkedForDeletion)?_customerRegistrationNotesCollectionViaEventCustomers:null);
				info.AddValue("_directMailTypeCollectionViaDirectMail", ((_directMailTypeCollectionViaDirectMail!=null) && (_directMailTypeCollectionViaDirectMail.Count>0) && !this.MarkedForDeletion)?_directMailTypeCollectionViaDirectMail:null);
				info.AddValue("_directMailTypeCollectionViaCampaignActivity", ((_directMailTypeCollectionViaCampaignActivity!=null) && (_directMailTypeCollectionViaCampaignActivity.Count>0) && !this.MarkedForDeletion)?_directMailTypeCollectionViaCampaignActivity:null);
				info.AddValue("_directMailTypeCollectionViaCampaignActivity_", ((_directMailTypeCollectionViaCampaignActivity_!=null) && (_directMailTypeCollectionViaCampaignActivity_.Count>0) && !this.MarkedForDeletion)?_directMailTypeCollectionViaCampaignActivity_:null);
				info.AddValue("_eventActivityTemplateCollectionViaEventActivityTemplateMeeting", ((_eventActivityTemplateCollectionViaEventActivityTemplateMeeting!=null) && (_eventActivityTemplateCollectionViaEventActivityTemplateMeeting.Count>0) && !this.MarkedForDeletion)?_eventActivityTemplateCollectionViaEventActivityTemplateMeeting:null);
				info.AddValue("_eventActivityTemplateCollectionViaEventActivityTemplateTask", ((_eventActivityTemplateCollectionViaEventActivityTemplateTask!=null) && (_eventActivityTemplateCollectionViaEventActivityTemplateTask.Count>0) && !this.MarkedForDeletion)?_eventActivityTemplateCollectionViaEventActivityTemplateTask:null);
				info.AddValue("_eventActivityTemplateCollectionViaEventActivityTemplateCall", ((_eventActivityTemplateCollectionViaEventActivityTemplateCall!=null) && (_eventActivityTemplateCollectionViaEventActivityTemplateCall.Count>0) && !this.MarkedForDeletion)?_eventActivityTemplateCollectionViaEventActivityTemplateCall:null);
				info.AddValue("_eventActivityTemplateCollectionViaEventActivityTemplateEmail", ((_eventActivityTemplateCollectionViaEventActivityTemplateEmail!=null) && (_eventActivityTemplateCollectionViaEventActivityTemplateEmail.Count>0) && !this.MarkedForDeletion)?_eventActivityTemplateCollectionViaEventActivityTemplateEmail:null);
				info.AddValue("_eventAppointmentCollectionViaEventCustomers", ((_eventAppointmentCollectionViaEventCustomers!=null) && (_eventAppointmentCollectionViaEventCustomers.Count>0) && !this.MarkedForDeletion)?_eventAppointmentCollectionViaEventCustomers:null);
				info.AddValue("_eventAppointmentCollectionViaEventCustomers_", ((_eventAppointmentCollectionViaEventCustomers_!=null) && (_eventAppointmentCollectionViaEventCustomers_.Count>0) && !this.MarkedForDeletion)?_eventAppointmentCollectionViaEventCustomers_:null);
				info.AddValue("_eventCustomerResultCollectionViaCustomerResultScreeningCommunication", ((_eventCustomerResultCollectionViaCustomerResultScreeningCommunication!=null) && (_eventCustomerResultCollectionViaCustomerResultScreeningCommunication.Count>0) && !this.MarkedForDeletion)?_eventCustomerResultCollectionViaCustomerResultScreeningCommunication:null);
				info.AddValue("_eventCustomerResultCollectionViaPriorityInQueue_", ((_eventCustomerResultCollectionViaPriorityInQueue_!=null) && (_eventCustomerResultCollectionViaPriorityInQueue_.Count>0) && !this.MarkedForDeletion)?_eventCustomerResultCollectionViaPriorityInQueue_:null);
				info.AddValue("_eventCustomerResultCollectionViaKynLabValues", ((_eventCustomerResultCollectionViaKynLabValues!=null) && (_eventCustomerResultCollectionViaKynLabValues.Count>0) && !this.MarkedForDeletion)?_eventCustomerResultCollectionViaKynLabValues:null);
				info.AddValue("_eventCustomerResultCollectionViaCustomerResultScreeningCommunication__", ((_eventCustomerResultCollectionViaCustomerResultScreeningCommunication__!=null) && (_eventCustomerResultCollectionViaCustomerResultScreeningCommunication__.Count>0) && !this.MarkedForDeletion)?_eventCustomerResultCollectionViaCustomerResultScreeningCommunication__:null);
				info.AddValue("_eventCustomerResultCollectionViaCustomerResultScreeningCommunication_", ((_eventCustomerResultCollectionViaCustomerResultScreeningCommunication_!=null) && (_eventCustomerResultCollectionViaCustomerResultScreeningCommunication_.Count>0) && !this.MarkedForDeletion)?_eventCustomerResultCollectionViaCustomerResultScreeningCommunication_:null);
				info.AddValue("_eventCustomerResultCollectionViaCdcontentGeneratorTracking", ((_eventCustomerResultCollectionViaCdcontentGeneratorTracking!=null) && (_eventCustomerResultCollectionViaCdcontentGeneratorTracking.Count>0) && !this.MarkedForDeletion)?_eventCustomerResultCollectionViaCdcontentGeneratorTracking:null);
				info.AddValue("_eventCustomerResultCollectionViaKynLabValues_", ((_eventCustomerResultCollectionViaKynLabValues_!=null) && (_eventCustomerResultCollectionViaKynLabValues_.Count>0) && !this.MarkedForDeletion)?_eventCustomerResultCollectionViaKynLabValues_:null);
				info.AddValue("_eventCustomerResultCollectionViaPriorityInQueue", ((_eventCustomerResultCollectionViaPriorityInQueue!=null) && (_eventCustomerResultCollectionViaPriorityInQueue.Count>0) && !this.MarkedForDeletion)?_eventCustomerResultCollectionViaPriorityInQueue:null);
				info.AddValue("_eventCustomersCollectionViaDisqualifiedTest_", ((_eventCustomersCollectionViaDisqualifiedTest_!=null) && (_eventCustomersCollectionViaDisqualifiedTest_.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaDisqualifiedTest_:null);
				info.AddValue("_eventCustomersCollectionViaEventAppointmentChangeLog", ((_eventCustomersCollectionViaEventAppointmentChangeLog!=null) && (_eventCustomersCollectionViaEventAppointmentChangeLog.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaEventAppointmentChangeLog:null);
				info.AddValue("_eventCustomersCollectionViaDisqualifiedTest", ((_eventCustomersCollectionViaDisqualifiedTest!=null) && (_eventCustomersCollectionViaDisqualifiedTest.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaDisqualifiedTest:null);
				info.AddValue("_eventCustomersCollectionViaEventCustomerPrimaryCarePhysician", ((_eventCustomersCollectionViaEventCustomerPrimaryCarePhysician!=null) && (_eventCustomersCollectionViaEventCustomerPrimaryCarePhysician.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaEventCustomerPrimaryCarePhysician:null);
				info.AddValue("_eventCustomersCollectionViaEventCustomerQuestionAnswer_", ((_eventCustomersCollectionViaEventCustomerQuestionAnswer_!=null) && (_eventCustomersCollectionViaEventCustomerQuestionAnswer_.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaEventCustomerQuestionAnswer_:null);
				info.AddValue("_eventCustomersCollectionViaEventAppointmentCancellationLog", ((_eventCustomersCollectionViaEventAppointmentCancellationLog!=null) && (_eventCustomersCollectionViaEventAppointmentCancellationLog.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaEventAppointmentCancellationLog:null);
				info.AddValue("_eventCustomersCollectionViaEventCustomerQuestionAnswer", ((_eventCustomersCollectionViaEventCustomerQuestionAnswer!=null) && (_eventCustomersCollectionViaEventCustomerQuestionAnswer.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaEventCustomerQuestionAnswer:null);
				info.AddValue("_eventCustomersCollectionViaEventCustomerGiftCard", ((_eventCustomersCollectionViaEventCustomerGiftCard!=null) && (_eventCustomersCollectionViaEventCustomerGiftCard.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaEventCustomerGiftCard:null);
				info.AddValue("_eventCustomersCollectionViaSurveyAnswer", ((_eventCustomersCollectionViaSurveyAnswer!=null) && (_eventCustomersCollectionViaSurveyAnswer.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaSurveyAnswer:null);
				info.AddValue("_eventCustomersCollectionViaEventCustomerTestNotPerformedNotification", ((_eventCustomersCollectionViaEventCustomerTestNotPerformedNotification!=null) && (_eventCustomersCollectionViaEventCustomerTestNotPerformedNotification.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaEventCustomerTestNotPerformedNotification:null);
				info.AddValue("_eventCustomersCollectionViaPhysicianRecordRequestSignature", ((_eventCustomersCollectionViaPhysicianRecordRequestSignature!=null) && (_eventCustomersCollectionViaPhysicianRecordRequestSignature.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaPhysicianRecordRequestSignature:null);
				info.AddValue("_eventCustomersCollectionViaEventCustomerRetest", ((_eventCustomersCollectionViaEventCustomerRetest!=null) && (_eventCustomersCollectionViaEventCustomerRetest.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaEventCustomerRetest:null);
				info.AddValue("_eventCustomersCollectionViaPcpDisposition", ((_eventCustomersCollectionViaPcpDisposition!=null) && (_eventCustomersCollectionViaPcpDisposition.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaPcpDisposition:null);
				info.AddValue("_eventCustomersCollectionViaPcpDisposition_", ((_eventCustomersCollectionViaPcpDisposition_!=null) && (_eventCustomersCollectionViaPcpDisposition_.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaPcpDisposition_:null);
				info.AddValue("_eventCustomersCollectionViaChaperoneSignature", ((_eventCustomersCollectionViaChaperoneSignature!=null) && (_eventCustomersCollectionViaChaperoneSignature.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaChaperoneSignature:null);
				info.AddValue("_eventCustomersCollectionViaChaperoneAnswer_", ((_eventCustomersCollectionViaChaperoneAnswer_!=null) && (_eventCustomersCollectionViaChaperoneAnswer_.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaChaperoneAnswer_:null);
				info.AddValue("_eventCustomersCollectionViaChaperoneAnswer", ((_eventCustomersCollectionViaChaperoneAnswer!=null) && (_eventCustomersCollectionViaChaperoneAnswer.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaChaperoneAnswer:null);
				info.AddValue("_eventCustomersCollectionViaCallQueueCustomer__", ((_eventCustomersCollectionViaCallQueueCustomer__!=null) && (_eventCustomersCollectionViaCallQueueCustomer__.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaCallQueueCustomer__:null);
				info.AddValue("_eventCustomersCollectionViaCheckListAnswer_", ((_eventCustomersCollectionViaCheckListAnswer_!=null) && (_eventCustomersCollectionViaCheckListAnswer_.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaCheckListAnswer_:null);
				info.AddValue("_eventCustomersCollectionViaCallQueueCustomer", ((_eventCustomersCollectionViaCallQueueCustomer!=null) && (_eventCustomersCollectionViaCallQueueCustomer.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaCallQueueCustomer:null);
				info.AddValue("_eventCustomersCollectionViaCallQueueCustomer_", ((_eventCustomersCollectionViaCallQueueCustomer_!=null) && (_eventCustomersCollectionViaCallQueueCustomer_.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaCallQueueCustomer_:null);
				info.AddValue("_eventCustomersCollectionViaCustomerHealthInfo", ((_eventCustomersCollectionViaCustomerHealthInfo!=null) && (_eventCustomersCollectionViaCustomerHealthInfo.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaCustomerHealthInfo:null);
				info.AddValue("_eventCustomersCollectionViaExitInterviewSignature", ((_eventCustomersCollectionViaExitInterviewSignature!=null) && (_eventCustomersCollectionViaExitInterviewSignature.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaExitInterviewSignature:null);
				info.AddValue("_eventCustomersCollectionViaFluConsentAnswer", ((_eventCustomersCollectionViaFluConsentAnswer!=null) && (_eventCustomersCollectionViaFluConsentAnswer.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaFluConsentAnswer:null);
				info.AddValue("_eventCustomersCollectionViaExitInterviewAnswer_", ((_eventCustomersCollectionViaExitInterviewAnswer_!=null) && (_eventCustomersCollectionViaExitInterviewAnswer_.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaExitInterviewAnswer_:null);
				info.AddValue("_eventCustomersCollectionViaCheckListAnswer", ((_eventCustomersCollectionViaCheckListAnswer!=null) && (_eventCustomersCollectionViaCheckListAnswer.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaCheckListAnswer:null);
				info.AddValue("_eventCustomersCollectionViaExitInterviewAnswer", ((_eventCustomersCollectionViaExitInterviewAnswer!=null) && (_eventCustomersCollectionViaExitInterviewAnswer.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaExitInterviewAnswer:null);
				info.AddValue("_eventCustomersCollectionViaFluConsentAnswer_", ((_eventCustomersCollectionViaFluConsentAnswer_!=null) && (_eventCustomersCollectionViaFluConsentAnswer_.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaFluConsentAnswer_:null);
				info.AddValue("_eventCustomersCollectionViaSurveyAnswer_", ((_eventCustomersCollectionViaSurveyAnswer_!=null) && (_eventCustomersCollectionViaSurveyAnswer_.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaSurveyAnswer_:null);
				info.AddValue("_eventCustomersCollectionViaCustomerHealthInfoArchive", ((_eventCustomersCollectionViaCustomerHealthInfoArchive!=null) && (_eventCustomersCollectionViaCustomerHealthInfoArchive.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaCustomerHealthInfoArchive:null);
				info.AddValue("_eventCustomersCollectionViaCustomerMedicareQuestionAnswer", ((_eventCustomersCollectionViaCustomerMedicareQuestionAnswer!=null) && (_eventCustomersCollectionViaCustomerMedicareQuestionAnswer.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaCustomerMedicareQuestionAnswer:null);
				info.AddValue("_eventCustomersCollectionViaFluConsentSignature", ((_eventCustomersCollectionViaFluConsentSignature!=null) && (_eventCustomersCollectionViaFluConsentSignature.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaFluConsentSignature:null);
				info.AddValue("_eventCustomersCollectionViaParticipationConsentSignature", ((_eventCustomersCollectionViaParticipationConsentSignature!=null) && (_eventCustomersCollectionViaParticipationConsentSignature.Count>0) && !this.MarkedForDeletion)?_eventCustomersCollectionViaParticipationConsentSignature:null);
				info.AddValue("_eventsCollectionViaEventCustomerQuestionAnswer", ((_eventsCollectionViaEventCustomerQuestionAnswer!=null) && (_eventsCollectionViaEventCustomerQuestionAnswer.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaEventCustomerQuestionAnswer:null);
				info.AddValue("_eventsCollectionViaEventPhysicianTest__", ((_eventsCollectionViaEventPhysicianTest__!=null) && (_eventsCollectionViaEventPhysicianTest__.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaEventPhysicianTest__:null);
				info.AddValue("_eventsCollectionViaEventStaffAssignment__", ((_eventsCollectionViaEventStaffAssignment__!=null) && (_eventsCollectionViaEventStaffAssignment__.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaEventStaffAssignment__:null);
				info.AddValue("_eventsCollectionViaEventStaffAssignment_", ((_eventsCollectionViaEventStaffAssignment_!=null) && (_eventsCollectionViaEventStaffAssignment_.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaEventStaffAssignment_:null);
				info.AddValue("_eventsCollectionViaEventCustomers", ((_eventsCollectionViaEventCustomers!=null) && (_eventsCollectionViaEventCustomers.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaEventCustomers:null);
				info.AddValue("_eventsCollectionViaEventCustomerResult____", ((_eventsCollectionViaEventCustomerResult____!=null) && (_eventsCollectionViaEventCustomerResult____.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaEventCustomerResult____:null);
				info.AddValue("_eventsCollectionViaEventCustomerResult___", ((_eventsCollectionViaEventCustomerResult___!=null) && (_eventsCollectionViaEventCustomerResult___.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaEventCustomerResult___:null);
				info.AddValue("_eventsCollectionViaHospitalPartnerCustomer_", ((_eventsCollectionViaHospitalPartnerCustomer_!=null) && (_eventsCollectionViaHospitalPartnerCustomer_.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaHospitalPartnerCustomer_:null);
				info.AddValue("_eventsCollectionViaEventCustomerResult_", ((_eventsCollectionViaEventCustomerResult_!=null) && (_eventsCollectionViaEventCustomerResult_.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaEventCustomerResult_:null);
				info.AddValue("_eventsCollectionViaEventCustomerResult________", ((_eventsCollectionViaEventCustomerResult________!=null) && (_eventsCollectionViaEventCustomerResult________.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaEventCustomerResult________:null);
				info.AddValue("_eventsCollectionViaEventCustomerResult______", ((_eventsCollectionViaEventCustomerResult______!=null) && (_eventsCollectionViaEventCustomerResult______.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaEventCustomerResult______:null);
				info.AddValue("_eventsCollectionViaEventCustomerResult__", ((_eventsCollectionViaEventCustomerResult__!=null) && (_eventsCollectionViaEventCustomerResult__.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaEventCustomerResult__:null);
				info.AddValue("_eventsCollectionViaEventCustomerResult_______", ((_eventsCollectionViaEventCustomerResult_______!=null) && (_eventsCollectionViaEventCustomerResult_______.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaEventCustomerResult_______:null);
				info.AddValue("_eventsCollectionViaEventPhysicianTest_", ((_eventsCollectionViaEventPhysicianTest_!=null) && (_eventsCollectionViaEventPhysicianTest_.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaEventPhysicianTest_:null);
				info.AddValue("_eventsCollectionViaEventPhysicianTest", ((_eventsCollectionViaEventPhysicianTest!=null) && (_eventsCollectionViaEventPhysicianTest.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaEventPhysicianTest:null);
				info.AddValue("_eventsCollectionViaEventCustomerQuestionAnswer_", ((_eventsCollectionViaEventCustomerQuestionAnswer_!=null) && (_eventsCollectionViaEventCustomerQuestionAnswer_.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaEventCustomerQuestionAnswer_:null);
				info.AddValue("_eventsCollectionViaHospitalPartnerCustomer__", ((_eventsCollectionViaHospitalPartnerCustomer__!=null) && (_eventsCollectionViaHospitalPartnerCustomer__.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaHospitalPartnerCustomer__:null);
				info.AddValue("_eventsCollectionViaEventCustomerResult", ((_eventsCollectionViaEventCustomerResult!=null) && (_eventsCollectionViaEventCustomerResult.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaEventCustomerResult:null);
				info.AddValue("_eventsCollectionViaHospitalPartnerCustomer", ((_eventsCollectionViaHospitalPartnerCustomer!=null) && (_eventsCollectionViaHospitalPartnerCustomer.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaHospitalPartnerCustomer:null);
				info.AddValue("_eventsCollectionViaEventCustomerResult_____", ((_eventsCollectionViaEventCustomerResult_____!=null) && (_eventsCollectionViaEventCustomerResult_____.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaEventCustomerResult_____:null);
				info.AddValue("_eventsCollectionViaEventCustomers_", ((_eventsCollectionViaEventCustomers_!=null) && (_eventsCollectionViaEventCustomers_.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaEventCustomers_:null);
				info.AddValue("_eventsCollectionViaEventAccountTestHcpcsCode", ((_eventsCollectionViaEventAccountTestHcpcsCode!=null) && (_eventsCollectionViaEventAccountTestHcpcsCode.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaEventAccountTestHcpcsCode:null);
				info.AddValue("_eventsCollectionViaCustomerRegistrationNotes", ((_eventsCollectionViaCustomerRegistrationNotes!=null) && (_eventsCollectionViaCustomerRegistrationNotes.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaCustomerRegistrationNotes:null);
				info.AddValue("_eventsCollectionViaCallQueueCustomer", ((_eventsCollectionViaCallQueueCustomer!=null) && (_eventsCollectionViaCallQueueCustomer.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaCallQueueCustomer:null);
				info.AddValue("_eventsCollectionViaEventAccountTestHcpcsCode_", ((_eventsCollectionViaEventAccountTestHcpcsCode_!=null) && (_eventsCollectionViaEventAccountTestHcpcsCode_.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaEventAccountTestHcpcsCode_:null);
				info.AddValue("_eventsCollectionViaSeminars", ((_eventsCollectionViaSeminars!=null) && (_eventsCollectionViaSeminars.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaSeminars:null);
				info.AddValue("_eventsCollectionViaDisqualifiedTest_", ((_eventsCollectionViaDisqualifiedTest_!=null) && (_eventsCollectionViaDisqualifiedTest_.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaDisqualifiedTest_:null);
				info.AddValue("_eventsCollectionViaDisqualifiedTest", ((_eventsCollectionViaDisqualifiedTest!=null) && (_eventsCollectionViaDisqualifiedTest.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaDisqualifiedTest:null);
				info.AddValue("_eventsCollectionViaCustomEventNotification", ((_eventsCollectionViaCustomEventNotification!=null) && (_eventsCollectionViaCustomEventNotification.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaCustomEventNotification:null);
				info.AddValue("_eventsCollectionViaCallQueueCustomer__", ((_eventsCollectionViaCallQueueCustomer__!=null) && (_eventsCollectionViaCallQueueCustomer__.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaCallQueueCustomer__:null);
				info.AddValue("_eventsCollectionViaCustomerClinicalQuestionAnswer", ((_eventsCollectionViaCustomerClinicalQuestionAnswer!=null) && (_eventsCollectionViaCustomerClinicalQuestionAnswer.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaCustomerClinicalQuestionAnswer:null);
				info.AddValue("_eventsCollectionViaCustomerClinicalQuestionAnswer_", ((_eventsCollectionViaCustomerClinicalQuestionAnswer_!=null) && (_eventsCollectionViaCustomerClinicalQuestionAnswer_.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaCustomerClinicalQuestionAnswer_:null);
				info.AddValue("_eventsCollectionViaEventAppointmentChangeLog", ((_eventsCollectionViaEventAppointmentChangeLog!=null) && (_eventsCollectionViaEventAppointmentChangeLog.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaEventAppointmentChangeLog:null);
				info.AddValue("_eventsCollectionViaEventAppointmentChangeLog_", ((_eventsCollectionViaEventAppointmentChangeLog_!=null) && (_eventsCollectionViaEventAppointmentChangeLog_.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaEventAppointmentChangeLog_:null);
				info.AddValue("_eventsCollectionViaCallQueueCustomer_", ((_eventsCollectionViaCallQueueCustomer_!=null) && (_eventsCollectionViaCallQueueCustomer_.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaCallQueueCustomer_:null);
				info.AddValue("_eventsCollectionViaHostPayment", ((_eventsCollectionViaHostPayment!=null) && (_eventsCollectionViaHostPayment.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaHostPayment:null);
				info.AddValue("_eventsCollectionViaEventStaffAssignment", ((_eventsCollectionViaEventStaffAssignment!=null) && (_eventsCollectionViaEventStaffAssignment.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaEventStaffAssignment:null);
				info.AddValue("_eventsCollectionViaEventAppointmentCancellationLog", ((_eventsCollectionViaEventAppointmentCancellationLog!=null) && (_eventsCollectionViaEventAppointmentCancellationLog.Count>0) && !this.MarkedForDeletion)?_eventsCollectionViaEventAppointmentCancellationLog:null);
				info.AddValue("_eventTypeCollectionViaEvents", ((_eventTypeCollectionViaEvents!=null) && (_eventTypeCollectionViaEvents.Count>0) && !this.MarkedForDeletion)?_eventTypeCollectionViaEvents:null);
				info.AddValue("_eventTypeCollectionViaEvents____", ((_eventTypeCollectionViaEvents____!=null) && (_eventTypeCollectionViaEvents____.Count>0) && !this.MarkedForDeletion)?_eventTypeCollectionViaEvents____:null);
				info.AddValue("_eventTypeCollectionViaEvents___", ((_eventTypeCollectionViaEvents___!=null) && (_eventTypeCollectionViaEvents___.Count>0) && !this.MarkedForDeletion)?_eventTypeCollectionViaEvents___:null);
				info.AddValue("_eventTypeCollectionViaEvents_", ((_eventTypeCollectionViaEvents_!=null) && (_eventTypeCollectionViaEvents_.Count>0) && !this.MarkedForDeletion)?_eventTypeCollectionViaEvents_:null);
				info.AddValue("_eventTypeCollectionViaEvents__", ((_eventTypeCollectionViaEvents__!=null) && (_eventTypeCollectionViaEvents__.Count>0) && !this.MarkedForDeletion)?_eventTypeCollectionViaEvents__:null);
				info.AddValue("_exitInterviewQuestionCollectionViaExitInterviewAnswer_", ((_exitInterviewQuestionCollectionViaExitInterviewAnswer_!=null) && (_exitInterviewQuestionCollectionViaExitInterviewAnswer_.Count>0) && !this.MarkedForDeletion)?_exitInterviewQuestionCollectionViaExitInterviewAnswer_:null);
				info.AddValue("_exitInterviewQuestionCollectionViaExitInterviewAnswer", ((_exitInterviewQuestionCollectionViaExitInterviewAnswer!=null) && (_exitInterviewQuestionCollectionViaExitInterviewAnswer.Count>0) && !this.MarkedForDeletion)?_exitInterviewQuestionCollectionViaExitInterviewAnswer:null);
				info.AddValue("_exportableReportsCollectionViaExportableReportsQueue", ((_exportableReportsCollectionViaExportableReportsQueue!=null) && (_exportableReportsCollectionViaExportableReportsQueue.Count>0) && !this.MarkedForDeletion)?_exportableReportsCollectionViaExportableReportsQueue:null);
				info.AddValue("_fileCollectionViaCustomerActivityTypeUpload_", ((_fileCollectionViaCustomerActivityTypeUpload_!=null) && (_fileCollectionViaCustomerActivityTypeUpload_.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaCustomerActivityTypeUpload_:null);
				info.AddValue("_fileCollectionViaCorporateUpload", ((_fileCollectionViaCorporateUpload!=null) && (_fileCollectionViaCorporateUpload.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaCorporateUpload:null);
				info.AddValue("_fileCollectionViaStaffEventScheduleUpload", ((_fileCollectionViaStaffEventScheduleUpload!=null) && (_fileCollectionViaStaffEventScheduleUpload.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaStaffEventScheduleUpload:null);
				info.AddValue("_fileCollectionViaCorporateUpload_", ((_fileCollectionViaCorporateUpload_!=null) && (_fileCollectionViaCorporateUpload_.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaCorporateUpload_:null);
				info.AddValue("_fileCollectionViaPhysicianRecordRequestSignature", ((_fileCollectionViaPhysicianRecordRequestSignature!=null) && (_fileCollectionViaPhysicianRecordRequestSignature.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaPhysicianRecordRequestSignature:null);
				info.AddValue("_fileCollectionViaCustomerActivityTypeUpload", ((_fileCollectionViaCustomerActivityTypeUpload!=null) && (_fileCollectionViaCustomerActivityTypeUpload.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaCustomerActivityTypeUpload:null);
				info.AddValue("_fileCollectionViaRapsUpload_", ((_fileCollectionViaRapsUpload_!=null) && (_fileCollectionViaRapsUpload_.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaRapsUpload_:null);
				info.AddValue("_fileCollectionViaCallUpload_", ((_fileCollectionViaCallUpload_!=null) && (_fileCollectionViaCallUpload_.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaCallUpload_:null);
				info.AddValue("_fileCollectionViaChaperoneSignature_", ((_fileCollectionViaChaperoneSignature_!=null) && (_fileCollectionViaChaperoneSignature_.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaChaperoneSignature_:null);
				info.AddValue("_fileCollectionViaRapsUpload", ((_fileCollectionViaRapsUpload!=null) && (_fileCollectionViaRapsUpload.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaRapsUpload:null);
				info.AddValue("_fileCollectionViaChaperoneSignature", ((_fileCollectionViaChaperoneSignature!=null) && (_fileCollectionViaChaperoneSignature.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaChaperoneSignature:null);
				info.AddValue("_fileCollectionViaCorporateUpload__", ((_fileCollectionViaCorporateUpload__!=null) && (_fileCollectionViaCorporateUpload__.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaCorporateUpload__:null);
				info.AddValue("_fileCollectionViaCallUpload", ((_fileCollectionViaCallUpload!=null) && (_fileCollectionViaCallUpload.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaCallUpload:null);
				info.AddValue("_fileCollectionViaHealthPlanCriteriaAssignmentUpload", ((_fileCollectionViaHealthPlanCriteriaAssignmentUpload!=null) && (_fileCollectionViaHealthPlanCriteriaAssignmentUpload.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaHealthPlanCriteriaAssignmentUpload:null);
				info.AddValue("_fileCollectionViaParticipationConsentSignature_", ((_fileCollectionViaParticipationConsentSignature_!=null) && (_fileCollectionViaParticipationConsentSignature_.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaParticipationConsentSignature_:null);
				info.AddValue("_fileCollectionViaMergeCustomerUpload", ((_fileCollectionViaMergeCustomerUpload!=null) && (_fileCollectionViaMergeCustomerUpload.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaMergeCustomerUpload:null);
				info.AddValue("_fileCollectionViaMedicationUpload_", ((_fileCollectionViaMedicationUpload_!=null) && (_fileCollectionViaMedicationUpload_.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaMedicationUpload_:null);
				info.AddValue("_fileCollectionViaMedicationUpload", ((_fileCollectionViaMedicationUpload!=null) && (_fileCollectionViaMedicationUpload.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaMedicationUpload:null);
				info.AddValue("_fileCollectionViaFluConsentSignature_", ((_fileCollectionViaFluConsentSignature_!=null) && (_fileCollectionViaFluConsentSignature_.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaFluConsentSignature_:null);
				info.AddValue("_fileCollectionViaFluConsentSignature", ((_fileCollectionViaFluConsentSignature!=null) && (_fileCollectionViaFluConsentSignature.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaFluConsentSignature:null);
				info.AddValue("_fileCollectionViaMergeCustomerUpload_", ((_fileCollectionViaMergeCustomerUpload_!=null) && (_fileCollectionViaMergeCustomerUpload_.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaMergeCustomerUpload_:null);
				info.AddValue("_fileCollectionViaExitInterviewSignature", ((_fileCollectionViaExitInterviewSignature!=null) && (_fileCollectionViaExitInterviewSignature.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaExitInterviewSignature:null);
				info.AddValue("_fileCollectionViaEventCustomerGiftCard_", ((_fileCollectionViaEventCustomerGiftCard_!=null) && (_fileCollectionViaEventCustomerGiftCard_.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaEventCustomerGiftCard_:null);
				info.AddValue("_fileCollectionViaEventCustomerGiftCard", ((_fileCollectionViaEventCustomerGiftCard!=null) && (_fileCollectionViaEventCustomerGiftCard.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaEventCustomerGiftCard:null);
				info.AddValue("_fileCollectionViaEligibilityUpload", ((_fileCollectionViaEligibilityUpload!=null) && (_fileCollectionViaEligibilityUpload.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaEligibilityUpload:null);
				info.AddValue("_fileCollectionViaEligibilityUpload_", ((_fileCollectionViaEligibilityUpload_!=null) && (_fileCollectionViaEligibilityUpload_.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaEligibilityUpload_:null);
				info.AddValue("_fileCollectionViaExportableReportsQueue", ((_fileCollectionViaExportableReportsQueue!=null) && (_fileCollectionViaExportableReportsQueue.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaExportableReportsQueue:null);
				info.AddValue("_fileCollectionViaSuspectConditionUpload", ((_fileCollectionViaSuspectConditionUpload!=null) && (_fileCollectionViaSuspectConditionUpload.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaSuspectConditionUpload:null);
				info.AddValue("_fileCollectionViaStaffEventScheduleUpload_", ((_fileCollectionViaStaffEventScheduleUpload_!=null) && (_fileCollectionViaStaffEventScheduleUpload_.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaStaffEventScheduleUpload_:null);
				info.AddValue("_fileCollectionViaParticipationConsentSignature", ((_fileCollectionViaParticipationConsentSignature!=null) && (_fileCollectionViaParticipationConsentSignature.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaParticipationConsentSignature:null);
				info.AddValue("_fileCollectionViaCustomerPhoneNumberUpdateUpload_", ((_fileCollectionViaCustomerPhoneNumberUpdateUpload_!=null) && (_fileCollectionViaCustomerPhoneNumberUpdateUpload_.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaCustomerPhoneNumberUpdateUpload_:null);
				info.AddValue("_fileCollectionViaCustomerPhoneNumberUpdateUpload", ((_fileCollectionViaCustomerPhoneNumberUpdateUpload!=null) && (_fileCollectionViaCustomerPhoneNumberUpdateUpload.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaCustomerPhoneNumberUpdateUpload:null);
				info.AddValue("_fileCollectionViaSuspectConditionUpload_", ((_fileCollectionViaSuspectConditionUpload_!=null) && (_fileCollectionViaSuspectConditionUpload_.Count>0) && !this.MarkedForDeletion)?_fileCollectionViaSuspectConditionUpload_:null);
				info.AddValue("_fluConsentQuestionCollectionViaFluConsentAnswer", ((_fluConsentQuestionCollectionViaFluConsentAnswer!=null) && (_fluConsentQuestionCollectionViaFluConsentAnswer.Count>0) && !this.MarkedForDeletion)?_fluConsentQuestionCollectionViaFluConsentAnswer:null);
				info.AddValue("_fluConsentQuestionCollectionViaFluConsentAnswer_", ((_fluConsentQuestionCollectionViaFluConsentAnswer_!=null) && (_fluConsentQuestionCollectionViaFluConsentAnswer_.Count>0) && !this.MarkedForDeletion)?_fluConsentQuestionCollectionViaFluConsentAnswer_:null);
				info.AddValue("_gcNotGivenReasonCollectionViaEventCustomers", ((_gcNotGivenReasonCollectionViaEventCustomers!=null) && (_gcNotGivenReasonCollectionViaEventCustomers.Count>0) && !this.MarkedForDeletion)?_gcNotGivenReasonCollectionViaEventCustomers:null);
				info.AddValue("_gcNotGivenReasonCollectionViaEventCustomers_", ((_gcNotGivenReasonCollectionViaEventCustomers_!=null) && (_gcNotGivenReasonCollectionViaEventCustomers_.Count>0) && !this.MarkedForDeletion)?_gcNotGivenReasonCollectionViaEventCustomers_:null);
				info.AddValue("_hafTemplateCollectionViaClinicalTestQualificationCriteria", ((_hafTemplateCollectionViaClinicalTestQualificationCriteria!=null) && (_hafTemplateCollectionViaClinicalTestQualificationCriteria.Count>0) && !this.MarkedForDeletion)?_hafTemplateCollectionViaClinicalTestQualificationCriteria:null);
				info.AddValue("_hafTemplateCollectionViaEvents___", ((_hafTemplateCollectionViaEvents___!=null) && (_hafTemplateCollectionViaEvents___.Count>0) && !this.MarkedForDeletion)?_hafTemplateCollectionViaEvents___:null);
				info.AddValue("_hafTemplateCollectionViaEvents", ((_hafTemplateCollectionViaEvents!=null) && (_hafTemplateCollectionViaEvents.Count>0) && !this.MarkedForDeletion)?_hafTemplateCollectionViaEvents:null);
				info.AddValue("_hafTemplateCollectionViaEvents____", ((_hafTemplateCollectionViaEvents____!=null) && (_hafTemplateCollectionViaEvents____.Count>0) && !this.MarkedForDeletion)?_hafTemplateCollectionViaEvents____:null);
				info.AddValue("_hafTemplateCollectionViaEvents_", ((_hafTemplateCollectionViaEvents_!=null) && (_hafTemplateCollectionViaEvents_.Count>0) && !this.MarkedForDeletion)?_hafTemplateCollectionViaEvents_:null);
				info.AddValue("_hafTemplateCollectionViaCustomerClinicalQuestionAnswer", ((_hafTemplateCollectionViaCustomerClinicalQuestionAnswer!=null) && (_hafTemplateCollectionViaCustomerClinicalQuestionAnswer.Count>0) && !this.MarkedForDeletion)?_hafTemplateCollectionViaCustomerClinicalQuestionAnswer:null);
				info.AddValue("_hafTemplateCollectionViaEvents__", ((_hafTemplateCollectionViaEvents__!=null) && (_hafTemplateCollectionViaEvents__.Count>0) && !this.MarkedForDeletion)?_hafTemplateCollectionViaEvents__:null);
				info.AddValue("_hafTemplateCollectionViaCustomerClinicalQuestionAnswer_", ((_hafTemplateCollectionViaCustomerClinicalQuestionAnswer_!=null) && (_hafTemplateCollectionViaCustomerClinicalQuestionAnswer_.Count>0) && !this.MarkedForDeletion)?_hafTemplateCollectionViaCustomerClinicalQuestionAnswer_:null);
				info.AddValue("_hafTemplateCollectionViaClinicalTestQualificationCriteria_", ((_hafTemplateCollectionViaClinicalTestQualificationCriteria_!=null) && (_hafTemplateCollectionViaClinicalTestQualificationCriteria_.Count>0) && !this.MarkedForDeletion)?_hafTemplateCollectionViaClinicalTestQualificationCriteria_:null);
				info.AddValue("_hcpcsCodeCollectionViaTestHcpcsCode_", ((_hcpcsCodeCollectionViaTestHcpcsCode_!=null) && (_hcpcsCodeCollectionViaTestHcpcsCode_.Count>0) && !this.MarkedForDeletion)?_hcpcsCodeCollectionViaTestHcpcsCode_:null);
				info.AddValue("_hcpcsCodeCollectionViaTestHcpcsCode", ((_hcpcsCodeCollectionViaTestHcpcsCode!=null) && (_hcpcsCodeCollectionViaTestHcpcsCode.Count>0) && !this.MarkedForDeletion)?_hcpcsCodeCollectionViaTestHcpcsCode:null);
				info.AddValue("_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload", ((_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload!=null) && (_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload.Count>0) && !this.MarkedForDeletion)?_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload:null);
				info.AddValue("_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment", ((_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment!=null) && (_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment.Count>0) && !this.MarkedForDeletion)?_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment:null);
				info.AddValue("_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_", ((_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_!=null) && (_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_.Count>0) && !this.MarkedForDeletion)?_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_:null);
				info.AddValue("_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment", ((_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment!=null) && (_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment.Count>0) && !this.MarkedForDeletion)?_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment:null);
				info.AddValue("_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__", ((_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__!=null) && (_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__.Count>0) && !this.MarkedForDeletion)?_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__:null);
				info.AddValue("_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_", ((_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_!=null) && (_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_.Count>0) && !this.MarkedForDeletion)?_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_:null);
				info.AddValue("_hospitalFacilityCollectionViaEventCustomers", ((_hospitalFacilityCollectionViaEventCustomers!=null) && (_hospitalFacilityCollectionViaEventCustomers.Count>0) && !this.MarkedForDeletion)?_hospitalFacilityCollectionViaEventCustomers:null);
				info.AddValue("_hospitalFacilityCollectionViaEventCustomers_", ((_hospitalFacilityCollectionViaEventCustomers_!=null) && (_hospitalFacilityCollectionViaEventCustomers_.Count>0) && !this.MarkedForDeletion)?_hospitalFacilityCollectionViaEventCustomers_:null);
				info.AddValue("_hostPaymentCollectionViaHostPaymentTransaction", ((_hostPaymentCollectionViaHostPaymentTransaction!=null) && (_hostPaymentCollectionViaHostPaymentTransaction.Count>0) && !this.MarkedForDeletion)?_hostPaymentCollectionViaHostPaymentTransaction:null);
				info.AddValue("_icdCodesCollectionViaCustomerIcdCode", ((_icdCodesCollectionViaCustomerIcdCode!=null) && (_icdCodesCollectionViaCustomerIcdCode.Count>0) && !this.MarkedForDeletion)?_icdCodesCollectionViaCustomerIcdCode:null);
				info.AddValue("_insuranceCompanyCollectionViaEligibility", ((_insuranceCompanyCollectionViaEligibility!=null) && (_insuranceCompanyCollectionViaEligibility.Count>0) && !this.MarkedForDeletion)?_insuranceCompanyCollectionViaEligibility:null);
				info.AddValue("_languageCollectionViaHealthPlanCallQueueCriteria", ((_languageCollectionViaHealthPlanCallQueueCriteria!=null) && (_languageCollectionViaHealthPlanCallQueueCriteria.Count>0) && !this.MarkedForDeletion)?_languageCollectionViaHealthPlanCallQueueCriteria:null);
				info.AddValue("_languageCollectionViaCallQueueCustomer_", ((_languageCollectionViaCallQueueCustomer_!=null) && (_languageCollectionViaCallQueueCustomer_.Count>0) && !this.MarkedForDeletion)?_languageCollectionViaCallQueueCustomer_:null);
				info.AddValue("_languageCollectionViaCallQueueCustomer__", ((_languageCollectionViaCallQueueCustomer__!=null) && (_languageCollectionViaCallQueueCustomer__.Count>0) && !this.MarkedForDeletion)?_languageCollectionViaCallQueueCustomer__:null);
				info.AddValue("_languageCollectionViaCallQueueCustomer", ((_languageCollectionViaCallQueueCustomer!=null) && (_languageCollectionViaCallQueueCustomer.Count>0) && !this.MarkedForDeletion)?_languageCollectionViaCallQueueCustomer:null);
				info.AddValue("_languageCollectionViaHealthPlanCallQueueCriteria_", ((_languageCollectionViaHealthPlanCallQueueCriteria_!=null) && (_languageCollectionViaHealthPlanCallQueueCriteria_.Count>0) && !this.MarkedForDeletion)?_languageCollectionViaHealthPlanCallQueueCriteria_:null);
				info.AddValue("_lookupCollectionViaUncontactedCustomerCallQueue", ((_lookupCollectionViaUncontactedCustomerCallQueue!=null) && (_lookupCollectionViaUncontactedCustomerCallQueue.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaUncontactedCustomerCallQueue:null);
				info.AddValue("_lookupCollectionViaFillEventCallQueue", ((_lookupCollectionViaFillEventCallQueue!=null) && (_lookupCollectionViaFillEventCallQueue.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaFillEventCallQueue:null);
				info.AddValue("_lookupCollectionViaTestPerformedExternally_", ((_lookupCollectionViaTestPerformedExternally_!=null) && (_lookupCollectionViaTestPerformedExternally_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaTestPerformedExternally_:null);
				info.AddValue("_lookupCollectionViaLanguageBarrierCallQueue", ((_lookupCollectionViaLanguageBarrierCallQueue!=null) && (_lookupCollectionViaLanguageBarrierCallQueue.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaLanguageBarrierCallQueue:null);
				info.AddValue("_lookupCollectionViaMedicationUpload", ((_lookupCollectionViaMedicationUpload!=null) && (_lookupCollectionViaMedicationUpload.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaMedicationUpload:null);
				info.AddValue("_lookupCollectionViaHostFacilityRanking", ((_lookupCollectionViaHostFacilityRanking!=null) && (_lookupCollectionViaHostFacilityRanking.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaHostFacilityRanking:null);
				info.AddValue("_lookupCollectionViaHostFacilityRanking_", ((_lookupCollectionViaHostFacilityRanking_!=null) && (_lookupCollectionViaHostFacilityRanking_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaHostFacilityRanking_:null);
				info.AddValue("_lookupCollectionViaMailRoundCallQueue", ((_lookupCollectionViaMailRoundCallQueue!=null) && (_lookupCollectionViaMailRoundCallQueue.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaMailRoundCallQueue:null);
				info.AddValue("_lookupCollectionViaHostPaymentTransaction_", ((_lookupCollectionViaHostPaymentTransaction_!=null) && (_lookupCollectionViaHostPaymentTransaction_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaHostPaymentTransaction_:null);
				info.AddValue("_lookupCollectionViaHostPayment", ((_lookupCollectionViaHostPayment!=null) && (_lookupCollectionViaHostPayment.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaHostPayment:null);
				info.AddValue("_lookupCollectionViaHostPaymentTransaction", ((_lookupCollectionViaHostPaymentTransaction!=null) && (_lookupCollectionViaHostPaymentTransaction.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaHostPaymentTransaction:null);
				info.AddValue("_lookupCollectionViaHostPayment_", ((_lookupCollectionViaHostPayment_!=null) && (_lookupCollectionViaHostPayment_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaHostPayment_:null);
				info.AddValue("_lookupCollectionViaKynLabValues", ((_lookupCollectionViaKynLabValues!=null) && (_lookupCollectionViaKynLabValues.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaKynLabValues:null);
				info.AddValue("_lookupCollectionViaExportableReportsQueue", ((_lookupCollectionViaExportableReportsQueue!=null) && (_lookupCollectionViaExportableReportsQueue.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaExportableReportsQueue:null);
				info.AddValue("_lookupCollectionViaFile", ((_lookupCollectionViaFile!=null) && (_lookupCollectionViaFile.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaFile:null);
				info.AddValue("_lookupCollectionViaTestPerformedExternally", ((_lookupCollectionViaTestPerformedExternally!=null) && (_lookupCollectionViaTestPerformedExternally.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaTestPerformedExternally:null);
				info.AddValue("_lookupCollectionViaKynLabValues_", ((_lookupCollectionViaKynLabValues_!=null) && (_lookupCollectionViaKynLabValues_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaKynLabValues_:null);
				info.AddValue("_lookupCollectionViaPreQualificationQuestion", ((_lookupCollectionViaPreQualificationQuestion!=null) && (_lookupCollectionViaPreQualificationQuestion.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaPreQualificationQuestion:null);
				info.AddValue("_lookupCollectionViaPrintOrderItemTracking__", ((_lookupCollectionViaPrintOrderItemTracking__!=null) && (_lookupCollectionViaPrintOrderItemTracking__.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaPrintOrderItemTracking__:null);
				info.AddValue("_lookupCollectionViaPcpDisposition_", ((_lookupCollectionViaPcpDisposition_!=null) && (_lookupCollectionViaPcpDisposition_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaPcpDisposition_:null);
				info.AddValue("_lookupCollectionViaPcpAppointment_", ((_lookupCollectionViaPcpAppointment_!=null) && (_lookupCollectionViaPcpAppointment_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaPcpAppointment_:null);
				info.AddValue("_lookupCollectionViaPcpDisposition", ((_lookupCollectionViaPcpDisposition!=null) && (_lookupCollectionViaPcpDisposition.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaPcpDisposition:null);
				info.AddValue("_lookupCollectionViaRefundRequest", ((_lookupCollectionViaRefundRequest!=null) && (_lookupCollectionViaRefundRequest.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaRefundRequest:null);
				info.AddValue("_lookupCollectionViaRapsUpload", ((_lookupCollectionViaRapsUpload!=null) && (_lookupCollectionViaRapsUpload.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaRapsUpload:null);
				info.AddValue("_lookupCollectionViaRefundRequest_", ((_lookupCollectionViaRefundRequest_!=null) && (_lookupCollectionViaRefundRequest_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaRefundRequest_:null);
				info.AddValue("_lookupCollectionViaPrintOrderItemTracking___", ((_lookupCollectionViaPrintOrderItemTracking___!=null) && (_lookupCollectionViaPrintOrderItemTracking___.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaPrintOrderItemTracking___:null);
				info.AddValue("_lookupCollectionViaProspectCustomer", ((_lookupCollectionViaProspectCustomer!=null) && (_lookupCollectionViaProspectCustomer.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaProspectCustomer:null);
				info.AddValue("_lookupCollectionViaPcpAppointment", ((_lookupCollectionViaPcpAppointment!=null) && (_lookupCollectionViaPcpAppointment.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaPcpAppointment:null);
				info.AddValue("_lookupCollectionViaHafTemplate", ((_lookupCollectionViaHafTemplate!=null) && (_lookupCollectionViaHafTemplate.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaHafTemplate:null);
				info.AddValue("_lookupCollectionViaHafTemplate_", ((_lookupCollectionViaHafTemplate_!=null) && (_lookupCollectionViaHafTemplate_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaHafTemplate_:null);
				info.AddValue("_lookupCollectionViaSuspectConditionUpload", ((_lookupCollectionViaSuspectConditionUpload!=null) && (_lookupCollectionViaSuspectConditionUpload.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaSuspectConditionUpload:null);
				info.AddValue("_lookupCollectionViaMergeCustomerUpload", ((_lookupCollectionViaMergeCustomerUpload!=null) && (_lookupCollectionViaMergeCustomerUpload.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaMergeCustomerUpload:null);
				info.AddValue("_lookupCollectionViaNoShowCallQueue", ((_lookupCollectionViaNoShowCallQueue!=null) && (_lookupCollectionViaNoShowCallQueue.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaNoShowCallQueue:null);
				info.AddValue("_lookupCollectionViaStaffEventScheduleUpload", ((_lookupCollectionViaStaffEventScheduleUpload!=null) && (_lookupCollectionViaStaffEventScheduleUpload.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaStaffEventScheduleUpload:null);
				info.AddValue("_lookupCollectionViaHealthPlanRevenue", ((_lookupCollectionViaHealthPlanRevenue!=null) && (_lookupCollectionViaHealthPlanRevenue.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaHealthPlanRevenue:null);
				info.AddValue("_lookupCollectionViaHealthPlanRevenue_", ((_lookupCollectionViaHealthPlanRevenue_!=null) && (_lookupCollectionViaHealthPlanRevenue_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaHealthPlanRevenue_:null);
				info.AddValue("_lookupCollectionViaHafTemplate__", ((_lookupCollectionViaHafTemplate__!=null) && (_lookupCollectionViaHafTemplate__.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaHafTemplate__:null);
				info.AddValue("_lookupCollectionViaHafTemplate___", ((_lookupCollectionViaHafTemplate___!=null) && (_lookupCollectionViaHafTemplate___.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaHafTemplate___:null);
				info.AddValue("_lookupCollectionViaCustomerProfileHistory___", ((_lookupCollectionViaCustomerProfileHistory___!=null) && (_lookupCollectionViaCustomerProfileHistory___.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCustomerProfileHistory___:null);
				info.AddValue("_lookupCollectionViaCustomerProfileHistory__", ((_lookupCollectionViaCustomerProfileHistory__!=null) && (_lookupCollectionViaCustomerProfileHistory__.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCustomerProfileHistory__:null);
				info.AddValue("_lookupCollectionViaCustomerProfileHistory", ((_lookupCollectionViaCustomerProfileHistory!=null) && (_lookupCollectionViaCustomerProfileHistory.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCustomerProfileHistory:null);
				info.AddValue("_lookupCollectionViaCustomEventNotification", ((_lookupCollectionViaCustomEventNotification!=null) && (_lookupCollectionViaCustomEventNotification.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCustomEventNotification:null);
				info.AddValue("_lookupCollectionViaCustomerRegistrationNotes", ((_lookupCollectionViaCustomerRegistrationNotes!=null) && (_lookupCollectionViaCustomerRegistrationNotes.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCustomerRegistrationNotes:null);
				info.AddValue("_lookupCollectionViaCustomerProfileHistory_", ((_lookupCollectionViaCustomerProfileHistory_!=null) && (_lookupCollectionViaCustomerProfileHistory_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCustomerProfileHistory_:null);
				info.AddValue("_lookupCollectionViaCustomerPrimaryCarePhysician__", ((_lookupCollectionViaCustomerPrimaryCarePhysician__!=null) && (_lookupCollectionViaCustomerPrimaryCarePhysician__.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCustomerPrimaryCarePhysician__:null);
				info.AddValue("_lookupCollectionViaCustomerEventTestState__", ((_lookupCollectionViaCustomerEventTestState__!=null) && (_lookupCollectionViaCustomerEventTestState__.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCustomerEventTestState__:null);
				info.AddValue("_lookupCollectionViaCustomerEventTestState_", ((_lookupCollectionViaCustomerEventTestState_!=null) && (_lookupCollectionViaCustomerEventTestState_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCustomerEventTestState_:null);
				info.AddValue("_lookupCollectionViaCustomerEventTestState", ((_lookupCollectionViaCustomerEventTestState!=null) && (_lookupCollectionViaCustomerEventTestState.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCustomerEventTestState:null);
				info.AddValue("_lookupCollectionViaCustomerPrimaryCarePhysician_", ((_lookupCollectionViaCustomerPrimaryCarePhysician_!=null) && (_lookupCollectionViaCustomerPrimaryCarePhysician_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCustomerPrimaryCarePhysician_:null);
				info.AddValue("_lookupCollectionViaCustomerPrimaryCarePhysician", ((_lookupCollectionViaCustomerPrimaryCarePhysician!=null) && (_lookupCollectionViaCustomerPrimaryCarePhysician.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCustomerPrimaryCarePhysician:null);
				info.AddValue("_lookupCollectionViaCustomerPhoneNumberUpdateUpload", ((_lookupCollectionViaCustomerPhoneNumberUpdateUpload!=null) && (_lookupCollectionViaCustomerPhoneNumberUpdateUpload.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCustomerPhoneNumberUpdateUpload:null);
				info.AddValue("_lookupCollectionViaEligibilityUpload", ((_lookupCollectionViaEligibilityUpload!=null) && (_lookupCollectionViaEligibilityUpload.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEligibilityUpload:null);
				info.AddValue("_lookupCollectionViaEventCustomerResult__", ((_lookupCollectionViaEventCustomerResult__!=null) && (_lookupCollectionViaEventCustomerResult__.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEventCustomerResult__:null);
				info.AddValue("_lookupCollectionViaEventCustomerResult______", ((_lookupCollectionViaEventCustomerResult______!=null) && (_lookupCollectionViaEventCustomerResult______.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEventCustomerResult______:null);
				info.AddValue("_lookupCollectionViaEventCustomerResult_____", ((_lookupCollectionViaEventCustomerResult_____!=null) && (_lookupCollectionViaEventCustomerResult_____.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEventCustomerResult_____:null);
				info.AddValue("_lookupCollectionViaEventCustomerResult_", ((_lookupCollectionViaEventCustomerResult_!=null) && (_lookupCollectionViaEventCustomerResult_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEventCustomerResult_:null);
				info.AddValue("_lookupCollectionViaEventCustomerResult____", ((_lookupCollectionViaEventCustomerResult____!=null) && (_lookupCollectionViaEventCustomerResult____.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEventCustomerResult____:null);
				info.AddValue("_lookupCollectionViaEventCustomerResult___", ((_lookupCollectionViaEventCustomerResult___!=null) && (_lookupCollectionViaEventCustomerResult___.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEventCustomerResult___:null);
				info.AddValue("_lookupCollectionViaEventCustomerResult________", ((_lookupCollectionViaEventCustomerResult________!=null) && (_lookupCollectionViaEventCustomerResult________.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEventCustomerResult________:null);
				info.AddValue("_lookupCollectionViaEventAppointmentCancellationLog", ((_lookupCollectionViaEventAppointmentCancellationLog!=null) && (_lookupCollectionViaEventAppointmentCancellationLog.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEventAppointmentCancellationLog:null);
				info.AddValue("_lookupCollectionViaEmailTemplate_", ((_lookupCollectionViaEmailTemplate_!=null) && (_lookupCollectionViaEmailTemplate_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEmailTemplate_:null);
				info.AddValue("_lookupCollectionViaEmailTemplate", ((_lookupCollectionViaEmailTemplate!=null) && (_lookupCollectionViaEmailTemplate.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEmailTemplate:null);
				info.AddValue("_lookupCollectionViaEventCustomerResult_______", ((_lookupCollectionViaEventCustomerResult_______!=null) && (_lookupCollectionViaEventCustomerResult_______.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEventCustomerResult_______:null);
				info.AddValue("_lookupCollectionViaEventCustomerResult", ((_lookupCollectionViaEventCustomerResult!=null) && (_lookupCollectionViaEventCustomerResult.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEventCustomerResult:null);
				info.AddValue("_lookupCollectionViaEventAppointmentChangeLog", ((_lookupCollectionViaEventAppointmentChangeLog!=null) && (_lookupCollectionViaEventAppointmentChangeLog.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEventAppointmentChangeLog:null);
				info.AddValue("_lookupCollectionViaCustomerActivityTypeUpload", ((_lookupCollectionViaCustomerActivityTypeUpload!=null) && (_lookupCollectionViaCustomerActivityTypeUpload.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCustomerActivityTypeUpload:null);
				info.AddValue("_lookupCollectionViaCalls", ((_lookupCollectionViaCalls!=null) && (_lookupCollectionViaCalls.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCalls:null);
				info.AddValue("_lookupCollectionViaCalls_", ((_lookupCollectionViaCalls_!=null) && (_lookupCollectionViaCalls_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCalls_:null);
				info.AddValue("_lookupCollectionViaCallRoundCallQueue", ((_lookupCollectionViaCallRoundCallQueue!=null) && (_lookupCollectionViaCallRoundCallQueue.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCallRoundCallQueue:null);
				info.AddValue("_lookupCollectionViaCampaign", ((_lookupCollectionViaCampaign!=null) && (_lookupCollectionViaCampaign.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCampaign:null);
				info.AddValue("_lookupCollectionViaCallUpload", ((_lookupCollectionViaCallUpload!=null) && (_lookupCollectionViaCallUpload.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCallUpload:null);
				info.AddValue("_lookupCollectionViaCalls__", ((_lookupCollectionViaCalls__!=null) && (_lookupCollectionViaCalls__.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCalls__:null);
				info.AddValue("_lookupCollectionViaCallQueueCustomer__", ((_lookupCollectionViaCallQueueCustomer__!=null) && (_lookupCollectionViaCallQueueCustomer__.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCallQueueCustomer__:null);
				info.AddValue("_lookupCollectionViaCallCenterTeam", ((_lookupCollectionViaCallCenterTeam!=null) && (_lookupCollectionViaCallCenterTeam.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCallCenterTeam:null);
				info.AddValue("_lookupCollectionViaAccountHraChatQuestionnaire_", ((_lookupCollectionViaAccountHraChatQuestionnaire_!=null) && (_lookupCollectionViaAccountHraChatQuestionnaire_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaAccountHraChatQuestionnaire_:null);
				info.AddValue("_lookupCollectionViaAccountHraChatQuestionnaire", ((_lookupCollectionViaAccountHraChatQuestionnaire!=null) && (_lookupCollectionViaAccountHraChatQuestionnaire.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaAccountHraChatQuestionnaire:null);
				info.AddValue("_lookupCollectionViaCallQueueCustomer_", ((_lookupCollectionViaCallQueueCustomer_!=null) && (_lookupCollectionViaCallQueueCustomer_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCallQueueCustomer_:null);
				info.AddValue("_lookupCollectionViaCallQueueCustomer", ((_lookupCollectionViaCallQueueCustomer!=null) && (_lookupCollectionViaCallQueueCustomer.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCallQueueCustomer:null);
				info.AddValue("_lookupCollectionViaCallCenterTeam_", ((_lookupCollectionViaCallCenterTeam_!=null) && (_lookupCollectionViaCallCenterTeam_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCallCenterTeam_:null);
				info.AddValue("_lookupCollectionViaCampaign_", ((_lookupCollectionViaCampaign_!=null) && (_lookupCollectionViaCampaign_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCampaign_:null);
				info.AddValue("_lookupCollectionViaClinicalTestQualificationCriteria_", ((_lookupCollectionViaClinicalTestQualificationCriteria_!=null) && (_lookupCollectionViaClinicalTestQualificationCriteria_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaClinicalTestQualificationCriteria_:null);
				info.AddValue("_lookupCollectionViaClinicalTestQualificationCriteria", ((_lookupCollectionViaClinicalTestQualificationCriteria!=null) && (_lookupCollectionViaClinicalTestQualificationCriteria.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaClinicalTestQualificationCriteria:null);
				info.AddValue("_lookupCollectionViaCheckListTemplate_", ((_lookupCollectionViaCheckListTemplate_!=null) && (_lookupCollectionViaCheckListTemplate_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCheckListTemplate_:null);
				info.AddValue("_lookupCollectionViaCorporateUpload", ((_lookupCollectionViaCorporateUpload!=null) && (_lookupCollectionViaCorporateUpload.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCorporateUpload:null);
				info.AddValue("_lookupCollectionViaClinicalTestQualificationCriteria___", ((_lookupCollectionViaClinicalTestQualificationCriteria___!=null) && (_lookupCollectionViaClinicalTestQualificationCriteria___.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaClinicalTestQualificationCriteria___:null);
				info.AddValue("_lookupCollectionViaClinicalTestQualificationCriteria__", ((_lookupCollectionViaClinicalTestQualificationCriteria__!=null) && (_lookupCollectionViaClinicalTestQualificationCriteria__.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaClinicalTestQualificationCriteria__:null);
				info.AddValue("_lookupCollectionViaCheckListTemplate", ((_lookupCollectionViaCheckListTemplate!=null) && (_lookupCollectionViaCheckListTemplate.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCheckListTemplate:null);
				info.AddValue("_lookupCollectionViaCampaignActivity", ((_lookupCollectionViaCampaignActivity!=null) && (_lookupCollectionViaCampaignActivity.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCampaignActivity:null);
				info.AddValue("_lookupCollectionViaCampaign___", ((_lookupCollectionViaCampaign___!=null) && (_lookupCollectionViaCampaign___.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCampaign___:null);
				info.AddValue("_lookupCollectionViaCampaign__", ((_lookupCollectionViaCampaign__!=null) && (_lookupCollectionViaCampaign__.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCampaign__:null);
				info.AddValue("_lookupCollectionViaCheckListAnswer_", ((_lookupCollectionViaCheckListAnswer_!=null) && (_lookupCollectionViaCheckListAnswer_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCheckListAnswer_:null);
				info.AddValue("_lookupCollectionViaCheckListAnswer", ((_lookupCollectionViaCheckListAnswer!=null) && (_lookupCollectionViaCheckListAnswer.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCheckListAnswer:null);
				info.AddValue("_lookupCollectionViaCampaignActivity_", ((_lookupCollectionViaCampaignActivity_!=null) && (_lookupCollectionViaCampaignActivity_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaCampaignActivity_:null);
				info.AddValue("_lookupCollectionViaEvents________", ((_lookupCollectionViaEvents________!=null) && (_lookupCollectionViaEvents________.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEvents________:null);
				info.AddValue("_lookupCollectionViaEvents______________", ((_lookupCollectionViaEvents______________!=null) && (_lookupCollectionViaEvents______________.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEvents______________:null);
				info.AddValue("_lookupCollectionViaEvents_________", ((_lookupCollectionViaEvents_________!=null) && (_lookupCollectionViaEvents_________.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEvents_________:null);
				info.AddValue("_lookupCollectionViaEvents_____________", ((_lookupCollectionViaEvents_____________!=null) && (_lookupCollectionViaEvents_____________.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEvents_____________:null);
				info.AddValue("_lookupCollectionViaEvents___________________", ((_lookupCollectionViaEvents___________________!=null) && (_lookupCollectionViaEvents___________________.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEvents___________________:null);
				info.AddValue("_lookupCollectionViaEvents__________________", ((_lookupCollectionViaEvents__________________!=null) && (_lookupCollectionViaEvents__________________.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEvents__________________:null);
				info.AddValue("_lookupCollectionViaEvents_______________", ((_lookupCollectionViaEvents_______________!=null) && (_lookupCollectionViaEvents_______________.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEvents_______________:null);
				info.AddValue("_lookupCollectionViaEvents_______________________", ((_lookupCollectionViaEvents_______________________!=null) && (_lookupCollectionViaEvents_______________________.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEvents_______________________:null);
				info.AddValue("_lookupCollectionViaEvents____________", ((_lookupCollectionViaEvents____________!=null) && (_lookupCollectionViaEvents____________.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEvents____________:null);
				info.AddValue("_lookupCollectionViaEvents____", ((_lookupCollectionViaEvents____!=null) && (_lookupCollectionViaEvents____.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEvents____:null);
				info.AddValue("_lookupCollectionViaEvents________________", ((_lookupCollectionViaEvents________________!=null) && (_lookupCollectionViaEvents________________.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEvents________________:null);
				info.AddValue("_lookupCollectionViaEvents_______", ((_lookupCollectionViaEvents_______!=null) && (_lookupCollectionViaEvents_______.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEvents_______:null);
				info.AddValue("_lookupCollectionViaEvents_____", ((_lookupCollectionViaEvents_____!=null) && (_lookupCollectionViaEvents_____.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEvents_____:null);
				info.AddValue("_lookupCollectionViaEvents__________", ((_lookupCollectionViaEvents__________!=null) && (_lookupCollectionViaEvents__________.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEvents__________:null);
				info.AddValue("_lookupCollectionViaEvents_________________", ((_lookupCollectionViaEvents_________________!=null) && (_lookupCollectionViaEvents_________________.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEvents_________________:null);
				info.AddValue("_lookupCollectionViaEvents___________", ((_lookupCollectionViaEvents___________!=null) && (_lookupCollectionViaEvents___________.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEvents___________:null);
				info.AddValue("_lookupCollectionViaEvents______________________", ((_lookupCollectionViaEvents______________________!=null) && (_lookupCollectionViaEvents______________________.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEvents______________________:null);
				info.AddValue("_lookupCollectionViaEvents", ((_lookupCollectionViaEvents!=null) && (_lookupCollectionViaEvents.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEvents:null);
				info.AddValue("_lookupCollectionViaEvents______", ((_lookupCollectionViaEvents______!=null) && (_lookupCollectionViaEvents______.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEvents______:null);
				info.AddValue("_lookupCollectionViaEvents__", ((_lookupCollectionViaEvents__!=null) && (_lookupCollectionViaEvents__.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEvents__:null);
				info.AddValue("_lookupCollectionViaEventCustomers___", ((_lookupCollectionViaEventCustomers___!=null) && (_lookupCollectionViaEventCustomers___.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEventCustomers___:null);
				info.AddValue("_lookupCollectionViaEventCustomers", ((_lookupCollectionViaEventCustomers!=null) && (_lookupCollectionViaEventCustomers.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEventCustomers:null);
				info.AddValue("_lookupCollectionViaEventCustomers_", ((_lookupCollectionViaEventCustomers_!=null) && (_lookupCollectionViaEventCustomers_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEventCustomers_:null);
				info.AddValue("_lookupCollectionViaEventCustomers__", ((_lookupCollectionViaEventCustomers__!=null) && (_lookupCollectionViaEventCustomers__.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEventCustomers__:null);
				info.AddValue("_lookupCollectionViaEvents___", ((_lookupCollectionViaEvents___!=null) && (_lookupCollectionViaEvents___.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEvents___:null);
				info.AddValue("_lookupCollectionViaEvents________________________", ((_lookupCollectionViaEvents________________________!=null) && (_lookupCollectionViaEvents________________________.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEvents________________________:null);
				info.AddValue("_lookupCollectionViaEvents____________________", ((_lookupCollectionViaEvents____________________!=null) && (_lookupCollectionViaEvents____________________.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEvents____________________:null);
				info.AddValue("_lookupCollectionViaEvents_____________________", ((_lookupCollectionViaEvents_____________________!=null) && (_lookupCollectionViaEvents_____________________.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEvents_____________________:null);
				info.AddValue("_lookupCollectionViaEvents_", ((_lookupCollectionViaEvents_!=null) && (_lookupCollectionViaEvents_.Count>0) && !this.MarkedForDeletion)?_lookupCollectionViaEvents_:null);
				info.AddValue("_marketingPrintOrderItemCollectionViaPrintOrderItemTracking", ((_marketingPrintOrderItemCollectionViaPrintOrderItemTracking!=null) && (_marketingPrintOrderItemCollectionViaPrintOrderItemTracking.Count>0) && !this.MarkedForDeletion)?_marketingPrintOrderItemCollectionViaPrintOrderItemTracking:null);
				info.AddValue("_marketingPrintOrderItemCollectionViaPrintOrderItemTracking_", ((_marketingPrintOrderItemCollectionViaPrintOrderItemTracking_!=null) && (_marketingPrintOrderItemCollectionViaPrintOrderItemTracking_.Count>0) && !this.MarkedForDeletion)?_marketingPrintOrderItemCollectionViaPrintOrderItemTracking_:null);
				info.AddValue("_medicareQuestionCollectionViaCustomerMedicareQuestionAnswer", ((_medicareQuestionCollectionViaCustomerMedicareQuestionAnswer!=null) && (_medicareQuestionCollectionViaCustomerMedicareQuestionAnswer.Count>0) && !this.MarkedForDeletion)?_medicareQuestionCollectionViaCustomerMedicareQuestionAnswer:null);
				info.AddValue("_ndcCollectionViaCurrentMedication", ((_ndcCollectionViaCurrentMedication!=null) && (_ndcCollectionViaCurrentMedication.Count>0) && !this.MarkedForDeletion)?_ndcCollectionViaCurrentMedication:null);
				info.AddValue("_notesDetailsCollectionViaPriorityInQueue", ((_notesDetailsCollectionViaPriorityInQueue!=null) && (_notesDetailsCollectionViaPriorityInQueue.Count>0) && !this.MarkedForDeletion)?_notesDetailsCollectionViaPriorityInQueue:null);
				info.AddValue("_notesDetailsCollectionViaPriorityInQueue_", ((_notesDetailsCollectionViaPriorityInQueue_!=null) && (_notesDetailsCollectionViaPriorityInQueue_.Count>0) && !this.MarkedForDeletion)?_notesDetailsCollectionViaPriorityInQueue_:null);
				info.AddValue("_notesDetailsCollectionViaCallQueueCustomer_", ((_notesDetailsCollectionViaCallQueueCustomer_!=null) && (_notesDetailsCollectionViaCallQueueCustomer_.Count>0) && !this.MarkedForDeletion)?_notesDetailsCollectionViaCallQueueCustomer_:null);
				info.AddValue("_notesDetailsCollectionViaEvents", ((_notesDetailsCollectionViaEvents!=null) && (_notesDetailsCollectionViaEvents.Count>0) && !this.MarkedForDeletion)?_notesDetailsCollectionViaEvents:null);
				info.AddValue("_notesDetailsCollectionViaCallQueueCustomer__", ((_notesDetailsCollectionViaCallQueueCustomer__!=null) && (_notesDetailsCollectionViaCallQueueCustomer__.Count>0) && !this.MarkedForDeletion)?_notesDetailsCollectionViaCallQueueCustomer__:null);
				info.AddValue("_notesDetailsCollectionViaEvents_", ((_notesDetailsCollectionViaEvents_!=null) && (_notesDetailsCollectionViaEvents_.Count>0) && !this.MarkedForDeletion)?_notesDetailsCollectionViaEvents_:null);
				info.AddValue("_notesDetailsCollectionViaEvents___", ((_notesDetailsCollectionViaEvents___!=null) && (_notesDetailsCollectionViaEvents___.Count>0) && !this.MarkedForDeletion)?_notesDetailsCollectionViaEvents___:null);
				info.AddValue("_notesDetailsCollectionViaCallQueueCustomer", ((_notesDetailsCollectionViaCallQueueCustomer!=null) && (_notesDetailsCollectionViaCallQueueCustomer.Count>0) && !this.MarkedForDeletion)?_notesDetailsCollectionViaCallQueueCustomer:null);
				info.AddValue("_notesDetailsCollectionViaEvents____", ((_notesDetailsCollectionViaEvents____!=null) && (_notesDetailsCollectionViaEvents____.Count>0) && !this.MarkedForDeletion)?_notesDetailsCollectionViaEvents____:null);
				info.AddValue("_notesDetailsCollectionViaEvents__", ((_notesDetailsCollectionViaEvents__!=null) && (_notesDetailsCollectionViaEvents__.Count>0) && !this.MarkedForDeletion)?_notesDetailsCollectionViaEvents__:null);
				info.AddValue("_notificationMediumCollectionViaNotificationType", ((_notificationMediumCollectionViaNotificationType!=null) && (_notificationMediumCollectionViaNotificationType.Count>0) && !this.MarkedForDeletion)?_notificationMediumCollectionViaNotificationType:null);
				info.AddValue("_notificationMediumCollectionViaNotification", ((_notificationMediumCollectionViaNotification!=null) && (_notificationMediumCollectionViaNotification.Count>0) && !this.MarkedForDeletion)?_notificationMediumCollectionViaNotification:null);
				info.AddValue("_notificationTypeCollectionViaEventCustomerTestNotPerformedNotification", ((_notificationTypeCollectionViaEventCustomerTestNotPerformedNotification!=null) && (_notificationTypeCollectionViaEventCustomerTestNotPerformedNotification.Count>0) && !this.MarkedForDeletion)?_notificationTypeCollectionViaEventCustomerTestNotPerformedNotification:null);
				info.AddValue("_notificationTypeCollectionViaEmailTemplate", ((_notificationTypeCollectionViaEmailTemplate!=null) && (_notificationTypeCollectionViaEmailTemplate.Count>0) && !this.MarkedForDeletion)?_notificationTypeCollectionViaEmailTemplate:null);
				info.AddValue("_notificationTypeCollectionViaNotification", ((_notificationTypeCollectionViaNotification!=null) && (_notificationTypeCollectionViaNotification.Count>0) && !this.MarkedForDeletion)?_notificationTypeCollectionViaNotification:null);
				info.AddValue("_orderCollectionViaRefundRequest_", ((_orderCollectionViaRefundRequest_!=null) && (_orderCollectionViaRefundRequest_.Count>0) && !this.MarkedForDeletion)?_orderCollectionViaRefundRequest_:null);
				info.AddValue("_orderCollectionViaRefundRequest", ((_orderCollectionViaRefundRequest!=null) && (_orderCollectionViaRefundRequest.Count>0) && !this.MarkedForDeletion)?_orderCollectionViaRefundRequest:null);
				info.AddValue("_organizationCollectionViaAccountTestHcpcsCode_", ((_organizationCollectionViaAccountTestHcpcsCode_!=null) && (_organizationCollectionViaAccountTestHcpcsCode_.Count>0) && !this.MarkedForDeletion)?_organizationCollectionViaAccountTestHcpcsCode_:null);
				info.AddValue("_organizationCollectionViaAccountTestHcpcsCode", ((_organizationCollectionViaAccountTestHcpcsCode!=null) && (_organizationCollectionViaAccountTestHcpcsCode.Count>0) && !this.MarkedForDeletion)?_organizationCollectionViaAccountTestHcpcsCode:null);
				info.AddValue("_organizationCollectionViaAccountCallCenterOrganization", ((_organizationCollectionViaAccountCallCenterOrganization!=null) && (_organizationCollectionViaAccountCallCenterOrganization.Count>0) && !this.MarkedForDeletion)?_organizationCollectionViaAccountCallCenterOrganization:null);
				info.AddValue("_organizationCollectionViaAccountCallCenterOrganization_", ((_organizationCollectionViaAccountCallCenterOrganization_!=null) && (_organizationCollectionViaAccountCallCenterOrganization_.Count>0) && !this.MarkedForDeletion)?_organizationCollectionViaAccountCallCenterOrganization_:null);
				info.AddValue("_organizationCollectionViaEventAccountTestHcpcsCode_", ((_organizationCollectionViaEventAccountTestHcpcsCode_!=null) && (_organizationCollectionViaEventAccountTestHcpcsCode_.Count>0) && !this.MarkedForDeletion)?_organizationCollectionViaEventAccountTestHcpcsCode_:null);
				info.AddValue("_organizationCollectionViaEventAccountTestHcpcsCode", ((_organizationCollectionViaEventAccountTestHcpcsCode!=null) && (_organizationCollectionViaEventAccountTestHcpcsCode.Count>0) && !this.MarkedForDeletion)?_organizationCollectionViaEventAccountTestHcpcsCode:null);
				info.AddValue("_organizationCollectionViaMarketingPrintOrder", ((_organizationCollectionViaMarketingPrintOrder!=null) && (_organizationCollectionViaMarketingPrintOrder.Count>0) && !this.MarkedForDeletion)?_organizationCollectionViaMarketingPrintOrder:null);
				info.AddValue("_organizationCollectionViaMarketingPrintOrder_", ((_organizationCollectionViaMarketingPrintOrder_!=null) && (_organizationCollectionViaMarketingPrintOrder_.Count>0) && !this.MarkedForDeletion)?_organizationCollectionViaMarketingPrintOrder_:null);
				info.AddValue("_organizationCollectionViaAffiliateProfile", ((_organizationCollectionViaAffiliateProfile!=null) && (_organizationCollectionViaAffiliateProfile.Count>0) && !this.MarkedForDeletion)?_organizationCollectionViaAffiliateProfile:null);
				info.AddValue("_packageCollectionViaPreApprovedPackage", ((_packageCollectionViaPreApprovedPackage!=null) && (_packageCollectionViaPreApprovedPackage.Count>0) && !this.MarkedForDeletion)?_packageCollectionViaPreApprovedPackage:null);
				info.AddValue("_physicianMasterCollectionViaCustomerPrimaryCarePhysician", ((_physicianMasterCollectionViaCustomerPrimaryCarePhysician!=null) && (_physicianMasterCollectionViaCustomerPrimaryCarePhysician.Count>0) && !this.MarkedForDeletion)?_physicianMasterCollectionViaCustomerPrimaryCarePhysician:null);
				info.AddValue("_physicianMasterCollectionViaCustomerPrimaryCarePhysician_", ((_physicianMasterCollectionViaCustomerPrimaryCarePhysician_!=null) && (_physicianMasterCollectionViaCustomerPrimaryCarePhysician_.Count>0) && !this.MarkedForDeletion)?_physicianMasterCollectionViaCustomerPrimaryCarePhysician_:null);
				info.AddValue("_physicianMasterCollectionViaCustomerPrimaryCarePhysician__", ((_physicianMasterCollectionViaCustomerPrimaryCarePhysician__!=null) && (_physicianMasterCollectionViaCustomerPrimaryCarePhysician__.Count>0) && !this.MarkedForDeletion)?_physicianMasterCollectionViaCustomerPrimaryCarePhysician__:null);
				info.AddValue("_podDetailsCollectionViaSalesRepPodAssigments", ((_podDetailsCollectionViaSalesRepPodAssigments!=null) && (_podDetailsCollectionViaSalesRepPodAssigments.Count>0) && !this.MarkedForDeletion)?_podDetailsCollectionViaSalesRepPodAssigments:null);
				info.AddValue("_podDetailsCollectionViaEventStaffAssignment", ((_podDetailsCollectionViaEventStaffAssignment!=null) && (_podDetailsCollectionViaEventStaffAssignment.Count>0) && !this.MarkedForDeletion)?_podDetailsCollectionViaEventStaffAssignment:null);
				info.AddValue("_podDetailsCollectionViaEventNote_", ((_podDetailsCollectionViaEventNote_!=null) && (_podDetailsCollectionViaEventNote_.Count>0) && !this.MarkedForDeletion)?_podDetailsCollectionViaEventNote_:null);
				info.AddValue("_podDetailsCollectionViaEventNote", ((_podDetailsCollectionViaEventNote!=null) && (_podDetailsCollectionViaEventNote.Count>0) && !this.MarkedForDeletion)?_podDetailsCollectionViaEventNote:null);
				info.AddValue("_podDetailsCollectionViaPodDefaultTeam", ((_podDetailsCollectionViaPodDefaultTeam!=null) && (_podDetailsCollectionViaPodDefaultTeam.Count>0) && !this.MarkedForDeletion)?_podDetailsCollectionViaPodDefaultTeam:null);
				info.AddValue("_podDetailsCollectionViaEventStaffAssignment_", ((_podDetailsCollectionViaEventStaffAssignment_!=null) && (_podDetailsCollectionViaEventStaffAssignment_.Count>0) && !this.MarkedForDeletion)?_podDetailsCollectionViaEventStaffAssignment_:null);
				info.AddValue("_podDetailsCollectionViaEventStaffAssignment__", ((_podDetailsCollectionViaEventStaffAssignment__!=null) && (_podDetailsCollectionViaEventStaffAssignment__.Count>0) && !this.MarkedForDeletion)?_podDetailsCollectionViaEventStaffAssignment__:null);
				info.AddValue("_preQualificationQuestionCollectionViaEventCustomerQuestionAnswer_", ((_preQualificationQuestionCollectionViaEventCustomerQuestionAnswer_!=null) && (_preQualificationQuestionCollectionViaEventCustomerQuestionAnswer_.Count>0) && !this.MarkedForDeletion)?_preQualificationQuestionCollectionViaEventCustomerQuestionAnswer_:null);
				info.AddValue("_preQualificationQuestionCollectionViaDisqualifiedTest", ((_preQualificationQuestionCollectionViaDisqualifiedTest!=null) && (_preQualificationQuestionCollectionViaDisqualifiedTest.Count>0) && !this.MarkedForDeletion)?_preQualificationQuestionCollectionViaDisqualifiedTest:null);
				info.AddValue("_preQualificationQuestionCollectionViaDisqualifiedTest_", ((_preQualificationQuestionCollectionViaDisqualifiedTest_!=null) && (_preQualificationQuestionCollectionViaDisqualifiedTest_.Count>0) && !this.MarkedForDeletion)?_preQualificationQuestionCollectionViaDisqualifiedTest_:null);
				info.AddValue("_preQualificationQuestionCollectionViaEventCustomerQuestionAnswer", ((_preQualificationQuestionCollectionViaEventCustomerQuestionAnswer!=null) && (_preQualificationQuestionCollectionViaEventCustomerQuestionAnswer.Count>0) && !this.MarkedForDeletion)?_preQualificationQuestionCollectionViaEventCustomerQuestionAnswer:null);
				info.AddValue("_prospectCustomerCollectionViaCallQueueCustomer_", ((_prospectCustomerCollectionViaCallQueueCustomer_!=null) && (_prospectCustomerCollectionViaCallQueueCustomer_.Count>0) && !this.MarkedForDeletion)?_prospectCustomerCollectionViaCallQueueCustomer_:null);
				info.AddValue("_prospectCustomerCollectionViaCallQueueCustomer", ((_prospectCustomerCollectionViaCallQueueCustomer!=null) && (_prospectCustomerCollectionViaCallQueueCustomer.Count>0) && !this.MarkedForDeletion)?_prospectCustomerCollectionViaCallQueueCustomer:null);
				info.AddValue("_prospectCustomerCollectionViaCallQueueCustomer__", ((_prospectCustomerCollectionViaCallQueueCustomer__!=null) && (_prospectCustomerCollectionViaCallQueueCustomer__.Count>0) && !this.MarkedForDeletion)?_prospectCustomerCollectionViaCallQueueCustomer__:null);
				info.AddValue("_prospectListDetailsCollectionViaProspects", ((_prospectListDetailsCollectionViaProspects!=null) && (_prospectListDetailsCollectionViaProspects.Count>0) && !this.MarkedForDeletion)?_prospectListDetailsCollectionViaProspects:null);
				info.AddValue("_prospectsCollectionViaHostFacilityRanking", ((_prospectsCollectionViaHostFacilityRanking!=null) && (_prospectsCollectionViaHostFacilityRanking.Count>0) && !this.MarkedForDeletion)?_prospectsCollectionViaHostFacilityRanking:null);
				info.AddValue("_prospectsCollectionViaHostPayment", ((_prospectsCollectionViaHostPayment!=null) && (_prospectsCollectionViaHostPayment.Count>0) && !this.MarkedForDeletion)?_prospectsCollectionViaHostPayment:null);
				info.AddValue("_prospectTypeCollectionViaProspects", ((_prospectTypeCollectionViaProspects!=null) && (_prospectTypeCollectionViaProspects.Count>0) && !this.MarkedForDeletion)?_prospectTypeCollectionViaProspects:null);
				info.AddValue("_refundRequestCollectionViaEventAppointmentCancellationLog", ((_refundRequestCollectionViaEventAppointmentCancellationLog!=null) && (_refundRequestCollectionViaEventAppointmentCancellationLog.Count>0) && !this.MarkedForDeletion)?_refundRequestCollectionViaEventAppointmentCancellationLog:null);
				info.AddValue("_relationshipCollectionViaGuardianDetails_", ((_relationshipCollectionViaGuardianDetails_!=null) && (_relationshipCollectionViaGuardianDetails_.Count>0) && !this.MarkedForDeletion)?_relationshipCollectionViaGuardianDetails_:null);
				info.AddValue("_relationshipCollectionViaGuardianDetails", ((_relationshipCollectionViaGuardianDetails!=null) && (_relationshipCollectionViaGuardianDetails.Count>0) && !this.MarkedForDeletion)?_relationshipCollectionViaGuardianDetails:null);
				info.AddValue("_rescheduleCancelDispositionCollectionViaEventAppointmentChangeLog", ((_rescheduleCancelDispositionCollectionViaEventAppointmentChangeLog!=null) && (_rescheduleCancelDispositionCollectionViaEventAppointmentChangeLog.Count>0) && !this.MarkedForDeletion)?_rescheduleCancelDispositionCollectionViaEventAppointmentChangeLog:null);
				info.AddValue("_rescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog", ((_rescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog!=null) && (_rescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog.Count>0) && !this.MarkedForDeletion)?_rescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog:null);
				info.AddValue("_roleCollectionViaUser", ((_roleCollectionViaUser!=null) && (_roleCollectionViaUser.Count>0) && !this.MarkedForDeletion)?_roleCollectionViaUser:null);
				info.AddValue("_roleCollectionViaHostFacilityRanking", ((_roleCollectionViaHostFacilityRanking!=null) && (_roleCollectionViaHostFacilityRanking.Count>0) && !this.MarkedForDeletion)?_roleCollectionViaHostFacilityRanking:null);
				info.AddValue("_roleCollectionViaUser_", ((_roleCollectionViaUser_!=null) && (_roleCollectionViaUser_.Count>0) && !this.MarkedForDeletion)?_roleCollectionViaUser_:null);
				info.AddValue("_scheduleMethodCollectionViaEvents___", ((_scheduleMethodCollectionViaEvents___!=null) && (_scheduleMethodCollectionViaEvents___.Count>0) && !this.MarkedForDeletion)?_scheduleMethodCollectionViaEvents___:null);
				info.AddValue("_scheduleMethodCollectionViaEvents____", ((_scheduleMethodCollectionViaEvents____!=null) && (_scheduleMethodCollectionViaEvents____.Count>0) && !this.MarkedForDeletion)?_scheduleMethodCollectionViaEvents____:null);
				info.AddValue("_scheduleMethodCollectionViaEvents", ((_scheduleMethodCollectionViaEvents!=null) && (_scheduleMethodCollectionViaEvents.Count>0) && !this.MarkedForDeletion)?_scheduleMethodCollectionViaEvents:null);
				info.AddValue("_scheduleMethodCollectionViaEvents_", ((_scheduleMethodCollectionViaEvents_!=null) && (_scheduleMethodCollectionViaEvents_.Count>0) && !this.MarkedForDeletion)?_scheduleMethodCollectionViaEvents_:null);
				info.AddValue("_scheduleMethodCollectionViaEvents__", ((_scheduleMethodCollectionViaEvents__!=null) && (_scheduleMethodCollectionViaEvents__.Count>0) && !this.MarkedForDeletion)?_scheduleMethodCollectionViaEvents__:null);
				info.AddValue("_scriptsCollectionViaCallQueue", ((_scriptsCollectionViaCallQueue!=null) && (_scriptsCollectionViaCallQueue.Count>0) && !this.MarkedForDeletion)?_scriptsCollectionViaCallQueue:null);
				info.AddValue("_scriptsCollectionViaCallQueue_", ((_scriptsCollectionViaCallQueue_!=null) && (_scriptsCollectionViaCallQueue_.Count>0) && !this.MarkedForDeletion)?_scriptsCollectionViaCallQueue_:null);
				info.AddValue("_shippingOptionCollectionViaShippingDetail_", ((_shippingOptionCollectionViaShippingDetail_!=null) && (_shippingOptionCollectionViaShippingDetail_.Count>0) && !this.MarkedForDeletion)?_shippingOptionCollectionViaShippingDetail_:null);
				info.AddValue("_shippingOptionCollectionViaShippingDetail", ((_shippingOptionCollectionViaShippingDetail!=null) && (_shippingOptionCollectionViaShippingDetail.Count>0) && !this.MarkedForDeletion)?_shippingOptionCollectionViaShippingDetail:null);
				info.AddValue("_staffEventRoleCollectionViaEventStaffAssignment__", ((_staffEventRoleCollectionViaEventStaffAssignment__!=null) && (_staffEventRoleCollectionViaEventStaffAssignment__.Count>0) && !this.MarkedForDeletion)?_staffEventRoleCollectionViaEventStaffAssignment__:null);
				info.AddValue("_staffEventRoleCollectionViaPodDefaultTeam", ((_staffEventRoleCollectionViaPodDefaultTeam!=null) && (_staffEventRoleCollectionViaPodDefaultTeam.Count>0) && !this.MarkedForDeletion)?_staffEventRoleCollectionViaPodDefaultTeam:null);
				info.AddValue("_staffEventRoleCollectionViaEventStaffAssignment", ((_staffEventRoleCollectionViaEventStaffAssignment!=null) && (_staffEventRoleCollectionViaEventStaffAssignment.Count>0) && !this.MarkedForDeletion)?_staffEventRoleCollectionViaEventStaffAssignment:null);
				info.AddValue("_staffEventRoleCollectionViaEventStaffAssignment_", ((_staffEventRoleCollectionViaEventStaffAssignment_!=null) && (_staffEventRoleCollectionViaEventStaffAssignment_.Count>0) && !this.MarkedForDeletion)?_staffEventRoleCollectionViaEventStaffAssignment_:null);
				info.AddValue("_standardFindingTestReadingCollectionViaCustomerEventReading", ((_standardFindingTestReadingCollectionViaCustomerEventReading!=null) && (_standardFindingTestReadingCollectionViaCustomerEventReading.Count>0) && !this.MarkedForDeletion)?_standardFindingTestReadingCollectionViaCustomerEventReading:null);
				info.AddValue("_stateCollectionViaAddress", ((_stateCollectionViaAddress!=null) && (_stateCollectionViaAddress.Count>0) && !this.MarkedForDeletion)?_stateCollectionViaAddress:null);
				info.AddValue("_surveyQuestionCollectionViaSurveyAnswer_", ((_surveyQuestionCollectionViaSurveyAnswer_!=null) && (_surveyQuestionCollectionViaSurveyAnswer_.Count>0) && !this.MarkedForDeletion)?_surveyQuestionCollectionViaSurveyAnswer_:null);
				info.AddValue("_surveyQuestionCollectionViaSurveyAnswer", ((_surveyQuestionCollectionViaSurveyAnswer!=null) && (_surveyQuestionCollectionViaSurveyAnswer.Count>0) && !this.MarkedForDeletion)?_surveyQuestionCollectionViaSurveyAnswer:null);
				info.AddValue("_tagCollectionViaPreAssessmentCustomerCallQueueCallAttempt", ((_tagCollectionViaPreAssessmentCustomerCallQueueCallAttempt!=null) && (_tagCollectionViaPreAssessmentCustomerCallQueueCallAttempt.Count>0) && !this.MarkedForDeletion)?_tagCollectionViaPreAssessmentCustomerCallQueueCallAttempt:null);
				info.AddValue("_tagCollectionViaCustomerCallQueueCallAttempt", ((_tagCollectionViaCustomerCallQueueCallAttempt!=null) && (_tagCollectionViaCustomerCallQueueCallAttempt.Count>0) && !this.MarkedForDeletion)?_tagCollectionViaCustomerCallQueueCallAttempt:null);
				info.AddValue("_taskPriorityTypesCollectionViaTaskDetails__", ((_taskPriorityTypesCollectionViaTaskDetails__!=null) && (_taskPriorityTypesCollectionViaTaskDetails__.Count>0) && !this.MarkedForDeletion)?_taskPriorityTypesCollectionViaTaskDetails__:null);
				info.AddValue("_taskPriorityTypesCollectionViaTaskDetails_", ((_taskPriorityTypesCollectionViaTaskDetails_!=null) && (_taskPriorityTypesCollectionViaTaskDetails_.Count>0) && !this.MarkedForDeletion)?_taskPriorityTypesCollectionViaTaskDetails_:null);
				info.AddValue("_taskPriorityTypesCollectionViaTaskDetails", ((_taskPriorityTypesCollectionViaTaskDetails!=null) && (_taskPriorityTypesCollectionViaTaskDetails.Count>0) && !this.MarkedForDeletion)?_taskPriorityTypesCollectionViaTaskDetails:null);
				info.AddValue("_taskStatusTypesCollectionViaTaskDetails_", ((_taskStatusTypesCollectionViaTaskDetails_!=null) && (_taskStatusTypesCollectionViaTaskDetails_.Count>0) && !this.MarkedForDeletion)?_taskStatusTypesCollectionViaTaskDetails_:null);
				info.AddValue("_taskStatusTypesCollectionViaTaskDetails__", ((_taskStatusTypesCollectionViaTaskDetails__!=null) && (_taskStatusTypesCollectionViaTaskDetails__.Count>0) && !this.MarkedForDeletion)?_taskStatusTypesCollectionViaTaskDetails__:null);
				info.AddValue("_taskStatusTypesCollectionViaTaskDetails", ((_taskStatusTypesCollectionViaTaskDetails!=null) && (_taskStatusTypesCollectionViaTaskDetails.Count>0) && !this.MarkedForDeletion)?_taskStatusTypesCollectionViaTaskDetails:null);
				info.AddValue("_technicianProfileCollectionViaPinChangelog", ((_technicianProfileCollectionViaPinChangelog!=null) && (_technicianProfileCollectionViaPinChangelog.Count>0) && !this.MarkedForDeletion)?_technicianProfileCollectionViaPinChangelog:null);
				info.AddValue("_territoryCollectionViaTerritory", ((_territoryCollectionViaTerritory!=null) && (_territoryCollectionViaTerritory.Count>0) && !this.MarkedForDeletion)?_territoryCollectionViaTerritory:null);
				info.AddValue("_territoryCollectionViaOrganizationRoleUserTerritory", ((_territoryCollectionViaOrganizationRoleUserTerritory!=null) && (_territoryCollectionViaOrganizationRoleUserTerritory.Count>0) && !this.MarkedForDeletion)?_territoryCollectionViaOrganizationRoleUserTerritory:null);
				info.AddValue("_testCollectionViaEventCustomerTestNotPerformedNotification", ((_testCollectionViaEventCustomerTestNotPerformedNotification!=null) && (_testCollectionViaEventCustomerTestNotPerformedNotification.Count>0) && !this.MarkedForDeletion)?_testCollectionViaEventCustomerTestNotPerformedNotification:null);
				info.AddValue("_testCollectionViaEventPhysicianTest", ((_testCollectionViaEventPhysicianTest!=null) && (_testCollectionViaEventPhysicianTest.Count>0) && !this.MarkedForDeletion)?_testCollectionViaEventPhysicianTest:null);
				info.AddValue("_testCollectionViaDisqualifiedTest_", ((_testCollectionViaDisqualifiedTest_!=null) && (_testCollectionViaDisqualifiedTest_.Count>0) && !this.MarkedForDeletion)?_testCollectionViaDisqualifiedTest_:null);
				info.AddValue("_testCollectionViaEventCustomerRetest", ((_testCollectionViaEventCustomerRetest!=null) && (_testCollectionViaEventCustomerRetest.Count>0) && !this.MarkedForDeletion)?_testCollectionViaEventCustomerRetest:null);
				info.AddValue("_testCollectionViaEventPhysicianTest_", ((_testCollectionViaEventPhysicianTest_!=null) && (_testCollectionViaEventPhysicianTest_.Count>0) && !this.MarkedForDeletion)?_testCollectionViaEventPhysicianTest_:null);
				info.AddValue("_testCollectionViaKynLabValues_", ((_testCollectionViaKynLabValues_!=null) && (_testCollectionViaKynLabValues_.Count>0) && !this.MarkedForDeletion)?_testCollectionViaKynLabValues_:null);
				info.AddValue("_testCollectionViaEventPhysicianTest__", ((_testCollectionViaEventPhysicianTest__!=null) && (_testCollectionViaEventPhysicianTest__.Count>0) && !this.MarkedForDeletion)?_testCollectionViaEventPhysicianTest__:null);
				info.AddValue("_testCollectionViaTestHcpcsCode_", ((_testCollectionViaTestHcpcsCode_!=null) && (_testCollectionViaTestHcpcsCode_.Count>0) && !this.MarkedForDeletion)?_testCollectionViaTestHcpcsCode_:null);
				info.AddValue("_testCollectionViaTestHcpcsCode", ((_testCollectionViaTestHcpcsCode!=null) && (_testCollectionViaTestHcpcsCode.Count>0) && !this.MarkedForDeletion)?_testCollectionViaTestHcpcsCode:null);
				info.AddValue("_testCollectionViaKynLabValues", ((_testCollectionViaKynLabValues!=null) && (_testCollectionViaKynLabValues.Count>0) && !this.MarkedForDeletion)?_testCollectionViaKynLabValues:null);
				info.AddValue("_testCollectionViaPreApprovedTest", ((_testCollectionViaPreApprovedTest!=null) && (_testCollectionViaPreApprovedTest.Count>0) && !this.MarkedForDeletion)?_testCollectionViaPreApprovedTest:null);
				info.AddValue("_testCollectionViaClinicalTestQualificationCriteria", ((_testCollectionViaClinicalTestQualificationCriteria!=null) && (_testCollectionViaClinicalTestQualificationCriteria.Count>0) && !this.MarkedForDeletion)?_testCollectionViaClinicalTestQualificationCriteria:null);
				info.AddValue("_testCollectionViaRequiredTest", ((_testCollectionViaRequiredTest!=null) && (_testCollectionViaRequiredTest.Count>0) && !this.MarkedForDeletion)?_testCollectionViaRequiredTest:null);
				info.AddValue("_testCollectionViaClinicalTestQualificationCriteria_", ((_testCollectionViaClinicalTestQualificationCriteria_!=null) && (_testCollectionViaClinicalTestQualificationCriteria_.Count>0) && !this.MarkedForDeletion)?_testCollectionViaClinicalTestQualificationCriteria_:null);
				info.AddValue("_testCollectionViaDisqualifiedTest", ((_testCollectionViaDisqualifiedTest!=null) && (_testCollectionViaDisqualifiedTest.Count>0) && !this.MarkedForDeletion)?_testCollectionViaDisqualifiedTest:null);
				info.AddValue("_testCollectionViaPreQualificationTestTemplate", ((_testCollectionViaPreQualificationTestTemplate!=null) && (_testCollectionViaPreQualificationTestTemplate.Count>0) && !this.MarkedForDeletion)?_testCollectionViaPreQualificationTestTemplate:null);
				info.AddValue("_testCollectionViaPreQualificationTestTemplate_", ((_testCollectionViaPreQualificationTestTemplate_!=null) && (_testCollectionViaPreQualificationTestTemplate_.Count>0) && !this.MarkedForDeletion)?_testCollectionViaPreQualificationTestTemplate_:null);
				info.AddValue("_testCollectionViaPreQualificationQuestion", ((_testCollectionViaPreQualificationQuestion!=null) && (_testCollectionViaPreQualificationQuestion.Count>0) && !this.MarkedForDeletion)?_testCollectionViaPreQualificationQuestion:null);
				info.AddValue("_testHcpcsCodeCollectionViaEventAccountTestHcpcsCode_", ((_testHcpcsCodeCollectionViaEventAccountTestHcpcsCode_!=null) && (_testHcpcsCodeCollectionViaEventAccountTestHcpcsCode_.Count>0) && !this.MarkedForDeletion)?_testHcpcsCodeCollectionViaEventAccountTestHcpcsCode_:null);
				info.AddValue("_testHcpcsCodeCollectionViaEventAccountTestHcpcsCode", ((_testHcpcsCodeCollectionViaEventAccountTestHcpcsCode!=null) && (_testHcpcsCodeCollectionViaEventAccountTestHcpcsCode.Count>0) && !this.MarkedForDeletion)?_testHcpcsCodeCollectionViaEventAccountTestHcpcsCode:null);
				info.AddValue("_testHcpcsCodeCollectionViaAccountTestHcpcsCode_", ((_testHcpcsCodeCollectionViaAccountTestHcpcsCode_!=null) && (_testHcpcsCodeCollectionViaAccountTestHcpcsCode_.Count>0) && !this.MarkedForDeletion)?_testHcpcsCodeCollectionViaAccountTestHcpcsCode_:null);
				info.AddValue("_testHcpcsCodeCollectionViaAccountTestHcpcsCode", ((_testHcpcsCodeCollectionViaAccountTestHcpcsCode!=null) && (_testHcpcsCodeCollectionViaAccountTestHcpcsCode.Count>0) && !this.MarkedForDeletion)?_testHcpcsCodeCollectionViaAccountTestHcpcsCode:null);
				info.AddValue("_testNotPerformedReasonCollectionViaTestNotPerformed_", ((_testNotPerformedReasonCollectionViaTestNotPerformed_!=null) && (_testNotPerformedReasonCollectionViaTestNotPerformed_.Count>0) && !this.MarkedForDeletion)?_testNotPerformedReasonCollectionViaTestNotPerformed_:null);
				info.AddValue("_testNotPerformedReasonCollectionViaTestNotPerformed", ((_testNotPerformedReasonCollectionViaTestNotPerformed!=null) && (_testNotPerformedReasonCollectionViaTestNotPerformed.Count>0) && !this.MarkedForDeletion)?_testNotPerformedReasonCollectionViaTestNotPerformed:null);
				info.AddValue("_testReadingCollectionViaCustomerEventReading", ((_testReadingCollectionViaCustomerEventReading!=null) && (_testReadingCollectionViaCustomerEventReading.Count>0) && !this.MarkedForDeletion)?_testReadingCollectionViaCustomerEventReading:null);
				info.AddValue("_testUnableScreenReasonCollectionViaCustomerEventUnableScreenReason", ((_testUnableScreenReasonCollectionViaCustomerEventUnableScreenReason!=null) && (_testUnableScreenReasonCollectionViaCustomerEventUnableScreenReason.Count>0) && !this.MarkedForDeletion)?_testUnableScreenReasonCollectionViaCustomerEventUnableScreenReason:null);
				info.AddValue("_userLoginCollectionViaPasswordChangelog", ((_userLoginCollectionViaPasswordChangelog!=null) && (_userLoginCollectionViaPasswordChangelog.Count>0) && !this.MarkedForDeletion)?_userLoginCollectionViaPasswordChangelog:null);
				info.AddValue("_zipCollectionViaAddress", ((_zipCollectionViaAddress!=null) && (_zipCollectionViaAddress.Count>0) && !this.MarkedForDeletion)?_zipCollectionViaAddress:null);
				info.AddValue("_organization", (!this.MarkedForDeletion?_organization:null));
				info.AddValue("_role", (!this.MarkedForDeletion?_role:null));
				info.AddValue("_user", (!this.MarkedForDeletion?_user:null));
				info.AddValue("_accountCoordinatorProfile", (!this.MarkedForDeletion?_accountCoordinatorProfile:null));
				info.AddValue("_affiliateProfile_", (!this.MarkedForDeletion?_affiliateProfile_:null));
				info.AddValue("_callCenterRepProfile", (!this.MarkedForDeletion?_callCenterRepProfile:null));
				info.AddValue("_customerProfile", (!this.MarkedForDeletion?_customerProfile:null));
				info.AddValue("_physicianProfile", (!this.MarkedForDeletion?_physicianProfile:null));
				info.AddValue("_technicianProfile", (!this.MarkedForDeletion?_technicianProfile:null));
			}
			
			// __LLBLGENPRO_USER_CODE_REGION_START GetObjectInfo
			// __LLBLGENPRO_USER_CODE_REGION_END
			base.GetObjectData(info, context);
		}

		/// <summary>Returns true if the original value for the field with the fieldIndex passed in, read from the persistent storage was NULL, false otherwise.
		/// Should not be used for testing if the current value is NULL, use <see cref="TestCurrentFieldValueForNull"/> for that.</summary>
		/// <param name="fieldIndex">Index of the field to test if that field was NULL in the persistent storage</param>
		/// <returns>true if the field with the passed in index was NULL in the persistent storage, false otherwise</returns>
		public bool TestOriginalFieldValueForNull(OrganizationRoleUserFieldIndex fieldIndex)
		{
			return base.Fields[(int)fieldIndex].IsNull;
		}
		
		/// <summary>Returns true if the current value for the field with the fieldIndex passed in represents null/not defined, false otherwise.
		/// Should not be used for testing if the original value (read from the db) is NULL</summary>
		/// <param name="fieldIndex">Index of the field to test if its currentvalue is null/undefined</param>
		/// <returns>true if the field's value isn't defined yet, false otherwise</returns>
		public bool TestCurrentFieldValueForNull(OrganizationRoleUserFieldIndex fieldIndex)
		{
			return base.CheckIfCurrentFieldValueIsNull((int)fieldIndex);
		}

				
		/// <summary>Gets a list of all the EntityRelation objects the type of this instance has.</summary>
		/// <returns>A list of all the EntityRelation objects the type of this instance has. Hierarchy relations are excluded.</returns>
		public override List<IEntityRelation> GetAllRelations()
		{
			return new OrganizationRoleUserRelations().GetAllRelations();
		}
		

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'AccountCallCenterOrganization' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCallCenterOrganization_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(AccountCallCenterOrganizationFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'AccountCallCenterOrganization' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCallCenterOrganization()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(AccountCallCenterOrganizationFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'AccountHraChatQuestionnaire' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountHraChatQuestionnaire_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(AccountHraChatQuestionnaireFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'AccountHraChatQuestionnaire' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountHraChatQuestionnaire()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(AccountHraChatQuestionnaireFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'AccountTestHcpcsCode' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountTestHcpcsCode_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(AccountTestHcpcsCodeFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'AccountTestHcpcsCode' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountTestHcpcsCode()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(AccountTestHcpcsCodeFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ActivityType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoActivityType()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ActivityTypeFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'AdditionalFields' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAdditionalFields_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(AdditionalFieldsFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'AdditionalFields' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAdditionalFields()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(AdditionalFieldsFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Address' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAddress()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(AddressFields.VerificationOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'AdvocateManagerTeam' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAdvocateManagerTeam_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(AdvocateManagerTeamFields.SalesRepOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'AdvocateManagerTeam' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAdvocateManagerTeam()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(AdvocateManagerTeamFields.ManagerOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Afcampaign' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAfcampaign_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(AfcampaignFields.RoleId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Afcampaign' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAfcampaign()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(AfcampaignFields.ShellId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'AffiliateProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAffiliateProfile()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(AffiliateProfileFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ApplicationAuthentication' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoApplicationAuthentication_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ApplicationAuthenticationFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ApplicationAuthentication' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoApplicationAuthentication()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ApplicationAuthenticationFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Barrier' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBarrier_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(BarrierFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Barrier' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoBarrier()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(BarrierFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallCenterAgentTeam' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallCenterAgentTeam()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CallCenterAgentTeamFields.AgentId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallCenterAgentTeamLog' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallCenterAgentTeamLog__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CallCenterAgentTeamLogFields.RemovedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallCenterAgentTeamLog' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallCenterAgentTeamLog_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CallCenterAgentTeamLogFields.AssignedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallCenterAgentTeamLog' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallCenterAgentTeamLog()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CallCenterAgentTeamLogFields.AgentId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallCenterTeam' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallCenterTeam_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CallCenterTeamFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallCenterTeam' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallCenterTeam()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CallCenterTeamFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallQueue' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallQueue_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CallQueueFields.ModifiedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallQueue' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CallQueueFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallQueueAssignment' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallQueueAssignment()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CallQueueAssignmentFields.AssignedOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallQueueCustomer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallQueueCustomer__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CallQueueCustomerFields.ModifiedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallQueueCustomer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallQueueCustomer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CallQueueCustomerFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallQueueCustomer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallQueueCustomer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CallQueueCustomerFields.AssignedToOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallQueueCustomerLock' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallQueueCustomerLock()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CallQueueCustomerLockFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallQueueCustomTag' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallQueueCustomTag()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CallQueueCustomTagFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallRoundCallQueue' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallRoundCallQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CallRoundCallQueueFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Calls' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCalls()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CallsFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CallUploadFields.UploadedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Campaign' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCampaign_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CampaignFields.Modifiedby, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Campaign' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCampaign()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CampaignFields.Createdby, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CampaignActivity' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCampaignActivity_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CampaignActivityFields.Modifiedby, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CampaignActivity' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCampaignActivity()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CampaignActivityFields.Createdby, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CampaignActivityAssignment' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCampaignActivityAssignment()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CampaignActivityAssignmentFields.AssignedToOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CampaignAssignment' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCampaignAssignment()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CampaignAssignmentFields.AssignedToOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CdcontentGeneratorTracking' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCdcontentGeneratorTracking()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CdcontentGeneratorTrackingFields.DownloadedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ChaperoneAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoChaperoneAnswer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ChaperoneAnswerFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ChaperoneAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoChaperoneAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ChaperoneAnswerFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ChaperoneSignature' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoChaperoneSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ChaperoneSignatureFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Check' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCheck_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CheckFields.DataRecoderModifierId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Check' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCheck()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CheckFields.DataRecoderCreatorId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CheckListAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCheckListAnswer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CheckListAnswerFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CheckListAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCheckListAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CheckListAnswerFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CheckListTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCheckListTemplate_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CheckListTemplateFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CheckListTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCheckListTemplate()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CheckListTemplateFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ClinicalTestQualificationCriteria' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoClinicalTestQualificationCriteria_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ClinicalTestQualificationCriteriaFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ClinicalTestQualificationCriteria' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoClinicalTestQualificationCriteria()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ClinicalTestQualificationCriteriaFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ContactCall' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoContactCall_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ContactCallFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ContactCall' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoContactCall()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ContactCallFields.CreatedByRoleId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ContactMeeting' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoContactMeeting_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ContactMeetingFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ContactMeeting' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoContactMeeting()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ContactMeetingFields.CreatedByRoleId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Content' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoContent_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ContentFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Content' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoContent()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ContentFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CorporateTag' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCorporateTag_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CorporateTagFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CorporateTag' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCorporateTag()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CorporateTagFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CorporateUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCorporateUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CorporateUploadFields.UploadedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Coupons' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCoupons_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CouponsFields.ModifiedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Coupons' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCoupons()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CouponsFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CurrentMedication' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCurrentMedication()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CurrentMedicationFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerActivityTypeUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerActivityTypeUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerActivityTypeUploadFields.UploadedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerCallAttempts' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerCallAttempts()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerCallAttemptsFields.UpdatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerCallQueueCallAttempt' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerCallQueueCallAttempt()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerCallQueueCallAttemptFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerClinicalQuestionAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerClinicalQuestionAnswer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerClinicalQuestionAnswerFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerClinicalQuestionAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerClinicalQuestionAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerClinicalQuestionAnswerFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerEligibility' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerEligibility_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerEligibilityFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerEligibility' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerEligibility()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerEligibilityFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerEventCriticalTestData' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerEventCriticalTestData_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerEventCriticalTestDataFields.ValidatingTechnicianId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerEventCriticalTestData' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerEventCriticalTestData()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerEventCriticalTestDataFields.TechnicianId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerEventPriorityInQueueData' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerEventPriorityInQueueData_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerEventPriorityInQueueDataFields.ModifiedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerEventPriorityInQueueData' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerEventPriorityInQueueData()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerEventPriorityInQueueDataFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerEventReading' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerEventReading()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerEventReadingFields.UpdatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerEventTestPhysicianEvaluation' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerEventTestPhysicianEvaluation()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerEventTestPhysicianEvaluationFields.UpdatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerEventTestState' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerEventTestState__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerEventTestStateFields.UpdatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerEventTestState' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerEventTestState_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerEventTestStateFields.EvaluatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerEventTestState' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerEventTestState()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerEventTestStateFields.ConductedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerEventUnableScreenReason' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerEventUnableScreenReason()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerEventUnableScreenReasonFields.UpdatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerHealthInfo' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerHealthInfo()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerHealthInfoFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerHealthInfoArchive' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerHealthInfoArchive()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerHealthInfoArchiveFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerIcdCode' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerIcdCode()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerIcdCodeFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerLockForCall' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerLockForCall()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerLockForCallFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerMedicareQuestionAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerMedicareQuestionAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerMedicareQuestionAnswerFields.CreateBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerPhoneNumberUpdateUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerPhoneNumberUpdateUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerPhoneNumberUpdateUploadFields.UploadedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerPrimaryCarePhysician' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerPrimaryCarePhysician_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerPrimaryCarePhysicianFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerPrimaryCarePhysician' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerPrimaryCarePhysician__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerPrimaryCarePhysicianFields.PcpAddressVerifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerPrimaryCarePhysician' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerPrimaryCarePhysician()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerPrimaryCarePhysicianFields.UpdatedByOrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfileHistory' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileHistory()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerProfileHistoryFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerRegistrationNotes' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerRegistrationNotes()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerRegistrationNotesFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerResultScreeningCommunication' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerResultScreeningCommunication__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerResultScreeningCommunicationFields.PhysicianOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerResultScreeningCommunication' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerResultScreeningCommunication_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerResultScreeningCommunicationFields.FranchiseeAdminOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerResultScreeningCommunication' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerResultScreeningCommunication()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerResultScreeningCommunicationFields.CommunicationInitiatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerTag' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerTag_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerTagFields.ModifiedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerTag' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerTag()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerTagFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerTargeted' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerTargeted_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerTargetedFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerTargeted' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerTargeted()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerTargetedFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerWarmTransfer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerWarmTransfer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerWarmTransferFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerWarmTransfer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerWarmTransfer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerWarmTransferFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomEventNotification' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomEventNotification()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomEventNotificationFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DirectMail' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDirectMail()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(DirectMailFields.MailedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DirectMailType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDirectMailType_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(DirectMailTypeFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DirectMailType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDirectMailType()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(DirectMailTypeFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DisqualifiedTest' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDisqualifiedTest_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(DisqualifiedTestFields.UpdatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DisqualifiedTest' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDisqualifiedTest()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(DisqualifiedTestFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Eligibility' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEligibility()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EligibilityFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EligibilityUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEligibilityUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EligibilityUploadFields.UploadedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EmailTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEmailTemplate()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EmailTemplateFields.ModifiedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventAccountTestHcpcsCode' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventAccountTestHcpcsCode_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventAccountTestHcpcsCodeFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventAccountTestHcpcsCode' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventAccountTestHcpcsCode()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventAccountTestHcpcsCodeFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventActivityTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventActivityTemplate()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventActivityTemplateFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventActivityTemplateCall' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventActivityTemplateCall()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventActivityTemplateCallFields.ResponsibleOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventActivityTemplateEmail' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventActivityTemplateEmail()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventActivityTemplateEmailFields.ResponsibleOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventActivityTemplateMeeting' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventActivityTemplateMeeting()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventActivityTemplateMeetingFields.ResponsibleOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventActivityTemplateTask' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventActivityTemplateTask()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventActivityTemplateTaskFields.ResponsibleOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventAppointment' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventAppointment()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventAppointmentFields.ScheduledByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventAppointmentCancellationLog' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventAppointmentCancellationLog()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventAppointmentCancellationLogFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventAppointmentChangeLog' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventAppointmentChangeLog()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventAppointmentChangeLogFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerBasicBioMetric' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerBasicBioMetric()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventCustomerBasicBioMetricFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerGiftCard' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerGiftCard()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventCustomerGiftCardFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerPrimaryCarePhysician' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerPrimaryCarePhysician()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventCustomerPrimaryCarePhysicianFields.PcpAddressVerifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerQuestionAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerQuestionAnswer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventCustomerQuestionAnswerFields.UpdatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerQuestionAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerQuestionAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventCustomerQuestionAnswerFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerResult' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerResult___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventCustomerResultFields.SignedOffBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerResult' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerResult__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventCustomerResultFields.RegeneratedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerResult' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerResult_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventCustomerResultFields.ModifiedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerResult' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerResult____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventCustomerResultFields.VerifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerResult' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerResult______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventCustomerResultFields.InvoiceDateUpdatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerResult' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerResult_______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventCustomerResultFields.ChatPdfReviewedByOverreadPhysicianId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerResult' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerResult()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventCustomerResultFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerResult' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerResult_____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventCustomerResultFields.CodedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerResult' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerResult________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventCustomerResultFields.ChatPdfReviewedByPhysicianId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerResultBloodLab' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerResultBloodLab()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventCustomerResultBloodLabFields.CreatedByOrgRoleUserid, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerResultHistory' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerResultHistory()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventCustomerResultHistoryFields.InvoiceDateUpdatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerResultHistory' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerResultHistory_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventCustomerResultHistoryFields.ChatPdfReviewedByPhysicianId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerResultHistory' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerResultHistory__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventCustomerResultHistoryFields.ChatPdfReviewedByOverreadPhysicianId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerRetest' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerRetest()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventCustomerRetestFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomers_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventCustomersFields.ConfirmedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomers()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventCustomersFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerTestNotPerformedNotification' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerTestNotPerformedNotification()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventCustomerTestNotPerformedNotificationFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventNote' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventNote_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventNoteFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventNote' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventNote()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventNoteFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventPhysicianTest' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventPhysicianTest__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventPhysicianTestFields.PhysicianId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventPhysicianTest' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventPhysicianTest_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventPhysicianTestFields.ModifiedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventPhysicianTest' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventPhysicianTest()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventPhysicianTestFields.AssignedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEvents___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventsFields.SignOffOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEvents____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventsFields.UpdatedByAdmin, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEvents__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventsFields.EventActivityOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEvents()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventsFields.AssignedToOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEvents_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventsFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventStaffAssignment' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventStaffAssignment__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventStaffAssignmentFields.ScheduledByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventStaffAssignment' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventStaffAssignment_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventStaffAssignmentFields.ActualStaffOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventStaffAssignment' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventStaffAssignment()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(EventStaffAssignmentFields.ScheduledStaffOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ExitInterviewAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoExitInterviewAnswer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ExitInterviewAnswerFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ExitInterviewAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoExitInterviewAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ExitInterviewAnswerFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ExitInterviewSignature' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoExitInterviewSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ExitInterviewSignatureFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ExportableReportsQueue' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoExportableReportsQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ExportableReportsQueueFields.RequestedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFile()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FileFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'FillEventCallQueue' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFillEventCallQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FillEventCallQueueFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'FluConsentAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFluConsentAnswer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FluConsentAnswerFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'FluConsentAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFluConsentAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FluConsentAnswerFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'FluConsentSignature' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFluConsentSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FluConsentSignatureFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'FluConsentTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFluConsentTemplate_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FluConsentTemplateFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'FluConsentTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFluConsentTemplate()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(FluConsentTemplateFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GcNotGivenReason' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGcNotGivenReason_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(GcNotGivenReasonFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GcNotGivenReason' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGcNotGivenReason()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(GcNotGivenReasonFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GuardianDetails' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGuardianDetails_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(GuardianDetailsFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GuardianDetails' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGuardianDetails()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(GuardianDetailsFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HafTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHafTemplate_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(HafTemplateFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HafTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHafTemplate()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(HafTemplateFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HcpcsCode' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHcpcsCode_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(HcpcsCodeFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HcpcsCode' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHcpcsCode()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(HcpcsCodeFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HealthPlanCallQueueCriteria' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHealthPlanCallQueueCriteria__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(HealthPlanCallQueueCriteriaFields.ModifiedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HealthPlanCallQueueCriteria' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHealthPlanCallQueueCriteria_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(HealthPlanCallQueueCriteriaFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HealthPlanCriteriaAssignment' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHealthPlanCriteriaAssignment__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(HealthPlanCriteriaAssignmentFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HealthPlanCriteriaAssignment' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHealthPlanCriteriaAssignment_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(HealthPlanCriteriaAssignmentFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HealthPlanCriteriaAssignment' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHealthPlanCriteriaAssignment()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(HealthPlanCriteriaAssignmentFields.AssignedToOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HealthPlanCriteriaAssignmentUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHealthPlanCriteriaAssignmentUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(HealthPlanCriteriaAssignmentUploadFields.UploadedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HealthPlanCriteriaTeamAssignment' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHealthPlanCriteriaTeamAssignment_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(HealthPlanCriteriaTeamAssignmentFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HealthPlanCriteriaTeamAssignment' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHealthPlanCriteriaTeamAssignment()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(HealthPlanCriteriaTeamAssignmentFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HealthPlanRevenue' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHealthPlanRevenue_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(HealthPlanRevenueFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HealthPlanRevenue' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHealthPlanRevenue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(HealthPlanRevenueFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HospitalPartnerCustomer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHospitalPartnerCustomer__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(HospitalPartnerCustomerFields.ModifiedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HospitalPartnerCustomer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHospitalPartnerCustomer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(HospitalPartnerCustomerFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HospitalPartnerCustomer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHospitalPartnerCustomer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(HospitalPartnerCustomerFields.CareCoordinatorOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HostFacilityRanking' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHostFacilityRanking()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(HostFacilityRankingFields.RankedByOrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HostPayment' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHostPayment()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(HostPaymentFields.CreatorOrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HostPaymentTransaction' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHostPaymentTransaction()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(HostPaymentTransactionFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'IcdCodes' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoIcdCodes_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(IcdCodesFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'IcdCodes' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoIcdCodes()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(IcdCodesFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'IncidentalFindings' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoIncidentalFindings()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(IncidentalFindingsFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'KynLabValues' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoKynLabValues_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(KynLabValuesFields.ModifiedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'KynLabValues' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoKynLabValues()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(KynLabValuesFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lab' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLab()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(LabFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Language' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLanguage()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(LanguageFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'LanguageBarrierCallQueue' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLanguageBarrierCallQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(LanguageBarrierCallQueueFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'MailRoundCallQueue' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoMailRoundCallQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(MailRoundCallQueueFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'MarketingPrintOrder' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoMarketingPrintOrder()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(MarketingPrintOrderFields.OrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Medication' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoMedication_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(MedicationFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Medication' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoMedication()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(MedicationFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'MedicationUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoMedicationUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(MedicationUploadFields.UploadedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'MergeCustomerUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoMergeCustomerUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(MergeCustomerUploadFields.UploadedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'NoShowCallQueue' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoNoShowCallQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(NoShowCallQueueFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'NotesDetails' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoNotesDetails_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(NotesDetailsFields.ModifiedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'NotesDetails' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoNotesDetails()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(NotesDetailsFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Notification' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoNotification()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(NotificationFields.RequestedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'NotificationType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoNotificationType()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(NotificationTypeFields.ModifiedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrganizationRoleUserTerritory' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationRoleUserTerritory()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserTerritoryFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'OrgRoleUserActivity' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrgRoleUserActivity()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrgRoleUserActivityFields.OrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ParticipationConsentSignature' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoParticipationConsentSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ParticipationConsentSignatureFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PasswordChangelog' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPasswordChangelog()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(PasswordChangelogFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PayPeriod' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPayPeriod_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(PayPeriodFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PayPeriod' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPayPeriod()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(PayPeriodFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PcpAppointment' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPcpAppointment_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(PcpAppointmentFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PcpAppointment' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPcpAppointment()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(PcpAppointmentFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PcpDisposition' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPcpDisposition_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(PcpDispositionFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PcpDisposition' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPcpDisposition()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(PcpDispositionFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PhysicianRecordRequestSignature' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPhysicianRecordRequestSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(PhysicianRecordRequestSignatureFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PinChangelog' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPinChangelog()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(PinChangelogFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PodDefaultTeam' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPodDefaultTeam()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(PodDefaultTeamFields.OrgnizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PreApprovedPackage' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPreApprovedPackage()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(PreApprovedPackageFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PreApprovedTest' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPreApprovedTest()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(PreApprovedTestFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PreAssessmentCallQueueCustomerLock' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPreAssessmentCallQueueCustomerLock()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(PreAssessmentCallQueueCustomerLockFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PreAssessmentCustomerCallQueueCallAttempt' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPreAssessmentCustomerCallQueueCallAttempt()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(PreAssessmentCustomerCallQueueCallAttemptFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PreQualificationQuestion' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPreQualificationQuestion()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(PreQualificationQuestionFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PreQualificationTestTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPreQualificationTestTemplate_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(PreQualificationTestTemplateFields.UpdatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PreQualificationTestTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPreQualificationTestTemplate()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(PreQualificationTestTemplateFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PrintOrderItemTracking' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPrintOrderItemTracking_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(PrintOrderItemTrackingFields.UpdatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PrintOrderItemTracking' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPrintOrderItemTracking()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(PrintOrderItemTrackingFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PriorityInQueue' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPriorityInQueue_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(PriorityInQueueFields.ModifiedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PriorityInQueue' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPriorityInQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(PriorityInQueueFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ProspectCustomer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProspectCustomer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ProspectCustomerFields.ContactedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Prospects' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProspects()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ProspectsFields.OrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'RapsUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoRapsUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(RapsUploadFields.UploadedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Referral' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoReferral()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ReferralFields.ReferedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'RefundRequest' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoRefundRequest_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(RefundRequestFields.ProcessedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'RefundRequest' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoRefundRequest()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(RefundRequestFields.RequestedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'RequiredTest' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoRequiredTest()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(RequiredTestFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'SalesRepPodAssigments' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSalesRepPodAssigments()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(SalesRepPodAssigmentsFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ScheduleTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoScheduleTemplate_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ScheduleTemplateFields.ModifiedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ScheduleTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoScheduleTemplate()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ScheduleTemplateFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Seminars' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSeminars()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(SeminarsFields.OrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ShippingDetail' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoShippingDetail_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ShippingDetailFields.ShippedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ShippingDetail' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoShippingDetail()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(ShippingDetailFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'SourceCodeChangeLog' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSourceCodeChangeLog()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(SourceCodeChangeLogFields.Shellid, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'StaffEventScheduleUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoStaffEventScheduleUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(StaffEventScheduleUploadFields.UploadedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'SurveyAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSurveyAnswer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(SurveyAnswerFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'SurveyAnswer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSurveyAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(SurveyAnswerFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'SurveyTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSurveyTemplate_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(SurveyTemplateFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'SurveyTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSurveyTemplate()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(SurveyTemplateFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'SuspectConditionUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSuspectConditionUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(SuspectConditionUploadFields.UploadedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'SystemGeneratedCallQueueCriteria' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSystemGenertedCallQueueCriteria__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(SystemGeneratedCallQueueCriteriaFields.ModifiedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'SystemGeneratedCallQueueCriteria' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSystemGenertedCallQueueCriteria_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(SystemGeneratedCallQueueCriteriaFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'SystemGeneratedCallQueueCriteria' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSystemGenertedCallQueueCriteria()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(SystemGeneratedCallQueueCriteriaFields.AssignedToOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TaskDetails' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTaskDetails__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(TaskDetailsFields.ModifiedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TaskDetails' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTaskDetails_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(TaskDetailsFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TaskDetails' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTaskDetails()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(TaskDetailsFields.AssignedToOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Territory' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTerritory()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(TerritoryFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TestHcpcsCode' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestHcpcsCode_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(TestHcpcsCodeFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TestHcpcsCode' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestHcpcsCode()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(TestHcpcsCodeFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TestNotPerformed' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestNotPerformed_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(TestNotPerformedFields.UpdatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TestNotPerformed' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestNotPerformed()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(TestNotPerformedFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TestNotPerformedReason' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestNotPerformedReason()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(TestNotPerformedReasonFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TestPerformedExternally' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestPerformedExternally_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(TestPerformedExternallyFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TestPerformedExternally' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestPerformedExternally()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(TestPerformedExternallyFields.CreatedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'UncontactedCustomerCallQueue' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoUncontactedCustomerCallQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(UncontactedCustomerCallQueueFields.ModifiedBy, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'UploadZipInfo' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoUploadZipInfo()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(UploadZipInfoFields.UploadedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'User' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoUser__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(UserFields.ModifiedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'User' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoUser_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(UserFields.CreatedByOrgRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaFillEventCallQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaFillEventCallQueue"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaMailRoundCallQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaMailRoundCallQueue"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaEligibilityUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaEligibilityUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaCorporateUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaCorporateUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaHealthPlanCallQueueCriteria()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaHealthPlanCallQueueCriteria"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaCallQueueCustomer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaCallQueueCustomer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaCallQueueCustomer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaCallQueueCustomer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaCallQueueCustomer__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaCallQueueCustomer__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaHealthPlanRevenue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaHealthPlanRevenue"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaHealthPlanRevenue_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaHealthPlanRevenue_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaCorporateTag_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaCorporateTag_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaLanguageBarrierCallQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaLanguageBarrierCallQueue"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaEventNote()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaEventNote"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaCampaign()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaCampaign"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaEventNote_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaEventNote_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaCampaign_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaCampaign_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaHealthPlanCallQueueCriteria_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaHealthPlanCallQueueCriteria_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaCorporateTag()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaCorporateTag"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaCallQueueCustomTag()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaCallQueueCustomTag"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaCalls()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaCalls"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaCallRoundCallQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaCallRoundCallQueue"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaAccountHraChatQuestionnaire_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaAccountHraChatQuestionnaire_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaAccountHraChatQuestionnaire()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaAccountHraChatQuestionnaire"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaUncontactedCustomerCallQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaUncontactedCustomerCallQueue"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaCustomEventNotification()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaCustomEventNotification"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaNoShowCallQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaNoShowCallQueue"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaAccountCallCenterOrganization_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaAccountCallCenterOrganization_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Account' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCollectionViaAccountCallCenterOrganization()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AccountCollectionViaAccountCallCenterOrganization"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Activity' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoActivityCollectionViaOrgRoleUserActivity()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ActivityCollectionViaOrgRoleUserActivity"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ActivityType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoActivityTypeCollectionViaCallQueueCustomer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ActivityTypeCollectionViaCallQueueCustomer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ActivityType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoActivityTypeCollectionViaCallQueueCustomer__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ActivityTypeCollectionViaCallQueueCustomer__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ActivityType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoActivityTypeCollectionViaCallQueueCustomer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ActivityTypeCollectionViaCallQueueCustomer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Address' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAddressCollectionViaCustomerPrimaryCarePhysician_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AddressCollectionViaCustomerPrimaryCarePhysician_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Address' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAddressCollectionViaProspects()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AddressCollectionViaProspects"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Address' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAddressCollectionViaCustomerPrimaryCarePhysician___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AddressCollectionViaCustomerPrimaryCarePhysician___"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Address' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAddressCollectionViaCustomerPrimaryCarePhysician____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AddressCollectionViaCustomerPrimaryCarePhysician____"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Address' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAddressCollectionViaUser()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AddressCollectionViaUser"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Address' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAddressCollectionViaUser_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AddressCollectionViaUser_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Address' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAddressCollectionViaShippingDetail()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AddressCollectionViaShippingDetail"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Address' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAddressCollectionViaHostPayment()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AddressCollectionViaHostPayment"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Address' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAddressCollectionViaShippingDetail_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AddressCollectionViaShippingDetail_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Address' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAddressCollectionViaCustomerPrimaryCarePhysician()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AddressCollectionViaCustomerPrimaryCarePhysician"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Address' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAddressCollectionViaCustomerPrimaryCarePhysician__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AddressCollectionViaCustomerPrimaryCarePhysician__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Address' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAddressCollectionViaCustomerPrimaryCarePhysician_____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AddressCollectionViaCustomerPrimaryCarePhysician_____"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Afadvertiser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAfadvertiserCollectionViaAfcampaign()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AfadvertiserCollectionViaAfcampaign"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Afadvertiser' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAfadvertiserCollectionViaAfcampaign_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AfadvertiserCollectionViaAfcampaign_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'AfaffiliateCampaign' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAfaffiliateCampaignCollectionViaEventCustomers()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AfaffiliateCampaignCollectionViaEventCustomers"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'AfaffiliateCampaign' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAfaffiliateCampaignCollectionViaEventCustomers_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AfaffiliateCampaignCollectionViaEventCustomers_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'AfaffiliateCampaignMarketingMaterial' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAfaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("AfaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallCenterTeam' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallCenterTeamCollectionViaCallCenterAgentTeam()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CallCenterTeamCollectionViaCallCenterAgentTeam"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallCenterTeam' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallCenterTeamCollectionViaCallCenterAgentTeamLog()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CallCenterTeamCollectionViaCallCenterAgentTeamLog"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallCenterTeam' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallCenterTeam' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallCenterTeam' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallCenterTeamCollectionViaCallCenterAgentTeamLog_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CallCenterTeamCollectionViaCallCenterAgentTeamLog_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallCenterTeam' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallCenterTeamCollectionViaCallCenterAgentTeamLog__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CallCenterTeamCollectionViaCallCenterAgentTeamLog__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallQueue' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallQueueCollectionViaCallQueueCustomer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CallQueueCollectionViaCallQueueCustomer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallQueue' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallQueueCollectionViaHealthPlanCallQueueCriteria__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CallQueueCollectionViaHealthPlanCallQueueCriteria__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallQueue' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallQueueCollectionViaCallQueueCustomer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CallQueueCollectionViaCallQueueCustomer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallQueue' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallQueueCollectionViaCalls()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CallQueueCollectionViaCalls"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallQueue' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallQueueCollectionViaCallQueueAssignment()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CallQueueCollectionViaCallQueueAssignment"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallQueue' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallQueueCollectionViaSystemGenertedCallQueueCriteria__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CallQueueCollectionViaSystemGenertedCallQueueCriteria__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallQueue' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallQueueCollectionViaSystemGenertedCallQueueCriteria_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CallQueueCollectionViaSystemGenertedCallQueueCriteria_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallQueue' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallQueueCollectionViaCallQueueCustomer__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CallQueueCollectionViaCallQueueCustomer__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallQueue' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallQueueCollectionViaHealthPlanCallQueueCriteria_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CallQueueCollectionViaHealthPlanCallQueueCriteria_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallQueue' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallQueueCollectionViaSystemGenertedCallQueueCriteria()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CallQueueCollectionViaSystemGenertedCallQueueCriteria"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallQueueCriteria' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallQueueCriteriaCollectionViaCallQueueCustomer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CallQueueCriteriaCollectionViaCallQueueCustomer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallQueueCriteria' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallQueueCriteriaCollectionViaCallQueueCustomer__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CallQueueCriteriaCollectionViaCallQueueCustomer__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallQueueCriteria' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallQueueCriteriaCollectionViaCallQueueCustomer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CallQueueCriteriaCollectionViaCallQueueCustomer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallQueueCustomer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallQueueCustomerCollectionViaCustomerCallQueueCallAttempt()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CallQueueCustomerCollectionViaCustomerCallQueueCallAttempt"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Calls' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallsCollectionViaCustomerCallQueueCallAttempt()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CallsCollectionViaCustomerCallQueueCallAttempt"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Calls' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallsCollectionViaPreAssessmentCustomerCallQueueCallAttempt()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CallsCollectionViaPreAssessmentCustomerCallQueueCallAttempt"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CallUpload' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallUploadCollectionViaDirectMail()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CallUploadCollectionViaDirectMail"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Campaign' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCampaignCollectionViaCallQueueCustomer__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CampaignCollectionViaCallQueueCustomer__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Campaign' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCampaignCollectionViaCampaignAssignment()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CampaignCollectionViaCampaignAssignment"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Campaign' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCampaignCollectionViaCallQueueCustomer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CampaignCollectionViaCallQueueCustomer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Campaign' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCampaignCollectionViaCampaignActivity_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CampaignCollectionViaCampaignActivity_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Campaign' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCampaignCollectionViaHealthPlanCallQueueCriteria_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CampaignCollectionViaHealthPlanCallQueueCriteria_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Campaign' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCampaignCollectionViaCampaignActivity()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CampaignCollectionViaCampaignActivity"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Campaign' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCampaignCollectionViaCalls()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CampaignCollectionViaCalls"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Campaign' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCampaignCollectionViaEventCustomers_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CampaignCollectionViaEventCustomers_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Campaign' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCampaignCollectionViaHealthPlanCallQueueCriteria()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CampaignCollectionViaHealthPlanCallQueueCriteria"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Campaign' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCampaignCollectionViaDirectMail()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CampaignCollectionViaDirectMail"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Campaign' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCampaignCollectionViaCallQueueCustomer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CampaignCollectionViaCallQueueCustomer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Campaign' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCampaignCollectionViaEventCustomers()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CampaignCollectionViaEventCustomers"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CampaignActivity' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCampaignActivityCollectionViaCampaignActivityAssignment()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CampaignActivityCollectionViaCampaignActivityAssignment"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ChaperoneQuestion' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoChaperoneQuestionCollectionViaChaperoneAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ChaperoneQuestionCollectionViaChaperoneAnswer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ChaperoneQuestion' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoChaperoneQuestionCollectionViaChaperoneAnswer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ChaperoneQuestionCollectionViaChaperoneAnswer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CheckListQuestion' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCheckListQuestionCollectionViaCheckListAnswer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CheckListQuestionCollectionViaCheckListAnswer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CheckListQuestion' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCheckListQuestionCollectionViaCheckListAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CheckListQuestionCollectionViaCheckListAnswer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CheckListQuestion' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCheckListQuestionCollectionViaExitInterviewSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CheckListQuestionCollectionViaExitInterviewSignature"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'City' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCityCollectionViaAddress()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CityCollectionViaAddress"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CommunicationMode' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCommunicationModeCollectionViaEvents____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CommunicationModeCollectionViaEvents____"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CommunicationMode' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCommunicationModeCollectionViaEvents()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CommunicationModeCollectionViaEvents"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CommunicationMode' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCommunicationModeCollectionViaEvents___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CommunicationModeCollectionViaEvents___"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CommunicationMode' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCommunicationModeCollectionViaEvents__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CommunicationModeCollectionViaEvents__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CommunicationMode' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCommunicationModeCollectionViaEvents_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CommunicationModeCollectionViaEvents_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ContactCallStatus' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoContactCallStatusCollectionViaContactCall()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ContactCallStatusCollectionViaContactCall"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ContactCallStatus' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoContactCallStatusCollectionViaContactCall_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ContactCallStatusCollectionViaContactCall_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ContactCallStatus' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoContactCallStatusCollectionViaContactMeeting_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ContactCallStatusCollectionViaContactMeeting_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ContactCallStatus' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoContactCallStatusCollectionViaContactMeeting()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ContactCallStatusCollectionViaContactMeeting"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Country' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCountryCollectionViaAddress()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CountryCollectionViaAddress"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CouponType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCouponTypeCollectionViaCoupons_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CouponTypeCollectionViaCoupons_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CouponType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCouponTypeCollectionViaCoupons()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CouponTypeCollectionViaCoupons"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerEventScreeningTests' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerEventScreeningTests' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerEventScreeningTestsCollectionViaTestPerformedExternally_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerEventScreeningTestsCollectionViaTestPerformedExternally_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerEventScreeningTests' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerEventScreeningTestsCollectionViaCustomerEventTestState()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerEventScreeningTestsCollectionViaCustomerEventTestState"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerEventScreeningTests' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerEventScreeningTestsCollectionViaCustomerEventTestState_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerEventScreeningTestsCollectionViaCustomerEventTestState_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerEventScreeningTests' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerEventScreeningTests' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerEventScreeningTestsCollectionViaCustomerEventTestState__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerEventScreeningTestsCollectionViaCustomerEventTestState__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerEventScreeningTests' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerEventScreeningTestsCollectionViaTestPerformedExternally()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerEventScreeningTestsCollectionViaTestPerformedExternally"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerEventScreeningTests' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerEventScreeningTestsCollectionViaCustomerEventReading()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerEventScreeningTestsCollectionViaCustomerEventReading"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerEventScreeningTests' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerEventScreeningTestsCollectionViaTestNotPerformed()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerEventScreeningTestsCollectionViaTestNotPerformed"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerEventScreeningTests' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerEventScreeningTestsCollectionViaTestNotPerformed_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerEventScreeningTestsCollectionViaTestNotPerformed_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerHealthQuestions' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerHealthQuestionsCollectionViaCustomerHealthInfo()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerHealthQuestionsCollectionViaCustomerHealthInfo"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerHealthQuestions' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerHealthQuestions' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerHealthQuestions' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerHealthQuestions' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerHealthQuestions' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerHealthQuestions' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerHealthQuestions' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerHealthQuestionsCollectionViaCustomerHealthInfoArchive()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerHealthQuestionsCollectionViaCustomerHealthInfoArchive"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerPrimaryCarePhysician' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaFillEventCallQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaFillEventCallQueue"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaDisqualifiedTest_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaDisqualifiedTest_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaCustomerEligibility_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaCustomerEligibility_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaEventCustomerResult_____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaEventCustomerResult_____"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaCustomerEligibility()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaCustomerEligibility"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaLanguageBarrierCallQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaLanguageBarrierCallQueue"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaEventCustomerQuestionAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaEventCustomerQuestionAnswer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaHospitalPartnerCustomer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaHospitalPartnerCustomer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaHospitalPartnerCustomer__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaHospitalPartnerCustomer__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaHospitalPartnerCustomer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaHospitalPartnerCustomer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaDisqualifiedTest()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaDisqualifiedTest"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaCustomerPrimaryCarePhysician_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaCustomerPrimaryCarePhysician_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaCustomerPrimaryCarePhysician__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaCustomerPrimaryCarePhysician__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaNoShowCallQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaNoShowCallQueue"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaCustomerPrimaryCarePhysician()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaCustomerPrimaryCarePhysician"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaCallQueueCustomer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaCallQueueCustomer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaCustomerHealthInfo()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaCustomerHealthInfo"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaCallQueueCustomer__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaCallQueueCustomer__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaCallQueueCustomer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaCallQueueCustomer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaEventCustomerResult______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaEventCustomerResult______"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaCustomerIcdCode()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaCustomerIcdCode"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaMailRoundCallQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaMailRoundCallQueue"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaCustomerHealthInfoArchive()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaCustomerHealthInfoArchive"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaEventCustomerQuestionAnswer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaEventCustomerQuestionAnswer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaRequiredTest()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaRequiredTest"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaCustomerWarmTransfer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaCustomerWarmTransfer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaProspectCustomer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaProspectCustomer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaEventCustomerResult_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaEventCustomerResult_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaEventCustomerResult__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaEventCustomerResult__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaUncontactedCustomerCallQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaUncontactedCustomerCallQueue"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaCustomerWarmTransfer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaCustomerWarmTransfer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaMedication_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaMedication_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaCallRoundCallQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaCallRoundCallQueue"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaCustomerTag_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaCustomerTag_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaReferral()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaReferral"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaCustomerTargeted_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaCustomerTargeted_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaCustomerTargeted()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaCustomerTargeted"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaCustomerTag()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaCustomerTag"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaMedication()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaMedication"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaEventCustomerResult________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaEventCustomerResult________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaEventCustomerResult()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaEventCustomerResult"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaEventCustomerResult_______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaEventCustomerResult_______"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaDirectMail()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaDirectMail"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaEventCustomerResult____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaEventCustomerResult____"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaCurrentMedication()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaCurrentMedication"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaGuardianDetails()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaGuardianDetails"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaEventCustomers()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaEventCustomers"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaEventCustomers_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaEventCustomers_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaCustomerCallQueueCallAttempt()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaCustomerCallQueueCallAttempt"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaEventCustomerResult___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaEventCustomerResult___"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaCustomerProfileHistory()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaCustomerProfileHistory"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaCustomerClinicalQuestionAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaCustomerClinicalQuestionAnswer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaCustomerClinicalQuestionAnswer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaCustomerClinicalQuestionAnswer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileCollectionViaGuardianDetails_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileCollectionViaGuardianDetails_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfileHistory' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileHistoryCollectionViaEventCustomers_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileHistoryCollectionViaEventCustomers_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerProfileHistory' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfileHistoryCollectionViaEventCustomers()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerProfileHistoryCollectionViaEventCustomers"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerRegistrationNotes' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerRegistrationNotesCollectionViaEventAppointmentCancellationLog()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerRegistrationNotesCollectionViaEventAppointmentCancellationLog"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerRegistrationNotes' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerRegistrationNotesCollectionViaEventCustomers_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerRegistrationNotesCollectionViaEventCustomers_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'CustomerRegistrationNotes' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerRegistrationNotesCollectionViaEventCustomers()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("CustomerRegistrationNotesCollectionViaEventCustomers"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DirectMailType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDirectMailTypeCollectionViaDirectMail()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("DirectMailTypeCollectionViaDirectMail"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DirectMailType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDirectMailTypeCollectionViaCampaignActivity()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("DirectMailTypeCollectionViaCampaignActivity"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'DirectMailType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoDirectMailTypeCollectionViaCampaignActivity_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("DirectMailTypeCollectionViaCampaignActivity_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventActivityTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventActivityTemplateCollectionViaEventActivityTemplateMeeting()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventActivityTemplateCollectionViaEventActivityTemplateMeeting"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventActivityTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventActivityTemplateCollectionViaEventActivityTemplateTask()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventActivityTemplateCollectionViaEventActivityTemplateTask"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventActivityTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventActivityTemplateCollectionViaEventActivityTemplateCall()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventActivityTemplateCollectionViaEventActivityTemplateCall"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventActivityTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventActivityTemplateCollectionViaEventActivityTemplateEmail()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventActivityTemplateCollectionViaEventActivityTemplateEmail"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventAppointment' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventAppointmentCollectionViaEventCustomers()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventAppointmentCollectionViaEventCustomers"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventAppointment' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventAppointmentCollectionViaEventCustomers_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventAppointmentCollectionViaEventCustomers_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerResult' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerResultCollectionViaCustomerResultScreeningCommunication()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomerResultCollectionViaCustomerResultScreeningCommunication"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerResult' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerResultCollectionViaPriorityInQueue_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomerResultCollectionViaPriorityInQueue_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerResult' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerResultCollectionViaKynLabValues()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomerResultCollectionViaKynLabValues"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerResult' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerResultCollectionViaCustomerResultScreeningCommunication__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomerResultCollectionViaCustomerResultScreeningCommunication__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerResult' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerResultCollectionViaCustomerResultScreeningCommunication_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomerResultCollectionViaCustomerResultScreeningCommunication_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerResult' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerResultCollectionViaCdcontentGeneratorTracking()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomerResultCollectionViaCdcontentGeneratorTracking"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerResult' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerResultCollectionViaKynLabValues_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomerResultCollectionViaKynLabValues_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomerResult' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomerResultCollectionViaPriorityInQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomerResultCollectionViaPriorityInQueue"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaDisqualifiedTest_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaDisqualifiedTest_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaEventAppointmentChangeLog()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaEventAppointmentChangeLog"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaDisqualifiedTest()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaDisqualifiedTest"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaEventCustomerPrimaryCarePhysician()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaEventCustomerPrimaryCarePhysician"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaEventCustomerQuestionAnswer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaEventCustomerQuestionAnswer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaEventAppointmentCancellationLog()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaEventAppointmentCancellationLog"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaEventCustomerQuestionAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaEventCustomerQuestionAnswer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaEventCustomerGiftCard()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaEventCustomerGiftCard"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaSurveyAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaSurveyAnswer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaEventCustomerTestNotPerformedNotification()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaEventCustomerTestNotPerformedNotification"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaPhysicianRecordRequestSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaPhysicianRecordRequestSignature"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaEventCustomerRetest()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaEventCustomerRetest"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaPcpDisposition()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaPcpDisposition"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaPcpDisposition_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaPcpDisposition_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaChaperoneSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaChaperoneSignature"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaChaperoneAnswer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaChaperoneAnswer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaChaperoneAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaChaperoneAnswer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaCallQueueCustomer__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaCallQueueCustomer__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaCheckListAnswer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaCheckListAnswer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaCallQueueCustomer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaCallQueueCustomer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaCallQueueCustomer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaCallQueueCustomer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaCustomerHealthInfo()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaCustomerHealthInfo"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaExitInterviewSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaExitInterviewSignature"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaFluConsentAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaFluConsentAnswer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaExitInterviewAnswer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaExitInterviewAnswer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaCheckListAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaCheckListAnswer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaExitInterviewAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaExitInterviewAnswer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaFluConsentAnswer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaFluConsentAnswer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaSurveyAnswer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaSurveyAnswer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaCustomerHealthInfoArchive()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaCustomerHealthInfoArchive"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaCustomerMedicareQuestionAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaCustomerMedicareQuestionAnswer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaFluConsentSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaFluConsentSignature"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventCustomers' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventCustomersCollectionViaParticipationConsentSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventCustomersCollectionViaParticipationConsentSignature"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaEventCustomerQuestionAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaEventCustomerQuestionAnswer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaEventPhysicianTest__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaEventPhysicianTest__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaEventStaffAssignment__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaEventStaffAssignment__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaEventStaffAssignment_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaEventStaffAssignment_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaEventCustomers()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaEventCustomers"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaEventCustomerResult____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaEventCustomerResult____"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaEventCustomerResult___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaEventCustomerResult___"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaHospitalPartnerCustomer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaHospitalPartnerCustomer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaEventCustomerResult_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaEventCustomerResult_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaEventCustomerResult________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaEventCustomerResult________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaEventCustomerResult______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaEventCustomerResult______"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaEventCustomerResult__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaEventCustomerResult__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaEventCustomerResult_______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaEventCustomerResult_______"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaEventPhysicianTest_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaEventPhysicianTest_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaEventPhysicianTest()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaEventPhysicianTest"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaEventCustomerQuestionAnswer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaEventCustomerQuestionAnswer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaHospitalPartnerCustomer__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaHospitalPartnerCustomer__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaEventCustomerResult()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaEventCustomerResult"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaHospitalPartnerCustomer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaHospitalPartnerCustomer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaEventCustomerResult_____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaEventCustomerResult_____"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaEventCustomers_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaEventCustomers_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaEventAccountTestHcpcsCode()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaEventAccountTestHcpcsCode"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaCustomerRegistrationNotes()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaCustomerRegistrationNotes"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaCallQueueCustomer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaCallQueueCustomer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaEventAccountTestHcpcsCode_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaEventAccountTestHcpcsCode_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaSeminars()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaSeminars"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaDisqualifiedTest_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaDisqualifiedTest_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaDisqualifiedTest()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaDisqualifiedTest"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaCustomEventNotification()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaCustomEventNotification"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaCallQueueCustomer__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaCallQueueCustomer__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaCustomerClinicalQuestionAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaCustomerClinicalQuestionAnswer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaCustomerClinicalQuestionAnswer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaCustomerClinicalQuestionAnswer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaEventAppointmentChangeLog()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaEventAppointmentChangeLog"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaEventAppointmentChangeLog_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaEventAppointmentChangeLog_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaCallQueueCustomer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaCallQueueCustomer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaHostPayment()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaHostPayment"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaEventStaffAssignment()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaEventStaffAssignment"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Events' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventsCollectionViaEventAppointmentCancellationLog()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventsCollectionViaEventAppointmentCancellationLog"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventTypeCollectionViaEvents()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventTypeCollectionViaEvents"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventTypeCollectionViaEvents____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventTypeCollectionViaEvents____"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventTypeCollectionViaEvents___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventTypeCollectionViaEvents___"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventTypeCollectionViaEvents_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventTypeCollectionViaEvents_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'EventType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoEventTypeCollectionViaEvents__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("EventTypeCollectionViaEvents__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ExitInterviewQuestion' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoExitInterviewQuestionCollectionViaExitInterviewAnswer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ExitInterviewQuestionCollectionViaExitInterviewAnswer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ExitInterviewQuestion' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoExitInterviewQuestionCollectionViaExitInterviewAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ExitInterviewQuestionCollectionViaExitInterviewAnswer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ExportableReports' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoExportableReportsCollectionViaExportableReportsQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ExportableReportsCollectionViaExportableReportsQueue"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaCustomerActivityTypeUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaCustomerActivityTypeUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaCorporateUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaCorporateUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaStaffEventScheduleUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaStaffEventScheduleUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaCorporateUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaCorporateUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaPhysicianRecordRequestSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaPhysicianRecordRequestSignature"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaCustomerActivityTypeUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaCustomerActivityTypeUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaRapsUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaRapsUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaCallUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaCallUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaChaperoneSignature_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaChaperoneSignature_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaRapsUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaRapsUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaChaperoneSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaChaperoneSignature"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaCorporateUpload__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaCorporateUpload__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaCallUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaCallUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaHealthPlanCriteriaAssignmentUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaHealthPlanCriteriaAssignmentUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaParticipationConsentSignature_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaParticipationConsentSignature_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaMergeCustomerUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaMergeCustomerUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaMedicationUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaMedicationUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaMedicationUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaMedicationUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaFluConsentSignature_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaFluConsentSignature_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaFluConsentSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaFluConsentSignature"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaMergeCustomerUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaMergeCustomerUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaExitInterviewSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaExitInterviewSignature"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaEventCustomerGiftCard_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaEventCustomerGiftCard_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaEventCustomerGiftCard()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaEventCustomerGiftCard"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaEligibilityUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaEligibilityUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaEligibilityUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaEligibilityUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaExportableReportsQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaExportableReportsQueue"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaSuspectConditionUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaSuspectConditionUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaStaffEventScheduleUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaStaffEventScheduleUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaParticipationConsentSignature()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaParticipationConsentSignature"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaCustomerPhoneNumberUpdateUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaCustomerPhoneNumberUpdateUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaCustomerPhoneNumberUpdateUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaCustomerPhoneNumberUpdateUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'File' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFileCollectionViaSuspectConditionUpload_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FileCollectionViaSuspectConditionUpload_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'FluConsentQuestion' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFluConsentQuestionCollectionViaFluConsentAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FluConsentQuestionCollectionViaFluConsentAnswer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'FluConsentQuestion' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoFluConsentQuestionCollectionViaFluConsentAnswer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("FluConsentQuestionCollectionViaFluConsentAnswer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GcNotGivenReason' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGcNotGivenReasonCollectionViaEventCustomers()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("GcNotGivenReasonCollectionViaEventCustomers"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'GcNotGivenReason' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoGcNotGivenReasonCollectionViaEventCustomers_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("GcNotGivenReasonCollectionViaEventCustomers_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HafTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHafTemplateCollectionViaClinicalTestQualificationCriteria()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HafTemplateCollectionViaClinicalTestQualificationCriteria"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HafTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHafTemplateCollectionViaEvents___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HafTemplateCollectionViaEvents___"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HafTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHafTemplateCollectionViaEvents()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HafTemplateCollectionViaEvents"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HafTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHafTemplateCollectionViaEvents____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HafTemplateCollectionViaEvents____"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HafTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHafTemplateCollectionViaEvents_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HafTemplateCollectionViaEvents_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HafTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHafTemplateCollectionViaCustomerClinicalQuestionAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HafTemplateCollectionViaCustomerClinicalQuestionAnswer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HafTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHafTemplateCollectionViaEvents__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HafTemplateCollectionViaEvents__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HafTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHafTemplateCollectionViaCustomerClinicalQuestionAnswer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HafTemplateCollectionViaCustomerClinicalQuestionAnswer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HafTemplate' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHafTemplateCollectionViaClinicalTestQualificationCriteria_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HafTemplateCollectionViaClinicalTestQualificationCriteria_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HcpcsCode' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHcpcsCodeCollectionViaTestHcpcsCode_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HcpcsCodeCollectionViaTestHcpcsCode_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HcpcsCode' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHcpcsCodeCollectionViaTestHcpcsCode()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HcpcsCodeCollectionViaTestHcpcsCode"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HealthPlanCallQueueCriteria' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HealthPlanCallQueueCriteria' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HealthPlanCallQueueCriteria' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HealthPlanCallQueueCriteria' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HealthPlanCallQueueCriteria' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HealthPlanCallQueueCriteria' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HospitalFacility' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHospitalFacilityCollectionViaEventCustomers()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HospitalFacilityCollectionViaEventCustomers"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HospitalFacility' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHospitalFacilityCollectionViaEventCustomers_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HospitalFacilityCollectionViaEventCustomers_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'HostPayment' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoHostPaymentCollectionViaHostPaymentTransaction()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("HostPaymentCollectionViaHostPaymentTransaction"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'IcdCodes' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoIcdCodesCollectionViaCustomerIcdCode()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("IcdCodesCollectionViaCustomerIcdCode"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'InsuranceCompany' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoInsuranceCompanyCollectionViaEligibility()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("InsuranceCompanyCollectionViaEligibility"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Language' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLanguageCollectionViaHealthPlanCallQueueCriteria()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LanguageCollectionViaHealthPlanCallQueueCriteria"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Language' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLanguageCollectionViaCallQueueCustomer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LanguageCollectionViaCallQueueCustomer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Language' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLanguageCollectionViaCallQueueCustomer__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LanguageCollectionViaCallQueueCustomer__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Language' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLanguageCollectionViaCallQueueCustomer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LanguageCollectionViaCallQueueCustomer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Language' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLanguageCollectionViaHealthPlanCallQueueCriteria_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LanguageCollectionViaHealthPlanCallQueueCriteria_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaUncontactedCustomerCallQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaUncontactedCustomerCallQueue"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaFillEventCallQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaFillEventCallQueue"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaTestPerformedExternally_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaTestPerformedExternally_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaLanguageBarrierCallQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaLanguageBarrierCallQueue"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaMedicationUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaMedicationUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaHostFacilityRanking()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaHostFacilityRanking"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaHostFacilityRanking_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaHostFacilityRanking_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaMailRoundCallQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaMailRoundCallQueue"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaHostPaymentTransaction_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaHostPaymentTransaction_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaHostPayment()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaHostPayment"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaHostPaymentTransaction()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaHostPaymentTransaction"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaHostPayment_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaHostPayment_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaKynLabValues()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaKynLabValues"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaExportableReportsQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaExportableReportsQueue"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaFile()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaFile"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaTestPerformedExternally()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaTestPerformedExternally"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaKynLabValues_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaKynLabValues_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaPreQualificationQuestion()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaPreQualificationQuestion"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaPrintOrderItemTracking__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaPrintOrderItemTracking__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaPcpDisposition_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaPcpDisposition_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaPcpAppointment_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaPcpAppointment_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaPcpDisposition()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaPcpDisposition"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaRefundRequest()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaRefundRequest"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaRapsUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaRapsUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaRefundRequest_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaRefundRequest_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaPrintOrderItemTracking___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaPrintOrderItemTracking___"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaProspectCustomer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaProspectCustomer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaPcpAppointment()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaPcpAppointment"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaHafTemplate()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaHafTemplate"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaHafTemplate_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaHafTemplate_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaSuspectConditionUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaSuspectConditionUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaMergeCustomerUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaMergeCustomerUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaNoShowCallQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaNoShowCallQueue"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaStaffEventScheduleUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaStaffEventScheduleUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaHealthPlanRevenue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaHealthPlanRevenue"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaHealthPlanRevenue_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaHealthPlanRevenue_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaHafTemplate__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaHafTemplate__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaHafTemplate___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaHafTemplate___"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCustomerProfileHistory___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCustomerProfileHistory___"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCustomerProfileHistory__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCustomerProfileHistory__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCustomerProfileHistory()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCustomerProfileHistory"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCustomEventNotification()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCustomEventNotification"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCustomerRegistrationNotes()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCustomerRegistrationNotes"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCustomerProfileHistory_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCustomerProfileHistory_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCustomerPrimaryCarePhysician__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCustomerPrimaryCarePhysician__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCustomerEventTestState__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCustomerEventTestState__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCustomerEventTestState_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCustomerEventTestState_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCustomerEventTestState()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCustomerEventTestState"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCustomerPrimaryCarePhysician_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCustomerPrimaryCarePhysician_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCustomerPrimaryCarePhysician()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCustomerPrimaryCarePhysician"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCustomerPhoneNumberUpdateUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCustomerPhoneNumberUpdateUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEligibilityUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEligibilityUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEventCustomerResult__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEventCustomerResult__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEventCustomerResult______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEventCustomerResult______"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEventCustomerResult_____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEventCustomerResult_____"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEventCustomerResult_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEventCustomerResult_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEventCustomerResult____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEventCustomerResult____"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEventCustomerResult___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEventCustomerResult___"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEventCustomerResult________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEventCustomerResult________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEventAppointmentCancellationLog()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEventAppointmentCancellationLog"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEmailTemplate_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEmailTemplate_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEmailTemplate()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEmailTemplate"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEventCustomerResult_______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEventCustomerResult_______"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEventCustomerResult()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEventCustomerResult"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEventAppointmentChangeLog()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEventAppointmentChangeLog"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCustomerActivityTypeUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCustomerActivityTypeUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCalls()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCalls"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCalls_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCalls_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCallRoundCallQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCallRoundCallQueue"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCampaign()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCampaign"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCallUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCallUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCalls__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCalls__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCallQueueCustomer__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCallQueueCustomer__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCallCenterTeam()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCallCenterTeam"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaAccountHraChatQuestionnaire_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaAccountHraChatQuestionnaire_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaAccountHraChatQuestionnaire()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaAccountHraChatQuestionnaire"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCallQueueCustomer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCallQueueCustomer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCallQueueCustomer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCallQueueCustomer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCallCenterTeam_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCallCenterTeam_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCampaign_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCampaign_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaClinicalTestQualificationCriteria_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaClinicalTestQualificationCriteria_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaClinicalTestQualificationCriteria()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaClinicalTestQualificationCriteria"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCheckListTemplate_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCheckListTemplate_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCorporateUpload()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCorporateUpload"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaClinicalTestQualificationCriteria___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaClinicalTestQualificationCriteria___"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaClinicalTestQualificationCriteria__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaClinicalTestQualificationCriteria__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCheckListTemplate()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCheckListTemplate"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCampaignActivity()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCampaignActivity"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCampaign___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCampaign___"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCampaign__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCampaign__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCheckListAnswer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCheckListAnswer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCheckListAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCheckListAnswer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaCampaignActivity_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaCampaignActivity_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEvents________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEvents________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEvents______________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEvents______________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEvents_________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEvents_________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEvents_____________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEvents_____________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEvents___________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEvents___________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEvents__________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEvents__________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEvents_______________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEvents_______________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEvents_______________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEvents_______________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEvents____________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEvents____________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEvents____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEvents____"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEvents________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEvents________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEvents_______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEvents_______"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEvents_____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEvents_____"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEvents__________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEvents__________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEvents_________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEvents_________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEvents___________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEvents___________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEvents______________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEvents______________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEvents()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEvents"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEvents______()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEvents______"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEvents__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEvents__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEventCustomers___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEventCustomers___"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEventCustomers()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEventCustomers"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEventCustomers_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEventCustomers_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEventCustomers__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEventCustomers__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEvents___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEvents___"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEvents________________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEvents________________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEvents____________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEvents____________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEvents_____________________()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEvents_____________________"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Lookup' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoLookupCollectionViaEvents_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("LookupCollectionViaEvents_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'MarketingPrintOrderItem' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoMarketingPrintOrderItemCollectionViaPrintOrderItemTracking()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("MarketingPrintOrderItemCollectionViaPrintOrderItemTracking"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'MarketingPrintOrderItem' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoMarketingPrintOrderItemCollectionViaPrintOrderItemTracking_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("MarketingPrintOrderItemCollectionViaPrintOrderItemTracking_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'MedicareQuestion' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoMedicareQuestionCollectionViaCustomerMedicareQuestionAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("MedicareQuestionCollectionViaCustomerMedicareQuestionAnswer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Ndc' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoNdcCollectionViaCurrentMedication()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("NdcCollectionViaCurrentMedication"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'NotesDetails' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoNotesDetailsCollectionViaPriorityInQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("NotesDetailsCollectionViaPriorityInQueue"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'NotesDetails' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoNotesDetailsCollectionViaPriorityInQueue_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("NotesDetailsCollectionViaPriorityInQueue_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'NotesDetails' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoNotesDetailsCollectionViaCallQueueCustomer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("NotesDetailsCollectionViaCallQueueCustomer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'NotesDetails' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoNotesDetailsCollectionViaEvents()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("NotesDetailsCollectionViaEvents"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'NotesDetails' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoNotesDetailsCollectionViaCallQueueCustomer__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("NotesDetailsCollectionViaCallQueueCustomer__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'NotesDetails' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoNotesDetailsCollectionViaEvents_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("NotesDetailsCollectionViaEvents_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'NotesDetails' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoNotesDetailsCollectionViaEvents___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("NotesDetailsCollectionViaEvents___"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'NotesDetails' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoNotesDetailsCollectionViaCallQueueCustomer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("NotesDetailsCollectionViaCallQueueCustomer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'NotesDetails' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoNotesDetailsCollectionViaEvents____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("NotesDetailsCollectionViaEvents____"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'NotesDetails' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoNotesDetailsCollectionViaEvents__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("NotesDetailsCollectionViaEvents__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'NotificationMedium' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoNotificationMediumCollectionViaNotificationType()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("NotificationMediumCollectionViaNotificationType"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'NotificationMedium' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoNotificationMediumCollectionViaNotification()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("NotificationMediumCollectionViaNotification"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'NotificationType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoNotificationTypeCollectionViaEventCustomerTestNotPerformedNotification()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("NotificationTypeCollectionViaEventCustomerTestNotPerformedNotification"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'NotificationType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoNotificationTypeCollectionViaEmailTemplate()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("NotificationTypeCollectionViaEmailTemplate"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'NotificationType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoNotificationTypeCollectionViaNotification()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("NotificationTypeCollectionViaNotification"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Order' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrderCollectionViaRefundRequest_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrderCollectionViaRefundRequest_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Order' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrderCollectionViaRefundRequest()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrderCollectionViaRefundRequest"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Organization' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationCollectionViaAccountTestHcpcsCode_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationCollectionViaAccountTestHcpcsCode_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Organization' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationCollectionViaAccountTestHcpcsCode()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationCollectionViaAccountTestHcpcsCode"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Organization' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationCollectionViaAccountCallCenterOrganization()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationCollectionViaAccountCallCenterOrganization"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Organization' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationCollectionViaAccountCallCenterOrganization_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationCollectionViaAccountCallCenterOrganization_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Organization' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationCollectionViaEventAccountTestHcpcsCode_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationCollectionViaEventAccountTestHcpcsCode_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Organization' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationCollectionViaEventAccountTestHcpcsCode()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationCollectionViaEventAccountTestHcpcsCode"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Organization' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationCollectionViaMarketingPrintOrder()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationCollectionViaMarketingPrintOrder"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Organization' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationCollectionViaMarketingPrintOrder_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationCollectionViaMarketingPrintOrder_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Organization' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganizationCollectionViaAffiliateProfile()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("OrganizationCollectionViaAffiliateProfile"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Package' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPackageCollectionViaPreApprovedPackage()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("PackageCollectionViaPreApprovedPackage"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PhysicianMaster' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPhysicianMasterCollectionViaCustomerPrimaryCarePhysician()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("PhysicianMasterCollectionViaCustomerPrimaryCarePhysician"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PhysicianMaster' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPhysicianMasterCollectionViaCustomerPrimaryCarePhysician_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("PhysicianMasterCollectionViaCustomerPrimaryCarePhysician_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PhysicianMaster' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPhysicianMasterCollectionViaCustomerPrimaryCarePhysician__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("PhysicianMasterCollectionViaCustomerPrimaryCarePhysician__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PodDetails' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPodDetailsCollectionViaSalesRepPodAssigments()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("PodDetailsCollectionViaSalesRepPodAssigments"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PodDetails' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPodDetailsCollectionViaEventStaffAssignment()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("PodDetailsCollectionViaEventStaffAssignment"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PodDetails' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPodDetailsCollectionViaEventNote_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("PodDetailsCollectionViaEventNote_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PodDetails' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPodDetailsCollectionViaEventNote()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("PodDetailsCollectionViaEventNote"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PodDetails' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPodDetailsCollectionViaPodDefaultTeam()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("PodDetailsCollectionViaPodDefaultTeam"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PodDetails' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPodDetailsCollectionViaEventStaffAssignment_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("PodDetailsCollectionViaEventStaffAssignment_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PodDetails' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPodDetailsCollectionViaEventStaffAssignment__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("PodDetailsCollectionViaEventStaffAssignment__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PreQualificationQuestion' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPreQualificationQuestionCollectionViaEventCustomerQuestionAnswer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("PreQualificationQuestionCollectionViaEventCustomerQuestionAnswer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PreQualificationQuestion' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPreQualificationQuestionCollectionViaDisqualifiedTest()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("PreQualificationQuestionCollectionViaDisqualifiedTest"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PreQualificationQuestion' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPreQualificationQuestionCollectionViaDisqualifiedTest_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("PreQualificationQuestionCollectionViaDisqualifiedTest_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'PreQualificationQuestion' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPreQualificationQuestionCollectionViaEventCustomerQuestionAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("PreQualificationQuestionCollectionViaEventCustomerQuestionAnswer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ProspectCustomer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProspectCustomerCollectionViaCallQueueCustomer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ProspectCustomerCollectionViaCallQueueCustomer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ProspectCustomer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProspectCustomerCollectionViaCallQueueCustomer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ProspectCustomerCollectionViaCallQueueCustomer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ProspectCustomer' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProspectCustomerCollectionViaCallQueueCustomer__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ProspectCustomerCollectionViaCallQueueCustomer__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ProspectListDetails' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProspectListDetailsCollectionViaProspects()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ProspectListDetailsCollectionViaProspects"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Prospects' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProspectsCollectionViaHostFacilityRanking()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ProspectsCollectionViaHostFacilityRanking"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Prospects' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProspectsCollectionViaHostPayment()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ProspectsCollectionViaHostPayment"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ProspectType' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoProspectTypeCollectionViaProspects()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ProspectTypeCollectionViaProspects"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'RefundRequest' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoRefundRequestCollectionViaEventAppointmentCancellationLog()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("RefundRequestCollectionViaEventAppointmentCancellationLog"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Relationship' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoRelationshipCollectionViaGuardianDetails_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("RelationshipCollectionViaGuardianDetails_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Relationship' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoRelationshipCollectionViaGuardianDetails()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("RelationshipCollectionViaGuardianDetails"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'RescheduleCancelDisposition' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoRescheduleCancelDispositionCollectionViaEventAppointmentChangeLog()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("RescheduleCancelDispositionCollectionViaEventAppointmentChangeLog"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'RescheduleCancelDisposition' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoRescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("RescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Role' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoRoleCollectionViaUser()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("RoleCollectionViaUser"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Role' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoRoleCollectionViaHostFacilityRanking()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("RoleCollectionViaHostFacilityRanking"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Role' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoRoleCollectionViaUser_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("RoleCollectionViaUser_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ScheduleMethod' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoScheduleMethodCollectionViaEvents___()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ScheduleMethodCollectionViaEvents___"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ScheduleMethod' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoScheduleMethodCollectionViaEvents____()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ScheduleMethodCollectionViaEvents____"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ScheduleMethod' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoScheduleMethodCollectionViaEvents()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ScheduleMethodCollectionViaEvents"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ScheduleMethod' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoScheduleMethodCollectionViaEvents_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ScheduleMethodCollectionViaEvents_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ScheduleMethod' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoScheduleMethodCollectionViaEvents__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ScheduleMethodCollectionViaEvents__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Scripts' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoScriptsCollectionViaCallQueue()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ScriptsCollectionViaCallQueue"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Scripts' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoScriptsCollectionViaCallQueue_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ScriptsCollectionViaCallQueue_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ShippingOption' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoShippingOptionCollectionViaShippingDetail_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ShippingOptionCollectionViaShippingDetail_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'ShippingOption' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoShippingOptionCollectionViaShippingDetail()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ShippingOptionCollectionViaShippingDetail"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'StaffEventRole' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoStaffEventRoleCollectionViaEventStaffAssignment__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("StaffEventRoleCollectionViaEventStaffAssignment__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'StaffEventRole' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoStaffEventRoleCollectionViaPodDefaultTeam()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("StaffEventRoleCollectionViaPodDefaultTeam"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'StaffEventRole' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoStaffEventRoleCollectionViaEventStaffAssignment()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("StaffEventRoleCollectionViaEventStaffAssignment"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'StaffEventRole' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoStaffEventRoleCollectionViaEventStaffAssignment_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("StaffEventRoleCollectionViaEventStaffAssignment_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'StandardFindingTestReading' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoStandardFindingTestReadingCollectionViaCustomerEventReading()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("StandardFindingTestReadingCollectionViaCustomerEventReading"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'State' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoStateCollectionViaAddress()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("StateCollectionViaAddress"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'SurveyQuestion' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSurveyQuestionCollectionViaSurveyAnswer_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("SurveyQuestionCollectionViaSurveyAnswer_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'SurveyQuestion' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoSurveyQuestionCollectionViaSurveyAnswer()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("SurveyQuestionCollectionViaSurveyAnswer"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Tag' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTagCollectionViaPreAssessmentCustomerCallQueueCallAttempt()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TagCollectionViaPreAssessmentCustomerCallQueueCallAttempt"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Tag' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTagCollectionViaCustomerCallQueueCallAttempt()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TagCollectionViaCustomerCallQueueCallAttempt"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TaskPriorityTypes' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTaskPriorityTypesCollectionViaTaskDetails__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TaskPriorityTypesCollectionViaTaskDetails__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TaskPriorityTypes' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTaskPriorityTypesCollectionViaTaskDetails_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TaskPriorityTypesCollectionViaTaskDetails_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TaskPriorityTypes' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTaskPriorityTypesCollectionViaTaskDetails()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TaskPriorityTypesCollectionViaTaskDetails"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TaskStatusTypes' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTaskStatusTypesCollectionViaTaskDetails_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TaskStatusTypesCollectionViaTaskDetails_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TaskStatusTypes' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTaskStatusTypesCollectionViaTaskDetails__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TaskStatusTypesCollectionViaTaskDetails__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TaskStatusTypes' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTaskStatusTypesCollectionViaTaskDetails()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TaskStatusTypesCollectionViaTaskDetails"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TechnicianProfile' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTechnicianProfileCollectionViaPinChangelog()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TechnicianProfileCollectionViaPinChangelog"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Territory' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTerritoryCollectionViaTerritory()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TerritoryCollectionViaTerritory"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Territory' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTerritoryCollectionViaOrganizationRoleUserTerritory()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TerritoryCollectionViaOrganizationRoleUserTerritory"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Test' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestCollectionViaEventCustomerTestNotPerformedNotification()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TestCollectionViaEventCustomerTestNotPerformedNotification"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Test' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestCollectionViaEventPhysicianTest()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TestCollectionViaEventPhysicianTest"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Test' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestCollectionViaDisqualifiedTest_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TestCollectionViaDisqualifiedTest_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Test' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestCollectionViaEventCustomerRetest()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TestCollectionViaEventCustomerRetest"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Test' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestCollectionViaEventPhysicianTest_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TestCollectionViaEventPhysicianTest_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Test' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestCollectionViaKynLabValues_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TestCollectionViaKynLabValues_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Test' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestCollectionViaEventPhysicianTest__()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TestCollectionViaEventPhysicianTest__"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Test' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestCollectionViaTestHcpcsCode_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TestCollectionViaTestHcpcsCode_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Test' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestCollectionViaTestHcpcsCode()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TestCollectionViaTestHcpcsCode"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Test' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestCollectionViaKynLabValues()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TestCollectionViaKynLabValues"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Test' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestCollectionViaPreApprovedTest()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TestCollectionViaPreApprovedTest"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Test' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestCollectionViaClinicalTestQualificationCriteria()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TestCollectionViaClinicalTestQualificationCriteria"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Test' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestCollectionViaRequiredTest()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TestCollectionViaRequiredTest"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Test' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestCollectionViaClinicalTestQualificationCriteria_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TestCollectionViaClinicalTestQualificationCriteria_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Test' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestCollectionViaDisqualifiedTest()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TestCollectionViaDisqualifiedTest"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Test' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestCollectionViaPreQualificationTestTemplate()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TestCollectionViaPreQualificationTestTemplate"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Test' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestCollectionViaPreQualificationTestTemplate_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TestCollectionViaPreQualificationTestTemplate_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Test' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestCollectionViaPreQualificationQuestion()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TestCollectionViaPreQualificationQuestion"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TestHcpcsCode' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestHcpcsCodeCollectionViaEventAccountTestHcpcsCode_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TestHcpcsCodeCollectionViaEventAccountTestHcpcsCode_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TestHcpcsCode' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestHcpcsCodeCollectionViaEventAccountTestHcpcsCode()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TestHcpcsCodeCollectionViaEventAccountTestHcpcsCode"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TestHcpcsCode' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestHcpcsCodeCollectionViaAccountTestHcpcsCode_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TestHcpcsCodeCollectionViaAccountTestHcpcsCode_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TestHcpcsCode' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestHcpcsCodeCollectionViaAccountTestHcpcsCode()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TestHcpcsCodeCollectionViaAccountTestHcpcsCode"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TestNotPerformedReason' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestNotPerformedReasonCollectionViaTestNotPerformed_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TestNotPerformedReasonCollectionViaTestNotPerformed_"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TestNotPerformedReason' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestNotPerformedReasonCollectionViaTestNotPerformed()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TestNotPerformedReasonCollectionViaTestNotPerformed"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TestReading' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestReadingCollectionViaCustomerEventReading()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TestReadingCollectionViaCustomerEventReading"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'TestUnableScreenReason' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTestUnableScreenReasonCollectionViaCustomerEventUnableScreenReason()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("TestUnableScreenReasonCollectionViaCustomerEventUnableScreenReason"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'UserLogin' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoUserLoginCollectionViaPasswordChangelog()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("UserLoginCollectionViaPasswordChangelog"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entities of type 'Zip' to this entity. Use DataAccessAdapter.FetchEntityCollection() to fetch these related entities.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoZipCollectionViaAddress()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.Relations.AddRange(GetRelationsForFieldOfType("ZipCollectionViaAddress"));
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationRoleUserFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId, "OrganizationRoleUserEntity__"));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entity of type 'Organization' to this entity. Use DataAccessAdapter.FetchNewEntity() to fetch this related entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrganization()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(OrganizationFields.OrganizationId, null, ComparisonOperator.Equal, this.OrganizationId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entity of type 'Role' to this entity. Use DataAccessAdapter.FetchNewEntity() to fetch this related entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoRole()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(RoleFields.RoleId, null, ComparisonOperator.Equal, this.RoleId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entity of type 'User' to this entity. Use DataAccessAdapter.FetchNewEntity() to fetch this related entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoUser()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(UserFields.UserId, null, ComparisonOperator.Equal, this.UserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entity of type 'AccountCoordinatorProfile' to this entity. Use DataAccessAdapter.FetchNewEntity() to fetch this related entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAccountCoordinatorProfile()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(AccountCoordinatorProfileFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entity of type 'AffiliateProfile' to this entity. Use DataAccessAdapter.FetchNewEntity() to fetch this related entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoAffiliateProfile_()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(AffiliateProfileFields.AffiliateId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entity of type 'CallCenterRepProfile' to this entity. Use DataAccessAdapter.FetchNewEntity() to fetch this related entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCallCenterRepProfile()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CallCenterRepProfileFields.CallCenterRepId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entity of type 'CustomerProfile' to this entity. Use DataAccessAdapter.FetchNewEntity() to fetch this related entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerProfile()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(CustomerProfileFields.CustomerId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entity of type 'PhysicianProfile' to this entity. Use DataAccessAdapter.FetchNewEntity() to fetch this related entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoPhysicianProfile()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(PhysicianProfileFields.PhysicianId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}

		/// <summary> Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch
		/// the related entity of type 'TechnicianProfile' to this entity. Use DataAccessAdapter.FetchNewEntity() to fetch this related entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoTechnicianProfile()
		{
			IRelationPredicateBucket bucket = new RelationPredicateBucket();
			bucket.PredicateExpression.Add(new FieldCompareValuePredicate(TechnicianProfileFields.OrganizationRoleUserId, null, ComparisonOperator.Equal, this.OrganizationRoleUserId));
			return bucket;
		}
	
		
		/// <summary>Creates entity fields object for this entity. Used in constructor to setup this entity in a polymorphic scenario.</summary>
		protected virtual IEntityFields2 CreateFields()
		{
			return EntityFieldsFactory.CreateEntityFieldsObject(Falcon.Data.EntityType.OrganizationRoleUserEntity);
		}

		/// <summary>
		/// Creates the ITypeDefaultValue instance used to provide default values for value types which aren't of type nullable(of T)
		/// </summary>
		/// <returns></returns>
		protected override ITypeDefaultValue CreateTypeDefaultValueProvider()
		{
			return new TypeDefaultValue();
		}

		/// <summary>Creates a new instance of the factory related to this entity</summary>
		protected override IEntityFactory2 CreateEntityFactory()
		{
			return EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserEntityFactory));
		}
#if !CF
		/// <summary>Adds the member collections to the collections queue (base first)</summary>
		/// <param name="collectionsQueue">The collections queue.</param>
		protected override void AddToMemberEntityCollectionsQueue(Queue<IEntityCollection2> collectionsQueue) 
		{
			base.AddToMemberEntityCollectionsQueue(collectionsQueue);
			collectionsQueue.Enqueue(this._accountCallCenterOrganization_);
			collectionsQueue.Enqueue(this._accountCallCenterOrganization);
			collectionsQueue.Enqueue(this._accountHraChatQuestionnaire_);
			collectionsQueue.Enqueue(this._accountHraChatQuestionnaire);
			collectionsQueue.Enqueue(this._accountTestHcpcsCode_);
			collectionsQueue.Enqueue(this._accountTestHcpcsCode);
			collectionsQueue.Enqueue(this._activityType);
			collectionsQueue.Enqueue(this._additionalFields_);
			collectionsQueue.Enqueue(this._additionalFields);
			collectionsQueue.Enqueue(this._address);
			collectionsQueue.Enqueue(this._advocateManagerTeam_);
			collectionsQueue.Enqueue(this._advocateManagerTeam);
			collectionsQueue.Enqueue(this._afcampaign_);
			collectionsQueue.Enqueue(this._afcampaign);
			collectionsQueue.Enqueue(this._affiliateProfile);
			collectionsQueue.Enqueue(this._applicationAuthentication_);
			collectionsQueue.Enqueue(this._applicationAuthentication);
			collectionsQueue.Enqueue(this._barrier_);
			collectionsQueue.Enqueue(this._barrier);
			collectionsQueue.Enqueue(this._callCenterAgentTeam);
			collectionsQueue.Enqueue(this._callCenterAgentTeamLog__);
			collectionsQueue.Enqueue(this._callCenterAgentTeamLog_);
			collectionsQueue.Enqueue(this._callCenterAgentTeamLog);
			collectionsQueue.Enqueue(this._callCenterTeam_);
			collectionsQueue.Enqueue(this._callCenterTeam);
			collectionsQueue.Enqueue(this._callQueue_);
			collectionsQueue.Enqueue(this._callQueue);
			collectionsQueue.Enqueue(this._callQueueAssignment);
			collectionsQueue.Enqueue(this._callQueueCustomer__);
			collectionsQueue.Enqueue(this._callQueueCustomer_);
			collectionsQueue.Enqueue(this._callQueueCustomer);
			collectionsQueue.Enqueue(this._callQueueCustomerLock);
			collectionsQueue.Enqueue(this._callQueueCustomTag);
			collectionsQueue.Enqueue(this._callRoundCallQueue);
			collectionsQueue.Enqueue(this._calls);
			collectionsQueue.Enqueue(this._callUpload);
			collectionsQueue.Enqueue(this._campaign_);
			collectionsQueue.Enqueue(this._campaign);
			collectionsQueue.Enqueue(this._campaignActivity_);
			collectionsQueue.Enqueue(this._campaignActivity);
			collectionsQueue.Enqueue(this._campaignActivityAssignment);
			collectionsQueue.Enqueue(this._campaignAssignment);
			collectionsQueue.Enqueue(this._cdcontentGeneratorTracking);
			collectionsQueue.Enqueue(this._chaperoneAnswer_);
			collectionsQueue.Enqueue(this._chaperoneAnswer);
			collectionsQueue.Enqueue(this._chaperoneSignature);
			collectionsQueue.Enqueue(this._check_);
			collectionsQueue.Enqueue(this._check);
			collectionsQueue.Enqueue(this._checkListAnswer_);
			collectionsQueue.Enqueue(this._checkListAnswer);
			collectionsQueue.Enqueue(this._checkListTemplate_);
			collectionsQueue.Enqueue(this._checkListTemplate);
			collectionsQueue.Enqueue(this._clinicalTestQualificationCriteria_);
			collectionsQueue.Enqueue(this._clinicalTestQualificationCriteria);
			collectionsQueue.Enqueue(this._contactCall_);
			collectionsQueue.Enqueue(this._contactCall);
			collectionsQueue.Enqueue(this._contactMeeting_);
			collectionsQueue.Enqueue(this._contactMeeting);
			collectionsQueue.Enqueue(this._content_);
			collectionsQueue.Enqueue(this._content);
			collectionsQueue.Enqueue(this._corporateTag_);
			collectionsQueue.Enqueue(this._corporateTag);
			collectionsQueue.Enqueue(this._corporateUpload);
			collectionsQueue.Enqueue(this._coupons_);
			collectionsQueue.Enqueue(this._coupons);
			collectionsQueue.Enqueue(this._currentMedication);
			collectionsQueue.Enqueue(this._customerActivityTypeUpload);
			collectionsQueue.Enqueue(this._customerCallAttempts);
			collectionsQueue.Enqueue(this._customerCallQueueCallAttempt);
			collectionsQueue.Enqueue(this._customerClinicalQuestionAnswer_);
			collectionsQueue.Enqueue(this._customerClinicalQuestionAnswer);
			collectionsQueue.Enqueue(this._customerEligibility_);
			collectionsQueue.Enqueue(this._customerEligibility);
			collectionsQueue.Enqueue(this._customerEventCriticalTestData_);
			collectionsQueue.Enqueue(this._customerEventCriticalTestData);
			collectionsQueue.Enqueue(this._customerEventPriorityInQueueData_);
			collectionsQueue.Enqueue(this._customerEventPriorityInQueueData);
			collectionsQueue.Enqueue(this._customerEventReading);
			collectionsQueue.Enqueue(this._customerEventTestPhysicianEvaluation);
			collectionsQueue.Enqueue(this._customerEventTestState__);
			collectionsQueue.Enqueue(this._customerEventTestState_);
			collectionsQueue.Enqueue(this._customerEventTestState);
			collectionsQueue.Enqueue(this._customerEventUnableScreenReason);
			collectionsQueue.Enqueue(this._customerHealthInfo);
			collectionsQueue.Enqueue(this._customerHealthInfoArchive);
			collectionsQueue.Enqueue(this._customerIcdCode);
			collectionsQueue.Enqueue(this._customerLockForCall);
			collectionsQueue.Enqueue(this._customerMedicareQuestionAnswer);
			collectionsQueue.Enqueue(this._customerPhoneNumberUpdateUpload);
			collectionsQueue.Enqueue(this._customerPrimaryCarePhysician_);
			collectionsQueue.Enqueue(this._customerPrimaryCarePhysician__);
			collectionsQueue.Enqueue(this._customerPrimaryCarePhysician);
			collectionsQueue.Enqueue(this._customerProfileHistory);
			collectionsQueue.Enqueue(this._customerRegistrationNotes);
			collectionsQueue.Enqueue(this._customerResultScreeningCommunication__);
			collectionsQueue.Enqueue(this._customerResultScreeningCommunication_);
			collectionsQueue.Enqueue(this._customerResultScreeningCommunication);
			collectionsQueue.Enqueue(this._customerTag_);
			collectionsQueue.Enqueue(this._customerTag);
			collectionsQueue.Enqueue(this._customerTargeted_);
			collectionsQueue.Enqueue(this._customerTargeted);
			collectionsQueue.Enqueue(this._customerWarmTransfer_);
			collectionsQueue.Enqueue(this._customerWarmTransfer);
			collectionsQueue.Enqueue(this._customEventNotification);
			collectionsQueue.Enqueue(this._directMail);
			collectionsQueue.Enqueue(this._directMailType_);
			collectionsQueue.Enqueue(this._directMailType);
			collectionsQueue.Enqueue(this._disqualifiedTest_);
			collectionsQueue.Enqueue(this._disqualifiedTest);
			collectionsQueue.Enqueue(this._eligibility);
			collectionsQueue.Enqueue(this._eligibilityUpload);
			collectionsQueue.Enqueue(this._emailTemplate);
			collectionsQueue.Enqueue(this._eventAccountTestHcpcsCode_);
			collectionsQueue.Enqueue(this._eventAccountTestHcpcsCode);
			collectionsQueue.Enqueue(this._eventActivityTemplate);
			collectionsQueue.Enqueue(this._eventActivityTemplateCall);
			collectionsQueue.Enqueue(this._eventActivityTemplateEmail);
			collectionsQueue.Enqueue(this._eventActivityTemplateMeeting);
			collectionsQueue.Enqueue(this._eventActivityTemplateTask);
			collectionsQueue.Enqueue(this._eventAppointment);
			collectionsQueue.Enqueue(this._eventAppointmentCancellationLog);
			collectionsQueue.Enqueue(this._eventAppointmentChangeLog);
			collectionsQueue.Enqueue(this._eventCustomerBasicBioMetric);
			collectionsQueue.Enqueue(this._eventCustomerGiftCard);
			collectionsQueue.Enqueue(this._eventCustomerPrimaryCarePhysician);
			collectionsQueue.Enqueue(this._eventCustomerQuestionAnswer_);
			collectionsQueue.Enqueue(this._eventCustomerQuestionAnswer);
			collectionsQueue.Enqueue(this._eventCustomerResult___);
			collectionsQueue.Enqueue(this._eventCustomerResult__);
			collectionsQueue.Enqueue(this._eventCustomerResult_);
			collectionsQueue.Enqueue(this._eventCustomerResult____);
			collectionsQueue.Enqueue(this._eventCustomerResult______);
			collectionsQueue.Enqueue(this._eventCustomerResult_______);
			collectionsQueue.Enqueue(this._eventCustomerResult);
			collectionsQueue.Enqueue(this._eventCustomerResult_____);
			collectionsQueue.Enqueue(this._eventCustomerResult________);
			collectionsQueue.Enqueue(this._eventCustomerResultBloodLab);
			collectionsQueue.Enqueue(this._eventCustomerResultHistory);
			collectionsQueue.Enqueue(this._eventCustomerResultHistory_);
			collectionsQueue.Enqueue(this._eventCustomerResultHistory__);
			collectionsQueue.Enqueue(this._eventCustomerRetest);
			collectionsQueue.Enqueue(this._eventCustomers_);
			collectionsQueue.Enqueue(this._eventCustomers);
			collectionsQueue.Enqueue(this._eventCustomerTestNotPerformedNotification);
			collectionsQueue.Enqueue(this._eventNote_);
			collectionsQueue.Enqueue(this._eventNote);
			collectionsQueue.Enqueue(this._eventPhysicianTest__);
			collectionsQueue.Enqueue(this._eventPhysicianTest_);
			collectionsQueue.Enqueue(this._eventPhysicianTest);
			collectionsQueue.Enqueue(this._events___);
			collectionsQueue.Enqueue(this._events____);
			collectionsQueue.Enqueue(this._events__);
			collectionsQueue.Enqueue(this._events);
			collectionsQueue.Enqueue(this._events_);
			collectionsQueue.Enqueue(this._eventStaffAssignment__);
			collectionsQueue.Enqueue(this._eventStaffAssignment_);
			collectionsQueue.Enqueue(this._eventStaffAssignment);
			collectionsQueue.Enqueue(this._exitInterviewAnswer_);
			collectionsQueue.Enqueue(this._exitInterviewAnswer);
			collectionsQueue.Enqueue(this._exitInterviewSignature);
			collectionsQueue.Enqueue(this._exportableReportsQueue);
			collectionsQueue.Enqueue(this._file);
			collectionsQueue.Enqueue(this._fillEventCallQueue);
			collectionsQueue.Enqueue(this._fluConsentAnswer_);
			collectionsQueue.Enqueue(this._fluConsentAnswer);
			collectionsQueue.Enqueue(this._fluConsentSignature);
			collectionsQueue.Enqueue(this._fluConsentTemplate_);
			collectionsQueue.Enqueue(this._fluConsentTemplate);
			collectionsQueue.Enqueue(this._gcNotGivenReason_);
			collectionsQueue.Enqueue(this._gcNotGivenReason);
			collectionsQueue.Enqueue(this._guardianDetails_);
			collectionsQueue.Enqueue(this._guardianDetails);
			collectionsQueue.Enqueue(this._hafTemplate_);
			collectionsQueue.Enqueue(this._hafTemplate);
			collectionsQueue.Enqueue(this._hcpcsCode_);
			collectionsQueue.Enqueue(this._hcpcsCode);
			collectionsQueue.Enqueue(this._healthPlanCallQueueCriteria__);
			collectionsQueue.Enqueue(this._healthPlanCallQueueCriteria_);
			collectionsQueue.Enqueue(this._healthPlanCriteriaAssignment__);
			collectionsQueue.Enqueue(this._healthPlanCriteriaAssignment_);
			collectionsQueue.Enqueue(this._healthPlanCriteriaAssignment);
			collectionsQueue.Enqueue(this._healthPlanCriteriaAssignmentUpload);
			collectionsQueue.Enqueue(this._healthPlanCriteriaTeamAssignment_);
			collectionsQueue.Enqueue(this._healthPlanCriteriaTeamAssignment);
			collectionsQueue.Enqueue(this._healthPlanRevenue_);
			collectionsQueue.Enqueue(this._healthPlanRevenue);
			collectionsQueue.Enqueue(this._hospitalPartnerCustomer__);
			collectionsQueue.Enqueue(this._hospitalPartnerCustomer_);
			collectionsQueue.Enqueue(this._hospitalPartnerCustomer);
			collectionsQueue.Enqueue(this._hostFacilityRanking);
			collectionsQueue.Enqueue(this._hostPayment);
			collectionsQueue.Enqueue(this._hostPaymentTransaction);
			collectionsQueue.Enqueue(this._icdCodes_);
			collectionsQueue.Enqueue(this._icdCodes);
			collectionsQueue.Enqueue(this._incidentalFindings);
			collectionsQueue.Enqueue(this._kynLabValues_);
			collectionsQueue.Enqueue(this._kynLabValues);
			collectionsQueue.Enqueue(this._lab);
			collectionsQueue.Enqueue(this._language);
			collectionsQueue.Enqueue(this._languageBarrierCallQueue);
			collectionsQueue.Enqueue(this._mailRoundCallQueue);
			collectionsQueue.Enqueue(this._marketingPrintOrder);
			collectionsQueue.Enqueue(this._medication_);
			collectionsQueue.Enqueue(this._medication);
			collectionsQueue.Enqueue(this._medicationUpload);
			collectionsQueue.Enqueue(this._mergeCustomerUpload);
			collectionsQueue.Enqueue(this._noShowCallQueue);
			collectionsQueue.Enqueue(this._notesDetails_);
			collectionsQueue.Enqueue(this._notesDetails);
			collectionsQueue.Enqueue(this._notification);
			collectionsQueue.Enqueue(this._notificationType);
			collectionsQueue.Enqueue(this._organizationRoleUserTerritory);
			collectionsQueue.Enqueue(this._orgRoleUserActivity);
			collectionsQueue.Enqueue(this._participationConsentSignature);
			collectionsQueue.Enqueue(this._passwordChangelog);
			collectionsQueue.Enqueue(this._payPeriod_);
			collectionsQueue.Enqueue(this._payPeriod);
			collectionsQueue.Enqueue(this._pcpAppointment_);
			collectionsQueue.Enqueue(this._pcpAppointment);
			collectionsQueue.Enqueue(this._pcpDisposition_);
			collectionsQueue.Enqueue(this._pcpDisposition);
			collectionsQueue.Enqueue(this._physicianRecordRequestSignature);
			collectionsQueue.Enqueue(this._pinChangelog);
			collectionsQueue.Enqueue(this._podDefaultTeam);
			collectionsQueue.Enqueue(this._preApprovedPackage);
			collectionsQueue.Enqueue(this._preApprovedTest);
			collectionsQueue.Enqueue(this._preAssessmentCallQueueCustomerLock);
			collectionsQueue.Enqueue(this._preAssessmentCustomerCallQueueCallAttempt);
			collectionsQueue.Enqueue(this._preQualificationQuestion);
			collectionsQueue.Enqueue(this._preQualificationTestTemplate_);
			collectionsQueue.Enqueue(this._preQualificationTestTemplate);
			collectionsQueue.Enqueue(this._printOrderItemTracking_);
			collectionsQueue.Enqueue(this._printOrderItemTracking);
			collectionsQueue.Enqueue(this._priorityInQueue_);
			collectionsQueue.Enqueue(this._priorityInQueue);
			collectionsQueue.Enqueue(this._prospectCustomer);
			collectionsQueue.Enqueue(this._prospects);
			collectionsQueue.Enqueue(this._rapsUpload);
			collectionsQueue.Enqueue(this._referral);
			collectionsQueue.Enqueue(this._refundRequest_);
			collectionsQueue.Enqueue(this._refundRequest);
			collectionsQueue.Enqueue(this._requiredTest);
			collectionsQueue.Enqueue(this._salesRepPodAssigments);
			collectionsQueue.Enqueue(this._scheduleTemplate_);
			collectionsQueue.Enqueue(this._scheduleTemplate);
			collectionsQueue.Enqueue(this._seminars);
			collectionsQueue.Enqueue(this._shippingDetail_);
			collectionsQueue.Enqueue(this._shippingDetail);
			collectionsQueue.Enqueue(this._sourceCodeChangeLog);
			collectionsQueue.Enqueue(this._staffEventScheduleUpload);
			collectionsQueue.Enqueue(this._surveyAnswer_);
			collectionsQueue.Enqueue(this._surveyAnswer);
			collectionsQueue.Enqueue(this._surveyTemplate_);
			collectionsQueue.Enqueue(this._surveyTemplate);
			collectionsQueue.Enqueue(this._suspectConditionUpload);
			collectionsQueue.Enqueue(this._systemGenertedCallQueueCriteria__);
			collectionsQueue.Enqueue(this._systemGenertedCallQueueCriteria_);
			collectionsQueue.Enqueue(this._systemGenertedCallQueueCriteria);
			collectionsQueue.Enqueue(this._taskDetails__);
			collectionsQueue.Enqueue(this._taskDetails_);
			collectionsQueue.Enqueue(this._taskDetails);
			collectionsQueue.Enqueue(this._territory);
			collectionsQueue.Enqueue(this._testHcpcsCode_);
			collectionsQueue.Enqueue(this._testHcpcsCode);
			collectionsQueue.Enqueue(this._testNotPerformed_);
			collectionsQueue.Enqueue(this._testNotPerformed);
			collectionsQueue.Enqueue(this._testNotPerformedReason);
			collectionsQueue.Enqueue(this._testPerformedExternally_);
			collectionsQueue.Enqueue(this._testPerformedExternally);
			collectionsQueue.Enqueue(this._uncontactedCustomerCallQueue);
			collectionsQueue.Enqueue(this._uploadZipInfo);
			collectionsQueue.Enqueue(this._user__);
			collectionsQueue.Enqueue(this._user_);
			collectionsQueue.Enqueue(this._accountCollectionViaFillEventCallQueue);
			collectionsQueue.Enqueue(this._accountCollectionViaMailRoundCallQueue);
			collectionsQueue.Enqueue(this._accountCollectionViaEligibilityUpload);
			collectionsQueue.Enqueue(this._accountCollectionViaCorporateUpload);
			collectionsQueue.Enqueue(this._accountCollectionViaHealthPlanCallQueueCriteria);
			collectionsQueue.Enqueue(this._accountCollectionViaCallQueueCustomer_);
			collectionsQueue.Enqueue(this._accountCollectionViaCallQueueCustomer);
			collectionsQueue.Enqueue(this._accountCollectionViaCallQueueCustomer__);
			collectionsQueue.Enqueue(this._accountCollectionViaHealthPlanRevenue);
			collectionsQueue.Enqueue(this._accountCollectionViaHealthPlanRevenue_);
			collectionsQueue.Enqueue(this._accountCollectionViaCorporateTag_);
			collectionsQueue.Enqueue(this._accountCollectionViaLanguageBarrierCallQueue);
			collectionsQueue.Enqueue(this._accountCollectionViaEventNote);
			collectionsQueue.Enqueue(this._accountCollectionViaCampaign);
			collectionsQueue.Enqueue(this._accountCollectionViaEventNote_);
			collectionsQueue.Enqueue(this._accountCollectionViaCampaign_);
			collectionsQueue.Enqueue(this._accountCollectionViaHealthPlanCallQueueCriteria_);
			collectionsQueue.Enqueue(this._accountCollectionViaCorporateTag);
			collectionsQueue.Enqueue(this._accountCollectionViaCallQueueCustomTag);
			collectionsQueue.Enqueue(this._accountCollectionViaCalls);
			collectionsQueue.Enqueue(this._accountCollectionViaCallRoundCallQueue);
			collectionsQueue.Enqueue(this._accountCollectionViaAccountHraChatQuestionnaire_);
			collectionsQueue.Enqueue(this._accountCollectionViaAccountHraChatQuestionnaire);
			collectionsQueue.Enqueue(this._accountCollectionViaUncontactedCustomerCallQueue);
			collectionsQueue.Enqueue(this._accountCollectionViaCustomEventNotification);
			collectionsQueue.Enqueue(this._accountCollectionViaNoShowCallQueue);
			collectionsQueue.Enqueue(this._accountCollectionViaAccountCallCenterOrganization_);
			collectionsQueue.Enqueue(this._accountCollectionViaAccountCallCenterOrganization);
			collectionsQueue.Enqueue(this._activityCollectionViaOrgRoleUserActivity);
			collectionsQueue.Enqueue(this._activityTypeCollectionViaCallQueueCustomer);
			collectionsQueue.Enqueue(this._activityTypeCollectionViaCallQueueCustomer__);
			collectionsQueue.Enqueue(this._activityTypeCollectionViaCallQueueCustomer_);
			collectionsQueue.Enqueue(this._addressCollectionViaCustomerPrimaryCarePhysician_);
			collectionsQueue.Enqueue(this._addressCollectionViaProspects);
			collectionsQueue.Enqueue(this._addressCollectionViaCustomerPrimaryCarePhysician___);
			collectionsQueue.Enqueue(this._addressCollectionViaCustomerPrimaryCarePhysician____);
			collectionsQueue.Enqueue(this._addressCollectionViaUser);
			collectionsQueue.Enqueue(this._addressCollectionViaUser_);
			collectionsQueue.Enqueue(this._addressCollectionViaShippingDetail);
			collectionsQueue.Enqueue(this._addressCollectionViaHostPayment);
			collectionsQueue.Enqueue(this._addressCollectionViaShippingDetail_);
			collectionsQueue.Enqueue(this._addressCollectionViaCustomerPrimaryCarePhysician);
			collectionsQueue.Enqueue(this._addressCollectionViaCustomerPrimaryCarePhysician__);
			collectionsQueue.Enqueue(this._addressCollectionViaCustomerPrimaryCarePhysician_____);
			collectionsQueue.Enqueue(this._afadvertiserCollectionViaAfcampaign);
			collectionsQueue.Enqueue(this._afadvertiserCollectionViaAfcampaign_);
			collectionsQueue.Enqueue(this._afaffiliateCampaignCollectionViaEventCustomers);
			collectionsQueue.Enqueue(this._afaffiliateCampaignCollectionViaEventCustomers_);
			collectionsQueue.Enqueue(this._afaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer);
			collectionsQueue.Enqueue(this._callCenterTeamCollectionViaCallCenterAgentTeam);
			collectionsQueue.Enqueue(this._callCenterTeamCollectionViaCallCenterAgentTeamLog);
			collectionsQueue.Enqueue(this._callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_);
			collectionsQueue.Enqueue(this._callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment);
			collectionsQueue.Enqueue(this._callCenterTeamCollectionViaCallCenterAgentTeamLog_);
			collectionsQueue.Enqueue(this._callCenterTeamCollectionViaCallCenterAgentTeamLog__);
			collectionsQueue.Enqueue(this._callQueueCollectionViaCallQueueCustomer_);
			collectionsQueue.Enqueue(this._callQueueCollectionViaHealthPlanCallQueueCriteria__);
			collectionsQueue.Enqueue(this._callQueueCollectionViaCallQueueCustomer);
			collectionsQueue.Enqueue(this._callQueueCollectionViaCalls);
			collectionsQueue.Enqueue(this._callQueueCollectionViaCallQueueAssignment);
			collectionsQueue.Enqueue(this._callQueueCollectionViaSystemGenertedCallQueueCriteria__);
			collectionsQueue.Enqueue(this._callQueueCollectionViaSystemGenertedCallQueueCriteria_);
			collectionsQueue.Enqueue(this._callQueueCollectionViaCallQueueCustomer__);
			collectionsQueue.Enqueue(this._callQueueCollectionViaHealthPlanCallQueueCriteria_);
			collectionsQueue.Enqueue(this._callQueueCollectionViaSystemGenertedCallQueueCriteria);
			collectionsQueue.Enqueue(this._callQueueCriteriaCollectionViaCallQueueCustomer);
			collectionsQueue.Enqueue(this._callQueueCriteriaCollectionViaCallQueueCustomer__);
			collectionsQueue.Enqueue(this._callQueueCriteriaCollectionViaCallQueueCustomer_);
			collectionsQueue.Enqueue(this._callQueueCustomerCollectionViaCustomerCallQueueCallAttempt);
			collectionsQueue.Enqueue(this._callsCollectionViaCustomerCallQueueCallAttempt);
			collectionsQueue.Enqueue(this._callsCollectionViaPreAssessmentCustomerCallQueueCallAttempt);
			collectionsQueue.Enqueue(this._callUploadCollectionViaDirectMail);
			collectionsQueue.Enqueue(this._campaignCollectionViaCallQueueCustomer__);
			collectionsQueue.Enqueue(this._campaignCollectionViaCampaignAssignment);
			collectionsQueue.Enqueue(this._campaignCollectionViaCallQueueCustomer);
			collectionsQueue.Enqueue(this._campaignCollectionViaCampaignActivity_);
			collectionsQueue.Enqueue(this._campaignCollectionViaHealthPlanCallQueueCriteria_);
			collectionsQueue.Enqueue(this._campaignCollectionViaCampaignActivity);
			collectionsQueue.Enqueue(this._campaignCollectionViaCalls);
			collectionsQueue.Enqueue(this._campaignCollectionViaEventCustomers_);
			collectionsQueue.Enqueue(this._campaignCollectionViaHealthPlanCallQueueCriteria);
			collectionsQueue.Enqueue(this._campaignCollectionViaDirectMail);
			collectionsQueue.Enqueue(this._campaignCollectionViaCallQueueCustomer_);
			collectionsQueue.Enqueue(this._campaignCollectionViaEventCustomers);
			collectionsQueue.Enqueue(this._campaignActivityCollectionViaCampaignActivityAssignment);
			collectionsQueue.Enqueue(this._chaperoneQuestionCollectionViaChaperoneAnswer);
			collectionsQueue.Enqueue(this._chaperoneQuestionCollectionViaChaperoneAnswer_);
			collectionsQueue.Enqueue(this._checkListQuestionCollectionViaCheckListAnswer_);
			collectionsQueue.Enqueue(this._checkListQuestionCollectionViaCheckListAnswer);
			collectionsQueue.Enqueue(this._checkListQuestionCollectionViaExitInterviewSignature);
			collectionsQueue.Enqueue(this._cityCollectionViaAddress);
			collectionsQueue.Enqueue(this._communicationModeCollectionViaEvents____);
			collectionsQueue.Enqueue(this._communicationModeCollectionViaEvents);
			collectionsQueue.Enqueue(this._communicationModeCollectionViaEvents___);
			collectionsQueue.Enqueue(this._communicationModeCollectionViaEvents__);
			collectionsQueue.Enqueue(this._communicationModeCollectionViaEvents_);
			collectionsQueue.Enqueue(this._contactCallStatusCollectionViaContactCall);
			collectionsQueue.Enqueue(this._contactCallStatusCollectionViaContactCall_);
			collectionsQueue.Enqueue(this._contactCallStatusCollectionViaContactMeeting_);
			collectionsQueue.Enqueue(this._contactCallStatusCollectionViaContactMeeting);
			collectionsQueue.Enqueue(this._countryCollectionViaAddress);
			collectionsQueue.Enqueue(this._couponTypeCollectionViaCoupons_);
			collectionsQueue.Enqueue(this._couponTypeCollectionViaCoupons);
			collectionsQueue.Enqueue(this._customerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation);
			collectionsQueue.Enqueue(this._customerEventScreeningTestsCollectionViaTestPerformedExternally_);
			collectionsQueue.Enqueue(this._customerEventScreeningTestsCollectionViaCustomerEventTestState);
			collectionsQueue.Enqueue(this._customerEventScreeningTestsCollectionViaCustomerEventTestState_);
			collectionsQueue.Enqueue(this._customerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason);
			collectionsQueue.Enqueue(this._customerEventScreeningTestsCollectionViaCustomerEventTestState__);
			collectionsQueue.Enqueue(this._customerEventScreeningTestsCollectionViaTestPerformedExternally);
			collectionsQueue.Enqueue(this._customerEventScreeningTestsCollectionViaCustomerEventReading);
			collectionsQueue.Enqueue(this._customerEventScreeningTestsCollectionViaTestNotPerformed);
			collectionsQueue.Enqueue(this._customerEventScreeningTestsCollectionViaTestNotPerformed_);
			collectionsQueue.Enqueue(this._customerHealthQuestionsCollectionViaCustomerHealthInfo);
			collectionsQueue.Enqueue(this._customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_);
			collectionsQueue.Enqueue(this._customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_);
			collectionsQueue.Enqueue(this._customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer);
			collectionsQueue.Enqueue(this._customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__);
			collectionsQueue.Enqueue(this._customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___);
			collectionsQueue.Enqueue(this._customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria);
			collectionsQueue.Enqueue(this._customerHealthQuestionsCollectionViaCustomerHealthInfoArchive);
			collectionsQueue.Enqueue(this._customerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaFillEventCallQueue);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaDisqualifiedTest_);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaCustomerEligibility_);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaEventCustomerResult_____);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaCustomerEligibility);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaLanguageBarrierCallQueue);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaEventCustomerQuestionAnswer);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaHospitalPartnerCustomer_);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaHospitalPartnerCustomer__);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaHospitalPartnerCustomer);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaDisqualifiedTest);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaCustomerPrimaryCarePhysician_);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaCustomerPrimaryCarePhysician__);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaNoShowCallQueue);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaCustomerPrimaryCarePhysician);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaCallQueueCustomer);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaCustomerHealthInfo);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaCallQueueCustomer__);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaCallQueueCustomer_);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaEventCustomerResult______);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaCustomerIcdCode);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaMailRoundCallQueue);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaCustomerHealthInfoArchive);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaEventCustomerQuestionAnswer_);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaRequiredTest);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaCustomerWarmTransfer_);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaProspectCustomer);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaEventCustomerResult_);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaEventCustomerResult__);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaUncontactedCustomerCallQueue);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaCustomerWarmTransfer);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaMedication_);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaCallRoundCallQueue);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaCustomerTag_);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaReferral);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaCustomerTargeted_);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaCustomerTargeted);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaCustomerTag);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaMedication);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaEventCustomerResult________);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaEventCustomerResult);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaEventCustomerResult_______);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaDirectMail);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaEventCustomerResult____);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaCurrentMedication);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaGuardianDetails);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaEventCustomers);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaEventCustomers_);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaCustomerCallQueueCallAttempt);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaEventCustomerResult___);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaCustomerProfileHistory);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaCustomerClinicalQuestionAnswer);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaCustomerClinicalQuestionAnswer_);
			collectionsQueue.Enqueue(this._customerProfileCollectionViaGuardianDetails_);
			collectionsQueue.Enqueue(this._customerProfileHistoryCollectionViaEventCustomers_);
			collectionsQueue.Enqueue(this._customerProfileHistoryCollectionViaEventCustomers);
			collectionsQueue.Enqueue(this._customerRegistrationNotesCollectionViaEventAppointmentCancellationLog);
			collectionsQueue.Enqueue(this._customerRegistrationNotesCollectionViaEventCustomers_);
			collectionsQueue.Enqueue(this._customerRegistrationNotesCollectionViaEventCustomers);
			collectionsQueue.Enqueue(this._directMailTypeCollectionViaDirectMail);
			collectionsQueue.Enqueue(this._directMailTypeCollectionViaCampaignActivity);
			collectionsQueue.Enqueue(this._directMailTypeCollectionViaCampaignActivity_);
			collectionsQueue.Enqueue(this._eventActivityTemplateCollectionViaEventActivityTemplateMeeting);
			collectionsQueue.Enqueue(this._eventActivityTemplateCollectionViaEventActivityTemplateTask);
			collectionsQueue.Enqueue(this._eventActivityTemplateCollectionViaEventActivityTemplateCall);
			collectionsQueue.Enqueue(this._eventActivityTemplateCollectionViaEventActivityTemplateEmail);
			collectionsQueue.Enqueue(this._eventAppointmentCollectionViaEventCustomers);
			collectionsQueue.Enqueue(this._eventAppointmentCollectionViaEventCustomers_);
			collectionsQueue.Enqueue(this._eventCustomerResultCollectionViaCustomerResultScreeningCommunication);
			collectionsQueue.Enqueue(this._eventCustomerResultCollectionViaPriorityInQueue_);
			collectionsQueue.Enqueue(this._eventCustomerResultCollectionViaKynLabValues);
			collectionsQueue.Enqueue(this._eventCustomerResultCollectionViaCustomerResultScreeningCommunication__);
			collectionsQueue.Enqueue(this._eventCustomerResultCollectionViaCustomerResultScreeningCommunication_);
			collectionsQueue.Enqueue(this._eventCustomerResultCollectionViaCdcontentGeneratorTracking);
			collectionsQueue.Enqueue(this._eventCustomerResultCollectionViaKynLabValues_);
			collectionsQueue.Enqueue(this._eventCustomerResultCollectionViaPriorityInQueue);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaDisqualifiedTest_);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaEventAppointmentChangeLog);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaDisqualifiedTest);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaEventCustomerPrimaryCarePhysician);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaEventCustomerQuestionAnswer_);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaEventAppointmentCancellationLog);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaEventCustomerQuestionAnswer);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaEventCustomerGiftCard);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaSurveyAnswer);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaEventCustomerTestNotPerformedNotification);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaPhysicianRecordRequestSignature);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaEventCustomerRetest);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaPcpDisposition);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaPcpDisposition_);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaChaperoneSignature);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaChaperoneAnswer_);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaChaperoneAnswer);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaCallQueueCustomer__);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaCheckListAnswer_);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaCallQueueCustomer);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaCallQueueCustomer_);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaCustomerHealthInfo);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaExitInterviewSignature);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaFluConsentAnswer);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaExitInterviewAnswer_);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaCheckListAnswer);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaExitInterviewAnswer);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaFluConsentAnswer_);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaSurveyAnswer_);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaCustomerHealthInfoArchive);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaCustomerMedicareQuestionAnswer);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaFluConsentSignature);
			collectionsQueue.Enqueue(this._eventCustomersCollectionViaParticipationConsentSignature);
			collectionsQueue.Enqueue(this._eventsCollectionViaEventCustomerQuestionAnswer);
			collectionsQueue.Enqueue(this._eventsCollectionViaEventPhysicianTest__);
			collectionsQueue.Enqueue(this._eventsCollectionViaEventStaffAssignment__);
			collectionsQueue.Enqueue(this._eventsCollectionViaEventStaffAssignment_);
			collectionsQueue.Enqueue(this._eventsCollectionViaEventCustomers);
			collectionsQueue.Enqueue(this._eventsCollectionViaEventCustomerResult____);
			collectionsQueue.Enqueue(this._eventsCollectionViaEventCustomerResult___);
			collectionsQueue.Enqueue(this._eventsCollectionViaHospitalPartnerCustomer_);
			collectionsQueue.Enqueue(this._eventsCollectionViaEventCustomerResult_);
			collectionsQueue.Enqueue(this._eventsCollectionViaEventCustomerResult________);
			collectionsQueue.Enqueue(this._eventsCollectionViaEventCustomerResult______);
			collectionsQueue.Enqueue(this._eventsCollectionViaEventCustomerResult__);
			collectionsQueue.Enqueue(this._eventsCollectionViaEventCustomerResult_______);
			collectionsQueue.Enqueue(this._eventsCollectionViaEventPhysicianTest_);
			collectionsQueue.Enqueue(this._eventsCollectionViaEventPhysicianTest);
			collectionsQueue.Enqueue(this._eventsCollectionViaEventCustomerQuestionAnswer_);
			collectionsQueue.Enqueue(this._eventsCollectionViaHospitalPartnerCustomer__);
			collectionsQueue.Enqueue(this._eventsCollectionViaEventCustomerResult);
			collectionsQueue.Enqueue(this._eventsCollectionViaHospitalPartnerCustomer);
			collectionsQueue.Enqueue(this._eventsCollectionViaEventCustomerResult_____);
			collectionsQueue.Enqueue(this._eventsCollectionViaEventCustomers_);
			collectionsQueue.Enqueue(this._eventsCollectionViaEventAccountTestHcpcsCode);
			collectionsQueue.Enqueue(this._eventsCollectionViaCustomerRegistrationNotes);
			collectionsQueue.Enqueue(this._eventsCollectionViaCallQueueCustomer);
			collectionsQueue.Enqueue(this._eventsCollectionViaEventAccountTestHcpcsCode_);
			collectionsQueue.Enqueue(this._eventsCollectionViaSeminars);
			collectionsQueue.Enqueue(this._eventsCollectionViaDisqualifiedTest_);
			collectionsQueue.Enqueue(this._eventsCollectionViaDisqualifiedTest);
			collectionsQueue.Enqueue(this._eventsCollectionViaCustomEventNotification);
			collectionsQueue.Enqueue(this._eventsCollectionViaCallQueueCustomer__);
			collectionsQueue.Enqueue(this._eventsCollectionViaCustomerClinicalQuestionAnswer);
			collectionsQueue.Enqueue(this._eventsCollectionViaCustomerClinicalQuestionAnswer_);
			collectionsQueue.Enqueue(this._eventsCollectionViaEventAppointmentChangeLog);
			collectionsQueue.Enqueue(this._eventsCollectionViaEventAppointmentChangeLog_);
			collectionsQueue.Enqueue(this._eventsCollectionViaCallQueueCustomer_);
			collectionsQueue.Enqueue(this._eventsCollectionViaHostPayment);
			collectionsQueue.Enqueue(this._eventsCollectionViaEventStaffAssignment);
			collectionsQueue.Enqueue(this._eventsCollectionViaEventAppointmentCancellationLog);
			collectionsQueue.Enqueue(this._eventTypeCollectionViaEvents);
			collectionsQueue.Enqueue(this._eventTypeCollectionViaEvents____);
			collectionsQueue.Enqueue(this._eventTypeCollectionViaEvents___);
			collectionsQueue.Enqueue(this._eventTypeCollectionViaEvents_);
			collectionsQueue.Enqueue(this._eventTypeCollectionViaEvents__);
			collectionsQueue.Enqueue(this._exitInterviewQuestionCollectionViaExitInterviewAnswer_);
			collectionsQueue.Enqueue(this._exitInterviewQuestionCollectionViaExitInterviewAnswer);
			collectionsQueue.Enqueue(this._exportableReportsCollectionViaExportableReportsQueue);
			collectionsQueue.Enqueue(this._fileCollectionViaCustomerActivityTypeUpload_);
			collectionsQueue.Enqueue(this._fileCollectionViaCorporateUpload);
			collectionsQueue.Enqueue(this._fileCollectionViaStaffEventScheduleUpload);
			collectionsQueue.Enqueue(this._fileCollectionViaCorporateUpload_);
			collectionsQueue.Enqueue(this._fileCollectionViaPhysicianRecordRequestSignature);
			collectionsQueue.Enqueue(this._fileCollectionViaCustomerActivityTypeUpload);
			collectionsQueue.Enqueue(this._fileCollectionViaRapsUpload_);
			collectionsQueue.Enqueue(this._fileCollectionViaCallUpload_);
			collectionsQueue.Enqueue(this._fileCollectionViaChaperoneSignature_);
			collectionsQueue.Enqueue(this._fileCollectionViaRapsUpload);
			collectionsQueue.Enqueue(this._fileCollectionViaChaperoneSignature);
			collectionsQueue.Enqueue(this._fileCollectionViaCorporateUpload__);
			collectionsQueue.Enqueue(this._fileCollectionViaCallUpload);
			collectionsQueue.Enqueue(this._fileCollectionViaHealthPlanCriteriaAssignmentUpload);
			collectionsQueue.Enqueue(this._fileCollectionViaParticipationConsentSignature_);
			collectionsQueue.Enqueue(this._fileCollectionViaMergeCustomerUpload);
			collectionsQueue.Enqueue(this._fileCollectionViaMedicationUpload_);
			collectionsQueue.Enqueue(this._fileCollectionViaMedicationUpload);
			collectionsQueue.Enqueue(this._fileCollectionViaFluConsentSignature_);
			collectionsQueue.Enqueue(this._fileCollectionViaFluConsentSignature);
			collectionsQueue.Enqueue(this._fileCollectionViaMergeCustomerUpload_);
			collectionsQueue.Enqueue(this._fileCollectionViaExitInterviewSignature);
			collectionsQueue.Enqueue(this._fileCollectionViaEventCustomerGiftCard_);
			collectionsQueue.Enqueue(this._fileCollectionViaEventCustomerGiftCard);
			collectionsQueue.Enqueue(this._fileCollectionViaEligibilityUpload);
			collectionsQueue.Enqueue(this._fileCollectionViaEligibilityUpload_);
			collectionsQueue.Enqueue(this._fileCollectionViaExportableReportsQueue);
			collectionsQueue.Enqueue(this._fileCollectionViaSuspectConditionUpload);
			collectionsQueue.Enqueue(this._fileCollectionViaStaffEventScheduleUpload_);
			collectionsQueue.Enqueue(this._fileCollectionViaParticipationConsentSignature);
			collectionsQueue.Enqueue(this._fileCollectionViaCustomerPhoneNumberUpdateUpload_);
			collectionsQueue.Enqueue(this._fileCollectionViaCustomerPhoneNumberUpdateUpload);
			collectionsQueue.Enqueue(this._fileCollectionViaSuspectConditionUpload_);
			collectionsQueue.Enqueue(this._fluConsentQuestionCollectionViaFluConsentAnswer);
			collectionsQueue.Enqueue(this._fluConsentQuestionCollectionViaFluConsentAnswer_);
			collectionsQueue.Enqueue(this._gcNotGivenReasonCollectionViaEventCustomers);
			collectionsQueue.Enqueue(this._gcNotGivenReasonCollectionViaEventCustomers_);
			collectionsQueue.Enqueue(this._hafTemplateCollectionViaClinicalTestQualificationCriteria);
			collectionsQueue.Enqueue(this._hafTemplateCollectionViaEvents___);
			collectionsQueue.Enqueue(this._hafTemplateCollectionViaEvents);
			collectionsQueue.Enqueue(this._hafTemplateCollectionViaEvents____);
			collectionsQueue.Enqueue(this._hafTemplateCollectionViaEvents_);
			collectionsQueue.Enqueue(this._hafTemplateCollectionViaCustomerClinicalQuestionAnswer);
			collectionsQueue.Enqueue(this._hafTemplateCollectionViaEvents__);
			collectionsQueue.Enqueue(this._hafTemplateCollectionViaCustomerClinicalQuestionAnswer_);
			collectionsQueue.Enqueue(this._hafTemplateCollectionViaClinicalTestQualificationCriteria_);
			collectionsQueue.Enqueue(this._hcpcsCodeCollectionViaTestHcpcsCode_);
			collectionsQueue.Enqueue(this._hcpcsCodeCollectionViaTestHcpcsCode);
			collectionsQueue.Enqueue(this._healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload);
			collectionsQueue.Enqueue(this._healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment);
			collectionsQueue.Enqueue(this._healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_);
			collectionsQueue.Enqueue(this._healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment);
			collectionsQueue.Enqueue(this._healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__);
			collectionsQueue.Enqueue(this._healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_);
			collectionsQueue.Enqueue(this._hospitalFacilityCollectionViaEventCustomers);
			collectionsQueue.Enqueue(this._hospitalFacilityCollectionViaEventCustomers_);
			collectionsQueue.Enqueue(this._hostPaymentCollectionViaHostPaymentTransaction);
			collectionsQueue.Enqueue(this._icdCodesCollectionViaCustomerIcdCode);
			collectionsQueue.Enqueue(this._insuranceCompanyCollectionViaEligibility);
			collectionsQueue.Enqueue(this._languageCollectionViaHealthPlanCallQueueCriteria);
			collectionsQueue.Enqueue(this._languageCollectionViaCallQueueCustomer_);
			collectionsQueue.Enqueue(this._languageCollectionViaCallQueueCustomer__);
			collectionsQueue.Enqueue(this._languageCollectionViaCallQueueCustomer);
			collectionsQueue.Enqueue(this._languageCollectionViaHealthPlanCallQueueCriteria_);
			collectionsQueue.Enqueue(this._lookupCollectionViaUncontactedCustomerCallQueue);
			collectionsQueue.Enqueue(this._lookupCollectionViaFillEventCallQueue);
			collectionsQueue.Enqueue(this._lookupCollectionViaTestPerformedExternally_);
			collectionsQueue.Enqueue(this._lookupCollectionViaLanguageBarrierCallQueue);
			collectionsQueue.Enqueue(this._lookupCollectionViaMedicationUpload);
			collectionsQueue.Enqueue(this._lookupCollectionViaHostFacilityRanking);
			collectionsQueue.Enqueue(this._lookupCollectionViaHostFacilityRanking_);
			collectionsQueue.Enqueue(this._lookupCollectionViaMailRoundCallQueue);
			collectionsQueue.Enqueue(this._lookupCollectionViaHostPaymentTransaction_);
			collectionsQueue.Enqueue(this._lookupCollectionViaHostPayment);
			collectionsQueue.Enqueue(this._lookupCollectionViaHostPaymentTransaction);
			collectionsQueue.Enqueue(this._lookupCollectionViaHostPayment_);
			collectionsQueue.Enqueue(this._lookupCollectionViaKynLabValues);
			collectionsQueue.Enqueue(this._lookupCollectionViaExportableReportsQueue);
			collectionsQueue.Enqueue(this._lookupCollectionViaFile);
			collectionsQueue.Enqueue(this._lookupCollectionViaTestPerformedExternally);
			collectionsQueue.Enqueue(this._lookupCollectionViaKynLabValues_);
			collectionsQueue.Enqueue(this._lookupCollectionViaPreQualificationQuestion);
			collectionsQueue.Enqueue(this._lookupCollectionViaPrintOrderItemTracking__);
			collectionsQueue.Enqueue(this._lookupCollectionViaPcpDisposition_);
			collectionsQueue.Enqueue(this._lookupCollectionViaPcpAppointment_);
			collectionsQueue.Enqueue(this._lookupCollectionViaPcpDisposition);
			collectionsQueue.Enqueue(this._lookupCollectionViaRefundRequest);
			collectionsQueue.Enqueue(this._lookupCollectionViaRapsUpload);
			collectionsQueue.Enqueue(this._lookupCollectionViaRefundRequest_);
			collectionsQueue.Enqueue(this._lookupCollectionViaPrintOrderItemTracking___);
			collectionsQueue.Enqueue(this._lookupCollectionViaProspectCustomer);
			collectionsQueue.Enqueue(this._lookupCollectionViaPcpAppointment);
			collectionsQueue.Enqueue(this._lookupCollectionViaHafTemplate);
			collectionsQueue.Enqueue(this._lookupCollectionViaHafTemplate_);
			collectionsQueue.Enqueue(this._lookupCollectionViaSuspectConditionUpload);
			collectionsQueue.Enqueue(this._lookupCollectionViaMergeCustomerUpload);
			collectionsQueue.Enqueue(this._lookupCollectionViaNoShowCallQueue);
			collectionsQueue.Enqueue(this._lookupCollectionViaStaffEventScheduleUpload);
			collectionsQueue.Enqueue(this._lookupCollectionViaHealthPlanRevenue);
			collectionsQueue.Enqueue(this._lookupCollectionViaHealthPlanRevenue_);
			collectionsQueue.Enqueue(this._lookupCollectionViaHafTemplate__);
			collectionsQueue.Enqueue(this._lookupCollectionViaHafTemplate___);
			collectionsQueue.Enqueue(this._lookupCollectionViaCustomerProfileHistory___);
			collectionsQueue.Enqueue(this._lookupCollectionViaCustomerProfileHistory__);
			collectionsQueue.Enqueue(this._lookupCollectionViaCustomerProfileHistory);
			collectionsQueue.Enqueue(this._lookupCollectionViaCustomEventNotification);
			collectionsQueue.Enqueue(this._lookupCollectionViaCustomerRegistrationNotes);
			collectionsQueue.Enqueue(this._lookupCollectionViaCustomerProfileHistory_);
			collectionsQueue.Enqueue(this._lookupCollectionViaCustomerPrimaryCarePhysician__);
			collectionsQueue.Enqueue(this._lookupCollectionViaCustomerEventTestState__);
			collectionsQueue.Enqueue(this._lookupCollectionViaCustomerEventTestState_);
			collectionsQueue.Enqueue(this._lookupCollectionViaCustomerEventTestState);
			collectionsQueue.Enqueue(this._lookupCollectionViaCustomerPrimaryCarePhysician_);
			collectionsQueue.Enqueue(this._lookupCollectionViaCustomerPrimaryCarePhysician);
			collectionsQueue.Enqueue(this._lookupCollectionViaCustomerPhoneNumberUpdateUpload);
			collectionsQueue.Enqueue(this._lookupCollectionViaEligibilityUpload);
			collectionsQueue.Enqueue(this._lookupCollectionViaEventCustomerResult__);
			collectionsQueue.Enqueue(this._lookupCollectionViaEventCustomerResult______);
			collectionsQueue.Enqueue(this._lookupCollectionViaEventCustomerResult_____);
			collectionsQueue.Enqueue(this._lookupCollectionViaEventCustomerResult_);
			collectionsQueue.Enqueue(this._lookupCollectionViaEventCustomerResult____);
			collectionsQueue.Enqueue(this._lookupCollectionViaEventCustomerResult___);
			collectionsQueue.Enqueue(this._lookupCollectionViaEventCustomerResult________);
			collectionsQueue.Enqueue(this._lookupCollectionViaEventAppointmentCancellationLog);
			collectionsQueue.Enqueue(this._lookupCollectionViaEmailTemplate_);
			collectionsQueue.Enqueue(this._lookupCollectionViaEmailTemplate);
			collectionsQueue.Enqueue(this._lookupCollectionViaEventCustomerResult_______);
			collectionsQueue.Enqueue(this._lookupCollectionViaEventCustomerResult);
			collectionsQueue.Enqueue(this._lookupCollectionViaEventAppointmentChangeLog);
			collectionsQueue.Enqueue(this._lookupCollectionViaCustomerActivityTypeUpload);
			collectionsQueue.Enqueue(this._lookupCollectionViaCalls);
			collectionsQueue.Enqueue(this._lookupCollectionViaCalls_);
			collectionsQueue.Enqueue(this._lookupCollectionViaCallRoundCallQueue);
			collectionsQueue.Enqueue(this._lookupCollectionViaCampaign);
			collectionsQueue.Enqueue(this._lookupCollectionViaCallUpload);
			collectionsQueue.Enqueue(this._lookupCollectionViaCalls__);
			collectionsQueue.Enqueue(this._lookupCollectionViaCallQueueCustomer__);
			collectionsQueue.Enqueue(this._lookupCollectionViaCallCenterTeam);
			collectionsQueue.Enqueue(this._lookupCollectionViaAccountHraChatQuestionnaire_);
			collectionsQueue.Enqueue(this._lookupCollectionViaAccountHraChatQuestionnaire);
			collectionsQueue.Enqueue(this._lookupCollectionViaCallQueueCustomer_);
			collectionsQueue.Enqueue(this._lookupCollectionViaCallQueueCustomer);
			collectionsQueue.Enqueue(this._lookupCollectionViaCallCenterTeam_);
			collectionsQueue.Enqueue(this._lookupCollectionViaCampaign_);
			collectionsQueue.Enqueue(this._lookupCollectionViaClinicalTestQualificationCriteria_);
			collectionsQueue.Enqueue(this._lookupCollectionViaClinicalTestQualificationCriteria);
			collectionsQueue.Enqueue(this._lookupCollectionViaCheckListTemplate_);
			collectionsQueue.Enqueue(this._lookupCollectionViaCorporateUpload);
			collectionsQueue.Enqueue(this._lookupCollectionViaClinicalTestQualificationCriteria___);
			collectionsQueue.Enqueue(this._lookupCollectionViaClinicalTestQualificationCriteria__);
			collectionsQueue.Enqueue(this._lookupCollectionViaCheckListTemplate);
			collectionsQueue.Enqueue(this._lookupCollectionViaCampaignActivity);
			collectionsQueue.Enqueue(this._lookupCollectionViaCampaign___);
			collectionsQueue.Enqueue(this._lookupCollectionViaCampaign__);
			collectionsQueue.Enqueue(this._lookupCollectionViaCheckListAnswer_);
			collectionsQueue.Enqueue(this._lookupCollectionViaCheckListAnswer);
			collectionsQueue.Enqueue(this._lookupCollectionViaCampaignActivity_);
			collectionsQueue.Enqueue(this._lookupCollectionViaEvents________);
			collectionsQueue.Enqueue(this._lookupCollectionViaEvents______________);
			collectionsQueue.Enqueue(this._lookupCollectionViaEvents_________);
			collectionsQueue.Enqueue(this._lookupCollectionViaEvents_____________);
			collectionsQueue.Enqueue(this._lookupCollectionViaEvents___________________);
			collectionsQueue.Enqueue(this._lookupCollectionViaEvents__________________);
			collectionsQueue.Enqueue(this._lookupCollectionViaEvents_______________);
			collectionsQueue.Enqueue(this._lookupCollectionViaEvents_______________________);
			collectionsQueue.Enqueue(this._lookupCollectionViaEvents____________);
			collectionsQueue.Enqueue(this._lookupCollectionViaEvents____);
			collectionsQueue.Enqueue(this._lookupCollectionViaEvents________________);
			collectionsQueue.Enqueue(this._lookupCollectionViaEvents_______);
			collectionsQueue.Enqueue(this._lookupCollectionViaEvents_____);
			collectionsQueue.Enqueue(this._lookupCollectionViaEvents__________);
			collectionsQueue.Enqueue(this._lookupCollectionViaEvents_________________);
			collectionsQueue.Enqueue(this._lookupCollectionViaEvents___________);
			collectionsQueue.Enqueue(this._lookupCollectionViaEvents______________________);
			collectionsQueue.Enqueue(this._lookupCollectionViaEvents);
			collectionsQueue.Enqueue(this._lookupCollectionViaEvents______);
			collectionsQueue.Enqueue(this._lookupCollectionViaEvents__);
			collectionsQueue.Enqueue(this._lookupCollectionViaEventCustomers___);
			collectionsQueue.Enqueue(this._lookupCollectionViaEventCustomers);
			collectionsQueue.Enqueue(this._lookupCollectionViaEventCustomers_);
			collectionsQueue.Enqueue(this._lookupCollectionViaEventCustomers__);
			collectionsQueue.Enqueue(this._lookupCollectionViaEvents___);
			collectionsQueue.Enqueue(this._lookupCollectionViaEvents________________________);
			collectionsQueue.Enqueue(this._lookupCollectionViaEvents____________________);
			collectionsQueue.Enqueue(this._lookupCollectionViaEvents_____________________);
			collectionsQueue.Enqueue(this._lookupCollectionViaEvents_);
			collectionsQueue.Enqueue(this._marketingPrintOrderItemCollectionViaPrintOrderItemTracking);
			collectionsQueue.Enqueue(this._marketingPrintOrderItemCollectionViaPrintOrderItemTracking_);
			collectionsQueue.Enqueue(this._medicareQuestionCollectionViaCustomerMedicareQuestionAnswer);
			collectionsQueue.Enqueue(this._ndcCollectionViaCurrentMedication);
			collectionsQueue.Enqueue(this._notesDetailsCollectionViaPriorityInQueue);
			collectionsQueue.Enqueue(this._notesDetailsCollectionViaPriorityInQueue_);
			collectionsQueue.Enqueue(this._notesDetailsCollectionViaCallQueueCustomer_);
			collectionsQueue.Enqueue(this._notesDetailsCollectionViaEvents);
			collectionsQueue.Enqueue(this._notesDetailsCollectionViaCallQueueCustomer__);
			collectionsQueue.Enqueue(this._notesDetailsCollectionViaEvents_);
			collectionsQueue.Enqueue(this._notesDetailsCollectionViaEvents___);
			collectionsQueue.Enqueue(this._notesDetailsCollectionViaCallQueueCustomer);
			collectionsQueue.Enqueue(this._notesDetailsCollectionViaEvents____);
			collectionsQueue.Enqueue(this._notesDetailsCollectionViaEvents__);
			collectionsQueue.Enqueue(this._notificationMediumCollectionViaNotificationType);
			collectionsQueue.Enqueue(this._notificationMediumCollectionViaNotification);
			collectionsQueue.Enqueue(this._notificationTypeCollectionViaEventCustomerTestNotPerformedNotification);
			collectionsQueue.Enqueue(this._notificationTypeCollectionViaEmailTemplate);
			collectionsQueue.Enqueue(this._notificationTypeCollectionViaNotification);
			collectionsQueue.Enqueue(this._orderCollectionViaRefundRequest_);
			collectionsQueue.Enqueue(this._orderCollectionViaRefundRequest);
			collectionsQueue.Enqueue(this._organizationCollectionViaAccountTestHcpcsCode_);
			collectionsQueue.Enqueue(this._organizationCollectionViaAccountTestHcpcsCode);
			collectionsQueue.Enqueue(this._organizationCollectionViaAccountCallCenterOrganization);
			collectionsQueue.Enqueue(this._organizationCollectionViaAccountCallCenterOrganization_);
			collectionsQueue.Enqueue(this._organizationCollectionViaEventAccountTestHcpcsCode_);
			collectionsQueue.Enqueue(this._organizationCollectionViaEventAccountTestHcpcsCode);
			collectionsQueue.Enqueue(this._organizationCollectionViaMarketingPrintOrder);
			collectionsQueue.Enqueue(this._organizationCollectionViaMarketingPrintOrder_);
			collectionsQueue.Enqueue(this._organizationCollectionViaAffiliateProfile);
			collectionsQueue.Enqueue(this._packageCollectionViaPreApprovedPackage);
			collectionsQueue.Enqueue(this._physicianMasterCollectionViaCustomerPrimaryCarePhysician);
			collectionsQueue.Enqueue(this._physicianMasterCollectionViaCustomerPrimaryCarePhysician_);
			collectionsQueue.Enqueue(this._physicianMasterCollectionViaCustomerPrimaryCarePhysician__);
			collectionsQueue.Enqueue(this._podDetailsCollectionViaSalesRepPodAssigments);
			collectionsQueue.Enqueue(this._podDetailsCollectionViaEventStaffAssignment);
			collectionsQueue.Enqueue(this._podDetailsCollectionViaEventNote_);
			collectionsQueue.Enqueue(this._podDetailsCollectionViaEventNote);
			collectionsQueue.Enqueue(this._podDetailsCollectionViaPodDefaultTeam);
			collectionsQueue.Enqueue(this._podDetailsCollectionViaEventStaffAssignment_);
			collectionsQueue.Enqueue(this._podDetailsCollectionViaEventStaffAssignment__);
			collectionsQueue.Enqueue(this._preQualificationQuestionCollectionViaEventCustomerQuestionAnswer_);
			collectionsQueue.Enqueue(this._preQualificationQuestionCollectionViaDisqualifiedTest);
			collectionsQueue.Enqueue(this._preQualificationQuestionCollectionViaDisqualifiedTest_);
			collectionsQueue.Enqueue(this._preQualificationQuestionCollectionViaEventCustomerQuestionAnswer);
			collectionsQueue.Enqueue(this._prospectCustomerCollectionViaCallQueueCustomer_);
			collectionsQueue.Enqueue(this._prospectCustomerCollectionViaCallQueueCustomer);
			collectionsQueue.Enqueue(this._prospectCustomerCollectionViaCallQueueCustomer__);
			collectionsQueue.Enqueue(this._prospectListDetailsCollectionViaProspects);
			collectionsQueue.Enqueue(this._prospectsCollectionViaHostFacilityRanking);
			collectionsQueue.Enqueue(this._prospectsCollectionViaHostPayment);
			collectionsQueue.Enqueue(this._prospectTypeCollectionViaProspects);
			collectionsQueue.Enqueue(this._refundRequestCollectionViaEventAppointmentCancellationLog);
			collectionsQueue.Enqueue(this._relationshipCollectionViaGuardianDetails_);
			collectionsQueue.Enqueue(this._relationshipCollectionViaGuardianDetails);
			collectionsQueue.Enqueue(this._rescheduleCancelDispositionCollectionViaEventAppointmentChangeLog);
			collectionsQueue.Enqueue(this._rescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog);
			collectionsQueue.Enqueue(this._roleCollectionViaUser);
			collectionsQueue.Enqueue(this._roleCollectionViaHostFacilityRanking);
			collectionsQueue.Enqueue(this._roleCollectionViaUser_);
			collectionsQueue.Enqueue(this._scheduleMethodCollectionViaEvents___);
			collectionsQueue.Enqueue(this._scheduleMethodCollectionViaEvents____);
			collectionsQueue.Enqueue(this._scheduleMethodCollectionViaEvents);
			collectionsQueue.Enqueue(this._scheduleMethodCollectionViaEvents_);
			collectionsQueue.Enqueue(this._scheduleMethodCollectionViaEvents__);
			collectionsQueue.Enqueue(this._scriptsCollectionViaCallQueue);
			collectionsQueue.Enqueue(this._scriptsCollectionViaCallQueue_);
			collectionsQueue.Enqueue(this._shippingOptionCollectionViaShippingDetail_);
			collectionsQueue.Enqueue(this._shippingOptionCollectionViaShippingDetail);
			collectionsQueue.Enqueue(this._staffEventRoleCollectionViaEventStaffAssignment__);
			collectionsQueue.Enqueue(this._staffEventRoleCollectionViaPodDefaultTeam);
			collectionsQueue.Enqueue(this._staffEventRoleCollectionViaEventStaffAssignment);
			collectionsQueue.Enqueue(this._staffEventRoleCollectionViaEventStaffAssignment_);
			collectionsQueue.Enqueue(this._standardFindingTestReadingCollectionViaCustomerEventReading);
			collectionsQueue.Enqueue(this._stateCollectionViaAddress);
			collectionsQueue.Enqueue(this._surveyQuestionCollectionViaSurveyAnswer_);
			collectionsQueue.Enqueue(this._surveyQuestionCollectionViaSurveyAnswer);
			collectionsQueue.Enqueue(this._tagCollectionViaPreAssessmentCustomerCallQueueCallAttempt);
			collectionsQueue.Enqueue(this._tagCollectionViaCustomerCallQueueCallAttempt);
			collectionsQueue.Enqueue(this._taskPriorityTypesCollectionViaTaskDetails__);
			collectionsQueue.Enqueue(this._taskPriorityTypesCollectionViaTaskDetails_);
			collectionsQueue.Enqueue(this._taskPriorityTypesCollectionViaTaskDetails);
			collectionsQueue.Enqueue(this._taskStatusTypesCollectionViaTaskDetails_);
			collectionsQueue.Enqueue(this._taskStatusTypesCollectionViaTaskDetails__);
			collectionsQueue.Enqueue(this._taskStatusTypesCollectionViaTaskDetails);
			collectionsQueue.Enqueue(this._technicianProfileCollectionViaPinChangelog);
			collectionsQueue.Enqueue(this._territoryCollectionViaTerritory);
			collectionsQueue.Enqueue(this._territoryCollectionViaOrganizationRoleUserTerritory);
			collectionsQueue.Enqueue(this._testCollectionViaEventCustomerTestNotPerformedNotification);
			collectionsQueue.Enqueue(this._testCollectionViaEventPhysicianTest);
			collectionsQueue.Enqueue(this._testCollectionViaDisqualifiedTest_);
			collectionsQueue.Enqueue(this._testCollectionViaEventCustomerRetest);
			collectionsQueue.Enqueue(this._testCollectionViaEventPhysicianTest_);
			collectionsQueue.Enqueue(this._testCollectionViaKynLabValues_);
			collectionsQueue.Enqueue(this._testCollectionViaEventPhysicianTest__);
			collectionsQueue.Enqueue(this._testCollectionViaTestHcpcsCode_);
			collectionsQueue.Enqueue(this._testCollectionViaTestHcpcsCode);
			collectionsQueue.Enqueue(this._testCollectionViaKynLabValues);
			collectionsQueue.Enqueue(this._testCollectionViaPreApprovedTest);
			collectionsQueue.Enqueue(this._testCollectionViaClinicalTestQualificationCriteria);
			collectionsQueue.Enqueue(this._testCollectionViaRequiredTest);
			collectionsQueue.Enqueue(this._testCollectionViaClinicalTestQualificationCriteria_);
			collectionsQueue.Enqueue(this._testCollectionViaDisqualifiedTest);
			collectionsQueue.Enqueue(this._testCollectionViaPreQualificationTestTemplate);
			collectionsQueue.Enqueue(this._testCollectionViaPreQualificationTestTemplate_);
			collectionsQueue.Enqueue(this._testCollectionViaPreQualificationQuestion);
			collectionsQueue.Enqueue(this._testHcpcsCodeCollectionViaEventAccountTestHcpcsCode_);
			collectionsQueue.Enqueue(this._testHcpcsCodeCollectionViaEventAccountTestHcpcsCode);
			collectionsQueue.Enqueue(this._testHcpcsCodeCollectionViaAccountTestHcpcsCode_);
			collectionsQueue.Enqueue(this._testHcpcsCodeCollectionViaAccountTestHcpcsCode);
			collectionsQueue.Enqueue(this._testNotPerformedReasonCollectionViaTestNotPerformed_);
			collectionsQueue.Enqueue(this._testNotPerformedReasonCollectionViaTestNotPerformed);
			collectionsQueue.Enqueue(this._testReadingCollectionViaCustomerEventReading);
			collectionsQueue.Enqueue(this._testUnableScreenReasonCollectionViaCustomerEventUnableScreenReason);
			collectionsQueue.Enqueue(this._userLoginCollectionViaPasswordChangelog);
			collectionsQueue.Enqueue(this._zipCollectionViaAddress);
		}
		
		/// <summary>Gets the member collections queue from the queue (base first)</summary>
		/// <param name="collectionsQueue">The collections queue.</param>
		protected override void GetFromMemberEntityCollectionsQueue(Queue<IEntityCollection2> collectionsQueue)
		{
			base.GetFromMemberEntityCollectionsQueue(collectionsQueue);
			this._accountCallCenterOrganization_ = (EntityCollection<AccountCallCenterOrganizationEntity>) collectionsQueue.Dequeue();
			this._accountCallCenterOrganization = (EntityCollection<AccountCallCenterOrganizationEntity>) collectionsQueue.Dequeue();
			this._accountHraChatQuestionnaire_ = (EntityCollection<AccountHraChatQuestionnaireEntity>) collectionsQueue.Dequeue();
			this._accountHraChatQuestionnaire = (EntityCollection<AccountHraChatQuestionnaireEntity>) collectionsQueue.Dequeue();
			this._accountTestHcpcsCode_ = (EntityCollection<AccountTestHcpcsCodeEntity>) collectionsQueue.Dequeue();
			this._accountTestHcpcsCode = (EntityCollection<AccountTestHcpcsCodeEntity>) collectionsQueue.Dequeue();
			this._activityType = (EntityCollection<ActivityTypeEntity>) collectionsQueue.Dequeue();
			this._additionalFields_ = (EntityCollection<AdditionalFieldsEntity>) collectionsQueue.Dequeue();
			this._additionalFields = (EntityCollection<AdditionalFieldsEntity>) collectionsQueue.Dequeue();
			this._address = (EntityCollection<AddressEntity>) collectionsQueue.Dequeue();
			this._advocateManagerTeam_ = (EntityCollection<AdvocateManagerTeamEntity>) collectionsQueue.Dequeue();
			this._advocateManagerTeam = (EntityCollection<AdvocateManagerTeamEntity>) collectionsQueue.Dequeue();
			this._afcampaign_ = (EntityCollection<AfcampaignEntity>) collectionsQueue.Dequeue();
			this._afcampaign = (EntityCollection<AfcampaignEntity>) collectionsQueue.Dequeue();
			this._affiliateProfile = (EntityCollection<AffiliateProfileEntity>) collectionsQueue.Dequeue();
			this._applicationAuthentication_ = (EntityCollection<ApplicationAuthenticationEntity>) collectionsQueue.Dequeue();
			this._applicationAuthentication = (EntityCollection<ApplicationAuthenticationEntity>) collectionsQueue.Dequeue();
			this._barrier_ = (EntityCollection<BarrierEntity>) collectionsQueue.Dequeue();
			this._barrier = (EntityCollection<BarrierEntity>) collectionsQueue.Dequeue();
			this._callCenterAgentTeam = (EntityCollection<CallCenterAgentTeamEntity>) collectionsQueue.Dequeue();
			this._callCenterAgentTeamLog__ = (EntityCollection<CallCenterAgentTeamLogEntity>) collectionsQueue.Dequeue();
			this._callCenterAgentTeamLog_ = (EntityCollection<CallCenterAgentTeamLogEntity>) collectionsQueue.Dequeue();
			this._callCenterAgentTeamLog = (EntityCollection<CallCenterAgentTeamLogEntity>) collectionsQueue.Dequeue();
			this._callCenterTeam_ = (EntityCollection<CallCenterTeamEntity>) collectionsQueue.Dequeue();
			this._callCenterTeam = (EntityCollection<CallCenterTeamEntity>) collectionsQueue.Dequeue();
			this._callQueue_ = (EntityCollection<CallQueueEntity>) collectionsQueue.Dequeue();
			this._callQueue = (EntityCollection<CallQueueEntity>) collectionsQueue.Dequeue();
			this._callQueueAssignment = (EntityCollection<CallQueueAssignmentEntity>) collectionsQueue.Dequeue();
			this._callQueueCustomer__ = (EntityCollection<CallQueueCustomerEntity>) collectionsQueue.Dequeue();
			this._callQueueCustomer_ = (EntityCollection<CallQueueCustomerEntity>) collectionsQueue.Dequeue();
			this._callQueueCustomer = (EntityCollection<CallQueueCustomerEntity>) collectionsQueue.Dequeue();
			this._callQueueCustomerLock = (EntityCollection<CallQueueCustomerLockEntity>) collectionsQueue.Dequeue();
			this._callQueueCustomTag = (EntityCollection<CallQueueCustomTagEntity>) collectionsQueue.Dequeue();
			this._callRoundCallQueue = (EntityCollection<CallRoundCallQueueEntity>) collectionsQueue.Dequeue();
			this._calls = (EntityCollection<CallsEntity>) collectionsQueue.Dequeue();
			this._callUpload = (EntityCollection<CallUploadEntity>) collectionsQueue.Dequeue();
			this._campaign_ = (EntityCollection<CampaignEntity>) collectionsQueue.Dequeue();
			this._campaign = (EntityCollection<CampaignEntity>) collectionsQueue.Dequeue();
			this._campaignActivity_ = (EntityCollection<CampaignActivityEntity>) collectionsQueue.Dequeue();
			this._campaignActivity = (EntityCollection<CampaignActivityEntity>) collectionsQueue.Dequeue();
			this._campaignActivityAssignment = (EntityCollection<CampaignActivityAssignmentEntity>) collectionsQueue.Dequeue();
			this._campaignAssignment = (EntityCollection<CampaignAssignmentEntity>) collectionsQueue.Dequeue();
			this._cdcontentGeneratorTracking = (EntityCollection<CdcontentGeneratorTrackingEntity>) collectionsQueue.Dequeue();
			this._chaperoneAnswer_ = (EntityCollection<ChaperoneAnswerEntity>) collectionsQueue.Dequeue();
			this._chaperoneAnswer = (EntityCollection<ChaperoneAnswerEntity>) collectionsQueue.Dequeue();
			this._chaperoneSignature = (EntityCollection<ChaperoneSignatureEntity>) collectionsQueue.Dequeue();
			this._check_ = (EntityCollection<CheckEntity>) collectionsQueue.Dequeue();
			this._check = (EntityCollection<CheckEntity>) collectionsQueue.Dequeue();
			this._checkListAnswer_ = (EntityCollection<CheckListAnswerEntity>) collectionsQueue.Dequeue();
			this._checkListAnswer = (EntityCollection<CheckListAnswerEntity>) collectionsQueue.Dequeue();
			this._checkListTemplate_ = (EntityCollection<CheckListTemplateEntity>) collectionsQueue.Dequeue();
			this._checkListTemplate = (EntityCollection<CheckListTemplateEntity>) collectionsQueue.Dequeue();
			this._clinicalTestQualificationCriteria_ = (EntityCollection<ClinicalTestQualificationCriteriaEntity>) collectionsQueue.Dequeue();
			this._clinicalTestQualificationCriteria = (EntityCollection<ClinicalTestQualificationCriteriaEntity>) collectionsQueue.Dequeue();
			this._contactCall_ = (EntityCollection<ContactCallEntity>) collectionsQueue.Dequeue();
			this._contactCall = (EntityCollection<ContactCallEntity>) collectionsQueue.Dequeue();
			this._contactMeeting_ = (EntityCollection<ContactMeetingEntity>) collectionsQueue.Dequeue();
			this._contactMeeting = (EntityCollection<ContactMeetingEntity>) collectionsQueue.Dequeue();
			this._content_ = (EntityCollection<ContentEntity>) collectionsQueue.Dequeue();
			this._content = (EntityCollection<ContentEntity>) collectionsQueue.Dequeue();
			this._corporateTag_ = (EntityCollection<CorporateTagEntity>) collectionsQueue.Dequeue();
			this._corporateTag = (EntityCollection<CorporateTagEntity>) collectionsQueue.Dequeue();
			this._corporateUpload = (EntityCollection<CorporateUploadEntity>) collectionsQueue.Dequeue();
			this._coupons_ = (EntityCollection<CouponsEntity>) collectionsQueue.Dequeue();
			this._coupons = (EntityCollection<CouponsEntity>) collectionsQueue.Dequeue();
			this._currentMedication = (EntityCollection<CurrentMedicationEntity>) collectionsQueue.Dequeue();
			this._customerActivityTypeUpload = (EntityCollection<CustomerActivityTypeUploadEntity>) collectionsQueue.Dequeue();
			this._customerCallAttempts = (EntityCollection<CustomerCallAttemptsEntity>) collectionsQueue.Dequeue();
			this._customerCallQueueCallAttempt = (EntityCollection<CustomerCallQueueCallAttemptEntity>) collectionsQueue.Dequeue();
			this._customerClinicalQuestionAnswer_ = (EntityCollection<CustomerClinicalQuestionAnswerEntity>) collectionsQueue.Dequeue();
			this._customerClinicalQuestionAnswer = (EntityCollection<CustomerClinicalQuestionAnswerEntity>) collectionsQueue.Dequeue();
			this._customerEligibility_ = (EntityCollection<CustomerEligibilityEntity>) collectionsQueue.Dequeue();
			this._customerEligibility = (EntityCollection<CustomerEligibilityEntity>) collectionsQueue.Dequeue();
			this._customerEventCriticalTestData_ = (EntityCollection<CustomerEventCriticalTestDataEntity>) collectionsQueue.Dequeue();
			this._customerEventCriticalTestData = (EntityCollection<CustomerEventCriticalTestDataEntity>) collectionsQueue.Dequeue();
			this._customerEventPriorityInQueueData_ = (EntityCollection<CustomerEventPriorityInQueueDataEntity>) collectionsQueue.Dequeue();
			this._customerEventPriorityInQueueData = (EntityCollection<CustomerEventPriorityInQueueDataEntity>) collectionsQueue.Dequeue();
			this._customerEventReading = (EntityCollection<CustomerEventReadingEntity>) collectionsQueue.Dequeue();
			this._customerEventTestPhysicianEvaluation = (EntityCollection<CustomerEventTestPhysicianEvaluationEntity>) collectionsQueue.Dequeue();
			this._customerEventTestState__ = (EntityCollection<CustomerEventTestStateEntity>) collectionsQueue.Dequeue();
			this._customerEventTestState_ = (EntityCollection<CustomerEventTestStateEntity>) collectionsQueue.Dequeue();
			this._customerEventTestState = (EntityCollection<CustomerEventTestStateEntity>) collectionsQueue.Dequeue();
			this._customerEventUnableScreenReason = (EntityCollection<CustomerEventUnableScreenReasonEntity>) collectionsQueue.Dequeue();
			this._customerHealthInfo = (EntityCollection<CustomerHealthInfoEntity>) collectionsQueue.Dequeue();
			this._customerHealthInfoArchive = (EntityCollection<CustomerHealthInfoArchiveEntity>) collectionsQueue.Dequeue();
			this._customerIcdCode = (EntityCollection<CustomerIcdCodeEntity>) collectionsQueue.Dequeue();
			this._customerLockForCall = (EntityCollection<CustomerLockForCallEntity>) collectionsQueue.Dequeue();
			this._customerMedicareQuestionAnswer = (EntityCollection<CustomerMedicareQuestionAnswerEntity>) collectionsQueue.Dequeue();
			this._customerPhoneNumberUpdateUpload = (EntityCollection<CustomerPhoneNumberUpdateUploadEntity>) collectionsQueue.Dequeue();
			this._customerPrimaryCarePhysician_ = (EntityCollection<CustomerPrimaryCarePhysicianEntity>) collectionsQueue.Dequeue();
			this._customerPrimaryCarePhysician__ = (EntityCollection<CustomerPrimaryCarePhysicianEntity>) collectionsQueue.Dequeue();
			this._customerPrimaryCarePhysician = (EntityCollection<CustomerPrimaryCarePhysicianEntity>) collectionsQueue.Dequeue();
			this._customerProfileHistory = (EntityCollection<CustomerProfileHistoryEntity>) collectionsQueue.Dequeue();
			this._customerRegistrationNotes = (EntityCollection<CustomerRegistrationNotesEntity>) collectionsQueue.Dequeue();
			this._customerResultScreeningCommunication__ = (EntityCollection<CustomerResultScreeningCommunicationEntity>) collectionsQueue.Dequeue();
			this._customerResultScreeningCommunication_ = (EntityCollection<CustomerResultScreeningCommunicationEntity>) collectionsQueue.Dequeue();
			this._customerResultScreeningCommunication = (EntityCollection<CustomerResultScreeningCommunicationEntity>) collectionsQueue.Dequeue();
			this._customerTag_ = (EntityCollection<CustomerTagEntity>) collectionsQueue.Dequeue();
			this._customerTag = (EntityCollection<CustomerTagEntity>) collectionsQueue.Dequeue();
			this._customerTargeted_ = (EntityCollection<CustomerTargetedEntity>) collectionsQueue.Dequeue();
			this._customerTargeted = (EntityCollection<CustomerTargetedEntity>) collectionsQueue.Dequeue();
			this._customerWarmTransfer_ = (EntityCollection<CustomerWarmTransferEntity>) collectionsQueue.Dequeue();
			this._customerWarmTransfer = (EntityCollection<CustomerWarmTransferEntity>) collectionsQueue.Dequeue();
			this._customEventNotification = (EntityCollection<CustomEventNotificationEntity>) collectionsQueue.Dequeue();
			this._directMail = (EntityCollection<DirectMailEntity>) collectionsQueue.Dequeue();
			this._directMailType_ = (EntityCollection<DirectMailTypeEntity>) collectionsQueue.Dequeue();
			this._directMailType = (EntityCollection<DirectMailTypeEntity>) collectionsQueue.Dequeue();
			this._disqualifiedTest_ = (EntityCollection<DisqualifiedTestEntity>) collectionsQueue.Dequeue();
			this._disqualifiedTest = (EntityCollection<DisqualifiedTestEntity>) collectionsQueue.Dequeue();
			this._eligibility = (EntityCollection<EligibilityEntity>) collectionsQueue.Dequeue();
			this._eligibilityUpload = (EntityCollection<EligibilityUploadEntity>) collectionsQueue.Dequeue();
			this._emailTemplate = (EntityCollection<EmailTemplateEntity>) collectionsQueue.Dequeue();
			this._eventAccountTestHcpcsCode_ = (EntityCollection<EventAccountTestHcpcsCodeEntity>) collectionsQueue.Dequeue();
			this._eventAccountTestHcpcsCode = (EntityCollection<EventAccountTestHcpcsCodeEntity>) collectionsQueue.Dequeue();
			this._eventActivityTemplate = (EntityCollection<EventActivityTemplateEntity>) collectionsQueue.Dequeue();
			this._eventActivityTemplateCall = (EntityCollection<EventActivityTemplateCallEntity>) collectionsQueue.Dequeue();
			this._eventActivityTemplateEmail = (EntityCollection<EventActivityTemplateEmailEntity>) collectionsQueue.Dequeue();
			this._eventActivityTemplateMeeting = (EntityCollection<EventActivityTemplateMeetingEntity>) collectionsQueue.Dequeue();
			this._eventActivityTemplateTask = (EntityCollection<EventActivityTemplateTaskEntity>) collectionsQueue.Dequeue();
			this._eventAppointment = (EntityCollection<EventAppointmentEntity>) collectionsQueue.Dequeue();
			this._eventAppointmentCancellationLog = (EntityCollection<EventAppointmentCancellationLogEntity>) collectionsQueue.Dequeue();
			this._eventAppointmentChangeLog = (EntityCollection<EventAppointmentChangeLogEntity>) collectionsQueue.Dequeue();
			this._eventCustomerBasicBioMetric = (EntityCollection<EventCustomerBasicBioMetricEntity>) collectionsQueue.Dequeue();
			this._eventCustomerGiftCard = (EntityCollection<EventCustomerGiftCardEntity>) collectionsQueue.Dequeue();
			this._eventCustomerPrimaryCarePhysician = (EntityCollection<EventCustomerPrimaryCarePhysicianEntity>) collectionsQueue.Dequeue();
			this._eventCustomerQuestionAnswer_ = (EntityCollection<EventCustomerQuestionAnswerEntity>) collectionsQueue.Dequeue();
			this._eventCustomerQuestionAnswer = (EntityCollection<EventCustomerQuestionAnswerEntity>) collectionsQueue.Dequeue();
			this._eventCustomerResult___ = (EntityCollection<EventCustomerResultEntity>) collectionsQueue.Dequeue();
			this._eventCustomerResult__ = (EntityCollection<EventCustomerResultEntity>) collectionsQueue.Dequeue();
			this._eventCustomerResult_ = (EntityCollection<EventCustomerResultEntity>) collectionsQueue.Dequeue();
			this._eventCustomerResult____ = (EntityCollection<EventCustomerResultEntity>) collectionsQueue.Dequeue();
			this._eventCustomerResult______ = (EntityCollection<EventCustomerResultEntity>) collectionsQueue.Dequeue();
			this._eventCustomerResult_______ = (EntityCollection<EventCustomerResultEntity>) collectionsQueue.Dequeue();
			this._eventCustomerResult = (EntityCollection<EventCustomerResultEntity>) collectionsQueue.Dequeue();
			this._eventCustomerResult_____ = (EntityCollection<EventCustomerResultEntity>) collectionsQueue.Dequeue();
			this._eventCustomerResult________ = (EntityCollection<EventCustomerResultEntity>) collectionsQueue.Dequeue();
			this._eventCustomerResultBloodLab = (EntityCollection<EventCustomerResultBloodLabEntity>) collectionsQueue.Dequeue();
			this._eventCustomerResultHistory = (EntityCollection<EventCustomerResultHistoryEntity>) collectionsQueue.Dequeue();
			this._eventCustomerResultHistory_ = (EntityCollection<EventCustomerResultHistoryEntity>) collectionsQueue.Dequeue();
			this._eventCustomerResultHistory__ = (EntityCollection<EventCustomerResultHistoryEntity>) collectionsQueue.Dequeue();
			this._eventCustomerRetest = (EntityCollection<EventCustomerRetestEntity>) collectionsQueue.Dequeue();
			this._eventCustomers_ = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomers = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomerTestNotPerformedNotification = (EntityCollection<EventCustomerTestNotPerformedNotificationEntity>) collectionsQueue.Dequeue();
			this._eventNote_ = (EntityCollection<EventNoteEntity>) collectionsQueue.Dequeue();
			this._eventNote = (EntityCollection<EventNoteEntity>) collectionsQueue.Dequeue();
			this._eventPhysicianTest__ = (EntityCollection<EventPhysicianTestEntity>) collectionsQueue.Dequeue();
			this._eventPhysicianTest_ = (EntityCollection<EventPhysicianTestEntity>) collectionsQueue.Dequeue();
			this._eventPhysicianTest = (EntityCollection<EventPhysicianTestEntity>) collectionsQueue.Dequeue();
			this._events___ = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._events____ = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._events__ = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._events = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._events_ = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventStaffAssignment__ = (EntityCollection<EventStaffAssignmentEntity>) collectionsQueue.Dequeue();
			this._eventStaffAssignment_ = (EntityCollection<EventStaffAssignmentEntity>) collectionsQueue.Dequeue();
			this._eventStaffAssignment = (EntityCollection<EventStaffAssignmentEntity>) collectionsQueue.Dequeue();
			this._exitInterviewAnswer_ = (EntityCollection<ExitInterviewAnswerEntity>) collectionsQueue.Dequeue();
			this._exitInterviewAnswer = (EntityCollection<ExitInterviewAnswerEntity>) collectionsQueue.Dequeue();
			this._exitInterviewSignature = (EntityCollection<ExitInterviewSignatureEntity>) collectionsQueue.Dequeue();
			this._exportableReportsQueue = (EntityCollection<ExportableReportsQueueEntity>) collectionsQueue.Dequeue();
			this._file = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fillEventCallQueue = (EntityCollection<FillEventCallQueueEntity>) collectionsQueue.Dequeue();
			this._fluConsentAnswer_ = (EntityCollection<FluConsentAnswerEntity>) collectionsQueue.Dequeue();
			this._fluConsentAnswer = (EntityCollection<FluConsentAnswerEntity>) collectionsQueue.Dequeue();
			this._fluConsentSignature = (EntityCollection<FluConsentSignatureEntity>) collectionsQueue.Dequeue();
			this._fluConsentTemplate_ = (EntityCollection<FluConsentTemplateEntity>) collectionsQueue.Dequeue();
			this._fluConsentTemplate = (EntityCollection<FluConsentTemplateEntity>) collectionsQueue.Dequeue();
			this._gcNotGivenReason_ = (EntityCollection<GcNotGivenReasonEntity>) collectionsQueue.Dequeue();
			this._gcNotGivenReason = (EntityCollection<GcNotGivenReasonEntity>) collectionsQueue.Dequeue();
			this._guardianDetails_ = (EntityCollection<GuardianDetailsEntity>) collectionsQueue.Dequeue();
			this._guardianDetails = (EntityCollection<GuardianDetailsEntity>) collectionsQueue.Dequeue();
			this._hafTemplate_ = (EntityCollection<HafTemplateEntity>) collectionsQueue.Dequeue();
			this._hafTemplate = (EntityCollection<HafTemplateEntity>) collectionsQueue.Dequeue();
			this._hcpcsCode_ = (EntityCollection<HcpcsCodeEntity>) collectionsQueue.Dequeue();
			this._hcpcsCode = (EntityCollection<HcpcsCodeEntity>) collectionsQueue.Dequeue();
			this._healthPlanCallQueueCriteria__ = (EntityCollection<HealthPlanCallQueueCriteriaEntity>) collectionsQueue.Dequeue();
			this._healthPlanCallQueueCriteria_ = (EntityCollection<HealthPlanCallQueueCriteriaEntity>) collectionsQueue.Dequeue();
			this._healthPlanCriteriaAssignment__ = (EntityCollection<HealthPlanCriteriaAssignmentEntity>) collectionsQueue.Dequeue();
			this._healthPlanCriteriaAssignment_ = (EntityCollection<HealthPlanCriteriaAssignmentEntity>) collectionsQueue.Dequeue();
			this._healthPlanCriteriaAssignment = (EntityCollection<HealthPlanCriteriaAssignmentEntity>) collectionsQueue.Dequeue();
			this._healthPlanCriteriaAssignmentUpload = (EntityCollection<HealthPlanCriteriaAssignmentUploadEntity>) collectionsQueue.Dequeue();
			this._healthPlanCriteriaTeamAssignment_ = (EntityCollection<HealthPlanCriteriaTeamAssignmentEntity>) collectionsQueue.Dequeue();
			this._healthPlanCriteriaTeamAssignment = (EntityCollection<HealthPlanCriteriaTeamAssignmentEntity>) collectionsQueue.Dequeue();
			this._healthPlanRevenue_ = (EntityCollection<HealthPlanRevenueEntity>) collectionsQueue.Dequeue();
			this._healthPlanRevenue = (EntityCollection<HealthPlanRevenueEntity>) collectionsQueue.Dequeue();
			this._hospitalPartnerCustomer__ = (EntityCollection<HospitalPartnerCustomerEntity>) collectionsQueue.Dequeue();
			this._hospitalPartnerCustomer_ = (EntityCollection<HospitalPartnerCustomerEntity>) collectionsQueue.Dequeue();
			this._hospitalPartnerCustomer = (EntityCollection<HospitalPartnerCustomerEntity>) collectionsQueue.Dequeue();
			this._hostFacilityRanking = (EntityCollection<HostFacilityRankingEntity>) collectionsQueue.Dequeue();
			this._hostPayment = (EntityCollection<HostPaymentEntity>) collectionsQueue.Dequeue();
			this._hostPaymentTransaction = (EntityCollection<HostPaymentTransactionEntity>) collectionsQueue.Dequeue();
			this._icdCodes_ = (EntityCollection<IcdCodesEntity>) collectionsQueue.Dequeue();
			this._icdCodes = (EntityCollection<IcdCodesEntity>) collectionsQueue.Dequeue();
			this._incidentalFindings = (EntityCollection<IncidentalFindingsEntity>) collectionsQueue.Dequeue();
			this._kynLabValues_ = (EntityCollection<KynLabValuesEntity>) collectionsQueue.Dequeue();
			this._kynLabValues = (EntityCollection<KynLabValuesEntity>) collectionsQueue.Dequeue();
			this._lab = (EntityCollection<LabEntity>) collectionsQueue.Dequeue();
			this._language = (EntityCollection<LanguageEntity>) collectionsQueue.Dequeue();
			this._languageBarrierCallQueue = (EntityCollection<LanguageBarrierCallQueueEntity>) collectionsQueue.Dequeue();
			this._mailRoundCallQueue = (EntityCollection<MailRoundCallQueueEntity>) collectionsQueue.Dequeue();
			this._marketingPrintOrder = (EntityCollection<MarketingPrintOrderEntity>) collectionsQueue.Dequeue();
			this._medication_ = (EntityCollection<MedicationEntity>) collectionsQueue.Dequeue();
			this._medication = (EntityCollection<MedicationEntity>) collectionsQueue.Dequeue();
			this._medicationUpload = (EntityCollection<MedicationUploadEntity>) collectionsQueue.Dequeue();
			this._mergeCustomerUpload = (EntityCollection<MergeCustomerUploadEntity>) collectionsQueue.Dequeue();
			this._noShowCallQueue = (EntityCollection<NoShowCallQueueEntity>) collectionsQueue.Dequeue();
			this._notesDetails_ = (EntityCollection<NotesDetailsEntity>) collectionsQueue.Dequeue();
			this._notesDetails = (EntityCollection<NotesDetailsEntity>) collectionsQueue.Dequeue();
			this._notification = (EntityCollection<NotificationEntity>) collectionsQueue.Dequeue();
			this._notificationType = (EntityCollection<NotificationTypeEntity>) collectionsQueue.Dequeue();
			this._organizationRoleUserTerritory = (EntityCollection<OrganizationRoleUserTerritoryEntity>) collectionsQueue.Dequeue();
			this._orgRoleUserActivity = (EntityCollection<OrgRoleUserActivityEntity>) collectionsQueue.Dequeue();
			this._participationConsentSignature = (EntityCollection<ParticipationConsentSignatureEntity>) collectionsQueue.Dequeue();
			this._passwordChangelog = (EntityCollection<PasswordChangelogEntity>) collectionsQueue.Dequeue();
			this._payPeriod_ = (EntityCollection<PayPeriodEntity>) collectionsQueue.Dequeue();
			this._payPeriod = (EntityCollection<PayPeriodEntity>) collectionsQueue.Dequeue();
			this._pcpAppointment_ = (EntityCollection<PcpAppointmentEntity>) collectionsQueue.Dequeue();
			this._pcpAppointment = (EntityCollection<PcpAppointmentEntity>) collectionsQueue.Dequeue();
			this._pcpDisposition_ = (EntityCollection<PcpDispositionEntity>) collectionsQueue.Dequeue();
			this._pcpDisposition = (EntityCollection<PcpDispositionEntity>) collectionsQueue.Dequeue();
			this._physicianRecordRequestSignature = (EntityCollection<PhysicianRecordRequestSignatureEntity>) collectionsQueue.Dequeue();
			this._pinChangelog = (EntityCollection<PinChangelogEntity>) collectionsQueue.Dequeue();
			this._podDefaultTeam = (EntityCollection<PodDefaultTeamEntity>) collectionsQueue.Dequeue();
			this._preApprovedPackage = (EntityCollection<PreApprovedPackageEntity>) collectionsQueue.Dequeue();
			this._preApprovedTest = (EntityCollection<PreApprovedTestEntity>) collectionsQueue.Dequeue();
			this._preAssessmentCallQueueCustomerLock = (EntityCollection<PreAssessmentCallQueueCustomerLockEntity>) collectionsQueue.Dequeue();
			this._preAssessmentCustomerCallQueueCallAttempt = (EntityCollection<PreAssessmentCustomerCallQueueCallAttemptEntity>) collectionsQueue.Dequeue();
			this._preQualificationQuestion = (EntityCollection<PreQualificationQuestionEntity>) collectionsQueue.Dequeue();
			this._preQualificationTestTemplate_ = (EntityCollection<PreQualificationTestTemplateEntity>) collectionsQueue.Dequeue();
			this._preQualificationTestTemplate = (EntityCollection<PreQualificationTestTemplateEntity>) collectionsQueue.Dequeue();
			this._printOrderItemTracking_ = (EntityCollection<PrintOrderItemTrackingEntity>) collectionsQueue.Dequeue();
			this._printOrderItemTracking = (EntityCollection<PrintOrderItemTrackingEntity>) collectionsQueue.Dequeue();
			this._priorityInQueue_ = (EntityCollection<PriorityInQueueEntity>) collectionsQueue.Dequeue();
			this._priorityInQueue = (EntityCollection<PriorityInQueueEntity>) collectionsQueue.Dequeue();
			this._prospectCustomer = (EntityCollection<ProspectCustomerEntity>) collectionsQueue.Dequeue();
			this._prospects = (EntityCollection<ProspectsEntity>) collectionsQueue.Dequeue();
			this._rapsUpload = (EntityCollection<RapsUploadEntity>) collectionsQueue.Dequeue();
			this._referral = (EntityCollection<ReferralEntity>) collectionsQueue.Dequeue();
			this._refundRequest_ = (EntityCollection<RefundRequestEntity>) collectionsQueue.Dequeue();
			this._refundRequest = (EntityCollection<RefundRequestEntity>) collectionsQueue.Dequeue();
			this._requiredTest = (EntityCollection<RequiredTestEntity>) collectionsQueue.Dequeue();
			this._salesRepPodAssigments = (EntityCollection<SalesRepPodAssigmentsEntity>) collectionsQueue.Dequeue();
			this._scheduleTemplate_ = (EntityCollection<ScheduleTemplateEntity>) collectionsQueue.Dequeue();
			this._scheduleTemplate = (EntityCollection<ScheduleTemplateEntity>) collectionsQueue.Dequeue();
			this._seminars = (EntityCollection<SeminarsEntity>) collectionsQueue.Dequeue();
			this._shippingDetail_ = (EntityCollection<ShippingDetailEntity>) collectionsQueue.Dequeue();
			this._shippingDetail = (EntityCollection<ShippingDetailEntity>) collectionsQueue.Dequeue();
			this._sourceCodeChangeLog = (EntityCollection<SourceCodeChangeLogEntity>) collectionsQueue.Dequeue();
			this._staffEventScheduleUpload = (EntityCollection<StaffEventScheduleUploadEntity>) collectionsQueue.Dequeue();
			this._surveyAnswer_ = (EntityCollection<SurveyAnswerEntity>) collectionsQueue.Dequeue();
			this._surveyAnswer = (EntityCollection<SurveyAnswerEntity>) collectionsQueue.Dequeue();
			this._surveyTemplate_ = (EntityCollection<SurveyTemplateEntity>) collectionsQueue.Dequeue();
			this._surveyTemplate = (EntityCollection<SurveyTemplateEntity>) collectionsQueue.Dequeue();
			this._suspectConditionUpload = (EntityCollection<SuspectConditionUploadEntity>) collectionsQueue.Dequeue();
			this._systemGenertedCallQueueCriteria__ = (EntityCollection<SystemGeneratedCallQueueCriteriaEntity>) collectionsQueue.Dequeue();
			this._systemGenertedCallQueueCriteria_ = (EntityCollection<SystemGeneratedCallQueueCriteriaEntity>) collectionsQueue.Dequeue();
			this._systemGenertedCallQueueCriteria = (EntityCollection<SystemGeneratedCallQueueCriteriaEntity>) collectionsQueue.Dequeue();
			this._taskDetails__ = (EntityCollection<TaskDetailsEntity>) collectionsQueue.Dequeue();
			this._taskDetails_ = (EntityCollection<TaskDetailsEntity>) collectionsQueue.Dequeue();
			this._taskDetails = (EntityCollection<TaskDetailsEntity>) collectionsQueue.Dequeue();
			this._territory = (EntityCollection<TerritoryEntity>) collectionsQueue.Dequeue();
			this._testHcpcsCode_ = (EntityCollection<TestHcpcsCodeEntity>) collectionsQueue.Dequeue();
			this._testHcpcsCode = (EntityCollection<TestHcpcsCodeEntity>) collectionsQueue.Dequeue();
			this._testNotPerformed_ = (EntityCollection<TestNotPerformedEntity>) collectionsQueue.Dequeue();
			this._testNotPerformed = (EntityCollection<TestNotPerformedEntity>) collectionsQueue.Dequeue();
			this._testNotPerformedReason = (EntityCollection<TestNotPerformedReasonEntity>) collectionsQueue.Dequeue();
			this._testPerformedExternally_ = (EntityCollection<TestPerformedExternallyEntity>) collectionsQueue.Dequeue();
			this._testPerformedExternally = (EntityCollection<TestPerformedExternallyEntity>) collectionsQueue.Dequeue();
			this._uncontactedCustomerCallQueue = (EntityCollection<UncontactedCustomerCallQueueEntity>) collectionsQueue.Dequeue();
			this._uploadZipInfo = (EntityCollection<UploadZipInfoEntity>) collectionsQueue.Dequeue();
			this._user__ = (EntityCollection<UserEntity>) collectionsQueue.Dequeue();
			this._user_ = (EntityCollection<UserEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaFillEventCallQueue = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaMailRoundCallQueue = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaEligibilityUpload = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaCorporateUpload = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaHealthPlanCallQueueCriteria = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaCallQueueCustomer_ = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaCallQueueCustomer = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaCallQueueCustomer__ = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaHealthPlanRevenue = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaHealthPlanRevenue_ = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaCorporateTag_ = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaLanguageBarrierCallQueue = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaEventNote = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaCampaign = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaEventNote_ = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaCampaign_ = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaHealthPlanCallQueueCriteria_ = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaCorporateTag = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaCallQueueCustomTag = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaCalls = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaCallRoundCallQueue = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaAccountHraChatQuestionnaire_ = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaAccountHraChatQuestionnaire = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaUncontactedCustomerCallQueue = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaCustomEventNotification = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaNoShowCallQueue = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaAccountCallCenterOrganization_ = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._accountCollectionViaAccountCallCenterOrganization = (EntityCollection<AccountEntity>) collectionsQueue.Dequeue();
			this._activityCollectionViaOrgRoleUserActivity = (EntityCollection<ActivityEntity>) collectionsQueue.Dequeue();
			this._activityTypeCollectionViaCallQueueCustomer = (EntityCollection<ActivityTypeEntity>) collectionsQueue.Dequeue();
			this._activityTypeCollectionViaCallQueueCustomer__ = (EntityCollection<ActivityTypeEntity>) collectionsQueue.Dequeue();
			this._activityTypeCollectionViaCallQueueCustomer_ = (EntityCollection<ActivityTypeEntity>) collectionsQueue.Dequeue();
			this._addressCollectionViaCustomerPrimaryCarePhysician_ = (EntityCollection<AddressEntity>) collectionsQueue.Dequeue();
			this._addressCollectionViaProspects = (EntityCollection<AddressEntity>) collectionsQueue.Dequeue();
			this._addressCollectionViaCustomerPrimaryCarePhysician___ = (EntityCollection<AddressEntity>) collectionsQueue.Dequeue();
			this._addressCollectionViaCustomerPrimaryCarePhysician____ = (EntityCollection<AddressEntity>) collectionsQueue.Dequeue();
			this._addressCollectionViaUser = (EntityCollection<AddressEntity>) collectionsQueue.Dequeue();
			this._addressCollectionViaUser_ = (EntityCollection<AddressEntity>) collectionsQueue.Dequeue();
			this._addressCollectionViaShippingDetail = (EntityCollection<AddressEntity>) collectionsQueue.Dequeue();
			this._addressCollectionViaHostPayment = (EntityCollection<AddressEntity>) collectionsQueue.Dequeue();
			this._addressCollectionViaShippingDetail_ = (EntityCollection<AddressEntity>) collectionsQueue.Dequeue();
			this._addressCollectionViaCustomerPrimaryCarePhysician = (EntityCollection<AddressEntity>) collectionsQueue.Dequeue();
			this._addressCollectionViaCustomerPrimaryCarePhysician__ = (EntityCollection<AddressEntity>) collectionsQueue.Dequeue();
			this._addressCollectionViaCustomerPrimaryCarePhysician_____ = (EntityCollection<AddressEntity>) collectionsQueue.Dequeue();
			this._afadvertiserCollectionViaAfcampaign = (EntityCollection<AfadvertiserEntity>) collectionsQueue.Dequeue();
			this._afadvertiserCollectionViaAfcampaign_ = (EntityCollection<AfadvertiserEntity>) collectionsQueue.Dequeue();
			this._afaffiliateCampaignCollectionViaEventCustomers = (EntityCollection<AfaffiliateCampaignEntity>) collectionsQueue.Dequeue();
			this._afaffiliateCampaignCollectionViaEventCustomers_ = (EntityCollection<AfaffiliateCampaignEntity>) collectionsQueue.Dequeue();
			this._afaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer = (EntityCollection<AfaffiliateCampaignMarketingMaterialEntity>) collectionsQueue.Dequeue();
			this._callCenterTeamCollectionViaCallCenterAgentTeam = (EntityCollection<CallCenterTeamEntity>) collectionsQueue.Dequeue();
			this._callCenterTeamCollectionViaCallCenterAgentTeamLog = (EntityCollection<CallCenterTeamEntity>) collectionsQueue.Dequeue();
			this._callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_ = (EntityCollection<CallCenterTeamEntity>) collectionsQueue.Dequeue();
			this._callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment = (EntityCollection<CallCenterTeamEntity>) collectionsQueue.Dequeue();
			this._callCenterTeamCollectionViaCallCenterAgentTeamLog_ = (EntityCollection<CallCenterTeamEntity>) collectionsQueue.Dequeue();
			this._callCenterTeamCollectionViaCallCenterAgentTeamLog__ = (EntityCollection<CallCenterTeamEntity>) collectionsQueue.Dequeue();
			this._callQueueCollectionViaCallQueueCustomer_ = (EntityCollection<CallQueueEntity>) collectionsQueue.Dequeue();
			this._callQueueCollectionViaHealthPlanCallQueueCriteria__ = (EntityCollection<CallQueueEntity>) collectionsQueue.Dequeue();
			this._callQueueCollectionViaCallQueueCustomer = (EntityCollection<CallQueueEntity>) collectionsQueue.Dequeue();
			this._callQueueCollectionViaCalls = (EntityCollection<CallQueueEntity>) collectionsQueue.Dequeue();
			this._callQueueCollectionViaCallQueueAssignment = (EntityCollection<CallQueueEntity>) collectionsQueue.Dequeue();
			this._callQueueCollectionViaSystemGenertedCallQueueCriteria__ = (EntityCollection<CallQueueEntity>) collectionsQueue.Dequeue();
			this._callQueueCollectionViaSystemGenertedCallQueueCriteria_ = (EntityCollection<CallQueueEntity>) collectionsQueue.Dequeue();
			this._callQueueCollectionViaCallQueueCustomer__ = (EntityCollection<CallQueueEntity>) collectionsQueue.Dequeue();
			this._callQueueCollectionViaHealthPlanCallQueueCriteria_ = (EntityCollection<CallQueueEntity>) collectionsQueue.Dequeue();
			this._callQueueCollectionViaSystemGenertedCallQueueCriteria = (EntityCollection<CallQueueEntity>) collectionsQueue.Dequeue();
			this._callQueueCriteriaCollectionViaCallQueueCustomer = (EntityCollection<CallQueueCriteriaEntity>) collectionsQueue.Dequeue();
			this._callQueueCriteriaCollectionViaCallQueueCustomer__ = (EntityCollection<CallQueueCriteriaEntity>) collectionsQueue.Dequeue();
			this._callQueueCriteriaCollectionViaCallQueueCustomer_ = (EntityCollection<CallQueueCriteriaEntity>) collectionsQueue.Dequeue();
			this._callQueueCustomerCollectionViaCustomerCallQueueCallAttempt = (EntityCollection<CallQueueCustomerEntity>) collectionsQueue.Dequeue();
			this._callsCollectionViaCustomerCallQueueCallAttempt = (EntityCollection<CallsEntity>) collectionsQueue.Dequeue();
			this._callsCollectionViaPreAssessmentCustomerCallQueueCallAttempt = (EntityCollection<CallsEntity>) collectionsQueue.Dequeue();
			this._callUploadCollectionViaDirectMail = (EntityCollection<CallUploadEntity>) collectionsQueue.Dequeue();
			this._campaignCollectionViaCallQueueCustomer__ = (EntityCollection<CampaignEntity>) collectionsQueue.Dequeue();
			this._campaignCollectionViaCampaignAssignment = (EntityCollection<CampaignEntity>) collectionsQueue.Dequeue();
			this._campaignCollectionViaCallQueueCustomer = (EntityCollection<CampaignEntity>) collectionsQueue.Dequeue();
			this._campaignCollectionViaCampaignActivity_ = (EntityCollection<CampaignEntity>) collectionsQueue.Dequeue();
			this._campaignCollectionViaHealthPlanCallQueueCriteria_ = (EntityCollection<CampaignEntity>) collectionsQueue.Dequeue();
			this._campaignCollectionViaCampaignActivity = (EntityCollection<CampaignEntity>) collectionsQueue.Dequeue();
			this._campaignCollectionViaCalls = (EntityCollection<CampaignEntity>) collectionsQueue.Dequeue();
			this._campaignCollectionViaEventCustomers_ = (EntityCollection<CampaignEntity>) collectionsQueue.Dequeue();
			this._campaignCollectionViaHealthPlanCallQueueCriteria = (EntityCollection<CampaignEntity>) collectionsQueue.Dequeue();
			this._campaignCollectionViaDirectMail = (EntityCollection<CampaignEntity>) collectionsQueue.Dequeue();
			this._campaignCollectionViaCallQueueCustomer_ = (EntityCollection<CampaignEntity>) collectionsQueue.Dequeue();
			this._campaignCollectionViaEventCustomers = (EntityCollection<CampaignEntity>) collectionsQueue.Dequeue();
			this._campaignActivityCollectionViaCampaignActivityAssignment = (EntityCollection<CampaignActivityEntity>) collectionsQueue.Dequeue();
			this._chaperoneQuestionCollectionViaChaperoneAnswer = (EntityCollection<ChaperoneQuestionEntity>) collectionsQueue.Dequeue();
			this._chaperoneQuestionCollectionViaChaperoneAnswer_ = (EntityCollection<ChaperoneQuestionEntity>) collectionsQueue.Dequeue();
			this._checkListQuestionCollectionViaCheckListAnswer_ = (EntityCollection<CheckListQuestionEntity>) collectionsQueue.Dequeue();
			this._checkListQuestionCollectionViaCheckListAnswer = (EntityCollection<CheckListQuestionEntity>) collectionsQueue.Dequeue();
			this._checkListQuestionCollectionViaExitInterviewSignature = (EntityCollection<CheckListQuestionEntity>) collectionsQueue.Dequeue();
			this._cityCollectionViaAddress = (EntityCollection<CityEntity>) collectionsQueue.Dequeue();
			this._communicationModeCollectionViaEvents____ = (EntityCollection<CommunicationModeEntity>) collectionsQueue.Dequeue();
			this._communicationModeCollectionViaEvents = (EntityCollection<CommunicationModeEntity>) collectionsQueue.Dequeue();
			this._communicationModeCollectionViaEvents___ = (EntityCollection<CommunicationModeEntity>) collectionsQueue.Dequeue();
			this._communicationModeCollectionViaEvents__ = (EntityCollection<CommunicationModeEntity>) collectionsQueue.Dequeue();
			this._communicationModeCollectionViaEvents_ = (EntityCollection<CommunicationModeEntity>) collectionsQueue.Dequeue();
			this._contactCallStatusCollectionViaContactCall = (EntityCollection<ContactCallStatusEntity>) collectionsQueue.Dequeue();
			this._contactCallStatusCollectionViaContactCall_ = (EntityCollection<ContactCallStatusEntity>) collectionsQueue.Dequeue();
			this._contactCallStatusCollectionViaContactMeeting_ = (EntityCollection<ContactCallStatusEntity>) collectionsQueue.Dequeue();
			this._contactCallStatusCollectionViaContactMeeting = (EntityCollection<ContactCallStatusEntity>) collectionsQueue.Dequeue();
			this._countryCollectionViaAddress = (EntityCollection<CountryEntity>) collectionsQueue.Dequeue();
			this._couponTypeCollectionViaCoupons_ = (EntityCollection<CouponTypeEntity>) collectionsQueue.Dequeue();
			this._couponTypeCollectionViaCoupons = (EntityCollection<CouponTypeEntity>) collectionsQueue.Dequeue();
			this._customerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation = (EntityCollection<CustomerEventScreeningTestsEntity>) collectionsQueue.Dequeue();
			this._customerEventScreeningTestsCollectionViaTestPerformedExternally_ = (EntityCollection<CustomerEventScreeningTestsEntity>) collectionsQueue.Dequeue();
			this._customerEventScreeningTestsCollectionViaCustomerEventTestState = (EntityCollection<CustomerEventScreeningTestsEntity>) collectionsQueue.Dequeue();
			this._customerEventScreeningTestsCollectionViaCustomerEventTestState_ = (EntityCollection<CustomerEventScreeningTestsEntity>) collectionsQueue.Dequeue();
			this._customerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason = (EntityCollection<CustomerEventScreeningTestsEntity>) collectionsQueue.Dequeue();
			this._customerEventScreeningTestsCollectionViaCustomerEventTestState__ = (EntityCollection<CustomerEventScreeningTestsEntity>) collectionsQueue.Dequeue();
			this._customerEventScreeningTestsCollectionViaTestPerformedExternally = (EntityCollection<CustomerEventScreeningTestsEntity>) collectionsQueue.Dequeue();
			this._customerEventScreeningTestsCollectionViaCustomerEventReading = (EntityCollection<CustomerEventScreeningTestsEntity>) collectionsQueue.Dequeue();
			this._customerEventScreeningTestsCollectionViaTestNotPerformed = (EntityCollection<CustomerEventScreeningTestsEntity>) collectionsQueue.Dequeue();
			this._customerEventScreeningTestsCollectionViaTestNotPerformed_ = (EntityCollection<CustomerEventScreeningTestsEntity>) collectionsQueue.Dequeue();
			this._customerHealthQuestionsCollectionViaCustomerHealthInfo = (EntityCollection<CustomerHealthQuestionsEntity>) collectionsQueue.Dequeue();
			this._customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_ = (EntityCollection<CustomerHealthQuestionsEntity>) collectionsQueue.Dequeue();
			this._customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_ = (EntityCollection<CustomerHealthQuestionsEntity>) collectionsQueue.Dequeue();
			this._customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer = (EntityCollection<CustomerHealthQuestionsEntity>) collectionsQueue.Dequeue();
			this._customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__ = (EntityCollection<CustomerHealthQuestionsEntity>) collectionsQueue.Dequeue();
			this._customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___ = (EntityCollection<CustomerHealthQuestionsEntity>) collectionsQueue.Dequeue();
			this._customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria = (EntityCollection<CustomerHealthQuestionsEntity>) collectionsQueue.Dequeue();
			this._customerHealthQuestionsCollectionViaCustomerHealthInfoArchive = (EntityCollection<CustomerHealthQuestionsEntity>) collectionsQueue.Dequeue();
			this._customerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician = (EntityCollection<CustomerPrimaryCarePhysicianEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaFillEventCallQueue = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaDisqualifiedTest_ = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaCustomerEligibility_ = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaEventCustomerResult_____ = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaCustomerEligibility = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaLanguageBarrierCallQueue = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaEventCustomerQuestionAnswer = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaHospitalPartnerCustomer_ = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaHospitalPartnerCustomer__ = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaHospitalPartnerCustomer = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaDisqualifiedTest = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaCustomerPrimaryCarePhysician_ = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaCustomerPrimaryCarePhysician__ = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaNoShowCallQueue = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaCustomerPrimaryCarePhysician = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaCallQueueCustomer = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaCustomerHealthInfo = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaCallQueueCustomer__ = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaCallQueueCustomer_ = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaEventCustomerResult______ = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaCustomerIcdCode = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaMailRoundCallQueue = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaCustomerHealthInfoArchive = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaEventCustomerQuestionAnswer_ = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaRequiredTest = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaCustomerWarmTransfer_ = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaProspectCustomer = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaEventCustomerResult_ = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaEventCustomerResult__ = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaUncontactedCustomerCallQueue = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaCustomerWarmTransfer = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaMedication_ = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaCallRoundCallQueue = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaCustomerTag_ = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaReferral = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaCustomerTargeted_ = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaCustomerTargeted = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaCustomerTag = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaMedication = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaEventCustomerResult________ = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaEventCustomerResult = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaEventCustomerResult_______ = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaDirectMail = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaEventCustomerResult____ = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaCurrentMedication = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaGuardianDetails = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaEventCustomers = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaEventCustomers_ = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaCustomerCallQueueCallAttempt = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaEventCustomerResult___ = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaCustomerProfileHistory = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaCustomerClinicalQuestionAnswer = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaCustomerClinicalQuestionAnswer_ = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileCollectionViaGuardianDetails_ = (EntityCollection<CustomerProfileEntity>) collectionsQueue.Dequeue();
			this._customerProfileHistoryCollectionViaEventCustomers_ = (EntityCollection<CustomerProfileHistoryEntity>) collectionsQueue.Dequeue();
			this._customerProfileHistoryCollectionViaEventCustomers = (EntityCollection<CustomerProfileHistoryEntity>) collectionsQueue.Dequeue();
			this._customerRegistrationNotesCollectionViaEventAppointmentCancellationLog = (EntityCollection<CustomerRegistrationNotesEntity>) collectionsQueue.Dequeue();
			this._customerRegistrationNotesCollectionViaEventCustomers_ = (EntityCollection<CustomerRegistrationNotesEntity>) collectionsQueue.Dequeue();
			this._customerRegistrationNotesCollectionViaEventCustomers = (EntityCollection<CustomerRegistrationNotesEntity>) collectionsQueue.Dequeue();
			this._directMailTypeCollectionViaDirectMail = (EntityCollection<DirectMailTypeEntity>) collectionsQueue.Dequeue();
			this._directMailTypeCollectionViaCampaignActivity = (EntityCollection<DirectMailTypeEntity>) collectionsQueue.Dequeue();
			this._directMailTypeCollectionViaCampaignActivity_ = (EntityCollection<DirectMailTypeEntity>) collectionsQueue.Dequeue();
			this._eventActivityTemplateCollectionViaEventActivityTemplateMeeting = (EntityCollection<EventActivityTemplateEntity>) collectionsQueue.Dequeue();
			this._eventActivityTemplateCollectionViaEventActivityTemplateTask = (EntityCollection<EventActivityTemplateEntity>) collectionsQueue.Dequeue();
			this._eventActivityTemplateCollectionViaEventActivityTemplateCall = (EntityCollection<EventActivityTemplateEntity>) collectionsQueue.Dequeue();
			this._eventActivityTemplateCollectionViaEventActivityTemplateEmail = (EntityCollection<EventActivityTemplateEntity>) collectionsQueue.Dequeue();
			this._eventAppointmentCollectionViaEventCustomers = (EntityCollection<EventAppointmentEntity>) collectionsQueue.Dequeue();
			this._eventAppointmentCollectionViaEventCustomers_ = (EntityCollection<EventAppointmentEntity>) collectionsQueue.Dequeue();
			this._eventCustomerResultCollectionViaCustomerResultScreeningCommunication = (EntityCollection<EventCustomerResultEntity>) collectionsQueue.Dequeue();
			this._eventCustomerResultCollectionViaPriorityInQueue_ = (EntityCollection<EventCustomerResultEntity>) collectionsQueue.Dequeue();
			this._eventCustomerResultCollectionViaKynLabValues = (EntityCollection<EventCustomerResultEntity>) collectionsQueue.Dequeue();
			this._eventCustomerResultCollectionViaCustomerResultScreeningCommunication__ = (EntityCollection<EventCustomerResultEntity>) collectionsQueue.Dequeue();
			this._eventCustomerResultCollectionViaCustomerResultScreeningCommunication_ = (EntityCollection<EventCustomerResultEntity>) collectionsQueue.Dequeue();
			this._eventCustomerResultCollectionViaCdcontentGeneratorTracking = (EntityCollection<EventCustomerResultEntity>) collectionsQueue.Dequeue();
			this._eventCustomerResultCollectionViaKynLabValues_ = (EntityCollection<EventCustomerResultEntity>) collectionsQueue.Dequeue();
			this._eventCustomerResultCollectionViaPriorityInQueue = (EntityCollection<EventCustomerResultEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaDisqualifiedTest_ = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaEventAppointmentChangeLog = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaDisqualifiedTest = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaEventCustomerPrimaryCarePhysician = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaEventCustomerQuestionAnswer_ = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaEventAppointmentCancellationLog = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaEventCustomerQuestionAnswer = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaEventCustomerGiftCard = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaSurveyAnswer = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaEventCustomerTestNotPerformedNotification = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaPhysicianRecordRequestSignature = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaEventCustomerRetest = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaPcpDisposition = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaPcpDisposition_ = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaChaperoneSignature = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaChaperoneAnswer_ = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaChaperoneAnswer = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaCallQueueCustomer__ = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaCheckListAnswer_ = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaCallQueueCustomer = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaCallQueueCustomer_ = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaCustomerHealthInfo = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaExitInterviewSignature = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaFluConsentAnswer = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaExitInterviewAnswer_ = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaCheckListAnswer = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaExitInterviewAnswer = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaFluConsentAnswer_ = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaSurveyAnswer_ = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaCustomerHealthInfoArchive = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaCustomerMedicareQuestionAnswer = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaFluConsentSignature = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventCustomersCollectionViaParticipationConsentSignature = (EntityCollection<EventCustomersEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaEventCustomerQuestionAnswer = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaEventPhysicianTest__ = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaEventStaffAssignment__ = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaEventStaffAssignment_ = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaEventCustomers = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaEventCustomerResult____ = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaEventCustomerResult___ = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaHospitalPartnerCustomer_ = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaEventCustomerResult_ = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaEventCustomerResult________ = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaEventCustomerResult______ = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaEventCustomerResult__ = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaEventCustomerResult_______ = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaEventPhysicianTest_ = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaEventPhysicianTest = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaEventCustomerQuestionAnswer_ = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaHospitalPartnerCustomer__ = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaEventCustomerResult = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaHospitalPartnerCustomer = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaEventCustomerResult_____ = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaEventCustomers_ = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaEventAccountTestHcpcsCode = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaCustomerRegistrationNotes = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaCallQueueCustomer = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaEventAccountTestHcpcsCode_ = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaSeminars = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaDisqualifiedTest_ = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaDisqualifiedTest = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaCustomEventNotification = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaCallQueueCustomer__ = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaCustomerClinicalQuestionAnswer = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaCustomerClinicalQuestionAnswer_ = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaEventAppointmentChangeLog = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaEventAppointmentChangeLog_ = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaCallQueueCustomer_ = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaHostPayment = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaEventStaffAssignment = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventsCollectionViaEventAppointmentCancellationLog = (EntityCollection<EventsEntity>) collectionsQueue.Dequeue();
			this._eventTypeCollectionViaEvents = (EntityCollection<EventTypeEntity>) collectionsQueue.Dequeue();
			this._eventTypeCollectionViaEvents____ = (EntityCollection<EventTypeEntity>) collectionsQueue.Dequeue();
			this._eventTypeCollectionViaEvents___ = (EntityCollection<EventTypeEntity>) collectionsQueue.Dequeue();
			this._eventTypeCollectionViaEvents_ = (EntityCollection<EventTypeEntity>) collectionsQueue.Dequeue();
			this._eventTypeCollectionViaEvents__ = (EntityCollection<EventTypeEntity>) collectionsQueue.Dequeue();
			this._exitInterviewQuestionCollectionViaExitInterviewAnswer_ = (EntityCollection<ExitInterviewQuestionEntity>) collectionsQueue.Dequeue();
			this._exitInterviewQuestionCollectionViaExitInterviewAnswer = (EntityCollection<ExitInterviewQuestionEntity>) collectionsQueue.Dequeue();
			this._exportableReportsCollectionViaExportableReportsQueue = (EntityCollection<ExportableReportsEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaCustomerActivityTypeUpload_ = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaCorporateUpload = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaStaffEventScheduleUpload = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaCorporateUpload_ = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaPhysicianRecordRequestSignature = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaCustomerActivityTypeUpload = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaRapsUpload_ = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaCallUpload_ = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaChaperoneSignature_ = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaRapsUpload = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaChaperoneSignature = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaCorporateUpload__ = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaCallUpload = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaHealthPlanCriteriaAssignmentUpload = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaParticipationConsentSignature_ = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaMergeCustomerUpload = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaMedicationUpload_ = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaMedicationUpload = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaFluConsentSignature_ = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaFluConsentSignature = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaMergeCustomerUpload_ = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaExitInterviewSignature = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaEventCustomerGiftCard_ = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaEventCustomerGiftCard = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaEligibilityUpload = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaEligibilityUpload_ = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaExportableReportsQueue = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaSuspectConditionUpload = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaStaffEventScheduleUpload_ = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaParticipationConsentSignature = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaCustomerPhoneNumberUpdateUpload_ = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaCustomerPhoneNumberUpdateUpload = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fileCollectionViaSuspectConditionUpload_ = (EntityCollection<FileEntity>) collectionsQueue.Dequeue();
			this._fluConsentQuestionCollectionViaFluConsentAnswer = (EntityCollection<FluConsentQuestionEntity>) collectionsQueue.Dequeue();
			this._fluConsentQuestionCollectionViaFluConsentAnswer_ = (EntityCollection<FluConsentQuestionEntity>) collectionsQueue.Dequeue();
			this._gcNotGivenReasonCollectionViaEventCustomers = (EntityCollection<GcNotGivenReasonEntity>) collectionsQueue.Dequeue();
			this._gcNotGivenReasonCollectionViaEventCustomers_ = (EntityCollection<GcNotGivenReasonEntity>) collectionsQueue.Dequeue();
			this._hafTemplateCollectionViaClinicalTestQualificationCriteria = (EntityCollection<HafTemplateEntity>) collectionsQueue.Dequeue();
			this._hafTemplateCollectionViaEvents___ = (EntityCollection<HafTemplateEntity>) collectionsQueue.Dequeue();
			this._hafTemplateCollectionViaEvents = (EntityCollection<HafTemplateEntity>) collectionsQueue.Dequeue();
			this._hafTemplateCollectionViaEvents____ = (EntityCollection<HafTemplateEntity>) collectionsQueue.Dequeue();
			this._hafTemplateCollectionViaEvents_ = (EntityCollection<HafTemplateEntity>) collectionsQueue.Dequeue();
			this._hafTemplateCollectionViaCustomerClinicalQuestionAnswer = (EntityCollection<HafTemplateEntity>) collectionsQueue.Dequeue();
			this._hafTemplateCollectionViaEvents__ = (EntityCollection<HafTemplateEntity>) collectionsQueue.Dequeue();
			this._hafTemplateCollectionViaCustomerClinicalQuestionAnswer_ = (EntityCollection<HafTemplateEntity>) collectionsQueue.Dequeue();
			this._hafTemplateCollectionViaClinicalTestQualificationCriteria_ = (EntityCollection<HafTemplateEntity>) collectionsQueue.Dequeue();
			this._hcpcsCodeCollectionViaTestHcpcsCode_ = (EntityCollection<HcpcsCodeEntity>) collectionsQueue.Dequeue();
			this._hcpcsCodeCollectionViaTestHcpcsCode = (EntityCollection<HcpcsCodeEntity>) collectionsQueue.Dequeue();
			this._healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload = (EntityCollection<HealthPlanCallQueueCriteriaEntity>) collectionsQueue.Dequeue();
			this._healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment = (EntityCollection<HealthPlanCallQueueCriteriaEntity>) collectionsQueue.Dequeue();
			this._healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_ = (EntityCollection<HealthPlanCallQueueCriteriaEntity>) collectionsQueue.Dequeue();
			this._healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment = (EntityCollection<HealthPlanCallQueueCriteriaEntity>) collectionsQueue.Dequeue();
			this._healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__ = (EntityCollection<HealthPlanCallQueueCriteriaEntity>) collectionsQueue.Dequeue();
			this._healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_ = (EntityCollection<HealthPlanCallQueueCriteriaEntity>) collectionsQueue.Dequeue();
			this._hospitalFacilityCollectionViaEventCustomers = (EntityCollection<HospitalFacilityEntity>) collectionsQueue.Dequeue();
			this._hospitalFacilityCollectionViaEventCustomers_ = (EntityCollection<HospitalFacilityEntity>) collectionsQueue.Dequeue();
			this._hostPaymentCollectionViaHostPaymentTransaction = (EntityCollection<HostPaymentEntity>) collectionsQueue.Dequeue();
			this._icdCodesCollectionViaCustomerIcdCode = (EntityCollection<IcdCodesEntity>) collectionsQueue.Dequeue();
			this._insuranceCompanyCollectionViaEligibility = (EntityCollection<InsuranceCompanyEntity>) collectionsQueue.Dequeue();
			this._languageCollectionViaHealthPlanCallQueueCriteria = (EntityCollection<LanguageEntity>) collectionsQueue.Dequeue();
			this._languageCollectionViaCallQueueCustomer_ = (EntityCollection<LanguageEntity>) collectionsQueue.Dequeue();
			this._languageCollectionViaCallQueueCustomer__ = (EntityCollection<LanguageEntity>) collectionsQueue.Dequeue();
			this._languageCollectionViaCallQueueCustomer = (EntityCollection<LanguageEntity>) collectionsQueue.Dequeue();
			this._languageCollectionViaHealthPlanCallQueueCriteria_ = (EntityCollection<LanguageEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaUncontactedCustomerCallQueue = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaFillEventCallQueue = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaTestPerformedExternally_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaLanguageBarrierCallQueue = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaMedicationUpload = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaHostFacilityRanking = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaHostFacilityRanking_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaMailRoundCallQueue = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaHostPaymentTransaction_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaHostPayment = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaHostPaymentTransaction = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaHostPayment_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaKynLabValues = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaExportableReportsQueue = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaFile = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaTestPerformedExternally = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaKynLabValues_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaPreQualificationQuestion = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaPrintOrderItemTracking__ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaPcpDisposition_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaPcpAppointment_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaPcpDisposition = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaRefundRequest = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaRapsUpload = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaRefundRequest_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaPrintOrderItemTracking___ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaProspectCustomer = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaPcpAppointment = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaHafTemplate = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaHafTemplate_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaSuspectConditionUpload = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaMergeCustomerUpload = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaNoShowCallQueue = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaStaffEventScheduleUpload = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaHealthPlanRevenue = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaHealthPlanRevenue_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaHafTemplate__ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaHafTemplate___ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCustomerProfileHistory___ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCustomerProfileHistory__ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCustomerProfileHistory = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCustomEventNotification = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCustomerRegistrationNotes = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCustomerProfileHistory_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCustomerPrimaryCarePhysician__ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCustomerEventTestState__ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCustomerEventTestState_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCustomerEventTestState = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCustomerPrimaryCarePhysician_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCustomerPrimaryCarePhysician = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCustomerPhoneNumberUpdateUpload = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEligibilityUpload = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEventCustomerResult__ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEventCustomerResult______ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEventCustomerResult_____ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEventCustomerResult_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEventCustomerResult____ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEventCustomerResult___ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEventCustomerResult________ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEventAppointmentCancellationLog = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEmailTemplate_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEmailTemplate = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEventCustomerResult_______ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEventCustomerResult = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEventAppointmentChangeLog = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCustomerActivityTypeUpload = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCalls = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCalls_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCallRoundCallQueue = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCampaign = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCallUpload = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCalls__ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCallQueueCustomer__ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCallCenterTeam = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaAccountHraChatQuestionnaire_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaAccountHraChatQuestionnaire = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCallQueueCustomer_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCallQueueCustomer = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCallCenterTeam_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCampaign_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaClinicalTestQualificationCriteria_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaClinicalTestQualificationCriteria = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCheckListTemplate_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCorporateUpload = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaClinicalTestQualificationCriteria___ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaClinicalTestQualificationCriteria__ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCheckListTemplate = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCampaignActivity = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCampaign___ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCampaign__ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCheckListAnswer_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCheckListAnswer = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaCampaignActivity_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEvents________ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEvents______________ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEvents_________ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEvents_____________ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEvents___________________ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEvents__________________ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEvents_______________ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEvents_______________________ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEvents____________ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEvents____ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEvents________________ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEvents_______ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEvents_____ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEvents__________ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEvents_________________ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEvents___________ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEvents______________________ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEvents = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEvents______ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEvents__ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEventCustomers___ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEventCustomers = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEventCustomers_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEventCustomers__ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEvents___ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEvents________________________ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEvents____________________ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEvents_____________________ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._lookupCollectionViaEvents_ = (EntityCollection<LookupEntity>) collectionsQueue.Dequeue();
			this._marketingPrintOrderItemCollectionViaPrintOrderItemTracking = (EntityCollection<MarketingPrintOrderItemEntity>) collectionsQueue.Dequeue();
			this._marketingPrintOrderItemCollectionViaPrintOrderItemTracking_ = (EntityCollection<MarketingPrintOrderItemEntity>) collectionsQueue.Dequeue();
			this._medicareQuestionCollectionViaCustomerMedicareQuestionAnswer = (EntityCollection<MedicareQuestionEntity>) collectionsQueue.Dequeue();
			this._ndcCollectionViaCurrentMedication = (EntityCollection<NdcEntity>) collectionsQueue.Dequeue();
			this._notesDetailsCollectionViaPriorityInQueue = (EntityCollection<NotesDetailsEntity>) collectionsQueue.Dequeue();
			this._notesDetailsCollectionViaPriorityInQueue_ = (EntityCollection<NotesDetailsEntity>) collectionsQueue.Dequeue();
			this._notesDetailsCollectionViaCallQueueCustomer_ = (EntityCollection<NotesDetailsEntity>) collectionsQueue.Dequeue();
			this._notesDetailsCollectionViaEvents = (EntityCollection<NotesDetailsEntity>) collectionsQueue.Dequeue();
			this._notesDetailsCollectionViaCallQueueCustomer__ = (EntityCollection<NotesDetailsEntity>) collectionsQueue.Dequeue();
			this._notesDetailsCollectionViaEvents_ = (EntityCollection<NotesDetailsEntity>) collectionsQueue.Dequeue();
			this._notesDetailsCollectionViaEvents___ = (EntityCollection<NotesDetailsEntity>) collectionsQueue.Dequeue();
			this._notesDetailsCollectionViaCallQueueCustomer = (EntityCollection<NotesDetailsEntity>) collectionsQueue.Dequeue();
			this._notesDetailsCollectionViaEvents____ = (EntityCollection<NotesDetailsEntity>) collectionsQueue.Dequeue();
			this._notesDetailsCollectionViaEvents__ = (EntityCollection<NotesDetailsEntity>) collectionsQueue.Dequeue();
			this._notificationMediumCollectionViaNotificationType = (EntityCollection<NotificationMediumEntity>) collectionsQueue.Dequeue();
			this._notificationMediumCollectionViaNotification = (EntityCollection<NotificationMediumEntity>) collectionsQueue.Dequeue();
			this._notificationTypeCollectionViaEventCustomerTestNotPerformedNotification = (EntityCollection<NotificationTypeEntity>) collectionsQueue.Dequeue();
			this._notificationTypeCollectionViaEmailTemplate = (EntityCollection<NotificationTypeEntity>) collectionsQueue.Dequeue();
			this._notificationTypeCollectionViaNotification = (EntityCollection<NotificationTypeEntity>) collectionsQueue.Dequeue();
			this._orderCollectionViaRefundRequest_ = (EntityCollection<OrderEntity>) collectionsQueue.Dequeue();
			this._orderCollectionViaRefundRequest = (EntityCollection<OrderEntity>) collectionsQueue.Dequeue();
			this._organizationCollectionViaAccountTestHcpcsCode_ = (EntityCollection<OrganizationEntity>) collectionsQueue.Dequeue();
			this._organizationCollectionViaAccountTestHcpcsCode = (EntityCollection<OrganizationEntity>) collectionsQueue.Dequeue();
			this._organizationCollectionViaAccountCallCenterOrganization = (EntityCollection<OrganizationEntity>) collectionsQueue.Dequeue();
			this._organizationCollectionViaAccountCallCenterOrganization_ = (EntityCollection<OrganizationEntity>) collectionsQueue.Dequeue();
			this._organizationCollectionViaEventAccountTestHcpcsCode_ = (EntityCollection<OrganizationEntity>) collectionsQueue.Dequeue();
			this._organizationCollectionViaEventAccountTestHcpcsCode = (EntityCollection<OrganizationEntity>) collectionsQueue.Dequeue();
			this._organizationCollectionViaMarketingPrintOrder = (EntityCollection<OrganizationEntity>) collectionsQueue.Dequeue();
			this._organizationCollectionViaMarketingPrintOrder_ = (EntityCollection<OrganizationEntity>) collectionsQueue.Dequeue();
			this._organizationCollectionViaAffiliateProfile = (EntityCollection<OrganizationEntity>) collectionsQueue.Dequeue();
			this._packageCollectionViaPreApprovedPackage = (EntityCollection<PackageEntity>) collectionsQueue.Dequeue();
			this._physicianMasterCollectionViaCustomerPrimaryCarePhysician = (EntityCollection<PhysicianMasterEntity>) collectionsQueue.Dequeue();
			this._physicianMasterCollectionViaCustomerPrimaryCarePhysician_ = (EntityCollection<PhysicianMasterEntity>) collectionsQueue.Dequeue();
			this._physicianMasterCollectionViaCustomerPrimaryCarePhysician__ = (EntityCollection<PhysicianMasterEntity>) collectionsQueue.Dequeue();
			this._podDetailsCollectionViaSalesRepPodAssigments = (EntityCollection<PodDetailsEntity>) collectionsQueue.Dequeue();
			this._podDetailsCollectionViaEventStaffAssignment = (EntityCollection<PodDetailsEntity>) collectionsQueue.Dequeue();
			this._podDetailsCollectionViaEventNote_ = (EntityCollection<PodDetailsEntity>) collectionsQueue.Dequeue();
			this._podDetailsCollectionViaEventNote = (EntityCollection<PodDetailsEntity>) collectionsQueue.Dequeue();
			this._podDetailsCollectionViaPodDefaultTeam = (EntityCollection<PodDetailsEntity>) collectionsQueue.Dequeue();
			this._podDetailsCollectionViaEventStaffAssignment_ = (EntityCollection<PodDetailsEntity>) collectionsQueue.Dequeue();
			this._podDetailsCollectionViaEventStaffAssignment__ = (EntityCollection<PodDetailsEntity>) collectionsQueue.Dequeue();
			this._preQualificationQuestionCollectionViaEventCustomerQuestionAnswer_ = (EntityCollection<PreQualificationQuestionEntity>) collectionsQueue.Dequeue();
			this._preQualificationQuestionCollectionViaDisqualifiedTest = (EntityCollection<PreQualificationQuestionEntity>) collectionsQueue.Dequeue();
			this._preQualificationQuestionCollectionViaDisqualifiedTest_ = (EntityCollection<PreQualificationQuestionEntity>) collectionsQueue.Dequeue();
			this._preQualificationQuestionCollectionViaEventCustomerQuestionAnswer = (EntityCollection<PreQualificationQuestionEntity>) collectionsQueue.Dequeue();
			this._prospectCustomerCollectionViaCallQueueCustomer_ = (EntityCollection<ProspectCustomerEntity>) collectionsQueue.Dequeue();
			this._prospectCustomerCollectionViaCallQueueCustomer = (EntityCollection<ProspectCustomerEntity>) collectionsQueue.Dequeue();
			this._prospectCustomerCollectionViaCallQueueCustomer__ = (EntityCollection<ProspectCustomerEntity>) collectionsQueue.Dequeue();
			this._prospectListDetailsCollectionViaProspects = (EntityCollection<ProspectListDetailsEntity>) collectionsQueue.Dequeue();
			this._prospectsCollectionViaHostFacilityRanking = (EntityCollection<ProspectsEntity>) collectionsQueue.Dequeue();
			this._prospectsCollectionViaHostPayment = (EntityCollection<ProspectsEntity>) collectionsQueue.Dequeue();
			this._prospectTypeCollectionViaProspects = (EntityCollection<ProspectTypeEntity>) collectionsQueue.Dequeue();
			this._refundRequestCollectionViaEventAppointmentCancellationLog = (EntityCollection<RefundRequestEntity>) collectionsQueue.Dequeue();
			this._relationshipCollectionViaGuardianDetails_ = (EntityCollection<RelationshipEntity>) collectionsQueue.Dequeue();
			this._relationshipCollectionViaGuardianDetails = (EntityCollection<RelationshipEntity>) collectionsQueue.Dequeue();
			this._rescheduleCancelDispositionCollectionViaEventAppointmentChangeLog = (EntityCollection<RescheduleCancelDispositionEntity>) collectionsQueue.Dequeue();
			this._rescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog = (EntityCollection<RescheduleCancelDispositionEntity>) collectionsQueue.Dequeue();
			this._roleCollectionViaUser = (EntityCollection<RoleEntity>) collectionsQueue.Dequeue();
			this._roleCollectionViaHostFacilityRanking = (EntityCollection<RoleEntity>) collectionsQueue.Dequeue();
			this._roleCollectionViaUser_ = (EntityCollection<RoleEntity>) collectionsQueue.Dequeue();
			this._scheduleMethodCollectionViaEvents___ = (EntityCollection<ScheduleMethodEntity>) collectionsQueue.Dequeue();
			this._scheduleMethodCollectionViaEvents____ = (EntityCollection<ScheduleMethodEntity>) collectionsQueue.Dequeue();
			this._scheduleMethodCollectionViaEvents = (EntityCollection<ScheduleMethodEntity>) collectionsQueue.Dequeue();
			this._scheduleMethodCollectionViaEvents_ = (EntityCollection<ScheduleMethodEntity>) collectionsQueue.Dequeue();
			this._scheduleMethodCollectionViaEvents__ = (EntityCollection<ScheduleMethodEntity>) collectionsQueue.Dequeue();
			this._scriptsCollectionViaCallQueue = (EntityCollection<ScriptsEntity>) collectionsQueue.Dequeue();
			this._scriptsCollectionViaCallQueue_ = (EntityCollection<ScriptsEntity>) collectionsQueue.Dequeue();
			this._shippingOptionCollectionViaShippingDetail_ = (EntityCollection<ShippingOptionEntity>) collectionsQueue.Dequeue();
			this._shippingOptionCollectionViaShippingDetail = (EntityCollection<ShippingOptionEntity>) collectionsQueue.Dequeue();
			this._staffEventRoleCollectionViaEventStaffAssignment__ = (EntityCollection<StaffEventRoleEntity>) collectionsQueue.Dequeue();
			this._staffEventRoleCollectionViaPodDefaultTeam = (EntityCollection<StaffEventRoleEntity>) collectionsQueue.Dequeue();
			this._staffEventRoleCollectionViaEventStaffAssignment = (EntityCollection<StaffEventRoleEntity>) collectionsQueue.Dequeue();
			this._staffEventRoleCollectionViaEventStaffAssignment_ = (EntityCollection<StaffEventRoleEntity>) collectionsQueue.Dequeue();
			this._standardFindingTestReadingCollectionViaCustomerEventReading = (EntityCollection<StandardFindingTestReadingEntity>) collectionsQueue.Dequeue();
			this._stateCollectionViaAddress = (EntityCollection<StateEntity>) collectionsQueue.Dequeue();
			this._surveyQuestionCollectionViaSurveyAnswer_ = (EntityCollection<SurveyQuestionEntity>) collectionsQueue.Dequeue();
			this._surveyQuestionCollectionViaSurveyAnswer = (EntityCollection<SurveyQuestionEntity>) collectionsQueue.Dequeue();
			this._tagCollectionViaPreAssessmentCustomerCallQueueCallAttempt = (EntityCollection<TagEntity>) collectionsQueue.Dequeue();
			this._tagCollectionViaCustomerCallQueueCallAttempt = (EntityCollection<TagEntity>) collectionsQueue.Dequeue();
			this._taskPriorityTypesCollectionViaTaskDetails__ = (EntityCollection<TaskPriorityTypesEntity>) collectionsQueue.Dequeue();
			this._taskPriorityTypesCollectionViaTaskDetails_ = (EntityCollection<TaskPriorityTypesEntity>) collectionsQueue.Dequeue();
			this._taskPriorityTypesCollectionViaTaskDetails = (EntityCollection<TaskPriorityTypesEntity>) collectionsQueue.Dequeue();
			this._taskStatusTypesCollectionViaTaskDetails_ = (EntityCollection<TaskStatusTypesEntity>) collectionsQueue.Dequeue();
			this._taskStatusTypesCollectionViaTaskDetails__ = (EntityCollection<TaskStatusTypesEntity>) collectionsQueue.Dequeue();
			this._taskStatusTypesCollectionViaTaskDetails = (EntityCollection<TaskStatusTypesEntity>) collectionsQueue.Dequeue();
			this._technicianProfileCollectionViaPinChangelog = (EntityCollection<TechnicianProfileEntity>) collectionsQueue.Dequeue();
			this._territoryCollectionViaTerritory = (EntityCollection<TerritoryEntity>) collectionsQueue.Dequeue();
			this._territoryCollectionViaOrganizationRoleUserTerritory = (EntityCollection<TerritoryEntity>) collectionsQueue.Dequeue();
			this._testCollectionViaEventCustomerTestNotPerformedNotification = (EntityCollection<TestEntity>) collectionsQueue.Dequeue();
			this._testCollectionViaEventPhysicianTest = (EntityCollection<TestEntity>) collectionsQueue.Dequeue();
			this._testCollectionViaDisqualifiedTest_ = (EntityCollection<TestEntity>) collectionsQueue.Dequeue();
			this._testCollectionViaEventCustomerRetest = (EntityCollection<TestEntity>) collectionsQueue.Dequeue();
			this._testCollectionViaEventPhysicianTest_ = (EntityCollection<TestEntity>) collectionsQueue.Dequeue();
			this._testCollectionViaKynLabValues_ = (EntityCollection<TestEntity>) collectionsQueue.Dequeue();
			this._testCollectionViaEventPhysicianTest__ = (EntityCollection<TestEntity>) collectionsQueue.Dequeue();
			this._testCollectionViaTestHcpcsCode_ = (EntityCollection<TestEntity>) collectionsQueue.Dequeue();
			this._testCollectionViaTestHcpcsCode = (EntityCollection<TestEntity>) collectionsQueue.Dequeue();
			this._testCollectionViaKynLabValues = (EntityCollection<TestEntity>) collectionsQueue.Dequeue();
			this._testCollectionViaPreApprovedTest = (EntityCollection<TestEntity>) collectionsQueue.Dequeue();
			this._testCollectionViaClinicalTestQualificationCriteria = (EntityCollection<TestEntity>) collectionsQueue.Dequeue();
			this._testCollectionViaRequiredTest = (EntityCollection<TestEntity>) collectionsQueue.Dequeue();
			this._testCollectionViaClinicalTestQualificationCriteria_ = (EntityCollection<TestEntity>) collectionsQueue.Dequeue();
			this._testCollectionViaDisqualifiedTest = (EntityCollection<TestEntity>) collectionsQueue.Dequeue();
			this._testCollectionViaPreQualificationTestTemplate = (EntityCollection<TestEntity>) collectionsQueue.Dequeue();
			this._testCollectionViaPreQualificationTestTemplate_ = (EntityCollection<TestEntity>) collectionsQueue.Dequeue();
			this._testCollectionViaPreQualificationQuestion = (EntityCollection<TestEntity>) collectionsQueue.Dequeue();
			this._testHcpcsCodeCollectionViaEventAccountTestHcpcsCode_ = (EntityCollection<TestHcpcsCodeEntity>) collectionsQueue.Dequeue();
			this._testHcpcsCodeCollectionViaEventAccountTestHcpcsCode = (EntityCollection<TestHcpcsCodeEntity>) collectionsQueue.Dequeue();
			this._testHcpcsCodeCollectionViaAccountTestHcpcsCode_ = (EntityCollection<TestHcpcsCodeEntity>) collectionsQueue.Dequeue();
			this._testHcpcsCodeCollectionViaAccountTestHcpcsCode = (EntityCollection<TestHcpcsCodeEntity>) collectionsQueue.Dequeue();
			this._testNotPerformedReasonCollectionViaTestNotPerformed_ = (EntityCollection<TestNotPerformedReasonEntity>) collectionsQueue.Dequeue();
			this._testNotPerformedReasonCollectionViaTestNotPerformed = (EntityCollection<TestNotPerformedReasonEntity>) collectionsQueue.Dequeue();
			this._testReadingCollectionViaCustomerEventReading = (EntityCollection<TestReadingEntity>) collectionsQueue.Dequeue();
			this._testUnableScreenReasonCollectionViaCustomerEventUnableScreenReason = (EntityCollection<TestUnableScreenReasonEntity>) collectionsQueue.Dequeue();
			this._userLoginCollectionViaPasswordChangelog = (EntityCollection<UserLoginEntity>) collectionsQueue.Dequeue();
			this._zipCollectionViaAddress = (EntityCollection<ZipEntity>) collectionsQueue.Dequeue();
		}
		
		/// <summary>Determines whether the entity has populated member collections</summary>
		/// <returns>true if the entity has populated member collections.</returns>
		protected override bool HasPopulatedMemberEntityCollections()
		{
			if (this._accountCallCenterOrganization_ != null)
			{
				return true;
			}
			if (this._accountCallCenterOrganization != null)
			{
				return true;
			}
			if (this._accountHraChatQuestionnaire_ != null)
			{
				return true;
			}
			if (this._accountHraChatQuestionnaire != null)
			{
				return true;
			}
			if (this._accountTestHcpcsCode_ != null)
			{
				return true;
			}
			if (this._accountTestHcpcsCode != null)
			{
				return true;
			}
			if (this._activityType != null)
			{
				return true;
			}
			if (this._additionalFields_ != null)
			{
				return true;
			}
			if (this._additionalFields != null)
			{
				return true;
			}
			if (this._address != null)
			{
				return true;
			}
			if (this._advocateManagerTeam_ != null)
			{
				return true;
			}
			if (this._advocateManagerTeam != null)
			{
				return true;
			}
			if (this._afcampaign_ != null)
			{
				return true;
			}
			if (this._afcampaign != null)
			{
				return true;
			}
			if (this._affiliateProfile != null)
			{
				return true;
			}
			if (this._applicationAuthentication_ != null)
			{
				return true;
			}
			if (this._applicationAuthentication != null)
			{
				return true;
			}
			if (this._barrier_ != null)
			{
				return true;
			}
			if (this._barrier != null)
			{
				return true;
			}
			if (this._callCenterAgentTeam != null)
			{
				return true;
			}
			if (this._callCenterAgentTeamLog__ != null)
			{
				return true;
			}
			if (this._callCenterAgentTeamLog_ != null)
			{
				return true;
			}
			if (this._callCenterAgentTeamLog != null)
			{
				return true;
			}
			if (this._callCenterTeam_ != null)
			{
				return true;
			}
			if (this._callCenterTeam != null)
			{
				return true;
			}
			if (this._callQueue_ != null)
			{
				return true;
			}
			if (this._callQueue != null)
			{
				return true;
			}
			if (this._callQueueAssignment != null)
			{
				return true;
			}
			if (this._callQueueCustomer__ != null)
			{
				return true;
			}
			if (this._callQueueCustomer_ != null)
			{
				return true;
			}
			if (this._callQueueCustomer != null)
			{
				return true;
			}
			if (this._callQueueCustomerLock != null)
			{
				return true;
			}
			if (this._callQueueCustomTag != null)
			{
				return true;
			}
			if (this._callRoundCallQueue != null)
			{
				return true;
			}
			if (this._calls != null)
			{
				return true;
			}
			if (this._callUpload != null)
			{
				return true;
			}
			if (this._campaign_ != null)
			{
				return true;
			}
			if (this._campaign != null)
			{
				return true;
			}
			if (this._campaignActivity_ != null)
			{
				return true;
			}
			if (this._campaignActivity != null)
			{
				return true;
			}
			if (this._campaignActivityAssignment != null)
			{
				return true;
			}
			if (this._campaignAssignment != null)
			{
				return true;
			}
			if (this._cdcontentGeneratorTracking != null)
			{
				return true;
			}
			if (this._chaperoneAnswer_ != null)
			{
				return true;
			}
			if (this._chaperoneAnswer != null)
			{
				return true;
			}
			if (this._chaperoneSignature != null)
			{
				return true;
			}
			if (this._check_ != null)
			{
				return true;
			}
			if (this._check != null)
			{
				return true;
			}
			if (this._checkListAnswer_ != null)
			{
				return true;
			}
			if (this._checkListAnswer != null)
			{
				return true;
			}
			if (this._checkListTemplate_ != null)
			{
				return true;
			}
			if (this._checkListTemplate != null)
			{
				return true;
			}
			if (this._clinicalTestQualificationCriteria_ != null)
			{
				return true;
			}
			if (this._clinicalTestQualificationCriteria != null)
			{
				return true;
			}
			if (this._contactCall_ != null)
			{
				return true;
			}
			if (this._contactCall != null)
			{
				return true;
			}
			if (this._contactMeeting_ != null)
			{
				return true;
			}
			if (this._contactMeeting != null)
			{
				return true;
			}
			if (this._content_ != null)
			{
				return true;
			}
			if (this._content != null)
			{
				return true;
			}
			if (this._corporateTag_ != null)
			{
				return true;
			}
			if (this._corporateTag != null)
			{
				return true;
			}
			if (this._corporateUpload != null)
			{
				return true;
			}
			if (this._coupons_ != null)
			{
				return true;
			}
			if (this._coupons != null)
			{
				return true;
			}
			if (this._currentMedication != null)
			{
				return true;
			}
			if (this._customerActivityTypeUpload != null)
			{
				return true;
			}
			if (this._customerCallAttempts != null)
			{
				return true;
			}
			if (this._customerCallQueueCallAttempt != null)
			{
				return true;
			}
			if (this._customerClinicalQuestionAnswer_ != null)
			{
				return true;
			}
			if (this._customerClinicalQuestionAnswer != null)
			{
				return true;
			}
			if (this._customerEligibility_ != null)
			{
				return true;
			}
			if (this._customerEligibility != null)
			{
				return true;
			}
			if (this._customerEventCriticalTestData_ != null)
			{
				return true;
			}
			if (this._customerEventCriticalTestData != null)
			{
				return true;
			}
			if (this._customerEventPriorityInQueueData_ != null)
			{
				return true;
			}
			if (this._customerEventPriorityInQueueData != null)
			{
				return true;
			}
			if (this._customerEventReading != null)
			{
				return true;
			}
			if (this._customerEventTestPhysicianEvaluation != null)
			{
				return true;
			}
			if (this._customerEventTestState__ != null)
			{
				return true;
			}
			if (this._customerEventTestState_ != null)
			{
				return true;
			}
			if (this._customerEventTestState != null)
			{
				return true;
			}
			if (this._customerEventUnableScreenReason != null)
			{
				return true;
			}
			if (this._customerHealthInfo != null)
			{
				return true;
			}
			if (this._customerHealthInfoArchive != null)
			{
				return true;
			}
			if (this._customerIcdCode != null)
			{
				return true;
			}
			if (this._customerLockForCall != null)
			{
				return true;
			}
			if (this._customerMedicareQuestionAnswer != null)
			{
				return true;
			}
			if (this._customerPhoneNumberUpdateUpload != null)
			{
				return true;
			}
			if (this._customerPrimaryCarePhysician_ != null)
			{
				return true;
			}
			if (this._customerPrimaryCarePhysician__ != null)
			{
				return true;
			}
			if (this._customerPrimaryCarePhysician != null)
			{
				return true;
			}
			if (this._customerProfileHistory != null)
			{
				return true;
			}
			if (this._customerRegistrationNotes != null)
			{
				return true;
			}
			if (this._customerResultScreeningCommunication__ != null)
			{
				return true;
			}
			if (this._customerResultScreeningCommunication_ != null)
			{
				return true;
			}
			if (this._customerResultScreeningCommunication != null)
			{
				return true;
			}
			if (this._customerTag_ != null)
			{
				return true;
			}
			if (this._customerTag != null)
			{
				return true;
			}
			if (this._customerTargeted_ != null)
			{
				return true;
			}
			if (this._customerTargeted != null)
			{
				return true;
			}
			if (this._customerWarmTransfer_ != null)
			{
				return true;
			}
			if (this._customerWarmTransfer != null)
			{
				return true;
			}
			if (this._customEventNotification != null)
			{
				return true;
			}
			if (this._directMail != null)
			{
				return true;
			}
			if (this._directMailType_ != null)
			{
				return true;
			}
			if (this._directMailType != null)
			{
				return true;
			}
			if (this._disqualifiedTest_ != null)
			{
				return true;
			}
			if (this._disqualifiedTest != null)
			{
				return true;
			}
			if (this._eligibility != null)
			{
				return true;
			}
			if (this._eligibilityUpload != null)
			{
				return true;
			}
			if (this._emailTemplate != null)
			{
				return true;
			}
			if (this._eventAccountTestHcpcsCode_ != null)
			{
				return true;
			}
			if (this._eventAccountTestHcpcsCode != null)
			{
				return true;
			}
			if (this._eventActivityTemplate != null)
			{
				return true;
			}
			if (this._eventActivityTemplateCall != null)
			{
				return true;
			}
			if (this._eventActivityTemplateEmail != null)
			{
				return true;
			}
			if (this._eventActivityTemplateMeeting != null)
			{
				return true;
			}
			if (this._eventActivityTemplateTask != null)
			{
				return true;
			}
			if (this._eventAppointment != null)
			{
				return true;
			}
			if (this._eventAppointmentCancellationLog != null)
			{
				return true;
			}
			if (this._eventAppointmentChangeLog != null)
			{
				return true;
			}
			if (this._eventCustomerBasicBioMetric != null)
			{
				return true;
			}
			if (this._eventCustomerGiftCard != null)
			{
				return true;
			}
			if (this._eventCustomerPrimaryCarePhysician != null)
			{
				return true;
			}
			if (this._eventCustomerQuestionAnswer_ != null)
			{
				return true;
			}
			if (this._eventCustomerQuestionAnswer != null)
			{
				return true;
			}
			if (this._eventCustomerResult___ != null)
			{
				return true;
			}
			if (this._eventCustomerResult__ != null)
			{
				return true;
			}
			if (this._eventCustomerResult_ != null)
			{
				return true;
			}
			if (this._eventCustomerResult____ != null)
			{
				return true;
			}
			if (this._eventCustomerResult______ != null)
			{
				return true;
			}
			if (this._eventCustomerResult_______ != null)
			{
				return true;
			}
			if (this._eventCustomerResult != null)
			{
				return true;
			}
			if (this._eventCustomerResult_____ != null)
			{
				return true;
			}
			if (this._eventCustomerResult________ != null)
			{
				return true;
			}
			if (this._eventCustomerResultBloodLab != null)
			{
				return true;
			}
			if (this._eventCustomerResultHistory != null)
			{
				return true;
			}
			if (this._eventCustomerResultHistory_ != null)
			{
				return true;
			}
			if (this._eventCustomerResultHistory__ != null)
			{
				return true;
			}
			if (this._eventCustomerRetest != null)
			{
				return true;
			}
			if (this._eventCustomers_ != null)
			{
				return true;
			}
			if (this._eventCustomers != null)
			{
				return true;
			}
			if (this._eventCustomerTestNotPerformedNotification != null)
			{
				return true;
			}
			if (this._eventNote_ != null)
			{
				return true;
			}
			if (this._eventNote != null)
			{
				return true;
			}
			if (this._eventPhysicianTest__ != null)
			{
				return true;
			}
			if (this._eventPhysicianTest_ != null)
			{
				return true;
			}
			if (this._eventPhysicianTest != null)
			{
				return true;
			}
			if (this._events___ != null)
			{
				return true;
			}
			if (this._events____ != null)
			{
				return true;
			}
			if (this._events__ != null)
			{
				return true;
			}
			if (this._events != null)
			{
				return true;
			}
			if (this._events_ != null)
			{
				return true;
			}
			if (this._eventStaffAssignment__ != null)
			{
				return true;
			}
			if (this._eventStaffAssignment_ != null)
			{
				return true;
			}
			if (this._eventStaffAssignment != null)
			{
				return true;
			}
			if (this._exitInterviewAnswer_ != null)
			{
				return true;
			}
			if (this._exitInterviewAnswer != null)
			{
				return true;
			}
			if (this._exitInterviewSignature != null)
			{
				return true;
			}
			if (this._exportableReportsQueue != null)
			{
				return true;
			}
			if (this._file != null)
			{
				return true;
			}
			if (this._fillEventCallQueue != null)
			{
				return true;
			}
			if (this._fluConsentAnswer_ != null)
			{
				return true;
			}
			if (this._fluConsentAnswer != null)
			{
				return true;
			}
			if (this._fluConsentSignature != null)
			{
				return true;
			}
			if (this._fluConsentTemplate_ != null)
			{
				return true;
			}
			if (this._fluConsentTemplate != null)
			{
				return true;
			}
			if (this._gcNotGivenReason_ != null)
			{
				return true;
			}
			if (this._gcNotGivenReason != null)
			{
				return true;
			}
			if (this._guardianDetails_ != null)
			{
				return true;
			}
			if (this._guardianDetails != null)
			{
				return true;
			}
			if (this._hafTemplate_ != null)
			{
				return true;
			}
			if (this._hafTemplate != null)
			{
				return true;
			}
			if (this._hcpcsCode_ != null)
			{
				return true;
			}
			if (this._hcpcsCode != null)
			{
				return true;
			}
			if (this._healthPlanCallQueueCriteria__ != null)
			{
				return true;
			}
			if (this._healthPlanCallQueueCriteria_ != null)
			{
				return true;
			}
			if (this._healthPlanCriteriaAssignment__ != null)
			{
				return true;
			}
			if (this._healthPlanCriteriaAssignment_ != null)
			{
				return true;
			}
			if (this._healthPlanCriteriaAssignment != null)
			{
				return true;
			}
			if (this._healthPlanCriteriaAssignmentUpload != null)
			{
				return true;
			}
			if (this._healthPlanCriteriaTeamAssignment_ != null)
			{
				return true;
			}
			if (this._healthPlanCriteriaTeamAssignment != null)
			{
				return true;
			}
			if (this._healthPlanRevenue_ != null)
			{
				return true;
			}
			if (this._healthPlanRevenue != null)
			{
				return true;
			}
			if (this._hospitalPartnerCustomer__ != null)
			{
				return true;
			}
			if (this._hospitalPartnerCustomer_ != null)
			{
				return true;
			}
			if (this._hospitalPartnerCustomer != null)
			{
				return true;
			}
			if (this._hostFacilityRanking != null)
			{
				return true;
			}
			if (this._hostPayment != null)
			{
				return true;
			}
			if (this._hostPaymentTransaction != null)
			{
				return true;
			}
			if (this._icdCodes_ != null)
			{
				return true;
			}
			if (this._icdCodes != null)
			{
				return true;
			}
			if (this._incidentalFindings != null)
			{
				return true;
			}
			if (this._kynLabValues_ != null)
			{
				return true;
			}
			if (this._kynLabValues != null)
			{
				return true;
			}
			if (this._lab != null)
			{
				return true;
			}
			if (this._language != null)
			{
				return true;
			}
			if (this._languageBarrierCallQueue != null)
			{
				return true;
			}
			if (this._mailRoundCallQueue != null)
			{
				return true;
			}
			if (this._marketingPrintOrder != null)
			{
				return true;
			}
			if (this._medication_ != null)
			{
				return true;
			}
			if (this._medication != null)
			{
				return true;
			}
			if (this._medicationUpload != null)
			{
				return true;
			}
			if (this._mergeCustomerUpload != null)
			{
				return true;
			}
			if (this._noShowCallQueue != null)
			{
				return true;
			}
			if (this._notesDetails_ != null)
			{
				return true;
			}
			if (this._notesDetails != null)
			{
				return true;
			}
			if (this._notification != null)
			{
				return true;
			}
			if (this._notificationType != null)
			{
				return true;
			}
			if (this._organizationRoleUserTerritory != null)
			{
				return true;
			}
			if (this._orgRoleUserActivity != null)
			{
				return true;
			}
			if (this._participationConsentSignature != null)
			{
				return true;
			}
			if (this._passwordChangelog != null)
			{
				return true;
			}
			if (this._payPeriod_ != null)
			{
				return true;
			}
			if (this._payPeriod != null)
			{
				return true;
			}
			if (this._pcpAppointment_ != null)
			{
				return true;
			}
			if (this._pcpAppointment != null)
			{
				return true;
			}
			if (this._pcpDisposition_ != null)
			{
				return true;
			}
			if (this._pcpDisposition != null)
			{
				return true;
			}
			if (this._physicianRecordRequestSignature != null)
			{
				return true;
			}
			if (this._pinChangelog != null)
			{
				return true;
			}
			if (this._podDefaultTeam != null)
			{
				return true;
			}
			if (this._preApprovedPackage != null)
			{
				return true;
			}
			if (this._preApprovedTest != null)
			{
				return true;
			}
			if (this._preAssessmentCallQueueCustomerLock != null)
			{
				return true;
			}
			if (this._preAssessmentCustomerCallQueueCallAttempt != null)
			{
				return true;
			}
			if (this._preQualificationQuestion != null)
			{
				return true;
			}
			if (this._preQualificationTestTemplate_ != null)
			{
				return true;
			}
			if (this._preQualificationTestTemplate != null)
			{
				return true;
			}
			if (this._printOrderItemTracking_ != null)
			{
				return true;
			}
			if (this._printOrderItemTracking != null)
			{
				return true;
			}
			if (this._priorityInQueue_ != null)
			{
				return true;
			}
			if (this._priorityInQueue != null)
			{
				return true;
			}
			if (this._prospectCustomer != null)
			{
				return true;
			}
			if (this._prospects != null)
			{
				return true;
			}
			if (this._rapsUpload != null)
			{
				return true;
			}
			if (this._referral != null)
			{
				return true;
			}
			if (this._refundRequest_ != null)
			{
				return true;
			}
			if (this._refundRequest != null)
			{
				return true;
			}
			if (this._requiredTest != null)
			{
				return true;
			}
			if (this._salesRepPodAssigments != null)
			{
				return true;
			}
			if (this._scheduleTemplate_ != null)
			{
				return true;
			}
			if (this._scheduleTemplate != null)
			{
				return true;
			}
			if (this._seminars != null)
			{
				return true;
			}
			if (this._shippingDetail_ != null)
			{
				return true;
			}
			if (this._shippingDetail != null)
			{
				return true;
			}
			if (this._sourceCodeChangeLog != null)
			{
				return true;
			}
			if (this._staffEventScheduleUpload != null)
			{
				return true;
			}
			if (this._surveyAnswer_ != null)
			{
				return true;
			}
			if (this._surveyAnswer != null)
			{
				return true;
			}
			if (this._surveyTemplate_ != null)
			{
				return true;
			}
			if (this._surveyTemplate != null)
			{
				return true;
			}
			if (this._suspectConditionUpload != null)
			{
				return true;
			}
			if (this._systemGenertedCallQueueCriteria__ != null)
			{
				return true;
			}
			if (this._systemGenertedCallQueueCriteria_ != null)
			{
				return true;
			}
			if (this._systemGenertedCallQueueCriteria != null)
			{
				return true;
			}
			if (this._taskDetails__ != null)
			{
				return true;
			}
			if (this._taskDetails_ != null)
			{
				return true;
			}
			if (this._taskDetails != null)
			{
				return true;
			}
			if (this._territory != null)
			{
				return true;
			}
			if (this._testHcpcsCode_ != null)
			{
				return true;
			}
			if (this._testHcpcsCode != null)
			{
				return true;
			}
			if (this._testNotPerformed_ != null)
			{
				return true;
			}
			if (this._testNotPerformed != null)
			{
				return true;
			}
			if (this._testNotPerformedReason != null)
			{
				return true;
			}
			if (this._testPerformedExternally_ != null)
			{
				return true;
			}
			if (this._testPerformedExternally != null)
			{
				return true;
			}
			if (this._uncontactedCustomerCallQueue != null)
			{
				return true;
			}
			if (this._uploadZipInfo != null)
			{
				return true;
			}
			if (this._user__ != null)
			{
				return true;
			}
			if (this._user_ != null)
			{
				return true;
			}
			if (this._accountCollectionViaFillEventCallQueue != null)
			{
				return true;
			}
			if (this._accountCollectionViaMailRoundCallQueue != null)
			{
				return true;
			}
			if (this._accountCollectionViaEligibilityUpload != null)
			{
				return true;
			}
			if (this._accountCollectionViaCorporateUpload != null)
			{
				return true;
			}
			if (this._accountCollectionViaHealthPlanCallQueueCriteria != null)
			{
				return true;
			}
			if (this._accountCollectionViaCallQueueCustomer_ != null)
			{
				return true;
			}
			if (this._accountCollectionViaCallQueueCustomer != null)
			{
				return true;
			}
			if (this._accountCollectionViaCallQueueCustomer__ != null)
			{
				return true;
			}
			if (this._accountCollectionViaHealthPlanRevenue != null)
			{
				return true;
			}
			if (this._accountCollectionViaHealthPlanRevenue_ != null)
			{
				return true;
			}
			if (this._accountCollectionViaCorporateTag_ != null)
			{
				return true;
			}
			if (this._accountCollectionViaLanguageBarrierCallQueue != null)
			{
				return true;
			}
			if (this._accountCollectionViaEventNote != null)
			{
				return true;
			}
			if (this._accountCollectionViaCampaign != null)
			{
				return true;
			}
			if (this._accountCollectionViaEventNote_ != null)
			{
				return true;
			}
			if (this._accountCollectionViaCampaign_ != null)
			{
				return true;
			}
			if (this._accountCollectionViaHealthPlanCallQueueCriteria_ != null)
			{
				return true;
			}
			if (this._accountCollectionViaCorporateTag != null)
			{
				return true;
			}
			if (this._accountCollectionViaCallQueueCustomTag != null)
			{
				return true;
			}
			if (this._accountCollectionViaCalls != null)
			{
				return true;
			}
			if (this._accountCollectionViaCallRoundCallQueue != null)
			{
				return true;
			}
			if (this._accountCollectionViaAccountHraChatQuestionnaire_ != null)
			{
				return true;
			}
			if (this._accountCollectionViaAccountHraChatQuestionnaire != null)
			{
				return true;
			}
			if (this._accountCollectionViaUncontactedCustomerCallQueue != null)
			{
				return true;
			}
			if (this._accountCollectionViaCustomEventNotification != null)
			{
				return true;
			}
			if (this._accountCollectionViaNoShowCallQueue != null)
			{
				return true;
			}
			if (this._accountCollectionViaAccountCallCenterOrganization_ != null)
			{
				return true;
			}
			if (this._accountCollectionViaAccountCallCenterOrganization != null)
			{
				return true;
			}
			if (this._activityCollectionViaOrgRoleUserActivity != null)
			{
				return true;
			}
			if (this._activityTypeCollectionViaCallQueueCustomer != null)
			{
				return true;
			}
			if (this._activityTypeCollectionViaCallQueueCustomer__ != null)
			{
				return true;
			}
			if (this._activityTypeCollectionViaCallQueueCustomer_ != null)
			{
				return true;
			}
			if (this._addressCollectionViaCustomerPrimaryCarePhysician_ != null)
			{
				return true;
			}
			if (this._addressCollectionViaProspects != null)
			{
				return true;
			}
			if (this._addressCollectionViaCustomerPrimaryCarePhysician___ != null)
			{
				return true;
			}
			if (this._addressCollectionViaCustomerPrimaryCarePhysician____ != null)
			{
				return true;
			}
			if (this._addressCollectionViaUser != null)
			{
				return true;
			}
			if (this._addressCollectionViaUser_ != null)
			{
				return true;
			}
			if (this._addressCollectionViaShippingDetail != null)
			{
				return true;
			}
			if (this._addressCollectionViaHostPayment != null)
			{
				return true;
			}
			if (this._addressCollectionViaShippingDetail_ != null)
			{
				return true;
			}
			if (this._addressCollectionViaCustomerPrimaryCarePhysician != null)
			{
				return true;
			}
			if (this._addressCollectionViaCustomerPrimaryCarePhysician__ != null)
			{
				return true;
			}
			if (this._addressCollectionViaCustomerPrimaryCarePhysician_____ != null)
			{
				return true;
			}
			if (this._afadvertiserCollectionViaAfcampaign != null)
			{
				return true;
			}
			if (this._afadvertiserCollectionViaAfcampaign_ != null)
			{
				return true;
			}
			if (this._afaffiliateCampaignCollectionViaEventCustomers != null)
			{
				return true;
			}
			if (this._afaffiliateCampaignCollectionViaEventCustomers_ != null)
			{
				return true;
			}
			if (this._afaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer != null)
			{
				return true;
			}
			if (this._callCenterTeamCollectionViaCallCenterAgentTeam != null)
			{
				return true;
			}
			if (this._callCenterTeamCollectionViaCallCenterAgentTeamLog != null)
			{
				return true;
			}
			if (this._callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_ != null)
			{
				return true;
			}
			if (this._callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment != null)
			{
				return true;
			}
			if (this._callCenterTeamCollectionViaCallCenterAgentTeamLog_ != null)
			{
				return true;
			}
			if (this._callCenterTeamCollectionViaCallCenterAgentTeamLog__ != null)
			{
				return true;
			}
			if (this._callQueueCollectionViaCallQueueCustomer_ != null)
			{
				return true;
			}
			if (this._callQueueCollectionViaHealthPlanCallQueueCriteria__ != null)
			{
				return true;
			}
			if (this._callQueueCollectionViaCallQueueCustomer != null)
			{
				return true;
			}
			if (this._callQueueCollectionViaCalls != null)
			{
				return true;
			}
			if (this._callQueueCollectionViaCallQueueAssignment != null)
			{
				return true;
			}
			if (this._callQueueCollectionViaSystemGenertedCallQueueCriteria__ != null)
			{
				return true;
			}
			if (this._callQueueCollectionViaSystemGenertedCallQueueCriteria_ != null)
			{
				return true;
			}
			if (this._callQueueCollectionViaCallQueueCustomer__ != null)
			{
				return true;
			}
			if (this._callQueueCollectionViaHealthPlanCallQueueCriteria_ != null)
			{
				return true;
			}
			if (this._callQueueCollectionViaSystemGenertedCallQueueCriteria != null)
			{
				return true;
			}
			if (this._callQueueCriteriaCollectionViaCallQueueCustomer != null)
			{
				return true;
			}
			if (this._callQueueCriteriaCollectionViaCallQueueCustomer__ != null)
			{
				return true;
			}
			if (this._callQueueCriteriaCollectionViaCallQueueCustomer_ != null)
			{
				return true;
			}
			if (this._callQueueCustomerCollectionViaCustomerCallQueueCallAttempt != null)
			{
				return true;
			}
			if (this._callsCollectionViaCustomerCallQueueCallAttempt != null)
			{
				return true;
			}
			if (this._callsCollectionViaPreAssessmentCustomerCallQueueCallAttempt != null)
			{
				return true;
			}
			if (this._callUploadCollectionViaDirectMail != null)
			{
				return true;
			}
			if (this._campaignCollectionViaCallQueueCustomer__ != null)
			{
				return true;
			}
			if (this._campaignCollectionViaCampaignAssignment != null)
			{
				return true;
			}
			if (this._campaignCollectionViaCallQueueCustomer != null)
			{
				return true;
			}
			if (this._campaignCollectionViaCampaignActivity_ != null)
			{
				return true;
			}
			if (this._campaignCollectionViaHealthPlanCallQueueCriteria_ != null)
			{
				return true;
			}
			if (this._campaignCollectionViaCampaignActivity != null)
			{
				return true;
			}
			if (this._campaignCollectionViaCalls != null)
			{
				return true;
			}
			if (this._campaignCollectionViaEventCustomers_ != null)
			{
				return true;
			}
			if (this._campaignCollectionViaHealthPlanCallQueueCriteria != null)
			{
				return true;
			}
			if (this._campaignCollectionViaDirectMail != null)
			{
				return true;
			}
			if (this._campaignCollectionViaCallQueueCustomer_ != null)
			{
				return true;
			}
			if (this._campaignCollectionViaEventCustomers != null)
			{
				return true;
			}
			if (this._campaignActivityCollectionViaCampaignActivityAssignment != null)
			{
				return true;
			}
			if (this._chaperoneQuestionCollectionViaChaperoneAnswer != null)
			{
				return true;
			}
			if (this._chaperoneQuestionCollectionViaChaperoneAnswer_ != null)
			{
				return true;
			}
			if (this._checkListQuestionCollectionViaCheckListAnswer_ != null)
			{
				return true;
			}
			if (this._checkListQuestionCollectionViaCheckListAnswer != null)
			{
				return true;
			}
			if (this._checkListQuestionCollectionViaExitInterviewSignature != null)
			{
				return true;
			}
			if (this._cityCollectionViaAddress != null)
			{
				return true;
			}
			if (this._communicationModeCollectionViaEvents____ != null)
			{
				return true;
			}
			if (this._communicationModeCollectionViaEvents != null)
			{
				return true;
			}
			if (this._communicationModeCollectionViaEvents___ != null)
			{
				return true;
			}
			if (this._communicationModeCollectionViaEvents__ != null)
			{
				return true;
			}
			if (this._communicationModeCollectionViaEvents_ != null)
			{
				return true;
			}
			if (this._contactCallStatusCollectionViaContactCall != null)
			{
				return true;
			}
			if (this._contactCallStatusCollectionViaContactCall_ != null)
			{
				return true;
			}
			if (this._contactCallStatusCollectionViaContactMeeting_ != null)
			{
				return true;
			}
			if (this._contactCallStatusCollectionViaContactMeeting != null)
			{
				return true;
			}
			if (this._countryCollectionViaAddress != null)
			{
				return true;
			}
			if (this._couponTypeCollectionViaCoupons_ != null)
			{
				return true;
			}
			if (this._couponTypeCollectionViaCoupons != null)
			{
				return true;
			}
			if (this._customerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation != null)
			{
				return true;
			}
			if (this._customerEventScreeningTestsCollectionViaTestPerformedExternally_ != null)
			{
				return true;
			}
			if (this._customerEventScreeningTestsCollectionViaCustomerEventTestState != null)
			{
				return true;
			}
			if (this._customerEventScreeningTestsCollectionViaCustomerEventTestState_ != null)
			{
				return true;
			}
			if (this._customerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason != null)
			{
				return true;
			}
			if (this._customerEventScreeningTestsCollectionViaCustomerEventTestState__ != null)
			{
				return true;
			}
			if (this._customerEventScreeningTestsCollectionViaTestPerformedExternally != null)
			{
				return true;
			}
			if (this._customerEventScreeningTestsCollectionViaCustomerEventReading != null)
			{
				return true;
			}
			if (this._customerEventScreeningTestsCollectionViaTestNotPerformed != null)
			{
				return true;
			}
			if (this._customerEventScreeningTestsCollectionViaTestNotPerformed_ != null)
			{
				return true;
			}
			if (this._customerHealthQuestionsCollectionViaCustomerHealthInfo != null)
			{
				return true;
			}
			if (this._customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_ != null)
			{
				return true;
			}
			if (this._customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_ != null)
			{
				return true;
			}
			if (this._customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer != null)
			{
				return true;
			}
			if (this._customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__ != null)
			{
				return true;
			}
			if (this._customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___ != null)
			{
				return true;
			}
			if (this._customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria != null)
			{
				return true;
			}
			if (this._customerHealthQuestionsCollectionViaCustomerHealthInfoArchive != null)
			{
				return true;
			}
			if (this._customerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaFillEventCallQueue != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaDisqualifiedTest_ != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaCustomerEligibility_ != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaEventCustomerResult_____ != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaCustomerEligibility != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaLanguageBarrierCallQueue != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaEventCustomerQuestionAnswer != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaHospitalPartnerCustomer_ != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaHospitalPartnerCustomer__ != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaHospitalPartnerCustomer != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaDisqualifiedTest != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaCustomerPrimaryCarePhysician_ != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaCustomerPrimaryCarePhysician__ != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaNoShowCallQueue != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaCustomerPrimaryCarePhysician != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaCallQueueCustomer != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaCustomerHealthInfo != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaCallQueueCustomer__ != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaCallQueueCustomer_ != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaEventCustomerResult______ != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaCustomerIcdCode != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaMailRoundCallQueue != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaCustomerHealthInfoArchive != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaEventCustomerQuestionAnswer_ != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaRequiredTest != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaCustomerWarmTransfer_ != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaProspectCustomer != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaEventCustomerResult_ != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaEventCustomerResult__ != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaUncontactedCustomerCallQueue != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaCustomerWarmTransfer != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaMedication_ != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaCallRoundCallQueue != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaCustomerTag_ != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaReferral != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaCustomerTargeted_ != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaCustomerTargeted != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaCustomerTag != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaMedication != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaEventCustomerResult________ != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaEventCustomerResult != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaEventCustomerResult_______ != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaDirectMail != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaEventCustomerResult____ != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaCurrentMedication != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaGuardianDetails != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaEventCustomers != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaEventCustomers_ != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaCustomerCallQueueCallAttempt != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaEventCustomerResult___ != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaCustomerProfileHistory != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaCustomerClinicalQuestionAnswer != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaCustomerClinicalQuestionAnswer_ != null)
			{
				return true;
			}
			if (this._customerProfileCollectionViaGuardianDetails_ != null)
			{
				return true;
			}
			if (this._customerProfileHistoryCollectionViaEventCustomers_ != null)
			{
				return true;
			}
			if (this._customerProfileHistoryCollectionViaEventCustomers != null)
			{
				return true;
			}
			if (this._customerRegistrationNotesCollectionViaEventAppointmentCancellationLog != null)
			{
				return true;
			}
			if (this._customerRegistrationNotesCollectionViaEventCustomers_ != null)
			{
				return true;
			}
			if (this._customerRegistrationNotesCollectionViaEventCustomers != null)
			{
				return true;
			}
			if (this._directMailTypeCollectionViaDirectMail != null)
			{
				return true;
			}
			if (this._directMailTypeCollectionViaCampaignActivity != null)
			{
				return true;
			}
			if (this._directMailTypeCollectionViaCampaignActivity_ != null)
			{
				return true;
			}
			if (this._eventActivityTemplateCollectionViaEventActivityTemplateMeeting != null)
			{
				return true;
			}
			if (this._eventActivityTemplateCollectionViaEventActivityTemplateTask != null)
			{
				return true;
			}
			if (this._eventActivityTemplateCollectionViaEventActivityTemplateCall != null)
			{
				return true;
			}
			if (this._eventActivityTemplateCollectionViaEventActivityTemplateEmail != null)
			{
				return true;
			}
			if (this._eventAppointmentCollectionViaEventCustomers != null)
			{
				return true;
			}
			if (this._eventAppointmentCollectionViaEventCustomers_ != null)
			{
				return true;
			}
			if (this._eventCustomerResultCollectionViaCustomerResultScreeningCommunication != null)
			{
				return true;
			}
			if (this._eventCustomerResultCollectionViaPriorityInQueue_ != null)
			{
				return true;
			}
			if (this._eventCustomerResultCollectionViaKynLabValues != null)
			{
				return true;
			}
			if (this._eventCustomerResultCollectionViaCustomerResultScreeningCommunication__ != null)
			{
				return true;
			}
			if (this._eventCustomerResultCollectionViaCustomerResultScreeningCommunication_ != null)
			{
				return true;
			}
			if (this._eventCustomerResultCollectionViaCdcontentGeneratorTracking != null)
			{
				return true;
			}
			if (this._eventCustomerResultCollectionViaKynLabValues_ != null)
			{
				return true;
			}
			if (this._eventCustomerResultCollectionViaPriorityInQueue != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaDisqualifiedTest_ != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaEventAppointmentChangeLog != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaDisqualifiedTest != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaEventCustomerPrimaryCarePhysician != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaEventCustomerQuestionAnswer_ != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaEventAppointmentCancellationLog != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaEventCustomerQuestionAnswer != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaEventCustomerGiftCard != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaSurveyAnswer != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaEventCustomerTestNotPerformedNotification != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaPhysicianRecordRequestSignature != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaEventCustomerRetest != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaPcpDisposition != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaPcpDisposition_ != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaChaperoneSignature != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaChaperoneAnswer_ != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaChaperoneAnswer != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaCallQueueCustomer__ != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaCheckListAnswer_ != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaCallQueueCustomer != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaCallQueueCustomer_ != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaCustomerHealthInfo != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaExitInterviewSignature != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaFluConsentAnswer != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaExitInterviewAnswer_ != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaCheckListAnswer != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaExitInterviewAnswer != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaFluConsentAnswer_ != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaSurveyAnswer_ != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaCustomerHealthInfoArchive != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaCustomerMedicareQuestionAnswer != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaFluConsentSignature != null)
			{
				return true;
			}
			if (this._eventCustomersCollectionViaParticipationConsentSignature != null)
			{
				return true;
			}
			if (this._eventsCollectionViaEventCustomerQuestionAnswer != null)
			{
				return true;
			}
			if (this._eventsCollectionViaEventPhysicianTest__ != null)
			{
				return true;
			}
			if (this._eventsCollectionViaEventStaffAssignment__ != null)
			{
				return true;
			}
			if (this._eventsCollectionViaEventStaffAssignment_ != null)
			{
				return true;
			}
			if (this._eventsCollectionViaEventCustomers != null)
			{
				return true;
			}
			if (this._eventsCollectionViaEventCustomerResult____ != null)
			{
				return true;
			}
			if (this._eventsCollectionViaEventCustomerResult___ != null)
			{
				return true;
			}
			if (this._eventsCollectionViaHospitalPartnerCustomer_ != null)
			{
				return true;
			}
			if (this._eventsCollectionViaEventCustomerResult_ != null)
			{
				return true;
			}
			if (this._eventsCollectionViaEventCustomerResult________ != null)
			{
				return true;
			}
			if (this._eventsCollectionViaEventCustomerResult______ != null)
			{
				return true;
			}
			if (this._eventsCollectionViaEventCustomerResult__ != null)
			{
				return true;
			}
			if (this._eventsCollectionViaEventCustomerResult_______ != null)
			{
				return true;
			}
			if (this._eventsCollectionViaEventPhysicianTest_ != null)
			{
				return true;
			}
			if (this._eventsCollectionViaEventPhysicianTest != null)
			{
				return true;
			}
			if (this._eventsCollectionViaEventCustomerQuestionAnswer_ != null)
			{
				return true;
			}
			if (this._eventsCollectionViaHospitalPartnerCustomer__ != null)
			{
				return true;
			}
			if (this._eventsCollectionViaEventCustomerResult != null)
			{
				return true;
			}
			if (this._eventsCollectionViaHospitalPartnerCustomer != null)
			{
				return true;
			}
			if (this._eventsCollectionViaEventCustomerResult_____ != null)
			{
				return true;
			}
			if (this._eventsCollectionViaEventCustomers_ != null)
			{
				return true;
			}
			if (this._eventsCollectionViaEventAccountTestHcpcsCode != null)
			{
				return true;
			}
			if (this._eventsCollectionViaCustomerRegistrationNotes != null)
			{
				return true;
			}
			if (this._eventsCollectionViaCallQueueCustomer != null)
			{
				return true;
			}
			if (this._eventsCollectionViaEventAccountTestHcpcsCode_ != null)
			{
				return true;
			}
			if (this._eventsCollectionViaSeminars != null)
			{
				return true;
			}
			if (this._eventsCollectionViaDisqualifiedTest_ != null)
			{
				return true;
			}
			if (this._eventsCollectionViaDisqualifiedTest != null)
			{
				return true;
			}
			if (this._eventsCollectionViaCustomEventNotification != null)
			{
				return true;
			}
			if (this._eventsCollectionViaCallQueueCustomer__ != null)
			{
				return true;
			}
			if (this._eventsCollectionViaCustomerClinicalQuestionAnswer != null)
			{
				return true;
			}
			if (this._eventsCollectionViaCustomerClinicalQuestionAnswer_ != null)
			{
				return true;
			}
			if (this._eventsCollectionViaEventAppointmentChangeLog != null)
			{
				return true;
			}
			if (this._eventsCollectionViaEventAppointmentChangeLog_ != null)
			{
				return true;
			}
			if (this._eventsCollectionViaCallQueueCustomer_ != null)
			{
				return true;
			}
			if (this._eventsCollectionViaHostPayment != null)
			{
				return true;
			}
			if (this._eventsCollectionViaEventStaffAssignment != null)
			{
				return true;
			}
			if (this._eventsCollectionViaEventAppointmentCancellationLog != null)
			{
				return true;
			}
			if (this._eventTypeCollectionViaEvents != null)
			{
				return true;
			}
			if (this._eventTypeCollectionViaEvents____ != null)
			{
				return true;
			}
			if (this._eventTypeCollectionViaEvents___ != null)
			{
				return true;
			}
			if (this._eventTypeCollectionViaEvents_ != null)
			{
				return true;
			}
			if (this._eventTypeCollectionViaEvents__ != null)
			{
				return true;
			}
			if (this._exitInterviewQuestionCollectionViaExitInterviewAnswer_ != null)
			{
				return true;
			}
			if (this._exitInterviewQuestionCollectionViaExitInterviewAnswer != null)
			{
				return true;
			}
			if (this._exportableReportsCollectionViaExportableReportsQueue != null)
			{
				return true;
			}
			if (this._fileCollectionViaCustomerActivityTypeUpload_ != null)
			{
				return true;
			}
			if (this._fileCollectionViaCorporateUpload != null)
			{
				return true;
			}
			if (this._fileCollectionViaStaffEventScheduleUpload != null)
			{
				return true;
			}
			if (this._fileCollectionViaCorporateUpload_ != null)
			{
				return true;
			}
			if (this._fileCollectionViaPhysicianRecordRequestSignature != null)
			{
				return true;
			}
			if (this._fileCollectionViaCustomerActivityTypeUpload != null)
			{
				return true;
			}
			if (this._fileCollectionViaRapsUpload_ != null)
			{
				return true;
			}
			if (this._fileCollectionViaCallUpload_ != null)
			{
				return true;
			}
			if (this._fileCollectionViaChaperoneSignature_ != null)
			{
				return true;
			}
			if (this._fileCollectionViaRapsUpload != null)
			{
				return true;
			}
			if (this._fileCollectionViaChaperoneSignature != null)
			{
				return true;
			}
			if (this._fileCollectionViaCorporateUpload__ != null)
			{
				return true;
			}
			if (this._fileCollectionViaCallUpload != null)
			{
				return true;
			}
			if (this._fileCollectionViaHealthPlanCriteriaAssignmentUpload != null)
			{
				return true;
			}
			if (this._fileCollectionViaParticipationConsentSignature_ != null)
			{
				return true;
			}
			if (this._fileCollectionViaMergeCustomerUpload != null)
			{
				return true;
			}
			if (this._fileCollectionViaMedicationUpload_ != null)
			{
				return true;
			}
			if (this._fileCollectionViaMedicationUpload != null)
			{
				return true;
			}
			if (this._fileCollectionViaFluConsentSignature_ != null)
			{
				return true;
			}
			if (this._fileCollectionViaFluConsentSignature != null)
			{
				return true;
			}
			if (this._fileCollectionViaMergeCustomerUpload_ != null)
			{
				return true;
			}
			if (this._fileCollectionViaExitInterviewSignature != null)
			{
				return true;
			}
			if (this._fileCollectionViaEventCustomerGiftCard_ != null)
			{
				return true;
			}
			if (this._fileCollectionViaEventCustomerGiftCard != null)
			{
				return true;
			}
			if (this._fileCollectionViaEligibilityUpload != null)
			{
				return true;
			}
			if (this._fileCollectionViaEligibilityUpload_ != null)
			{
				return true;
			}
			if (this._fileCollectionViaExportableReportsQueue != null)
			{
				return true;
			}
			if (this._fileCollectionViaSuspectConditionUpload != null)
			{
				return true;
			}
			if (this._fileCollectionViaStaffEventScheduleUpload_ != null)
			{
				return true;
			}
			if (this._fileCollectionViaParticipationConsentSignature != null)
			{
				return true;
			}
			if (this._fileCollectionViaCustomerPhoneNumberUpdateUpload_ != null)
			{
				return true;
			}
			if (this._fileCollectionViaCustomerPhoneNumberUpdateUpload != null)
			{
				return true;
			}
			if (this._fileCollectionViaSuspectConditionUpload_ != null)
			{
				return true;
			}
			if (this._fluConsentQuestionCollectionViaFluConsentAnswer != null)
			{
				return true;
			}
			if (this._fluConsentQuestionCollectionViaFluConsentAnswer_ != null)
			{
				return true;
			}
			if (this._gcNotGivenReasonCollectionViaEventCustomers != null)
			{
				return true;
			}
			if (this._gcNotGivenReasonCollectionViaEventCustomers_ != null)
			{
				return true;
			}
			if (this._hafTemplateCollectionViaClinicalTestQualificationCriteria != null)
			{
				return true;
			}
			if (this._hafTemplateCollectionViaEvents___ != null)
			{
				return true;
			}
			if (this._hafTemplateCollectionViaEvents != null)
			{
				return true;
			}
			if (this._hafTemplateCollectionViaEvents____ != null)
			{
				return true;
			}
			if (this._hafTemplateCollectionViaEvents_ != null)
			{
				return true;
			}
			if (this._hafTemplateCollectionViaCustomerClinicalQuestionAnswer != null)
			{
				return true;
			}
			if (this._hafTemplateCollectionViaEvents__ != null)
			{
				return true;
			}
			if (this._hafTemplateCollectionViaCustomerClinicalQuestionAnswer_ != null)
			{
				return true;
			}
			if (this._hafTemplateCollectionViaClinicalTestQualificationCriteria_ != null)
			{
				return true;
			}
			if (this._hcpcsCodeCollectionViaTestHcpcsCode_ != null)
			{
				return true;
			}
			if (this._hcpcsCodeCollectionViaTestHcpcsCode != null)
			{
				return true;
			}
			if (this._healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload != null)
			{
				return true;
			}
			if (this._healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment != null)
			{
				return true;
			}
			if (this._healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_ != null)
			{
				return true;
			}
			if (this._healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment != null)
			{
				return true;
			}
			if (this._healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__ != null)
			{
				return true;
			}
			if (this._healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_ != null)
			{
				return true;
			}
			if (this._hospitalFacilityCollectionViaEventCustomers != null)
			{
				return true;
			}
			if (this._hospitalFacilityCollectionViaEventCustomers_ != null)
			{
				return true;
			}
			if (this._hostPaymentCollectionViaHostPaymentTransaction != null)
			{
				return true;
			}
			if (this._icdCodesCollectionViaCustomerIcdCode != null)
			{
				return true;
			}
			if (this._insuranceCompanyCollectionViaEligibility != null)
			{
				return true;
			}
			if (this._languageCollectionViaHealthPlanCallQueueCriteria != null)
			{
				return true;
			}
			if (this._languageCollectionViaCallQueueCustomer_ != null)
			{
				return true;
			}
			if (this._languageCollectionViaCallQueueCustomer__ != null)
			{
				return true;
			}
			if (this._languageCollectionViaCallQueueCustomer != null)
			{
				return true;
			}
			if (this._languageCollectionViaHealthPlanCallQueueCriteria_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaUncontactedCustomerCallQueue != null)
			{
				return true;
			}
			if (this._lookupCollectionViaFillEventCallQueue != null)
			{
				return true;
			}
			if (this._lookupCollectionViaTestPerformedExternally_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaLanguageBarrierCallQueue != null)
			{
				return true;
			}
			if (this._lookupCollectionViaMedicationUpload != null)
			{
				return true;
			}
			if (this._lookupCollectionViaHostFacilityRanking != null)
			{
				return true;
			}
			if (this._lookupCollectionViaHostFacilityRanking_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaMailRoundCallQueue != null)
			{
				return true;
			}
			if (this._lookupCollectionViaHostPaymentTransaction_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaHostPayment != null)
			{
				return true;
			}
			if (this._lookupCollectionViaHostPaymentTransaction != null)
			{
				return true;
			}
			if (this._lookupCollectionViaHostPayment_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaKynLabValues != null)
			{
				return true;
			}
			if (this._lookupCollectionViaExportableReportsQueue != null)
			{
				return true;
			}
			if (this._lookupCollectionViaFile != null)
			{
				return true;
			}
			if (this._lookupCollectionViaTestPerformedExternally != null)
			{
				return true;
			}
			if (this._lookupCollectionViaKynLabValues_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaPreQualificationQuestion != null)
			{
				return true;
			}
			if (this._lookupCollectionViaPrintOrderItemTracking__ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaPcpDisposition_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaPcpAppointment_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaPcpDisposition != null)
			{
				return true;
			}
			if (this._lookupCollectionViaRefundRequest != null)
			{
				return true;
			}
			if (this._lookupCollectionViaRapsUpload != null)
			{
				return true;
			}
			if (this._lookupCollectionViaRefundRequest_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaPrintOrderItemTracking___ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaProspectCustomer != null)
			{
				return true;
			}
			if (this._lookupCollectionViaPcpAppointment != null)
			{
				return true;
			}
			if (this._lookupCollectionViaHafTemplate != null)
			{
				return true;
			}
			if (this._lookupCollectionViaHafTemplate_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaSuspectConditionUpload != null)
			{
				return true;
			}
			if (this._lookupCollectionViaMergeCustomerUpload != null)
			{
				return true;
			}
			if (this._lookupCollectionViaNoShowCallQueue != null)
			{
				return true;
			}
			if (this._lookupCollectionViaStaffEventScheduleUpload != null)
			{
				return true;
			}
			if (this._lookupCollectionViaHealthPlanRevenue != null)
			{
				return true;
			}
			if (this._lookupCollectionViaHealthPlanRevenue_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaHafTemplate__ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaHafTemplate___ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCustomerProfileHistory___ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCustomerProfileHistory__ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCustomerProfileHistory != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCustomEventNotification != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCustomerRegistrationNotes != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCustomerProfileHistory_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCustomerPrimaryCarePhysician__ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCustomerEventTestState__ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCustomerEventTestState_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCustomerEventTestState != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCustomerPrimaryCarePhysician_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCustomerPrimaryCarePhysician != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCustomerPhoneNumberUpdateUpload != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEligibilityUpload != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEventCustomerResult__ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEventCustomerResult______ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEventCustomerResult_____ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEventCustomerResult_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEventCustomerResult____ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEventCustomerResult___ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEventCustomerResult________ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEventAppointmentCancellationLog != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEmailTemplate_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEmailTemplate != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEventCustomerResult_______ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEventCustomerResult != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEventAppointmentChangeLog != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCustomerActivityTypeUpload != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCalls != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCalls_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCallRoundCallQueue != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCampaign != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCallUpload != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCalls__ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCallQueueCustomer__ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCallCenterTeam != null)
			{
				return true;
			}
			if (this._lookupCollectionViaAccountHraChatQuestionnaire_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaAccountHraChatQuestionnaire != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCallQueueCustomer_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCallQueueCustomer != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCallCenterTeam_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCampaign_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaClinicalTestQualificationCriteria_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaClinicalTestQualificationCriteria != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCheckListTemplate_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCorporateUpload != null)
			{
				return true;
			}
			if (this._lookupCollectionViaClinicalTestQualificationCriteria___ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaClinicalTestQualificationCriteria__ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCheckListTemplate != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCampaignActivity != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCampaign___ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCampaign__ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCheckListAnswer_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCheckListAnswer != null)
			{
				return true;
			}
			if (this._lookupCollectionViaCampaignActivity_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEvents________ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEvents______________ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEvents_________ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEvents_____________ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEvents___________________ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEvents__________________ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEvents_______________ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEvents_______________________ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEvents____________ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEvents____ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEvents________________ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEvents_______ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEvents_____ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEvents__________ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEvents_________________ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEvents___________ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEvents______________________ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEvents != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEvents______ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEvents__ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEventCustomers___ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEventCustomers != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEventCustomers_ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEventCustomers__ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEvents___ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEvents________________________ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEvents____________________ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEvents_____________________ != null)
			{
				return true;
			}
			if (this._lookupCollectionViaEvents_ != null)
			{
				return true;
			}
			if (this._marketingPrintOrderItemCollectionViaPrintOrderItemTracking != null)
			{
				return true;
			}
			if (this._marketingPrintOrderItemCollectionViaPrintOrderItemTracking_ != null)
			{
				return true;
			}
			if (this._medicareQuestionCollectionViaCustomerMedicareQuestionAnswer != null)
			{
				return true;
			}
			if (this._ndcCollectionViaCurrentMedication != null)
			{
				return true;
			}
			if (this._notesDetailsCollectionViaPriorityInQueue != null)
			{
				return true;
			}
			if (this._notesDetailsCollectionViaPriorityInQueue_ != null)
			{
				return true;
			}
			if (this._notesDetailsCollectionViaCallQueueCustomer_ != null)
			{
				return true;
			}
			if (this._notesDetailsCollectionViaEvents != null)
			{
				return true;
			}
			if (this._notesDetailsCollectionViaCallQueueCustomer__ != null)
			{
				return true;
			}
			if (this._notesDetailsCollectionViaEvents_ != null)
			{
				return true;
			}
			if (this._notesDetailsCollectionViaEvents___ != null)
			{
				return true;
			}
			if (this._notesDetailsCollectionViaCallQueueCustomer != null)
			{
				return true;
			}
			if (this._notesDetailsCollectionViaEvents____ != null)
			{
				return true;
			}
			if (this._notesDetailsCollectionViaEvents__ != null)
			{
				return true;
			}
			if (this._notificationMediumCollectionViaNotificationType != null)
			{
				return true;
			}
			if (this._notificationMediumCollectionViaNotification != null)
			{
				return true;
			}
			if (this._notificationTypeCollectionViaEventCustomerTestNotPerformedNotification != null)
			{
				return true;
			}
			if (this._notificationTypeCollectionViaEmailTemplate != null)
			{
				return true;
			}
			if (this._notificationTypeCollectionViaNotification != null)
			{
				return true;
			}
			if (this._orderCollectionViaRefundRequest_ != null)
			{
				return true;
			}
			if (this._orderCollectionViaRefundRequest != null)
			{
				return true;
			}
			if (this._organizationCollectionViaAccountTestHcpcsCode_ != null)
			{
				return true;
			}
			if (this._organizationCollectionViaAccountTestHcpcsCode != null)
			{
				return true;
			}
			if (this._organizationCollectionViaAccountCallCenterOrganization != null)
			{
				return true;
			}
			if (this._organizationCollectionViaAccountCallCenterOrganization_ != null)
			{
				return true;
			}
			if (this._organizationCollectionViaEventAccountTestHcpcsCode_ != null)
			{
				return true;
			}
			if (this._organizationCollectionViaEventAccountTestHcpcsCode != null)
			{
				return true;
			}
			if (this._organizationCollectionViaMarketingPrintOrder != null)
			{
				return true;
			}
			if (this._organizationCollectionViaMarketingPrintOrder_ != null)
			{
				return true;
			}
			if (this._organizationCollectionViaAffiliateProfile != null)
			{
				return true;
			}
			if (this._packageCollectionViaPreApprovedPackage != null)
			{
				return true;
			}
			if (this._physicianMasterCollectionViaCustomerPrimaryCarePhysician != null)
			{
				return true;
			}
			if (this._physicianMasterCollectionViaCustomerPrimaryCarePhysician_ != null)
			{
				return true;
			}
			if (this._physicianMasterCollectionViaCustomerPrimaryCarePhysician__ != null)
			{
				return true;
			}
			if (this._podDetailsCollectionViaSalesRepPodAssigments != null)
			{
				return true;
			}
			if (this._podDetailsCollectionViaEventStaffAssignment != null)
			{
				return true;
			}
			if (this._podDetailsCollectionViaEventNote_ != null)
			{
				return true;
			}
			if (this._podDetailsCollectionViaEventNote != null)
			{
				return true;
			}
			if (this._podDetailsCollectionViaPodDefaultTeam != null)
			{
				return true;
			}
			if (this._podDetailsCollectionViaEventStaffAssignment_ != null)
			{
				return true;
			}
			if (this._podDetailsCollectionViaEventStaffAssignment__ != null)
			{
				return true;
			}
			if (this._preQualificationQuestionCollectionViaEventCustomerQuestionAnswer_ != null)
			{
				return true;
			}
			if (this._preQualificationQuestionCollectionViaDisqualifiedTest != null)
			{
				return true;
			}
			if (this._preQualificationQuestionCollectionViaDisqualifiedTest_ != null)
			{
				return true;
			}
			if (this._preQualificationQuestionCollectionViaEventCustomerQuestionAnswer != null)
			{
				return true;
			}
			if (this._prospectCustomerCollectionViaCallQueueCustomer_ != null)
			{
				return true;
			}
			if (this._prospectCustomerCollectionViaCallQueueCustomer != null)
			{
				return true;
			}
			if (this._prospectCustomerCollectionViaCallQueueCustomer__ != null)
			{
				return true;
			}
			if (this._prospectListDetailsCollectionViaProspects != null)
			{
				return true;
			}
			if (this._prospectsCollectionViaHostFacilityRanking != null)
			{
				return true;
			}
			if (this._prospectsCollectionViaHostPayment != null)
			{
				return true;
			}
			if (this._prospectTypeCollectionViaProspects != null)
			{
				return true;
			}
			if (this._refundRequestCollectionViaEventAppointmentCancellationLog != null)
			{
				return true;
			}
			if (this._relationshipCollectionViaGuardianDetails_ != null)
			{
				return true;
			}
			if (this._relationshipCollectionViaGuardianDetails != null)
			{
				return true;
			}
			if (this._rescheduleCancelDispositionCollectionViaEventAppointmentChangeLog != null)
			{
				return true;
			}
			if (this._rescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog != null)
			{
				return true;
			}
			if (this._roleCollectionViaUser != null)
			{
				return true;
			}
			if (this._roleCollectionViaHostFacilityRanking != null)
			{
				return true;
			}
			if (this._roleCollectionViaUser_ != null)
			{
				return true;
			}
			if (this._scheduleMethodCollectionViaEvents___ != null)
			{
				return true;
			}
			if (this._scheduleMethodCollectionViaEvents____ != null)
			{
				return true;
			}
			if (this._scheduleMethodCollectionViaEvents != null)
			{
				return true;
			}
			if (this._scheduleMethodCollectionViaEvents_ != null)
			{
				return true;
			}
			if (this._scheduleMethodCollectionViaEvents__ != null)
			{
				return true;
			}
			if (this._scriptsCollectionViaCallQueue != null)
			{
				return true;
			}
			if (this._scriptsCollectionViaCallQueue_ != null)
			{
				return true;
			}
			if (this._shippingOptionCollectionViaShippingDetail_ != null)
			{
				return true;
			}
			if (this._shippingOptionCollectionViaShippingDetail != null)
			{
				return true;
			}
			if (this._staffEventRoleCollectionViaEventStaffAssignment__ != null)
			{
				return true;
			}
			if (this._staffEventRoleCollectionViaPodDefaultTeam != null)
			{
				return true;
			}
			if (this._staffEventRoleCollectionViaEventStaffAssignment != null)
			{
				return true;
			}
			if (this._staffEventRoleCollectionViaEventStaffAssignment_ != null)
			{
				return true;
			}
			if (this._standardFindingTestReadingCollectionViaCustomerEventReading != null)
			{
				return true;
			}
			if (this._stateCollectionViaAddress != null)
			{
				return true;
			}
			if (this._surveyQuestionCollectionViaSurveyAnswer_ != null)
			{
				return true;
			}
			if (this._surveyQuestionCollectionViaSurveyAnswer != null)
			{
				return true;
			}
			if (this._tagCollectionViaPreAssessmentCustomerCallQueueCallAttempt != null)
			{
				return true;
			}
			if (this._tagCollectionViaCustomerCallQueueCallAttempt != null)
			{
				return true;
			}
			if (this._taskPriorityTypesCollectionViaTaskDetails__ != null)
			{
				return true;
			}
			if (this._taskPriorityTypesCollectionViaTaskDetails_ != null)
			{
				return true;
			}
			if (this._taskPriorityTypesCollectionViaTaskDetails != null)
			{
				return true;
			}
			if (this._taskStatusTypesCollectionViaTaskDetails_ != null)
			{
				return true;
			}
			if (this._taskStatusTypesCollectionViaTaskDetails__ != null)
			{
				return true;
			}
			if (this._taskStatusTypesCollectionViaTaskDetails != null)
			{
				return true;
			}
			if (this._technicianProfileCollectionViaPinChangelog != null)
			{
				return true;
			}
			if (this._territoryCollectionViaTerritory != null)
			{
				return true;
			}
			if (this._territoryCollectionViaOrganizationRoleUserTerritory != null)
			{
				return true;
			}
			if (this._testCollectionViaEventCustomerTestNotPerformedNotification != null)
			{
				return true;
			}
			if (this._testCollectionViaEventPhysicianTest != null)
			{
				return true;
			}
			if (this._testCollectionViaDisqualifiedTest_ != null)
			{
				return true;
			}
			if (this._testCollectionViaEventCustomerRetest != null)
			{
				return true;
			}
			if (this._testCollectionViaEventPhysicianTest_ != null)
			{
				return true;
			}
			if (this._testCollectionViaKynLabValues_ != null)
			{
				return true;
			}
			if (this._testCollectionViaEventPhysicianTest__ != null)
			{
				return true;
			}
			if (this._testCollectionViaTestHcpcsCode_ != null)
			{
				return true;
			}
			if (this._testCollectionViaTestHcpcsCode != null)
			{
				return true;
			}
			if (this._testCollectionViaKynLabValues != null)
			{
				return true;
			}
			if (this._testCollectionViaPreApprovedTest != null)
			{
				return true;
			}
			if (this._testCollectionViaClinicalTestQualificationCriteria != null)
			{
				return true;
			}
			if (this._testCollectionViaRequiredTest != null)
			{
				return true;
			}
			if (this._testCollectionViaClinicalTestQualificationCriteria_ != null)
			{
				return true;
			}
			if (this._testCollectionViaDisqualifiedTest != null)
			{
				return true;
			}
			if (this._testCollectionViaPreQualificationTestTemplate != null)
			{
				return true;
			}
			if (this._testCollectionViaPreQualificationTestTemplate_ != null)
			{
				return true;
			}
			if (this._testCollectionViaPreQualificationQuestion != null)
			{
				return true;
			}
			if (this._testHcpcsCodeCollectionViaEventAccountTestHcpcsCode_ != null)
			{
				return true;
			}
			if (this._testHcpcsCodeCollectionViaEventAccountTestHcpcsCode != null)
			{
				return true;
			}
			if (this._testHcpcsCodeCollectionViaAccountTestHcpcsCode_ != null)
			{
				return true;
			}
			if (this._testHcpcsCodeCollectionViaAccountTestHcpcsCode != null)
			{
				return true;
			}
			if (this._testNotPerformedReasonCollectionViaTestNotPerformed_ != null)
			{
				return true;
			}
			if (this._testNotPerformedReasonCollectionViaTestNotPerformed != null)
			{
				return true;
			}
			if (this._testReadingCollectionViaCustomerEventReading != null)
			{
				return true;
			}
			if (this._testUnableScreenReasonCollectionViaCustomerEventUnableScreenReason != null)
			{
				return true;
			}
			if (this._userLoginCollectionViaPasswordChangelog != null)
			{
				return true;
			}
			if (this._zipCollectionViaAddress != null)
			{
				return true;
			}
			return base.HasPopulatedMemberEntityCollections();
		}
		
		/// <summary>Creates the member entity collections queue.</summary>
		/// <param name="collectionsQueue">The collections queue.</param>
		/// <param name="requiredQueue">The required queue.</param>
		protected override void CreateMemberEntityCollectionsQueue(Queue<IEntityCollection2> collectionsQueue, Queue<bool> requiredQueue) 
		{
			base.CreateMemberEntityCollectionsQueue(collectionsQueue, requiredQueue);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountCallCenterOrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountCallCenterOrganizationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountCallCenterOrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountCallCenterOrganizationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountHraChatQuestionnaireEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountHraChatQuestionnaireEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountHraChatQuestionnaireEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountHraChatQuestionnaireEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountTestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountTestHcpcsCodeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountTestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountTestHcpcsCodeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ActivityTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ActivityTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AdditionalFieldsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AdditionalFieldsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AdditionalFieldsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AdditionalFieldsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AdvocateManagerTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AdvocateManagerTeamEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AdvocateManagerTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AdvocateManagerTeamEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AfcampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AfcampaignEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AfcampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AfcampaignEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AffiliateProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AffiliateProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ApplicationAuthenticationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ApplicationAuthenticationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ApplicationAuthenticationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ApplicationAuthenticationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BarrierEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BarrierEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<BarrierEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BarrierEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallCenterAgentTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterAgentTeamEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallCenterAgentTeamLogEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterAgentTeamLogEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallCenterAgentTeamLogEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterAgentTeamLogEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallCenterAgentTeamLogEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterAgentTeamLogEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallCenterTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterTeamEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallCenterTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterTeamEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallQueueAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueAssignmentEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallQueueCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueCustomerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallQueueCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueCustomerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallQueueCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueCustomerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallQueueCustomerLockEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueCustomerLockEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallQueueCustomTagEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueCustomTagEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallRoundCallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallRoundCallQueueEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CampaignActivityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignActivityEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CampaignActivityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignActivityEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CampaignActivityAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignActivityAssignmentEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CampaignAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignAssignmentEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CdcontentGeneratorTrackingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CdcontentGeneratorTrackingEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ChaperoneAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ChaperoneAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ChaperoneAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ChaperoneAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ChaperoneSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ChaperoneSignatureEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CheckEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CheckEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CheckListAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CheckListAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ClinicalTestQualificationCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ClinicalTestQualificationCriteriaEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ClinicalTestQualificationCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ClinicalTestQualificationCriteriaEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ContactCallEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContactCallEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ContactCallEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContactCallEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ContactMeetingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContactMeetingEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ContactMeetingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContactMeetingEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ContentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContentEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ContentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContentEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CorporateTagEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CorporateTagEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CorporateTagEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CorporateTagEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CorporateUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CorporateUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CouponsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CouponsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CouponsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CouponsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CurrentMedicationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CurrentMedicationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerActivityTypeUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerActivityTypeUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerCallAttemptsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerCallAttemptsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerCallQueueCallAttemptEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerCallQueueCallAttemptEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerClinicalQuestionAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerClinicalQuestionAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerClinicalQuestionAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerClinicalQuestionAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerEligibilityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEligibilityEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerEligibilityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEligibilityEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerEventCriticalTestDataEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventCriticalTestDataEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerEventCriticalTestDataEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventCriticalTestDataEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerEventPriorityInQueueDataEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventPriorityInQueueDataEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerEventPriorityInQueueDataEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventPriorityInQueueDataEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerEventReadingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventReadingEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerEventTestPhysicianEvaluationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventTestPhysicianEvaluationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerEventTestStateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventTestStateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerEventTestStateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventTestStateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerEventTestStateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventTestStateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerEventUnableScreenReasonEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventUnableScreenReasonEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerHealthInfoEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthInfoEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerHealthInfoArchiveEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthInfoArchiveEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerIcdCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerIcdCodeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerLockForCallEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerLockForCallEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerMedicareQuestionAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerMedicareQuestionAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerPhoneNumberUpdateUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerPhoneNumberUpdateUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerPrimaryCarePhysicianEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerPrimaryCarePhysicianEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerPrimaryCarePhysicianEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerPrimaryCarePhysicianEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerPrimaryCarePhysicianEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerPrimaryCarePhysicianEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileHistoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileHistoryEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerRegistrationNotesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerRegistrationNotesEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerResultScreeningCommunicationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerResultScreeningCommunicationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerResultScreeningCommunicationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerResultScreeningCommunicationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerResultScreeningCommunicationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerResultScreeningCommunicationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerTagEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerTagEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerTagEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerTagEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerTargetedEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerTargetedEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerTargetedEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerTargetedEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerWarmTransferEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerWarmTransferEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerWarmTransferEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerWarmTransferEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomEventNotificationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomEventNotificationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DirectMailEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DirectMailEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DirectMailTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DirectMailTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DirectMailTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DirectMailTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DisqualifiedTestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DisqualifiedTestEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DisqualifiedTestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DisqualifiedTestEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EligibilityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EligibilityEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EligibilityUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EligibilityUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventAccountTestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventAccountTestHcpcsCodeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventAccountTestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventAccountTestHcpcsCodeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventActivityTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventActivityTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventActivityTemplateCallEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventActivityTemplateCallEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventActivityTemplateEmailEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventActivityTemplateEmailEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventActivityTemplateMeetingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventActivityTemplateMeetingEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventActivityTemplateTaskEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventActivityTemplateTaskEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventAppointmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventAppointmentEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventAppointmentCancellationLogEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventAppointmentCancellationLogEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventAppointmentChangeLogEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventAppointmentChangeLogEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerBasicBioMetricEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerBasicBioMetricEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerGiftCardEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerGiftCardEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerPrimaryCarePhysicianEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerPrimaryCarePhysicianEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerQuestionAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerQuestionAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerQuestionAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerQuestionAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerResultBloodLabEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultBloodLabEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerResultHistoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultHistoryEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerResultHistoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultHistoryEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerResultHistoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultHistoryEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerRetestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerRetestEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerTestNotPerformedNotificationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerTestNotPerformedNotificationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventNoteEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventNoteEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventNoteEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventNoteEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventPhysicianTestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventPhysicianTestEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventPhysicianTestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventPhysicianTestEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventPhysicianTestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventPhysicianTestEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventStaffAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventStaffAssignmentEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventStaffAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventStaffAssignmentEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventStaffAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventStaffAssignmentEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ExitInterviewAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExitInterviewAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ExitInterviewAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExitInterviewAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ExitInterviewSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExitInterviewSignatureEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ExportableReportsQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExportableReportsQueueEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FillEventCallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FillEventCallQueueEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FluConsentAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FluConsentAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FluConsentSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentSignatureEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GcNotGivenReasonEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GcNotGivenReasonEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GcNotGivenReasonEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GcNotGivenReasonEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GuardianDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GuardianDetailsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GuardianDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GuardianDetailsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HcpcsCodeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HcpcsCodeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HealthPlanCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCallQueueCriteriaEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HealthPlanCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCallQueueCriteriaEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HealthPlanCriteriaAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCriteriaAssignmentEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HealthPlanCriteriaAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCriteriaAssignmentEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HealthPlanCriteriaAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCriteriaAssignmentEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HealthPlanCriteriaAssignmentUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCriteriaAssignmentUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HealthPlanCriteriaTeamAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCriteriaTeamAssignmentEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HealthPlanCriteriaTeamAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCriteriaTeamAssignmentEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HealthPlanRevenueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanRevenueEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HealthPlanRevenueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanRevenueEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HospitalPartnerCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HospitalPartnerCustomerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HospitalPartnerCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HospitalPartnerCustomerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HospitalPartnerCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HospitalPartnerCustomerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HostFacilityRankingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HostFacilityRankingEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HostPaymentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HostPaymentEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HostPaymentTransactionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HostPaymentTransactionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<IcdCodesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(IcdCodesEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<IcdCodesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(IcdCodesEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<IncidentalFindingsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(IncidentalFindingsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<KynLabValuesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(KynLabValuesEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<KynLabValuesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(KynLabValuesEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LabEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LabEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LanguageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LanguageEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LanguageBarrierCallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LanguageBarrierCallQueueEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<MailRoundCallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MailRoundCallQueueEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<MarketingPrintOrderEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MarketingPrintOrderEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<MedicationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<MedicationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<MedicationUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicationUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<MergeCustomerUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MergeCustomerUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<NoShowCallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NoShowCallQueueEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<NotificationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotificationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<NotificationTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotificationTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationRoleUserTerritoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserTerritoryEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrgRoleUserActivityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrgRoleUserActivityEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ParticipationConsentSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ParticipationConsentSignatureEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PasswordChangelogEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PasswordChangelogEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PayPeriodEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PayPeriodEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PayPeriodEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PayPeriodEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PcpAppointmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PcpAppointmentEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PcpAppointmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PcpAppointmentEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PcpDispositionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PcpDispositionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PcpDispositionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PcpDispositionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PhysicianRecordRequestSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PhysicianRecordRequestSignatureEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PinChangelogEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PinChangelogEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PodDefaultTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PodDefaultTeamEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PreApprovedPackageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreApprovedPackageEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PreApprovedTestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreApprovedTestEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PreAssessmentCallQueueCustomerLockEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreAssessmentCallQueueCustomerLockEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PreAssessmentCustomerCallQueueCallAttemptEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreAssessmentCustomerCallQueueCallAttemptEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PreQualificationQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreQualificationQuestionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PreQualificationTestTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreQualificationTestTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PreQualificationTestTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreQualificationTestTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PrintOrderItemTrackingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PrintOrderItemTrackingEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PrintOrderItemTrackingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PrintOrderItemTrackingEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PriorityInQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PriorityInQueueEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PriorityInQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PriorityInQueueEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ProspectCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectCustomerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<RapsUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RapsUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ReferralEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ReferralEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<RefundRequestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RefundRequestEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<RefundRequestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RefundRequestEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<RequiredTestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RequiredTestEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<SalesRepPodAssigmentsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SalesRepPodAssigmentsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ScheduleTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ScheduleTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ScheduleTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ScheduleTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<SeminarsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SeminarsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ShippingDetailEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShippingDetailEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ShippingDetailEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShippingDetailEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<SourceCodeChangeLogEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SourceCodeChangeLogEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<StaffEventScheduleUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(StaffEventScheduleUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<SurveyAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<SurveyAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyAnswerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<SuspectConditionUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SuspectConditionUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<SystemGeneratedCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SystemGeneratedCallQueueCriteriaEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<SystemGeneratedCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SystemGeneratedCallQueueCriteriaEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<SystemGeneratedCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SystemGeneratedCallQueueCriteriaEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TaskDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TaskDetailsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TaskDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TaskDetailsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TaskDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TaskDetailsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TerritoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TerritoryEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestHcpcsCodeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestHcpcsCodeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestNotPerformedEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestNotPerformedEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestNotPerformedEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestNotPerformedEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestNotPerformedReasonEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestNotPerformedReasonEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestPerformedExternallyEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestPerformedExternallyEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestPerformedExternallyEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestPerformedExternallyEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<UncontactedCustomerCallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(UncontactedCustomerCallQueueEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<UploadZipInfoEntity>(EntityFactoryCache2.GetEntityFactory(typeof(UploadZipInfoEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<UserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(UserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<UserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(UserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ActivityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ActivityEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ActivityTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ActivityTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ActivityTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ActivityTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ActivityTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ActivityTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AfadvertiserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AfadvertiserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AfadvertiserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AfadvertiserEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AfaffiliateCampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AfaffiliateCampaignEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AfaffiliateCampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AfaffiliateCampaignEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<AfaffiliateCampaignMarketingMaterialEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AfaffiliateCampaignMarketingMaterialEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallCenterTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterTeamEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallCenterTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterTeamEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallCenterTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterTeamEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallCenterTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterTeamEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallCenterTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterTeamEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallCenterTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterTeamEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueCriteriaEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueCriteriaEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueCriteriaEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallQueueCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueCustomerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CallUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallUploadEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CampaignActivityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignActivityEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ChaperoneQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ChaperoneQuestionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ChaperoneQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ChaperoneQuestionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CheckListQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListQuestionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CheckListQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListQuestionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CheckListQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListQuestionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CityEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CommunicationModeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CommunicationModeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CommunicationModeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CommunicationModeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CommunicationModeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CommunicationModeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CommunicationModeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CommunicationModeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CommunicationModeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CommunicationModeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ContactCallStatusEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContactCallStatusEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ContactCallStatusEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContactCallStatusEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ContactCallStatusEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContactCallStatusEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ContactCallStatusEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContactCallStatusEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CountryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CountryEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CouponTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CouponTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CouponTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CouponTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerHealthQuestionsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthQuestionsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerHealthQuestionsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthQuestionsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerHealthQuestionsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthQuestionsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerHealthQuestionsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthQuestionsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerHealthQuestionsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthQuestionsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerHealthQuestionsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthQuestionsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerHealthQuestionsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthQuestionsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerHealthQuestionsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthQuestionsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerPrimaryCarePhysicianEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerPrimaryCarePhysicianEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileHistoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileHistoryEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerProfileHistoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileHistoryEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerRegistrationNotesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerRegistrationNotesEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerRegistrationNotesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerRegistrationNotesEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<CustomerRegistrationNotesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerRegistrationNotesEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DirectMailTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DirectMailTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DirectMailTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DirectMailTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<DirectMailTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DirectMailTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventActivityTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventActivityTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventActivityTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventActivityTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventActivityTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventActivityTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventActivityTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventActivityTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventAppointmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventAppointmentEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventAppointmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventAppointmentEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<EventTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ExitInterviewQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExitInterviewQuestionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ExitInterviewQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExitInterviewQuestionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ExportableReportsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExportableReportsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FluConsentQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentQuestionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<FluConsentQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentQuestionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GcNotGivenReasonEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GcNotGivenReasonEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<GcNotGivenReasonEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GcNotGivenReasonEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HcpcsCodeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HcpcsCodeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HealthPlanCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCallQueueCriteriaEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HealthPlanCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCallQueueCriteriaEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HealthPlanCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCallQueueCriteriaEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HealthPlanCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCallQueueCriteriaEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HealthPlanCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCallQueueCriteriaEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HealthPlanCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCallQueueCriteriaEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HospitalFacilityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HospitalFacilityEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HospitalFacilityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HospitalFacilityEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<HostPaymentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HostPaymentEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<IcdCodesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(IcdCodesEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<InsuranceCompanyEntity>(EntityFactoryCache2.GetEntityFactory(typeof(InsuranceCompanyEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LanguageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LanguageEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LanguageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LanguageEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LanguageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LanguageEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LanguageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LanguageEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LanguageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LanguageEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<MarketingPrintOrderItemEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MarketingPrintOrderItemEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<MarketingPrintOrderItemEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MarketingPrintOrderItemEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<MedicareQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicareQuestionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<NdcEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NdcEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<NotificationMediumEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotificationMediumEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<NotificationMediumEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotificationMediumEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<NotificationTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotificationTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<NotificationTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotificationTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<NotificationTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotificationTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrderEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrderEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrderEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrderEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PackageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PackageEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PhysicianMasterEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PhysicianMasterEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PhysicianMasterEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PhysicianMasterEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PhysicianMasterEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PhysicianMasterEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PodDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PodDetailsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PodDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PodDetailsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PodDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PodDetailsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PodDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PodDetailsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PodDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PodDetailsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PodDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PodDetailsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PodDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PodDetailsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PreQualificationQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreQualificationQuestionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PreQualificationQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreQualificationQuestionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PreQualificationQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreQualificationQuestionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<PreQualificationQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreQualificationQuestionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ProspectCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectCustomerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ProspectCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectCustomerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ProspectCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectCustomerEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ProspectListDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectListDetailsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ProspectTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectTypeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<RefundRequestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RefundRequestEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<RelationshipEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RelationshipEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<RelationshipEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RelationshipEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<RescheduleCancelDispositionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RescheduleCancelDispositionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<RescheduleCancelDispositionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RescheduleCancelDispositionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<RoleEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RoleEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<RoleEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RoleEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<RoleEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RoleEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ScheduleMethodEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ScheduleMethodEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ScheduleMethodEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ScheduleMethodEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ScheduleMethodEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ScheduleMethodEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ScheduleMethodEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ScheduleMethodEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ScheduleMethodEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ScheduleMethodEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ScriptsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ScriptsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ScriptsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ScriptsEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ShippingOptionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShippingOptionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ShippingOptionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShippingOptionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<StaffEventRoleEntity>(EntityFactoryCache2.GetEntityFactory(typeof(StaffEventRoleEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<StaffEventRoleEntity>(EntityFactoryCache2.GetEntityFactory(typeof(StaffEventRoleEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<StaffEventRoleEntity>(EntityFactoryCache2.GetEntityFactory(typeof(StaffEventRoleEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<StaffEventRoleEntity>(EntityFactoryCache2.GetEntityFactory(typeof(StaffEventRoleEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<StandardFindingTestReadingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(StandardFindingTestReadingEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<StateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(StateEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<SurveyQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyQuestionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<SurveyQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyQuestionEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TagEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TagEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TagEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TagEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TaskPriorityTypesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TaskPriorityTypesEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TaskPriorityTypesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TaskPriorityTypesEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TaskPriorityTypesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TaskPriorityTypesEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TaskStatusTypesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TaskStatusTypesEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TaskStatusTypesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TaskStatusTypesEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TaskStatusTypesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TaskStatusTypesEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TechnicianProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TechnicianProfileEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TerritoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TerritoryEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TerritoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TerritoryEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestHcpcsCodeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestHcpcsCodeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestHcpcsCodeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestHcpcsCodeEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestNotPerformedReasonEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestNotPerformedReasonEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestNotPerformedReasonEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestNotPerformedReasonEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestReadingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestReadingEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<TestUnableScreenReasonEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestUnableScreenReasonEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<UserLoginEntity>(EntityFactoryCache2.GetEntityFactory(typeof(UserLoginEntityFactory))) : null);
			collectionsQueue.Enqueue(requiredQueue.Dequeue() ? new EntityCollection<ZipEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ZipEntityFactory))) : null);
		}
#endif
		/// <summary>
		/// Gets all related data objects, stored by name. The name is the field name mapped onto the relation for that particular data element. 
		/// </summary>
		/// <returns>Dictionary with per name the related referenced data element, which can be an entity collection or an entity or null</returns>
		public override Dictionary<string, object> GetRelatedData()
		{
			Dictionary<string, object> toReturn = new Dictionary<string, object>();
			toReturn.Add("Organization", _organization);
			toReturn.Add("Role", _role);
			toReturn.Add("User", _user);
			toReturn.Add("AccountCallCenterOrganization_", _accountCallCenterOrganization_);
			toReturn.Add("AccountCallCenterOrganization", _accountCallCenterOrganization);
			toReturn.Add("AccountHraChatQuestionnaire_", _accountHraChatQuestionnaire_);
			toReturn.Add("AccountHraChatQuestionnaire", _accountHraChatQuestionnaire);
			toReturn.Add("AccountTestHcpcsCode_", _accountTestHcpcsCode_);
			toReturn.Add("AccountTestHcpcsCode", _accountTestHcpcsCode);
			toReturn.Add("ActivityType", _activityType);
			toReturn.Add("AdditionalFields_", _additionalFields_);
			toReturn.Add("AdditionalFields", _additionalFields);
			toReturn.Add("Address", _address);
			toReturn.Add("AdvocateManagerTeam_", _advocateManagerTeam_);
			toReturn.Add("AdvocateManagerTeam", _advocateManagerTeam);
			toReturn.Add("Afcampaign_", _afcampaign_);
			toReturn.Add("Afcampaign", _afcampaign);
			toReturn.Add("AffiliateProfile", _affiliateProfile);
			toReturn.Add("ApplicationAuthentication_", _applicationAuthentication_);
			toReturn.Add("ApplicationAuthentication", _applicationAuthentication);
			toReturn.Add("Barrier_", _barrier_);
			toReturn.Add("Barrier", _barrier);
			toReturn.Add("CallCenterAgentTeam", _callCenterAgentTeam);
			toReturn.Add("CallCenterAgentTeamLog__", _callCenterAgentTeamLog__);
			toReturn.Add("CallCenterAgentTeamLog_", _callCenterAgentTeamLog_);
			toReturn.Add("CallCenterAgentTeamLog", _callCenterAgentTeamLog);
			toReturn.Add("CallCenterTeam_", _callCenterTeam_);
			toReturn.Add("CallCenterTeam", _callCenterTeam);
			toReturn.Add("CallQueue_", _callQueue_);
			toReturn.Add("CallQueue", _callQueue);
			toReturn.Add("CallQueueAssignment", _callQueueAssignment);
			toReturn.Add("CallQueueCustomer__", _callQueueCustomer__);
			toReturn.Add("CallQueueCustomer_", _callQueueCustomer_);
			toReturn.Add("CallQueueCustomer", _callQueueCustomer);
			toReturn.Add("CallQueueCustomerLock", _callQueueCustomerLock);
			toReturn.Add("CallQueueCustomTag", _callQueueCustomTag);
			toReturn.Add("CallRoundCallQueue", _callRoundCallQueue);
			toReturn.Add("Calls", _calls);
			toReturn.Add("CallUpload", _callUpload);
			toReturn.Add("Campaign_", _campaign_);
			toReturn.Add("Campaign", _campaign);
			toReturn.Add("CampaignActivity_", _campaignActivity_);
			toReturn.Add("CampaignActivity", _campaignActivity);
			toReturn.Add("CampaignActivityAssignment", _campaignActivityAssignment);
			toReturn.Add("CampaignAssignment", _campaignAssignment);
			toReturn.Add("CdcontentGeneratorTracking", _cdcontentGeneratorTracking);
			toReturn.Add("ChaperoneAnswer_", _chaperoneAnswer_);
			toReturn.Add("ChaperoneAnswer", _chaperoneAnswer);
			toReturn.Add("ChaperoneSignature", _chaperoneSignature);
			toReturn.Add("Check_", _check_);
			toReturn.Add("Check", _check);
			toReturn.Add("CheckListAnswer_", _checkListAnswer_);
			toReturn.Add("CheckListAnswer", _checkListAnswer);
			toReturn.Add("CheckListTemplate_", _checkListTemplate_);
			toReturn.Add("CheckListTemplate", _checkListTemplate);
			toReturn.Add("ClinicalTestQualificationCriteria_", _clinicalTestQualificationCriteria_);
			toReturn.Add("ClinicalTestQualificationCriteria", _clinicalTestQualificationCriteria);
			toReturn.Add("ContactCall_", _contactCall_);
			toReturn.Add("ContactCall", _contactCall);
			toReturn.Add("ContactMeeting_", _contactMeeting_);
			toReturn.Add("ContactMeeting", _contactMeeting);
			toReturn.Add("Content_", _content_);
			toReturn.Add("Content", _content);
			toReturn.Add("CorporateTag_", _corporateTag_);
			toReturn.Add("CorporateTag", _corporateTag);
			toReturn.Add("CorporateUpload", _corporateUpload);
			toReturn.Add("Coupons_", _coupons_);
			toReturn.Add("Coupons", _coupons);
			toReturn.Add("CurrentMedication", _currentMedication);
			toReturn.Add("CustomerActivityTypeUpload", _customerActivityTypeUpload);
			toReturn.Add("CustomerCallAttempts", _customerCallAttempts);
			toReturn.Add("CustomerCallQueueCallAttempt", _customerCallQueueCallAttempt);
			toReturn.Add("CustomerClinicalQuestionAnswer_", _customerClinicalQuestionAnswer_);
			toReturn.Add("CustomerClinicalQuestionAnswer", _customerClinicalQuestionAnswer);
			toReturn.Add("CustomerEligibility_", _customerEligibility_);
			toReturn.Add("CustomerEligibility", _customerEligibility);
			toReturn.Add("CustomerEventCriticalTestData_", _customerEventCriticalTestData_);
			toReturn.Add("CustomerEventCriticalTestData", _customerEventCriticalTestData);
			toReturn.Add("CustomerEventPriorityInQueueData_", _customerEventPriorityInQueueData_);
			toReturn.Add("CustomerEventPriorityInQueueData", _customerEventPriorityInQueueData);
			toReturn.Add("CustomerEventReading", _customerEventReading);
			toReturn.Add("CustomerEventTestPhysicianEvaluation", _customerEventTestPhysicianEvaluation);
			toReturn.Add("CustomerEventTestState__", _customerEventTestState__);
			toReturn.Add("CustomerEventTestState_", _customerEventTestState_);
			toReturn.Add("CustomerEventTestState", _customerEventTestState);
			toReturn.Add("CustomerEventUnableScreenReason", _customerEventUnableScreenReason);
			toReturn.Add("CustomerHealthInfo", _customerHealthInfo);
			toReturn.Add("CustomerHealthInfoArchive", _customerHealthInfoArchive);
			toReturn.Add("CustomerIcdCode", _customerIcdCode);
			toReturn.Add("CustomerLockForCall", _customerLockForCall);
			toReturn.Add("CustomerMedicareQuestionAnswer", _customerMedicareQuestionAnswer);
			toReturn.Add("CustomerPhoneNumberUpdateUpload", _customerPhoneNumberUpdateUpload);
			toReturn.Add("CustomerPrimaryCarePhysician_", _customerPrimaryCarePhysician_);
			toReturn.Add("CustomerPrimaryCarePhysician__", _customerPrimaryCarePhysician__);
			toReturn.Add("CustomerPrimaryCarePhysician", _customerPrimaryCarePhysician);
			toReturn.Add("CustomerProfileHistory", _customerProfileHistory);
			toReturn.Add("CustomerRegistrationNotes", _customerRegistrationNotes);
			toReturn.Add("CustomerResultScreeningCommunication__", _customerResultScreeningCommunication__);
			toReturn.Add("CustomerResultScreeningCommunication_", _customerResultScreeningCommunication_);
			toReturn.Add("CustomerResultScreeningCommunication", _customerResultScreeningCommunication);
			toReturn.Add("CustomerTag_", _customerTag_);
			toReturn.Add("CustomerTag", _customerTag);
			toReturn.Add("CustomerTargeted_", _customerTargeted_);
			toReturn.Add("CustomerTargeted", _customerTargeted);
			toReturn.Add("CustomerWarmTransfer_", _customerWarmTransfer_);
			toReturn.Add("CustomerWarmTransfer", _customerWarmTransfer);
			toReturn.Add("CustomEventNotification", _customEventNotification);
			toReturn.Add("DirectMail", _directMail);
			toReturn.Add("DirectMailType_", _directMailType_);
			toReturn.Add("DirectMailType", _directMailType);
			toReturn.Add("DisqualifiedTest_", _disqualifiedTest_);
			toReturn.Add("DisqualifiedTest", _disqualifiedTest);
			toReturn.Add("Eligibility", _eligibility);
			toReturn.Add("EligibilityUpload", _eligibilityUpload);
			toReturn.Add("EmailTemplate", _emailTemplate);
			toReturn.Add("EventAccountTestHcpcsCode_", _eventAccountTestHcpcsCode_);
			toReturn.Add("EventAccountTestHcpcsCode", _eventAccountTestHcpcsCode);
			toReturn.Add("EventActivityTemplate", _eventActivityTemplate);
			toReturn.Add("EventActivityTemplateCall", _eventActivityTemplateCall);
			toReturn.Add("EventActivityTemplateEmail", _eventActivityTemplateEmail);
			toReturn.Add("EventActivityTemplateMeeting", _eventActivityTemplateMeeting);
			toReturn.Add("EventActivityTemplateTask", _eventActivityTemplateTask);
			toReturn.Add("EventAppointment", _eventAppointment);
			toReturn.Add("EventAppointmentCancellationLog", _eventAppointmentCancellationLog);
			toReturn.Add("EventAppointmentChangeLog", _eventAppointmentChangeLog);
			toReturn.Add("EventCustomerBasicBioMetric", _eventCustomerBasicBioMetric);
			toReturn.Add("EventCustomerGiftCard", _eventCustomerGiftCard);
			toReturn.Add("EventCustomerPrimaryCarePhysician", _eventCustomerPrimaryCarePhysician);
			toReturn.Add("EventCustomerQuestionAnswer_", _eventCustomerQuestionAnswer_);
			toReturn.Add("EventCustomerQuestionAnswer", _eventCustomerQuestionAnswer);
			toReturn.Add("EventCustomerResult___", _eventCustomerResult___);
			toReturn.Add("EventCustomerResult__", _eventCustomerResult__);
			toReturn.Add("EventCustomerResult_", _eventCustomerResult_);
			toReturn.Add("EventCustomerResult____", _eventCustomerResult____);
			toReturn.Add("EventCustomerResult______", _eventCustomerResult______);
			toReturn.Add("EventCustomerResult_______", _eventCustomerResult_______);
			toReturn.Add("EventCustomerResult", _eventCustomerResult);
			toReturn.Add("EventCustomerResult_____", _eventCustomerResult_____);
			toReturn.Add("EventCustomerResult________", _eventCustomerResult________);
			toReturn.Add("EventCustomerResultBloodLab", _eventCustomerResultBloodLab);
			toReturn.Add("EventCustomerResultHistory", _eventCustomerResultHistory);
			toReturn.Add("EventCustomerResultHistory_", _eventCustomerResultHistory_);
			toReturn.Add("EventCustomerResultHistory__", _eventCustomerResultHistory__);
			toReturn.Add("EventCustomerRetest", _eventCustomerRetest);
			toReturn.Add("EventCustomers_", _eventCustomers_);
			toReturn.Add("EventCustomers", _eventCustomers);
			toReturn.Add("EventCustomerTestNotPerformedNotification", _eventCustomerTestNotPerformedNotification);
			toReturn.Add("EventNote_", _eventNote_);
			toReturn.Add("EventNote", _eventNote);
			toReturn.Add("EventPhysicianTest__", _eventPhysicianTest__);
			toReturn.Add("EventPhysicianTest_", _eventPhysicianTest_);
			toReturn.Add("EventPhysicianTest", _eventPhysicianTest);
			toReturn.Add("Events___", _events___);
			toReturn.Add("Events____", _events____);
			toReturn.Add("Events__", _events__);
			toReturn.Add("Events", _events);
			toReturn.Add("Events_", _events_);
			toReturn.Add("EventStaffAssignment__", _eventStaffAssignment__);
			toReturn.Add("EventStaffAssignment_", _eventStaffAssignment_);
			toReturn.Add("EventStaffAssignment", _eventStaffAssignment);
			toReturn.Add("ExitInterviewAnswer_", _exitInterviewAnswer_);
			toReturn.Add("ExitInterviewAnswer", _exitInterviewAnswer);
			toReturn.Add("ExitInterviewSignature", _exitInterviewSignature);
			toReturn.Add("ExportableReportsQueue", _exportableReportsQueue);
			toReturn.Add("File", _file);
			toReturn.Add("FillEventCallQueue", _fillEventCallQueue);
			toReturn.Add("FluConsentAnswer_", _fluConsentAnswer_);
			toReturn.Add("FluConsentAnswer", _fluConsentAnswer);
			toReturn.Add("FluConsentSignature", _fluConsentSignature);
			toReturn.Add("FluConsentTemplate_", _fluConsentTemplate_);
			toReturn.Add("FluConsentTemplate", _fluConsentTemplate);
			toReturn.Add("GcNotGivenReason_", _gcNotGivenReason_);
			toReturn.Add("GcNotGivenReason", _gcNotGivenReason);
			toReturn.Add("GuardianDetails_", _guardianDetails_);
			toReturn.Add("GuardianDetails", _guardianDetails);
			toReturn.Add("HafTemplate_", _hafTemplate_);
			toReturn.Add("HafTemplate", _hafTemplate);
			toReturn.Add("HcpcsCode_", _hcpcsCode_);
			toReturn.Add("HcpcsCode", _hcpcsCode);
			toReturn.Add("HealthPlanCallQueueCriteria__", _healthPlanCallQueueCriteria__);
			toReturn.Add("HealthPlanCallQueueCriteria_", _healthPlanCallQueueCriteria_);
			toReturn.Add("HealthPlanCriteriaAssignment__", _healthPlanCriteriaAssignment__);
			toReturn.Add("HealthPlanCriteriaAssignment_", _healthPlanCriteriaAssignment_);
			toReturn.Add("HealthPlanCriteriaAssignment", _healthPlanCriteriaAssignment);
			toReturn.Add("HealthPlanCriteriaAssignmentUpload", _healthPlanCriteriaAssignmentUpload);
			toReturn.Add("HealthPlanCriteriaTeamAssignment_", _healthPlanCriteriaTeamAssignment_);
			toReturn.Add("HealthPlanCriteriaTeamAssignment", _healthPlanCriteriaTeamAssignment);
			toReturn.Add("HealthPlanRevenue_", _healthPlanRevenue_);
			toReturn.Add("HealthPlanRevenue", _healthPlanRevenue);
			toReturn.Add("HospitalPartnerCustomer__", _hospitalPartnerCustomer__);
			toReturn.Add("HospitalPartnerCustomer_", _hospitalPartnerCustomer_);
			toReturn.Add("HospitalPartnerCustomer", _hospitalPartnerCustomer);
			toReturn.Add("HostFacilityRanking", _hostFacilityRanking);
			toReturn.Add("HostPayment", _hostPayment);
			toReturn.Add("HostPaymentTransaction", _hostPaymentTransaction);
			toReturn.Add("IcdCodes_", _icdCodes_);
			toReturn.Add("IcdCodes", _icdCodes);
			toReturn.Add("IncidentalFindings", _incidentalFindings);
			toReturn.Add("KynLabValues_", _kynLabValues_);
			toReturn.Add("KynLabValues", _kynLabValues);
			toReturn.Add("Lab", _lab);
			toReturn.Add("Language", _language);
			toReturn.Add("LanguageBarrierCallQueue", _languageBarrierCallQueue);
			toReturn.Add("MailRoundCallQueue", _mailRoundCallQueue);
			toReturn.Add("MarketingPrintOrder", _marketingPrintOrder);
			toReturn.Add("Medication_", _medication_);
			toReturn.Add("Medication", _medication);
			toReturn.Add("MedicationUpload", _medicationUpload);
			toReturn.Add("MergeCustomerUpload", _mergeCustomerUpload);
			toReturn.Add("NoShowCallQueue", _noShowCallQueue);
			toReturn.Add("NotesDetails_", _notesDetails_);
			toReturn.Add("NotesDetails", _notesDetails);
			toReturn.Add("Notification", _notification);
			toReturn.Add("NotificationType", _notificationType);
			toReturn.Add("OrganizationRoleUserTerritory", _organizationRoleUserTerritory);
			toReturn.Add("OrgRoleUserActivity", _orgRoleUserActivity);
			toReturn.Add("ParticipationConsentSignature", _participationConsentSignature);
			toReturn.Add("PasswordChangelog", _passwordChangelog);
			toReturn.Add("PayPeriod_", _payPeriod_);
			toReturn.Add("PayPeriod", _payPeriod);
			toReturn.Add("PcpAppointment_", _pcpAppointment_);
			toReturn.Add("PcpAppointment", _pcpAppointment);
			toReturn.Add("PcpDisposition_", _pcpDisposition_);
			toReturn.Add("PcpDisposition", _pcpDisposition);
			toReturn.Add("PhysicianRecordRequestSignature", _physicianRecordRequestSignature);
			toReturn.Add("PinChangelog", _pinChangelog);
			toReturn.Add("PodDefaultTeam", _podDefaultTeam);
			toReturn.Add("PreApprovedPackage", _preApprovedPackage);
			toReturn.Add("PreApprovedTest", _preApprovedTest);
			toReturn.Add("PreAssessmentCallQueueCustomerLock", _preAssessmentCallQueueCustomerLock);
			toReturn.Add("PreAssessmentCustomerCallQueueCallAttempt", _preAssessmentCustomerCallQueueCallAttempt);
			toReturn.Add("PreQualificationQuestion", _preQualificationQuestion);
			toReturn.Add("PreQualificationTestTemplate_", _preQualificationTestTemplate_);
			toReturn.Add("PreQualificationTestTemplate", _preQualificationTestTemplate);
			toReturn.Add("PrintOrderItemTracking_", _printOrderItemTracking_);
			toReturn.Add("PrintOrderItemTracking", _printOrderItemTracking);
			toReturn.Add("PriorityInQueue_", _priorityInQueue_);
			toReturn.Add("PriorityInQueue", _priorityInQueue);
			toReturn.Add("ProspectCustomer", _prospectCustomer);
			toReturn.Add("Prospects", _prospects);
			toReturn.Add("RapsUpload", _rapsUpload);
			toReturn.Add("Referral", _referral);
			toReturn.Add("RefundRequest_", _refundRequest_);
			toReturn.Add("RefundRequest", _refundRequest);
			toReturn.Add("RequiredTest", _requiredTest);
			toReturn.Add("SalesRepPodAssigments", _salesRepPodAssigments);
			toReturn.Add("ScheduleTemplate_", _scheduleTemplate_);
			toReturn.Add("ScheduleTemplate", _scheduleTemplate);
			toReturn.Add("Seminars", _seminars);
			toReturn.Add("ShippingDetail_", _shippingDetail_);
			toReturn.Add("ShippingDetail", _shippingDetail);
			toReturn.Add("SourceCodeChangeLog", _sourceCodeChangeLog);
			toReturn.Add("StaffEventScheduleUpload", _staffEventScheduleUpload);
			toReturn.Add("SurveyAnswer_", _surveyAnswer_);
			toReturn.Add("SurveyAnswer", _surveyAnswer);
			toReturn.Add("SurveyTemplate_", _surveyTemplate_);
			toReturn.Add("SurveyTemplate", _surveyTemplate);
			toReturn.Add("SuspectConditionUpload", _suspectConditionUpload);
			toReturn.Add("SystemGenertedCallQueueCriteria__", _systemGenertedCallQueueCriteria__);
			toReturn.Add("SystemGenertedCallQueueCriteria_", _systemGenertedCallQueueCriteria_);
			toReturn.Add("SystemGenertedCallQueueCriteria", _systemGenertedCallQueueCriteria);
			toReturn.Add("TaskDetails__", _taskDetails__);
			toReturn.Add("TaskDetails_", _taskDetails_);
			toReturn.Add("TaskDetails", _taskDetails);
			toReturn.Add("Territory", _territory);
			toReturn.Add("TestHcpcsCode_", _testHcpcsCode_);
			toReturn.Add("TestHcpcsCode", _testHcpcsCode);
			toReturn.Add("TestNotPerformed_", _testNotPerformed_);
			toReturn.Add("TestNotPerformed", _testNotPerformed);
			toReturn.Add("TestNotPerformedReason", _testNotPerformedReason);
			toReturn.Add("TestPerformedExternally_", _testPerformedExternally_);
			toReturn.Add("TestPerformedExternally", _testPerformedExternally);
			toReturn.Add("UncontactedCustomerCallQueue", _uncontactedCustomerCallQueue);
			toReturn.Add("UploadZipInfo", _uploadZipInfo);
			toReturn.Add("User__", _user__);
			toReturn.Add("User_", _user_);
			toReturn.Add("AccountCollectionViaFillEventCallQueue", _accountCollectionViaFillEventCallQueue);
			toReturn.Add("AccountCollectionViaMailRoundCallQueue", _accountCollectionViaMailRoundCallQueue);
			toReturn.Add("AccountCollectionViaEligibilityUpload", _accountCollectionViaEligibilityUpload);
			toReturn.Add("AccountCollectionViaCorporateUpload", _accountCollectionViaCorporateUpload);
			toReturn.Add("AccountCollectionViaHealthPlanCallQueueCriteria", _accountCollectionViaHealthPlanCallQueueCriteria);
			toReturn.Add("AccountCollectionViaCallQueueCustomer_", _accountCollectionViaCallQueueCustomer_);
			toReturn.Add("AccountCollectionViaCallQueueCustomer", _accountCollectionViaCallQueueCustomer);
			toReturn.Add("AccountCollectionViaCallQueueCustomer__", _accountCollectionViaCallQueueCustomer__);
			toReturn.Add("AccountCollectionViaHealthPlanRevenue", _accountCollectionViaHealthPlanRevenue);
			toReturn.Add("AccountCollectionViaHealthPlanRevenue_", _accountCollectionViaHealthPlanRevenue_);
			toReturn.Add("AccountCollectionViaCorporateTag_", _accountCollectionViaCorporateTag_);
			toReturn.Add("AccountCollectionViaLanguageBarrierCallQueue", _accountCollectionViaLanguageBarrierCallQueue);
			toReturn.Add("AccountCollectionViaEventNote", _accountCollectionViaEventNote);
			toReturn.Add("AccountCollectionViaCampaign", _accountCollectionViaCampaign);
			toReturn.Add("AccountCollectionViaEventNote_", _accountCollectionViaEventNote_);
			toReturn.Add("AccountCollectionViaCampaign_", _accountCollectionViaCampaign_);
			toReturn.Add("AccountCollectionViaHealthPlanCallQueueCriteria_", _accountCollectionViaHealthPlanCallQueueCriteria_);
			toReturn.Add("AccountCollectionViaCorporateTag", _accountCollectionViaCorporateTag);
			toReturn.Add("AccountCollectionViaCallQueueCustomTag", _accountCollectionViaCallQueueCustomTag);
			toReturn.Add("AccountCollectionViaCalls", _accountCollectionViaCalls);
			toReturn.Add("AccountCollectionViaCallRoundCallQueue", _accountCollectionViaCallRoundCallQueue);
			toReturn.Add("AccountCollectionViaAccountHraChatQuestionnaire_", _accountCollectionViaAccountHraChatQuestionnaire_);
			toReturn.Add("AccountCollectionViaAccountHraChatQuestionnaire", _accountCollectionViaAccountHraChatQuestionnaire);
			toReturn.Add("AccountCollectionViaUncontactedCustomerCallQueue", _accountCollectionViaUncontactedCustomerCallQueue);
			toReturn.Add("AccountCollectionViaCustomEventNotification", _accountCollectionViaCustomEventNotification);
			toReturn.Add("AccountCollectionViaNoShowCallQueue", _accountCollectionViaNoShowCallQueue);
			toReturn.Add("AccountCollectionViaAccountCallCenterOrganization_", _accountCollectionViaAccountCallCenterOrganization_);
			toReturn.Add("AccountCollectionViaAccountCallCenterOrganization", _accountCollectionViaAccountCallCenterOrganization);
			toReturn.Add("ActivityCollectionViaOrgRoleUserActivity", _activityCollectionViaOrgRoleUserActivity);
			toReturn.Add("ActivityTypeCollectionViaCallQueueCustomer", _activityTypeCollectionViaCallQueueCustomer);
			toReturn.Add("ActivityTypeCollectionViaCallQueueCustomer__", _activityTypeCollectionViaCallQueueCustomer__);
			toReturn.Add("ActivityTypeCollectionViaCallQueueCustomer_", _activityTypeCollectionViaCallQueueCustomer_);
			toReturn.Add("AddressCollectionViaCustomerPrimaryCarePhysician_", _addressCollectionViaCustomerPrimaryCarePhysician_);
			toReturn.Add("AddressCollectionViaProspects", _addressCollectionViaProspects);
			toReturn.Add("AddressCollectionViaCustomerPrimaryCarePhysician___", _addressCollectionViaCustomerPrimaryCarePhysician___);
			toReturn.Add("AddressCollectionViaCustomerPrimaryCarePhysician____", _addressCollectionViaCustomerPrimaryCarePhysician____);
			toReturn.Add("AddressCollectionViaUser", _addressCollectionViaUser);
			toReturn.Add("AddressCollectionViaUser_", _addressCollectionViaUser_);
			toReturn.Add("AddressCollectionViaShippingDetail", _addressCollectionViaShippingDetail);
			toReturn.Add("AddressCollectionViaHostPayment", _addressCollectionViaHostPayment);
			toReturn.Add("AddressCollectionViaShippingDetail_", _addressCollectionViaShippingDetail_);
			toReturn.Add("AddressCollectionViaCustomerPrimaryCarePhysician", _addressCollectionViaCustomerPrimaryCarePhysician);
			toReturn.Add("AddressCollectionViaCustomerPrimaryCarePhysician__", _addressCollectionViaCustomerPrimaryCarePhysician__);
			toReturn.Add("AddressCollectionViaCustomerPrimaryCarePhysician_____", _addressCollectionViaCustomerPrimaryCarePhysician_____);
			toReturn.Add("AfadvertiserCollectionViaAfcampaign", _afadvertiserCollectionViaAfcampaign);
			toReturn.Add("AfadvertiserCollectionViaAfcampaign_", _afadvertiserCollectionViaAfcampaign_);
			toReturn.Add("AfaffiliateCampaignCollectionViaEventCustomers", _afaffiliateCampaignCollectionViaEventCustomers);
			toReturn.Add("AfaffiliateCampaignCollectionViaEventCustomers_", _afaffiliateCampaignCollectionViaEventCustomers_);
			toReturn.Add("AfaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer", _afaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer);
			toReturn.Add("CallCenterTeamCollectionViaCallCenterAgentTeam", _callCenterTeamCollectionViaCallCenterAgentTeam);
			toReturn.Add("CallCenterTeamCollectionViaCallCenterAgentTeamLog", _callCenterTeamCollectionViaCallCenterAgentTeamLog);
			toReturn.Add("CallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_", _callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_);
			toReturn.Add("CallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment", _callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment);
			toReturn.Add("CallCenterTeamCollectionViaCallCenterAgentTeamLog_", _callCenterTeamCollectionViaCallCenterAgentTeamLog_);
			toReturn.Add("CallCenterTeamCollectionViaCallCenterAgentTeamLog__", _callCenterTeamCollectionViaCallCenterAgentTeamLog__);
			toReturn.Add("CallQueueCollectionViaCallQueueCustomer_", _callQueueCollectionViaCallQueueCustomer_);
			toReturn.Add("CallQueueCollectionViaHealthPlanCallQueueCriteria__", _callQueueCollectionViaHealthPlanCallQueueCriteria__);
			toReturn.Add("CallQueueCollectionViaCallQueueCustomer", _callQueueCollectionViaCallQueueCustomer);
			toReturn.Add("CallQueueCollectionViaCalls", _callQueueCollectionViaCalls);
			toReturn.Add("CallQueueCollectionViaCallQueueAssignment", _callQueueCollectionViaCallQueueAssignment);
			toReturn.Add("CallQueueCollectionViaSystemGenertedCallQueueCriteria__", _callQueueCollectionViaSystemGenertedCallQueueCriteria__);
			toReturn.Add("CallQueueCollectionViaSystemGenertedCallQueueCriteria_", _callQueueCollectionViaSystemGenertedCallQueueCriteria_);
			toReturn.Add("CallQueueCollectionViaCallQueueCustomer__", _callQueueCollectionViaCallQueueCustomer__);
			toReturn.Add("CallQueueCollectionViaHealthPlanCallQueueCriteria_", _callQueueCollectionViaHealthPlanCallQueueCriteria_);
			toReturn.Add("CallQueueCollectionViaSystemGenertedCallQueueCriteria", _callQueueCollectionViaSystemGenertedCallQueueCriteria);
			toReturn.Add("CallQueueCriteriaCollectionViaCallQueueCustomer", _callQueueCriteriaCollectionViaCallQueueCustomer);
			toReturn.Add("CallQueueCriteriaCollectionViaCallQueueCustomer__", _callQueueCriteriaCollectionViaCallQueueCustomer__);
			toReturn.Add("CallQueueCriteriaCollectionViaCallQueueCustomer_", _callQueueCriteriaCollectionViaCallQueueCustomer_);
			toReturn.Add("CallQueueCustomerCollectionViaCustomerCallQueueCallAttempt", _callQueueCustomerCollectionViaCustomerCallQueueCallAttempt);
			toReturn.Add("CallsCollectionViaCustomerCallQueueCallAttempt", _callsCollectionViaCustomerCallQueueCallAttempt);
			toReturn.Add("CallsCollectionViaPreAssessmentCustomerCallQueueCallAttempt", _callsCollectionViaPreAssessmentCustomerCallQueueCallAttempt);
			toReturn.Add("CallUploadCollectionViaDirectMail", _callUploadCollectionViaDirectMail);
			toReturn.Add("CampaignCollectionViaCallQueueCustomer__", _campaignCollectionViaCallQueueCustomer__);
			toReturn.Add("CampaignCollectionViaCampaignAssignment", _campaignCollectionViaCampaignAssignment);
			toReturn.Add("CampaignCollectionViaCallQueueCustomer", _campaignCollectionViaCallQueueCustomer);
			toReturn.Add("CampaignCollectionViaCampaignActivity_", _campaignCollectionViaCampaignActivity_);
			toReturn.Add("CampaignCollectionViaHealthPlanCallQueueCriteria_", _campaignCollectionViaHealthPlanCallQueueCriteria_);
			toReturn.Add("CampaignCollectionViaCampaignActivity", _campaignCollectionViaCampaignActivity);
			toReturn.Add("CampaignCollectionViaCalls", _campaignCollectionViaCalls);
			toReturn.Add("CampaignCollectionViaEventCustomers_", _campaignCollectionViaEventCustomers_);
			toReturn.Add("CampaignCollectionViaHealthPlanCallQueueCriteria", _campaignCollectionViaHealthPlanCallQueueCriteria);
			toReturn.Add("CampaignCollectionViaDirectMail", _campaignCollectionViaDirectMail);
			toReturn.Add("CampaignCollectionViaCallQueueCustomer_", _campaignCollectionViaCallQueueCustomer_);
			toReturn.Add("CampaignCollectionViaEventCustomers", _campaignCollectionViaEventCustomers);
			toReturn.Add("CampaignActivityCollectionViaCampaignActivityAssignment", _campaignActivityCollectionViaCampaignActivityAssignment);
			toReturn.Add("ChaperoneQuestionCollectionViaChaperoneAnswer", _chaperoneQuestionCollectionViaChaperoneAnswer);
			toReturn.Add("ChaperoneQuestionCollectionViaChaperoneAnswer_", _chaperoneQuestionCollectionViaChaperoneAnswer_);
			toReturn.Add("CheckListQuestionCollectionViaCheckListAnswer_", _checkListQuestionCollectionViaCheckListAnswer_);
			toReturn.Add("CheckListQuestionCollectionViaCheckListAnswer", _checkListQuestionCollectionViaCheckListAnswer);
			toReturn.Add("CheckListQuestionCollectionViaExitInterviewSignature", _checkListQuestionCollectionViaExitInterviewSignature);
			toReturn.Add("CityCollectionViaAddress", _cityCollectionViaAddress);
			toReturn.Add("CommunicationModeCollectionViaEvents____", _communicationModeCollectionViaEvents____);
			toReturn.Add("CommunicationModeCollectionViaEvents", _communicationModeCollectionViaEvents);
			toReturn.Add("CommunicationModeCollectionViaEvents___", _communicationModeCollectionViaEvents___);
			toReturn.Add("CommunicationModeCollectionViaEvents__", _communicationModeCollectionViaEvents__);
			toReturn.Add("CommunicationModeCollectionViaEvents_", _communicationModeCollectionViaEvents_);
			toReturn.Add("ContactCallStatusCollectionViaContactCall", _contactCallStatusCollectionViaContactCall);
			toReturn.Add("ContactCallStatusCollectionViaContactCall_", _contactCallStatusCollectionViaContactCall_);
			toReturn.Add("ContactCallStatusCollectionViaContactMeeting_", _contactCallStatusCollectionViaContactMeeting_);
			toReturn.Add("ContactCallStatusCollectionViaContactMeeting", _contactCallStatusCollectionViaContactMeeting);
			toReturn.Add("CountryCollectionViaAddress", _countryCollectionViaAddress);
			toReturn.Add("CouponTypeCollectionViaCoupons_", _couponTypeCollectionViaCoupons_);
			toReturn.Add("CouponTypeCollectionViaCoupons", _couponTypeCollectionViaCoupons);
			toReturn.Add("CustomerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation", _customerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation);
			toReturn.Add("CustomerEventScreeningTestsCollectionViaTestPerformedExternally_", _customerEventScreeningTestsCollectionViaTestPerformedExternally_);
			toReturn.Add("CustomerEventScreeningTestsCollectionViaCustomerEventTestState", _customerEventScreeningTestsCollectionViaCustomerEventTestState);
			toReturn.Add("CustomerEventScreeningTestsCollectionViaCustomerEventTestState_", _customerEventScreeningTestsCollectionViaCustomerEventTestState_);
			toReturn.Add("CustomerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason", _customerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason);
			toReturn.Add("CustomerEventScreeningTestsCollectionViaCustomerEventTestState__", _customerEventScreeningTestsCollectionViaCustomerEventTestState__);
			toReturn.Add("CustomerEventScreeningTestsCollectionViaTestPerformedExternally", _customerEventScreeningTestsCollectionViaTestPerformedExternally);
			toReturn.Add("CustomerEventScreeningTestsCollectionViaCustomerEventReading", _customerEventScreeningTestsCollectionViaCustomerEventReading);
			toReturn.Add("CustomerEventScreeningTestsCollectionViaTestNotPerformed", _customerEventScreeningTestsCollectionViaTestNotPerformed);
			toReturn.Add("CustomerEventScreeningTestsCollectionViaTestNotPerformed_", _customerEventScreeningTestsCollectionViaTestNotPerformed_);
			toReturn.Add("CustomerHealthQuestionsCollectionViaCustomerHealthInfo", _customerHealthQuestionsCollectionViaCustomerHealthInfo);
			toReturn.Add("CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_", _customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_);
			toReturn.Add("CustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_", _customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_);
			toReturn.Add("CustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer", _customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer);
			toReturn.Add("CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__", _customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__);
			toReturn.Add("CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___", _customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___);
			toReturn.Add("CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria", _customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria);
			toReturn.Add("CustomerHealthQuestionsCollectionViaCustomerHealthInfoArchive", _customerHealthQuestionsCollectionViaCustomerHealthInfoArchive);
			toReturn.Add("CustomerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician", _customerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician);
			toReturn.Add("CustomerProfileCollectionViaFillEventCallQueue", _customerProfileCollectionViaFillEventCallQueue);
			toReturn.Add("CustomerProfileCollectionViaDisqualifiedTest_", _customerProfileCollectionViaDisqualifiedTest_);
			toReturn.Add("CustomerProfileCollectionViaCustomerEligibility_", _customerProfileCollectionViaCustomerEligibility_);
			toReturn.Add("CustomerProfileCollectionViaEventCustomerResult_____", _customerProfileCollectionViaEventCustomerResult_____);
			toReturn.Add("CustomerProfileCollectionViaCustomerEligibility", _customerProfileCollectionViaCustomerEligibility);
			toReturn.Add("CustomerProfileCollectionViaLanguageBarrierCallQueue", _customerProfileCollectionViaLanguageBarrierCallQueue);
			toReturn.Add("CustomerProfileCollectionViaEventCustomerQuestionAnswer", _customerProfileCollectionViaEventCustomerQuestionAnswer);
			toReturn.Add("CustomerProfileCollectionViaHospitalPartnerCustomer_", _customerProfileCollectionViaHospitalPartnerCustomer_);
			toReturn.Add("CustomerProfileCollectionViaHospitalPartnerCustomer__", _customerProfileCollectionViaHospitalPartnerCustomer__);
			toReturn.Add("CustomerProfileCollectionViaHospitalPartnerCustomer", _customerProfileCollectionViaHospitalPartnerCustomer);
			toReturn.Add("CustomerProfileCollectionViaDisqualifiedTest", _customerProfileCollectionViaDisqualifiedTest);
			toReturn.Add("CustomerProfileCollectionViaCustomerPrimaryCarePhysician_", _customerProfileCollectionViaCustomerPrimaryCarePhysician_);
			toReturn.Add("CustomerProfileCollectionViaCustomerPrimaryCarePhysician__", _customerProfileCollectionViaCustomerPrimaryCarePhysician__);
			toReturn.Add("CustomerProfileCollectionViaNoShowCallQueue", _customerProfileCollectionViaNoShowCallQueue);
			toReturn.Add("CustomerProfileCollectionViaCustomerPrimaryCarePhysician", _customerProfileCollectionViaCustomerPrimaryCarePhysician);
			toReturn.Add("CustomerProfileCollectionViaCallQueueCustomer", _customerProfileCollectionViaCallQueueCustomer);
			toReturn.Add("CustomerProfileCollectionViaCustomerHealthInfo", _customerProfileCollectionViaCustomerHealthInfo);
			toReturn.Add("CustomerProfileCollectionViaCallQueueCustomer__", _customerProfileCollectionViaCallQueueCustomer__);
			toReturn.Add("CustomerProfileCollectionViaCallQueueCustomer_", _customerProfileCollectionViaCallQueueCustomer_);
			toReturn.Add("CustomerProfileCollectionViaEventCustomerResult______", _customerProfileCollectionViaEventCustomerResult______);
			toReturn.Add("CustomerProfileCollectionViaCustomerIcdCode", _customerProfileCollectionViaCustomerIcdCode);
			toReturn.Add("CustomerProfileCollectionViaMailRoundCallQueue", _customerProfileCollectionViaMailRoundCallQueue);
			toReturn.Add("CustomerProfileCollectionViaCustomerHealthInfoArchive", _customerProfileCollectionViaCustomerHealthInfoArchive);
			toReturn.Add("CustomerProfileCollectionViaEventCustomerQuestionAnswer_", _customerProfileCollectionViaEventCustomerQuestionAnswer_);
			toReturn.Add("CustomerProfileCollectionViaRequiredTest", _customerProfileCollectionViaRequiredTest);
			toReturn.Add("CustomerProfileCollectionViaCustomerWarmTransfer_", _customerProfileCollectionViaCustomerWarmTransfer_);
			toReturn.Add("CustomerProfileCollectionViaProspectCustomer", _customerProfileCollectionViaProspectCustomer);
			toReturn.Add("CustomerProfileCollectionViaEventCustomerResult_", _customerProfileCollectionViaEventCustomerResult_);
			toReturn.Add("CustomerProfileCollectionViaEventCustomerResult__", _customerProfileCollectionViaEventCustomerResult__);
			toReturn.Add("CustomerProfileCollectionViaUncontactedCustomerCallQueue", _customerProfileCollectionViaUncontactedCustomerCallQueue);
			toReturn.Add("CustomerProfileCollectionViaCustomerWarmTransfer", _customerProfileCollectionViaCustomerWarmTransfer);
			toReturn.Add("CustomerProfileCollectionViaMedication_", _customerProfileCollectionViaMedication_);
			toReturn.Add("CustomerProfileCollectionViaCallRoundCallQueue", _customerProfileCollectionViaCallRoundCallQueue);
			toReturn.Add("CustomerProfileCollectionViaCustomerTag_", _customerProfileCollectionViaCustomerTag_);
			toReturn.Add("CustomerProfileCollectionViaReferral", _customerProfileCollectionViaReferral);
			toReturn.Add("CustomerProfileCollectionViaCustomerTargeted_", _customerProfileCollectionViaCustomerTargeted_);
			toReturn.Add("CustomerProfileCollectionViaCustomerTargeted", _customerProfileCollectionViaCustomerTargeted);
			toReturn.Add("CustomerProfileCollectionViaCustomerTag", _customerProfileCollectionViaCustomerTag);
			toReturn.Add("CustomerProfileCollectionViaMedication", _customerProfileCollectionViaMedication);
			toReturn.Add("CustomerProfileCollectionViaEventCustomerResult________", _customerProfileCollectionViaEventCustomerResult________);
			toReturn.Add("CustomerProfileCollectionViaEventCustomerResult", _customerProfileCollectionViaEventCustomerResult);
			toReturn.Add("CustomerProfileCollectionViaEventCustomerResult_______", _customerProfileCollectionViaEventCustomerResult_______);
			toReturn.Add("CustomerProfileCollectionViaDirectMail", _customerProfileCollectionViaDirectMail);
			toReturn.Add("CustomerProfileCollectionViaEventCustomerResult____", _customerProfileCollectionViaEventCustomerResult____);
			toReturn.Add("CustomerProfileCollectionViaCurrentMedication", _customerProfileCollectionViaCurrentMedication);
			toReturn.Add("CustomerProfileCollectionViaGuardianDetails", _customerProfileCollectionViaGuardianDetails);
			toReturn.Add("CustomerProfileCollectionViaEventCustomers", _customerProfileCollectionViaEventCustomers);
			toReturn.Add("CustomerProfileCollectionViaEventCustomers_", _customerProfileCollectionViaEventCustomers_);
			toReturn.Add("CustomerProfileCollectionViaCustomerCallQueueCallAttempt", _customerProfileCollectionViaCustomerCallQueueCallAttempt);
			toReturn.Add("CustomerProfileCollectionViaEventCustomerResult___", _customerProfileCollectionViaEventCustomerResult___);
			toReturn.Add("CustomerProfileCollectionViaCustomerProfileHistory", _customerProfileCollectionViaCustomerProfileHistory);
			toReturn.Add("CustomerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt", _customerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt);
			toReturn.Add("CustomerProfileCollectionViaCustomerClinicalQuestionAnswer", _customerProfileCollectionViaCustomerClinicalQuestionAnswer);
			toReturn.Add("CustomerProfileCollectionViaCustomerClinicalQuestionAnswer_", _customerProfileCollectionViaCustomerClinicalQuestionAnswer_);
			toReturn.Add("CustomerProfileCollectionViaGuardianDetails_", _customerProfileCollectionViaGuardianDetails_);
			toReturn.Add("CustomerProfileHistoryCollectionViaEventCustomers_", _customerProfileHistoryCollectionViaEventCustomers_);
			toReturn.Add("CustomerProfileHistoryCollectionViaEventCustomers", _customerProfileHistoryCollectionViaEventCustomers);
			toReturn.Add("CustomerRegistrationNotesCollectionViaEventAppointmentCancellationLog", _customerRegistrationNotesCollectionViaEventAppointmentCancellationLog);
			toReturn.Add("CustomerRegistrationNotesCollectionViaEventCustomers_", _customerRegistrationNotesCollectionViaEventCustomers_);
			toReturn.Add("CustomerRegistrationNotesCollectionViaEventCustomers", _customerRegistrationNotesCollectionViaEventCustomers);
			toReturn.Add("DirectMailTypeCollectionViaDirectMail", _directMailTypeCollectionViaDirectMail);
			toReturn.Add("DirectMailTypeCollectionViaCampaignActivity", _directMailTypeCollectionViaCampaignActivity);
			toReturn.Add("DirectMailTypeCollectionViaCampaignActivity_", _directMailTypeCollectionViaCampaignActivity_);
			toReturn.Add("EventActivityTemplateCollectionViaEventActivityTemplateMeeting", _eventActivityTemplateCollectionViaEventActivityTemplateMeeting);
			toReturn.Add("EventActivityTemplateCollectionViaEventActivityTemplateTask", _eventActivityTemplateCollectionViaEventActivityTemplateTask);
			toReturn.Add("EventActivityTemplateCollectionViaEventActivityTemplateCall", _eventActivityTemplateCollectionViaEventActivityTemplateCall);
			toReturn.Add("EventActivityTemplateCollectionViaEventActivityTemplateEmail", _eventActivityTemplateCollectionViaEventActivityTemplateEmail);
			toReturn.Add("EventAppointmentCollectionViaEventCustomers", _eventAppointmentCollectionViaEventCustomers);
			toReturn.Add("EventAppointmentCollectionViaEventCustomers_", _eventAppointmentCollectionViaEventCustomers_);
			toReturn.Add("EventCustomerResultCollectionViaCustomerResultScreeningCommunication", _eventCustomerResultCollectionViaCustomerResultScreeningCommunication);
			toReturn.Add("EventCustomerResultCollectionViaPriorityInQueue_", _eventCustomerResultCollectionViaPriorityInQueue_);
			toReturn.Add("EventCustomerResultCollectionViaKynLabValues", _eventCustomerResultCollectionViaKynLabValues);
			toReturn.Add("EventCustomerResultCollectionViaCustomerResultScreeningCommunication__", _eventCustomerResultCollectionViaCustomerResultScreeningCommunication__);
			toReturn.Add("EventCustomerResultCollectionViaCustomerResultScreeningCommunication_", _eventCustomerResultCollectionViaCustomerResultScreeningCommunication_);
			toReturn.Add("EventCustomerResultCollectionViaCdcontentGeneratorTracking", _eventCustomerResultCollectionViaCdcontentGeneratorTracking);
			toReturn.Add("EventCustomerResultCollectionViaKynLabValues_", _eventCustomerResultCollectionViaKynLabValues_);
			toReturn.Add("EventCustomerResultCollectionViaPriorityInQueue", _eventCustomerResultCollectionViaPriorityInQueue);
			toReturn.Add("EventCustomersCollectionViaDisqualifiedTest_", _eventCustomersCollectionViaDisqualifiedTest_);
			toReturn.Add("EventCustomersCollectionViaEventAppointmentChangeLog", _eventCustomersCollectionViaEventAppointmentChangeLog);
			toReturn.Add("EventCustomersCollectionViaDisqualifiedTest", _eventCustomersCollectionViaDisqualifiedTest);
			toReturn.Add("EventCustomersCollectionViaEventCustomerPrimaryCarePhysician", _eventCustomersCollectionViaEventCustomerPrimaryCarePhysician);
			toReturn.Add("EventCustomersCollectionViaEventCustomerQuestionAnswer_", _eventCustomersCollectionViaEventCustomerQuestionAnswer_);
			toReturn.Add("EventCustomersCollectionViaEventAppointmentCancellationLog", _eventCustomersCollectionViaEventAppointmentCancellationLog);
			toReturn.Add("EventCustomersCollectionViaEventCustomerQuestionAnswer", _eventCustomersCollectionViaEventCustomerQuestionAnswer);
			toReturn.Add("EventCustomersCollectionViaEventCustomerGiftCard", _eventCustomersCollectionViaEventCustomerGiftCard);
			toReturn.Add("EventCustomersCollectionViaSurveyAnswer", _eventCustomersCollectionViaSurveyAnswer);
			toReturn.Add("EventCustomersCollectionViaEventCustomerTestNotPerformedNotification", _eventCustomersCollectionViaEventCustomerTestNotPerformedNotification);
			toReturn.Add("EventCustomersCollectionViaPhysicianRecordRequestSignature", _eventCustomersCollectionViaPhysicianRecordRequestSignature);
			toReturn.Add("EventCustomersCollectionViaEventCustomerRetest", _eventCustomersCollectionViaEventCustomerRetest);
			toReturn.Add("EventCustomersCollectionViaPcpDisposition", _eventCustomersCollectionViaPcpDisposition);
			toReturn.Add("EventCustomersCollectionViaPcpDisposition_", _eventCustomersCollectionViaPcpDisposition_);
			toReturn.Add("EventCustomersCollectionViaChaperoneSignature", _eventCustomersCollectionViaChaperoneSignature);
			toReturn.Add("EventCustomersCollectionViaChaperoneAnswer_", _eventCustomersCollectionViaChaperoneAnswer_);
			toReturn.Add("EventCustomersCollectionViaChaperoneAnswer", _eventCustomersCollectionViaChaperoneAnswer);
			toReturn.Add("EventCustomersCollectionViaCallQueueCustomer__", _eventCustomersCollectionViaCallQueueCustomer__);
			toReturn.Add("EventCustomersCollectionViaCheckListAnswer_", _eventCustomersCollectionViaCheckListAnswer_);
			toReturn.Add("EventCustomersCollectionViaCallQueueCustomer", _eventCustomersCollectionViaCallQueueCustomer);
			toReturn.Add("EventCustomersCollectionViaCallQueueCustomer_", _eventCustomersCollectionViaCallQueueCustomer_);
			toReturn.Add("EventCustomersCollectionViaCustomerHealthInfo", _eventCustomersCollectionViaCustomerHealthInfo);
			toReturn.Add("EventCustomersCollectionViaExitInterviewSignature", _eventCustomersCollectionViaExitInterviewSignature);
			toReturn.Add("EventCustomersCollectionViaFluConsentAnswer", _eventCustomersCollectionViaFluConsentAnswer);
			toReturn.Add("EventCustomersCollectionViaExitInterviewAnswer_", _eventCustomersCollectionViaExitInterviewAnswer_);
			toReturn.Add("EventCustomersCollectionViaCheckListAnswer", _eventCustomersCollectionViaCheckListAnswer);
			toReturn.Add("EventCustomersCollectionViaExitInterviewAnswer", _eventCustomersCollectionViaExitInterviewAnswer);
			toReturn.Add("EventCustomersCollectionViaFluConsentAnswer_", _eventCustomersCollectionViaFluConsentAnswer_);
			toReturn.Add("EventCustomersCollectionViaSurveyAnswer_", _eventCustomersCollectionViaSurveyAnswer_);
			toReturn.Add("EventCustomersCollectionViaCustomerHealthInfoArchive", _eventCustomersCollectionViaCustomerHealthInfoArchive);
			toReturn.Add("EventCustomersCollectionViaCustomerMedicareQuestionAnswer", _eventCustomersCollectionViaCustomerMedicareQuestionAnswer);
			toReturn.Add("EventCustomersCollectionViaFluConsentSignature", _eventCustomersCollectionViaFluConsentSignature);
			toReturn.Add("EventCustomersCollectionViaParticipationConsentSignature", _eventCustomersCollectionViaParticipationConsentSignature);
			toReturn.Add("EventsCollectionViaEventCustomerQuestionAnswer", _eventsCollectionViaEventCustomerQuestionAnswer);
			toReturn.Add("EventsCollectionViaEventPhysicianTest__", _eventsCollectionViaEventPhysicianTest__);
			toReturn.Add("EventsCollectionViaEventStaffAssignment__", _eventsCollectionViaEventStaffAssignment__);
			toReturn.Add("EventsCollectionViaEventStaffAssignment_", _eventsCollectionViaEventStaffAssignment_);
			toReturn.Add("EventsCollectionViaEventCustomers", _eventsCollectionViaEventCustomers);
			toReturn.Add("EventsCollectionViaEventCustomerResult____", _eventsCollectionViaEventCustomerResult____);
			toReturn.Add("EventsCollectionViaEventCustomerResult___", _eventsCollectionViaEventCustomerResult___);
			toReturn.Add("EventsCollectionViaHospitalPartnerCustomer_", _eventsCollectionViaHospitalPartnerCustomer_);
			toReturn.Add("EventsCollectionViaEventCustomerResult_", _eventsCollectionViaEventCustomerResult_);
			toReturn.Add("EventsCollectionViaEventCustomerResult________", _eventsCollectionViaEventCustomerResult________);
			toReturn.Add("EventsCollectionViaEventCustomerResult______", _eventsCollectionViaEventCustomerResult______);
			toReturn.Add("EventsCollectionViaEventCustomerResult__", _eventsCollectionViaEventCustomerResult__);
			toReturn.Add("EventsCollectionViaEventCustomerResult_______", _eventsCollectionViaEventCustomerResult_______);
			toReturn.Add("EventsCollectionViaEventPhysicianTest_", _eventsCollectionViaEventPhysicianTest_);
			toReturn.Add("EventsCollectionViaEventPhysicianTest", _eventsCollectionViaEventPhysicianTest);
			toReturn.Add("EventsCollectionViaEventCustomerQuestionAnswer_", _eventsCollectionViaEventCustomerQuestionAnswer_);
			toReturn.Add("EventsCollectionViaHospitalPartnerCustomer__", _eventsCollectionViaHospitalPartnerCustomer__);
			toReturn.Add("EventsCollectionViaEventCustomerResult", _eventsCollectionViaEventCustomerResult);
			toReturn.Add("EventsCollectionViaHospitalPartnerCustomer", _eventsCollectionViaHospitalPartnerCustomer);
			toReturn.Add("EventsCollectionViaEventCustomerResult_____", _eventsCollectionViaEventCustomerResult_____);
			toReturn.Add("EventsCollectionViaEventCustomers_", _eventsCollectionViaEventCustomers_);
			toReturn.Add("EventsCollectionViaEventAccountTestHcpcsCode", _eventsCollectionViaEventAccountTestHcpcsCode);
			toReturn.Add("EventsCollectionViaCustomerRegistrationNotes", _eventsCollectionViaCustomerRegistrationNotes);
			toReturn.Add("EventsCollectionViaCallQueueCustomer", _eventsCollectionViaCallQueueCustomer);
			toReturn.Add("EventsCollectionViaEventAccountTestHcpcsCode_", _eventsCollectionViaEventAccountTestHcpcsCode_);
			toReturn.Add("EventsCollectionViaSeminars", _eventsCollectionViaSeminars);
			toReturn.Add("EventsCollectionViaDisqualifiedTest_", _eventsCollectionViaDisqualifiedTest_);
			toReturn.Add("EventsCollectionViaDisqualifiedTest", _eventsCollectionViaDisqualifiedTest);
			toReturn.Add("EventsCollectionViaCustomEventNotification", _eventsCollectionViaCustomEventNotification);
			toReturn.Add("EventsCollectionViaCallQueueCustomer__", _eventsCollectionViaCallQueueCustomer__);
			toReturn.Add("EventsCollectionViaCustomerClinicalQuestionAnswer", _eventsCollectionViaCustomerClinicalQuestionAnswer);
			toReturn.Add("EventsCollectionViaCustomerClinicalQuestionAnswer_", _eventsCollectionViaCustomerClinicalQuestionAnswer_);
			toReturn.Add("EventsCollectionViaEventAppointmentChangeLog", _eventsCollectionViaEventAppointmentChangeLog);
			toReturn.Add("EventsCollectionViaEventAppointmentChangeLog_", _eventsCollectionViaEventAppointmentChangeLog_);
			toReturn.Add("EventsCollectionViaCallQueueCustomer_", _eventsCollectionViaCallQueueCustomer_);
			toReturn.Add("EventsCollectionViaHostPayment", _eventsCollectionViaHostPayment);
			toReturn.Add("EventsCollectionViaEventStaffAssignment", _eventsCollectionViaEventStaffAssignment);
			toReturn.Add("EventsCollectionViaEventAppointmentCancellationLog", _eventsCollectionViaEventAppointmentCancellationLog);
			toReturn.Add("EventTypeCollectionViaEvents", _eventTypeCollectionViaEvents);
			toReturn.Add("EventTypeCollectionViaEvents____", _eventTypeCollectionViaEvents____);
			toReturn.Add("EventTypeCollectionViaEvents___", _eventTypeCollectionViaEvents___);
			toReturn.Add("EventTypeCollectionViaEvents_", _eventTypeCollectionViaEvents_);
			toReturn.Add("EventTypeCollectionViaEvents__", _eventTypeCollectionViaEvents__);
			toReturn.Add("ExitInterviewQuestionCollectionViaExitInterviewAnswer_", _exitInterviewQuestionCollectionViaExitInterviewAnswer_);
			toReturn.Add("ExitInterviewQuestionCollectionViaExitInterviewAnswer", _exitInterviewQuestionCollectionViaExitInterviewAnswer);
			toReturn.Add("ExportableReportsCollectionViaExportableReportsQueue", _exportableReportsCollectionViaExportableReportsQueue);
			toReturn.Add("FileCollectionViaCustomerActivityTypeUpload_", _fileCollectionViaCustomerActivityTypeUpload_);
			toReturn.Add("FileCollectionViaCorporateUpload", _fileCollectionViaCorporateUpload);
			toReturn.Add("FileCollectionViaStaffEventScheduleUpload", _fileCollectionViaStaffEventScheduleUpload);
			toReturn.Add("FileCollectionViaCorporateUpload_", _fileCollectionViaCorporateUpload_);
			toReturn.Add("FileCollectionViaPhysicianRecordRequestSignature", _fileCollectionViaPhysicianRecordRequestSignature);
			toReturn.Add("FileCollectionViaCustomerActivityTypeUpload", _fileCollectionViaCustomerActivityTypeUpload);
			toReturn.Add("FileCollectionViaRapsUpload_", _fileCollectionViaRapsUpload_);
			toReturn.Add("FileCollectionViaCallUpload_", _fileCollectionViaCallUpload_);
			toReturn.Add("FileCollectionViaChaperoneSignature_", _fileCollectionViaChaperoneSignature_);
			toReturn.Add("FileCollectionViaRapsUpload", _fileCollectionViaRapsUpload);
			toReturn.Add("FileCollectionViaChaperoneSignature", _fileCollectionViaChaperoneSignature);
			toReturn.Add("FileCollectionViaCorporateUpload__", _fileCollectionViaCorporateUpload__);
			toReturn.Add("FileCollectionViaCallUpload", _fileCollectionViaCallUpload);
			toReturn.Add("FileCollectionViaHealthPlanCriteriaAssignmentUpload", _fileCollectionViaHealthPlanCriteriaAssignmentUpload);
			toReturn.Add("FileCollectionViaParticipationConsentSignature_", _fileCollectionViaParticipationConsentSignature_);
			toReturn.Add("FileCollectionViaMergeCustomerUpload", _fileCollectionViaMergeCustomerUpload);
			toReturn.Add("FileCollectionViaMedicationUpload_", _fileCollectionViaMedicationUpload_);
			toReturn.Add("FileCollectionViaMedicationUpload", _fileCollectionViaMedicationUpload);
			toReturn.Add("FileCollectionViaFluConsentSignature_", _fileCollectionViaFluConsentSignature_);
			toReturn.Add("FileCollectionViaFluConsentSignature", _fileCollectionViaFluConsentSignature);
			toReturn.Add("FileCollectionViaMergeCustomerUpload_", _fileCollectionViaMergeCustomerUpload_);
			toReturn.Add("FileCollectionViaExitInterviewSignature", _fileCollectionViaExitInterviewSignature);
			toReturn.Add("FileCollectionViaEventCustomerGiftCard_", _fileCollectionViaEventCustomerGiftCard_);
			toReturn.Add("FileCollectionViaEventCustomerGiftCard", _fileCollectionViaEventCustomerGiftCard);
			toReturn.Add("FileCollectionViaEligibilityUpload", _fileCollectionViaEligibilityUpload);
			toReturn.Add("FileCollectionViaEligibilityUpload_", _fileCollectionViaEligibilityUpload_);
			toReturn.Add("FileCollectionViaExportableReportsQueue", _fileCollectionViaExportableReportsQueue);
			toReturn.Add("FileCollectionViaSuspectConditionUpload", _fileCollectionViaSuspectConditionUpload);
			toReturn.Add("FileCollectionViaStaffEventScheduleUpload_", _fileCollectionViaStaffEventScheduleUpload_);
			toReturn.Add("FileCollectionViaParticipationConsentSignature", _fileCollectionViaParticipationConsentSignature);
			toReturn.Add("FileCollectionViaCustomerPhoneNumberUpdateUpload_", _fileCollectionViaCustomerPhoneNumberUpdateUpload_);
			toReturn.Add("FileCollectionViaCustomerPhoneNumberUpdateUpload", _fileCollectionViaCustomerPhoneNumberUpdateUpload);
			toReturn.Add("FileCollectionViaSuspectConditionUpload_", _fileCollectionViaSuspectConditionUpload_);
			toReturn.Add("FluConsentQuestionCollectionViaFluConsentAnswer", _fluConsentQuestionCollectionViaFluConsentAnswer);
			toReturn.Add("FluConsentQuestionCollectionViaFluConsentAnswer_", _fluConsentQuestionCollectionViaFluConsentAnswer_);
			toReturn.Add("GcNotGivenReasonCollectionViaEventCustomers", _gcNotGivenReasonCollectionViaEventCustomers);
			toReturn.Add("GcNotGivenReasonCollectionViaEventCustomers_", _gcNotGivenReasonCollectionViaEventCustomers_);
			toReturn.Add("HafTemplateCollectionViaClinicalTestQualificationCriteria", _hafTemplateCollectionViaClinicalTestQualificationCriteria);
			toReturn.Add("HafTemplateCollectionViaEvents___", _hafTemplateCollectionViaEvents___);
			toReturn.Add("HafTemplateCollectionViaEvents", _hafTemplateCollectionViaEvents);
			toReturn.Add("HafTemplateCollectionViaEvents____", _hafTemplateCollectionViaEvents____);
			toReturn.Add("HafTemplateCollectionViaEvents_", _hafTemplateCollectionViaEvents_);
			toReturn.Add("HafTemplateCollectionViaCustomerClinicalQuestionAnswer", _hafTemplateCollectionViaCustomerClinicalQuestionAnswer);
			toReturn.Add("HafTemplateCollectionViaEvents__", _hafTemplateCollectionViaEvents__);
			toReturn.Add("HafTemplateCollectionViaCustomerClinicalQuestionAnswer_", _hafTemplateCollectionViaCustomerClinicalQuestionAnswer_);
			toReturn.Add("HafTemplateCollectionViaClinicalTestQualificationCriteria_", _hafTemplateCollectionViaClinicalTestQualificationCriteria_);
			toReturn.Add("HcpcsCodeCollectionViaTestHcpcsCode_", _hcpcsCodeCollectionViaTestHcpcsCode_);
			toReturn.Add("HcpcsCodeCollectionViaTestHcpcsCode", _hcpcsCodeCollectionViaTestHcpcsCode);
			toReturn.Add("HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload", _healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload);
			toReturn.Add("HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment", _healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment);
			toReturn.Add("HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_", _healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_);
			toReturn.Add("HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment", _healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment);
			toReturn.Add("HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__", _healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__);
			toReturn.Add("HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_", _healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_);
			toReturn.Add("HospitalFacilityCollectionViaEventCustomers", _hospitalFacilityCollectionViaEventCustomers);
			toReturn.Add("HospitalFacilityCollectionViaEventCustomers_", _hospitalFacilityCollectionViaEventCustomers_);
			toReturn.Add("HostPaymentCollectionViaHostPaymentTransaction", _hostPaymentCollectionViaHostPaymentTransaction);
			toReturn.Add("IcdCodesCollectionViaCustomerIcdCode", _icdCodesCollectionViaCustomerIcdCode);
			toReturn.Add("InsuranceCompanyCollectionViaEligibility", _insuranceCompanyCollectionViaEligibility);
			toReturn.Add("LanguageCollectionViaHealthPlanCallQueueCriteria", _languageCollectionViaHealthPlanCallQueueCriteria);
			toReturn.Add("LanguageCollectionViaCallQueueCustomer_", _languageCollectionViaCallQueueCustomer_);
			toReturn.Add("LanguageCollectionViaCallQueueCustomer__", _languageCollectionViaCallQueueCustomer__);
			toReturn.Add("LanguageCollectionViaCallQueueCustomer", _languageCollectionViaCallQueueCustomer);
			toReturn.Add("LanguageCollectionViaHealthPlanCallQueueCriteria_", _languageCollectionViaHealthPlanCallQueueCriteria_);
			toReturn.Add("LookupCollectionViaUncontactedCustomerCallQueue", _lookupCollectionViaUncontactedCustomerCallQueue);
			toReturn.Add("LookupCollectionViaFillEventCallQueue", _lookupCollectionViaFillEventCallQueue);
			toReturn.Add("LookupCollectionViaTestPerformedExternally_", _lookupCollectionViaTestPerformedExternally_);
			toReturn.Add("LookupCollectionViaLanguageBarrierCallQueue", _lookupCollectionViaLanguageBarrierCallQueue);
			toReturn.Add("LookupCollectionViaMedicationUpload", _lookupCollectionViaMedicationUpload);
			toReturn.Add("LookupCollectionViaHostFacilityRanking", _lookupCollectionViaHostFacilityRanking);
			toReturn.Add("LookupCollectionViaHostFacilityRanking_", _lookupCollectionViaHostFacilityRanking_);
			toReturn.Add("LookupCollectionViaMailRoundCallQueue", _lookupCollectionViaMailRoundCallQueue);
			toReturn.Add("LookupCollectionViaHostPaymentTransaction_", _lookupCollectionViaHostPaymentTransaction_);
			toReturn.Add("LookupCollectionViaHostPayment", _lookupCollectionViaHostPayment);
			toReturn.Add("LookupCollectionViaHostPaymentTransaction", _lookupCollectionViaHostPaymentTransaction);
			toReturn.Add("LookupCollectionViaHostPayment_", _lookupCollectionViaHostPayment_);
			toReturn.Add("LookupCollectionViaKynLabValues", _lookupCollectionViaKynLabValues);
			toReturn.Add("LookupCollectionViaExportableReportsQueue", _lookupCollectionViaExportableReportsQueue);
			toReturn.Add("LookupCollectionViaFile", _lookupCollectionViaFile);
			toReturn.Add("LookupCollectionViaTestPerformedExternally", _lookupCollectionViaTestPerformedExternally);
			toReturn.Add("LookupCollectionViaKynLabValues_", _lookupCollectionViaKynLabValues_);
			toReturn.Add("LookupCollectionViaPreQualificationQuestion", _lookupCollectionViaPreQualificationQuestion);
			toReturn.Add("LookupCollectionViaPrintOrderItemTracking__", _lookupCollectionViaPrintOrderItemTracking__);
			toReturn.Add("LookupCollectionViaPcpDisposition_", _lookupCollectionViaPcpDisposition_);
			toReturn.Add("LookupCollectionViaPcpAppointment_", _lookupCollectionViaPcpAppointment_);
			toReturn.Add("LookupCollectionViaPcpDisposition", _lookupCollectionViaPcpDisposition);
			toReturn.Add("LookupCollectionViaRefundRequest", _lookupCollectionViaRefundRequest);
			toReturn.Add("LookupCollectionViaRapsUpload", _lookupCollectionViaRapsUpload);
			toReturn.Add("LookupCollectionViaRefundRequest_", _lookupCollectionViaRefundRequest_);
			toReturn.Add("LookupCollectionViaPrintOrderItemTracking___", _lookupCollectionViaPrintOrderItemTracking___);
			toReturn.Add("LookupCollectionViaProspectCustomer", _lookupCollectionViaProspectCustomer);
			toReturn.Add("LookupCollectionViaPcpAppointment", _lookupCollectionViaPcpAppointment);
			toReturn.Add("LookupCollectionViaHafTemplate", _lookupCollectionViaHafTemplate);
			toReturn.Add("LookupCollectionViaHafTemplate_", _lookupCollectionViaHafTemplate_);
			toReturn.Add("LookupCollectionViaSuspectConditionUpload", _lookupCollectionViaSuspectConditionUpload);
			toReturn.Add("LookupCollectionViaMergeCustomerUpload", _lookupCollectionViaMergeCustomerUpload);
			toReturn.Add("LookupCollectionViaNoShowCallQueue", _lookupCollectionViaNoShowCallQueue);
			toReturn.Add("LookupCollectionViaStaffEventScheduleUpload", _lookupCollectionViaStaffEventScheduleUpload);
			toReturn.Add("LookupCollectionViaHealthPlanRevenue", _lookupCollectionViaHealthPlanRevenue);
			toReturn.Add("LookupCollectionViaHealthPlanRevenue_", _lookupCollectionViaHealthPlanRevenue_);
			toReturn.Add("LookupCollectionViaHafTemplate__", _lookupCollectionViaHafTemplate__);
			toReturn.Add("LookupCollectionViaHafTemplate___", _lookupCollectionViaHafTemplate___);
			toReturn.Add("LookupCollectionViaCustomerProfileHistory___", _lookupCollectionViaCustomerProfileHistory___);
			toReturn.Add("LookupCollectionViaCustomerProfileHistory__", _lookupCollectionViaCustomerProfileHistory__);
			toReturn.Add("LookupCollectionViaCustomerProfileHistory", _lookupCollectionViaCustomerProfileHistory);
			toReturn.Add("LookupCollectionViaCustomEventNotification", _lookupCollectionViaCustomEventNotification);
			toReturn.Add("LookupCollectionViaCustomerRegistrationNotes", _lookupCollectionViaCustomerRegistrationNotes);
			toReturn.Add("LookupCollectionViaCustomerProfileHistory_", _lookupCollectionViaCustomerProfileHistory_);
			toReturn.Add("LookupCollectionViaCustomerPrimaryCarePhysician__", _lookupCollectionViaCustomerPrimaryCarePhysician__);
			toReturn.Add("LookupCollectionViaCustomerEventTestState__", _lookupCollectionViaCustomerEventTestState__);
			toReturn.Add("LookupCollectionViaCustomerEventTestState_", _lookupCollectionViaCustomerEventTestState_);
			toReturn.Add("LookupCollectionViaCustomerEventTestState", _lookupCollectionViaCustomerEventTestState);
			toReturn.Add("LookupCollectionViaCustomerPrimaryCarePhysician_", _lookupCollectionViaCustomerPrimaryCarePhysician_);
			toReturn.Add("LookupCollectionViaCustomerPrimaryCarePhysician", _lookupCollectionViaCustomerPrimaryCarePhysician);
			toReturn.Add("LookupCollectionViaCustomerPhoneNumberUpdateUpload", _lookupCollectionViaCustomerPhoneNumberUpdateUpload);
			toReturn.Add("LookupCollectionViaEligibilityUpload", _lookupCollectionViaEligibilityUpload);
			toReturn.Add("LookupCollectionViaEventCustomerResult__", _lookupCollectionViaEventCustomerResult__);
			toReturn.Add("LookupCollectionViaEventCustomerResult______", _lookupCollectionViaEventCustomerResult______);
			toReturn.Add("LookupCollectionViaEventCustomerResult_____", _lookupCollectionViaEventCustomerResult_____);
			toReturn.Add("LookupCollectionViaEventCustomerResult_", _lookupCollectionViaEventCustomerResult_);
			toReturn.Add("LookupCollectionViaEventCustomerResult____", _lookupCollectionViaEventCustomerResult____);
			toReturn.Add("LookupCollectionViaEventCustomerResult___", _lookupCollectionViaEventCustomerResult___);
			toReturn.Add("LookupCollectionViaEventCustomerResult________", _lookupCollectionViaEventCustomerResult________);
			toReturn.Add("LookupCollectionViaEventAppointmentCancellationLog", _lookupCollectionViaEventAppointmentCancellationLog);
			toReturn.Add("LookupCollectionViaEmailTemplate_", _lookupCollectionViaEmailTemplate_);
			toReturn.Add("LookupCollectionViaEmailTemplate", _lookupCollectionViaEmailTemplate);
			toReturn.Add("LookupCollectionViaEventCustomerResult_______", _lookupCollectionViaEventCustomerResult_______);
			toReturn.Add("LookupCollectionViaEventCustomerResult", _lookupCollectionViaEventCustomerResult);
			toReturn.Add("LookupCollectionViaEventAppointmentChangeLog", _lookupCollectionViaEventAppointmentChangeLog);
			toReturn.Add("LookupCollectionViaCustomerActivityTypeUpload", _lookupCollectionViaCustomerActivityTypeUpload);
			toReturn.Add("LookupCollectionViaCalls", _lookupCollectionViaCalls);
			toReturn.Add("LookupCollectionViaCalls_", _lookupCollectionViaCalls_);
			toReturn.Add("LookupCollectionViaCallRoundCallQueue", _lookupCollectionViaCallRoundCallQueue);
			toReturn.Add("LookupCollectionViaCampaign", _lookupCollectionViaCampaign);
			toReturn.Add("LookupCollectionViaCallUpload", _lookupCollectionViaCallUpload);
			toReturn.Add("LookupCollectionViaCalls__", _lookupCollectionViaCalls__);
			toReturn.Add("LookupCollectionViaCallQueueCustomer__", _lookupCollectionViaCallQueueCustomer__);
			toReturn.Add("LookupCollectionViaCallCenterTeam", _lookupCollectionViaCallCenterTeam);
			toReturn.Add("LookupCollectionViaAccountHraChatQuestionnaire_", _lookupCollectionViaAccountHraChatQuestionnaire_);
			toReturn.Add("LookupCollectionViaAccountHraChatQuestionnaire", _lookupCollectionViaAccountHraChatQuestionnaire);
			toReturn.Add("LookupCollectionViaCallQueueCustomer_", _lookupCollectionViaCallQueueCustomer_);
			toReturn.Add("LookupCollectionViaCallQueueCustomer", _lookupCollectionViaCallQueueCustomer);
			toReturn.Add("LookupCollectionViaCallCenterTeam_", _lookupCollectionViaCallCenterTeam_);
			toReturn.Add("LookupCollectionViaCampaign_", _lookupCollectionViaCampaign_);
			toReturn.Add("LookupCollectionViaClinicalTestQualificationCriteria_", _lookupCollectionViaClinicalTestQualificationCriteria_);
			toReturn.Add("LookupCollectionViaClinicalTestQualificationCriteria", _lookupCollectionViaClinicalTestQualificationCriteria);
			toReturn.Add("LookupCollectionViaCheckListTemplate_", _lookupCollectionViaCheckListTemplate_);
			toReturn.Add("LookupCollectionViaCorporateUpload", _lookupCollectionViaCorporateUpload);
			toReturn.Add("LookupCollectionViaClinicalTestQualificationCriteria___", _lookupCollectionViaClinicalTestQualificationCriteria___);
			toReturn.Add("LookupCollectionViaClinicalTestQualificationCriteria__", _lookupCollectionViaClinicalTestQualificationCriteria__);
			toReturn.Add("LookupCollectionViaCheckListTemplate", _lookupCollectionViaCheckListTemplate);
			toReturn.Add("LookupCollectionViaCampaignActivity", _lookupCollectionViaCampaignActivity);
			toReturn.Add("LookupCollectionViaCampaign___", _lookupCollectionViaCampaign___);
			toReturn.Add("LookupCollectionViaCampaign__", _lookupCollectionViaCampaign__);
			toReturn.Add("LookupCollectionViaCheckListAnswer_", _lookupCollectionViaCheckListAnswer_);
			toReturn.Add("LookupCollectionViaCheckListAnswer", _lookupCollectionViaCheckListAnswer);
			toReturn.Add("LookupCollectionViaCampaignActivity_", _lookupCollectionViaCampaignActivity_);
			toReturn.Add("LookupCollectionViaEvents________", _lookupCollectionViaEvents________);
			toReturn.Add("LookupCollectionViaEvents______________", _lookupCollectionViaEvents______________);
			toReturn.Add("LookupCollectionViaEvents_________", _lookupCollectionViaEvents_________);
			toReturn.Add("LookupCollectionViaEvents_____________", _lookupCollectionViaEvents_____________);
			toReturn.Add("LookupCollectionViaEvents___________________", _lookupCollectionViaEvents___________________);
			toReturn.Add("LookupCollectionViaEvents__________________", _lookupCollectionViaEvents__________________);
			toReturn.Add("LookupCollectionViaEvents_______________", _lookupCollectionViaEvents_______________);
			toReturn.Add("LookupCollectionViaEvents_______________________", _lookupCollectionViaEvents_______________________);
			toReturn.Add("LookupCollectionViaEvents____________", _lookupCollectionViaEvents____________);
			toReturn.Add("LookupCollectionViaEvents____", _lookupCollectionViaEvents____);
			toReturn.Add("LookupCollectionViaEvents________________", _lookupCollectionViaEvents________________);
			toReturn.Add("LookupCollectionViaEvents_______", _lookupCollectionViaEvents_______);
			toReturn.Add("LookupCollectionViaEvents_____", _lookupCollectionViaEvents_____);
			toReturn.Add("LookupCollectionViaEvents__________", _lookupCollectionViaEvents__________);
			toReturn.Add("LookupCollectionViaEvents_________________", _lookupCollectionViaEvents_________________);
			toReturn.Add("LookupCollectionViaEvents___________", _lookupCollectionViaEvents___________);
			toReturn.Add("LookupCollectionViaEvents______________________", _lookupCollectionViaEvents______________________);
			toReturn.Add("LookupCollectionViaEvents", _lookupCollectionViaEvents);
			toReturn.Add("LookupCollectionViaEvents______", _lookupCollectionViaEvents______);
			toReturn.Add("LookupCollectionViaEvents__", _lookupCollectionViaEvents__);
			toReturn.Add("LookupCollectionViaEventCustomers___", _lookupCollectionViaEventCustomers___);
			toReturn.Add("LookupCollectionViaEventCustomers", _lookupCollectionViaEventCustomers);
			toReturn.Add("LookupCollectionViaEventCustomers_", _lookupCollectionViaEventCustomers_);
			toReturn.Add("LookupCollectionViaEventCustomers__", _lookupCollectionViaEventCustomers__);
			toReturn.Add("LookupCollectionViaEvents___", _lookupCollectionViaEvents___);
			toReturn.Add("LookupCollectionViaEvents________________________", _lookupCollectionViaEvents________________________);
			toReturn.Add("LookupCollectionViaEvents____________________", _lookupCollectionViaEvents____________________);
			toReturn.Add("LookupCollectionViaEvents_____________________", _lookupCollectionViaEvents_____________________);
			toReturn.Add("LookupCollectionViaEvents_", _lookupCollectionViaEvents_);
			toReturn.Add("MarketingPrintOrderItemCollectionViaPrintOrderItemTracking", _marketingPrintOrderItemCollectionViaPrintOrderItemTracking);
			toReturn.Add("MarketingPrintOrderItemCollectionViaPrintOrderItemTracking_", _marketingPrintOrderItemCollectionViaPrintOrderItemTracking_);
			toReturn.Add("MedicareQuestionCollectionViaCustomerMedicareQuestionAnswer", _medicareQuestionCollectionViaCustomerMedicareQuestionAnswer);
			toReturn.Add("NdcCollectionViaCurrentMedication", _ndcCollectionViaCurrentMedication);
			toReturn.Add("NotesDetailsCollectionViaPriorityInQueue", _notesDetailsCollectionViaPriorityInQueue);
			toReturn.Add("NotesDetailsCollectionViaPriorityInQueue_", _notesDetailsCollectionViaPriorityInQueue_);
			toReturn.Add("NotesDetailsCollectionViaCallQueueCustomer_", _notesDetailsCollectionViaCallQueueCustomer_);
			toReturn.Add("NotesDetailsCollectionViaEvents", _notesDetailsCollectionViaEvents);
			toReturn.Add("NotesDetailsCollectionViaCallQueueCustomer__", _notesDetailsCollectionViaCallQueueCustomer__);
			toReturn.Add("NotesDetailsCollectionViaEvents_", _notesDetailsCollectionViaEvents_);
			toReturn.Add("NotesDetailsCollectionViaEvents___", _notesDetailsCollectionViaEvents___);
			toReturn.Add("NotesDetailsCollectionViaCallQueueCustomer", _notesDetailsCollectionViaCallQueueCustomer);
			toReturn.Add("NotesDetailsCollectionViaEvents____", _notesDetailsCollectionViaEvents____);
			toReturn.Add("NotesDetailsCollectionViaEvents__", _notesDetailsCollectionViaEvents__);
			toReturn.Add("NotificationMediumCollectionViaNotificationType", _notificationMediumCollectionViaNotificationType);
			toReturn.Add("NotificationMediumCollectionViaNotification", _notificationMediumCollectionViaNotification);
			toReturn.Add("NotificationTypeCollectionViaEventCustomerTestNotPerformedNotification", _notificationTypeCollectionViaEventCustomerTestNotPerformedNotification);
			toReturn.Add("NotificationTypeCollectionViaEmailTemplate", _notificationTypeCollectionViaEmailTemplate);
			toReturn.Add("NotificationTypeCollectionViaNotification", _notificationTypeCollectionViaNotification);
			toReturn.Add("OrderCollectionViaRefundRequest_", _orderCollectionViaRefundRequest_);
			toReturn.Add("OrderCollectionViaRefundRequest", _orderCollectionViaRefundRequest);
			toReturn.Add("OrganizationCollectionViaAccountTestHcpcsCode_", _organizationCollectionViaAccountTestHcpcsCode_);
			toReturn.Add("OrganizationCollectionViaAccountTestHcpcsCode", _organizationCollectionViaAccountTestHcpcsCode);
			toReturn.Add("OrganizationCollectionViaAccountCallCenterOrganization", _organizationCollectionViaAccountCallCenterOrganization);
			toReturn.Add("OrganizationCollectionViaAccountCallCenterOrganization_", _organizationCollectionViaAccountCallCenterOrganization_);
			toReturn.Add("OrganizationCollectionViaEventAccountTestHcpcsCode_", _organizationCollectionViaEventAccountTestHcpcsCode_);
			toReturn.Add("OrganizationCollectionViaEventAccountTestHcpcsCode", _organizationCollectionViaEventAccountTestHcpcsCode);
			toReturn.Add("OrganizationCollectionViaMarketingPrintOrder", _organizationCollectionViaMarketingPrintOrder);
			toReturn.Add("OrganizationCollectionViaMarketingPrintOrder_", _organizationCollectionViaMarketingPrintOrder_);
			toReturn.Add("OrganizationCollectionViaAffiliateProfile", _organizationCollectionViaAffiliateProfile);
			toReturn.Add("PackageCollectionViaPreApprovedPackage", _packageCollectionViaPreApprovedPackage);
			toReturn.Add("PhysicianMasterCollectionViaCustomerPrimaryCarePhysician", _physicianMasterCollectionViaCustomerPrimaryCarePhysician);
			toReturn.Add("PhysicianMasterCollectionViaCustomerPrimaryCarePhysician_", _physicianMasterCollectionViaCustomerPrimaryCarePhysician_);
			toReturn.Add("PhysicianMasterCollectionViaCustomerPrimaryCarePhysician__", _physicianMasterCollectionViaCustomerPrimaryCarePhysician__);
			toReturn.Add("PodDetailsCollectionViaSalesRepPodAssigments", _podDetailsCollectionViaSalesRepPodAssigments);
			toReturn.Add("PodDetailsCollectionViaEventStaffAssignment", _podDetailsCollectionViaEventStaffAssignment);
			toReturn.Add("PodDetailsCollectionViaEventNote_", _podDetailsCollectionViaEventNote_);
			toReturn.Add("PodDetailsCollectionViaEventNote", _podDetailsCollectionViaEventNote);
			toReturn.Add("PodDetailsCollectionViaPodDefaultTeam", _podDetailsCollectionViaPodDefaultTeam);
			toReturn.Add("PodDetailsCollectionViaEventStaffAssignment_", _podDetailsCollectionViaEventStaffAssignment_);
			toReturn.Add("PodDetailsCollectionViaEventStaffAssignment__", _podDetailsCollectionViaEventStaffAssignment__);
			toReturn.Add("PreQualificationQuestionCollectionViaEventCustomerQuestionAnswer_", _preQualificationQuestionCollectionViaEventCustomerQuestionAnswer_);
			toReturn.Add("PreQualificationQuestionCollectionViaDisqualifiedTest", _preQualificationQuestionCollectionViaDisqualifiedTest);
			toReturn.Add("PreQualificationQuestionCollectionViaDisqualifiedTest_", _preQualificationQuestionCollectionViaDisqualifiedTest_);
			toReturn.Add("PreQualificationQuestionCollectionViaEventCustomerQuestionAnswer", _preQualificationQuestionCollectionViaEventCustomerQuestionAnswer);
			toReturn.Add("ProspectCustomerCollectionViaCallQueueCustomer_", _prospectCustomerCollectionViaCallQueueCustomer_);
			toReturn.Add("ProspectCustomerCollectionViaCallQueueCustomer", _prospectCustomerCollectionViaCallQueueCustomer);
			toReturn.Add("ProspectCustomerCollectionViaCallQueueCustomer__", _prospectCustomerCollectionViaCallQueueCustomer__);
			toReturn.Add("ProspectListDetailsCollectionViaProspects", _prospectListDetailsCollectionViaProspects);
			toReturn.Add("ProspectsCollectionViaHostFacilityRanking", _prospectsCollectionViaHostFacilityRanking);
			toReturn.Add("ProspectsCollectionViaHostPayment", _prospectsCollectionViaHostPayment);
			toReturn.Add("ProspectTypeCollectionViaProspects", _prospectTypeCollectionViaProspects);
			toReturn.Add("RefundRequestCollectionViaEventAppointmentCancellationLog", _refundRequestCollectionViaEventAppointmentCancellationLog);
			toReturn.Add("RelationshipCollectionViaGuardianDetails_", _relationshipCollectionViaGuardianDetails_);
			toReturn.Add("RelationshipCollectionViaGuardianDetails", _relationshipCollectionViaGuardianDetails);
			toReturn.Add("RescheduleCancelDispositionCollectionViaEventAppointmentChangeLog", _rescheduleCancelDispositionCollectionViaEventAppointmentChangeLog);
			toReturn.Add("RescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog", _rescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog);
			toReturn.Add("RoleCollectionViaUser", _roleCollectionViaUser);
			toReturn.Add("RoleCollectionViaHostFacilityRanking", _roleCollectionViaHostFacilityRanking);
			toReturn.Add("RoleCollectionViaUser_", _roleCollectionViaUser_);
			toReturn.Add("ScheduleMethodCollectionViaEvents___", _scheduleMethodCollectionViaEvents___);
			toReturn.Add("ScheduleMethodCollectionViaEvents____", _scheduleMethodCollectionViaEvents____);
			toReturn.Add("ScheduleMethodCollectionViaEvents", _scheduleMethodCollectionViaEvents);
			toReturn.Add("ScheduleMethodCollectionViaEvents_", _scheduleMethodCollectionViaEvents_);
			toReturn.Add("ScheduleMethodCollectionViaEvents__", _scheduleMethodCollectionViaEvents__);
			toReturn.Add("ScriptsCollectionViaCallQueue", _scriptsCollectionViaCallQueue);
			toReturn.Add("ScriptsCollectionViaCallQueue_", _scriptsCollectionViaCallQueue_);
			toReturn.Add("ShippingOptionCollectionViaShippingDetail_", _shippingOptionCollectionViaShippingDetail_);
			toReturn.Add("ShippingOptionCollectionViaShippingDetail", _shippingOptionCollectionViaShippingDetail);
			toReturn.Add("StaffEventRoleCollectionViaEventStaffAssignment__", _staffEventRoleCollectionViaEventStaffAssignment__);
			toReturn.Add("StaffEventRoleCollectionViaPodDefaultTeam", _staffEventRoleCollectionViaPodDefaultTeam);
			toReturn.Add("StaffEventRoleCollectionViaEventStaffAssignment", _staffEventRoleCollectionViaEventStaffAssignment);
			toReturn.Add("StaffEventRoleCollectionViaEventStaffAssignment_", _staffEventRoleCollectionViaEventStaffAssignment_);
			toReturn.Add("StandardFindingTestReadingCollectionViaCustomerEventReading", _standardFindingTestReadingCollectionViaCustomerEventReading);
			toReturn.Add("StateCollectionViaAddress", _stateCollectionViaAddress);
			toReturn.Add("SurveyQuestionCollectionViaSurveyAnswer_", _surveyQuestionCollectionViaSurveyAnswer_);
			toReturn.Add("SurveyQuestionCollectionViaSurveyAnswer", _surveyQuestionCollectionViaSurveyAnswer);
			toReturn.Add("TagCollectionViaPreAssessmentCustomerCallQueueCallAttempt", _tagCollectionViaPreAssessmentCustomerCallQueueCallAttempt);
			toReturn.Add("TagCollectionViaCustomerCallQueueCallAttempt", _tagCollectionViaCustomerCallQueueCallAttempt);
			toReturn.Add("TaskPriorityTypesCollectionViaTaskDetails__", _taskPriorityTypesCollectionViaTaskDetails__);
			toReturn.Add("TaskPriorityTypesCollectionViaTaskDetails_", _taskPriorityTypesCollectionViaTaskDetails_);
			toReturn.Add("TaskPriorityTypesCollectionViaTaskDetails", _taskPriorityTypesCollectionViaTaskDetails);
			toReturn.Add("TaskStatusTypesCollectionViaTaskDetails_", _taskStatusTypesCollectionViaTaskDetails_);
			toReturn.Add("TaskStatusTypesCollectionViaTaskDetails__", _taskStatusTypesCollectionViaTaskDetails__);
			toReturn.Add("TaskStatusTypesCollectionViaTaskDetails", _taskStatusTypesCollectionViaTaskDetails);
			toReturn.Add("TechnicianProfileCollectionViaPinChangelog", _technicianProfileCollectionViaPinChangelog);
			toReturn.Add("TerritoryCollectionViaTerritory", _territoryCollectionViaTerritory);
			toReturn.Add("TerritoryCollectionViaOrganizationRoleUserTerritory", _territoryCollectionViaOrganizationRoleUserTerritory);
			toReturn.Add("TestCollectionViaEventCustomerTestNotPerformedNotification", _testCollectionViaEventCustomerTestNotPerformedNotification);
			toReturn.Add("TestCollectionViaEventPhysicianTest", _testCollectionViaEventPhysicianTest);
			toReturn.Add("TestCollectionViaDisqualifiedTest_", _testCollectionViaDisqualifiedTest_);
			toReturn.Add("TestCollectionViaEventCustomerRetest", _testCollectionViaEventCustomerRetest);
			toReturn.Add("TestCollectionViaEventPhysicianTest_", _testCollectionViaEventPhysicianTest_);
			toReturn.Add("TestCollectionViaKynLabValues_", _testCollectionViaKynLabValues_);
			toReturn.Add("TestCollectionViaEventPhysicianTest__", _testCollectionViaEventPhysicianTest__);
			toReturn.Add("TestCollectionViaTestHcpcsCode_", _testCollectionViaTestHcpcsCode_);
			toReturn.Add("TestCollectionViaTestHcpcsCode", _testCollectionViaTestHcpcsCode);
			toReturn.Add("TestCollectionViaKynLabValues", _testCollectionViaKynLabValues);
			toReturn.Add("TestCollectionViaPreApprovedTest", _testCollectionViaPreApprovedTest);
			toReturn.Add("TestCollectionViaClinicalTestQualificationCriteria", _testCollectionViaClinicalTestQualificationCriteria);
			toReturn.Add("TestCollectionViaRequiredTest", _testCollectionViaRequiredTest);
			toReturn.Add("TestCollectionViaClinicalTestQualificationCriteria_", _testCollectionViaClinicalTestQualificationCriteria_);
			toReturn.Add("TestCollectionViaDisqualifiedTest", _testCollectionViaDisqualifiedTest);
			toReturn.Add("TestCollectionViaPreQualificationTestTemplate", _testCollectionViaPreQualificationTestTemplate);
			toReturn.Add("TestCollectionViaPreQualificationTestTemplate_", _testCollectionViaPreQualificationTestTemplate_);
			toReturn.Add("TestCollectionViaPreQualificationQuestion", _testCollectionViaPreQualificationQuestion);
			toReturn.Add("TestHcpcsCodeCollectionViaEventAccountTestHcpcsCode_", _testHcpcsCodeCollectionViaEventAccountTestHcpcsCode_);
			toReturn.Add("TestHcpcsCodeCollectionViaEventAccountTestHcpcsCode", _testHcpcsCodeCollectionViaEventAccountTestHcpcsCode);
			toReturn.Add("TestHcpcsCodeCollectionViaAccountTestHcpcsCode_", _testHcpcsCodeCollectionViaAccountTestHcpcsCode_);
			toReturn.Add("TestHcpcsCodeCollectionViaAccountTestHcpcsCode", _testHcpcsCodeCollectionViaAccountTestHcpcsCode);
			toReturn.Add("TestNotPerformedReasonCollectionViaTestNotPerformed_", _testNotPerformedReasonCollectionViaTestNotPerformed_);
			toReturn.Add("TestNotPerformedReasonCollectionViaTestNotPerformed", _testNotPerformedReasonCollectionViaTestNotPerformed);
			toReturn.Add("TestReadingCollectionViaCustomerEventReading", _testReadingCollectionViaCustomerEventReading);
			toReturn.Add("TestUnableScreenReasonCollectionViaCustomerEventUnableScreenReason", _testUnableScreenReasonCollectionViaCustomerEventUnableScreenReason);
			toReturn.Add("UserLoginCollectionViaPasswordChangelog", _userLoginCollectionViaPasswordChangelog);
			toReturn.Add("ZipCollectionViaAddress", _zipCollectionViaAddress);
			toReturn.Add("AccountCoordinatorProfile", _accountCoordinatorProfile);
			toReturn.Add("AffiliateProfile_", _affiliateProfile_);
			toReturn.Add("CallCenterRepProfile", _callCenterRepProfile);
			toReturn.Add("CustomerProfile", _customerProfile);
			toReturn.Add("PhysicianProfile", _physicianProfile);
			toReturn.Add("TechnicianProfile", _technicianProfile);
			return toReturn;
		}
		
		/// <summary> Adds the internals to the active context. </summary>
		protected override void AddInternalsToContext()
		{
			if(_accountCallCenterOrganization_!=null)
			{
				_accountCallCenterOrganization_.ActiveContext = base.ActiveContext;
			}
			if(_accountCallCenterOrganization!=null)
			{
				_accountCallCenterOrganization.ActiveContext = base.ActiveContext;
			}
			if(_accountHraChatQuestionnaire_!=null)
			{
				_accountHraChatQuestionnaire_.ActiveContext = base.ActiveContext;
			}
			if(_accountHraChatQuestionnaire!=null)
			{
				_accountHraChatQuestionnaire.ActiveContext = base.ActiveContext;
			}
			if(_accountTestHcpcsCode_!=null)
			{
				_accountTestHcpcsCode_.ActiveContext = base.ActiveContext;
			}
			if(_accountTestHcpcsCode!=null)
			{
				_accountTestHcpcsCode.ActiveContext = base.ActiveContext;
			}
			if(_activityType!=null)
			{
				_activityType.ActiveContext = base.ActiveContext;
			}
			if(_additionalFields_!=null)
			{
				_additionalFields_.ActiveContext = base.ActiveContext;
			}
			if(_additionalFields!=null)
			{
				_additionalFields.ActiveContext = base.ActiveContext;
			}
			if(_address!=null)
			{
				_address.ActiveContext = base.ActiveContext;
			}
			if(_advocateManagerTeam_!=null)
			{
				_advocateManagerTeam_.ActiveContext = base.ActiveContext;
			}
			if(_advocateManagerTeam!=null)
			{
				_advocateManagerTeam.ActiveContext = base.ActiveContext;
			}
			if(_afcampaign_!=null)
			{
				_afcampaign_.ActiveContext = base.ActiveContext;
			}
			if(_afcampaign!=null)
			{
				_afcampaign.ActiveContext = base.ActiveContext;
			}
			if(_affiliateProfile!=null)
			{
				_affiliateProfile.ActiveContext = base.ActiveContext;
			}
			if(_applicationAuthentication_!=null)
			{
				_applicationAuthentication_.ActiveContext = base.ActiveContext;
			}
			if(_applicationAuthentication!=null)
			{
				_applicationAuthentication.ActiveContext = base.ActiveContext;
			}
			if(_barrier_!=null)
			{
				_barrier_.ActiveContext = base.ActiveContext;
			}
			if(_barrier!=null)
			{
				_barrier.ActiveContext = base.ActiveContext;
			}
			if(_callCenterAgentTeam!=null)
			{
				_callCenterAgentTeam.ActiveContext = base.ActiveContext;
			}
			if(_callCenterAgentTeamLog__!=null)
			{
				_callCenterAgentTeamLog__.ActiveContext = base.ActiveContext;
			}
			if(_callCenterAgentTeamLog_!=null)
			{
				_callCenterAgentTeamLog_.ActiveContext = base.ActiveContext;
			}
			if(_callCenterAgentTeamLog!=null)
			{
				_callCenterAgentTeamLog.ActiveContext = base.ActiveContext;
			}
			if(_callCenterTeam_!=null)
			{
				_callCenterTeam_.ActiveContext = base.ActiveContext;
			}
			if(_callCenterTeam!=null)
			{
				_callCenterTeam.ActiveContext = base.ActiveContext;
			}
			if(_callQueue_!=null)
			{
				_callQueue_.ActiveContext = base.ActiveContext;
			}
			if(_callQueue!=null)
			{
				_callQueue.ActiveContext = base.ActiveContext;
			}
			if(_callQueueAssignment!=null)
			{
				_callQueueAssignment.ActiveContext = base.ActiveContext;
			}
			if(_callQueueCustomer__!=null)
			{
				_callQueueCustomer__.ActiveContext = base.ActiveContext;
			}
			if(_callQueueCustomer_!=null)
			{
				_callQueueCustomer_.ActiveContext = base.ActiveContext;
			}
			if(_callQueueCustomer!=null)
			{
				_callQueueCustomer.ActiveContext = base.ActiveContext;
			}
			if(_callQueueCustomerLock!=null)
			{
				_callQueueCustomerLock.ActiveContext = base.ActiveContext;
			}
			if(_callQueueCustomTag!=null)
			{
				_callQueueCustomTag.ActiveContext = base.ActiveContext;
			}
			if(_callRoundCallQueue!=null)
			{
				_callRoundCallQueue.ActiveContext = base.ActiveContext;
			}
			if(_calls!=null)
			{
				_calls.ActiveContext = base.ActiveContext;
			}
			if(_callUpload!=null)
			{
				_callUpload.ActiveContext = base.ActiveContext;
			}
			if(_campaign_!=null)
			{
				_campaign_.ActiveContext = base.ActiveContext;
			}
			if(_campaign!=null)
			{
				_campaign.ActiveContext = base.ActiveContext;
			}
			if(_campaignActivity_!=null)
			{
				_campaignActivity_.ActiveContext = base.ActiveContext;
			}
			if(_campaignActivity!=null)
			{
				_campaignActivity.ActiveContext = base.ActiveContext;
			}
			if(_campaignActivityAssignment!=null)
			{
				_campaignActivityAssignment.ActiveContext = base.ActiveContext;
			}
			if(_campaignAssignment!=null)
			{
				_campaignAssignment.ActiveContext = base.ActiveContext;
			}
			if(_cdcontentGeneratorTracking!=null)
			{
				_cdcontentGeneratorTracking.ActiveContext = base.ActiveContext;
			}
			if(_chaperoneAnswer_!=null)
			{
				_chaperoneAnswer_.ActiveContext = base.ActiveContext;
			}
			if(_chaperoneAnswer!=null)
			{
				_chaperoneAnswer.ActiveContext = base.ActiveContext;
			}
			if(_chaperoneSignature!=null)
			{
				_chaperoneSignature.ActiveContext = base.ActiveContext;
			}
			if(_check_!=null)
			{
				_check_.ActiveContext = base.ActiveContext;
			}
			if(_check!=null)
			{
				_check.ActiveContext = base.ActiveContext;
			}
			if(_checkListAnswer_!=null)
			{
				_checkListAnswer_.ActiveContext = base.ActiveContext;
			}
			if(_checkListAnswer!=null)
			{
				_checkListAnswer.ActiveContext = base.ActiveContext;
			}
			if(_checkListTemplate_!=null)
			{
				_checkListTemplate_.ActiveContext = base.ActiveContext;
			}
			if(_checkListTemplate!=null)
			{
				_checkListTemplate.ActiveContext = base.ActiveContext;
			}
			if(_clinicalTestQualificationCriteria_!=null)
			{
				_clinicalTestQualificationCriteria_.ActiveContext = base.ActiveContext;
			}
			if(_clinicalTestQualificationCriteria!=null)
			{
				_clinicalTestQualificationCriteria.ActiveContext = base.ActiveContext;
			}
			if(_contactCall_!=null)
			{
				_contactCall_.ActiveContext = base.ActiveContext;
			}
			if(_contactCall!=null)
			{
				_contactCall.ActiveContext = base.ActiveContext;
			}
			if(_contactMeeting_!=null)
			{
				_contactMeeting_.ActiveContext = base.ActiveContext;
			}
			if(_contactMeeting!=null)
			{
				_contactMeeting.ActiveContext = base.ActiveContext;
			}
			if(_content_!=null)
			{
				_content_.ActiveContext = base.ActiveContext;
			}
			if(_content!=null)
			{
				_content.ActiveContext = base.ActiveContext;
			}
			if(_corporateTag_!=null)
			{
				_corporateTag_.ActiveContext = base.ActiveContext;
			}
			if(_corporateTag!=null)
			{
				_corporateTag.ActiveContext = base.ActiveContext;
			}
			if(_corporateUpload!=null)
			{
				_corporateUpload.ActiveContext = base.ActiveContext;
			}
			if(_coupons_!=null)
			{
				_coupons_.ActiveContext = base.ActiveContext;
			}
			if(_coupons!=null)
			{
				_coupons.ActiveContext = base.ActiveContext;
			}
			if(_currentMedication!=null)
			{
				_currentMedication.ActiveContext = base.ActiveContext;
			}
			if(_customerActivityTypeUpload!=null)
			{
				_customerActivityTypeUpload.ActiveContext = base.ActiveContext;
			}
			if(_customerCallAttempts!=null)
			{
				_customerCallAttempts.ActiveContext = base.ActiveContext;
			}
			if(_customerCallQueueCallAttempt!=null)
			{
				_customerCallQueueCallAttempt.ActiveContext = base.ActiveContext;
			}
			if(_customerClinicalQuestionAnswer_!=null)
			{
				_customerClinicalQuestionAnswer_.ActiveContext = base.ActiveContext;
			}
			if(_customerClinicalQuestionAnswer!=null)
			{
				_customerClinicalQuestionAnswer.ActiveContext = base.ActiveContext;
			}
			if(_customerEligibility_!=null)
			{
				_customerEligibility_.ActiveContext = base.ActiveContext;
			}
			if(_customerEligibility!=null)
			{
				_customerEligibility.ActiveContext = base.ActiveContext;
			}
			if(_customerEventCriticalTestData_!=null)
			{
				_customerEventCriticalTestData_.ActiveContext = base.ActiveContext;
			}
			if(_customerEventCriticalTestData!=null)
			{
				_customerEventCriticalTestData.ActiveContext = base.ActiveContext;
			}
			if(_customerEventPriorityInQueueData_!=null)
			{
				_customerEventPriorityInQueueData_.ActiveContext = base.ActiveContext;
			}
			if(_customerEventPriorityInQueueData!=null)
			{
				_customerEventPriorityInQueueData.ActiveContext = base.ActiveContext;
			}
			if(_customerEventReading!=null)
			{
				_customerEventReading.ActiveContext = base.ActiveContext;
			}
			if(_customerEventTestPhysicianEvaluation!=null)
			{
				_customerEventTestPhysicianEvaluation.ActiveContext = base.ActiveContext;
			}
			if(_customerEventTestState__!=null)
			{
				_customerEventTestState__.ActiveContext = base.ActiveContext;
			}
			if(_customerEventTestState_!=null)
			{
				_customerEventTestState_.ActiveContext = base.ActiveContext;
			}
			if(_customerEventTestState!=null)
			{
				_customerEventTestState.ActiveContext = base.ActiveContext;
			}
			if(_customerEventUnableScreenReason!=null)
			{
				_customerEventUnableScreenReason.ActiveContext = base.ActiveContext;
			}
			if(_customerHealthInfo!=null)
			{
				_customerHealthInfo.ActiveContext = base.ActiveContext;
			}
			if(_customerHealthInfoArchive!=null)
			{
				_customerHealthInfoArchive.ActiveContext = base.ActiveContext;
			}
			if(_customerIcdCode!=null)
			{
				_customerIcdCode.ActiveContext = base.ActiveContext;
			}
			if(_customerLockForCall!=null)
			{
				_customerLockForCall.ActiveContext = base.ActiveContext;
			}
			if(_customerMedicareQuestionAnswer!=null)
			{
				_customerMedicareQuestionAnswer.ActiveContext = base.ActiveContext;
			}
			if(_customerPhoneNumberUpdateUpload!=null)
			{
				_customerPhoneNumberUpdateUpload.ActiveContext = base.ActiveContext;
			}
			if(_customerPrimaryCarePhysician_!=null)
			{
				_customerPrimaryCarePhysician_.ActiveContext = base.ActiveContext;
			}
			if(_customerPrimaryCarePhysician__!=null)
			{
				_customerPrimaryCarePhysician__.ActiveContext = base.ActiveContext;
			}
			if(_customerPrimaryCarePhysician!=null)
			{
				_customerPrimaryCarePhysician.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileHistory!=null)
			{
				_customerProfileHistory.ActiveContext = base.ActiveContext;
			}
			if(_customerRegistrationNotes!=null)
			{
				_customerRegistrationNotes.ActiveContext = base.ActiveContext;
			}
			if(_customerResultScreeningCommunication__!=null)
			{
				_customerResultScreeningCommunication__.ActiveContext = base.ActiveContext;
			}
			if(_customerResultScreeningCommunication_!=null)
			{
				_customerResultScreeningCommunication_.ActiveContext = base.ActiveContext;
			}
			if(_customerResultScreeningCommunication!=null)
			{
				_customerResultScreeningCommunication.ActiveContext = base.ActiveContext;
			}
			if(_customerTag_!=null)
			{
				_customerTag_.ActiveContext = base.ActiveContext;
			}
			if(_customerTag!=null)
			{
				_customerTag.ActiveContext = base.ActiveContext;
			}
			if(_customerTargeted_!=null)
			{
				_customerTargeted_.ActiveContext = base.ActiveContext;
			}
			if(_customerTargeted!=null)
			{
				_customerTargeted.ActiveContext = base.ActiveContext;
			}
			if(_customerWarmTransfer_!=null)
			{
				_customerWarmTransfer_.ActiveContext = base.ActiveContext;
			}
			if(_customerWarmTransfer!=null)
			{
				_customerWarmTransfer.ActiveContext = base.ActiveContext;
			}
			if(_customEventNotification!=null)
			{
				_customEventNotification.ActiveContext = base.ActiveContext;
			}
			if(_directMail!=null)
			{
				_directMail.ActiveContext = base.ActiveContext;
			}
			if(_directMailType_!=null)
			{
				_directMailType_.ActiveContext = base.ActiveContext;
			}
			if(_directMailType!=null)
			{
				_directMailType.ActiveContext = base.ActiveContext;
			}
			if(_disqualifiedTest_!=null)
			{
				_disqualifiedTest_.ActiveContext = base.ActiveContext;
			}
			if(_disqualifiedTest!=null)
			{
				_disqualifiedTest.ActiveContext = base.ActiveContext;
			}
			if(_eligibility!=null)
			{
				_eligibility.ActiveContext = base.ActiveContext;
			}
			if(_eligibilityUpload!=null)
			{
				_eligibilityUpload.ActiveContext = base.ActiveContext;
			}
			if(_emailTemplate!=null)
			{
				_emailTemplate.ActiveContext = base.ActiveContext;
			}
			if(_eventAccountTestHcpcsCode_!=null)
			{
				_eventAccountTestHcpcsCode_.ActiveContext = base.ActiveContext;
			}
			if(_eventAccountTestHcpcsCode!=null)
			{
				_eventAccountTestHcpcsCode.ActiveContext = base.ActiveContext;
			}
			if(_eventActivityTemplate!=null)
			{
				_eventActivityTemplate.ActiveContext = base.ActiveContext;
			}
			if(_eventActivityTemplateCall!=null)
			{
				_eventActivityTemplateCall.ActiveContext = base.ActiveContext;
			}
			if(_eventActivityTemplateEmail!=null)
			{
				_eventActivityTemplateEmail.ActiveContext = base.ActiveContext;
			}
			if(_eventActivityTemplateMeeting!=null)
			{
				_eventActivityTemplateMeeting.ActiveContext = base.ActiveContext;
			}
			if(_eventActivityTemplateTask!=null)
			{
				_eventActivityTemplateTask.ActiveContext = base.ActiveContext;
			}
			if(_eventAppointment!=null)
			{
				_eventAppointment.ActiveContext = base.ActiveContext;
			}
			if(_eventAppointmentCancellationLog!=null)
			{
				_eventAppointmentCancellationLog.ActiveContext = base.ActiveContext;
			}
			if(_eventAppointmentChangeLog!=null)
			{
				_eventAppointmentChangeLog.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerBasicBioMetric!=null)
			{
				_eventCustomerBasicBioMetric.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerGiftCard!=null)
			{
				_eventCustomerGiftCard.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerPrimaryCarePhysician!=null)
			{
				_eventCustomerPrimaryCarePhysician.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerQuestionAnswer_!=null)
			{
				_eventCustomerQuestionAnswer_.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerQuestionAnswer!=null)
			{
				_eventCustomerQuestionAnswer.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerResult___!=null)
			{
				_eventCustomerResult___.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerResult__!=null)
			{
				_eventCustomerResult__.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerResult_!=null)
			{
				_eventCustomerResult_.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerResult____!=null)
			{
				_eventCustomerResult____.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerResult______!=null)
			{
				_eventCustomerResult______.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerResult_______!=null)
			{
				_eventCustomerResult_______.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerResult!=null)
			{
				_eventCustomerResult.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerResult_____!=null)
			{
				_eventCustomerResult_____.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerResult________!=null)
			{
				_eventCustomerResult________.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerResultBloodLab!=null)
			{
				_eventCustomerResultBloodLab.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerResultHistory!=null)
			{
				_eventCustomerResultHistory.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerResultHistory_!=null)
			{
				_eventCustomerResultHistory_.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerResultHistory__!=null)
			{
				_eventCustomerResultHistory__.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerRetest!=null)
			{
				_eventCustomerRetest.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomers_!=null)
			{
				_eventCustomers_.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomers!=null)
			{
				_eventCustomers.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerTestNotPerformedNotification!=null)
			{
				_eventCustomerTestNotPerformedNotification.ActiveContext = base.ActiveContext;
			}
			if(_eventNote_!=null)
			{
				_eventNote_.ActiveContext = base.ActiveContext;
			}
			if(_eventNote!=null)
			{
				_eventNote.ActiveContext = base.ActiveContext;
			}
			if(_eventPhysicianTest__!=null)
			{
				_eventPhysicianTest__.ActiveContext = base.ActiveContext;
			}
			if(_eventPhysicianTest_!=null)
			{
				_eventPhysicianTest_.ActiveContext = base.ActiveContext;
			}
			if(_eventPhysicianTest!=null)
			{
				_eventPhysicianTest.ActiveContext = base.ActiveContext;
			}
			if(_events___!=null)
			{
				_events___.ActiveContext = base.ActiveContext;
			}
			if(_events____!=null)
			{
				_events____.ActiveContext = base.ActiveContext;
			}
			if(_events__!=null)
			{
				_events__.ActiveContext = base.ActiveContext;
			}
			if(_events!=null)
			{
				_events.ActiveContext = base.ActiveContext;
			}
			if(_events_!=null)
			{
				_events_.ActiveContext = base.ActiveContext;
			}
			if(_eventStaffAssignment__!=null)
			{
				_eventStaffAssignment__.ActiveContext = base.ActiveContext;
			}
			if(_eventStaffAssignment_!=null)
			{
				_eventStaffAssignment_.ActiveContext = base.ActiveContext;
			}
			if(_eventStaffAssignment!=null)
			{
				_eventStaffAssignment.ActiveContext = base.ActiveContext;
			}
			if(_exitInterviewAnswer_!=null)
			{
				_exitInterviewAnswer_.ActiveContext = base.ActiveContext;
			}
			if(_exitInterviewAnswer!=null)
			{
				_exitInterviewAnswer.ActiveContext = base.ActiveContext;
			}
			if(_exitInterviewSignature!=null)
			{
				_exitInterviewSignature.ActiveContext = base.ActiveContext;
			}
			if(_exportableReportsQueue!=null)
			{
				_exportableReportsQueue.ActiveContext = base.ActiveContext;
			}
			if(_file!=null)
			{
				_file.ActiveContext = base.ActiveContext;
			}
			if(_fillEventCallQueue!=null)
			{
				_fillEventCallQueue.ActiveContext = base.ActiveContext;
			}
			if(_fluConsentAnswer_!=null)
			{
				_fluConsentAnswer_.ActiveContext = base.ActiveContext;
			}
			if(_fluConsentAnswer!=null)
			{
				_fluConsentAnswer.ActiveContext = base.ActiveContext;
			}
			if(_fluConsentSignature!=null)
			{
				_fluConsentSignature.ActiveContext = base.ActiveContext;
			}
			if(_fluConsentTemplate_!=null)
			{
				_fluConsentTemplate_.ActiveContext = base.ActiveContext;
			}
			if(_fluConsentTemplate!=null)
			{
				_fluConsentTemplate.ActiveContext = base.ActiveContext;
			}
			if(_gcNotGivenReason_!=null)
			{
				_gcNotGivenReason_.ActiveContext = base.ActiveContext;
			}
			if(_gcNotGivenReason!=null)
			{
				_gcNotGivenReason.ActiveContext = base.ActiveContext;
			}
			if(_guardianDetails_!=null)
			{
				_guardianDetails_.ActiveContext = base.ActiveContext;
			}
			if(_guardianDetails!=null)
			{
				_guardianDetails.ActiveContext = base.ActiveContext;
			}
			if(_hafTemplate_!=null)
			{
				_hafTemplate_.ActiveContext = base.ActiveContext;
			}
			if(_hafTemplate!=null)
			{
				_hafTemplate.ActiveContext = base.ActiveContext;
			}
			if(_hcpcsCode_!=null)
			{
				_hcpcsCode_.ActiveContext = base.ActiveContext;
			}
			if(_hcpcsCode!=null)
			{
				_hcpcsCode.ActiveContext = base.ActiveContext;
			}
			if(_healthPlanCallQueueCriteria__!=null)
			{
				_healthPlanCallQueueCriteria__.ActiveContext = base.ActiveContext;
			}
			if(_healthPlanCallQueueCriteria_!=null)
			{
				_healthPlanCallQueueCriteria_.ActiveContext = base.ActiveContext;
			}
			if(_healthPlanCriteriaAssignment__!=null)
			{
				_healthPlanCriteriaAssignment__.ActiveContext = base.ActiveContext;
			}
			if(_healthPlanCriteriaAssignment_!=null)
			{
				_healthPlanCriteriaAssignment_.ActiveContext = base.ActiveContext;
			}
			if(_healthPlanCriteriaAssignment!=null)
			{
				_healthPlanCriteriaAssignment.ActiveContext = base.ActiveContext;
			}
			if(_healthPlanCriteriaAssignmentUpload!=null)
			{
				_healthPlanCriteriaAssignmentUpload.ActiveContext = base.ActiveContext;
			}
			if(_healthPlanCriteriaTeamAssignment_!=null)
			{
				_healthPlanCriteriaTeamAssignment_.ActiveContext = base.ActiveContext;
			}
			if(_healthPlanCriteriaTeamAssignment!=null)
			{
				_healthPlanCriteriaTeamAssignment.ActiveContext = base.ActiveContext;
			}
			if(_healthPlanRevenue_!=null)
			{
				_healthPlanRevenue_.ActiveContext = base.ActiveContext;
			}
			if(_healthPlanRevenue!=null)
			{
				_healthPlanRevenue.ActiveContext = base.ActiveContext;
			}
			if(_hospitalPartnerCustomer__!=null)
			{
				_hospitalPartnerCustomer__.ActiveContext = base.ActiveContext;
			}
			if(_hospitalPartnerCustomer_!=null)
			{
				_hospitalPartnerCustomer_.ActiveContext = base.ActiveContext;
			}
			if(_hospitalPartnerCustomer!=null)
			{
				_hospitalPartnerCustomer.ActiveContext = base.ActiveContext;
			}
			if(_hostFacilityRanking!=null)
			{
				_hostFacilityRanking.ActiveContext = base.ActiveContext;
			}
			if(_hostPayment!=null)
			{
				_hostPayment.ActiveContext = base.ActiveContext;
			}
			if(_hostPaymentTransaction!=null)
			{
				_hostPaymentTransaction.ActiveContext = base.ActiveContext;
			}
			if(_icdCodes_!=null)
			{
				_icdCodes_.ActiveContext = base.ActiveContext;
			}
			if(_icdCodes!=null)
			{
				_icdCodes.ActiveContext = base.ActiveContext;
			}
			if(_incidentalFindings!=null)
			{
				_incidentalFindings.ActiveContext = base.ActiveContext;
			}
			if(_kynLabValues_!=null)
			{
				_kynLabValues_.ActiveContext = base.ActiveContext;
			}
			if(_kynLabValues!=null)
			{
				_kynLabValues.ActiveContext = base.ActiveContext;
			}
			if(_lab!=null)
			{
				_lab.ActiveContext = base.ActiveContext;
			}
			if(_language!=null)
			{
				_language.ActiveContext = base.ActiveContext;
			}
			if(_languageBarrierCallQueue!=null)
			{
				_languageBarrierCallQueue.ActiveContext = base.ActiveContext;
			}
			if(_mailRoundCallQueue!=null)
			{
				_mailRoundCallQueue.ActiveContext = base.ActiveContext;
			}
			if(_marketingPrintOrder!=null)
			{
				_marketingPrintOrder.ActiveContext = base.ActiveContext;
			}
			if(_medication_!=null)
			{
				_medication_.ActiveContext = base.ActiveContext;
			}
			if(_medication!=null)
			{
				_medication.ActiveContext = base.ActiveContext;
			}
			if(_medicationUpload!=null)
			{
				_medicationUpload.ActiveContext = base.ActiveContext;
			}
			if(_mergeCustomerUpload!=null)
			{
				_mergeCustomerUpload.ActiveContext = base.ActiveContext;
			}
			if(_noShowCallQueue!=null)
			{
				_noShowCallQueue.ActiveContext = base.ActiveContext;
			}
			if(_notesDetails_!=null)
			{
				_notesDetails_.ActiveContext = base.ActiveContext;
			}
			if(_notesDetails!=null)
			{
				_notesDetails.ActiveContext = base.ActiveContext;
			}
			if(_notification!=null)
			{
				_notification.ActiveContext = base.ActiveContext;
			}
			if(_notificationType!=null)
			{
				_notificationType.ActiveContext = base.ActiveContext;
			}
			if(_organizationRoleUserTerritory!=null)
			{
				_organizationRoleUserTerritory.ActiveContext = base.ActiveContext;
			}
			if(_orgRoleUserActivity!=null)
			{
				_orgRoleUserActivity.ActiveContext = base.ActiveContext;
			}
			if(_participationConsentSignature!=null)
			{
				_participationConsentSignature.ActiveContext = base.ActiveContext;
			}
			if(_passwordChangelog!=null)
			{
				_passwordChangelog.ActiveContext = base.ActiveContext;
			}
			if(_payPeriod_!=null)
			{
				_payPeriod_.ActiveContext = base.ActiveContext;
			}
			if(_payPeriod!=null)
			{
				_payPeriod.ActiveContext = base.ActiveContext;
			}
			if(_pcpAppointment_!=null)
			{
				_pcpAppointment_.ActiveContext = base.ActiveContext;
			}
			if(_pcpAppointment!=null)
			{
				_pcpAppointment.ActiveContext = base.ActiveContext;
			}
			if(_pcpDisposition_!=null)
			{
				_pcpDisposition_.ActiveContext = base.ActiveContext;
			}
			if(_pcpDisposition!=null)
			{
				_pcpDisposition.ActiveContext = base.ActiveContext;
			}
			if(_physicianRecordRequestSignature!=null)
			{
				_physicianRecordRequestSignature.ActiveContext = base.ActiveContext;
			}
			if(_pinChangelog!=null)
			{
				_pinChangelog.ActiveContext = base.ActiveContext;
			}
			if(_podDefaultTeam!=null)
			{
				_podDefaultTeam.ActiveContext = base.ActiveContext;
			}
			if(_preApprovedPackage!=null)
			{
				_preApprovedPackage.ActiveContext = base.ActiveContext;
			}
			if(_preApprovedTest!=null)
			{
				_preApprovedTest.ActiveContext = base.ActiveContext;
			}
			if(_preAssessmentCallQueueCustomerLock!=null)
			{
				_preAssessmentCallQueueCustomerLock.ActiveContext = base.ActiveContext;
			}
			if(_preAssessmentCustomerCallQueueCallAttempt!=null)
			{
				_preAssessmentCustomerCallQueueCallAttempt.ActiveContext = base.ActiveContext;
			}
			if(_preQualificationQuestion!=null)
			{
				_preQualificationQuestion.ActiveContext = base.ActiveContext;
			}
			if(_preQualificationTestTemplate_!=null)
			{
				_preQualificationTestTemplate_.ActiveContext = base.ActiveContext;
			}
			if(_preQualificationTestTemplate!=null)
			{
				_preQualificationTestTemplate.ActiveContext = base.ActiveContext;
			}
			if(_printOrderItemTracking_!=null)
			{
				_printOrderItemTracking_.ActiveContext = base.ActiveContext;
			}
			if(_printOrderItemTracking!=null)
			{
				_printOrderItemTracking.ActiveContext = base.ActiveContext;
			}
			if(_priorityInQueue_!=null)
			{
				_priorityInQueue_.ActiveContext = base.ActiveContext;
			}
			if(_priorityInQueue!=null)
			{
				_priorityInQueue.ActiveContext = base.ActiveContext;
			}
			if(_prospectCustomer!=null)
			{
				_prospectCustomer.ActiveContext = base.ActiveContext;
			}
			if(_prospects!=null)
			{
				_prospects.ActiveContext = base.ActiveContext;
			}
			if(_rapsUpload!=null)
			{
				_rapsUpload.ActiveContext = base.ActiveContext;
			}
			if(_referral!=null)
			{
				_referral.ActiveContext = base.ActiveContext;
			}
			if(_refundRequest_!=null)
			{
				_refundRequest_.ActiveContext = base.ActiveContext;
			}
			if(_refundRequest!=null)
			{
				_refundRequest.ActiveContext = base.ActiveContext;
			}
			if(_requiredTest!=null)
			{
				_requiredTest.ActiveContext = base.ActiveContext;
			}
			if(_salesRepPodAssigments!=null)
			{
				_salesRepPodAssigments.ActiveContext = base.ActiveContext;
			}
			if(_scheduleTemplate_!=null)
			{
				_scheduleTemplate_.ActiveContext = base.ActiveContext;
			}
			if(_scheduleTemplate!=null)
			{
				_scheduleTemplate.ActiveContext = base.ActiveContext;
			}
			if(_seminars!=null)
			{
				_seminars.ActiveContext = base.ActiveContext;
			}
			if(_shippingDetail_!=null)
			{
				_shippingDetail_.ActiveContext = base.ActiveContext;
			}
			if(_shippingDetail!=null)
			{
				_shippingDetail.ActiveContext = base.ActiveContext;
			}
			if(_sourceCodeChangeLog!=null)
			{
				_sourceCodeChangeLog.ActiveContext = base.ActiveContext;
			}
			if(_staffEventScheduleUpload!=null)
			{
				_staffEventScheduleUpload.ActiveContext = base.ActiveContext;
			}
			if(_surveyAnswer_!=null)
			{
				_surveyAnswer_.ActiveContext = base.ActiveContext;
			}
			if(_surveyAnswer!=null)
			{
				_surveyAnswer.ActiveContext = base.ActiveContext;
			}
			if(_surveyTemplate_!=null)
			{
				_surveyTemplate_.ActiveContext = base.ActiveContext;
			}
			if(_surveyTemplate!=null)
			{
				_surveyTemplate.ActiveContext = base.ActiveContext;
			}
			if(_suspectConditionUpload!=null)
			{
				_suspectConditionUpload.ActiveContext = base.ActiveContext;
			}
			if(_systemGenertedCallQueueCriteria__!=null)
			{
				_systemGenertedCallQueueCriteria__.ActiveContext = base.ActiveContext;
			}
			if(_systemGenertedCallQueueCriteria_!=null)
			{
				_systemGenertedCallQueueCriteria_.ActiveContext = base.ActiveContext;
			}
			if(_systemGenertedCallQueueCriteria!=null)
			{
				_systemGenertedCallQueueCriteria.ActiveContext = base.ActiveContext;
			}
			if(_taskDetails__!=null)
			{
				_taskDetails__.ActiveContext = base.ActiveContext;
			}
			if(_taskDetails_!=null)
			{
				_taskDetails_.ActiveContext = base.ActiveContext;
			}
			if(_taskDetails!=null)
			{
				_taskDetails.ActiveContext = base.ActiveContext;
			}
			if(_territory!=null)
			{
				_territory.ActiveContext = base.ActiveContext;
			}
			if(_testHcpcsCode_!=null)
			{
				_testHcpcsCode_.ActiveContext = base.ActiveContext;
			}
			if(_testHcpcsCode!=null)
			{
				_testHcpcsCode.ActiveContext = base.ActiveContext;
			}
			if(_testNotPerformed_!=null)
			{
				_testNotPerformed_.ActiveContext = base.ActiveContext;
			}
			if(_testNotPerformed!=null)
			{
				_testNotPerformed.ActiveContext = base.ActiveContext;
			}
			if(_testNotPerformedReason!=null)
			{
				_testNotPerformedReason.ActiveContext = base.ActiveContext;
			}
			if(_testPerformedExternally_!=null)
			{
				_testPerformedExternally_.ActiveContext = base.ActiveContext;
			}
			if(_testPerformedExternally!=null)
			{
				_testPerformedExternally.ActiveContext = base.ActiveContext;
			}
			if(_uncontactedCustomerCallQueue!=null)
			{
				_uncontactedCustomerCallQueue.ActiveContext = base.ActiveContext;
			}
			if(_uploadZipInfo!=null)
			{
				_uploadZipInfo.ActiveContext = base.ActiveContext;
			}
			if(_user__!=null)
			{
				_user__.ActiveContext = base.ActiveContext;
			}
			if(_user_!=null)
			{
				_user_.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaFillEventCallQueue!=null)
			{
				_accountCollectionViaFillEventCallQueue.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaMailRoundCallQueue!=null)
			{
				_accountCollectionViaMailRoundCallQueue.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaEligibilityUpload!=null)
			{
				_accountCollectionViaEligibilityUpload.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaCorporateUpload!=null)
			{
				_accountCollectionViaCorporateUpload.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaHealthPlanCallQueueCriteria!=null)
			{
				_accountCollectionViaHealthPlanCallQueueCriteria.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaCallQueueCustomer_!=null)
			{
				_accountCollectionViaCallQueueCustomer_.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaCallQueueCustomer!=null)
			{
				_accountCollectionViaCallQueueCustomer.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaCallQueueCustomer__!=null)
			{
				_accountCollectionViaCallQueueCustomer__.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaHealthPlanRevenue!=null)
			{
				_accountCollectionViaHealthPlanRevenue.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaHealthPlanRevenue_!=null)
			{
				_accountCollectionViaHealthPlanRevenue_.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaCorporateTag_!=null)
			{
				_accountCollectionViaCorporateTag_.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaLanguageBarrierCallQueue!=null)
			{
				_accountCollectionViaLanguageBarrierCallQueue.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaEventNote!=null)
			{
				_accountCollectionViaEventNote.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaCampaign!=null)
			{
				_accountCollectionViaCampaign.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaEventNote_!=null)
			{
				_accountCollectionViaEventNote_.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaCampaign_!=null)
			{
				_accountCollectionViaCampaign_.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaHealthPlanCallQueueCriteria_!=null)
			{
				_accountCollectionViaHealthPlanCallQueueCriteria_.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaCorporateTag!=null)
			{
				_accountCollectionViaCorporateTag.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaCallQueueCustomTag!=null)
			{
				_accountCollectionViaCallQueueCustomTag.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaCalls!=null)
			{
				_accountCollectionViaCalls.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaCallRoundCallQueue!=null)
			{
				_accountCollectionViaCallRoundCallQueue.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaAccountHraChatQuestionnaire_!=null)
			{
				_accountCollectionViaAccountHraChatQuestionnaire_.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaAccountHraChatQuestionnaire!=null)
			{
				_accountCollectionViaAccountHraChatQuestionnaire.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaUncontactedCustomerCallQueue!=null)
			{
				_accountCollectionViaUncontactedCustomerCallQueue.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaCustomEventNotification!=null)
			{
				_accountCollectionViaCustomEventNotification.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaNoShowCallQueue!=null)
			{
				_accountCollectionViaNoShowCallQueue.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaAccountCallCenterOrganization_!=null)
			{
				_accountCollectionViaAccountCallCenterOrganization_.ActiveContext = base.ActiveContext;
			}
			if(_accountCollectionViaAccountCallCenterOrganization!=null)
			{
				_accountCollectionViaAccountCallCenterOrganization.ActiveContext = base.ActiveContext;
			}
			if(_activityCollectionViaOrgRoleUserActivity!=null)
			{
				_activityCollectionViaOrgRoleUserActivity.ActiveContext = base.ActiveContext;
			}
			if(_activityTypeCollectionViaCallQueueCustomer!=null)
			{
				_activityTypeCollectionViaCallQueueCustomer.ActiveContext = base.ActiveContext;
			}
			if(_activityTypeCollectionViaCallQueueCustomer__!=null)
			{
				_activityTypeCollectionViaCallQueueCustomer__.ActiveContext = base.ActiveContext;
			}
			if(_activityTypeCollectionViaCallQueueCustomer_!=null)
			{
				_activityTypeCollectionViaCallQueueCustomer_.ActiveContext = base.ActiveContext;
			}
			if(_addressCollectionViaCustomerPrimaryCarePhysician_!=null)
			{
				_addressCollectionViaCustomerPrimaryCarePhysician_.ActiveContext = base.ActiveContext;
			}
			if(_addressCollectionViaProspects!=null)
			{
				_addressCollectionViaProspects.ActiveContext = base.ActiveContext;
			}
			if(_addressCollectionViaCustomerPrimaryCarePhysician___!=null)
			{
				_addressCollectionViaCustomerPrimaryCarePhysician___.ActiveContext = base.ActiveContext;
			}
			if(_addressCollectionViaCustomerPrimaryCarePhysician____!=null)
			{
				_addressCollectionViaCustomerPrimaryCarePhysician____.ActiveContext = base.ActiveContext;
			}
			if(_addressCollectionViaUser!=null)
			{
				_addressCollectionViaUser.ActiveContext = base.ActiveContext;
			}
			if(_addressCollectionViaUser_!=null)
			{
				_addressCollectionViaUser_.ActiveContext = base.ActiveContext;
			}
			if(_addressCollectionViaShippingDetail!=null)
			{
				_addressCollectionViaShippingDetail.ActiveContext = base.ActiveContext;
			}
			if(_addressCollectionViaHostPayment!=null)
			{
				_addressCollectionViaHostPayment.ActiveContext = base.ActiveContext;
			}
			if(_addressCollectionViaShippingDetail_!=null)
			{
				_addressCollectionViaShippingDetail_.ActiveContext = base.ActiveContext;
			}
			if(_addressCollectionViaCustomerPrimaryCarePhysician!=null)
			{
				_addressCollectionViaCustomerPrimaryCarePhysician.ActiveContext = base.ActiveContext;
			}
			if(_addressCollectionViaCustomerPrimaryCarePhysician__!=null)
			{
				_addressCollectionViaCustomerPrimaryCarePhysician__.ActiveContext = base.ActiveContext;
			}
			if(_addressCollectionViaCustomerPrimaryCarePhysician_____!=null)
			{
				_addressCollectionViaCustomerPrimaryCarePhysician_____.ActiveContext = base.ActiveContext;
			}
			if(_afadvertiserCollectionViaAfcampaign!=null)
			{
				_afadvertiserCollectionViaAfcampaign.ActiveContext = base.ActiveContext;
			}
			if(_afadvertiserCollectionViaAfcampaign_!=null)
			{
				_afadvertiserCollectionViaAfcampaign_.ActiveContext = base.ActiveContext;
			}
			if(_afaffiliateCampaignCollectionViaEventCustomers!=null)
			{
				_afaffiliateCampaignCollectionViaEventCustomers.ActiveContext = base.ActiveContext;
			}
			if(_afaffiliateCampaignCollectionViaEventCustomers_!=null)
			{
				_afaffiliateCampaignCollectionViaEventCustomers_.ActiveContext = base.ActiveContext;
			}
			if(_afaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer!=null)
			{
				_afaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer.ActiveContext = base.ActiveContext;
			}
			if(_callCenterTeamCollectionViaCallCenterAgentTeam!=null)
			{
				_callCenterTeamCollectionViaCallCenterAgentTeam.ActiveContext = base.ActiveContext;
			}
			if(_callCenterTeamCollectionViaCallCenterAgentTeamLog!=null)
			{
				_callCenterTeamCollectionViaCallCenterAgentTeamLog.ActiveContext = base.ActiveContext;
			}
			if(_callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_!=null)
			{
				_callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_.ActiveContext = base.ActiveContext;
			}
			if(_callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment!=null)
			{
				_callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment.ActiveContext = base.ActiveContext;
			}
			if(_callCenterTeamCollectionViaCallCenterAgentTeamLog_!=null)
			{
				_callCenterTeamCollectionViaCallCenterAgentTeamLog_.ActiveContext = base.ActiveContext;
			}
			if(_callCenterTeamCollectionViaCallCenterAgentTeamLog__!=null)
			{
				_callCenterTeamCollectionViaCallCenterAgentTeamLog__.ActiveContext = base.ActiveContext;
			}
			if(_callQueueCollectionViaCallQueueCustomer_!=null)
			{
				_callQueueCollectionViaCallQueueCustomer_.ActiveContext = base.ActiveContext;
			}
			if(_callQueueCollectionViaHealthPlanCallQueueCriteria__!=null)
			{
				_callQueueCollectionViaHealthPlanCallQueueCriteria__.ActiveContext = base.ActiveContext;
			}
			if(_callQueueCollectionViaCallQueueCustomer!=null)
			{
				_callQueueCollectionViaCallQueueCustomer.ActiveContext = base.ActiveContext;
			}
			if(_callQueueCollectionViaCalls!=null)
			{
				_callQueueCollectionViaCalls.ActiveContext = base.ActiveContext;
			}
			if(_callQueueCollectionViaCallQueueAssignment!=null)
			{
				_callQueueCollectionViaCallQueueAssignment.ActiveContext = base.ActiveContext;
			}
			if(_callQueueCollectionViaSystemGenertedCallQueueCriteria__!=null)
			{
				_callQueueCollectionViaSystemGenertedCallQueueCriteria__.ActiveContext = base.ActiveContext;
			}
			if(_callQueueCollectionViaSystemGenertedCallQueueCriteria_!=null)
			{
				_callQueueCollectionViaSystemGenertedCallQueueCriteria_.ActiveContext = base.ActiveContext;
			}
			if(_callQueueCollectionViaCallQueueCustomer__!=null)
			{
				_callQueueCollectionViaCallQueueCustomer__.ActiveContext = base.ActiveContext;
			}
			if(_callQueueCollectionViaHealthPlanCallQueueCriteria_!=null)
			{
				_callQueueCollectionViaHealthPlanCallQueueCriteria_.ActiveContext = base.ActiveContext;
			}
			if(_callQueueCollectionViaSystemGenertedCallQueueCriteria!=null)
			{
				_callQueueCollectionViaSystemGenertedCallQueueCriteria.ActiveContext = base.ActiveContext;
			}
			if(_callQueueCriteriaCollectionViaCallQueueCustomer!=null)
			{
				_callQueueCriteriaCollectionViaCallQueueCustomer.ActiveContext = base.ActiveContext;
			}
			if(_callQueueCriteriaCollectionViaCallQueueCustomer__!=null)
			{
				_callQueueCriteriaCollectionViaCallQueueCustomer__.ActiveContext = base.ActiveContext;
			}
			if(_callQueueCriteriaCollectionViaCallQueueCustomer_!=null)
			{
				_callQueueCriteriaCollectionViaCallQueueCustomer_.ActiveContext = base.ActiveContext;
			}
			if(_callQueueCustomerCollectionViaCustomerCallQueueCallAttempt!=null)
			{
				_callQueueCustomerCollectionViaCustomerCallQueueCallAttempt.ActiveContext = base.ActiveContext;
			}
			if(_callsCollectionViaCustomerCallQueueCallAttempt!=null)
			{
				_callsCollectionViaCustomerCallQueueCallAttempt.ActiveContext = base.ActiveContext;
			}
			if(_callsCollectionViaPreAssessmentCustomerCallQueueCallAttempt!=null)
			{
				_callsCollectionViaPreAssessmentCustomerCallQueueCallAttempt.ActiveContext = base.ActiveContext;
			}
			if(_callUploadCollectionViaDirectMail!=null)
			{
				_callUploadCollectionViaDirectMail.ActiveContext = base.ActiveContext;
			}
			if(_campaignCollectionViaCallQueueCustomer__!=null)
			{
				_campaignCollectionViaCallQueueCustomer__.ActiveContext = base.ActiveContext;
			}
			if(_campaignCollectionViaCampaignAssignment!=null)
			{
				_campaignCollectionViaCampaignAssignment.ActiveContext = base.ActiveContext;
			}
			if(_campaignCollectionViaCallQueueCustomer!=null)
			{
				_campaignCollectionViaCallQueueCustomer.ActiveContext = base.ActiveContext;
			}
			if(_campaignCollectionViaCampaignActivity_!=null)
			{
				_campaignCollectionViaCampaignActivity_.ActiveContext = base.ActiveContext;
			}
			if(_campaignCollectionViaHealthPlanCallQueueCriteria_!=null)
			{
				_campaignCollectionViaHealthPlanCallQueueCriteria_.ActiveContext = base.ActiveContext;
			}
			if(_campaignCollectionViaCampaignActivity!=null)
			{
				_campaignCollectionViaCampaignActivity.ActiveContext = base.ActiveContext;
			}
			if(_campaignCollectionViaCalls!=null)
			{
				_campaignCollectionViaCalls.ActiveContext = base.ActiveContext;
			}
			if(_campaignCollectionViaEventCustomers_!=null)
			{
				_campaignCollectionViaEventCustomers_.ActiveContext = base.ActiveContext;
			}
			if(_campaignCollectionViaHealthPlanCallQueueCriteria!=null)
			{
				_campaignCollectionViaHealthPlanCallQueueCriteria.ActiveContext = base.ActiveContext;
			}
			if(_campaignCollectionViaDirectMail!=null)
			{
				_campaignCollectionViaDirectMail.ActiveContext = base.ActiveContext;
			}
			if(_campaignCollectionViaCallQueueCustomer_!=null)
			{
				_campaignCollectionViaCallQueueCustomer_.ActiveContext = base.ActiveContext;
			}
			if(_campaignCollectionViaEventCustomers!=null)
			{
				_campaignCollectionViaEventCustomers.ActiveContext = base.ActiveContext;
			}
			if(_campaignActivityCollectionViaCampaignActivityAssignment!=null)
			{
				_campaignActivityCollectionViaCampaignActivityAssignment.ActiveContext = base.ActiveContext;
			}
			if(_chaperoneQuestionCollectionViaChaperoneAnswer!=null)
			{
				_chaperoneQuestionCollectionViaChaperoneAnswer.ActiveContext = base.ActiveContext;
			}
			if(_chaperoneQuestionCollectionViaChaperoneAnswer_!=null)
			{
				_chaperoneQuestionCollectionViaChaperoneAnswer_.ActiveContext = base.ActiveContext;
			}
			if(_checkListQuestionCollectionViaCheckListAnswer_!=null)
			{
				_checkListQuestionCollectionViaCheckListAnswer_.ActiveContext = base.ActiveContext;
			}
			if(_checkListQuestionCollectionViaCheckListAnswer!=null)
			{
				_checkListQuestionCollectionViaCheckListAnswer.ActiveContext = base.ActiveContext;
			}
			if(_checkListQuestionCollectionViaExitInterviewSignature!=null)
			{
				_checkListQuestionCollectionViaExitInterviewSignature.ActiveContext = base.ActiveContext;
			}
			if(_cityCollectionViaAddress!=null)
			{
				_cityCollectionViaAddress.ActiveContext = base.ActiveContext;
			}
			if(_communicationModeCollectionViaEvents____!=null)
			{
				_communicationModeCollectionViaEvents____.ActiveContext = base.ActiveContext;
			}
			if(_communicationModeCollectionViaEvents!=null)
			{
				_communicationModeCollectionViaEvents.ActiveContext = base.ActiveContext;
			}
			if(_communicationModeCollectionViaEvents___!=null)
			{
				_communicationModeCollectionViaEvents___.ActiveContext = base.ActiveContext;
			}
			if(_communicationModeCollectionViaEvents__!=null)
			{
				_communicationModeCollectionViaEvents__.ActiveContext = base.ActiveContext;
			}
			if(_communicationModeCollectionViaEvents_!=null)
			{
				_communicationModeCollectionViaEvents_.ActiveContext = base.ActiveContext;
			}
			if(_contactCallStatusCollectionViaContactCall!=null)
			{
				_contactCallStatusCollectionViaContactCall.ActiveContext = base.ActiveContext;
			}
			if(_contactCallStatusCollectionViaContactCall_!=null)
			{
				_contactCallStatusCollectionViaContactCall_.ActiveContext = base.ActiveContext;
			}
			if(_contactCallStatusCollectionViaContactMeeting_!=null)
			{
				_contactCallStatusCollectionViaContactMeeting_.ActiveContext = base.ActiveContext;
			}
			if(_contactCallStatusCollectionViaContactMeeting!=null)
			{
				_contactCallStatusCollectionViaContactMeeting.ActiveContext = base.ActiveContext;
			}
			if(_countryCollectionViaAddress!=null)
			{
				_countryCollectionViaAddress.ActiveContext = base.ActiveContext;
			}
			if(_couponTypeCollectionViaCoupons_!=null)
			{
				_couponTypeCollectionViaCoupons_.ActiveContext = base.ActiveContext;
			}
			if(_couponTypeCollectionViaCoupons!=null)
			{
				_couponTypeCollectionViaCoupons.ActiveContext = base.ActiveContext;
			}
			if(_customerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation!=null)
			{
				_customerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation.ActiveContext = base.ActiveContext;
			}
			if(_customerEventScreeningTestsCollectionViaTestPerformedExternally_!=null)
			{
				_customerEventScreeningTestsCollectionViaTestPerformedExternally_.ActiveContext = base.ActiveContext;
			}
			if(_customerEventScreeningTestsCollectionViaCustomerEventTestState!=null)
			{
				_customerEventScreeningTestsCollectionViaCustomerEventTestState.ActiveContext = base.ActiveContext;
			}
			if(_customerEventScreeningTestsCollectionViaCustomerEventTestState_!=null)
			{
				_customerEventScreeningTestsCollectionViaCustomerEventTestState_.ActiveContext = base.ActiveContext;
			}
			if(_customerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason!=null)
			{
				_customerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason.ActiveContext = base.ActiveContext;
			}
			if(_customerEventScreeningTestsCollectionViaCustomerEventTestState__!=null)
			{
				_customerEventScreeningTestsCollectionViaCustomerEventTestState__.ActiveContext = base.ActiveContext;
			}
			if(_customerEventScreeningTestsCollectionViaTestPerformedExternally!=null)
			{
				_customerEventScreeningTestsCollectionViaTestPerformedExternally.ActiveContext = base.ActiveContext;
			}
			if(_customerEventScreeningTestsCollectionViaCustomerEventReading!=null)
			{
				_customerEventScreeningTestsCollectionViaCustomerEventReading.ActiveContext = base.ActiveContext;
			}
			if(_customerEventScreeningTestsCollectionViaTestNotPerformed!=null)
			{
				_customerEventScreeningTestsCollectionViaTestNotPerformed.ActiveContext = base.ActiveContext;
			}
			if(_customerEventScreeningTestsCollectionViaTestNotPerformed_!=null)
			{
				_customerEventScreeningTestsCollectionViaTestNotPerformed_.ActiveContext = base.ActiveContext;
			}
			if(_customerHealthQuestionsCollectionViaCustomerHealthInfo!=null)
			{
				_customerHealthQuestionsCollectionViaCustomerHealthInfo.ActiveContext = base.ActiveContext;
			}
			if(_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_!=null)
			{
				_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_.ActiveContext = base.ActiveContext;
			}
			if(_customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_!=null)
			{
				_customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_.ActiveContext = base.ActiveContext;
			}
			if(_customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer!=null)
			{
				_customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer.ActiveContext = base.ActiveContext;
			}
			if(_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__!=null)
			{
				_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__.ActiveContext = base.ActiveContext;
			}
			if(_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___!=null)
			{
				_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___.ActiveContext = base.ActiveContext;
			}
			if(_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria!=null)
			{
				_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria.ActiveContext = base.ActiveContext;
			}
			if(_customerHealthQuestionsCollectionViaCustomerHealthInfoArchive!=null)
			{
				_customerHealthQuestionsCollectionViaCustomerHealthInfoArchive.ActiveContext = base.ActiveContext;
			}
			if(_customerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician!=null)
			{
				_customerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaFillEventCallQueue!=null)
			{
				_customerProfileCollectionViaFillEventCallQueue.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaDisqualifiedTest_!=null)
			{
				_customerProfileCollectionViaDisqualifiedTest_.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaCustomerEligibility_!=null)
			{
				_customerProfileCollectionViaCustomerEligibility_.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaEventCustomerResult_____!=null)
			{
				_customerProfileCollectionViaEventCustomerResult_____.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaCustomerEligibility!=null)
			{
				_customerProfileCollectionViaCustomerEligibility.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaLanguageBarrierCallQueue!=null)
			{
				_customerProfileCollectionViaLanguageBarrierCallQueue.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaEventCustomerQuestionAnswer!=null)
			{
				_customerProfileCollectionViaEventCustomerQuestionAnswer.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaHospitalPartnerCustomer_!=null)
			{
				_customerProfileCollectionViaHospitalPartnerCustomer_.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaHospitalPartnerCustomer__!=null)
			{
				_customerProfileCollectionViaHospitalPartnerCustomer__.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaHospitalPartnerCustomer!=null)
			{
				_customerProfileCollectionViaHospitalPartnerCustomer.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaDisqualifiedTest!=null)
			{
				_customerProfileCollectionViaDisqualifiedTest.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaCustomerPrimaryCarePhysician_!=null)
			{
				_customerProfileCollectionViaCustomerPrimaryCarePhysician_.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaCustomerPrimaryCarePhysician__!=null)
			{
				_customerProfileCollectionViaCustomerPrimaryCarePhysician__.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaNoShowCallQueue!=null)
			{
				_customerProfileCollectionViaNoShowCallQueue.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaCustomerPrimaryCarePhysician!=null)
			{
				_customerProfileCollectionViaCustomerPrimaryCarePhysician.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaCallQueueCustomer!=null)
			{
				_customerProfileCollectionViaCallQueueCustomer.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaCustomerHealthInfo!=null)
			{
				_customerProfileCollectionViaCustomerHealthInfo.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaCallQueueCustomer__!=null)
			{
				_customerProfileCollectionViaCallQueueCustomer__.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaCallQueueCustomer_!=null)
			{
				_customerProfileCollectionViaCallQueueCustomer_.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaEventCustomerResult______!=null)
			{
				_customerProfileCollectionViaEventCustomerResult______.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaCustomerIcdCode!=null)
			{
				_customerProfileCollectionViaCustomerIcdCode.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaMailRoundCallQueue!=null)
			{
				_customerProfileCollectionViaMailRoundCallQueue.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaCustomerHealthInfoArchive!=null)
			{
				_customerProfileCollectionViaCustomerHealthInfoArchive.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaEventCustomerQuestionAnswer_!=null)
			{
				_customerProfileCollectionViaEventCustomerQuestionAnswer_.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaRequiredTest!=null)
			{
				_customerProfileCollectionViaRequiredTest.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaCustomerWarmTransfer_!=null)
			{
				_customerProfileCollectionViaCustomerWarmTransfer_.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaProspectCustomer!=null)
			{
				_customerProfileCollectionViaProspectCustomer.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaEventCustomerResult_!=null)
			{
				_customerProfileCollectionViaEventCustomerResult_.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaEventCustomerResult__!=null)
			{
				_customerProfileCollectionViaEventCustomerResult__.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaUncontactedCustomerCallQueue!=null)
			{
				_customerProfileCollectionViaUncontactedCustomerCallQueue.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaCustomerWarmTransfer!=null)
			{
				_customerProfileCollectionViaCustomerWarmTransfer.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaMedication_!=null)
			{
				_customerProfileCollectionViaMedication_.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaCallRoundCallQueue!=null)
			{
				_customerProfileCollectionViaCallRoundCallQueue.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaCustomerTag_!=null)
			{
				_customerProfileCollectionViaCustomerTag_.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaReferral!=null)
			{
				_customerProfileCollectionViaReferral.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaCustomerTargeted_!=null)
			{
				_customerProfileCollectionViaCustomerTargeted_.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaCustomerTargeted!=null)
			{
				_customerProfileCollectionViaCustomerTargeted.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaCustomerTag!=null)
			{
				_customerProfileCollectionViaCustomerTag.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaMedication!=null)
			{
				_customerProfileCollectionViaMedication.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaEventCustomerResult________!=null)
			{
				_customerProfileCollectionViaEventCustomerResult________.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaEventCustomerResult!=null)
			{
				_customerProfileCollectionViaEventCustomerResult.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaEventCustomerResult_______!=null)
			{
				_customerProfileCollectionViaEventCustomerResult_______.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaDirectMail!=null)
			{
				_customerProfileCollectionViaDirectMail.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaEventCustomerResult____!=null)
			{
				_customerProfileCollectionViaEventCustomerResult____.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaCurrentMedication!=null)
			{
				_customerProfileCollectionViaCurrentMedication.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaGuardianDetails!=null)
			{
				_customerProfileCollectionViaGuardianDetails.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaEventCustomers!=null)
			{
				_customerProfileCollectionViaEventCustomers.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaEventCustomers_!=null)
			{
				_customerProfileCollectionViaEventCustomers_.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaCustomerCallQueueCallAttempt!=null)
			{
				_customerProfileCollectionViaCustomerCallQueueCallAttempt.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaEventCustomerResult___!=null)
			{
				_customerProfileCollectionViaEventCustomerResult___.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaCustomerProfileHistory!=null)
			{
				_customerProfileCollectionViaCustomerProfileHistory.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt!=null)
			{
				_customerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaCustomerClinicalQuestionAnswer!=null)
			{
				_customerProfileCollectionViaCustomerClinicalQuestionAnswer.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaCustomerClinicalQuestionAnswer_!=null)
			{
				_customerProfileCollectionViaCustomerClinicalQuestionAnswer_.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileCollectionViaGuardianDetails_!=null)
			{
				_customerProfileCollectionViaGuardianDetails_.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileHistoryCollectionViaEventCustomers_!=null)
			{
				_customerProfileHistoryCollectionViaEventCustomers_.ActiveContext = base.ActiveContext;
			}
			if(_customerProfileHistoryCollectionViaEventCustomers!=null)
			{
				_customerProfileHistoryCollectionViaEventCustomers.ActiveContext = base.ActiveContext;
			}
			if(_customerRegistrationNotesCollectionViaEventAppointmentCancellationLog!=null)
			{
				_customerRegistrationNotesCollectionViaEventAppointmentCancellationLog.ActiveContext = base.ActiveContext;
			}
			if(_customerRegistrationNotesCollectionViaEventCustomers_!=null)
			{
				_customerRegistrationNotesCollectionViaEventCustomers_.ActiveContext = base.ActiveContext;
			}
			if(_customerRegistrationNotesCollectionViaEventCustomers!=null)
			{
				_customerRegistrationNotesCollectionViaEventCustomers.ActiveContext = base.ActiveContext;
			}
			if(_directMailTypeCollectionViaDirectMail!=null)
			{
				_directMailTypeCollectionViaDirectMail.ActiveContext = base.ActiveContext;
			}
			if(_directMailTypeCollectionViaCampaignActivity!=null)
			{
				_directMailTypeCollectionViaCampaignActivity.ActiveContext = base.ActiveContext;
			}
			if(_directMailTypeCollectionViaCampaignActivity_!=null)
			{
				_directMailTypeCollectionViaCampaignActivity_.ActiveContext = base.ActiveContext;
			}
			if(_eventActivityTemplateCollectionViaEventActivityTemplateMeeting!=null)
			{
				_eventActivityTemplateCollectionViaEventActivityTemplateMeeting.ActiveContext = base.ActiveContext;
			}
			if(_eventActivityTemplateCollectionViaEventActivityTemplateTask!=null)
			{
				_eventActivityTemplateCollectionViaEventActivityTemplateTask.ActiveContext = base.ActiveContext;
			}
			if(_eventActivityTemplateCollectionViaEventActivityTemplateCall!=null)
			{
				_eventActivityTemplateCollectionViaEventActivityTemplateCall.ActiveContext = base.ActiveContext;
			}
			if(_eventActivityTemplateCollectionViaEventActivityTemplateEmail!=null)
			{
				_eventActivityTemplateCollectionViaEventActivityTemplateEmail.ActiveContext = base.ActiveContext;
			}
			if(_eventAppointmentCollectionViaEventCustomers!=null)
			{
				_eventAppointmentCollectionViaEventCustomers.ActiveContext = base.ActiveContext;
			}
			if(_eventAppointmentCollectionViaEventCustomers_!=null)
			{
				_eventAppointmentCollectionViaEventCustomers_.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerResultCollectionViaCustomerResultScreeningCommunication!=null)
			{
				_eventCustomerResultCollectionViaCustomerResultScreeningCommunication.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerResultCollectionViaPriorityInQueue_!=null)
			{
				_eventCustomerResultCollectionViaPriorityInQueue_.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerResultCollectionViaKynLabValues!=null)
			{
				_eventCustomerResultCollectionViaKynLabValues.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerResultCollectionViaCustomerResultScreeningCommunication__!=null)
			{
				_eventCustomerResultCollectionViaCustomerResultScreeningCommunication__.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerResultCollectionViaCustomerResultScreeningCommunication_!=null)
			{
				_eventCustomerResultCollectionViaCustomerResultScreeningCommunication_.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerResultCollectionViaCdcontentGeneratorTracking!=null)
			{
				_eventCustomerResultCollectionViaCdcontentGeneratorTracking.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerResultCollectionViaKynLabValues_!=null)
			{
				_eventCustomerResultCollectionViaKynLabValues_.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomerResultCollectionViaPriorityInQueue!=null)
			{
				_eventCustomerResultCollectionViaPriorityInQueue.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaDisqualifiedTest_!=null)
			{
				_eventCustomersCollectionViaDisqualifiedTest_.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaEventAppointmentChangeLog!=null)
			{
				_eventCustomersCollectionViaEventAppointmentChangeLog.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaDisqualifiedTest!=null)
			{
				_eventCustomersCollectionViaDisqualifiedTest.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaEventCustomerPrimaryCarePhysician!=null)
			{
				_eventCustomersCollectionViaEventCustomerPrimaryCarePhysician.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaEventCustomerQuestionAnswer_!=null)
			{
				_eventCustomersCollectionViaEventCustomerQuestionAnswer_.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaEventAppointmentCancellationLog!=null)
			{
				_eventCustomersCollectionViaEventAppointmentCancellationLog.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaEventCustomerQuestionAnswer!=null)
			{
				_eventCustomersCollectionViaEventCustomerQuestionAnswer.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaEventCustomerGiftCard!=null)
			{
				_eventCustomersCollectionViaEventCustomerGiftCard.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaSurveyAnswer!=null)
			{
				_eventCustomersCollectionViaSurveyAnswer.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaEventCustomerTestNotPerformedNotification!=null)
			{
				_eventCustomersCollectionViaEventCustomerTestNotPerformedNotification.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaPhysicianRecordRequestSignature!=null)
			{
				_eventCustomersCollectionViaPhysicianRecordRequestSignature.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaEventCustomerRetest!=null)
			{
				_eventCustomersCollectionViaEventCustomerRetest.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaPcpDisposition!=null)
			{
				_eventCustomersCollectionViaPcpDisposition.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaPcpDisposition_!=null)
			{
				_eventCustomersCollectionViaPcpDisposition_.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaChaperoneSignature!=null)
			{
				_eventCustomersCollectionViaChaperoneSignature.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaChaperoneAnswer_!=null)
			{
				_eventCustomersCollectionViaChaperoneAnswer_.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaChaperoneAnswer!=null)
			{
				_eventCustomersCollectionViaChaperoneAnswer.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaCallQueueCustomer__!=null)
			{
				_eventCustomersCollectionViaCallQueueCustomer__.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaCheckListAnswer_!=null)
			{
				_eventCustomersCollectionViaCheckListAnswer_.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaCallQueueCustomer!=null)
			{
				_eventCustomersCollectionViaCallQueueCustomer.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaCallQueueCustomer_!=null)
			{
				_eventCustomersCollectionViaCallQueueCustomer_.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaCustomerHealthInfo!=null)
			{
				_eventCustomersCollectionViaCustomerHealthInfo.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaExitInterviewSignature!=null)
			{
				_eventCustomersCollectionViaExitInterviewSignature.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaFluConsentAnswer!=null)
			{
				_eventCustomersCollectionViaFluConsentAnswer.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaExitInterviewAnswer_!=null)
			{
				_eventCustomersCollectionViaExitInterviewAnswer_.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaCheckListAnswer!=null)
			{
				_eventCustomersCollectionViaCheckListAnswer.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaExitInterviewAnswer!=null)
			{
				_eventCustomersCollectionViaExitInterviewAnswer.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaFluConsentAnswer_!=null)
			{
				_eventCustomersCollectionViaFluConsentAnswer_.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaSurveyAnswer_!=null)
			{
				_eventCustomersCollectionViaSurveyAnswer_.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaCustomerHealthInfoArchive!=null)
			{
				_eventCustomersCollectionViaCustomerHealthInfoArchive.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaCustomerMedicareQuestionAnswer!=null)
			{
				_eventCustomersCollectionViaCustomerMedicareQuestionAnswer.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaFluConsentSignature!=null)
			{
				_eventCustomersCollectionViaFluConsentSignature.ActiveContext = base.ActiveContext;
			}
			if(_eventCustomersCollectionViaParticipationConsentSignature!=null)
			{
				_eventCustomersCollectionViaParticipationConsentSignature.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaEventCustomerQuestionAnswer!=null)
			{
				_eventsCollectionViaEventCustomerQuestionAnswer.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaEventPhysicianTest__!=null)
			{
				_eventsCollectionViaEventPhysicianTest__.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaEventStaffAssignment__!=null)
			{
				_eventsCollectionViaEventStaffAssignment__.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaEventStaffAssignment_!=null)
			{
				_eventsCollectionViaEventStaffAssignment_.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaEventCustomers!=null)
			{
				_eventsCollectionViaEventCustomers.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaEventCustomerResult____!=null)
			{
				_eventsCollectionViaEventCustomerResult____.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaEventCustomerResult___!=null)
			{
				_eventsCollectionViaEventCustomerResult___.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaHospitalPartnerCustomer_!=null)
			{
				_eventsCollectionViaHospitalPartnerCustomer_.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaEventCustomerResult_!=null)
			{
				_eventsCollectionViaEventCustomerResult_.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaEventCustomerResult________!=null)
			{
				_eventsCollectionViaEventCustomerResult________.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaEventCustomerResult______!=null)
			{
				_eventsCollectionViaEventCustomerResult______.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaEventCustomerResult__!=null)
			{
				_eventsCollectionViaEventCustomerResult__.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaEventCustomerResult_______!=null)
			{
				_eventsCollectionViaEventCustomerResult_______.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaEventPhysicianTest_!=null)
			{
				_eventsCollectionViaEventPhysicianTest_.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaEventPhysicianTest!=null)
			{
				_eventsCollectionViaEventPhysicianTest.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaEventCustomerQuestionAnswer_!=null)
			{
				_eventsCollectionViaEventCustomerQuestionAnswer_.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaHospitalPartnerCustomer__!=null)
			{
				_eventsCollectionViaHospitalPartnerCustomer__.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaEventCustomerResult!=null)
			{
				_eventsCollectionViaEventCustomerResult.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaHospitalPartnerCustomer!=null)
			{
				_eventsCollectionViaHospitalPartnerCustomer.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaEventCustomerResult_____!=null)
			{
				_eventsCollectionViaEventCustomerResult_____.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaEventCustomers_!=null)
			{
				_eventsCollectionViaEventCustomers_.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaEventAccountTestHcpcsCode!=null)
			{
				_eventsCollectionViaEventAccountTestHcpcsCode.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaCustomerRegistrationNotes!=null)
			{
				_eventsCollectionViaCustomerRegistrationNotes.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaCallQueueCustomer!=null)
			{
				_eventsCollectionViaCallQueueCustomer.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaEventAccountTestHcpcsCode_!=null)
			{
				_eventsCollectionViaEventAccountTestHcpcsCode_.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaSeminars!=null)
			{
				_eventsCollectionViaSeminars.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaDisqualifiedTest_!=null)
			{
				_eventsCollectionViaDisqualifiedTest_.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaDisqualifiedTest!=null)
			{
				_eventsCollectionViaDisqualifiedTest.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaCustomEventNotification!=null)
			{
				_eventsCollectionViaCustomEventNotification.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaCallQueueCustomer__!=null)
			{
				_eventsCollectionViaCallQueueCustomer__.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaCustomerClinicalQuestionAnswer!=null)
			{
				_eventsCollectionViaCustomerClinicalQuestionAnswer.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaCustomerClinicalQuestionAnswer_!=null)
			{
				_eventsCollectionViaCustomerClinicalQuestionAnswer_.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaEventAppointmentChangeLog!=null)
			{
				_eventsCollectionViaEventAppointmentChangeLog.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaEventAppointmentChangeLog_!=null)
			{
				_eventsCollectionViaEventAppointmentChangeLog_.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaCallQueueCustomer_!=null)
			{
				_eventsCollectionViaCallQueueCustomer_.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaHostPayment!=null)
			{
				_eventsCollectionViaHostPayment.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaEventStaffAssignment!=null)
			{
				_eventsCollectionViaEventStaffAssignment.ActiveContext = base.ActiveContext;
			}
			if(_eventsCollectionViaEventAppointmentCancellationLog!=null)
			{
				_eventsCollectionViaEventAppointmentCancellationLog.ActiveContext = base.ActiveContext;
			}
			if(_eventTypeCollectionViaEvents!=null)
			{
				_eventTypeCollectionViaEvents.ActiveContext = base.ActiveContext;
			}
			if(_eventTypeCollectionViaEvents____!=null)
			{
				_eventTypeCollectionViaEvents____.ActiveContext = base.ActiveContext;
			}
			if(_eventTypeCollectionViaEvents___!=null)
			{
				_eventTypeCollectionViaEvents___.ActiveContext = base.ActiveContext;
			}
			if(_eventTypeCollectionViaEvents_!=null)
			{
				_eventTypeCollectionViaEvents_.ActiveContext = base.ActiveContext;
			}
			if(_eventTypeCollectionViaEvents__!=null)
			{
				_eventTypeCollectionViaEvents__.ActiveContext = base.ActiveContext;
			}
			if(_exitInterviewQuestionCollectionViaExitInterviewAnswer_!=null)
			{
				_exitInterviewQuestionCollectionViaExitInterviewAnswer_.ActiveContext = base.ActiveContext;
			}
			if(_exitInterviewQuestionCollectionViaExitInterviewAnswer!=null)
			{
				_exitInterviewQuestionCollectionViaExitInterviewAnswer.ActiveContext = base.ActiveContext;
			}
			if(_exportableReportsCollectionViaExportableReportsQueue!=null)
			{
				_exportableReportsCollectionViaExportableReportsQueue.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaCustomerActivityTypeUpload_!=null)
			{
				_fileCollectionViaCustomerActivityTypeUpload_.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaCorporateUpload!=null)
			{
				_fileCollectionViaCorporateUpload.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaStaffEventScheduleUpload!=null)
			{
				_fileCollectionViaStaffEventScheduleUpload.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaCorporateUpload_!=null)
			{
				_fileCollectionViaCorporateUpload_.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaPhysicianRecordRequestSignature!=null)
			{
				_fileCollectionViaPhysicianRecordRequestSignature.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaCustomerActivityTypeUpload!=null)
			{
				_fileCollectionViaCustomerActivityTypeUpload.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaRapsUpload_!=null)
			{
				_fileCollectionViaRapsUpload_.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaCallUpload_!=null)
			{
				_fileCollectionViaCallUpload_.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaChaperoneSignature_!=null)
			{
				_fileCollectionViaChaperoneSignature_.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaRapsUpload!=null)
			{
				_fileCollectionViaRapsUpload.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaChaperoneSignature!=null)
			{
				_fileCollectionViaChaperoneSignature.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaCorporateUpload__!=null)
			{
				_fileCollectionViaCorporateUpload__.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaCallUpload!=null)
			{
				_fileCollectionViaCallUpload.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaHealthPlanCriteriaAssignmentUpload!=null)
			{
				_fileCollectionViaHealthPlanCriteriaAssignmentUpload.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaParticipationConsentSignature_!=null)
			{
				_fileCollectionViaParticipationConsentSignature_.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaMergeCustomerUpload!=null)
			{
				_fileCollectionViaMergeCustomerUpload.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaMedicationUpload_!=null)
			{
				_fileCollectionViaMedicationUpload_.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaMedicationUpload!=null)
			{
				_fileCollectionViaMedicationUpload.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaFluConsentSignature_!=null)
			{
				_fileCollectionViaFluConsentSignature_.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaFluConsentSignature!=null)
			{
				_fileCollectionViaFluConsentSignature.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaMergeCustomerUpload_!=null)
			{
				_fileCollectionViaMergeCustomerUpload_.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaExitInterviewSignature!=null)
			{
				_fileCollectionViaExitInterviewSignature.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaEventCustomerGiftCard_!=null)
			{
				_fileCollectionViaEventCustomerGiftCard_.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaEventCustomerGiftCard!=null)
			{
				_fileCollectionViaEventCustomerGiftCard.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaEligibilityUpload!=null)
			{
				_fileCollectionViaEligibilityUpload.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaEligibilityUpload_!=null)
			{
				_fileCollectionViaEligibilityUpload_.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaExportableReportsQueue!=null)
			{
				_fileCollectionViaExportableReportsQueue.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaSuspectConditionUpload!=null)
			{
				_fileCollectionViaSuspectConditionUpload.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaStaffEventScheduleUpload_!=null)
			{
				_fileCollectionViaStaffEventScheduleUpload_.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaParticipationConsentSignature!=null)
			{
				_fileCollectionViaParticipationConsentSignature.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaCustomerPhoneNumberUpdateUpload_!=null)
			{
				_fileCollectionViaCustomerPhoneNumberUpdateUpload_.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaCustomerPhoneNumberUpdateUpload!=null)
			{
				_fileCollectionViaCustomerPhoneNumberUpdateUpload.ActiveContext = base.ActiveContext;
			}
			if(_fileCollectionViaSuspectConditionUpload_!=null)
			{
				_fileCollectionViaSuspectConditionUpload_.ActiveContext = base.ActiveContext;
			}
			if(_fluConsentQuestionCollectionViaFluConsentAnswer!=null)
			{
				_fluConsentQuestionCollectionViaFluConsentAnswer.ActiveContext = base.ActiveContext;
			}
			if(_fluConsentQuestionCollectionViaFluConsentAnswer_!=null)
			{
				_fluConsentQuestionCollectionViaFluConsentAnswer_.ActiveContext = base.ActiveContext;
			}
			if(_gcNotGivenReasonCollectionViaEventCustomers!=null)
			{
				_gcNotGivenReasonCollectionViaEventCustomers.ActiveContext = base.ActiveContext;
			}
			if(_gcNotGivenReasonCollectionViaEventCustomers_!=null)
			{
				_gcNotGivenReasonCollectionViaEventCustomers_.ActiveContext = base.ActiveContext;
			}
			if(_hafTemplateCollectionViaClinicalTestQualificationCriteria!=null)
			{
				_hafTemplateCollectionViaClinicalTestQualificationCriteria.ActiveContext = base.ActiveContext;
			}
			if(_hafTemplateCollectionViaEvents___!=null)
			{
				_hafTemplateCollectionViaEvents___.ActiveContext = base.ActiveContext;
			}
			if(_hafTemplateCollectionViaEvents!=null)
			{
				_hafTemplateCollectionViaEvents.ActiveContext = base.ActiveContext;
			}
			if(_hafTemplateCollectionViaEvents____!=null)
			{
				_hafTemplateCollectionViaEvents____.ActiveContext = base.ActiveContext;
			}
			if(_hafTemplateCollectionViaEvents_!=null)
			{
				_hafTemplateCollectionViaEvents_.ActiveContext = base.ActiveContext;
			}
			if(_hafTemplateCollectionViaCustomerClinicalQuestionAnswer!=null)
			{
				_hafTemplateCollectionViaCustomerClinicalQuestionAnswer.ActiveContext = base.ActiveContext;
			}
			if(_hafTemplateCollectionViaEvents__!=null)
			{
				_hafTemplateCollectionViaEvents__.ActiveContext = base.ActiveContext;
			}
			if(_hafTemplateCollectionViaCustomerClinicalQuestionAnswer_!=null)
			{
				_hafTemplateCollectionViaCustomerClinicalQuestionAnswer_.ActiveContext = base.ActiveContext;
			}
			if(_hafTemplateCollectionViaClinicalTestQualificationCriteria_!=null)
			{
				_hafTemplateCollectionViaClinicalTestQualificationCriteria_.ActiveContext = base.ActiveContext;
			}
			if(_hcpcsCodeCollectionViaTestHcpcsCode_!=null)
			{
				_hcpcsCodeCollectionViaTestHcpcsCode_.ActiveContext = base.ActiveContext;
			}
			if(_hcpcsCodeCollectionViaTestHcpcsCode!=null)
			{
				_hcpcsCodeCollectionViaTestHcpcsCode.ActiveContext = base.ActiveContext;
			}
			if(_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload!=null)
			{
				_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload.ActiveContext = base.ActiveContext;
			}
			if(_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment!=null)
			{
				_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment.ActiveContext = base.ActiveContext;
			}
			if(_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_!=null)
			{
				_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_.ActiveContext = base.ActiveContext;
			}
			if(_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment!=null)
			{
				_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment.ActiveContext = base.ActiveContext;
			}
			if(_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__!=null)
			{
				_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__.ActiveContext = base.ActiveContext;
			}
			if(_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_!=null)
			{
				_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_.ActiveContext = base.ActiveContext;
			}
			if(_hospitalFacilityCollectionViaEventCustomers!=null)
			{
				_hospitalFacilityCollectionViaEventCustomers.ActiveContext = base.ActiveContext;
			}
			if(_hospitalFacilityCollectionViaEventCustomers_!=null)
			{
				_hospitalFacilityCollectionViaEventCustomers_.ActiveContext = base.ActiveContext;
			}
			if(_hostPaymentCollectionViaHostPaymentTransaction!=null)
			{
				_hostPaymentCollectionViaHostPaymentTransaction.ActiveContext = base.ActiveContext;
			}
			if(_icdCodesCollectionViaCustomerIcdCode!=null)
			{
				_icdCodesCollectionViaCustomerIcdCode.ActiveContext = base.ActiveContext;
			}
			if(_insuranceCompanyCollectionViaEligibility!=null)
			{
				_insuranceCompanyCollectionViaEligibility.ActiveContext = base.ActiveContext;
			}
			if(_languageCollectionViaHealthPlanCallQueueCriteria!=null)
			{
				_languageCollectionViaHealthPlanCallQueueCriteria.ActiveContext = base.ActiveContext;
			}
			if(_languageCollectionViaCallQueueCustomer_!=null)
			{
				_languageCollectionViaCallQueueCustomer_.ActiveContext = base.ActiveContext;
			}
			if(_languageCollectionViaCallQueueCustomer__!=null)
			{
				_languageCollectionViaCallQueueCustomer__.ActiveContext = base.ActiveContext;
			}
			if(_languageCollectionViaCallQueueCustomer!=null)
			{
				_languageCollectionViaCallQueueCustomer.ActiveContext = base.ActiveContext;
			}
			if(_languageCollectionViaHealthPlanCallQueueCriteria_!=null)
			{
				_languageCollectionViaHealthPlanCallQueueCriteria_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaUncontactedCustomerCallQueue!=null)
			{
				_lookupCollectionViaUncontactedCustomerCallQueue.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaFillEventCallQueue!=null)
			{
				_lookupCollectionViaFillEventCallQueue.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaTestPerformedExternally_!=null)
			{
				_lookupCollectionViaTestPerformedExternally_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaLanguageBarrierCallQueue!=null)
			{
				_lookupCollectionViaLanguageBarrierCallQueue.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaMedicationUpload!=null)
			{
				_lookupCollectionViaMedicationUpload.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaHostFacilityRanking!=null)
			{
				_lookupCollectionViaHostFacilityRanking.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaHostFacilityRanking_!=null)
			{
				_lookupCollectionViaHostFacilityRanking_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaMailRoundCallQueue!=null)
			{
				_lookupCollectionViaMailRoundCallQueue.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaHostPaymentTransaction_!=null)
			{
				_lookupCollectionViaHostPaymentTransaction_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaHostPayment!=null)
			{
				_lookupCollectionViaHostPayment.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaHostPaymentTransaction!=null)
			{
				_lookupCollectionViaHostPaymentTransaction.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaHostPayment_!=null)
			{
				_lookupCollectionViaHostPayment_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaKynLabValues!=null)
			{
				_lookupCollectionViaKynLabValues.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaExportableReportsQueue!=null)
			{
				_lookupCollectionViaExportableReportsQueue.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaFile!=null)
			{
				_lookupCollectionViaFile.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaTestPerformedExternally!=null)
			{
				_lookupCollectionViaTestPerformedExternally.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaKynLabValues_!=null)
			{
				_lookupCollectionViaKynLabValues_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaPreQualificationQuestion!=null)
			{
				_lookupCollectionViaPreQualificationQuestion.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaPrintOrderItemTracking__!=null)
			{
				_lookupCollectionViaPrintOrderItemTracking__.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaPcpDisposition_!=null)
			{
				_lookupCollectionViaPcpDisposition_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaPcpAppointment_!=null)
			{
				_lookupCollectionViaPcpAppointment_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaPcpDisposition!=null)
			{
				_lookupCollectionViaPcpDisposition.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaRefundRequest!=null)
			{
				_lookupCollectionViaRefundRequest.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaRapsUpload!=null)
			{
				_lookupCollectionViaRapsUpload.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaRefundRequest_!=null)
			{
				_lookupCollectionViaRefundRequest_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaPrintOrderItemTracking___!=null)
			{
				_lookupCollectionViaPrintOrderItemTracking___.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaProspectCustomer!=null)
			{
				_lookupCollectionViaProspectCustomer.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaPcpAppointment!=null)
			{
				_lookupCollectionViaPcpAppointment.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaHafTemplate!=null)
			{
				_lookupCollectionViaHafTemplate.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaHafTemplate_!=null)
			{
				_lookupCollectionViaHafTemplate_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaSuspectConditionUpload!=null)
			{
				_lookupCollectionViaSuspectConditionUpload.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaMergeCustomerUpload!=null)
			{
				_lookupCollectionViaMergeCustomerUpload.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaNoShowCallQueue!=null)
			{
				_lookupCollectionViaNoShowCallQueue.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaStaffEventScheduleUpload!=null)
			{
				_lookupCollectionViaStaffEventScheduleUpload.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaHealthPlanRevenue!=null)
			{
				_lookupCollectionViaHealthPlanRevenue.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaHealthPlanRevenue_!=null)
			{
				_lookupCollectionViaHealthPlanRevenue_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaHafTemplate__!=null)
			{
				_lookupCollectionViaHafTemplate__.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaHafTemplate___!=null)
			{
				_lookupCollectionViaHafTemplate___.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCustomerProfileHistory___!=null)
			{
				_lookupCollectionViaCustomerProfileHistory___.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCustomerProfileHistory__!=null)
			{
				_lookupCollectionViaCustomerProfileHistory__.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCustomerProfileHistory!=null)
			{
				_lookupCollectionViaCustomerProfileHistory.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCustomEventNotification!=null)
			{
				_lookupCollectionViaCustomEventNotification.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCustomerRegistrationNotes!=null)
			{
				_lookupCollectionViaCustomerRegistrationNotes.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCustomerProfileHistory_!=null)
			{
				_lookupCollectionViaCustomerProfileHistory_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCustomerPrimaryCarePhysician__!=null)
			{
				_lookupCollectionViaCustomerPrimaryCarePhysician__.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCustomerEventTestState__!=null)
			{
				_lookupCollectionViaCustomerEventTestState__.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCustomerEventTestState_!=null)
			{
				_lookupCollectionViaCustomerEventTestState_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCustomerEventTestState!=null)
			{
				_lookupCollectionViaCustomerEventTestState.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCustomerPrimaryCarePhysician_!=null)
			{
				_lookupCollectionViaCustomerPrimaryCarePhysician_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCustomerPrimaryCarePhysician!=null)
			{
				_lookupCollectionViaCustomerPrimaryCarePhysician.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCustomerPhoneNumberUpdateUpload!=null)
			{
				_lookupCollectionViaCustomerPhoneNumberUpdateUpload.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEligibilityUpload!=null)
			{
				_lookupCollectionViaEligibilityUpload.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEventCustomerResult__!=null)
			{
				_lookupCollectionViaEventCustomerResult__.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEventCustomerResult______!=null)
			{
				_lookupCollectionViaEventCustomerResult______.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEventCustomerResult_____!=null)
			{
				_lookupCollectionViaEventCustomerResult_____.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEventCustomerResult_!=null)
			{
				_lookupCollectionViaEventCustomerResult_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEventCustomerResult____!=null)
			{
				_lookupCollectionViaEventCustomerResult____.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEventCustomerResult___!=null)
			{
				_lookupCollectionViaEventCustomerResult___.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEventCustomerResult________!=null)
			{
				_lookupCollectionViaEventCustomerResult________.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEventAppointmentCancellationLog!=null)
			{
				_lookupCollectionViaEventAppointmentCancellationLog.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEmailTemplate_!=null)
			{
				_lookupCollectionViaEmailTemplate_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEmailTemplate!=null)
			{
				_lookupCollectionViaEmailTemplate.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEventCustomerResult_______!=null)
			{
				_lookupCollectionViaEventCustomerResult_______.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEventCustomerResult!=null)
			{
				_lookupCollectionViaEventCustomerResult.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEventAppointmentChangeLog!=null)
			{
				_lookupCollectionViaEventAppointmentChangeLog.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCustomerActivityTypeUpload!=null)
			{
				_lookupCollectionViaCustomerActivityTypeUpload.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCalls!=null)
			{
				_lookupCollectionViaCalls.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCalls_!=null)
			{
				_lookupCollectionViaCalls_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCallRoundCallQueue!=null)
			{
				_lookupCollectionViaCallRoundCallQueue.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCampaign!=null)
			{
				_lookupCollectionViaCampaign.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCallUpload!=null)
			{
				_lookupCollectionViaCallUpload.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCalls__!=null)
			{
				_lookupCollectionViaCalls__.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCallQueueCustomer__!=null)
			{
				_lookupCollectionViaCallQueueCustomer__.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCallCenterTeam!=null)
			{
				_lookupCollectionViaCallCenterTeam.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaAccountHraChatQuestionnaire_!=null)
			{
				_lookupCollectionViaAccountHraChatQuestionnaire_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaAccountHraChatQuestionnaire!=null)
			{
				_lookupCollectionViaAccountHraChatQuestionnaire.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCallQueueCustomer_!=null)
			{
				_lookupCollectionViaCallQueueCustomer_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCallQueueCustomer!=null)
			{
				_lookupCollectionViaCallQueueCustomer.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCallCenterTeam_!=null)
			{
				_lookupCollectionViaCallCenterTeam_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCampaign_!=null)
			{
				_lookupCollectionViaCampaign_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaClinicalTestQualificationCriteria_!=null)
			{
				_lookupCollectionViaClinicalTestQualificationCriteria_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaClinicalTestQualificationCriteria!=null)
			{
				_lookupCollectionViaClinicalTestQualificationCriteria.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCheckListTemplate_!=null)
			{
				_lookupCollectionViaCheckListTemplate_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCorporateUpload!=null)
			{
				_lookupCollectionViaCorporateUpload.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaClinicalTestQualificationCriteria___!=null)
			{
				_lookupCollectionViaClinicalTestQualificationCriteria___.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaClinicalTestQualificationCriteria__!=null)
			{
				_lookupCollectionViaClinicalTestQualificationCriteria__.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCheckListTemplate!=null)
			{
				_lookupCollectionViaCheckListTemplate.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCampaignActivity!=null)
			{
				_lookupCollectionViaCampaignActivity.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCampaign___!=null)
			{
				_lookupCollectionViaCampaign___.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCampaign__!=null)
			{
				_lookupCollectionViaCampaign__.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCheckListAnswer_!=null)
			{
				_lookupCollectionViaCheckListAnswer_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCheckListAnswer!=null)
			{
				_lookupCollectionViaCheckListAnswer.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaCampaignActivity_!=null)
			{
				_lookupCollectionViaCampaignActivity_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEvents________!=null)
			{
				_lookupCollectionViaEvents________.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEvents______________!=null)
			{
				_lookupCollectionViaEvents______________.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEvents_________!=null)
			{
				_lookupCollectionViaEvents_________.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEvents_____________!=null)
			{
				_lookupCollectionViaEvents_____________.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEvents___________________!=null)
			{
				_lookupCollectionViaEvents___________________.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEvents__________________!=null)
			{
				_lookupCollectionViaEvents__________________.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEvents_______________!=null)
			{
				_lookupCollectionViaEvents_______________.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEvents_______________________!=null)
			{
				_lookupCollectionViaEvents_______________________.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEvents____________!=null)
			{
				_lookupCollectionViaEvents____________.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEvents____!=null)
			{
				_lookupCollectionViaEvents____.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEvents________________!=null)
			{
				_lookupCollectionViaEvents________________.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEvents_______!=null)
			{
				_lookupCollectionViaEvents_______.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEvents_____!=null)
			{
				_lookupCollectionViaEvents_____.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEvents__________!=null)
			{
				_lookupCollectionViaEvents__________.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEvents_________________!=null)
			{
				_lookupCollectionViaEvents_________________.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEvents___________!=null)
			{
				_lookupCollectionViaEvents___________.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEvents______________________!=null)
			{
				_lookupCollectionViaEvents______________________.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEvents!=null)
			{
				_lookupCollectionViaEvents.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEvents______!=null)
			{
				_lookupCollectionViaEvents______.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEvents__!=null)
			{
				_lookupCollectionViaEvents__.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEventCustomers___!=null)
			{
				_lookupCollectionViaEventCustomers___.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEventCustomers!=null)
			{
				_lookupCollectionViaEventCustomers.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEventCustomers_!=null)
			{
				_lookupCollectionViaEventCustomers_.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEventCustomers__!=null)
			{
				_lookupCollectionViaEventCustomers__.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEvents___!=null)
			{
				_lookupCollectionViaEvents___.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEvents________________________!=null)
			{
				_lookupCollectionViaEvents________________________.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEvents____________________!=null)
			{
				_lookupCollectionViaEvents____________________.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEvents_____________________!=null)
			{
				_lookupCollectionViaEvents_____________________.ActiveContext = base.ActiveContext;
			}
			if(_lookupCollectionViaEvents_!=null)
			{
				_lookupCollectionViaEvents_.ActiveContext = base.ActiveContext;
			}
			if(_marketingPrintOrderItemCollectionViaPrintOrderItemTracking!=null)
			{
				_marketingPrintOrderItemCollectionViaPrintOrderItemTracking.ActiveContext = base.ActiveContext;
			}
			if(_marketingPrintOrderItemCollectionViaPrintOrderItemTracking_!=null)
			{
				_marketingPrintOrderItemCollectionViaPrintOrderItemTracking_.ActiveContext = base.ActiveContext;
			}
			if(_medicareQuestionCollectionViaCustomerMedicareQuestionAnswer!=null)
			{
				_medicareQuestionCollectionViaCustomerMedicareQuestionAnswer.ActiveContext = base.ActiveContext;
			}
			if(_ndcCollectionViaCurrentMedication!=null)
			{
				_ndcCollectionViaCurrentMedication.ActiveContext = base.ActiveContext;
			}
			if(_notesDetailsCollectionViaPriorityInQueue!=null)
			{
				_notesDetailsCollectionViaPriorityInQueue.ActiveContext = base.ActiveContext;
			}
			if(_notesDetailsCollectionViaPriorityInQueue_!=null)
			{
				_notesDetailsCollectionViaPriorityInQueue_.ActiveContext = base.ActiveContext;
			}
			if(_notesDetailsCollectionViaCallQueueCustomer_!=null)
			{
				_notesDetailsCollectionViaCallQueueCustomer_.ActiveContext = base.ActiveContext;
			}
			if(_notesDetailsCollectionViaEvents!=null)
			{
				_notesDetailsCollectionViaEvents.ActiveContext = base.ActiveContext;
			}
			if(_notesDetailsCollectionViaCallQueueCustomer__!=null)
			{
				_notesDetailsCollectionViaCallQueueCustomer__.ActiveContext = base.ActiveContext;
			}
			if(_notesDetailsCollectionViaEvents_!=null)
			{
				_notesDetailsCollectionViaEvents_.ActiveContext = base.ActiveContext;
			}
			if(_notesDetailsCollectionViaEvents___!=null)
			{
				_notesDetailsCollectionViaEvents___.ActiveContext = base.ActiveContext;
			}
			if(_notesDetailsCollectionViaCallQueueCustomer!=null)
			{
				_notesDetailsCollectionViaCallQueueCustomer.ActiveContext = base.ActiveContext;
			}
			if(_notesDetailsCollectionViaEvents____!=null)
			{
				_notesDetailsCollectionViaEvents____.ActiveContext = base.ActiveContext;
			}
			if(_notesDetailsCollectionViaEvents__!=null)
			{
				_notesDetailsCollectionViaEvents__.ActiveContext = base.ActiveContext;
			}
			if(_notificationMediumCollectionViaNotificationType!=null)
			{
				_notificationMediumCollectionViaNotificationType.ActiveContext = base.ActiveContext;
			}
			if(_notificationMediumCollectionViaNotification!=null)
			{
				_notificationMediumCollectionViaNotification.ActiveContext = base.ActiveContext;
			}
			if(_notificationTypeCollectionViaEventCustomerTestNotPerformedNotification!=null)
			{
				_notificationTypeCollectionViaEventCustomerTestNotPerformedNotification.ActiveContext = base.ActiveContext;
			}
			if(_notificationTypeCollectionViaEmailTemplate!=null)
			{
				_notificationTypeCollectionViaEmailTemplate.ActiveContext = base.ActiveContext;
			}
			if(_notificationTypeCollectionViaNotification!=null)
			{
				_notificationTypeCollectionViaNotification.ActiveContext = base.ActiveContext;
			}
			if(_orderCollectionViaRefundRequest_!=null)
			{
				_orderCollectionViaRefundRequest_.ActiveContext = base.ActiveContext;
			}
			if(_orderCollectionViaRefundRequest!=null)
			{
				_orderCollectionViaRefundRequest.ActiveContext = base.ActiveContext;
			}
			if(_organizationCollectionViaAccountTestHcpcsCode_!=null)
			{
				_organizationCollectionViaAccountTestHcpcsCode_.ActiveContext = base.ActiveContext;
			}
			if(_organizationCollectionViaAccountTestHcpcsCode!=null)
			{
				_organizationCollectionViaAccountTestHcpcsCode.ActiveContext = base.ActiveContext;
			}
			if(_organizationCollectionViaAccountCallCenterOrganization!=null)
			{
				_organizationCollectionViaAccountCallCenterOrganization.ActiveContext = base.ActiveContext;
			}
			if(_organizationCollectionViaAccountCallCenterOrganization_!=null)
			{
				_organizationCollectionViaAccountCallCenterOrganization_.ActiveContext = base.ActiveContext;
			}
			if(_organizationCollectionViaEventAccountTestHcpcsCode_!=null)
			{
				_organizationCollectionViaEventAccountTestHcpcsCode_.ActiveContext = base.ActiveContext;
			}
			if(_organizationCollectionViaEventAccountTestHcpcsCode!=null)
			{
				_organizationCollectionViaEventAccountTestHcpcsCode.ActiveContext = base.ActiveContext;
			}
			if(_organizationCollectionViaMarketingPrintOrder!=null)
			{
				_organizationCollectionViaMarketingPrintOrder.ActiveContext = base.ActiveContext;
			}
			if(_organizationCollectionViaMarketingPrintOrder_!=null)
			{
				_organizationCollectionViaMarketingPrintOrder_.ActiveContext = base.ActiveContext;
			}
			if(_organizationCollectionViaAffiliateProfile!=null)
			{
				_organizationCollectionViaAffiliateProfile.ActiveContext = base.ActiveContext;
			}
			if(_packageCollectionViaPreApprovedPackage!=null)
			{
				_packageCollectionViaPreApprovedPackage.ActiveContext = base.ActiveContext;
			}
			if(_physicianMasterCollectionViaCustomerPrimaryCarePhysician!=null)
			{
				_physicianMasterCollectionViaCustomerPrimaryCarePhysician.ActiveContext = base.ActiveContext;
			}
			if(_physicianMasterCollectionViaCustomerPrimaryCarePhysician_!=null)
			{
				_physicianMasterCollectionViaCustomerPrimaryCarePhysician_.ActiveContext = base.ActiveContext;
			}
			if(_physicianMasterCollectionViaCustomerPrimaryCarePhysician__!=null)
			{
				_physicianMasterCollectionViaCustomerPrimaryCarePhysician__.ActiveContext = base.ActiveContext;
			}
			if(_podDetailsCollectionViaSalesRepPodAssigments!=null)
			{
				_podDetailsCollectionViaSalesRepPodAssigments.ActiveContext = base.ActiveContext;
			}
			if(_podDetailsCollectionViaEventStaffAssignment!=null)
			{
				_podDetailsCollectionViaEventStaffAssignment.ActiveContext = base.ActiveContext;
			}
			if(_podDetailsCollectionViaEventNote_!=null)
			{
				_podDetailsCollectionViaEventNote_.ActiveContext = base.ActiveContext;
			}
			if(_podDetailsCollectionViaEventNote!=null)
			{
				_podDetailsCollectionViaEventNote.ActiveContext = base.ActiveContext;
			}
			if(_podDetailsCollectionViaPodDefaultTeam!=null)
			{
				_podDetailsCollectionViaPodDefaultTeam.ActiveContext = base.ActiveContext;
			}
			if(_podDetailsCollectionViaEventStaffAssignment_!=null)
			{
				_podDetailsCollectionViaEventStaffAssignment_.ActiveContext = base.ActiveContext;
			}
			if(_podDetailsCollectionViaEventStaffAssignment__!=null)
			{
				_podDetailsCollectionViaEventStaffAssignment__.ActiveContext = base.ActiveContext;
			}
			if(_preQualificationQuestionCollectionViaEventCustomerQuestionAnswer_!=null)
			{
				_preQualificationQuestionCollectionViaEventCustomerQuestionAnswer_.ActiveContext = base.ActiveContext;
			}
			if(_preQualificationQuestionCollectionViaDisqualifiedTest!=null)
			{
				_preQualificationQuestionCollectionViaDisqualifiedTest.ActiveContext = base.ActiveContext;
			}
			if(_preQualificationQuestionCollectionViaDisqualifiedTest_!=null)
			{
				_preQualificationQuestionCollectionViaDisqualifiedTest_.ActiveContext = base.ActiveContext;
			}
			if(_preQualificationQuestionCollectionViaEventCustomerQuestionAnswer!=null)
			{
				_preQualificationQuestionCollectionViaEventCustomerQuestionAnswer.ActiveContext = base.ActiveContext;
			}
			if(_prospectCustomerCollectionViaCallQueueCustomer_!=null)
			{
				_prospectCustomerCollectionViaCallQueueCustomer_.ActiveContext = base.ActiveContext;
			}
			if(_prospectCustomerCollectionViaCallQueueCustomer!=null)
			{
				_prospectCustomerCollectionViaCallQueueCustomer.ActiveContext = base.ActiveContext;
			}
			if(_prospectCustomerCollectionViaCallQueueCustomer__!=null)
			{
				_prospectCustomerCollectionViaCallQueueCustomer__.ActiveContext = base.ActiveContext;
			}
			if(_prospectListDetailsCollectionViaProspects!=null)
			{
				_prospectListDetailsCollectionViaProspects.ActiveContext = base.ActiveContext;
			}
			if(_prospectsCollectionViaHostFacilityRanking!=null)
			{
				_prospectsCollectionViaHostFacilityRanking.ActiveContext = base.ActiveContext;
			}
			if(_prospectsCollectionViaHostPayment!=null)
			{
				_prospectsCollectionViaHostPayment.ActiveContext = base.ActiveContext;
			}
			if(_prospectTypeCollectionViaProspects!=null)
			{
				_prospectTypeCollectionViaProspects.ActiveContext = base.ActiveContext;
			}
			if(_refundRequestCollectionViaEventAppointmentCancellationLog!=null)
			{
				_refundRequestCollectionViaEventAppointmentCancellationLog.ActiveContext = base.ActiveContext;
			}
			if(_relationshipCollectionViaGuardianDetails_!=null)
			{
				_relationshipCollectionViaGuardianDetails_.ActiveContext = base.ActiveContext;
			}
			if(_relationshipCollectionViaGuardianDetails!=null)
			{
				_relationshipCollectionViaGuardianDetails.ActiveContext = base.ActiveContext;
			}
			if(_rescheduleCancelDispositionCollectionViaEventAppointmentChangeLog!=null)
			{
				_rescheduleCancelDispositionCollectionViaEventAppointmentChangeLog.ActiveContext = base.ActiveContext;
			}
			if(_rescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog!=null)
			{
				_rescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog.ActiveContext = base.ActiveContext;
			}
			if(_roleCollectionViaUser!=null)
			{
				_roleCollectionViaUser.ActiveContext = base.ActiveContext;
			}
			if(_roleCollectionViaHostFacilityRanking!=null)
			{
				_roleCollectionViaHostFacilityRanking.ActiveContext = base.ActiveContext;
			}
			if(_roleCollectionViaUser_!=null)
			{
				_roleCollectionViaUser_.ActiveContext = base.ActiveContext;
			}
			if(_scheduleMethodCollectionViaEvents___!=null)
			{
				_scheduleMethodCollectionViaEvents___.ActiveContext = base.ActiveContext;
			}
			if(_scheduleMethodCollectionViaEvents____!=null)
			{
				_scheduleMethodCollectionViaEvents____.ActiveContext = base.ActiveContext;
			}
			if(_scheduleMethodCollectionViaEvents!=null)
			{
				_scheduleMethodCollectionViaEvents.ActiveContext = base.ActiveContext;
			}
			if(_scheduleMethodCollectionViaEvents_!=null)
			{
				_scheduleMethodCollectionViaEvents_.ActiveContext = base.ActiveContext;
			}
			if(_scheduleMethodCollectionViaEvents__!=null)
			{
				_scheduleMethodCollectionViaEvents__.ActiveContext = base.ActiveContext;
			}
			if(_scriptsCollectionViaCallQueue!=null)
			{
				_scriptsCollectionViaCallQueue.ActiveContext = base.ActiveContext;
			}
			if(_scriptsCollectionViaCallQueue_!=null)
			{
				_scriptsCollectionViaCallQueue_.ActiveContext = base.ActiveContext;
			}
			if(_shippingOptionCollectionViaShippingDetail_!=null)
			{
				_shippingOptionCollectionViaShippingDetail_.ActiveContext = base.ActiveContext;
			}
			if(_shippingOptionCollectionViaShippingDetail!=null)
			{
				_shippingOptionCollectionViaShippingDetail.ActiveContext = base.ActiveContext;
			}
			if(_staffEventRoleCollectionViaEventStaffAssignment__!=null)
			{
				_staffEventRoleCollectionViaEventStaffAssignment__.ActiveContext = base.ActiveContext;
			}
			if(_staffEventRoleCollectionViaPodDefaultTeam!=null)
			{
				_staffEventRoleCollectionViaPodDefaultTeam.ActiveContext = base.ActiveContext;
			}
			if(_staffEventRoleCollectionViaEventStaffAssignment!=null)
			{
				_staffEventRoleCollectionViaEventStaffAssignment.ActiveContext = base.ActiveContext;
			}
			if(_staffEventRoleCollectionViaEventStaffAssignment_!=null)
			{
				_staffEventRoleCollectionViaEventStaffAssignment_.ActiveContext = base.ActiveContext;
			}
			if(_standardFindingTestReadingCollectionViaCustomerEventReading!=null)
			{
				_standardFindingTestReadingCollectionViaCustomerEventReading.ActiveContext = base.ActiveContext;
			}
			if(_stateCollectionViaAddress!=null)
			{
				_stateCollectionViaAddress.ActiveContext = base.ActiveContext;
			}
			if(_surveyQuestionCollectionViaSurveyAnswer_!=null)
			{
				_surveyQuestionCollectionViaSurveyAnswer_.ActiveContext = base.ActiveContext;
			}
			if(_surveyQuestionCollectionViaSurveyAnswer!=null)
			{
				_surveyQuestionCollectionViaSurveyAnswer.ActiveContext = base.ActiveContext;
			}
			if(_tagCollectionViaPreAssessmentCustomerCallQueueCallAttempt!=null)
			{
				_tagCollectionViaPreAssessmentCustomerCallQueueCallAttempt.ActiveContext = base.ActiveContext;
			}
			if(_tagCollectionViaCustomerCallQueueCallAttempt!=null)
			{
				_tagCollectionViaCustomerCallQueueCallAttempt.ActiveContext = base.ActiveContext;
			}
			if(_taskPriorityTypesCollectionViaTaskDetails__!=null)
			{
				_taskPriorityTypesCollectionViaTaskDetails__.ActiveContext = base.ActiveContext;
			}
			if(_taskPriorityTypesCollectionViaTaskDetails_!=null)
			{
				_taskPriorityTypesCollectionViaTaskDetails_.ActiveContext = base.ActiveContext;
			}
			if(_taskPriorityTypesCollectionViaTaskDetails!=null)
			{
				_taskPriorityTypesCollectionViaTaskDetails.ActiveContext = base.ActiveContext;
			}
			if(_taskStatusTypesCollectionViaTaskDetails_!=null)
			{
				_taskStatusTypesCollectionViaTaskDetails_.ActiveContext = base.ActiveContext;
			}
			if(_taskStatusTypesCollectionViaTaskDetails__!=null)
			{
				_taskStatusTypesCollectionViaTaskDetails__.ActiveContext = base.ActiveContext;
			}
			if(_taskStatusTypesCollectionViaTaskDetails!=null)
			{
				_taskStatusTypesCollectionViaTaskDetails.ActiveContext = base.ActiveContext;
			}
			if(_technicianProfileCollectionViaPinChangelog!=null)
			{
				_technicianProfileCollectionViaPinChangelog.ActiveContext = base.ActiveContext;
			}
			if(_territoryCollectionViaTerritory!=null)
			{
				_territoryCollectionViaTerritory.ActiveContext = base.ActiveContext;
			}
			if(_territoryCollectionViaOrganizationRoleUserTerritory!=null)
			{
				_territoryCollectionViaOrganizationRoleUserTerritory.ActiveContext = base.ActiveContext;
			}
			if(_testCollectionViaEventCustomerTestNotPerformedNotification!=null)
			{
				_testCollectionViaEventCustomerTestNotPerformedNotification.ActiveContext = base.ActiveContext;
			}
			if(_testCollectionViaEventPhysicianTest!=null)
			{
				_testCollectionViaEventPhysicianTest.ActiveContext = base.ActiveContext;
			}
			if(_testCollectionViaDisqualifiedTest_!=null)
			{
				_testCollectionViaDisqualifiedTest_.ActiveContext = base.ActiveContext;
			}
			if(_testCollectionViaEventCustomerRetest!=null)
			{
				_testCollectionViaEventCustomerRetest.ActiveContext = base.ActiveContext;
			}
			if(_testCollectionViaEventPhysicianTest_!=null)
			{
				_testCollectionViaEventPhysicianTest_.ActiveContext = base.ActiveContext;
			}
			if(_testCollectionViaKynLabValues_!=null)
			{
				_testCollectionViaKynLabValues_.ActiveContext = base.ActiveContext;
			}
			if(_testCollectionViaEventPhysicianTest__!=null)
			{
				_testCollectionViaEventPhysicianTest__.ActiveContext = base.ActiveContext;
			}
			if(_testCollectionViaTestHcpcsCode_!=null)
			{
				_testCollectionViaTestHcpcsCode_.ActiveContext = base.ActiveContext;
			}
			if(_testCollectionViaTestHcpcsCode!=null)
			{
				_testCollectionViaTestHcpcsCode.ActiveContext = base.ActiveContext;
			}
			if(_testCollectionViaKynLabValues!=null)
			{
				_testCollectionViaKynLabValues.ActiveContext = base.ActiveContext;
			}
			if(_testCollectionViaPreApprovedTest!=null)
			{
				_testCollectionViaPreApprovedTest.ActiveContext = base.ActiveContext;
			}
			if(_testCollectionViaClinicalTestQualificationCriteria!=null)
			{
				_testCollectionViaClinicalTestQualificationCriteria.ActiveContext = base.ActiveContext;
			}
			if(_testCollectionViaRequiredTest!=null)
			{
				_testCollectionViaRequiredTest.ActiveContext = base.ActiveContext;
			}
			if(_testCollectionViaClinicalTestQualificationCriteria_!=null)
			{
				_testCollectionViaClinicalTestQualificationCriteria_.ActiveContext = base.ActiveContext;
			}
			if(_testCollectionViaDisqualifiedTest!=null)
			{
				_testCollectionViaDisqualifiedTest.ActiveContext = base.ActiveContext;
			}
			if(_testCollectionViaPreQualificationTestTemplate!=null)
			{
				_testCollectionViaPreQualificationTestTemplate.ActiveContext = base.ActiveContext;
			}
			if(_testCollectionViaPreQualificationTestTemplate_!=null)
			{
				_testCollectionViaPreQualificationTestTemplate_.ActiveContext = base.ActiveContext;
			}
			if(_testCollectionViaPreQualificationQuestion!=null)
			{
				_testCollectionViaPreQualificationQuestion.ActiveContext = base.ActiveContext;
			}
			if(_testHcpcsCodeCollectionViaEventAccountTestHcpcsCode_!=null)
			{
				_testHcpcsCodeCollectionViaEventAccountTestHcpcsCode_.ActiveContext = base.ActiveContext;
			}
			if(_testHcpcsCodeCollectionViaEventAccountTestHcpcsCode!=null)
			{
				_testHcpcsCodeCollectionViaEventAccountTestHcpcsCode.ActiveContext = base.ActiveContext;
			}
			if(_testHcpcsCodeCollectionViaAccountTestHcpcsCode_!=null)
			{
				_testHcpcsCodeCollectionViaAccountTestHcpcsCode_.ActiveContext = base.ActiveContext;
			}
			if(_testHcpcsCodeCollectionViaAccountTestHcpcsCode!=null)
			{
				_testHcpcsCodeCollectionViaAccountTestHcpcsCode.ActiveContext = base.ActiveContext;
			}
			if(_testNotPerformedReasonCollectionViaTestNotPerformed_!=null)
			{
				_testNotPerformedReasonCollectionViaTestNotPerformed_.ActiveContext = base.ActiveContext;
			}
			if(_testNotPerformedReasonCollectionViaTestNotPerformed!=null)
			{
				_testNotPerformedReasonCollectionViaTestNotPerformed.ActiveContext = base.ActiveContext;
			}
			if(_testReadingCollectionViaCustomerEventReading!=null)
			{
				_testReadingCollectionViaCustomerEventReading.ActiveContext = base.ActiveContext;
			}
			if(_testUnableScreenReasonCollectionViaCustomerEventUnableScreenReason!=null)
			{
				_testUnableScreenReasonCollectionViaCustomerEventUnableScreenReason.ActiveContext = base.ActiveContext;
			}
			if(_userLoginCollectionViaPasswordChangelog!=null)
			{
				_userLoginCollectionViaPasswordChangelog.ActiveContext = base.ActiveContext;
			}
			if(_zipCollectionViaAddress!=null)
			{
				_zipCollectionViaAddress.ActiveContext = base.ActiveContext;
			}
			if(_organization!=null)
			{
				_organization.ActiveContext = base.ActiveContext;
			}
			if(_role!=null)
			{
				_role.ActiveContext = base.ActiveContext;
			}
			if(_user!=null)
			{
				_user.ActiveContext = base.ActiveContext;
			}
			if(_accountCoordinatorProfile!=null)
			{
				_accountCoordinatorProfile.ActiveContext = base.ActiveContext;
			}
			if(_affiliateProfile_!=null)
			{
				_affiliateProfile_.ActiveContext = base.ActiveContext;
			}
			if(_callCenterRepProfile!=null)
			{
				_callCenterRepProfile.ActiveContext = base.ActiveContext;
			}
			if(_customerProfile!=null)
			{
				_customerProfile.ActiveContext = base.ActiveContext;
			}
			if(_physicianProfile!=null)
			{
				_physicianProfile.ActiveContext = base.ActiveContext;
			}
			if(_technicianProfile!=null)
			{
				_technicianProfile.ActiveContext = base.ActiveContext;
			}
		}

		/// <summary> Initializes the class members</summary>
		protected virtual void InitClassMembers()
		{

			_accountCallCenterOrganization_ = null;
			_accountCallCenterOrganization = null;
			_accountHraChatQuestionnaire_ = null;
			_accountHraChatQuestionnaire = null;
			_accountTestHcpcsCode_ = null;
			_accountTestHcpcsCode = null;
			_activityType = null;
			_additionalFields_ = null;
			_additionalFields = null;
			_address = null;
			_advocateManagerTeam_ = null;
			_advocateManagerTeam = null;
			_afcampaign_ = null;
			_afcampaign = null;
			_affiliateProfile = null;
			_applicationAuthentication_ = null;
			_applicationAuthentication = null;
			_barrier_ = null;
			_barrier = null;
			_callCenterAgentTeam = null;
			_callCenterAgentTeamLog__ = null;
			_callCenterAgentTeamLog_ = null;
			_callCenterAgentTeamLog = null;
			_callCenterTeam_ = null;
			_callCenterTeam = null;
			_callQueue_ = null;
			_callQueue = null;
			_callQueueAssignment = null;
			_callQueueCustomer__ = null;
			_callQueueCustomer_ = null;
			_callQueueCustomer = null;
			_callQueueCustomerLock = null;
			_callQueueCustomTag = null;
			_callRoundCallQueue = null;
			_calls = null;
			_callUpload = null;
			_campaign_ = null;
			_campaign = null;
			_campaignActivity_ = null;
			_campaignActivity = null;
			_campaignActivityAssignment = null;
			_campaignAssignment = null;
			_cdcontentGeneratorTracking = null;
			_chaperoneAnswer_ = null;
			_chaperoneAnswer = null;
			_chaperoneSignature = null;
			_check_ = null;
			_check = null;
			_checkListAnswer_ = null;
			_checkListAnswer = null;
			_checkListTemplate_ = null;
			_checkListTemplate = null;
			_clinicalTestQualificationCriteria_ = null;
			_clinicalTestQualificationCriteria = null;
			_contactCall_ = null;
			_contactCall = null;
			_contactMeeting_ = null;
			_contactMeeting = null;
			_content_ = null;
			_content = null;
			_corporateTag_ = null;
			_corporateTag = null;
			_corporateUpload = null;
			_coupons_ = null;
			_coupons = null;
			_currentMedication = null;
			_customerActivityTypeUpload = null;
			_customerCallAttempts = null;
			_customerCallQueueCallAttempt = null;
			_customerClinicalQuestionAnswer_ = null;
			_customerClinicalQuestionAnswer = null;
			_customerEligibility_ = null;
			_customerEligibility = null;
			_customerEventCriticalTestData_ = null;
			_customerEventCriticalTestData = null;
			_customerEventPriorityInQueueData_ = null;
			_customerEventPriorityInQueueData = null;
			_customerEventReading = null;
			_customerEventTestPhysicianEvaluation = null;
			_customerEventTestState__ = null;
			_customerEventTestState_ = null;
			_customerEventTestState = null;
			_customerEventUnableScreenReason = null;
			_customerHealthInfo = null;
			_customerHealthInfoArchive = null;
			_customerIcdCode = null;
			_customerLockForCall = null;
			_customerMedicareQuestionAnswer = null;
			_customerPhoneNumberUpdateUpload = null;
			_customerPrimaryCarePhysician_ = null;
			_customerPrimaryCarePhysician__ = null;
			_customerPrimaryCarePhysician = null;
			_customerProfileHistory = null;
			_customerRegistrationNotes = null;
			_customerResultScreeningCommunication__ = null;
			_customerResultScreeningCommunication_ = null;
			_customerResultScreeningCommunication = null;
			_customerTag_ = null;
			_customerTag = null;
			_customerTargeted_ = null;
			_customerTargeted = null;
			_customerWarmTransfer_ = null;
			_customerWarmTransfer = null;
			_customEventNotification = null;
			_directMail = null;
			_directMailType_ = null;
			_directMailType = null;
			_disqualifiedTest_ = null;
			_disqualifiedTest = null;
			_eligibility = null;
			_eligibilityUpload = null;
			_emailTemplate = null;
			_eventAccountTestHcpcsCode_ = null;
			_eventAccountTestHcpcsCode = null;
			_eventActivityTemplate = null;
			_eventActivityTemplateCall = null;
			_eventActivityTemplateEmail = null;
			_eventActivityTemplateMeeting = null;
			_eventActivityTemplateTask = null;
			_eventAppointment = null;
			_eventAppointmentCancellationLog = null;
			_eventAppointmentChangeLog = null;
			_eventCustomerBasicBioMetric = null;
			_eventCustomerGiftCard = null;
			_eventCustomerPrimaryCarePhysician = null;
			_eventCustomerQuestionAnswer_ = null;
			_eventCustomerQuestionAnswer = null;
			_eventCustomerResult___ = null;
			_eventCustomerResult__ = null;
			_eventCustomerResult_ = null;
			_eventCustomerResult____ = null;
			_eventCustomerResult______ = null;
			_eventCustomerResult_______ = null;
			_eventCustomerResult = null;
			_eventCustomerResult_____ = null;
			_eventCustomerResult________ = null;
			_eventCustomerResultBloodLab = null;
			_eventCustomerResultHistory = null;
			_eventCustomerResultHistory_ = null;
			_eventCustomerResultHistory__ = null;
			_eventCustomerRetest = null;
			_eventCustomers_ = null;
			_eventCustomers = null;
			_eventCustomerTestNotPerformedNotification = null;
			_eventNote_ = null;
			_eventNote = null;
			_eventPhysicianTest__ = null;
			_eventPhysicianTest_ = null;
			_eventPhysicianTest = null;
			_events___ = null;
			_events____ = null;
			_events__ = null;
			_events = null;
			_events_ = null;
			_eventStaffAssignment__ = null;
			_eventStaffAssignment_ = null;
			_eventStaffAssignment = null;
			_exitInterviewAnswer_ = null;
			_exitInterviewAnswer = null;
			_exitInterviewSignature = null;
			_exportableReportsQueue = null;
			_file = null;
			_fillEventCallQueue = null;
			_fluConsentAnswer_ = null;
			_fluConsentAnswer = null;
			_fluConsentSignature = null;
			_fluConsentTemplate_ = null;
			_fluConsentTemplate = null;
			_gcNotGivenReason_ = null;
			_gcNotGivenReason = null;
			_guardianDetails_ = null;
			_guardianDetails = null;
			_hafTemplate_ = null;
			_hafTemplate = null;
			_hcpcsCode_ = null;
			_hcpcsCode = null;
			_healthPlanCallQueueCriteria__ = null;
			_healthPlanCallQueueCriteria_ = null;
			_healthPlanCriteriaAssignment__ = null;
			_healthPlanCriteriaAssignment_ = null;
			_healthPlanCriteriaAssignment = null;
			_healthPlanCriteriaAssignmentUpload = null;
			_healthPlanCriteriaTeamAssignment_ = null;
			_healthPlanCriteriaTeamAssignment = null;
			_healthPlanRevenue_ = null;
			_healthPlanRevenue = null;
			_hospitalPartnerCustomer__ = null;
			_hospitalPartnerCustomer_ = null;
			_hospitalPartnerCustomer = null;
			_hostFacilityRanking = null;
			_hostPayment = null;
			_hostPaymentTransaction = null;
			_icdCodes_ = null;
			_icdCodes = null;
			_incidentalFindings = null;
			_kynLabValues_ = null;
			_kynLabValues = null;
			_lab = null;
			_language = null;
			_languageBarrierCallQueue = null;
			_mailRoundCallQueue = null;
			_marketingPrintOrder = null;
			_medication_ = null;
			_medication = null;
			_medicationUpload = null;
			_mergeCustomerUpload = null;
			_noShowCallQueue = null;
			_notesDetails_ = null;
			_notesDetails = null;
			_notification = null;
			_notificationType = null;
			_organizationRoleUserTerritory = null;
			_orgRoleUserActivity = null;
			_participationConsentSignature = null;
			_passwordChangelog = null;
			_payPeriod_ = null;
			_payPeriod = null;
			_pcpAppointment_ = null;
			_pcpAppointment = null;
			_pcpDisposition_ = null;
			_pcpDisposition = null;
			_physicianRecordRequestSignature = null;
			_pinChangelog = null;
			_podDefaultTeam = null;
			_preApprovedPackage = null;
			_preApprovedTest = null;
			_preAssessmentCallQueueCustomerLock = null;
			_preAssessmentCustomerCallQueueCallAttempt = null;
			_preQualificationQuestion = null;
			_preQualificationTestTemplate_ = null;
			_preQualificationTestTemplate = null;
			_printOrderItemTracking_ = null;
			_printOrderItemTracking = null;
			_priorityInQueue_ = null;
			_priorityInQueue = null;
			_prospectCustomer = null;
			_prospects = null;
			_rapsUpload = null;
			_referral = null;
			_refundRequest_ = null;
			_refundRequest = null;
			_requiredTest = null;
			_salesRepPodAssigments = null;
			_scheduleTemplate_ = null;
			_scheduleTemplate = null;
			_seminars = null;
			_shippingDetail_ = null;
			_shippingDetail = null;
			_sourceCodeChangeLog = null;
			_staffEventScheduleUpload = null;
			_surveyAnswer_ = null;
			_surveyAnswer = null;
			_surveyTemplate_ = null;
			_surveyTemplate = null;
			_suspectConditionUpload = null;
			_systemGenertedCallQueueCriteria__ = null;
			_systemGenertedCallQueueCriteria_ = null;
			_systemGenertedCallQueueCriteria = null;
			_taskDetails__ = null;
			_taskDetails_ = null;
			_taskDetails = null;
			_territory = null;
			_testHcpcsCode_ = null;
			_testHcpcsCode = null;
			_testNotPerformed_ = null;
			_testNotPerformed = null;
			_testNotPerformedReason = null;
			_testPerformedExternally_ = null;
			_testPerformedExternally = null;
			_uncontactedCustomerCallQueue = null;
			_uploadZipInfo = null;
			_user__ = null;
			_user_ = null;
			_accountCollectionViaFillEventCallQueue = null;
			_accountCollectionViaMailRoundCallQueue = null;
			_accountCollectionViaEligibilityUpload = null;
			_accountCollectionViaCorporateUpload = null;
			_accountCollectionViaHealthPlanCallQueueCriteria = null;
			_accountCollectionViaCallQueueCustomer_ = null;
			_accountCollectionViaCallQueueCustomer = null;
			_accountCollectionViaCallQueueCustomer__ = null;
			_accountCollectionViaHealthPlanRevenue = null;
			_accountCollectionViaHealthPlanRevenue_ = null;
			_accountCollectionViaCorporateTag_ = null;
			_accountCollectionViaLanguageBarrierCallQueue = null;
			_accountCollectionViaEventNote = null;
			_accountCollectionViaCampaign = null;
			_accountCollectionViaEventNote_ = null;
			_accountCollectionViaCampaign_ = null;
			_accountCollectionViaHealthPlanCallQueueCriteria_ = null;
			_accountCollectionViaCorporateTag = null;
			_accountCollectionViaCallQueueCustomTag = null;
			_accountCollectionViaCalls = null;
			_accountCollectionViaCallRoundCallQueue = null;
			_accountCollectionViaAccountHraChatQuestionnaire_ = null;
			_accountCollectionViaAccountHraChatQuestionnaire = null;
			_accountCollectionViaUncontactedCustomerCallQueue = null;
			_accountCollectionViaCustomEventNotification = null;
			_accountCollectionViaNoShowCallQueue = null;
			_accountCollectionViaAccountCallCenterOrganization_ = null;
			_accountCollectionViaAccountCallCenterOrganization = null;
			_activityCollectionViaOrgRoleUserActivity = null;
			_activityTypeCollectionViaCallQueueCustomer = null;
			_activityTypeCollectionViaCallQueueCustomer__ = null;
			_activityTypeCollectionViaCallQueueCustomer_ = null;
			_addressCollectionViaCustomerPrimaryCarePhysician_ = null;
			_addressCollectionViaProspects = null;
			_addressCollectionViaCustomerPrimaryCarePhysician___ = null;
			_addressCollectionViaCustomerPrimaryCarePhysician____ = null;
			_addressCollectionViaUser = null;
			_addressCollectionViaUser_ = null;
			_addressCollectionViaShippingDetail = null;
			_addressCollectionViaHostPayment = null;
			_addressCollectionViaShippingDetail_ = null;
			_addressCollectionViaCustomerPrimaryCarePhysician = null;
			_addressCollectionViaCustomerPrimaryCarePhysician__ = null;
			_addressCollectionViaCustomerPrimaryCarePhysician_____ = null;
			_afadvertiserCollectionViaAfcampaign = null;
			_afadvertiserCollectionViaAfcampaign_ = null;
			_afaffiliateCampaignCollectionViaEventCustomers = null;
			_afaffiliateCampaignCollectionViaEventCustomers_ = null;
			_afaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer = null;
			_callCenterTeamCollectionViaCallCenterAgentTeam = null;
			_callCenterTeamCollectionViaCallCenterAgentTeamLog = null;
			_callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_ = null;
			_callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment = null;
			_callCenterTeamCollectionViaCallCenterAgentTeamLog_ = null;
			_callCenterTeamCollectionViaCallCenterAgentTeamLog__ = null;
			_callQueueCollectionViaCallQueueCustomer_ = null;
			_callQueueCollectionViaHealthPlanCallQueueCriteria__ = null;
			_callQueueCollectionViaCallQueueCustomer = null;
			_callQueueCollectionViaCalls = null;
			_callQueueCollectionViaCallQueueAssignment = null;
			_callQueueCollectionViaSystemGenertedCallQueueCriteria__ = null;
			_callQueueCollectionViaSystemGenertedCallQueueCriteria_ = null;
			_callQueueCollectionViaCallQueueCustomer__ = null;
			_callQueueCollectionViaHealthPlanCallQueueCriteria_ = null;
			_callQueueCollectionViaSystemGenertedCallQueueCriteria = null;
			_callQueueCriteriaCollectionViaCallQueueCustomer = null;
			_callQueueCriteriaCollectionViaCallQueueCustomer__ = null;
			_callQueueCriteriaCollectionViaCallQueueCustomer_ = null;
			_callQueueCustomerCollectionViaCustomerCallQueueCallAttempt = null;
			_callsCollectionViaCustomerCallQueueCallAttempt = null;
			_callsCollectionViaPreAssessmentCustomerCallQueueCallAttempt = null;
			_callUploadCollectionViaDirectMail = null;
			_campaignCollectionViaCallQueueCustomer__ = null;
			_campaignCollectionViaCampaignAssignment = null;
			_campaignCollectionViaCallQueueCustomer = null;
			_campaignCollectionViaCampaignActivity_ = null;
			_campaignCollectionViaHealthPlanCallQueueCriteria_ = null;
			_campaignCollectionViaCampaignActivity = null;
			_campaignCollectionViaCalls = null;
			_campaignCollectionViaEventCustomers_ = null;
			_campaignCollectionViaHealthPlanCallQueueCriteria = null;
			_campaignCollectionViaDirectMail = null;
			_campaignCollectionViaCallQueueCustomer_ = null;
			_campaignCollectionViaEventCustomers = null;
			_campaignActivityCollectionViaCampaignActivityAssignment = null;
			_chaperoneQuestionCollectionViaChaperoneAnswer = null;
			_chaperoneQuestionCollectionViaChaperoneAnswer_ = null;
			_checkListQuestionCollectionViaCheckListAnswer_ = null;
			_checkListQuestionCollectionViaCheckListAnswer = null;
			_checkListQuestionCollectionViaExitInterviewSignature = null;
			_cityCollectionViaAddress = null;
			_communicationModeCollectionViaEvents____ = null;
			_communicationModeCollectionViaEvents = null;
			_communicationModeCollectionViaEvents___ = null;
			_communicationModeCollectionViaEvents__ = null;
			_communicationModeCollectionViaEvents_ = null;
			_contactCallStatusCollectionViaContactCall = null;
			_contactCallStatusCollectionViaContactCall_ = null;
			_contactCallStatusCollectionViaContactMeeting_ = null;
			_contactCallStatusCollectionViaContactMeeting = null;
			_countryCollectionViaAddress = null;
			_couponTypeCollectionViaCoupons_ = null;
			_couponTypeCollectionViaCoupons = null;
			_customerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation = null;
			_customerEventScreeningTestsCollectionViaTestPerformedExternally_ = null;
			_customerEventScreeningTestsCollectionViaCustomerEventTestState = null;
			_customerEventScreeningTestsCollectionViaCustomerEventTestState_ = null;
			_customerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason = null;
			_customerEventScreeningTestsCollectionViaCustomerEventTestState__ = null;
			_customerEventScreeningTestsCollectionViaTestPerformedExternally = null;
			_customerEventScreeningTestsCollectionViaCustomerEventReading = null;
			_customerEventScreeningTestsCollectionViaTestNotPerformed = null;
			_customerEventScreeningTestsCollectionViaTestNotPerformed_ = null;
			_customerHealthQuestionsCollectionViaCustomerHealthInfo = null;
			_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_ = null;
			_customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_ = null;
			_customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer = null;
			_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__ = null;
			_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___ = null;
			_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria = null;
			_customerHealthQuestionsCollectionViaCustomerHealthInfoArchive = null;
			_customerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician = null;
			_customerProfileCollectionViaFillEventCallQueue = null;
			_customerProfileCollectionViaDisqualifiedTest_ = null;
			_customerProfileCollectionViaCustomerEligibility_ = null;
			_customerProfileCollectionViaEventCustomerResult_____ = null;
			_customerProfileCollectionViaCustomerEligibility = null;
			_customerProfileCollectionViaLanguageBarrierCallQueue = null;
			_customerProfileCollectionViaEventCustomerQuestionAnswer = null;
			_customerProfileCollectionViaHospitalPartnerCustomer_ = null;
			_customerProfileCollectionViaHospitalPartnerCustomer__ = null;
			_customerProfileCollectionViaHospitalPartnerCustomer = null;
			_customerProfileCollectionViaDisqualifiedTest = null;
			_customerProfileCollectionViaCustomerPrimaryCarePhysician_ = null;
			_customerProfileCollectionViaCustomerPrimaryCarePhysician__ = null;
			_customerProfileCollectionViaNoShowCallQueue = null;
			_customerProfileCollectionViaCustomerPrimaryCarePhysician = null;
			_customerProfileCollectionViaCallQueueCustomer = null;
			_customerProfileCollectionViaCustomerHealthInfo = null;
			_customerProfileCollectionViaCallQueueCustomer__ = null;
			_customerProfileCollectionViaCallQueueCustomer_ = null;
			_customerProfileCollectionViaEventCustomerResult______ = null;
			_customerProfileCollectionViaCustomerIcdCode = null;
			_customerProfileCollectionViaMailRoundCallQueue = null;
			_customerProfileCollectionViaCustomerHealthInfoArchive = null;
			_customerProfileCollectionViaEventCustomerQuestionAnswer_ = null;
			_customerProfileCollectionViaRequiredTest = null;
			_customerProfileCollectionViaCustomerWarmTransfer_ = null;
			_customerProfileCollectionViaProspectCustomer = null;
			_customerProfileCollectionViaEventCustomerResult_ = null;
			_customerProfileCollectionViaEventCustomerResult__ = null;
			_customerProfileCollectionViaUncontactedCustomerCallQueue = null;
			_customerProfileCollectionViaCustomerWarmTransfer = null;
			_customerProfileCollectionViaMedication_ = null;
			_customerProfileCollectionViaCallRoundCallQueue = null;
			_customerProfileCollectionViaCustomerTag_ = null;
			_customerProfileCollectionViaReferral = null;
			_customerProfileCollectionViaCustomerTargeted_ = null;
			_customerProfileCollectionViaCustomerTargeted = null;
			_customerProfileCollectionViaCustomerTag = null;
			_customerProfileCollectionViaMedication = null;
			_customerProfileCollectionViaEventCustomerResult________ = null;
			_customerProfileCollectionViaEventCustomerResult = null;
			_customerProfileCollectionViaEventCustomerResult_______ = null;
			_customerProfileCollectionViaDirectMail = null;
			_customerProfileCollectionViaEventCustomerResult____ = null;
			_customerProfileCollectionViaCurrentMedication = null;
			_customerProfileCollectionViaGuardianDetails = null;
			_customerProfileCollectionViaEventCustomers = null;
			_customerProfileCollectionViaEventCustomers_ = null;
			_customerProfileCollectionViaCustomerCallQueueCallAttempt = null;
			_customerProfileCollectionViaEventCustomerResult___ = null;
			_customerProfileCollectionViaCustomerProfileHistory = null;
			_customerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt = null;
			_customerProfileCollectionViaCustomerClinicalQuestionAnswer = null;
			_customerProfileCollectionViaCustomerClinicalQuestionAnswer_ = null;
			_customerProfileCollectionViaGuardianDetails_ = null;
			_customerProfileHistoryCollectionViaEventCustomers_ = null;
			_customerProfileHistoryCollectionViaEventCustomers = null;
			_customerRegistrationNotesCollectionViaEventAppointmentCancellationLog = null;
			_customerRegistrationNotesCollectionViaEventCustomers_ = null;
			_customerRegistrationNotesCollectionViaEventCustomers = null;
			_directMailTypeCollectionViaDirectMail = null;
			_directMailTypeCollectionViaCampaignActivity = null;
			_directMailTypeCollectionViaCampaignActivity_ = null;
			_eventActivityTemplateCollectionViaEventActivityTemplateMeeting = null;
			_eventActivityTemplateCollectionViaEventActivityTemplateTask = null;
			_eventActivityTemplateCollectionViaEventActivityTemplateCall = null;
			_eventActivityTemplateCollectionViaEventActivityTemplateEmail = null;
			_eventAppointmentCollectionViaEventCustomers = null;
			_eventAppointmentCollectionViaEventCustomers_ = null;
			_eventCustomerResultCollectionViaCustomerResultScreeningCommunication = null;
			_eventCustomerResultCollectionViaPriorityInQueue_ = null;
			_eventCustomerResultCollectionViaKynLabValues = null;
			_eventCustomerResultCollectionViaCustomerResultScreeningCommunication__ = null;
			_eventCustomerResultCollectionViaCustomerResultScreeningCommunication_ = null;
			_eventCustomerResultCollectionViaCdcontentGeneratorTracking = null;
			_eventCustomerResultCollectionViaKynLabValues_ = null;
			_eventCustomerResultCollectionViaPriorityInQueue = null;
			_eventCustomersCollectionViaDisqualifiedTest_ = null;
			_eventCustomersCollectionViaEventAppointmentChangeLog = null;
			_eventCustomersCollectionViaDisqualifiedTest = null;
			_eventCustomersCollectionViaEventCustomerPrimaryCarePhysician = null;
			_eventCustomersCollectionViaEventCustomerQuestionAnswer_ = null;
			_eventCustomersCollectionViaEventAppointmentCancellationLog = null;
			_eventCustomersCollectionViaEventCustomerQuestionAnswer = null;
			_eventCustomersCollectionViaEventCustomerGiftCard = null;
			_eventCustomersCollectionViaSurveyAnswer = null;
			_eventCustomersCollectionViaEventCustomerTestNotPerformedNotification = null;
			_eventCustomersCollectionViaPhysicianRecordRequestSignature = null;
			_eventCustomersCollectionViaEventCustomerRetest = null;
			_eventCustomersCollectionViaPcpDisposition = null;
			_eventCustomersCollectionViaPcpDisposition_ = null;
			_eventCustomersCollectionViaChaperoneSignature = null;
			_eventCustomersCollectionViaChaperoneAnswer_ = null;
			_eventCustomersCollectionViaChaperoneAnswer = null;
			_eventCustomersCollectionViaCallQueueCustomer__ = null;
			_eventCustomersCollectionViaCheckListAnswer_ = null;
			_eventCustomersCollectionViaCallQueueCustomer = null;
			_eventCustomersCollectionViaCallQueueCustomer_ = null;
			_eventCustomersCollectionViaCustomerHealthInfo = null;
			_eventCustomersCollectionViaExitInterviewSignature = null;
			_eventCustomersCollectionViaFluConsentAnswer = null;
			_eventCustomersCollectionViaExitInterviewAnswer_ = null;
			_eventCustomersCollectionViaCheckListAnswer = null;
			_eventCustomersCollectionViaExitInterviewAnswer = null;
			_eventCustomersCollectionViaFluConsentAnswer_ = null;
			_eventCustomersCollectionViaSurveyAnswer_ = null;
			_eventCustomersCollectionViaCustomerHealthInfoArchive = null;
			_eventCustomersCollectionViaCustomerMedicareQuestionAnswer = null;
			_eventCustomersCollectionViaFluConsentSignature = null;
			_eventCustomersCollectionViaParticipationConsentSignature = null;
			_eventsCollectionViaEventCustomerQuestionAnswer = null;
			_eventsCollectionViaEventPhysicianTest__ = null;
			_eventsCollectionViaEventStaffAssignment__ = null;
			_eventsCollectionViaEventStaffAssignment_ = null;
			_eventsCollectionViaEventCustomers = null;
			_eventsCollectionViaEventCustomerResult____ = null;
			_eventsCollectionViaEventCustomerResult___ = null;
			_eventsCollectionViaHospitalPartnerCustomer_ = null;
			_eventsCollectionViaEventCustomerResult_ = null;
			_eventsCollectionViaEventCustomerResult________ = null;
			_eventsCollectionViaEventCustomerResult______ = null;
			_eventsCollectionViaEventCustomerResult__ = null;
			_eventsCollectionViaEventCustomerResult_______ = null;
			_eventsCollectionViaEventPhysicianTest_ = null;
			_eventsCollectionViaEventPhysicianTest = null;
			_eventsCollectionViaEventCustomerQuestionAnswer_ = null;
			_eventsCollectionViaHospitalPartnerCustomer__ = null;
			_eventsCollectionViaEventCustomerResult = null;
			_eventsCollectionViaHospitalPartnerCustomer = null;
			_eventsCollectionViaEventCustomerResult_____ = null;
			_eventsCollectionViaEventCustomers_ = null;
			_eventsCollectionViaEventAccountTestHcpcsCode = null;
			_eventsCollectionViaCustomerRegistrationNotes = null;
			_eventsCollectionViaCallQueueCustomer = null;
			_eventsCollectionViaEventAccountTestHcpcsCode_ = null;
			_eventsCollectionViaSeminars = null;
			_eventsCollectionViaDisqualifiedTest_ = null;
			_eventsCollectionViaDisqualifiedTest = null;
			_eventsCollectionViaCustomEventNotification = null;
			_eventsCollectionViaCallQueueCustomer__ = null;
			_eventsCollectionViaCustomerClinicalQuestionAnswer = null;
			_eventsCollectionViaCustomerClinicalQuestionAnswer_ = null;
			_eventsCollectionViaEventAppointmentChangeLog = null;
			_eventsCollectionViaEventAppointmentChangeLog_ = null;
			_eventsCollectionViaCallQueueCustomer_ = null;
			_eventsCollectionViaHostPayment = null;
			_eventsCollectionViaEventStaffAssignment = null;
			_eventsCollectionViaEventAppointmentCancellationLog = null;
			_eventTypeCollectionViaEvents = null;
			_eventTypeCollectionViaEvents____ = null;
			_eventTypeCollectionViaEvents___ = null;
			_eventTypeCollectionViaEvents_ = null;
			_eventTypeCollectionViaEvents__ = null;
			_exitInterviewQuestionCollectionViaExitInterviewAnswer_ = null;
			_exitInterviewQuestionCollectionViaExitInterviewAnswer = null;
			_exportableReportsCollectionViaExportableReportsQueue = null;
			_fileCollectionViaCustomerActivityTypeUpload_ = null;
			_fileCollectionViaCorporateUpload = null;
			_fileCollectionViaStaffEventScheduleUpload = null;
			_fileCollectionViaCorporateUpload_ = null;
			_fileCollectionViaPhysicianRecordRequestSignature = null;
			_fileCollectionViaCustomerActivityTypeUpload = null;
			_fileCollectionViaRapsUpload_ = null;
			_fileCollectionViaCallUpload_ = null;
			_fileCollectionViaChaperoneSignature_ = null;
			_fileCollectionViaRapsUpload = null;
			_fileCollectionViaChaperoneSignature = null;
			_fileCollectionViaCorporateUpload__ = null;
			_fileCollectionViaCallUpload = null;
			_fileCollectionViaHealthPlanCriteriaAssignmentUpload = null;
			_fileCollectionViaParticipationConsentSignature_ = null;
			_fileCollectionViaMergeCustomerUpload = null;
			_fileCollectionViaMedicationUpload_ = null;
			_fileCollectionViaMedicationUpload = null;
			_fileCollectionViaFluConsentSignature_ = null;
			_fileCollectionViaFluConsentSignature = null;
			_fileCollectionViaMergeCustomerUpload_ = null;
			_fileCollectionViaExitInterviewSignature = null;
			_fileCollectionViaEventCustomerGiftCard_ = null;
			_fileCollectionViaEventCustomerGiftCard = null;
			_fileCollectionViaEligibilityUpload = null;
			_fileCollectionViaEligibilityUpload_ = null;
			_fileCollectionViaExportableReportsQueue = null;
			_fileCollectionViaSuspectConditionUpload = null;
			_fileCollectionViaStaffEventScheduleUpload_ = null;
			_fileCollectionViaParticipationConsentSignature = null;
			_fileCollectionViaCustomerPhoneNumberUpdateUpload_ = null;
			_fileCollectionViaCustomerPhoneNumberUpdateUpload = null;
			_fileCollectionViaSuspectConditionUpload_ = null;
			_fluConsentQuestionCollectionViaFluConsentAnswer = null;
			_fluConsentQuestionCollectionViaFluConsentAnswer_ = null;
			_gcNotGivenReasonCollectionViaEventCustomers = null;
			_gcNotGivenReasonCollectionViaEventCustomers_ = null;
			_hafTemplateCollectionViaClinicalTestQualificationCriteria = null;
			_hafTemplateCollectionViaEvents___ = null;
			_hafTemplateCollectionViaEvents = null;
			_hafTemplateCollectionViaEvents____ = null;
			_hafTemplateCollectionViaEvents_ = null;
			_hafTemplateCollectionViaCustomerClinicalQuestionAnswer = null;
			_hafTemplateCollectionViaEvents__ = null;
			_hafTemplateCollectionViaCustomerClinicalQuestionAnswer_ = null;
			_hafTemplateCollectionViaClinicalTestQualificationCriteria_ = null;
			_hcpcsCodeCollectionViaTestHcpcsCode_ = null;
			_hcpcsCodeCollectionViaTestHcpcsCode = null;
			_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload = null;
			_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment = null;
			_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_ = null;
			_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment = null;
			_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__ = null;
			_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_ = null;
			_hospitalFacilityCollectionViaEventCustomers = null;
			_hospitalFacilityCollectionViaEventCustomers_ = null;
			_hostPaymentCollectionViaHostPaymentTransaction = null;
			_icdCodesCollectionViaCustomerIcdCode = null;
			_insuranceCompanyCollectionViaEligibility = null;
			_languageCollectionViaHealthPlanCallQueueCriteria = null;
			_languageCollectionViaCallQueueCustomer_ = null;
			_languageCollectionViaCallQueueCustomer__ = null;
			_languageCollectionViaCallQueueCustomer = null;
			_languageCollectionViaHealthPlanCallQueueCriteria_ = null;
			_lookupCollectionViaUncontactedCustomerCallQueue = null;
			_lookupCollectionViaFillEventCallQueue = null;
			_lookupCollectionViaTestPerformedExternally_ = null;
			_lookupCollectionViaLanguageBarrierCallQueue = null;
			_lookupCollectionViaMedicationUpload = null;
			_lookupCollectionViaHostFacilityRanking = null;
			_lookupCollectionViaHostFacilityRanking_ = null;
			_lookupCollectionViaMailRoundCallQueue = null;
			_lookupCollectionViaHostPaymentTransaction_ = null;
			_lookupCollectionViaHostPayment = null;
			_lookupCollectionViaHostPaymentTransaction = null;
			_lookupCollectionViaHostPayment_ = null;
			_lookupCollectionViaKynLabValues = null;
			_lookupCollectionViaExportableReportsQueue = null;
			_lookupCollectionViaFile = null;
			_lookupCollectionViaTestPerformedExternally = null;
			_lookupCollectionViaKynLabValues_ = null;
			_lookupCollectionViaPreQualificationQuestion = null;
			_lookupCollectionViaPrintOrderItemTracking__ = null;
			_lookupCollectionViaPcpDisposition_ = null;
			_lookupCollectionViaPcpAppointment_ = null;
			_lookupCollectionViaPcpDisposition = null;
			_lookupCollectionViaRefundRequest = null;
			_lookupCollectionViaRapsUpload = null;
			_lookupCollectionViaRefundRequest_ = null;
			_lookupCollectionViaPrintOrderItemTracking___ = null;
			_lookupCollectionViaProspectCustomer = null;
			_lookupCollectionViaPcpAppointment = null;
			_lookupCollectionViaHafTemplate = null;
			_lookupCollectionViaHafTemplate_ = null;
			_lookupCollectionViaSuspectConditionUpload = null;
			_lookupCollectionViaMergeCustomerUpload = null;
			_lookupCollectionViaNoShowCallQueue = null;
			_lookupCollectionViaStaffEventScheduleUpload = null;
			_lookupCollectionViaHealthPlanRevenue = null;
			_lookupCollectionViaHealthPlanRevenue_ = null;
			_lookupCollectionViaHafTemplate__ = null;
			_lookupCollectionViaHafTemplate___ = null;
			_lookupCollectionViaCustomerProfileHistory___ = null;
			_lookupCollectionViaCustomerProfileHistory__ = null;
			_lookupCollectionViaCustomerProfileHistory = null;
			_lookupCollectionViaCustomEventNotification = null;
			_lookupCollectionViaCustomerRegistrationNotes = null;
			_lookupCollectionViaCustomerProfileHistory_ = null;
			_lookupCollectionViaCustomerPrimaryCarePhysician__ = null;
			_lookupCollectionViaCustomerEventTestState__ = null;
			_lookupCollectionViaCustomerEventTestState_ = null;
			_lookupCollectionViaCustomerEventTestState = null;
			_lookupCollectionViaCustomerPrimaryCarePhysician_ = null;
			_lookupCollectionViaCustomerPrimaryCarePhysician = null;
			_lookupCollectionViaCustomerPhoneNumberUpdateUpload = null;
			_lookupCollectionViaEligibilityUpload = null;
			_lookupCollectionViaEventCustomerResult__ = null;
			_lookupCollectionViaEventCustomerResult______ = null;
			_lookupCollectionViaEventCustomerResult_____ = null;
			_lookupCollectionViaEventCustomerResult_ = null;
			_lookupCollectionViaEventCustomerResult____ = null;
			_lookupCollectionViaEventCustomerResult___ = null;
			_lookupCollectionViaEventCustomerResult________ = null;
			_lookupCollectionViaEventAppointmentCancellationLog = null;
			_lookupCollectionViaEmailTemplate_ = null;
			_lookupCollectionViaEmailTemplate = null;
			_lookupCollectionViaEventCustomerResult_______ = null;
			_lookupCollectionViaEventCustomerResult = null;
			_lookupCollectionViaEventAppointmentChangeLog = null;
			_lookupCollectionViaCustomerActivityTypeUpload = null;
			_lookupCollectionViaCalls = null;
			_lookupCollectionViaCalls_ = null;
			_lookupCollectionViaCallRoundCallQueue = null;
			_lookupCollectionViaCampaign = null;
			_lookupCollectionViaCallUpload = null;
			_lookupCollectionViaCalls__ = null;
			_lookupCollectionViaCallQueueCustomer__ = null;
			_lookupCollectionViaCallCenterTeam = null;
			_lookupCollectionViaAccountHraChatQuestionnaire_ = null;
			_lookupCollectionViaAccountHraChatQuestionnaire = null;
			_lookupCollectionViaCallQueueCustomer_ = null;
			_lookupCollectionViaCallQueueCustomer = null;
			_lookupCollectionViaCallCenterTeam_ = null;
			_lookupCollectionViaCampaign_ = null;
			_lookupCollectionViaClinicalTestQualificationCriteria_ = null;
			_lookupCollectionViaClinicalTestQualificationCriteria = null;
			_lookupCollectionViaCheckListTemplate_ = null;
			_lookupCollectionViaCorporateUpload = null;
			_lookupCollectionViaClinicalTestQualificationCriteria___ = null;
			_lookupCollectionViaClinicalTestQualificationCriteria__ = null;
			_lookupCollectionViaCheckListTemplate = null;
			_lookupCollectionViaCampaignActivity = null;
			_lookupCollectionViaCampaign___ = null;
			_lookupCollectionViaCampaign__ = null;
			_lookupCollectionViaCheckListAnswer_ = null;
			_lookupCollectionViaCheckListAnswer = null;
			_lookupCollectionViaCampaignActivity_ = null;
			_lookupCollectionViaEvents________ = null;
			_lookupCollectionViaEvents______________ = null;
			_lookupCollectionViaEvents_________ = null;
			_lookupCollectionViaEvents_____________ = null;
			_lookupCollectionViaEvents___________________ = null;
			_lookupCollectionViaEvents__________________ = null;
			_lookupCollectionViaEvents_______________ = null;
			_lookupCollectionViaEvents_______________________ = null;
			_lookupCollectionViaEvents____________ = null;
			_lookupCollectionViaEvents____ = null;
			_lookupCollectionViaEvents________________ = null;
			_lookupCollectionViaEvents_______ = null;
			_lookupCollectionViaEvents_____ = null;
			_lookupCollectionViaEvents__________ = null;
			_lookupCollectionViaEvents_________________ = null;
			_lookupCollectionViaEvents___________ = null;
			_lookupCollectionViaEvents______________________ = null;
			_lookupCollectionViaEvents = null;
			_lookupCollectionViaEvents______ = null;
			_lookupCollectionViaEvents__ = null;
			_lookupCollectionViaEventCustomers___ = null;
			_lookupCollectionViaEventCustomers = null;
			_lookupCollectionViaEventCustomers_ = null;
			_lookupCollectionViaEventCustomers__ = null;
			_lookupCollectionViaEvents___ = null;
			_lookupCollectionViaEvents________________________ = null;
			_lookupCollectionViaEvents____________________ = null;
			_lookupCollectionViaEvents_____________________ = null;
			_lookupCollectionViaEvents_ = null;
			_marketingPrintOrderItemCollectionViaPrintOrderItemTracking = null;
			_marketingPrintOrderItemCollectionViaPrintOrderItemTracking_ = null;
			_medicareQuestionCollectionViaCustomerMedicareQuestionAnswer = null;
			_ndcCollectionViaCurrentMedication = null;
			_notesDetailsCollectionViaPriorityInQueue = null;
			_notesDetailsCollectionViaPriorityInQueue_ = null;
			_notesDetailsCollectionViaCallQueueCustomer_ = null;
			_notesDetailsCollectionViaEvents = null;
			_notesDetailsCollectionViaCallQueueCustomer__ = null;
			_notesDetailsCollectionViaEvents_ = null;
			_notesDetailsCollectionViaEvents___ = null;
			_notesDetailsCollectionViaCallQueueCustomer = null;
			_notesDetailsCollectionViaEvents____ = null;
			_notesDetailsCollectionViaEvents__ = null;
			_notificationMediumCollectionViaNotificationType = null;
			_notificationMediumCollectionViaNotification = null;
			_notificationTypeCollectionViaEventCustomerTestNotPerformedNotification = null;
			_notificationTypeCollectionViaEmailTemplate = null;
			_notificationTypeCollectionViaNotification = null;
			_orderCollectionViaRefundRequest_ = null;
			_orderCollectionViaRefundRequest = null;
			_organizationCollectionViaAccountTestHcpcsCode_ = null;
			_organizationCollectionViaAccountTestHcpcsCode = null;
			_organizationCollectionViaAccountCallCenterOrganization = null;
			_organizationCollectionViaAccountCallCenterOrganization_ = null;
			_organizationCollectionViaEventAccountTestHcpcsCode_ = null;
			_organizationCollectionViaEventAccountTestHcpcsCode = null;
			_organizationCollectionViaMarketingPrintOrder = null;
			_organizationCollectionViaMarketingPrintOrder_ = null;
			_organizationCollectionViaAffiliateProfile = null;
			_packageCollectionViaPreApprovedPackage = null;
			_physicianMasterCollectionViaCustomerPrimaryCarePhysician = null;
			_physicianMasterCollectionViaCustomerPrimaryCarePhysician_ = null;
			_physicianMasterCollectionViaCustomerPrimaryCarePhysician__ = null;
			_podDetailsCollectionViaSalesRepPodAssigments = null;
			_podDetailsCollectionViaEventStaffAssignment = null;
			_podDetailsCollectionViaEventNote_ = null;
			_podDetailsCollectionViaEventNote = null;
			_podDetailsCollectionViaPodDefaultTeam = null;
			_podDetailsCollectionViaEventStaffAssignment_ = null;
			_podDetailsCollectionViaEventStaffAssignment__ = null;
			_preQualificationQuestionCollectionViaEventCustomerQuestionAnswer_ = null;
			_preQualificationQuestionCollectionViaDisqualifiedTest = null;
			_preQualificationQuestionCollectionViaDisqualifiedTest_ = null;
			_preQualificationQuestionCollectionViaEventCustomerQuestionAnswer = null;
			_prospectCustomerCollectionViaCallQueueCustomer_ = null;
			_prospectCustomerCollectionViaCallQueueCustomer = null;
			_prospectCustomerCollectionViaCallQueueCustomer__ = null;
			_prospectListDetailsCollectionViaProspects = null;
			_prospectsCollectionViaHostFacilityRanking = null;
			_prospectsCollectionViaHostPayment = null;
			_prospectTypeCollectionViaProspects = null;
			_refundRequestCollectionViaEventAppointmentCancellationLog = null;
			_relationshipCollectionViaGuardianDetails_ = null;
			_relationshipCollectionViaGuardianDetails = null;
			_rescheduleCancelDispositionCollectionViaEventAppointmentChangeLog = null;
			_rescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog = null;
			_roleCollectionViaUser = null;
			_roleCollectionViaHostFacilityRanking = null;
			_roleCollectionViaUser_ = null;
			_scheduleMethodCollectionViaEvents___ = null;
			_scheduleMethodCollectionViaEvents____ = null;
			_scheduleMethodCollectionViaEvents = null;
			_scheduleMethodCollectionViaEvents_ = null;
			_scheduleMethodCollectionViaEvents__ = null;
			_scriptsCollectionViaCallQueue = null;
			_scriptsCollectionViaCallQueue_ = null;
			_shippingOptionCollectionViaShippingDetail_ = null;
			_shippingOptionCollectionViaShippingDetail = null;
			_staffEventRoleCollectionViaEventStaffAssignment__ = null;
			_staffEventRoleCollectionViaPodDefaultTeam = null;
			_staffEventRoleCollectionViaEventStaffAssignment = null;
			_staffEventRoleCollectionViaEventStaffAssignment_ = null;
			_standardFindingTestReadingCollectionViaCustomerEventReading = null;
			_stateCollectionViaAddress = null;
			_surveyQuestionCollectionViaSurveyAnswer_ = null;
			_surveyQuestionCollectionViaSurveyAnswer = null;
			_tagCollectionViaPreAssessmentCustomerCallQueueCallAttempt = null;
			_tagCollectionViaCustomerCallQueueCallAttempt = null;
			_taskPriorityTypesCollectionViaTaskDetails__ = null;
			_taskPriorityTypesCollectionViaTaskDetails_ = null;
			_taskPriorityTypesCollectionViaTaskDetails = null;
			_taskStatusTypesCollectionViaTaskDetails_ = null;
			_taskStatusTypesCollectionViaTaskDetails__ = null;
			_taskStatusTypesCollectionViaTaskDetails = null;
			_technicianProfileCollectionViaPinChangelog = null;
			_territoryCollectionViaTerritory = null;
			_territoryCollectionViaOrganizationRoleUserTerritory = null;
			_testCollectionViaEventCustomerTestNotPerformedNotification = null;
			_testCollectionViaEventPhysicianTest = null;
			_testCollectionViaDisqualifiedTest_ = null;
			_testCollectionViaEventCustomerRetest = null;
			_testCollectionViaEventPhysicianTest_ = null;
			_testCollectionViaKynLabValues_ = null;
			_testCollectionViaEventPhysicianTest__ = null;
			_testCollectionViaTestHcpcsCode_ = null;
			_testCollectionViaTestHcpcsCode = null;
			_testCollectionViaKynLabValues = null;
			_testCollectionViaPreApprovedTest = null;
			_testCollectionViaClinicalTestQualificationCriteria = null;
			_testCollectionViaRequiredTest = null;
			_testCollectionViaClinicalTestQualificationCriteria_ = null;
			_testCollectionViaDisqualifiedTest = null;
			_testCollectionViaPreQualificationTestTemplate = null;
			_testCollectionViaPreQualificationTestTemplate_ = null;
			_testCollectionViaPreQualificationQuestion = null;
			_testHcpcsCodeCollectionViaEventAccountTestHcpcsCode_ = null;
			_testHcpcsCodeCollectionViaEventAccountTestHcpcsCode = null;
			_testHcpcsCodeCollectionViaAccountTestHcpcsCode_ = null;
			_testHcpcsCodeCollectionViaAccountTestHcpcsCode = null;
			_testNotPerformedReasonCollectionViaTestNotPerformed_ = null;
			_testNotPerformedReasonCollectionViaTestNotPerformed = null;
			_testReadingCollectionViaCustomerEventReading = null;
			_testUnableScreenReasonCollectionViaCustomerEventUnableScreenReason = null;
			_userLoginCollectionViaPasswordChangelog = null;
			_zipCollectionViaAddress = null;
			_organization = null;
			_role = null;
			_user = null;
			_accountCoordinatorProfile = null;
			_affiliateProfile_ = null;
			_callCenterRepProfile = null;
			_customerProfile = null;
			_physicianProfile = null;
			_technicianProfile = null;
			PerformDependencyInjection();
			
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
			OnInitClassMembersComplete();
		}

		#region Custom Property Hashtable Setup
		/// <summary> Initializes the hashtables for the entity type and entity field custom properties. </summary>
		private static void SetupCustomPropertyHashtables()
		{
			_customProperties = new Dictionary<string, string>();
			_fieldsCustomProperties = new Dictionary<string, Dictionary<string, string>>();

			Dictionary<string, string> fieldHashtable = null;
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("OrganizationRoleUserId", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("UserId", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("RoleId", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("IsActive", fieldHashtable);
			fieldHashtable = new Dictionary<string, string>();

			_fieldsCustomProperties.Add("OrganizationId", fieldHashtable);
		}
		#endregion

		/// <summary> Removes the sync logic for member _organization</summary>
		/// <param name="signalRelatedEntity">If set to true, it will call the related entity's UnsetRelatedEntity method</param>
		/// <param name="resetFKFields">if set to true it will also reset the FK fields pointing to the related entity</param>
		private void DesetupSyncOrganization(bool signalRelatedEntity, bool resetFKFields)
		{
			base.PerformDesetupSyncRelatedEntity( _organization, new PropertyChangedEventHandler( OnOrganizationPropertyChanged ), "Organization", OrganizationRoleUserEntity.Relations.OrganizationEntityUsingOrganizationId, true, signalRelatedEntity, "OrganizationRoleUser", resetFKFields, new int[] { (int)OrganizationRoleUserFieldIndex.OrganizationId } );		
			_organization = null;
		}

		/// <summary> setups the sync logic for member _organization</summary>
		/// <param name="relatedEntity">Instance to set as the related entity of type entityType</param>
		private void SetupSyncOrganization(IEntity2 relatedEntity)
		{
			if(_organization!=relatedEntity)
			{
				DesetupSyncOrganization(true, true);
				_organization = (OrganizationEntity)relatedEntity;
				base.PerformSetupSyncRelatedEntity( _organization, new PropertyChangedEventHandler( OnOrganizationPropertyChanged ), "Organization", OrganizationRoleUserEntity.Relations.OrganizationEntityUsingOrganizationId, true, new string[] {  } );
			}
		}
		
		/// <summary>Handles property change events of properties in a related entity.</summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void OnOrganizationPropertyChanged( object sender, PropertyChangedEventArgs e )
		{
			switch( e.PropertyName )
			{
				default:
					break;
			}
		}

		/// <summary> Removes the sync logic for member _role</summary>
		/// <param name="signalRelatedEntity">If set to true, it will call the related entity's UnsetRelatedEntity method</param>
		/// <param name="resetFKFields">if set to true it will also reset the FK fields pointing to the related entity</param>
		private void DesetupSyncRole(bool signalRelatedEntity, bool resetFKFields)
		{
			base.PerformDesetupSyncRelatedEntity( _role, new PropertyChangedEventHandler( OnRolePropertyChanged ), "Role", OrganizationRoleUserEntity.Relations.RoleEntityUsingRoleId, true, signalRelatedEntity, "OrganizationRoleUser", resetFKFields, new int[] { (int)OrganizationRoleUserFieldIndex.RoleId } );		
			_role = null;
		}

		/// <summary> setups the sync logic for member _role</summary>
		/// <param name="relatedEntity">Instance to set as the related entity of type entityType</param>
		private void SetupSyncRole(IEntity2 relatedEntity)
		{
			if(_role!=relatedEntity)
			{
				DesetupSyncRole(true, true);
				_role = (RoleEntity)relatedEntity;
				base.PerformSetupSyncRelatedEntity( _role, new PropertyChangedEventHandler( OnRolePropertyChanged ), "Role", OrganizationRoleUserEntity.Relations.RoleEntityUsingRoleId, true, new string[] {  } );
			}
		}
		
		/// <summary>Handles property change events of properties in a related entity.</summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void OnRolePropertyChanged( object sender, PropertyChangedEventArgs e )
		{
			switch( e.PropertyName )
			{
				default:
					break;
			}
		}

		/// <summary> Removes the sync logic for member _user</summary>
		/// <param name="signalRelatedEntity">If set to true, it will call the related entity's UnsetRelatedEntity method</param>
		/// <param name="resetFKFields">if set to true it will also reset the FK fields pointing to the related entity</param>
		private void DesetupSyncUser(bool signalRelatedEntity, bool resetFKFields)
		{
			base.PerformDesetupSyncRelatedEntity( _user, new PropertyChangedEventHandler( OnUserPropertyChanged ), "User", OrganizationRoleUserEntity.Relations.UserEntityUsingUserId, true, signalRelatedEntity, "OrganizationRoleUser", resetFKFields, new int[] { (int)OrganizationRoleUserFieldIndex.UserId } );		
			_user = null;
		}

		/// <summary> setups the sync logic for member _user</summary>
		/// <param name="relatedEntity">Instance to set as the related entity of type entityType</param>
		private void SetupSyncUser(IEntity2 relatedEntity)
		{
			if(_user!=relatedEntity)
			{
				DesetupSyncUser(true, true);
				_user = (UserEntity)relatedEntity;
				base.PerformSetupSyncRelatedEntity( _user, new PropertyChangedEventHandler( OnUserPropertyChanged ), "User", OrganizationRoleUserEntity.Relations.UserEntityUsingUserId, true, new string[] {  } );
			}
		}
		
		/// <summary>Handles property change events of properties in a related entity.</summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void OnUserPropertyChanged( object sender, PropertyChangedEventArgs e )
		{
			switch( e.PropertyName )
			{
				default:
					break;
			}
		}

		/// <summary> Removes the sync logic for member _accountCoordinatorProfile</summary>
		/// <param name="signalRelatedEntity">If set to true, it will call the related entity's UnsetRelatedEntity method</param>
		/// <param name="resetFKFields">if set to true it will also reset the FK fields pointing to the related entity</param>
		private void DesetupSyncAccountCoordinatorProfile(bool signalRelatedEntity, bool resetFKFields)
		{
			base.PerformDesetupSyncRelatedEntity( _accountCoordinatorProfile, new PropertyChangedEventHandler( OnAccountCoordinatorProfilePropertyChanged ), "AccountCoordinatorProfile", OrganizationRoleUserEntity.Relations.AccountCoordinatorProfileEntityUsingOrganizationRoleUserId, false, signalRelatedEntity, "OrganizationRoleUser", false, new int[] { (int)OrganizationRoleUserFieldIndex.OrganizationRoleUserId } );
			_accountCoordinatorProfile = null;
		}
		
		/// <summary> setups the sync logic for member _accountCoordinatorProfile</summary>
		/// <param name="relatedEntity">Instance to set as the related entity of type entityType</param>
		private void SetupSyncAccountCoordinatorProfile(IEntity2 relatedEntity)
		{
			if(_accountCoordinatorProfile!=relatedEntity)
			{
				DesetupSyncAccountCoordinatorProfile(true, true);
				_accountCoordinatorProfile = (AccountCoordinatorProfileEntity)relatedEntity;
				base.PerformSetupSyncRelatedEntity( _accountCoordinatorProfile, new PropertyChangedEventHandler( OnAccountCoordinatorProfilePropertyChanged ), "AccountCoordinatorProfile", OrganizationRoleUserEntity.Relations.AccountCoordinatorProfileEntityUsingOrganizationRoleUserId, false, new string[] {  } );
			}
		}
		
		/// <summary>Handles property change events of properties in a related entity.</summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void OnAccountCoordinatorProfilePropertyChanged( object sender, PropertyChangedEventArgs e )
		{
			switch( e.PropertyName )
			{
				default:
					break;
			}
		}

		/// <summary> Removes the sync logic for member _affiliateProfile_</summary>
		/// <param name="signalRelatedEntity">If set to true, it will call the related entity's UnsetRelatedEntity method</param>
		/// <param name="resetFKFields">if set to true it will also reset the FK fields pointing to the related entity</param>
		private void DesetupSyncAffiliateProfile_(bool signalRelatedEntity, bool resetFKFields)
		{
			base.PerformDesetupSyncRelatedEntity( _affiliateProfile_, new PropertyChangedEventHandler( OnAffiliateProfile_PropertyChanged ), "AffiliateProfile_", OrganizationRoleUserEntity.Relations.AffiliateProfileEntityUsingAffiliateId, false, signalRelatedEntity, "OrganizationRoleUser_", false, new int[] { (int)OrganizationRoleUserFieldIndex.OrganizationRoleUserId } );
			_affiliateProfile_ = null;
		}
		
		/// <summary> setups the sync logic for member _affiliateProfile_</summary>
		/// <param name="relatedEntity">Instance to set as the related entity of type entityType</param>
		private void SetupSyncAffiliateProfile_(IEntity2 relatedEntity)
		{
			if(_affiliateProfile_!=relatedEntity)
			{
				DesetupSyncAffiliateProfile_(true, true);
				_affiliateProfile_ = (AffiliateProfileEntity)relatedEntity;
				base.PerformSetupSyncRelatedEntity( _affiliateProfile_, new PropertyChangedEventHandler( OnAffiliateProfile_PropertyChanged ), "AffiliateProfile_", OrganizationRoleUserEntity.Relations.AffiliateProfileEntityUsingAffiliateId, false, new string[] {  } );
			}
		}
		
		/// <summary>Handles property change events of properties in a related entity.</summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void OnAffiliateProfile_PropertyChanged( object sender, PropertyChangedEventArgs e )
		{
			switch( e.PropertyName )
			{
				default:
					break;
			}
		}

		/// <summary> Removes the sync logic for member _callCenterRepProfile</summary>
		/// <param name="signalRelatedEntity">If set to true, it will call the related entity's UnsetRelatedEntity method</param>
		/// <param name="resetFKFields">if set to true it will also reset the FK fields pointing to the related entity</param>
		private void DesetupSyncCallCenterRepProfile(bool signalRelatedEntity, bool resetFKFields)
		{
			base.PerformDesetupSyncRelatedEntity( _callCenterRepProfile, new PropertyChangedEventHandler( OnCallCenterRepProfilePropertyChanged ), "CallCenterRepProfile", OrganizationRoleUserEntity.Relations.CallCenterRepProfileEntityUsingCallCenterRepId, false, signalRelatedEntity, "OrganizationRoleUser", false, new int[] { (int)OrganizationRoleUserFieldIndex.OrganizationRoleUserId } );
			_callCenterRepProfile = null;
		}
		
		/// <summary> setups the sync logic for member _callCenterRepProfile</summary>
		/// <param name="relatedEntity">Instance to set as the related entity of type entityType</param>
		private void SetupSyncCallCenterRepProfile(IEntity2 relatedEntity)
		{
			if(_callCenterRepProfile!=relatedEntity)
			{
				DesetupSyncCallCenterRepProfile(true, true);
				_callCenterRepProfile = (CallCenterRepProfileEntity)relatedEntity;
				base.PerformSetupSyncRelatedEntity( _callCenterRepProfile, new PropertyChangedEventHandler( OnCallCenterRepProfilePropertyChanged ), "CallCenterRepProfile", OrganizationRoleUserEntity.Relations.CallCenterRepProfileEntityUsingCallCenterRepId, false, new string[] {  } );
			}
		}
		
		/// <summary>Handles property change events of properties in a related entity.</summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void OnCallCenterRepProfilePropertyChanged( object sender, PropertyChangedEventArgs e )
		{
			switch( e.PropertyName )
			{
				default:
					break;
			}
		}

		/// <summary> Removes the sync logic for member _customerProfile</summary>
		/// <param name="signalRelatedEntity">If set to true, it will call the related entity's UnsetRelatedEntity method</param>
		/// <param name="resetFKFields">if set to true it will also reset the FK fields pointing to the related entity</param>
		private void DesetupSyncCustomerProfile(bool signalRelatedEntity, bool resetFKFields)
		{
			base.PerformDesetupSyncRelatedEntity( _customerProfile, new PropertyChangedEventHandler( OnCustomerProfilePropertyChanged ), "CustomerProfile", OrganizationRoleUserEntity.Relations.CustomerProfileEntityUsingCustomerId, false, signalRelatedEntity, "OrganizationRoleUser", false, new int[] { (int)OrganizationRoleUserFieldIndex.OrganizationRoleUserId } );
			_customerProfile = null;
		}
		
		/// <summary> setups the sync logic for member _customerProfile</summary>
		/// <param name="relatedEntity">Instance to set as the related entity of type entityType</param>
		private void SetupSyncCustomerProfile(IEntity2 relatedEntity)
		{
			if(_customerProfile!=relatedEntity)
			{
				DesetupSyncCustomerProfile(true, true);
				_customerProfile = (CustomerProfileEntity)relatedEntity;
				base.PerformSetupSyncRelatedEntity( _customerProfile, new PropertyChangedEventHandler( OnCustomerProfilePropertyChanged ), "CustomerProfile", OrganizationRoleUserEntity.Relations.CustomerProfileEntityUsingCustomerId, false, new string[] {  } );
			}
		}
		
		/// <summary>Handles property change events of properties in a related entity.</summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void OnCustomerProfilePropertyChanged( object sender, PropertyChangedEventArgs e )
		{
			switch( e.PropertyName )
			{
				default:
					break;
			}
		}

		/// <summary> Removes the sync logic for member _physicianProfile</summary>
		/// <param name="signalRelatedEntity">If set to true, it will call the related entity's UnsetRelatedEntity method</param>
		/// <param name="resetFKFields">if set to true it will also reset the FK fields pointing to the related entity</param>
		private void DesetupSyncPhysicianProfile(bool signalRelatedEntity, bool resetFKFields)
		{
			base.PerformDesetupSyncRelatedEntity( _physicianProfile, new PropertyChangedEventHandler( OnPhysicianProfilePropertyChanged ), "PhysicianProfile", OrganizationRoleUserEntity.Relations.PhysicianProfileEntityUsingPhysicianId, false, signalRelatedEntity, "OrganizationRoleUser", false, new int[] { (int)OrganizationRoleUserFieldIndex.OrganizationRoleUserId } );
			_physicianProfile = null;
		}
		
		/// <summary> setups the sync logic for member _physicianProfile</summary>
		/// <param name="relatedEntity">Instance to set as the related entity of type entityType</param>
		private void SetupSyncPhysicianProfile(IEntity2 relatedEntity)
		{
			if(_physicianProfile!=relatedEntity)
			{
				DesetupSyncPhysicianProfile(true, true);
				_physicianProfile = (PhysicianProfileEntity)relatedEntity;
				base.PerformSetupSyncRelatedEntity( _physicianProfile, new PropertyChangedEventHandler( OnPhysicianProfilePropertyChanged ), "PhysicianProfile", OrganizationRoleUserEntity.Relations.PhysicianProfileEntityUsingPhysicianId, false, new string[] {  } );
			}
		}
		
		/// <summary>Handles property change events of properties in a related entity.</summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void OnPhysicianProfilePropertyChanged( object sender, PropertyChangedEventArgs e )
		{
			switch( e.PropertyName )
			{
				default:
					break;
			}
		}

		/// <summary> Removes the sync logic for member _technicianProfile</summary>
		/// <param name="signalRelatedEntity">If set to true, it will call the related entity's UnsetRelatedEntity method</param>
		/// <param name="resetFKFields">if set to true it will also reset the FK fields pointing to the related entity</param>
		private void DesetupSyncTechnicianProfile(bool signalRelatedEntity, bool resetFKFields)
		{
			base.PerformDesetupSyncRelatedEntity( _technicianProfile, new PropertyChangedEventHandler( OnTechnicianProfilePropertyChanged ), "TechnicianProfile", OrganizationRoleUserEntity.Relations.TechnicianProfileEntityUsingOrganizationRoleUserId, false, signalRelatedEntity, "OrganizationRoleUser", false, new int[] { (int)OrganizationRoleUserFieldIndex.OrganizationRoleUserId } );
			_technicianProfile = null;
		}
		
		/// <summary> setups the sync logic for member _technicianProfile</summary>
		/// <param name="relatedEntity">Instance to set as the related entity of type entityType</param>
		private void SetupSyncTechnicianProfile(IEntity2 relatedEntity)
		{
			if(_technicianProfile!=relatedEntity)
			{
				DesetupSyncTechnicianProfile(true, true);
				_technicianProfile = (TechnicianProfileEntity)relatedEntity;
				base.PerformSetupSyncRelatedEntity( _technicianProfile, new PropertyChangedEventHandler( OnTechnicianProfilePropertyChanged ), "TechnicianProfile", OrganizationRoleUserEntity.Relations.TechnicianProfileEntityUsingOrganizationRoleUserId, false, new string[] {  } );
			}
		}
		
		/// <summary>Handles property change events of properties in a related entity.</summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void OnTechnicianProfilePropertyChanged( object sender, PropertyChangedEventArgs e )
		{
			switch( e.PropertyName )
			{
				default:
					break;
			}
		}

		/// <summary> Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this OrganizationRoleUserEntity</param>
		/// <param name="fields">Fields of this entity</param>
		protected virtual void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			base.Fields = fields;
			base.IsNew=true;
			base.Validator = validator;
			InitClassMembers();

			
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitialized();
		}

		#region Class Property Declarations
		/// <summary> The relations object holding all relations of this entity with other entity classes.</summary>
		public  static OrganizationRoleUserRelations Relations
		{
			get	{ return new OrganizationRoleUserRelations(); }
		}
		
		/// <summary> The custom properties for this entity type.</summary>
		/// <remarks>The data returned from this property should be considered read-only: it is not thread safe to alter this data at runtime.</remarks>
		public  static Dictionary<string, string> CustomProperties
		{
			get { return _customProperties;}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'AccountCallCenterOrganization' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCallCenterOrganization_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<AccountCallCenterOrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountCallCenterOrganizationEntityFactory))),
					(IEntityRelation)GetRelationsForField("AccountCallCenterOrganization_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountCallCenterOrganizationEntity, 0, null, null, null, null, "AccountCallCenterOrganization_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'AccountCallCenterOrganization' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCallCenterOrganization
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<AccountCallCenterOrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountCallCenterOrganizationEntityFactory))),
					(IEntityRelation)GetRelationsForField("AccountCallCenterOrganization")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountCallCenterOrganizationEntity, 0, null, null, null, null, "AccountCallCenterOrganization", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'AccountHraChatQuestionnaire' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountHraChatQuestionnaire_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<AccountHraChatQuestionnaireEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountHraChatQuestionnaireEntityFactory))),
					(IEntityRelation)GetRelationsForField("AccountHraChatQuestionnaire_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountHraChatQuestionnaireEntity, 0, null, null, null, null, "AccountHraChatQuestionnaire_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'AccountHraChatQuestionnaire' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountHraChatQuestionnaire
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<AccountHraChatQuestionnaireEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountHraChatQuestionnaireEntityFactory))),
					(IEntityRelation)GetRelationsForField("AccountHraChatQuestionnaire")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountHraChatQuestionnaireEntity, 0, null, null, null, null, "AccountHraChatQuestionnaire", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'AccountTestHcpcsCode' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountTestHcpcsCode_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<AccountTestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountTestHcpcsCodeEntityFactory))),
					(IEntityRelation)GetRelationsForField("AccountTestHcpcsCode_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountTestHcpcsCodeEntity, 0, null, null, null, null, "AccountTestHcpcsCode_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'AccountTestHcpcsCode' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountTestHcpcsCode
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<AccountTestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountTestHcpcsCodeEntityFactory))),
					(IEntityRelation)GetRelationsForField("AccountTestHcpcsCode")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountTestHcpcsCodeEntity, 0, null, null, null, null, "AccountTestHcpcsCode", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ActivityType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathActivityType
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ActivityTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ActivityTypeEntityFactory))),
					(IEntityRelation)GetRelationsForField("ActivityType")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ActivityTypeEntity, 0, null, null, null, null, "ActivityType", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'AdditionalFields' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAdditionalFields_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<AdditionalFieldsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AdditionalFieldsEntityFactory))),
					(IEntityRelation)GetRelationsForField("AdditionalFields_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AdditionalFieldsEntity, 0, null, null, null, null, "AdditionalFields_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'AdditionalFields' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAdditionalFields
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<AdditionalFieldsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AdditionalFieldsEntityFactory))),
					(IEntityRelation)GetRelationsForField("AdditionalFields")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AdditionalFieldsEntity, 0, null, null, null, null, "AdditionalFields", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Address' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAddress
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))),
					(IEntityRelation)GetRelationsForField("Address")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AddressEntity, 0, null, null, null, null, "Address", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'AdvocateManagerTeam' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAdvocateManagerTeam_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<AdvocateManagerTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AdvocateManagerTeamEntityFactory))),
					(IEntityRelation)GetRelationsForField("AdvocateManagerTeam_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AdvocateManagerTeamEntity, 0, null, null, null, null, "AdvocateManagerTeam_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'AdvocateManagerTeam' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAdvocateManagerTeam
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<AdvocateManagerTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AdvocateManagerTeamEntityFactory))),
					(IEntityRelation)GetRelationsForField("AdvocateManagerTeam")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AdvocateManagerTeamEntity, 0, null, null, null, null, "AdvocateManagerTeam", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Afcampaign' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAfcampaign_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<AfcampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AfcampaignEntityFactory))),
					(IEntityRelation)GetRelationsForField("Afcampaign_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AfcampaignEntity, 0, null, null, null, null, "Afcampaign_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Afcampaign' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAfcampaign
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<AfcampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AfcampaignEntityFactory))),
					(IEntityRelation)GetRelationsForField("Afcampaign")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AfcampaignEntity, 0, null, null, null, null, "Afcampaign", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'AffiliateProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAffiliateProfile
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<AffiliateProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AffiliateProfileEntityFactory))),
					(IEntityRelation)GetRelationsForField("AffiliateProfile")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AffiliateProfileEntity, 0, null, null, null, null, "AffiliateProfile", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ApplicationAuthentication' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathApplicationAuthentication_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ApplicationAuthenticationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ApplicationAuthenticationEntityFactory))),
					(IEntityRelation)GetRelationsForField("ApplicationAuthentication_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ApplicationAuthenticationEntity, 0, null, null, null, null, "ApplicationAuthentication_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ApplicationAuthentication' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathApplicationAuthentication
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ApplicationAuthenticationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ApplicationAuthenticationEntityFactory))),
					(IEntityRelation)GetRelationsForField("ApplicationAuthentication")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ApplicationAuthenticationEntity, 0, null, null, null, null, "ApplicationAuthentication", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Barrier' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBarrier_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<BarrierEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BarrierEntityFactory))),
					(IEntityRelation)GetRelationsForField("Barrier_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.BarrierEntity, 0, null, null, null, null, "Barrier_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Barrier' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathBarrier
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<BarrierEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BarrierEntityFactory))),
					(IEntityRelation)GetRelationsForField("Barrier")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.BarrierEntity, 0, null, null, null, null, "Barrier", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallCenterAgentTeam' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallCenterAgentTeam
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CallCenterAgentTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterAgentTeamEntityFactory))),
					(IEntityRelation)GetRelationsForField("CallCenterAgentTeam")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallCenterAgentTeamEntity, 0, null, null, null, null, "CallCenterAgentTeam", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallCenterAgentTeamLog' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallCenterAgentTeamLog__
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CallCenterAgentTeamLogEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterAgentTeamLogEntityFactory))),
					(IEntityRelation)GetRelationsForField("CallCenterAgentTeamLog__")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallCenterAgentTeamLogEntity, 0, null, null, null, null, "CallCenterAgentTeamLog__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallCenterAgentTeamLog' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallCenterAgentTeamLog_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CallCenterAgentTeamLogEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterAgentTeamLogEntityFactory))),
					(IEntityRelation)GetRelationsForField("CallCenterAgentTeamLog_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallCenterAgentTeamLogEntity, 0, null, null, null, null, "CallCenterAgentTeamLog_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallCenterAgentTeamLog' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallCenterAgentTeamLog
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CallCenterAgentTeamLogEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterAgentTeamLogEntityFactory))),
					(IEntityRelation)GetRelationsForField("CallCenterAgentTeamLog")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallCenterAgentTeamLogEntity, 0, null, null, null, null, "CallCenterAgentTeamLog", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallCenterTeam' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallCenterTeam_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CallCenterTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterTeamEntityFactory))),
					(IEntityRelation)GetRelationsForField("CallCenterTeam_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallCenterTeamEntity, 0, null, null, null, null, "CallCenterTeam_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallCenterTeam' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallCenterTeam
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CallCenterTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterTeamEntityFactory))),
					(IEntityRelation)GetRelationsForField("CallCenterTeam")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallCenterTeamEntity, 0, null, null, null, null, "CallCenterTeam", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallQueue' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallQueue_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory))),
					(IEntityRelation)GetRelationsForField("CallQueue_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallQueueEntity, 0, null, null, null, null, "CallQueue_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallQueue' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallQueue
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory))),
					(IEntityRelation)GetRelationsForField("CallQueue")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallQueueEntity, 0, null, null, null, null, "CallQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallQueueAssignment' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallQueueAssignment
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CallQueueAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueAssignmentEntityFactory))),
					(IEntityRelation)GetRelationsForField("CallQueueAssignment")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallQueueAssignmentEntity, 0, null, null, null, null, "CallQueueAssignment", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallQueueCustomer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallQueueCustomer__
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CallQueueCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueCustomerEntityFactory))),
					(IEntityRelation)GetRelationsForField("CallQueueCustomer__")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallQueueCustomerEntity, 0, null, null, null, null, "CallQueueCustomer__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallQueueCustomer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallQueueCustomer_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CallQueueCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueCustomerEntityFactory))),
					(IEntityRelation)GetRelationsForField("CallQueueCustomer_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallQueueCustomerEntity, 0, null, null, null, null, "CallQueueCustomer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallQueueCustomer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallQueueCustomer
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CallQueueCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueCustomerEntityFactory))),
					(IEntityRelation)GetRelationsForField("CallQueueCustomer")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallQueueCustomerEntity, 0, null, null, null, null, "CallQueueCustomer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallQueueCustomerLock' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallQueueCustomerLock
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CallQueueCustomerLockEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueCustomerLockEntityFactory))),
					(IEntityRelation)GetRelationsForField("CallQueueCustomerLock")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallQueueCustomerLockEntity, 0, null, null, null, null, "CallQueueCustomerLock", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallQueueCustomTag' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallQueueCustomTag
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CallQueueCustomTagEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueCustomTagEntityFactory))),
					(IEntityRelation)GetRelationsForField("CallQueueCustomTag")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallQueueCustomTagEntity, 0, null, null, null, null, "CallQueueCustomTag", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallRoundCallQueue' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallRoundCallQueue
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CallRoundCallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallRoundCallQueueEntityFactory))),
					(IEntityRelation)GetRelationsForField("CallRoundCallQueue")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallRoundCallQueueEntity, 0, null, null, null, null, "CallRoundCallQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Calls' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCalls
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CallsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallsEntityFactory))),
					(IEntityRelation)GetRelationsForField("Calls")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallsEntity, 0, null, null, null, null, "Calls", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallUpload
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CallUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("CallUpload")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallUploadEntity, 0, null, null, null, null, "CallUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Campaign' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCampaign_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory))),
					(IEntityRelation)GetRelationsForField("Campaign_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CampaignEntity, 0, null, null, null, null, "Campaign_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Campaign' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCampaign
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory))),
					(IEntityRelation)GetRelationsForField("Campaign")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CampaignEntity, 0, null, null, null, null, "Campaign", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CampaignActivity' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCampaignActivity_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CampaignActivityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignActivityEntityFactory))),
					(IEntityRelation)GetRelationsForField("CampaignActivity_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CampaignActivityEntity, 0, null, null, null, null, "CampaignActivity_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CampaignActivity' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCampaignActivity
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CampaignActivityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignActivityEntityFactory))),
					(IEntityRelation)GetRelationsForField("CampaignActivity")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CampaignActivityEntity, 0, null, null, null, null, "CampaignActivity", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CampaignActivityAssignment' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCampaignActivityAssignment
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CampaignActivityAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignActivityAssignmentEntityFactory))),
					(IEntityRelation)GetRelationsForField("CampaignActivityAssignment")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CampaignActivityAssignmentEntity, 0, null, null, null, null, "CampaignActivityAssignment", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CampaignAssignment' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCampaignAssignment
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CampaignAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignAssignmentEntityFactory))),
					(IEntityRelation)GetRelationsForField("CampaignAssignment")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CampaignAssignmentEntity, 0, null, null, null, null, "CampaignAssignment", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CdcontentGeneratorTracking' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCdcontentGeneratorTracking
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CdcontentGeneratorTrackingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CdcontentGeneratorTrackingEntityFactory))),
					(IEntityRelation)GetRelationsForField("CdcontentGeneratorTracking")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CdcontentGeneratorTrackingEntity, 0, null, null, null, null, "CdcontentGeneratorTracking", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ChaperoneAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathChaperoneAnswer_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ChaperoneAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ChaperoneAnswerEntityFactory))),
					(IEntityRelation)GetRelationsForField("ChaperoneAnswer_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ChaperoneAnswerEntity, 0, null, null, null, null, "ChaperoneAnswer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ChaperoneAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathChaperoneAnswer
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ChaperoneAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ChaperoneAnswerEntityFactory))),
					(IEntityRelation)GetRelationsForField("ChaperoneAnswer")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ChaperoneAnswerEntity, 0, null, null, null, null, "ChaperoneAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ChaperoneSignature' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathChaperoneSignature
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ChaperoneSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ChaperoneSignatureEntityFactory))),
					(IEntityRelation)GetRelationsForField("ChaperoneSignature")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ChaperoneSignatureEntity, 0, null, null, null, null, "ChaperoneSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Check' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCheck_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CheckEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckEntityFactory))),
					(IEntityRelation)GetRelationsForField("Check_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CheckEntity, 0, null, null, null, null, "Check_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Check' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCheck
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CheckEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckEntityFactory))),
					(IEntityRelation)GetRelationsForField("Check")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CheckEntity, 0, null, null, null, null, "Check", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CheckListAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCheckListAnswer_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CheckListAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListAnswerEntityFactory))),
					(IEntityRelation)GetRelationsForField("CheckListAnswer_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CheckListAnswerEntity, 0, null, null, null, null, "CheckListAnswer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CheckListAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCheckListAnswer
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CheckListAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListAnswerEntityFactory))),
					(IEntityRelation)GetRelationsForField("CheckListAnswer")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CheckListAnswerEntity, 0, null, null, null, null, "CheckListAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CheckListTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCheckListTemplate_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))),
					(IEntityRelation)GetRelationsForField("CheckListTemplate_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CheckListTemplateEntity, 0, null, null, null, null, "CheckListTemplate_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CheckListTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCheckListTemplate
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory))),
					(IEntityRelation)GetRelationsForField("CheckListTemplate")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CheckListTemplateEntity, 0, null, null, null, null, "CheckListTemplate", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ClinicalTestQualificationCriteria' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathClinicalTestQualificationCriteria_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ClinicalTestQualificationCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ClinicalTestQualificationCriteriaEntityFactory))),
					(IEntityRelation)GetRelationsForField("ClinicalTestQualificationCriteria_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ClinicalTestQualificationCriteriaEntity, 0, null, null, null, null, "ClinicalTestQualificationCriteria_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ClinicalTestQualificationCriteria' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathClinicalTestQualificationCriteria
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ClinicalTestQualificationCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ClinicalTestQualificationCriteriaEntityFactory))),
					(IEntityRelation)GetRelationsForField("ClinicalTestQualificationCriteria")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ClinicalTestQualificationCriteriaEntity, 0, null, null, null, null, "ClinicalTestQualificationCriteria", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ContactCall' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathContactCall_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ContactCallEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContactCallEntityFactory))),
					(IEntityRelation)GetRelationsForField("ContactCall_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ContactCallEntity, 0, null, null, null, null, "ContactCall_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ContactCall' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathContactCall
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ContactCallEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContactCallEntityFactory))),
					(IEntityRelation)GetRelationsForField("ContactCall")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ContactCallEntity, 0, null, null, null, null, "ContactCall", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ContactMeeting' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathContactMeeting_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ContactMeetingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContactMeetingEntityFactory))),
					(IEntityRelation)GetRelationsForField("ContactMeeting_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ContactMeetingEntity, 0, null, null, null, null, "ContactMeeting_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ContactMeeting' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathContactMeeting
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ContactMeetingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContactMeetingEntityFactory))),
					(IEntityRelation)GetRelationsForField("ContactMeeting")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ContactMeetingEntity, 0, null, null, null, null, "ContactMeeting", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Content' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathContent_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ContentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContentEntityFactory))),
					(IEntityRelation)GetRelationsForField("Content_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ContentEntity, 0, null, null, null, null, "Content_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Content' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathContent
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ContentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContentEntityFactory))),
					(IEntityRelation)GetRelationsForField("Content")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ContentEntity, 0, null, null, null, null, "Content", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CorporateTag' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCorporateTag_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CorporateTagEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CorporateTagEntityFactory))),
					(IEntityRelation)GetRelationsForField("CorporateTag_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CorporateTagEntity, 0, null, null, null, null, "CorporateTag_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CorporateTag' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCorporateTag
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CorporateTagEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CorporateTagEntityFactory))),
					(IEntityRelation)GetRelationsForField("CorporateTag")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CorporateTagEntity, 0, null, null, null, null, "CorporateTag", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CorporateUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCorporateUpload
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CorporateUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CorporateUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("CorporateUpload")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CorporateUploadEntity, 0, null, null, null, null, "CorporateUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Coupons' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCoupons_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CouponsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CouponsEntityFactory))),
					(IEntityRelation)GetRelationsForField("Coupons_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CouponsEntity, 0, null, null, null, null, "Coupons_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Coupons' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCoupons
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CouponsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CouponsEntityFactory))),
					(IEntityRelation)GetRelationsForField("Coupons")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CouponsEntity, 0, null, null, null, null, "Coupons", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CurrentMedication' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCurrentMedication
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CurrentMedicationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CurrentMedicationEntityFactory))),
					(IEntityRelation)GetRelationsForField("CurrentMedication")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CurrentMedicationEntity, 0, null, null, null, null, "CurrentMedication", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerActivityTypeUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerActivityTypeUpload
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerActivityTypeUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerActivityTypeUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerActivityTypeUpload")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerActivityTypeUploadEntity, 0, null, null, null, null, "CustomerActivityTypeUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerCallAttempts' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerCallAttempts
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerCallAttemptsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerCallAttemptsEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerCallAttempts")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerCallAttemptsEntity, 0, null, null, null, null, "CustomerCallAttempts", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerCallQueueCallAttempt' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerCallQueueCallAttempt
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerCallQueueCallAttemptEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerCallQueueCallAttemptEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerCallQueueCallAttempt")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerCallQueueCallAttemptEntity, 0, null, null, null, null, "CustomerCallQueueCallAttempt", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerClinicalQuestionAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerClinicalQuestionAnswer_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerClinicalQuestionAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerClinicalQuestionAnswerEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerClinicalQuestionAnswer_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerClinicalQuestionAnswerEntity, 0, null, null, null, null, "CustomerClinicalQuestionAnswer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerClinicalQuestionAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerClinicalQuestionAnswer
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerClinicalQuestionAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerClinicalQuestionAnswerEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerClinicalQuestionAnswer")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerClinicalQuestionAnswerEntity, 0, null, null, null, null, "CustomerClinicalQuestionAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerEligibility' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerEligibility_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerEligibilityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEligibilityEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerEligibility_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerEligibilityEntity, 0, null, null, null, null, "CustomerEligibility_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerEligibility' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerEligibility
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerEligibilityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEligibilityEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerEligibility")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerEligibilityEntity, 0, null, null, null, null, "CustomerEligibility", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerEventCriticalTestData' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerEventCriticalTestData_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerEventCriticalTestDataEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventCriticalTestDataEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerEventCriticalTestData_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerEventCriticalTestDataEntity, 0, null, null, null, null, "CustomerEventCriticalTestData_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerEventCriticalTestData' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerEventCriticalTestData
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerEventCriticalTestDataEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventCriticalTestDataEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerEventCriticalTestData")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerEventCriticalTestDataEntity, 0, null, null, null, null, "CustomerEventCriticalTestData", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerEventPriorityInQueueData' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerEventPriorityInQueueData_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerEventPriorityInQueueDataEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventPriorityInQueueDataEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerEventPriorityInQueueData_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerEventPriorityInQueueDataEntity, 0, null, null, null, null, "CustomerEventPriorityInQueueData_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerEventPriorityInQueueData' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerEventPriorityInQueueData
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerEventPriorityInQueueDataEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventPriorityInQueueDataEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerEventPriorityInQueueData")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerEventPriorityInQueueDataEntity, 0, null, null, null, null, "CustomerEventPriorityInQueueData", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerEventReading' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerEventReading
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerEventReadingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventReadingEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerEventReading")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerEventReadingEntity, 0, null, null, null, null, "CustomerEventReading", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerEventTestPhysicianEvaluation' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerEventTestPhysicianEvaluation
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerEventTestPhysicianEvaluationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventTestPhysicianEvaluationEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerEventTestPhysicianEvaluation")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerEventTestPhysicianEvaluationEntity, 0, null, null, null, null, "CustomerEventTestPhysicianEvaluation", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerEventTestState' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerEventTestState__
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerEventTestStateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventTestStateEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerEventTestState__")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerEventTestStateEntity, 0, null, null, null, null, "CustomerEventTestState__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerEventTestState' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerEventTestState_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerEventTestStateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventTestStateEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerEventTestState_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerEventTestStateEntity, 0, null, null, null, null, "CustomerEventTestState_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerEventTestState' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerEventTestState
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerEventTestStateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventTestStateEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerEventTestState")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerEventTestStateEntity, 0, null, null, null, null, "CustomerEventTestState", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerEventUnableScreenReason' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerEventUnableScreenReason
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerEventUnableScreenReasonEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventUnableScreenReasonEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerEventUnableScreenReason")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerEventUnableScreenReasonEntity, 0, null, null, null, null, "CustomerEventUnableScreenReason", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerHealthInfo' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerHealthInfo
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerHealthInfoEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthInfoEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerHealthInfo")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerHealthInfoEntity, 0, null, null, null, null, "CustomerHealthInfo", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerHealthInfoArchive' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerHealthInfoArchive
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerHealthInfoArchiveEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthInfoArchiveEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerHealthInfoArchive")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerHealthInfoArchiveEntity, 0, null, null, null, null, "CustomerHealthInfoArchive", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerIcdCode' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerIcdCode
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerIcdCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerIcdCodeEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerIcdCode")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerIcdCodeEntity, 0, null, null, null, null, "CustomerIcdCode", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerLockForCall' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerLockForCall
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerLockForCallEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerLockForCallEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerLockForCall")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerLockForCallEntity, 0, null, null, null, null, "CustomerLockForCall", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerMedicareQuestionAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerMedicareQuestionAnswer
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerMedicareQuestionAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerMedicareQuestionAnswerEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerMedicareQuestionAnswer")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerMedicareQuestionAnswerEntity, 0, null, null, null, null, "CustomerMedicareQuestionAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerPhoneNumberUpdateUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerPhoneNumberUpdateUpload
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerPhoneNumberUpdateUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerPhoneNumberUpdateUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerPhoneNumberUpdateUpload")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerPhoneNumberUpdateUploadEntity, 0, null, null, null, null, "CustomerPhoneNumberUpdateUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerPrimaryCarePhysician' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerPrimaryCarePhysician_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerPrimaryCarePhysicianEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerPrimaryCarePhysicianEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerPrimaryCarePhysician_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerPrimaryCarePhysicianEntity, 0, null, null, null, null, "CustomerPrimaryCarePhysician_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerPrimaryCarePhysician' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerPrimaryCarePhysician__
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerPrimaryCarePhysicianEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerPrimaryCarePhysicianEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerPrimaryCarePhysician__")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerPrimaryCarePhysicianEntity, 0, null, null, null, null, "CustomerPrimaryCarePhysician__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerPrimaryCarePhysician' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerPrimaryCarePhysician
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerPrimaryCarePhysicianEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerPrimaryCarePhysicianEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerPrimaryCarePhysician")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerPrimaryCarePhysicianEntity, 0, null, null, null, null, "CustomerPrimaryCarePhysician", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfileHistory' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileHistory
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerProfileHistoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileHistoryEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerProfileHistory")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileHistoryEntity, 0, null, null, null, null, "CustomerProfileHistory", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerRegistrationNotes' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerRegistrationNotes
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerRegistrationNotesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerRegistrationNotesEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerRegistrationNotes")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerRegistrationNotesEntity, 0, null, null, null, null, "CustomerRegistrationNotes", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerResultScreeningCommunication' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerResultScreeningCommunication__
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerResultScreeningCommunicationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerResultScreeningCommunicationEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerResultScreeningCommunication__")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerResultScreeningCommunicationEntity, 0, null, null, null, null, "CustomerResultScreeningCommunication__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerResultScreeningCommunication' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerResultScreeningCommunication_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerResultScreeningCommunicationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerResultScreeningCommunicationEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerResultScreeningCommunication_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerResultScreeningCommunicationEntity, 0, null, null, null, null, "CustomerResultScreeningCommunication_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerResultScreeningCommunication' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerResultScreeningCommunication
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerResultScreeningCommunicationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerResultScreeningCommunicationEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerResultScreeningCommunication")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerResultScreeningCommunicationEntity, 0, null, null, null, null, "CustomerResultScreeningCommunication", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerTag' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerTag_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerTagEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerTagEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerTag_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerTagEntity, 0, null, null, null, null, "CustomerTag_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerTag' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerTag
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerTagEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerTagEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerTag")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerTagEntity, 0, null, null, null, null, "CustomerTag", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerTargeted' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerTargeted_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerTargetedEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerTargetedEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerTargeted_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerTargetedEntity, 0, null, null, null, null, "CustomerTargeted_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerTargeted' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerTargeted
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerTargetedEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerTargetedEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerTargeted")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerTargetedEntity, 0, null, null, null, null, "CustomerTargeted", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerWarmTransfer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerWarmTransfer_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerWarmTransferEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerWarmTransferEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerWarmTransfer_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerWarmTransferEntity, 0, null, null, null, null, "CustomerWarmTransfer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerWarmTransfer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerWarmTransfer
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomerWarmTransferEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerWarmTransferEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerWarmTransfer")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerWarmTransferEntity, 0, null, null, null, null, "CustomerWarmTransfer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomEventNotification' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomEventNotification
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<CustomEventNotificationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomEventNotificationEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomEventNotification")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomEventNotificationEntity, 0, null, null, null, null, "CustomEventNotification", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DirectMail' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDirectMail
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<DirectMailEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DirectMailEntityFactory))),
					(IEntityRelation)GetRelationsForField("DirectMail")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.DirectMailEntity, 0, null, null, null, null, "DirectMail", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DirectMailType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDirectMailType_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<DirectMailTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DirectMailTypeEntityFactory))),
					(IEntityRelation)GetRelationsForField("DirectMailType_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.DirectMailTypeEntity, 0, null, null, null, null, "DirectMailType_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DirectMailType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDirectMailType
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<DirectMailTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DirectMailTypeEntityFactory))),
					(IEntityRelation)GetRelationsForField("DirectMailType")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.DirectMailTypeEntity, 0, null, null, null, null, "DirectMailType", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DisqualifiedTest' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDisqualifiedTest_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<DisqualifiedTestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DisqualifiedTestEntityFactory))),
					(IEntityRelation)GetRelationsForField("DisqualifiedTest_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.DisqualifiedTestEntity, 0, null, null, null, null, "DisqualifiedTest_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DisqualifiedTest' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDisqualifiedTest
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<DisqualifiedTestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DisqualifiedTestEntityFactory))),
					(IEntityRelation)GetRelationsForField("DisqualifiedTest")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.DisqualifiedTestEntity, 0, null, null, null, null, "DisqualifiedTest", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Eligibility' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEligibility
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EligibilityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EligibilityEntityFactory))),
					(IEntityRelation)GetRelationsForField("Eligibility")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EligibilityEntity, 0, null, null, null, null, "Eligibility", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EligibilityUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEligibilityUpload
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EligibilityUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EligibilityUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("EligibilityUpload")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EligibilityUploadEntity, 0, null, null, null, null, "EligibilityUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EmailTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEmailTemplate
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory))),
					(IEntityRelation)GetRelationsForField("EmailTemplate")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EmailTemplateEntity, 0, null, null, null, null, "EmailTemplate", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventAccountTestHcpcsCode' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventAccountTestHcpcsCode_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventAccountTestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventAccountTestHcpcsCodeEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventAccountTestHcpcsCode_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventAccountTestHcpcsCodeEntity, 0, null, null, null, null, "EventAccountTestHcpcsCode_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventAccountTestHcpcsCode' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventAccountTestHcpcsCode
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventAccountTestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventAccountTestHcpcsCodeEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventAccountTestHcpcsCode")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventAccountTestHcpcsCodeEntity, 0, null, null, null, null, "EventAccountTestHcpcsCode", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventActivityTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventActivityTemplate
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventActivityTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventActivityTemplateEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventActivityTemplate")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventActivityTemplateEntity, 0, null, null, null, null, "EventActivityTemplate", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventActivityTemplateCall' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventActivityTemplateCall
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventActivityTemplateCallEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventActivityTemplateCallEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventActivityTemplateCall")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventActivityTemplateCallEntity, 0, null, null, null, null, "EventActivityTemplateCall", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventActivityTemplateEmail' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventActivityTemplateEmail
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventActivityTemplateEmailEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventActivityTemplateEmailEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventActivityTemplateEmail")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventActivityTemplateEmailEntity, 0, null, null, null, null, "EventActivityTemplateEmail", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventActivityTemplateMeeting' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventActivityTemplateMeeting
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventActivityTemplateMeetingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventActivityTemplateMeetingEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventActivityTemplateMeeting")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventActivityTemplateMeetingEntity, 0, null, null, null, null, "EventActivityTemplateMeeting", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventActivityTemplateTask' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventActivityTemplateTask
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventActivityTemplateTaskEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventActivityTemplateTaskEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventActivityTemplateTask")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventActivityTemplateTaskEntity, 0, null, null, null, null, "EventActivityTemplateTask", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventAppointment' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventAppointment
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventAppointmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventAppointmentEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventAppointment")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventAppointmentEntity, 0, null, null, null, null, "EventAppointment", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventAppointmentCancellationLog' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventAppointmentCancellationLog
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventAppointmentCancellationLogEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventAppointmentCancellationLogEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventAppointmentCancellationLog")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventAppointmentCancellationLogEntity, 0, null, null, null, null, "EventAppointmentCancellationLog", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventAppointmentChangeLog' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventAppointmentChangeLog
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventAppointmentChangeLogEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventAppointmentChangeLogEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventAppointmentChangeLog")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventAppointmentChangeLogEntity, 0, null, null, null, null, "EventAppointmentChangeLog", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerBasicBioMetric' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerBasicBioMetric
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventCustomerBasicBioMetricEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerBasicBioMetricEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventCustomerBasicBioMetric")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomerBasicBioMetricEntity, 0, null, null, null, null, "EventCustomerBasicBioMetric", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerGiftCard' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerGiftCard
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventCustomerGiftCardEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerGiftCardEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventCustomerGiftCard")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomerGiftCardEntity, 0, null, null, null, null, "EventCustomerGiftCard", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerPrimaryCarePhysician' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerPrimaryCarePhysician
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventCustomerPrimaryCarePhysicianEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerPrimaryCarePhysicianEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventCustomerPrimaryCarePhysician")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomerPrimaryCarePhysicianEntity, 0, null, null, null, null, "EventCustomerPrimaryCarePhysician", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerQuestionAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerQuestionAnswer_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventCustomerQuestionAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerQuestionAnswerEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventCustomerQuestionAnswer_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomerQuestionAnswerEntity, 0, null, null, null, null, "EventCustomerQuestionAnswer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerQuestionAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerQuestionAnswer
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventCustomerQuestionAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerQuestionAnswerEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventCustomerQuestionAnswer")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomerQuestionAnswerEntity, 0, null, null, null, null, "EventCustomerQuestionAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerResult' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerResult___
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventCustomerResult___")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomerResultEntity, 0, null, null, null, null, "EventCustomerResult___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerResult' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerResult__
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventCustomerResult__")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomerResultEntity, 0, null, null, null, null, "EventCustomerResult__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerResult' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerResult_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventCustomerResult_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomerResultEntity, 0, null, null, null, null, "EventCustomerResult_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerResult' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerResult____
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventCustomerResult____")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomerResultEntity, 0, null, null, null, null, "EventCustomerResult____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerResult' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerResult______
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventCustomerResult______")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomerResultEntity, 0, null, null, null, null, "EventCustomerResult______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerResult' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerResult_______
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventCustomerResult_______")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomerResultEntity, 0, null, null, null, null, "EventCustomerResult_______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerResult' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerResult
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventCustomerResult")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomerResultEntity, 0, null, null, null, null, "EventCustomerResult", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerResult' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerResult_____
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventCustomerResult_____")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomerResultEntity, 0, null, null, null, null, "EventCustomerResult_____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerResult' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerResult________
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventCustomerResult________")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomerResultEntity, 0, null, null, null, null, "EventCustomerResult________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerResultBloodLab' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerResultBloodLab
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventCustomerResultBloodLabEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultBloodLabEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventCustomerResultBloodLab")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomerResultBloodLabEntity, 0, null, null, null, null, "EventCustomerResultBloodLab", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerResultHistory' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerResultHistory
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventCustomerResultHistoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultHistoryEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventCustomerResultHistory")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomerResultHistoryEntity, 0, null, null, null, null, "EventCustomerResultHistory", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerResultHistory' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerResultHistory_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventCustomerResultHistoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultHistoryEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventCustomerResultHistory_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomerResultHistoryEntity, 0, null, null, null, null, "EventCustomerResultHistory_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerResultHistory' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerResultHistory__
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventCustomerResultHistoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultHistoryEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventCustomerResultHistory__")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomerResultHistoryEntity, 0, null, null, null, null, "EventCustomerResultHistory__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerRetest' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerRetest
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventCustomerRetestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerRetestEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventCustomerRetest")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomerRetestEntity, 0, null, null, null, null, "EventCustomerRetest", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomers_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventCustomers_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, null, null, "EventCustomers_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomers
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventCustomers")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, null, null, "EventCustomers", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerTestNotPerformedNotification' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerTestNotPerformedNotification
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventCustomerTestNotPerformedNotificationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerTestNotPerformedNotificationEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventCustomerTestNotPerformedNotification")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomerTestNotPerformedNotificationEntity, 0, null, null, null, null, "EventCustomerTestNotPerformedNotification", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventNote' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventNote_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventNoteEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventNoteEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventNote_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventNoteEntity, 0, null, null, null, null, "EventNote_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventNote' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventNote
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventNoteEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventNoteEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventNote")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventNoteEntity, 0, null, null, null, null, "EventNote", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventPhysicianTest' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventPhysicianTest__
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventPhysicianTestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventPhysicianTestEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventPhysicianTest__")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventPhysicianTestEntity, 0, null, null, null, null, "EventPhysicianTest__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventPhysicianTest' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventPhysicianTest_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventPhysicianTestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventPhysicianTestEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventPhysicianTest_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventPhysicianTestEntity, 0, null, null, null, null, "EventPhysicianTest_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventPhysicianTest' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventPhysicianTest
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventPhysicianTestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventPhysicianTestEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventPhysicianTest")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventPhysicianTestEntity, 0, null, null, null, null, "EventPhysicianTest", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEvents___
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))),
					(IEntityRelation)GetRelationsForField("Events___")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, null, null, "Events___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEvents____
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))),
					(IEntityRelation)GetRelationsForField("Events____")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, null, null, "Events____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEvents__
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))),
					(IEntityRelation)GetRelationsForField("Events__")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, null, null, "Events__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEvents
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))),
					(IEntityRelation)GetRelationsForField("Events")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, null, null, "Events", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEvents_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))),
					(IEntityRelation)GetRelationsForField("Events_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, null, null, "Events_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventStaffAssignment' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventStaffAssignment__
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventStaffAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventStaffAssignmentEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventStaffAssignment__")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventStaffAssignmentEntity, 0, null, null, null, null, "EventStaffAssignment__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventStaffAssignment' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventStaffAssignment_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventStaffAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventStaffAssignmentEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventStaffAssignment_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventStaffAssignmentEntity, 0, null, null, null, null, "EventStaffAssignment_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventStaffAssignment' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventStaffAssignment
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<EventStaffAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventStaffAssignmentEntityFactory))),
					(IEntityRelation)GetRelationsForField("EventStaffAssignment")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventStaffAssignmentEntity, 0, null, null, null, null, "EventStaffAssignment", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ExitInterviewAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathExitInterviewAnswer_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ExitInterviewAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExitInterviewAnswerEntityFactory))),
					(IEntityRelation)GetRelationsForField("ExitInterviewAnswer_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ExitInterviewAnswerEntity, 0, null, null, null, null, "ExitInterviewAnswer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ExitInterviewAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathExitInterviewAnswer
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ExitInterviewAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExitInterviewAnswerEntityFactory))),
					(IEntityRelation)GetRelationsForField("ExitInterviewAnswer")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ExitInterviewAnswerEntity, 0, null, null, null, null, "ExitInterviewAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ExitInterviewSignature' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathExitInterviewSignature
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ExitInterviewSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExitInterviewSignatureEntityFactory))),
					(IEntityRelation)GetRelationsForField("ExitInterviewSignature")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ExitInterviewSignatureEntity, 0, null, null, null, null, "ExitInterviewSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ExportableReportsQueue' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathExportableReportsQueue
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ExportableReportsQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExportableReportsQueueEntityFactory))),
					(IEntityRelation)GetRelationsForField("ExportableReportsQueue")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ExportableReportsQueueEntity, 0, null, null, null, null, "ExportableReportsQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFile
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))),
					(IEntityRelation)GetRelationsForField("File")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, null, null, "File", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'FillEventCallQueue' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFillEventCallQueue
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<FillEventCallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FillEventCallQueueEntityFactory))),
					(IEntityRelation)GetRelationsForField("FillEventCallQueue")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FillEventCallQueueEntity, 0, null, null, null, null, "FillEventCallQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'FluConsentAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFluConsentAnswer_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<FluConsentAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentAnswerEntityFactory))),
					(IEntityRelation)GetRelationsForField("FluConsentAnswer_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FluConsentAnswerEntity, 0, null, null, null, null, "FluConsentAnswer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'FluConsentAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFluConsentAnswer
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<FluConsentAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentAnswerEntityFactory))),
					(IEntityRelation)GetRelationsForField("FluConsentAnswer")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FluConsentAnswerEntity, 0, null, null, null, null, "FluConsentAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'FluConsentSignature' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFluConsentSignature
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<FluConsentSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentSignatureEntityFactory))),
					(IEntityRelation)GetRelationsForField("FluConsentSignature")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FluConsentSignatureEntity, 0, null, null, null, null, "FluConsentSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'FluConsentTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFluConsentTemplate_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory))),
					(IEntityRelation)GetRelationsForField("FluConsentTemplate_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FluConsentTemplateEntity, 0, null, null, null, null, "FluConsentTemplate_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'FluConsentTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFluConsentTemplate
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory))),
					(IEntityRelation)GetRelationsForField("FluConsentTemplate")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FluConsentTemplateEntity, 0, null, null, null, null, "FluConsentTemplate", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GcNotGivenReason' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGcNotGivenReason_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<GcNotGivenReasonEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GcNotGivenReasonEntityFactory))),
					(IEntityRelation)GetRelationsForField("GcNotGivenReason_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.GcNotGivenReasonEntity, 0, null, null, null, null, "GcNotGivenReason_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GcNotGivenReason' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGcNotGivenReason
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<GcNotGivenReasonEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GcNotGivenReasonEntityFactory))),
					(IEntityRelation)GetRelationsForField("GcNotGivenReason")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.GcNotGivenReasonEntity, 0, null, null, null, null, "GcNotGivenReason", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GuardianDetails' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGuardianDetails_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<GuardianDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GuardianDetailsEntityFactory))),
					(IEntityRelation)GetRelationsForField("GuardianDetails_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.GuardianDetailsEntity, 0, null, null, null, null, "GuardianDetails_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GuardianDetails' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGuardianDetails
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<GuardianDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GuardianDetailsEntityFactory))),
					(IEntityRelation)GetRelationsForField("GuardianDetails")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.GuardianDetailsEntity, 0, null, null, null, null, "GuardianDetails", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HafTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHafTemplate_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))),
					(IEntityRelation)GetRelationsForField("HafTemplate_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HafTemplateEntity, 0, null, null, null, null, "HafTemplate_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HafTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHafTemplate
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))),
					(IEntityRelation)GetRelationsForField("HafTemplate")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HafTemplateEntity, 0, null, null, null, null, "HafTemplate", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HcpcsCode' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHcpcsCode_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<HcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HcpcsCodeEntityFactory))),
					(IEntityRelation)GetRelationsForField("HcpcsCode_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HcpcsCodeEntity, 0, null, null, null, null, "HcpcsCode_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HcpcsCode' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHcpcsCode
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<HcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HcpcsCodeEntityFactory))),
					(IEntityRelation)GetRelationsForField("HcpcsCode")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HcpcsCodeEntity, 0, null, null, null, null, "HcpcsCode", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HealthPlanCallQueueCriteria' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHealthPlanCallQueueCriteria__
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<HealthPlanCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCallQueueCriteriaEntityFactory))),
					(IEntityRelation)GetRelationsForField("HealthPlanCallQueueCriteria__")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HealthPlanCallQueueCriteriaEntity, 0, null, null, null, null, "HealthPlanCallQueueCriteria__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HealthPlanCallQueueCriteria' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHealthPlanCallQueueCriteria_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<HealthPlanCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCallQueueCriteriaEntityFactory))),
					(IEntityRelation)GetRelationsForField("HealthPlanCallQueueCriteria_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HealthPlanCallQueueCriteriaEntity, 0, null, null, null, null, "HealthPlanCallQueueCriteria_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HealthPlanCriteriaAssignment' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHealthPlanCriteriaAssignment__
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<HealthPlanCriteriaAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCriteriaAssignmentEntityFactory))),
					(IEntityRelation)GetRelationsForField("HealthPlanCriteriaAssignment__")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HealthPlanCriteriaAssignmentEntity, 0, null, null, null, null, "HealthPlanCriteriaAssignment__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HealthPlanCriteriaAssignment' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHealthPlanCriteriaAssignment_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<HealthPlanCriteriaAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCriteriaAssignmentEntityFactory))),
					(IEntityRelation)GetRelationsForField("HealthPlanCriteriaAssignment_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HealthPlanCriteriaAssignmentEntity, 0, null, null, null, null, "HealthPlanCriteriaAssignment_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HealthPlanCriteriaAssignment' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHealthPlanCriteriaAssignment
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<HealthPlanCriteriaAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCriteriaAssignmentEntityFactory))),
					(IEntityRelation)GetRelationsForField("HealthPlanCriteriaAssignment")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HealthPlanCriteriaAssignmentEntity, 0, null, null, null, null, "HealthPlanCriteriaAssignment", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HealthPlanCriteriaAssignmentUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHealthPlanCriteriaAssignmentUpload
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<HealthPlanCriteriaAssignmentUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCriteriaAssignmentUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("HealthPlanCriteriaAssignmentUpload")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HealthPlanCriteriaAssignmentUploadEntity, 0, null, null, null, null, "HealthPlanCriteriaAssignmentUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HealthPlanCriteriaTeamAssignment' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHealthPlanCriteriaTeamAssignment_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<HealthPlanCriteriaTeamAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCriteriaTeamAssignmentEntityFactory))),
					(IEntityRelation)GetRelationsForField("HealthPlanCriteriaTeamAssignment_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HealthPlanCriteriaTeamAssignmentEntity, 0, null, null, null, null, "HealthPlanCriteriaTeamAssignment_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HealthPlanCriteriaTeamAssignment' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHealthPlanCriteriaTeamAssignment
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<HealthPlanCriteriaTeamAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCriteriaTeamAssignmentEntityFactory))),
					(IEntityRelation)GetRelationsForField("HealthPlanCriteriaTeamAssignment")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HealthPlanCriteriaTeamAssignmentEntity, 0, null, null, null, null, "HealthPlanCriteriaTeamAssignment", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HealthPlanRevenue' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHealthPlanRevenue_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<HealthPlanRevenueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanRevenueEntityFactory))),
					(IEntityRelation)GetRelationsForField("HealthPlanRevenue_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HealthPlanRevenueEntity, 0, null, null, null, null, "HealthPlanRevenue_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HealthPlanRevenue' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHealthPlanRevenue
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<HealthPlanRevenueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanRevenueEntityFactory))),
					(IEntityRelation)GetRelationsForField("HealthPlanRevenue")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HealthPlanRevenueEntity, 0, null, null, null, null, "HealthPlanRevenue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HospitalPartnerCustomer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHospitalPartnerCustomer__
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<HospitalPartnerCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HospitalPartnerCustomerEntityFactory))),
					(IEntityRelation)GetRelationsForField("HospitalPartnerCustomer__")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HospitalPartnerCustomerEntity, 0, null, null, null, null, "HospitalPartnerCustomer__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HospitalPartnerCustomer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHospitalPartnerCustomer_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<HospitalPartnerCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HospitalPartnerCustomerEntityFactory))),
					(IEntityRelation)GetRelationsForField("HospitalPartnerCustomer_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HospitalPartnerCustomerEntity, 0, null, null, null, null, "HospitalPartnerCustomer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HospitalPartnerCustomer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHospitalPartnerCustomer
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<HospitalPartnerCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HospitalPartnerCustomerEntityFactory))),
					(IEntityRelation)GetRelationsForField("HospitalPartnerCustomer")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HospitalPartnerCustomerEntity, 0, null, null, null, null, "HospitalPartnerCustomer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HostFacilityRanking' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHostFacilityRanking
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<HostFacilityRankingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HostFacilityRankingEntityFactory))),
					(IEntityRelation)GetRelationsForField("HostFacilityRanking")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HostFacilityRankingEntity, 0, null, null, null, null, "HostFacilityRanking", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HostPayment' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHostPayment
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<HostPaymentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HostPaymentEntityFactory))),
					(IEntityRelation)GetRelationsForField("HostPayment")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HostPaymentEntity, 0, null, null, null, null, "HostPayment", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HostPaymentTransaction' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHostPaymentTransaction
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<HostPaymentTransactionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HostPaymentTransactionEntityFactory))),
					(IEntityRelation)GetRelationsForField("HostPaymentTransaction")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HostPaymentTransactionEntity, 0, null, null, null, null, "HostPaymentTransaction", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'IcdCodes' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathIcdCodes_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<IcdCodesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(IcdCodesEntityFactory))),
					(IEntityRelation)GetRelationsForField("IcdCodes_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.IcdCodesEntity, 0, null, null, null, null, "IcdCodes_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'IcdCodes' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathIcdCodes
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<IcdCodesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(IcdCodesEntityFactory))),
					(IEntityRelation)GetRelationsForField("IcdCodes")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.IcdCodesEntity, 0, null, null, null, null, "IcdCodes", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'IncidentalFindings' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathIncidentalFindings
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<IncidentalFindingsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(IncidentalFindingsEntityFactory))),
					(IEntityRelation)GetRelationsForField("IncidentalFindings")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.IncidentalFindingsEntity, 0, null, null, null, null, "IncidentalFindings", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'KynLabValues' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathKynLabValues_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<KynLabValuesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(KynLabValuesEntityFactory))),
					(IEntityRelation)GetRelationsForField("KynLabValues_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.KynLabValuesEntity, 0, null, null, null, null, "KynLabValues_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'KynLabValues' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathKynLabValues
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<KynLabValuesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(KynLabValuesEntityFactory))),
					(IEntityRelation)GetRelationsForField("KynLabValues")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.KynLabValuesEntity, 0, null, null, null, null, "KynLabValues", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lab' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLab
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<LabEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LabEntityFactory))),
					(IEntityRelation)GetRelationsForField("Lab")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LabEntity, 0, null, null, null, null, "Lab", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Language' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLanguage
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<LanguageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LanguageEntityFactory))),
					(IEntityRelation)GetRelationsForField("Language")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LanguageEntity, 0, null, null, null, null, "Language", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'LanguageBarrierCallQueue' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLanguageBarrierCallQueue
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<LanguageBarrierCallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LanguageBarrierCallQueueEntityFactory))),
					(IEntityRelation)GetRelationsForField("LanguageBarrierCallQueue")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LanguageBarrierCallQueueEntity, 0, null, null, null, null, "LanguageBarrierCallQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'MailRoundCallQueue' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathMailRoundCallQueue
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<MailRoundCallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MailRoundCallQueueEntityFactory))),
					(IEntityRelation)GetRelationsForField("MailRoundCallQueue")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.MailRoundCallQueueEntity, 0, null, null, null, null, "MailRoundCallQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'MarketingPrintOrder' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathMarketingPrintOrder
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<MarketingPrintOrderEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MarketingPrintOrderEntityFactory))),
					(IEntityRelation)GetRelationsForField("MarketingPrintOrder")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.MarketingPrintOrderEntity, 0, null, null, null, null, "MarketingPrintOrder", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Medication' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathMedication_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<MedicationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicationEntityFactory))),
					(IEntityRelation)GetRelationsForField("Medication_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.MedicationEntity, 0, null, null, null, null, "Medication_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Medication' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathMedication
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<MedicationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicationEntityFactory))),
					(IEntityRelation)GetRelationsForField("Medication")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.MedicationEntity, 0, null, null, null, null, "Medication", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'MedicationUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathMedicationUpload
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<MedicationUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicationUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("MedicationUpload")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.MedicationUploadEntity, 0, null, null, null, null, "MedicationUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'MergeCustomerUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathMergeCustomerUpload
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<MergeCustomerUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MergeCustomerUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("MergeCustomerUpload")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.MergeCustomerUploadEntity, 0, null, null, null, null, "MergeCustomerUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'NoShowCallQueue' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathNoShowCallQueue
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<NoShowCallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NoShowCallQueueEntityFactory))),
					(IEntityRelation)GetRelationsForField("NoShowCallQueue")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.NoShowCallQueueEntity, 0, null, null, null, null, "NoShowCallQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'NotesDetails' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathNotesDetails_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory))),
					(IEntityRelation)GetRelationsForField("NotesDetails_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.NotesDetailsEntity, 0, null, null, null, null, "NotesDetails_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'NotesDetails' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathNotesDetails
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory))),
					(IEntityRelation)GetRelationsForField("NotesDetails")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.NotesDetailsEntity, 0, null, null, null, null, "NotesDetails", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Notification' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathNotification
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<NotificationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotificationEntityFactory))),
					(IEntityRelation)GetRelationsForField("Notification")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.NotificationEntity, 0, null, null, null, null, "Notification", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'NotificationType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathNotificationType
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<NotificationTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotificationTypeEntityFactory))),
					(IEntityRelation)GetRelationsForField("NotificationType")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.NotificationTypeEntity, 0, null, null, null, null, "NotificationType", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrganizationRoleUserTerritory' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationRoleUserTerritory
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<OrganizationRoleUserTerritoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserTerritoryEntityFactory))),
					(IEntityRelation)GetRelationsForField("OrganizationRoleUserTerritory")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.OrganizationRoleUserTerritoryEntity, 0, null, null, null, null, "OrganizationRoleUserTerritory", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'OrgRoleUserActivity' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrgRoleUserActivity
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<OrgRoleUserActivityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrgRoleUserActivityEntityFactory))),
					(IEntityRelation)GetRelationsForField("OrgRoleUserActivity")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.OrgRoleUserActivityEntity, 0, null, null, null, null, "OrgRoleUserActivity", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ParticipationConsentSignature' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathParticipationConsentSignature
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ParticipationConsentSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ParticipationConsentSignatureEntityFactory))),
					(IEntityRelation)GetRelationsForField("ParticipationConsentSignature")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ParticipationConsentSignatureEntity, 0, null, null, null, null, "ParticipationConsentSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PasswordChangelog' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPasswordChangelog
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<PasswordChangelogEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PasswordChangelogEntityFactory))),
					(IEntityRelation)GetRelationsForField("PasswordChangelog")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PasswordChangelogEntity, 0, null, null, null, null, "PasswordChangelog", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PayPeriod' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPayPeriod_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<PayPeriodEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PayPeriodEntityFactory))),
					(IEntityRelation)GetRelationsForField("PayPeriod_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PayPeriodEntity, 0, null, null, null, null, "PayPeriod_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PayPeriod' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPayPeriod
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<PayPeriodEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PayPeriodEntityFactory))),
					(IEntityRelation)GetRelationsForField("PayPeriod")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PayPeriodEntity, 0, null, null, null, null, "PayPeriod", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PcpAppointment' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPcpAppointment_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<PcpAppointmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PcpAppointmentEntityFactory))),
					(IEntityRelation)GetRelationsForField("PcpAppointment_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PcpAppointmentEntity, 0, null, null, null, null, "PcpAppointment_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PcpAppointment' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPcpAppointment
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<PcpAppointmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PcpAppointmentEntityFactory))),
					(IEntityRelation)GetRelationsForField("PcpAppointment")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PcpAppointmentEntity, 0, null, null, null, null, "PcpAppointment", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PcpDisposition' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPcpDisposition_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<PcpDispositionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PcpDispositionEntityFactory))),
					(IEntityRelation)GetRelationsForField("PcpDisposition_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PcpDispositionEntity, 0, null, null, null, null, "PcpDisposition_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PcpDisposition' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPcpDisposition
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<PcpDispositionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PcpDispositionEntityFactory))),
					(IEntityRelation)GetRelationsForField("PcpDisposition")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PcpDispositionEntity, 0, null, null, null, null, "PcpDisposition", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PhysicianRecordRequestSignature' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPhysicianRecordRequestSignature
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<PhysicianRecordRequestSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PhysicianRecordRequestSignatureEntityFactory))),
					(IEntityRelation)GetRelationsForField("PhysicianRecordRequestSignature")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PhysicianRecordRequestSignatureEntity, 0, null, null, null, null, "PhysicianRecordRequestSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PinChangelog' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPinChangelog
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<PinChangelogEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PinChangelogEntityFactory))),
					(IEntityRelation)GetRelationsForField("PinChangelog")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PinChangelogEntity, 0, null, null, null, null, "PinChangelog", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PodDefaultTeam' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPodDefaultTeam
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<PodDefaultTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PodDefaultTeamEntityFactory))),
					(IEntityRelation)GetRelationsForField("PodDefaultTeam")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PodDefaultTeamEntity, 0, null, null, null, null, "PodDefaultTeam", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PreApprovedPackage' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPreApprovedPackage
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<PreApprovedPackageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreApprovedPackageEntityFactory))),
					(IEntityRelation)GetRelationsForField("PreApprovedPackage")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PreApprovedPackageEntity, 0, null, null, null, null, "PreApprovedPackage", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PreApprovedTest' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPreApprovedTest
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<PreApprovedTestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreApprovedTestEntityFactory))),
					(IEntityRelation)GetRelationsForField("PreApprovedTest")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PreApprovedTestEntity, 0, null, null, null, null, "PreApprovedTest", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PreAssessmentCallQueueCustomerLock' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPreAssessmentCallQueueCustomerLock
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<PreAssessmentCallQueueCustomerLockEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreAssessmentCallQueueCustomerLockEntityFactory))),
					(IEntityRelation)GetRelationsForField("PreAssessmentCallQueueCustomerLock")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PreAssessmentCallQueueCustomerLockEntity, 0, null, null, null, null, "PreAssessmentCallQueueCustomerLock", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PreAssessmentCustomerCallQueueCallAttempt' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPreAssessmentCustomerCallQueueCallAttempt
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<PreAssessmentCustomerCallQueueCallAttemptEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreAssessmentCustomerCallQueueCallAttemptEntityFactory))),
					(IEntityRelation)GetRelationsForField("PreAssessmentCustomerCallQueueCallAttempt")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PreAssessmentCustomerCallQueueCallAttemptEntity, 0, null, null, null, null, "PreAssessmentCustomerCallQueueCallAttempt", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PreQualificationQuestion' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPreQualificationQuestion
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<PreQualificationQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreQualificationQuestionEntityFactory))),
					(IEntityRelation)GetRelationsForField("PreQualificationQuestion")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PreQualificationQuestionEntity, 0, null, null, null, null, "PreQualificationQuestion", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PreQualificationTestTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPreQualificationTestTemplate_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<PreQualificationTestTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreQualificationTestTemplateEntityFactory))),
					(IEntityRelation)GetRelationsForField("PreQualificationTestTemplate_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PreQualificationTestTemplateEntity, 0, null, null, null, null, "PreQualificationTestTemplate_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PreQualificationTestTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPreQualificationTestTemplate
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<PreQualificationTestTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreQualificationTestTemplateEntityFactory))),
					(IEntityRelation)GetRelationsForField("PreQualificationTestTemplate")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PreQualificationTestTemplateEntity, 0, null, null, null, null, "PreQualificationTestTemplate", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PrintOrderItemTracking' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPrintOrderItemTracking_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<PrintOrderItemTrackingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PrintOrderItemTrackingEntityFactory))),
					(IEntityRelation)GetRelationsForField("PrintOrderItemTracking_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PrintOrderItemTrackingEntity, 0, null, null, null, null, "PrintOrderItemTracking_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PrintOrderItemTracking' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPrintOrderItemTracking
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<PrintOrderItemTrackingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PrintOrderItemTrackingEntityFactory))),
					(IEntityRelation)GetRelationsForField("PrintOrderItemTracking")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PrintOrderItemTrackingEntity, 0, null, null, null, null, "PrintOrderItemTracking", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PriorityInQueue' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPriorityInQueue_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<PriorityInQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PriorityInQueueEntityFactory))),
					(IEntityRelation)GetRelationsForField("PriorityInQueue_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PriorityInQueueEntity, 0, null, null, null, null, "PriorityInQueue_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PriorityInQueue' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPriorityInQueue
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<PriorityInQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PriorityInQueueEntityFactory))),
					(IEntityRelation)GetRelationsForField("PriorityInQueue")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PriorityInQueueEntity, 0, null, null, null, null, "PriorityInQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ProspectCustomer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProspectCustomer
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ProspectCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectCustomerEntityFactory))),
					(IEntityRelation)GetRelationsForField("ProspectCustomer")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ProspectCustomerEntity, 0, null, null, null, null, "ProspectCustomer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Prospects' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProspects
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory))),
					(IEntityRelation)GetRelationsForField("Prospects")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ProspectsEntity, 0, null, null, null, null, "Prospects", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'RapsUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathRapsUpload
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<RapsUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RapsUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("RapsUpload")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.RapsUploadEntity, 0, null, null, null, null, "RapsUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Referral' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathReferral
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ReferralEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ReferralEntityFactory))),
					(IEntityRelation)GetRelationsForField("Referral")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ReferralEntity, 0, null, null, null, null, "Referral", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'RefundRequest' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathRefundRequest_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<RefundRequestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RefundRequestEntityFactory))),
					(IEntityRelation)GetRelationsForField("RefundRequest_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.RefundRequestEntity, 0, null, null, null, null, "RefundRequest_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'RefundRequest' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathRefundRequest
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<RefundRequestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RefundRequestEntityFactory))),
					(IEntityRelation)GetRelationsForField("RefundRequest")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.RefundRequestEntity, 0, null, null, null, null, "RefundRequest", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'RequiredTest' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathRequiredTest
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<RequiredTestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RequiredTestEntityFactory))),
					(IEntityRelation)GetRelationsForField("RequiredTest")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.RequiredTestEntity, 0, null, null, null, null, "RequiredTest", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SalesRepPodAssigments' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSalesRepPodAssigments
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<SalesRepPodAssigmentsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SalesRepPodAssigmentsEntityFactory))),
					(IEntityRelation)GetRelationsForField("SalesRepPodAssigments")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.SalesRepPodAssigmentsEntity, 0, null, null, null, null, "SalesRepPodAssigments", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ScheduleTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathScheduleTemplate_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ScheduleTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ScheduleTemplateEntityFactory))),
					(IEntityRelation)GetRelationsForField("ScheduleTemplate_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ScheduleTemplateEntity, 0, null, null, null, null, "ScheduleTemplate_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ScheduleTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathScheduleTemplate
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ScheduleTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ScheduleTemplateEntityFactory))),
					(IEntityRelation)GetRelationsForField("ScheduleTemplate")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ScheduleTemplateEntity, 0, null, null, null, null, "ScheduleTemplate", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Seminars' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSeminars
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<SeminarsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SeminarsEntityFactory))),
					(IEntityRelation)GetRelationsForField("Seminars")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.SeminarsEntity, 0, null, null, null, null, "Seminars", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ShippingDetail' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathShippingDetail_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ShippingDetailEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShippingDetailEntityFactory))),
					(IEntityRelation)GetRelationsForField("ShippingDetail_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ShippingDetailEntity, 0, null, null, null, null, "ShippingDetail_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ShippingDetail' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathShippingDetail
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<ShippingDetailEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShippingDetailEntityFactory))),
					(IEntityRelation)GetRelationsForField("ShippingDetail")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ShippingDetailEntity, 0, null, null, null, null, "ShippingDetail", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SourceCodeChangeLog' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSourceCodeChangeLog
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<SourceCodeChangeLogEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SourceCodeChangeLogEntityFactory))),
					(IEntityRelation)GetRelationsForField("SourceCodeChangeLog")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.SourceCodeChangeLogEntity, 0, null, null, null, null, "SourceCodeChangeLog", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'StaffEventScheduleUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathStaffEventScheduleUpload
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<StaffEventScheduleUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(StaffEventScheduleUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("StaffEventScheduleUpload")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.StaffEventScheduleUploadEntity, 0, null, null, null, null, "StaffEventScheduleUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SurveyAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSurveyAnswer_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<SurveyAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyAnswerEntityFactory))),
					(IEntityRelation)GetRelationsForField("SurveyAnswer_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.SurveyAnswerEntity, 0, null, null, null, null, "SurveyAnswer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SurveyAnswer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSurveyAnswer
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<SurveyAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyAnswerEntityFactory))),
					(IEntityRelation)GetRelationsForField("SurveyAnswer")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.SurveyAnswerEntity, 0, null, null, null, null, "SurveyAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SurveyTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSurveyTemplate_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory))),
					(IEntityRelation)GetRelationsForField("SurveyTemplate_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.SurveyTemplateEntity, 0, null, null, null, null, "SurveyTemplate_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SurveyTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSurveyTemplate
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory))),
					(IEntityRelation)GetRelationsForField("SurveyTemplate")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.SurveyTemplateEntity, 0, null, null, null, null, "SurveyTemplate", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SuspectConditionUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSuspectConditionUpload
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<SuspectConditionUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SuspectConditionUploadEntityFactory))),
					(IEntityRelation)GetRelationsForField("SuspectConditionUpload")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.SuspectConditionUploadEntity, 0, null, null, null, null, "SuspectConditionUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SystemGeneratedCallQueueCriteria' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSystemGenertedCallQueueCriteria__
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<SystemGeneratedCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SystemGeneratedCallQueueCriteriaEntityFactory))),
					(IEntityRelation)GetRelationsForField("SystemGenertedCallQueueCriteria__")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.SystemGeneratedCallQueueCriteriaEntity, 0, null, null, null, null, "SystemGenertedCallQueueCriteria__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SystemGeneratedCallQueueCriteria' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSystemGenertedCallQueueCriteria_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<SystemGeneratedCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SystemGeneratedCallQueueCriteriaEntityFactory))),
					(IEntityRelation)GetRelationsForField("SystemGenertedCallQueueCriteria_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.SystemGeneratedCallQueueCriteriaEntity, 0, null, null, null, null, "SystemGenertedCallQueueCriteria_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SystemGeneratedCallQueueCriteria' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSystemGenertedCallQueueCriteria
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<SystemGeneratedCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SystemGeneratedCallQueueCriteriaEntityFactory))),
					(IEntityRelation)GetRelationsForField("SystemGenertedCallQueueCriteria")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.SystemGeneratedCallQueueCriteriaEntity, 0, null, null, null, null, "SystemGenertedCallQueueCriteria", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TaskDetails' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTaskDetails__
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<TaskDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TaskDetailsEntityFactory))),
					(IEntityRelation)GetRelationsForField("TaskDetails__")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TaskDetailsEntity, 0, null, null, null, null, "TaskDetails__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TaskDetails' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTaskDetails_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<TaskDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TaskDetailsEntityFactory))),
					(IEntityRelation)GetRelationsForField("TaskDetails_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TaskDetailsEntity, 0, null, null, null, null, "TaskDetails_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TaskDetails' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTaskDetails
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<TaskDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TaskDetailsEntityFactory))),
					(IEntityRelation)GetRelationsForField("TaskDetails")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TaskDetailsEntity, 0, null, null, null, null, "TaskDetails", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Territory' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTerritory
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<TerritoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TerritoryEntityFactory))),
					(IEntityRelation)GetRelationsForField("Territory")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TerritoryEntity, 0, null, null, null, null, "Territory", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TestHcpcsCode' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestHcpcsCode_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<TestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestHcpcsCodeEntityFactory))),
					(IEntityRelation)GetRelationsForField("TestHcpcsCode_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestHcpcsCodeEntity, 0, null, null, null, null, "TestHcpcsCode_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TestHcpcsCode' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestHcpcsCode
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<TestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestHcpcsCodeEntityFactory))),
					(IEntityRelation)GetRelationsForField("TestHcpcsCode")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestHcpcsCodeEntity, 0, null, null, null, null, "TestHcpcsCode", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TestNotPerformed' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestNotPerformed_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<TestNotPerformedEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestNotPerformedEntityFactory))),
					(IEntityRelation)GetRelationsForField("TestNotPerformed_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestNotPerformedEntity, 0, null, null, null, null, "TestNotPerformed_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TestNotPerformed' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestNotPerformed
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<TestNotPerformedEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestNotPerformedEntityFactory))),
					(IEntityRelation)GetRelationsForField("TestNotPerformed")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestNotPerformedEntity, 0, null, null, null, null, "TestNotPerformed", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TestNotPerformedReason' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestNotPerformedReason
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<TestNotPerformedReasonEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestNotPerformedReasonEntityFactory))),
					(IEntityRelation)GetRelationsForField("TestNotPerformedReason")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestNotPerformedReasonEntity, 0, null, null, null, null, "TestNotPerformedReason", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TestPerformedExternally' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestPerformedExternally_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<TestPerformedExternallyEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestPerformedExternallyEntityFactory))),
					(IEntityRelation)GetRelationsForField("TestPerformedExternally_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestPerformedExternallyEntity, 0, null, null, null, null, "TestPerformedExternally_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TestPerformedExternally' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestPerformedExternally
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<TestPerformedExternallyEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestPerformedExternallyEntityFactory))),
					(IEntityRelation)GetRelationsForField("TestPerformedExternally")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestPerformedExternallyEntity, 0, null, null, null, null, "TestPerformedExternally", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'UncontactedCustomerCallQueue' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathUncontactedCustomerCallQueue
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<UncontactedCustomerCallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(UncontactedCustomerCallQueueEntityFactory))),
					(IEntityRelation)GetRelationsForField("UncontactedCustomerCallQueue")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.UncontactedCustomerCallQueueEntity, 0, null, null, null, null, "UncontactedCustomerCallQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'UploadZipInfo' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathUploadZipInfo
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<UploadZipInfoEntity>(EntityFactoryCache2.GetEntityFactory(typeof(UploadZipInfoEntityFactory))),
					(IEntityRelation)GetRelationsForField("UploadZipInfo")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.UploadZipInfoEntity, 0, null, null, null, null, "UploadZipInfo", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'User' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathUser__
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<UserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(UserEntityFactory))),
					(IEntityRelation)GetRelationsForField("User__")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.UserEntity, 0, null, null, null, null, "User__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}
		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'User' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathUser_
		{
			get
			{
				return new PrefetchPathElement2( new EntityCollection<UserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(UserEntityFactory))),
					(IEntityRelation)GetRelationsForField("User_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.UserEntity, 0, null, null, null, null, "User_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaFillEventCallQueue
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.FillEventCallQueueEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "FillEventCallQueue_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaFillEventCallQueue"), null, "AccountCollectionViaFillEventCallQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaMailRoundCallQueue
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.MailRoundCallQueueEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "MailRoundCallQueue_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaMailRoundCallQueue"), null, "AccountCollectionViaMailRoundCallQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaEligibilityUpload
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EligibilityUploadEntityUsingUploadedBy;
				intermediateRelation.SetAliases(string.Empty, "EligibilityUpload_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaEligibilityUpload"), null, "AccountCollectionViaEligibilityUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaCorporateUpload
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CorporateUploadEntityUsingUploadedBy;
				intermediateRelation.SetAliases(string.Empty, "CorporateUpload_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaCorporateUpload"), null, "AccountCollectionViaCorporateUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaHealthPlanCallQueueCriteria
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HealthPlanCallQueueCriteriaEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "HealthPlanCallQueueCriteria_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaHealthPlanCallQueueCriteria"), null, "AccountCollectionViaHealthPlanCallQueueCriteria", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaCallQueueCustomer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaCallQueueCustomer_"), null, "AccountCollectionViaCallQueueCustomer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaCallQueueCustomer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingAssignedToOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaCallQueueCustomer"), null, "AccountCollectionViaCallQueueCustomer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaCallQueueCustomer__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaCallQueueCustomer__"), null, "AccountCollectionViaCallQueueCustomer__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaHealthPlanRevenue
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HealthPlanRevenueEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "HealthPlanRevenue_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaHealthPlanRevenue"), null, "AccountCollectionViaHealthPlanRevenue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaHealthPlanRevenue_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HealthPlanRevenueEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "HealthPlanRevenue_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaHealthPlanRevenue_"), null, "AccountCollectionViaHealthPlanRevenue_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaCorporateTag_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CorporateTagEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "CorporateTag_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaCorporateTag_"), null, "AccountCollectionViaCorporateTag_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaLanguageBarrierCallQueue
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.LanguageBarrierCallQueueEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "LanguageBarrierCallQueue_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaLanguageBarrierCallQueue"), null, "AccountCollectionViaLanguageBarrierCallQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaEventNote
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventNoteEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventNote_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaEventNote"), null, "AccountCollectionViaEventNote", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaCampaign
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CampaignEntityUsingCreatedby;
				intermediateRelation.SetAliases(string.Empty, "Campaign_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaCampaign"), null, "AccountCollectionViaCampaign", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaEventNote_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventNoteEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "EventNote_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaEventNote_"), null, "AccountCollectionViaEventNote_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaCampaign_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CampaignEntityUsingModifiedby;
				intermediateRelation.SetAliases(string.Empty, "Campaign_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaCampaign_"), null, "AccountCollectionViaCampaign_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaHealthPlanCallQueueCriteria_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HealthPlanCallQueueCriteriaEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "HealthPlanCallQueueCriteria_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaHealthPlanCallQueueCriteria_"), null, "AccountCollectionViaHealthPlanCallQueueCriteria_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaCorporateTag
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CorporateTagEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "CorporateTag_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaCorporateTag"), null, "AccountCollectionViaCorporateTag", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaCallQueueCustomTag
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomTagEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomTag_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaCallQueueCustomTag"), null, "AccountCollectionViaCallQueueCustomTag", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaCalls
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallsEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Calls_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaCalls"), null, "AccountCollectionViaCalls", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaCallRoundCallQueue
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallRoundCallQueueEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "CallRoundCallQueue_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaCallRoundCallQueue"), null, "AccountCollectionViaCallRoundCallQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaAccountHraChatQuestionnaire_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.AccountHraChatQuestionnaireEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "AccountHraChatQuestionnaire_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaAccountHraChatQuestionnaire_"), null, "AccountCollectionViaAccountHraChatQuestionnaire_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaAccountHraChatQuestionnaire
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.AccountHraChatQuestionnaireEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "AccountHraChatQuestionnaire_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaAccountHraChatQuestionnaire"), null, "AccountCollectionViaAccountHraChatQuestionnaire", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaUncontactedCustomerCallQueue
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.UncontactedCustomerCallQueueEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "UncontactedCustomerCallQueue_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaUncontactedCustomerCallQueue"), null, "AccountCollectionViaUncontactedCustomerCallQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaCustomEventNotification
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomEventNotificationEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomEventNotification_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaCustomEventNotification"), null, "AccountCollectionViaCustomEventNotification", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaNoShowCallQueue
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.NoShowCallQueueEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "NoShowCallQueue_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaNoShowCallQueue"), null, "AccountCollectionViaNoShowCallQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaAccountCallCenterOrganization_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.AccountCallCenterOrganizationEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "AccountCallCenterOrganization_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaAccountCallCenterOrganization_"), null, "AccountCollectionViaAccountCallCenterOrganization_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Account' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCollectionViaAccountCallCenterOrganization
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.AccountCallCenterOrganizationEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "AccountCallCenterOrganization_");
				return new PrefetchPathElement2(new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountEntity, 0, null, null, GetRelationsForField("AccountCollectionViaAccountCallCenterOrganization"), null, "AccountCollectionViaAccountCallCenterOrganization", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Activity' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathActivityCollectionViaOrgRoleUserActivity
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.OrgRoleUserActivityEntityUsingOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "OrgRoleUserActivity_");
				return new PrefetchPathElement2(new EntityCollection<ActivityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ActivityEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ActivityEntity, 0, null, null, GetRelationsForField("ActivityCollectionViaOrgRoleUserActivity"), null, "ActivityCollectionViaOrgRoleUserActivity", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ActivityType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathActivityTypeCollectionViaCallQueueCustomer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingAssignedToOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<ActivityTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ActivityTypeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ActivityTypeEntity, 0, null, null, GetRelationsForField("ActivityTypeCollectionViaCallQueueCustomer"), null, "ActivityTypeCollectionViaCallQueueCustomer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ActivityType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathActivityTypeCollectionViaCallQueueCustomer__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<ActivityTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ActivityTypeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ActivityTypeEntity, 0, null, null, GetRelationsForField("ActivityTypeCollectionViaCallQueueCustomer__"), null, "ActivityTypeCollectionViaCallQueueCustomer__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ActivityType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathActivityTypeCollectionViaCallQueueCustomer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<ActivityTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ActivityTypeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ActivityTypeEntity, 0, null, null, GetRelationsForField("ActivityTypeCollectionViaCallQueueCustomer_"), null, "ActivityTypeCollectionViaCallQueueCustomer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Address' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAddressCollectionViaCustomerPrimaryCarePhysician_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerPrimaryCarePhysician_");
				return new PrefetchPathElement2(new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AddressEntity, 0, null, null, GetRelationsForField("AddressCollectionViaCustomerPrimaryCarePhysician_"), null, "AddressCollectionViaCustomerPrimaryCarePhysician_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Address' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAddressCollectionViaProspects
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ProspectsEntityUsingOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Prospects_");
				return new PrefetchPathElement2(new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AddressEntity, 0, null, null, GetRelationsForField("AddressCollectionViaProspects"), null, "AddressCollectionViaProspects", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Address' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAddressCollectionViaCustomerPrimaryCarePhysician___
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerPrimaryCarePhysician_");
				return new PrefetchPathElement2(new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AddressEntity, 0, null, null, GetRelationsForField("AddressCollectionViaCustomerPrimaryCarePhysician___"), null, "AddressCollectionViaCustomerPrimaryCarePhysician___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Address' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAddressCollectionViaCustomerPrimaryCarePhysician____
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingPcpAddressVerifiedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerPrimaryCarePhysician_");
				return new PrefetchPathElement2(new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AddressEntity, 0, null, null, GetRelationsForField("AddressCollectionViaCustomerPrimaryCarePhysician____"), null, "AddressCollectionViaCustomerPrimaryCarePhysician____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Address' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAddressCollectionViaUser
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.UserEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "User_");
				return new PrefetchPathElement2(new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AddressEntity, 0, null, null, GetRelationsForField("AddressCollectionViaUser"), null, "AddressCollectionViaUser", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Address' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAddressCollectionViaUser_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.UserEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "User_");
				return new PrefetchPathElement2(new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AddressEntity, 0, null, null, GetRelationsForField("AddressCollectionViaUser_"), null, "AddressCollectionViaUser_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Address' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAddressCollectionViaShippingDetail
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ShippingDetailEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "ShippingDetail_");
				return new PrefetchPathElement2(new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AddressEntity, 0, null, null, GetRelationsForField("AddressCollectionViaShippingDetail"), null, "AddressCollectionViaShippingDetail", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Address' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAddressCollectionViaHostPayment
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HostPaymentEntityUsingCreatorOrganizationRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "HostPayment_");
				return new PrefetchPathElement2(new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AddressEntity, 0, null, null, GetRelationsForField("AddressCollectionViaHostPayment"), null, "AddressCollectionViaHostPayment", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Address' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAddressCollectionViaShippingDetail_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ShippingDetailEntityUsingShippedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "ShippingDetail_");
				return new PrefetchPathElement2(new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AddressEntity, 0, null, null, GetRelationsForField("AddressCollectionViaShippingDetail_"), null, "AddressCollectionViaShippingDetail_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Address' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAddressCollectionViaCustomerPrimaryCarePhysician
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingUpdatedByOrganizationRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerPrimaryCarePhysician_");
				return new PrefetchPathElement2(new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AddressEntity, 0, null, null, GetRelationsForField("AddressCollectionViaCustomerPrimaryCarePhysician"), null, "AddressCollectionViaCustomerPrimaryCarePhysician", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Address' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAddressCollectionViaCustomerPrimaryCarePhysician__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingUpdatedByOrganizationRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerPrimaryCarePhysician_");
				return new PrefetchPathElement2(new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AddressEntity, 0, null, null, GetRelationsForField("AddressCollectionViaCustomerPrimaryCarePhysician__"), null, "AddressCollectionViaCustomerPrimaryCarePhysician__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Address' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAddressCollectionViaCustomerPrimaryCarePhysician_____
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingPcpAddressVerifiedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerPrimaryCarePhysician_");
				return new PrefetchPathElement2(new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AddressEntity, 0, null, null, GetRelationsForField("AddressCollectionViaCustomerPrimaryCarePhysician_____"), null, "AddressCollectionViaCustomerPrimaryCarePhysician_____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Afadvertiser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAfadvertiserCollectionViaAfcampaign
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.AfcampaignEntityUsingShellId;
				intermediateRelation.SetAliases(string.Empty, "Afcampaign_");
				return new PrefetchPathElement2(new EntityCollection<AfadvertiserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AfadvertiserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AfadvertiserEntity, 0, null, null, GetRelationsForField("AfadvertiserCollectionViaAfcampaign"), null, "AfadvertiserCollectionViaAfcampaign", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Afadvertiser' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAfadvertiserCollectionViaAfcampaign_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.AfcampaignEntityUsingRoleId;
				intermediateRelation.SetAliases(string.Empty, "Afcampaign_");
				return new PrefetchPathElement2(new EntityCollection<AfadvertiserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AfadvertiserEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AfadvertiserEntity, 0, null, null, GetRelationsForField("AfadvertiserCollectionViaAfcampaign_"), null, "AfadvertiserCollectionViaAfcampaign_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'AfaffiliateCampaign' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAfaffiliateCampaignCollectionViaEventCustomers
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventCustomers_");
				return new PrefetchPathElement2(new EntityCollection<AfaffiliateCampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AfaffiliateCampaignEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AfaffiliateCampaignEntity, 0, null, null, GetRelationsForField("AfaffiliateCampaignCollectionViaEventCustomers"), null, "AfaffiliateCampaignCollectionViaEventCustomers", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'AfaffiliateCampaign' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAfaffiliateCampaignCollectionViaEventCustomers_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingConfirmedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomers_");
				return new PrefetchPathElement2(new EntityCollection<AfaffiliateCampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AfaffiliateCampaignEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AfaffiliateCampaignEntity, 0, null, null, GetRelationsForField("AfaffiliateCampaignCollectionViaEventCustomers_"), null, "AfaffiliateCampaignCollectionViaEventCustomers_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'AfaffiliateCampaignMarketingMaterial' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAfaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ProspectCustomerEntityUsingContactedBy;
				intermediateRelation.SetAliases(string.Empty, "ProspectCustomer_");
				return new PrefetchPathElement2(new EntityCollection<AfaffiliateCampaignMarketingMaterialEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AfaffiliateCampaignMarketingMaterialEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AfaffiliateCampaignMarketingMaterialEntity, 0, null, null, GetRelationsForField("AfaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer"), null, "AfaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallCenterTeam' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallCenterTeamCollectionViaCallCenterAgentTeam
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallCenterAgentTeamEntityUsingAgentId;
				intermediateRelation.SetAliases(string.Empty, "CallCenterAgentTeam_");
				return new PrefetchPathElement2(new EntityCollection<CallCenterTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterTeamEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallCenterTeamEntity, 0, null, null, GetRelationsForField("CallCenterTeamCollectionViaCallCenterAgentTeam"), null, "CallCenterTeamCollectionViaCallCenterAgentTeam", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallCenterTeam' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallCenterTeamCollectionViaCallCenterAgentTeamLog
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallCenterAgentTeamLogEntityUsingAgentId;
				intermediateRelation.SetAliases(string.Empty, "CallCenterAgentTeamLog_");
				return new PrefetchPathElement2(new EntityCollection<CallCenterTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterTeamEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallCenterTeamEntity, 0, null, null, GetRelationsForField("CallCenterTeamCollectionViaCallCenterAgentTeamLog"), null, "CallCenterTeamCollectionViaCallCenterAgentTeamLog", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallCenterTeam' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HealthPlanCriteriaTeamAssignmentEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "HealthPlanCriteriaTeamAssignment_");
				return new PrefetchPathElement2(new EntityCollection<CallCenterTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterTeamEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallCenterTeamEntity, 0, null, null, GetRelationsForField("CallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_"), null, "CallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallCenterTeam' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HealthPlanCriteriaTeamAssignmentEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "HealthPlanCriteriaTeamAssignment_");
				return new PrefetchPathElement2(new EntityCollection<CallCenterTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterTeamEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallCenterTeamEntity, 0, null, null, GetRelationsForField("CallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment"), null, "CallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallCenterTeam' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallCenterTeamCollectionViaCallCenterAgentTeamLog_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallCenterAgentTeamLogEntityUsingAssignedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallCenterAgentTeamLog_");
				return new PrefetchPathElement2(new EntityCollection<CallCenterTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterTeamEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallCenterTeamEntity, 0, null, null, GetRelationsForField("CallCenterTeamCollectionViaCallCenterAgentTeamLog_"), null, "CallCenterTeamCollectionViaCallCenterAgentTeamLog_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallCenterTeam' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallCenterTeamCollectionViaCallCenterAgentTeamLog__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallCenterAgentTeamLogEntityUsingRemovedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallCenterAgentTeamLog_");
				return new PrefetchPathElement2(new EntityCollection<CallCenterTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterTeamEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallCenterTeamEntity, 0, null, null, GetRelationsForField("CallCenterTeamCollectionViaCallCenterAgentTeamLog__"), null, "CallCenterTeamCollectionViaCallCenterAgentTeamLog__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallQueue' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallQueueCollectionViaCallQueueCustomer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallQueueEntity, 0, null, null, GetRelationsForField("CallQueueCollectionViaCallQueueCustomer_"), null, "CallQueueCollectionViaCallQueueCustomer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallQueue' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallQueueCollectionViaHealthPlanCallQueueCriteria__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HealthPlanCallQueueCriteriaEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "HealthPlanCallQueueCriteria_");
				return new PrefetchPathElement2(new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallQueueEntity, 0, null, null, GetRelationsForField("CallQueueCollectionViaHealthPlanCallQueueCriteria__"), null, "CallQueueCollectionViaHealthPlanCallQueueCriteria__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallQueue' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallQueueCollectionViaCallQueueCustomer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingAssignedToOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallQueueEntity, 0, null, null, GetRelationsForField("CallQueueCollectionViaCallQueueCustomer"), null, "CallQueueCollectionViaCallQueueCustomer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallQueue' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallQueueCollectionViaCalls
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallsEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Calls_");
				return new PrefetchPathElement2(new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallQueueEntity, 0, null, null, GetRelationsForField("CallQueueCollectionViaCalls"), null, "CallQueueCollectionViaCalls", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallQueue' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallQueueCollectionViaCallQueueAssignment
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueAssignmentEntityUsingAssignedOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueAssignment_");
				return new PrefetchPathElement2(new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallQueueEntity, 0, null, null, GetRelationsForField("CallQueueCollectionViaCallQueueAssignment"), null, "CallQueueCollectionViaCallQueueAssignment", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallQueue' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallQueueCollectionViaSystemGenertedCallQueueCriteria__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.SystemGeneratedCallQueueCriteriaEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "SystemGeneratedCallQueueCriteria_");
				return new PrefetchPathElement2(new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallQueueEntity, 0, null, null, GetRelationsForField("CallQueueCollectionViaSystemGenertedCallQueueCriteria__"), null, "CallQueueCollectionViaSystemGenertedCallQueueCriteria__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallQueue' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallQueueCollectionViaSystemGenertedCallQueueCriteria_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.SystemGeneratedCallQueueCriteriaEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "SystemGeneratedCallQueueCriteria_");
				return new PrefetchPathElement2(new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallQueueEntity, 0, null, null, GetRelationsForField("CallQueueCollectionViaSystemGenertedCallQueueCriteria_"), null, "CallQueueCollectionViaSystemGenertedCallQueueCriteria_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallQueue' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallQueueCollectionViaCallQueueCustomer__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallQueueEntity, 0, null, null, GetRelationsForField("CallQueueCollectionViaCallQueueCustomer__"), null, "CallQueueCollectionViaCallQueueCustomer__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallQueue' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallQueueCollectionViaHealthPlanCallQueueCriteria_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HealthPlanCallQueueCriteriaEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "HealthPlanCallQueueCriteria_");
				return new PrefetchPathElement2(new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallQueueEntity, 0, null, null, GetRelationsForField("CallQueueCollectionViaHealthPlanCallQueueCriteria_"), null, "CallQueueCollectionViaHealthPlanCallQueueCriteria_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallQueue' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallQueueCollectionViaSystemGenertedCallQueueCriteria
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.SystemGeneratedCallQueueCriteriaEntityUsingAssignedToOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "SystemGeneratedCallQueueCriteria_");
				return new PrefetchPathElement2(new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallQueueEntity, 0, null, null, GetRelationsForField("CallQueueCollectionViaSystemGenertedCallQueueCriteria"), null, "CallQueueCollectionViaSystemGenertedCallQueueCriteria", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallQueueCriteria' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallQueueCriteriaCollectionViaCallQueueCustomer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingAssignedToOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<CallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueCriteriaEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallQueueCriteriaEntity, 0, null, null, GetRelationsForField("CallQueueCriteriaCollectionViaCallQueueCustomer"), null, "CallQueueCriteriaCollectionViaCallQueueCustomer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallQueueCriteria' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallQueueCriteriaCollectionViaCallQueueCustomer__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<CallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueCriteriaEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallQueueCriteriaEntity, 0, null, null, GetRelationsForField("CallQueueCriteriaCollectionViaCallQueueCustomer__"), null, "CallQueueCriteriaCollectionViaCallQueueCustomer__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallQueueCriteria' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallQueueCriteriaCollectionViaCallQueueCustomer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<CallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueCriteriaEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallQueueCriteriaEntity, 0, null, null, GetRelationsForField("CallQueueCriteriaCollectionViaCallQueueCustomer_"), null, "CallQueueCriteriaCollectionViaCallQueueCustomer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallQueueCustomer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallQueueCustomerCollectionViaCustomerCallQueueCallAttempt
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerCallQueueCallAttemptEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerCallQueueCallAttempt_");
				return new PrefetchPathElement2(new EntityCollection<CallQueueCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueCustomerEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallQueueCustomerEntity, 0, null, null, GetRelationsForField("CallQueueCustomerCollectionViaCustomerCallQueueCallAttempt"), null, "CallQueueCustomerCollectionViaCustomerCallQueueCallAttempt", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Calls' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallsCollectionViaCustomerCallQueueCallAttempt
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerCallQueueCallAttemptEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerCallQueueCallAttempt_");
				return new PrefetchPathElement2(new EntityCollection<CallsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallsEntity, 0, null, null, GetRelationsForField("CallsCollectionViaCustomerCallQueueCallAttempt"), null, "CallsCollectionViaCustomerCallQueueCallAttempt", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Calls' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallsCollectionViaPreAssessmentCustomerCallQueueCallAttempt
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.PreAssessmentCustomerCallQueueCallAttemptEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "PreAssessmentCustomerCallQueueCallAttempt_");
				return new PrefetchPathElement2(new EntityCollection<CallsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallsEntity, 0, null, null, GetRelationsForField("CallsCollectionViaPreAssessmentCustomerCallQueueCallAttempt"), null, "CallsCollectionViaPreAssessmentCustomerCallQueueCallAttempt", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallUpload' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallUploadCollectionViaDirectMail
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.DirectMailEntityUsingMailedBy;
				intermediateRelation.SetAliases(string.Empty, "DirectMail_");
				return new PrefetchPathElement2(new EntityCollection<CallUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallUploadEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallUploadEntity, 0, null, null, GetRelationsForField("CallUploadCollectionViaDirectMail"), null, "CallUploadCollectionViaDirectMail", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Campaign' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCampaignCollectionViaCallQueueCustomer__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CampaignEntity, 0, null, null, GetRelationsForField("CampaignCollectionViaCallQueueCustomer__"), null, "CampaignCollectionViaCallQueueCustomer__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Campaign' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCampaignCollectionViaCampaignAssignment
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CampaignAssignmentEntityUsingAssignedToOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CampaignAssignment_");
				return new PrefetchPathElement2(new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CampaignEntity, 0, null, null, GetRelationsForField("CampaignCollectionViaCampaignAssignment"), null, "CampaignCollectionViaCampaignAssignment", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Campaign' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCampaignCollectionViaCallQueueCustomer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingAssignedToOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CampaignEntity, 0, null, null, GetRelationsForField("CampaignCollectionViaCallQueueCustomer"), null, "CampaignCollectionViaCallQueueCustomer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Campaign' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCampaignCollectionViaCampaignActivity_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CampaignActivityEntityUsingModifiedby;
				intermediateRelation.SetAliases(string.Empty, "CampaignActivity_");
				return new PrefetchPathElement2(new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CampaignEntity, 0, null, null, GetRelationsForField("CampaignCollectionViaCampaignActivity_"), null, "CampaignCollectionViaCampaignActivity_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Campaign' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCampaignCollectionViaHealthPlanCallQueueCriteria_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HealthPlanCallQueueCriteriaEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "HealthPlanCallQueueCriteria_");
				return new PrefetchPathElement2(new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CampaignEntity, 0, null, null, GetRelationsForField("CampaignCollectionViaHealthPlanCallQueueCriteria_"), null, "CampaignCollectionViaHealthPlanCallQueueCriteria_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Campaign' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCampaignCollectionViaCampaignActivity
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CampaignActivityEntityUsingCreatedby;
				intermediateRelation.SetAliases(string.Empty, "CampaignActivity_");
				return new PrefetchPathElement2(new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CampaignEntity, 0, null, null, GetRelationsForField("CampaignCollectionViaCampaignActivity"), null, "CampaignCollectionViaCampaignActivity", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Campaign' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCampaignCollectionViaCalls
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallsEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Calls_");
				return new PrefetchPathElement2(new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CampaignEntity, 0, null, null, GetRelationsForField("CampaignCollectionViaCalls"), null, "CampaignCollectionViaCalls", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Campaign' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCampaignCollectionViaEventCustomers_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingConfirmedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomers_");
				return new PrefetchPathElement2(new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CampaignEntity, 0, null, null, GetRelationsForField("CampaignCollectionViaEventCustomers_"), null, "CampaignCollectionViaEventCustomers_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Campaign' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCampaignCollectionViaHealthPlanCallQueueCriteria
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HealthPlanCallQueueCriteriaEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "HealthPlanCallQueueCriteria_");
				return new PrefetchPathElement2(new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CampaignEntity, 0, null, null, GetRelationsForField("CampaignCollectionViaHealthPlanCallQueueCriteria"), null, "CampaignCollectionViaHealthPlanCallQueueCriteria", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Campaign' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCampaignCollectionViaDirectMail
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.DirectMailEntityUsingMailedBy;
				intermediateRelation.SetAliases(string.Empty, "DirectMail_");
				return new PrefetchPathElement2(new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CampaignEntity, 0, null, null, GetRelationsForField("CampaignCollectionViaDirectMail"), null, "CampaignCollectionViaDirectMail", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Campaign' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCampaignCollectionViaCallQueueCustomer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CampaignEntity, 0, null, null, GetRelationsForField("CampaignCollectionViaCallQueueCustomer_"), null, "CampaignCollectionViaCallQueueCustomer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Campaign' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCampaignCollectionViaEventCustomers
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventCustomers_");
				return new PrefetchPathElement2(new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CampaignEntity, 0, null, null, GetRelationsForField("CampaignCollectionViaEventCustomers"), null, "CampaignCollectionViaEventCustomers", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CampaignActivity' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCampaignActivityCollectionViaCampaignActivityAssignment
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CampaignActivityAssignmentEntityUsingAssignedToOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CampaignActivityAssignment_");
				return new PrefetchPathElement2(new EntityCollection<CampaignActivityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignActivityEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CampaignActivityEntity, 0, null, null, GetRelationsForField("CampaignActivityCollectionViaCampaignActivityAssignment"), null, "CampaignActivityCollectionViaCampaignActivityAssignment", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ChaperoneQuestion' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathChaperoneQuestionCollectionViaChaperoneAnswer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ChaperoneAnswerEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "ChaperoneAnswer_");
				return new PrefetchPathElement2(new EntityCollection<ChaperoneQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ChaperoneQuestionEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ChaperoneQuestionEntity, 0, null, null, GetRelationsForField("ChaperoneQuestionCollectionViaChaperoneAnswer"), null, "ChaperoneQuestionCollectionViaChaperoneAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ChaperoneQuestion' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathChaperoneQuestionCollectionViaChaperoneAnswer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ChaperoneAnswerEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "ChaperoneAnswer_");
				return new PrefetchPathElement2(new EntityCollection<ChaperoneQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ChaperoneQuestionEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ChaperoneQuestionEntity, 0, null, null, GetRelationsForField("ChaperoneQuestionCollectionViaChaperoneAnswer_"), null, "ChaperoneQuestionCollectionViaChaperoneAnswer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CheckListQuestion' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCheckListQuestionCollectionViaCheckListAnswer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CheckListAnswerEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "CheckListAnswer_");
				return new PrefetchPathElement2(new EntityCollection<CheckListQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListQuestionEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CheckListQuestionEntity, 0, null, null, GetRelationsForField("CheckListQuestionCollectionViaCheckListAnswer_"), null, "CheckListQuestionCollectionViaCheckListAnswer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CheckListQuestion' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCheckListQuestionCollectionViaCheckListAnswer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CheckListAnswerEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "CheckListAnswer_");
				return new PrefetchPathElement2(new EntityCollection<CheckListQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListQuestionEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CheckListQuestionEntity, 0, null, null, GetRelationsForField("CheckListQuestionCollectionViaCheckListAnswer"), null, "CheckListQuestionCollectionViaCheckListAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CheckListQuestion' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCheckListQuestionCollectionViaExitInterviewSignature
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ExitInterviewSignatureEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "ExitInterviewSignature_");
				return new PrefetchPathElement2(new EntityCollection<CheckListQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListQuestionEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CheckListQuestionEntity, 0, null, null, GetRelationsForField("CheckListQuestionCollectionViaExitInterviewSignature"), null, "CheckListQuestionCollectionViaExitInterviewSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'City' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCityCollectionViaAddress
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.AddressEntityUsingVerificationOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Address_");
				return new PrefetchPathElement2(new EntityCollection<CityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CityEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CityEntity, 0, null, null, GetRelationsForField("CityCollectionViaAddress"), null, "CityCollectionViaAddress", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CommunicationMode' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCommunicationModeCollectionViaEvents____
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingUpdatedByAdmin;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<CommunicationModeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CommunicationModeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CommunicationModeEntity, 0, null, null, GetRelationsForField("CommunicationModeCollectionViaEvents____"), null, "CommunicationModeCollectionViaEvents____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CommunicationMode' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCommunicationModeCollectionViaEvents
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingAssignedToOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<CommunicationModeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CommunicationModeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CommunicationModeEntity, 0, null, null, GetRelationsForField("CommunicationModeCollectionViaEvents"), null, "CommunicationModeCollectionViaEvents", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CommunicationMode' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCommunicationModeCollectionViaEvents___
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingSignOffOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<CommunicationModeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CommunicationModeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CommunicationModeEntity, 0, null, null, GetRelationsForField("CommunicationModeCollectionViaEvents___"), null, "CommunicationModeCollectionViaEvents___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CommunicationMode' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCommunicationModeCollectionViaEvents__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingEventActivityOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<CommunicationModeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CommunicationModeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CommunicationModeEntity, 0, null, null, GetRelationsForField("CommunicationModeCollectionViaEvents__"), null, "CommunicationModeCollectionViaEvents__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CommunicationMode' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCommunicationModeCollectionViaEvents_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<CommunicationModeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CommunicationModeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CommunicationModeEntity, 0, null, null, GetRelationsForField("CommunicationModeCollectionViaEvents_"), null, "CommunicationModeCollectionViaEvents_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ContactCallStatus' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathContactCallStatusCollectionViaContactCall
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ContactCallEntityUsingCreatedByRoleId;
				intermediateRelation.SetAliases(string.Empty, "ContactCall_");
				return new PrefetchPathElement2(new EntityCollection<ContactCallStatusEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContactCallStatusEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ContactCallStatusEntity, 0, null, null, GetRelationsForField("ContactCallStatusCollectionViaContactCall"), null, "ContactCallStatusCollectionViaContactCall", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ContactCallStatus' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathContactCallStatusCollectionViaContactCall_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ContactCallEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "ContactCall_");
				return new PrefetchPathElement2(new EntityCollection<ContactCallStatusEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContactCallStatusEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ContactCallStatusEntity, 0, null, null, GetRelationsForField("ContactCallStatusCollectionViaContactCall_"), null, "ContactCallStatusCollectionViaContactCall_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ContactCallStatus' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathContactCallStatusCollectionViaContactMeeting_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ContactMeetingEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "ContactMeeting_");
				return new PrefetchPathElement2(new EntityCollection<ContactCallStatusEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContactCallStatusEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ContactCallStatusEntity, 0, null, null, GetRelationsForField("ContactCallStatusCollectionViaContactMeeting_"), null, "ContactCallStatusCollectionViaContactMeeting_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ContactCallStatus' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathContactCallStatusCollectionViaContactMeeting
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ContactMeetingEntityUsingCreatedByRoleId;
				intermediateRelation.SetAliases(string.Empty, "ContactMeeting_");
				return new PrefetchPathElement2(new EntityCollection<ContactCallStatusEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContactCallStatusEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ContactCallStatusEntity, 0, null, null, GetRelationsForField("ContactCallStatusCollectionViaContactMeeting"), null, "ContactCallStatusCollectionViaContactMeeting", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Country' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCountryCollectionViaAddress
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.AddressEntityUsingVerificationOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Address_");
				return new PrefetchPathElement2(new EntityCollection<CountryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CountryEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CountryEntity, 0, null, null, GetRelationsForField("CountryCollectionViaAddress"), null, "CountryCollectionViaAddress", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CouponType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCouponTypeCollectionViaCoupons_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CouponsEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Coupons_");
				return new PrefetchPathElement2(new EntityCollection<CouponTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CouponTypeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CouponTypeEntity, 0, null, null, GetRelationsForField("CouponTypeCollectionViaCoupons_"), null, "CouponTypeCollectionViaCoupons_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CouponType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCouponTypeCollectionViaCoupons
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CouponsEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Coupons_");
				return new PrefetchPathElement2(new EntityCollection<CouponTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CouponTypeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CouponTypeEntity, 0, null, null, GetRelationsForField("CouponTypeCollectionViaCoupons"), null, "CouponTypeCollectionViaCoupons", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerEventScreeningTests' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerEventTestPhysicianEvaluationEntityUsingUpdatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerEventTestPhysicianEvaluation_");
				return new PrefetchPathElement2(new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerEventScreeningTestsEntity, 0, null, null, GetRelationsForField("CustomerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation"), null, "CustomerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerEventScreeningTests' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerEventScreeningTestsCollectionViaTestPerformedExternally_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.TestPerformedExternallyEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "TestPerformedExternally_");
				return new PrefetchPathElement2(new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerEventScreeningTestsEntity, 0, null, null, GetRelationsForField("CustomerEventScreeningTestsCollectionViaTestPerformedExternally_"), null, "CustomerEventScreeningTestsCollectionViaTestPerformedExternally_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerEventScreeningTests' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerEventScreeningTestsCollectionViaCustomerEventTestState
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerEventTestStateEntityUsingConductedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerEventTestState_");
				return new PrefetchPathElement2(new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerEventScreeningTestsEntity, 0, null, null, GetRelationsForField("CustomerEventScreeningTestsCollectionViaCustomerEventTestState"), null, "CustomerEventScreeningTestsCollectionViaCustomerEventTestState", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerEventScreeningTests' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerEventScreeningTestsCollectionViaCustomerEventTestState_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerEventTestStateEntityUsingEvaluatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerEventTestState_");
				return new PrefetchPathElement2(new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerEventScreeningTestsEntity, 0, null, null, GetRelationsForField("CustomerEventScreeningTestsCollectionViaCustomerEventTestState_"), null, "CustomerEventScreeningTestsCollectionViaCustomerEventTestState_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerEventScreeningTests' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerEventUnableScreenReasonEntityUsingUpdatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerEventUnableScreenReason_");
				return new PrefetchPathElement2(new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerEventScreeningTestsEntity, 0, null, null, GetRelationsForField("CustomerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason"), null, "CustomerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerEventScreeningTests' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerEventScreeningTestsCollectionViaCustomerEventTestState__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerEventTestStateEntityUsingUpdatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerEventTestState_");
				return new PrefetchPathElement2(new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerEventScreeningTestsEntity, 0, null, null, GetRelationsForField("CustomerEventScreeningTestsCollectionViaCustomerEventTestState__"), null, "CustomerEventScreeningTestsCollectionViaCustomerEventTestState__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerEventScreeningTests' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerEventScreeningTestsCollectionViaTestPerformedExternally
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.TestPerformedExternallyEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "TestPerformedExternally_");
				return new PrefetchPathElement2(new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerEventScreeningTestsEntity, 0, null, null, GetRelationsForField("CustomerEventScreeningTestsCollectionViaTestPerformedExternally"), null, "CustomerEventScreeningTestsCollectionViaTestPerformedExternally", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerEventScreeningTests' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerEventScreeningTestsCollectionViaCustomerEventReading
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerEventReadingEntityUsingUpdatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerEventReading_");
				return new PrefetchPathElement2(new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerEventScreeningTestsEntity, 0, null, null, GetRelationsForField("CustomerEventScreeningTestsCollectionViaCustomerEventReading"), null, "CustomerEventScreeningTestsCollectionViaCustomerEventReading", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerEventScreeningTests' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerEventScreeningTestsCollectionViaTestNotPerformed
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.TestNotPerformedEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "TestNotPerformed_");
				return new PrefetchPathElement2(new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerEventScreeningTestsEntity, 0, null, null, GetRelationsForField("CustomerEventScreeningTestsCollectionViaTestNotPerformed"), null, "CustomerEventScreeningTestsCollectionViaTestNotPerformed", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerEventScreeningTests' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerEventScreeningTestsCollectionViaTestNotPerformed_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.TestNotPerformedEntityUsingUpdatedBy;
				intermediateRelation.SetAliases(string.Empty, "TestNotPerformed_");
				return new PrefetchPathElement2(new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerEventScreeningTestsEntity, 0, null, null, GetRelationsForField("CustomerEventScreeningTestsCollectionViaTestNotPerformed_"), null, "CustomerEventScreeningTestsCollectionViaTestNotPerformed_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerHealthQuestions' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerHealthQuestionsCollectionViaCustomerHealthInfo
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerHealthInfoEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerHealthInfo_");
				return new PrefetchPathElement2(new EntityCollection<CustomerHealthQuestionsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthQuestionsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerHealthQuestionsEntity, 0, null, null, GetRelationsForField("CustomerHealthQuestionsCollectionViaCustomerHealthInfo"), null, "CustomerHealthQuestionsCollectionViaCustomerHealthInfo", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerHealthQuestions' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ClinicalTestQualificationCriteriaEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "ClinicalTestQualificationCriteria_");
				return new PrefetchPathElement2(new EntityCollection<CustomerHealthQuestionsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthQuestionsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerHealthQuestionsEntity, 0, null, null, GetRelationsForField("CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_"), null, "CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerHealthQuestions' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerClinicalQuestionAnswerEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerClinicalQuestionAnswer_");
				return new PrefetchPathElement2(new EntityCollection<CustomerHealthQuestionsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthQuestionsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerHealthQuestionsEntity, 0, null, null, GetRelationsForField("CustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_"), null, "CustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerHealthQuestions' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerClinicalQuestionAnswerEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerClinicalQuestionAnswer_");
				return new PrefetchPathElement2(new EntityCollection<CustomerHealthQuestionsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthQuestionsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerHealthQuestionsEntity, 0, null, null, GetRelationsForField("CustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer"), null, "CustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerHealthQuestions' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ClinicalTestQualificationCriteriaEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "ClinicalTestQualificationCriteria_");
				return new PrefetchPathElement2(new EntityCollection<CustomerHealthQuestionsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthQuestionsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerHealthQuestionsEntity, 0, null, null, GetRelationsForField("CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__"), null, "CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerHealthQuestions' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ClinicalTestQualificationCriteriaEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "ClinicalTestQualificationCriteria_");
				return new PrefetchPathElement2(new EntityCollection<CustomerHealthQuestionsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthQuestionsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerHealthQuestionsEntity, 0, null, null, GetRelationsForField("CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___"), null, "CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerHealthQuestions' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ClinicalTestQualificationCriteriaEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "ClinicalTestQualificationCriteria_");
				return new PrefetchPathElement2(new EntityCollection<CustomerHealthQuestionsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthQuestionsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerHealthQuestionsEntity, 0, null, null, GetRelationsForField("CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria"), null, "CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerHealthQuestions' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerHealthQuestionsCollectionViaCustomerHealthInfoArchive
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerHealthInfoArchiveEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerHealthInfoArchive_");
				return new PrefetchPathElement2(new EntityCollection<CustomerHealthQuestionsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthQuestionsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerHealthQuestionsEntity, 0, null, null, GetRelationsForField("CustomerHealthQuestionsCollectionViaCustomerHealthInfoArchive"), null, "CustomerHealthQuestionsCollectionViaCustomerHealthInfoArchive", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerPrimaryCarePhysician' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerPrimaryCarePhysicianEntityUsingPcpAddressVerifiedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerPrimaryCarePhysician_");
				return new PrefetchPathElement2(new EntityCollection<CustomerPrimaryCarePhysicianEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerPrimaryCarePhysicianEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerPrimaryCarePhysicianEntity, 0, null, null, GetRelationsForField("CustomerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician"), null, "CustomerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaFillEventCallQueue
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.FillEventCallQueueEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "FillEventCallQueue_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaFillEventCallQueue"), null, "CustomerProfileCollectionViaFillEventCallQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaDisqualifiedTest_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.DisqualifiedTestEntityUsingUpdatedBy;
				intermediateRelation.SetAliases(string.Empty, "DisqualifiedTest_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaDisqualifiedTest_"), null, "CustomerProfileCollectionViaDisqualifiedTest_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaCustomerEligibility_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerEligibilityEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerEligibility_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaCustomerEligibility_"), null, "CustomerProfileCollectionViaCustomerEligibility_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaEventCustomerResult_____
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingVerifiedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerResult_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaEventCustomerResult_____"), null, "CustomerProfileCollectionViaEventCustomerResult_____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaCustomerEligibility
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerEligibilityEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerEligibility_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaCustomerEligibility"), null, "CustomerProfileCollectionViaCustomerEligibility", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaLanguageBarrierCallQueue
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.LanguageBarrierCallQueueEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "LanguageBarrierCallQueue_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaLanguageBarrierCallQueue"), null, "CustomerProfileCollectionViaLanguageBarrierCallQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaEventCustomerQuestionAnswer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerQuestionAnswerEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerQuestionAnswer_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaEventCustomerQuestionAnswer"), null, "CustomerProfileCollectionViaEventCustomerQuestionAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaHospitalPartnerCustomer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HospitalPartnerCustomerEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "HospitalPartnerCustomer_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaHospitalPartnerCustomer_"), null, "CustomerProfileCollectionViaHospitalPartnerCustomer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaHospitalPartnerCustomer__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HospitalPartnerCustomerEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "HospitalPartnerCustomer_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaHospitalPartnerCustomer__"), null, "CustomerProfileCollectionViaHospitalPartnerCustomer__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaHospitalPartnerCustomer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HospitalPartnerCustomerEntityUsingCareCoordinatorOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "HospitalPartnerCustomer_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaHospitalPartnerCustomer"), null, "CustomerProfileCollectionViaHospitalPartnerCustomer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaDisqualifiedTest
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.DisqualifiedTestEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "DisqualifiedTest_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaDisqualifiedTest"), null, "CustomerProfileCollectionViaDisqualifiedTest", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaCustomerPrimaryCarePhysician_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingPcpAddressVerifiedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerPrimaryCarePhysician_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaCustomerPrimaryCarePhysician_"), null, "CustomerProfileCollectionViaCustomerPrimaryCarePhysician_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaCustomerPrimaryCarePhysician__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerPrimaryCarePhysician_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaCustomerPrimaryCarePhysician__"), null, "CustomerProfileCollectionViaCustomerPrimaryCarePhysician__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaNoShowCallQueue
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.NoShowCallQueueEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "NoShowCallQueue_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaNoShowCallQueue"), null, "CustomerProfileCollectionViaNoShowCallQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaCustomerPrimaryCarePhysician
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingUpdatedByOrganizationRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerPrimaryCarePhysician_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaCustomerPrimaryCarePhysician"), null, "CustomerProfileCollectionViaCustomerPrimaryCarePhysician", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaCallQueueCustomer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingAssignedToOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaCallQueueCustomer"), null, "CustomerProfileCollectionViaCallQueueCustomer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaCustomerHealthInfo
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerHealthInfoEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerHealthInfo_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaCustomerHealthInfo"), null, "CustomerProfileCollectionViaCustomerHealthInfo", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaCallQueueCustomer__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaCallQueueCustomer__"), null, "CustomerProfileCollectionViaCallQueueCustomer__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaCallQueueCustomer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaCallQueueCustomer_"), null, "CustomerProfileCollectionViaCallQueueCustomer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaEventCustomerResult______
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerResult_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaEventCustomerResult______"), null, "CustomerProfileCollectionViaEventCustomerResult______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaCustomerIcdCode
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerIcdCodeEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerIcdCode_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaCustomerIcdCode"), null, "CustomerProfileCollectionViaCustomerIcdCode", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaMailRoundCallQueue
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.MailRoundCallQueueEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "MailRoundCallQueue_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaMailRoundCallQueue"), null, "CustomerProfileCollectionViaMailRoundCallQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaCustomerHealthInfoArchive
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerHealthInfoArchiveEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerHealthInfoArchive_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaCustomerHealthInfoArchive"), null, "CustomerProfileCollectionViaCustomerHealthInfoArchive", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaEventCustomerQuestionAnswer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerQuestionAnswerEntityUsingUpdatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerQuestionAnswer_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaEventCustomerQuestionAnswer_"), null, "CustomerProfileCollectionViaEventCustomerQuestionAnswer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaRequiredTest
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.RequiredTestEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "RequiredTest_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaRequiredTest"), null, "CustomerProfileCollectionViaRequiredTest", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaCustomerWarmTransfer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerWarmTransferEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerWarmTransfer_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaCustomerWarmTransfer_"), null, "CustomerProfileCollectionViaCustomerWarmTransfer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaProspectCustomer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ProspectCustomerEntityUsingContactedBy;
				intermediateRelation.SetAliases(string.Empty, "ProspectCustomer_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaProspectCustomer"), null, "CustomerProfileCollectionViaProspectCustomer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaEventCustomerResult_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingCodedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerResult_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaEventCustomerResult_"), null, "CustomerProfileCollectionViaEventCustomerResult_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaEventCustomerResult__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingInvoiceDateUpdatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerResult_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaEventCustomerResult__"), null, "CustomerProfileCollectionViaEventCustomerResult__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaUncontactedCustomerCallQueue
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.UncontactedCustomerCallQueueEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "UncontactedCustomerCallQueue_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaUncontactedCustomerCallQueue"), null, "CustomerProfileCollectionViaUncontactedCustomerCallQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaCustomerWarmTransfer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerWarmTransferEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerWarmTransfer_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaCustomerWarmTransfer"), null, "CustomerProfileCollectionViaCustomerWarmTransfer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaMedication_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.MedicationEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "Medication_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaMedication_"), null, "CustomerProfileCollectionViaMedication_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaCallRoundCallQueue
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallRoundCallQueueEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "CallRoundCallQueue_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaCallRoundCallQueue"), null, "CustomerProfileCollectionViaCallRoundCallQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaCustomerTag_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerTagEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerTag_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaCustomerTag_"), null, "CustomerProfileCollectionViaCustomerTag_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaReferral
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ReferralEntityUsingReferedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Referral_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaReferral"), null, "CustomerProfileCollectionViaReferral", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaCustomerTargeted_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerTargetedEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerTargeted_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaCustomerTargeted_"), null, "CustomerProfileCollectionViaCustomerTargeted_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaCustomerTargeted
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerTargetedEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerTargeted_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaCustomerTargeted"), null, "CustomerProfileCollectionViaCustomerTargeted", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaCustomerTag
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerTagEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerTag_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaCustomerTag"), null, "CustomerProfileCollectionViaCustomerTag", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaMedication
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.MedicationEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "Medication_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaMedication"), null, "CustomerProfileCollectionViaMedication", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaEventCustomerResult________
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingChatPdfReviewedByPhysicianId;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerResult_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaEventCustomerResult________"), null, "CustomerProfileCollectionViaEventCustomerResult________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaEventCustomerResult
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerResult_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaEventCustomerResult"), null, "CustomerProfileCollectionViaEventCustomerResult", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaEventCustomerResult_______
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingChatPdfReviewedByOverreadPhysicianId;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerResult_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaEventCustomerResult_______"), null, "CustomerProfileCollectionViaEventCustomerResult_______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaDirectMail
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.DirectMailEntityUsingMailedBy;
				intermediateRelation.SetAliases(string.Empty, "DirectMail_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaDirectMail"), null, "CustomerProfileCollectionViaDirectMail", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaEventCustomerResult____
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingSignedOffBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerResult_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaEventCustomerResult____"), null, "CustomerProfileCollectionViaEventCustomerResult____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaCurrentMedication
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CurrentMedicationEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CurrentMedication_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaCurrentMedication"), null, "CustomerProfileCollectionViaCurrentMedication", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaGuardianDetails
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.GuardianDetailsEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "GuardianDetails_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaGuardianDetails"), null, "CustomerProfileCollectionViaGuardianDetails", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaEventCustomers
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventCustomers_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaEventCustomers"), null, "CustomerProfileCollectionViaEventCustomers", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaEventCustomers_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingConfirmedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomers_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaEventCustomers_"), null, "CustomerProfileCollectionViaEventCustomers_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaCustomerCallQueueCallAttempt
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerCallQueueCallAttemptEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerCallQueueCallAttempt_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaCustomerCallQueueCallAttempt"), null, "CustomerProfileCollectionViaCustomerCallQueueCallAttempt", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaEventCustomerResult___
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingRegeneratedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerResult_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaEventCustomerResult___"), null, "CustomerProfileCollectionViaEventCustomerResult___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaCustomerProfileHistory
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerProfileHistoryEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerProfileHistory_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaCustomerProfileHistory"), null, "CustomerProfileCollectionViaCustomerProfileHistory", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.PreAssessmentCustomerCallQueueCallAttemptEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "PreAssessmentCustomerCallQueueCallAttempt_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt"), null, "CustomerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaCustomerClinicalQuestionAnswer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerClinicalQuestionAnswerEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerClinicalQuestionAnswer_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaCustomerClinicalQuestionAnswer"), null, "CustomerProfileCollectionViaCustomerClinicalQuestionAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaCustomerClinicalQuestionAnswer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerClinicalQuestionAnswerEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerClinicalQuestionAnswer_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaCustomerClinicalQuestionAnswer_"), null, "CustomerProfileCollectionViaCustomerClinicalQuestionAnswer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileCollectionViaGuardianDetails_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.GuardianDetailsEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "GuardianDetails_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, GetRelationsForField("CustomerProfileCollectionViaGuardianDetails_"), null, "CustomerProfileCollectionViaGuardianDetails_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfileHistory' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileHistoryCollectionViaEventCustomers_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingConfirmedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomers_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileHistoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileHistoryEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileHistoryEntity, 0, null, null, GetRelationsForField("CustomerProfileHistoryCollectionViaEventCustomers_"), null, "CustomerProfileHistoryCollectionViaEventCustomers_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfileHistory' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfileHistoryCollectionViaEventCustomers
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventCustomers_");
				return new PrefetchPathElement2(new EntityCollection<CustomerProfileHistoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileHistoryEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileHistoryEntity, 0, null, null, GetRelationsForField("CustomerProfileHistoryCollectionViaEventCustomers"), null, "CustomerProfileHistoryCollectionViaEventCustomers", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerRegistrationNotes' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerRegistrationNotesCollectionViaEventAppointmentCancellationLog
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventAppointmentCancellationLogEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventAppointmentCancellationLog_");
				return new PrefetchPathElement2(new EntityCollection<CustomerRegistrationNotesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerRegistrationNotesEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerRegistrationNotesEntity, 0, null, null, GetRelationsForField("CustomerRegistrationNotesCollectionViaEventAppointmentCancellationLog"), null, "CustomerRegistrationNotesCollectionViaEventAppointmentCancellationLog", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerRegistrationNotes' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerRegistrationNotesCollectionViaEventCustomers_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingConfirmedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomers_");
				return new PrefetchPathElement2(new EntityCollection<CustomerRegistrationNotesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerRegistrationNotesEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerRegistrationNotesEntity, 0, null, null, GetRelationsForField("CustomerRegistrationNotesCollectionViaEventCustomers_"), null, "CustomerRegistrationNotesCollectionViaEventCustomers_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerRegistrationNotes' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerRegistrationNotesCollectionViaEventCustomers
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventCustomers_");
				return new PrefetchPathElement2(new EntityCollection<CustomerRegistrationNotesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerRegistrationNotesEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerRegistrationNotesEntity, 0, null, null, GetRelationsForField("CustomerRegistrationNotesCollectionViaEventCustomers"), null, "CustomerRegistrationNotesCollectionViaEventCustomers", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DirectMailType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDirectMailTypeCollectionViaDirectMail
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.DirectMailEntityUsingMailedBy;
				intermediateRelation.SetAliases(string.Empty, "DirectMail_");
				return new PrefetchPathElement2(new EntityCollection<DirectMailTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DirectMailTypeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.DirectMailTypeEntity, 0, null, null, GetRelationsForField("DirectMailTypeCollectionViaDirectMail"), null, "DirectMailTypeCollectionViaDirectMail", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DirectMailType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDirectMailTypeCollectionViaCampaignActivity
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CampaignActivityEntityUsingCreatedby;
				intermediateRelation.SetAliases(string.Empty, "CampaignActivity_");
				return new PrefetchPathElement2(new EntityCollection<DirectMailTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DirectMailTypeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.DirectMailTypeEntity, 0, null, null, GetRelationsForField("DirectMailTypeCollectionViaCampaignActivity"), null, "DirectMailTypeCollectionViaCampaignActivity", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'DirectMailType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathDirectMailTypeCollectionViaCampaignActivity_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CampaignActivityEntityUsingModifiedby;
				intermediateRelation.SetAliases(string.Empty, "CampaignActivity_");
				return new PrefetchPathElement2(new EntityCollection<DirectMailTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DirectMailTypeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.DirectMailTypeEntity, 0, null, null, GetRelationsForField("DirectMailTypeCollectionViaCampaignActivity_"), null, "DirectMailTypeCollectionViaCampaignActivity_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventActivityTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventActivityTemplateCollectionViaEventActivityTemplateMeeting
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventActivityTemplateMeetingEntityUsingResponsibleOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventActivityTemplateMeeting_");
				return new PrefetchPathElement2(new EntityCollection<EventActivityTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventActivityTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventActivityTemplateEntity, 0, null, null, GetRelationsForField("EventActivityTemplateCollectionViaEventActivityTemplateMeeting"), null, "EventActivityTemplateCollectionViaEventActivityTemplateMeeting", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventActivityTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventActivityTemplateCollectionViaEventActivityTemplateTask
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventActivityTemplateTaskEntityUsingResponsibleOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventActivityTemplateTask_");
				return new PrefetchPathElement2(new EntityCollection<EventActivityTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventActivityTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventActivityTemplateEntity, 0, null, null, GetRelationsForField("EventActivityTemplateCollectionViaEventActivityTemplateTask"), null, "EventActivityTemplateCollectionViaEventActivityTemplateTask", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventActivityTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventActivityTemplateCollectionViaEventActivityTemplateCall
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventActivityTemplateCallEntityUsingResponsibleOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventActivityTemplateCall_");
				return new PrefetchPathElement2(new EntityCollection<EventActivityTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventActivityTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventActivityTemplateEntity, 0, null, null, GetRelationsForField("EventActivityTemplateCollectionViaEventActivityTemplateCall"), null, "EventActivityTemplateCollectionViaEventActivityTemplateCall", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventActivityTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventActivityTemplateCollectionViaEventActivityTemplateEmail
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventActivityTemplateEmailEntityUsingResponsibleOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventActivityTemplateEmail_");
				return new PrefetchPathElement2(new EntityCollection<EventActivityTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventActivityTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventActivityTemplateEntity, 0, null, null, GetRelationsForField("EventActivityTemplateCollectionViaEventActivityTemplateEmail"), null, "EventActivityTemplateCollectionViaEventActivityTemplateEmail", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventAppointment' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventAppointmentCollectionViaEventCustomers
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventCustomers_");
				return new PrefetchPathElement2(new EntityCollection<EventAppointmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventAppointmentEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventAppointmentEntity, 0, null, null, GetRelationsForField("EventAppointmentCollectionViaEventCustomers"), null, "EventAppointmentCollectionViaEventCustomers", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventAppointment' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventAppointmentCollectionViaEventCustomers_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingConfirmedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomers_");
				return new PrefetchPathElement2(new EntityCollection<EventAppointmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventAppointmentEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventAppointmentEntity, 0, null, null, GetRelationsForField("EventAppointmentCollectionViaEventCustomers_"), null, "EventAppointmentCollectionViaEventCustomers_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerResult' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerResultCollectionViaCustomerResultScreeningCommunication
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerResultScreeningCommunicationEntityUsingCommunicationInitiatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerResultScreeningCommunication_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomerResultEntity, 0, null, null, GetRelationsForField("EventCustomerResultCollectionViaCustomerResultScreeningCommunication"), null, "EventCustomerResultCollectionViaCustomerResultScreeningCommunication", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerResult' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerResultCollectionViaPriorityInQueue_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.PriorityInQueueEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "PriorityInQueue_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomerResultEntity, 0, null, null, GetRelationsForField("EventCustomerResultCollectionViaPriorityInQueue_"), null, "EventCustomerResultCollectionViaPriorityInQueue_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerResult' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerResultCollectionViaKynLabValues
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.KynLabValuesEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "KynLabValues_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomerResultEntity, 0, null, null, GetRelationsForField("EventCustomerResultCollectionViaKynLabValues"), null, "EventCustomerResultCollectionViaKynLabValues", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerResult' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerResultCollectionViaCustomerResultScreeningCommunication__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerResultScreeningCommunicationEntityUsingPhysicianOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerResultScreeningCommunication_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomerResultEntity, 0, null, null, GetRelationsForField("EventCustomerResultCollectionViaCustomerResultScreeningCommunication__"), null, "EventCustomerResultCollectionViaCustomerResultScreeningCommunication__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerResult' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerResultCollectionViaCustomerResultScreeningCommunication_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerResultScreeningCommunicationEntityUsingFranchiseeAdminOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerResultScreeningCommunication_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomerResultEntity, 0, null, null, GetRelationsForField("EventCustomerResultCollectionViaCustomerResultScreeningCommunication_"), null, "EventCustomerResultCollectionViaCustomerResultScreeningCommunication_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerResult' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerResultCollectionViaCdcontentGeneratorTracking
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CdcontentGeneratorTrackingEntityUsingDownloadedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CdcontentGeneratorTracking_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomerResultEntity, 0, null, null, GetRelationsForField("EventCustomerResultCollectionViaCdcontentGeneratorTracking"), null, "EventCustomerResultCollectionViaCdcontentGeneratorTracking", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerResult' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerResultCollectionViaKynLabValues_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.KynLabValuesEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "KynLabValues_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomerResultEntity, 0, null, null, GetRelationsForField("EventCustomerResultCollectionViaKynLabValues_"), null, "EventCustomerResultCollectionViaKynLabValues_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomerResult' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomerResultCollectionViaPriorityInQueue
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.PriorityInQueueEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "PriorityInQueue_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomerResultEntity, 0, null, null, GetRelationsForField("EventCustomerResultCollectionViaPriorityInQueue"), null, "EventCustomerResultCollectionViaPriorityInQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaDisqualifiedTest_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.DisqualifiedTestEntityUsingUpdatedBy;
				intermediateRelation.SetAliases(string.Empty, "DisqualifiedTest_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaDisqualifiedTest_"), null, "EventCustomersCollectionViaDisqualifiedTest_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaEventAppointmentChangeLog
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventAppointmentChangeLogEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventAppointmentChangeLog_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaEventAppointmentChangeLog"), null, "EventCustomersCollectionViaEventAppointmentChangeLog", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaDisqualifiedTest
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.DisqualifiedTestEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "DisqualifiedTest_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaDisqualifiedTest"), null, "EventCustomersCollectionViaDisqualifiedTest", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaEventCustomerPrimaryCarePhysician
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerPrimaryCarePhysicianEntityUsingPcpAddressVerifiedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerPrimaryCarePhysician_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaEventCustomerPrimaryCarePhysician"), null, "EventCustomersCollectionViaEventCustomerPrimaryCarePhysician", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaEventCustomerQuestionAnswer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerQuestionAnswerEntityUsingUpdatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerQuestionAnswer_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaEventCustomerQuestionAnswer_"), null, "EventCustomersCollectionViaEventCustomerQuestionAnswer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaEventAppointmentCancellationLog
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventAppointmentCancellationLogEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventAppointmentCancellationLog_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaEventAppointmentCancellationLog"), null, "EventCustomersCollectionViaEventAppointmentCancellationLog", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaEventCustomerQuestionAnswer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerQuestionAnswerEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerQuestionAnswer_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaEventCustomerQuestionAnswer"), null, "EventCustomersCollectionViaEventCustomerQuestionAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaEventCustomerGiftCard
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerGiftCardEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerGiftCard_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaEventCustomerGiftCard"), null, "EventCustomersCollectionViaEventCustomerGiftCard", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaSurveyAnswer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.SurveyAnswerEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "SurveyAnswer_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaSurveyAnswer"), null, "EventCustomersCollectionViaSurveyAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaEventCustomerTestNotPerformedNotification
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerTestNotPerformedNotificationEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerTestNotPerformedNotification_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaEventCustomerTestNotPerformedNotification"), null, "EventCustomersCollectionViaEventCustomerTestNotPerformedNotification", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaPhysicianRecordRequestSignature
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.PhysicianRecordRequestSignatureEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "PhysicianRecordRequestSignature_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaPhysicianRecordRequestSignature"), null, "EventCustomersCollectionViaPhysicianRecordRequestSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaEventCustomerRetest
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerRetestEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerRetest_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaEventCustomerRetest"), null, "EventCustomersCollectionViaEventCustomerRetest", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaPcpDisposition
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.PcpDispositionEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "PcpDisposition_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaPcpDisposition"), null, "EventCustomersCollectionViaPcpDisposition", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaPcpDisposition_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.PcpDispositionEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "PcpDisposition_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaPcpDisposition_"), null, "EventCustomersCollectionViaPcpDisposition_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaChaperoneSignature
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ChaperoneSignatureEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "ChaperoneSignature_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaChaperoneSignature"), null, "EventCustomersCollectionViaChaperoneSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaChaperoneAnswer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ChaperoneAnswerEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "ChaperoneAnswer_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaChaperoneAnswer_"), null, "EventCustomersCollectionViaChaperoneAnswer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaChaperoneAnswer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ChaperoneAnswerEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "ChaperoneAnswer_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaChaperoneAnswer"), null, "EventCustomersCollectionViaChaperoneAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaCallQueueCustomer__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaCallQueueCustomer__"), null, "EventCustomersCollectionViaCallQueueCustomer__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaCheckListAnswer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CheckListAnswerEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "CheckListAnswer_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaCheckListAnswer_"), null, "EventCustomersCollectionViaCheckListAnswer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaCallQueueCustomer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingAssignedToOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaCallQueueCustomer"), null, "EventCustomersCollectionViaCallQueueCustomer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaCallQueueCustomer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaCallQueueCustomer_"), null, "EventCustomersCollectionViaCallQueueCustomer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaCustomerHealthInfo
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerHealthInfoEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerHealthInfo_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaCustomerHealthInfo"), null, "EventCustomersCollectionViaCustomerHealthInfo", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaExitInterviewSignature
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ExitInterviewSignatureEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "ExitInterviewSignature_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaExitInterviewSignature"), null, "EventCustomersCollectionViaExitInterviewSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaFluConsentAnswer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.FluConsentAnswerEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "FluConsentAnswer_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaFluConsentAnswer"), null, "EventCustomersCollectionViaFluConsentAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaExitInterviewAnswer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ExitInterviewAnswerEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "ExitInterviewAnswer_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaExitInterviewAnswer_"), null, "EventCustomersCollectionViaExitInterviewAnswer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaCheckListAnswer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CheckListAnswerEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "CheckListAnswer_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaCheckListAnswer"), null, "EventCustomersCollectionViaCheckListAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaExitInterviewAnswer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ExitInterviewAnswerEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "ExitInterviewAnswer_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaExitInterviewAnswer"), null, "EventCustomersCollectionViaExitInterviewAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaFluConsentAnswer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.FluConsentAnswerEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "FluConsentAnswer_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaFluConsentAnswer_"), null, "EventCustomersCollectionViaFluConsentAnswer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaSurveyAnswer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.SurveyAnswerEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "SurveyAnswer_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaSurveyAnswer_"), null, "EventCustomersCollectionViaSurveyAnswer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaCustomerHealthInfoArchive
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerHealthInfoArchiveEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerHealthInfoArchive_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaCustomerHealthInfoArchive"), null, "EventCustomersCollectionViaCustomerHealthInfoArchive", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaCustomerMedicareQuestionAnswer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerMedicareQuestionAnswerEntityUsingCreateBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerMedicareQuestionAnswer_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaCustomerMedicareQuestionAnswer"), null, "EventCustomersCollectionViaCustomerMedicareQuestionAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaFluConsentSignature
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.FluConsentSignatureEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "FluConsentSignature_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaFluConsentSignature"), null, "EventCustomersCollectionViaFluConsentSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventCustomers' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventCustomersCollectionViaParticipationConsentSignature
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ParticipationConsentSignatureEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "ParticipationConsentSignature_");
				return new PrefetchPathElement2(new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventCustomersEntity, 0, null, null, GetRelationsForField("EventCustomersCollectionViaParticipationConsentSignature"), null, "EventCustomersCollectionViaParticipationConsentSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaEventCustomerQuestionAnswer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerQuestionAnswerEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerQuestionAnswer_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaEventCustomerQuestionAnswer"), null, "EventsCollectionViaEventCustomerQuestionAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaEventPhysicianTest__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventPhysicianTestEntityUsingPhysicianId;
				intermediateRelation.SetAliases(string.Empty, "EventPhysicianTest_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaEventPhysicianTest__"), null, "EventsCollectionViaEventPhysicianTest__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaEventStaffAssignment__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventStaffAssignmentEntityUsingScheduledByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventStaffAssignment_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaEventStaffAssignment__"), null, "EventsCollectionViaEventStaffAssignment__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaEventStaffAssignment_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventStaffAssignmentEntityUsingActualStaffOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventStaffAssignment_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaEventStaffAssignment_"), null, "EventsCollectionViaEventStaffAssignment_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaEventCustomers
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventCustomers_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaEventCustomers"), null, "EventsCollectionViaEventCustomers", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaEventCustomerResult____
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingVerifiedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerResult_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaEventCustomerResult____"), null, "EventsCollectionViaEventCustomerResult____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaEventCustomerResult___
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingSignedOffBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerResult_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaEventCustomerResult___"), null, "EventsCollectionViaEventCustomerResult___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaHospitalPartnerCustomer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HospitalPartnerCustomerEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "HospitalPartnerCustomer_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaHospitalPartnerCustomer_"), null, "EventsCollectionViaHospitalPartnerCustomer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaEventCustomerResult_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerResult_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaEventCustomerResult_"), null, "EventsCollectionViaEventCustomerResult_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaEventCustomerResult________
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingChatPdfReviewedByPhysicianId;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerResult_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaEventCustomerResult________"), null, "EventsCollectionViaEventCustomerResult________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaEventCustomerResult______
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingInvoiceDateUpdatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerResult_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaEventCustomerResult______"), null, "EventsCollectionViaEventCustomerResult______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaEventCustomerResult__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingRegeneratedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerResult_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaEventCustomerResult__"), null, "EventsCollectionViaEventCustomerResult__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaEventCustomerResult_______
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingChatPdfReviewedByOverreadPhysicianId;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerResult_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaEventCustomerResult_______"), null, "EventsCollectionViaEventCustomerResult_______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaEventPhysicianTest_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventPhysicianTestEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventPhysicianTest_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaEventPhysicianTest_"), null, "EventsCollectionViaEventPhysicianTest_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaEventPhysicianTest
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventPhysicianTestEntityUsingAssignedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventPhysicianTest_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaEventPhysicianTest"), null, "EventsCollectionViaEventPhysicianTest", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaEventCustomerQuestionAnswer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerQuestionAnswerEntityUsingUpdatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerQuestionAnswer_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaEventCustomerQuestionAnswer_"), null, "EventsCollectionViaEventCustomerQuestionAnswer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaHospitalPartnerCustomer__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HospitalPartnerCustomerEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "HospitalPartnerCustomer_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaHospitalPartnerCustomer__"), null, "EventsCollectionViaHospitalPartnerCustomer__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaEventCustomerResult
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerResult_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaEventCustomerResult"), null, "EventsCollectionViaEventCustomerResult", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaHospitalPartnerCustomer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HospitalPartnerCustomerEntityUsingCareCoordinatorOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "HospitalPartnerCustomer_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaHospitalPartnerCustomer"), null, "EventsCollectionViaHospitalPartnerCustomer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaEventCustomerResult_____
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingCodedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerResult_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaEventCustomerResult_____"), null, "EventsCollectionViaEventCustomerResult_____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaEventCustomers_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingConfirmedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomers_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaEventCustomers_"), null, "EventsCollectionViaEventCustomers_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaEventAccountTestHcpcsCode
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventAccountTestHcpcsCodeEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventAccountTestHcpcsCode_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaEventAccountTestHcpcsCode"), null, "EventsCollectionViaEventAccountTestHcpcsCode", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaCustomerRegistrationNotes
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerRegistrationNotesEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerRegistrationNotes_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaCustomerRegistrationNotes"), null, "EventsCollectionViaCustomerRegistrationNotes", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaCallQueueCustomer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingAssignedToOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaCallQueueCustomer"), null, "EventsCollectionViaCallQueueCustomer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaEventAccountTestHcpcsCode_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventAccountTestHcpcsCodeEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "EventAccountTestHcpcsCode_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaEventAccountTestHcpcsCode_"), null, "EventsCollectionViaEventAccountTestHcpcsCode_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaSeminars
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.SeminarsEntityUsingOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Seminars_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaSeminars"), null, "EventsCollectionViaSeminars", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaDisqualifiedTest_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.DisqualifiedTestEntityUsingUpdatedBy;
				intermediateRelation.SetAliases(string.Empty, "DisqualifiedTest_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaDisqualifiedTest_"), null, "EventsCollectionViaDisqualifiedTest_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaDisqualifiedTest
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.DisqualifiedTestEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "DisqualifiedTest_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaDisqualifiedTest"), null, "EventsCollectionViaDisqualifiedTest", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaCustomEventNotification
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomEventNotificationEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomEventNotification_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaCustomEventNotification"), null, "EventsCollectionViaCustomEventNotification", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaCallQueueCustomer__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaCallQueueCustomer__"), null, "EventsCollectionViaCallQueueCustomer__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaCustomerClinicalQuestionAnswer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerClinicalQuestionAnswerEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerClinicalQuestionAnswer_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaCustomerClinicalQuestionAnswer"), null, "EventsCollectionViaCustomerClinicalQuestionAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaCustomerClinicalQuestionAnswer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerClinicalQuestionAnswerEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerClinicalQuestionAnswer_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaCustomerClinicalQuestionAnswer_"), null, "EventsCollectionViaCustomerClinicalQuestionAnswer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaEventAppointmentChangeLog
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventAppointmentChangeLogEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventAppointmentChangeLog_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaEventAppointmentChangeLog"), null, "EventsCollectionViaEventAppointmentChangeLog", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaEventAppointmentChangeLog_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventAppointmentChangeLogEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventAppointmentChangeLog_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaEventAppointmentChangeLog_"), null, "EventsCollectionViaEventAppointmentChangeLog_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaCallQueueCustomer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaCallQueueCustomer_"), null, "EventsCollectionViaCallQueueCustomer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaHostPayment
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HostPaymentEntityUsingCreatorOrganizationRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "HostPayment_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaHostPayment"), null, "EventsCollectionViaHostPayment", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaEventStaffAssignment
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventStaffAssignmentEntityUsingScheduledStaffOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventStaffAssignment_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaEventStaffAssignment"), null, "EventsCollectionViaEventStaffAssignment", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Events' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventsCollectionViaEventAppointmentCancellationLog
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventAppointmentCancellationLogEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventAppointmentCancellationLog_");
				return new PrefetchPathElement2(new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventsEntity, 0, null, null, GetRelationsForField("EventsCollectionViaEventAppointmentCancellationLog"), null, "EventsCollectionViaEventAppointmentCancellationLog", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventTypeCollectionViaEvents
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingAssignedToOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<EventTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventTypeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventTypeEntity, 0, null, null, GetRelationsForField("EventTypeCollectionViaEvents"), null, "EventTypeCollectionViaEvents", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventTypeCollectionViaEvents____
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingUpdatedByAdmin;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<EventTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventTypeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventTypeEntity, 0, null, null, GetRelationsForField("EventTypeCollectionViaEvents____"), null, "EventTypeCollectionViaEvents____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventTypeCollectionViaEvents___
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingSignOffOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<EventTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventTypeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventTypeEntity, 0, null, null, GetRelationsForField("EventTypeCollectionViaEvents___"), null, "EventTypeCollectionViaEvents___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventTypeCollectionViaEvents_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<EventTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventTypeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventTypeEntity, 0, null, null, GetRelationsForField("EventTypeCollectionViaEvents_"), null, "EventTypeCollectionViaEvents_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'EventType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathEventTypeCollectionViaEvents__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingEventActivityOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<EventTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventTypeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.EventTypeEntity, 0, null, null, GetRelationsForField("EventTypeCollectionViaEvents__"), null, "EventTypeCollectionViaEvents__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ExitInterviewQuestion' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathExitInterviewQuestionCollectionViaExitInterviewAnswer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ExitInterviewAnswerEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "ExitInterviewAnswer_");
				return new PrefetchPathElement2(new EntityCollection<ExitInterviewQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExitInterviewQuestionEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ExitInterviewQuestionEntity, 0, null, null, GetRelationsForField("ExitInterviewQuestionCollectionViaExitInterviewAnswer_"), null, "ExitInterviewQuestionCollectionViaExitInterviewAnswer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ExitInterviewQuestion' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathExitInterviewQuestionCollectionViaExitInterviewAnswer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ExitInterviewAnswerEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "ExitInterviewAnswer_");
				return new PrefetchPathElement2(new EntityCollection<ExitInterviewQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExitInterviewQuestionEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ExitInterviewQuestionEntity, 0, null, null, GetRelationsForField("ExitInterviewQuestionCollectionViaExitInterviewAnswer"), null, "ExitInterviewQuestionCollectionViaExitInterviewAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ExportableReports' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathExportableReportsCollectionViaExportableReportsQueue
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ExportableReportsQueueEntityUsingRequestedBy;
				intermediateRelation.SetAliases(string.Empty, "ExportableReportsQueue_");
				return new PrefetchPathElement2(new EntityCollection<ExportableReportsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExportableReportsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ExportableReportsEntity, 0, null, null, GetRelationsForField("ExportableReportsCollectionViaExportableReportsQueue"), null, "ExportableReportsCollectionViaExportableReportsQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaCustomerActivityTypeUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerActivityTypeUploadEntityUsingUploadedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerActivityTypeUpload_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaCustomerActivityTypeUpload_"), null, "FileCollectionViaCustomerActivityTypeUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaCorporateUpload
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CorporateUploadEntityUsingUploadedBy;
				intermediateRelation.SetAliases(string.Empty, "CorporateUpload_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaCorporateUpload"), null, "FileCollectionViaCorporateUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaStaffEventScheduleUpload
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.StaffEventScheduleUploadEntityUsingUploadedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "StaffEventScheduleUpload_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaStaffEventScheduleUpload"), null, "FileCollectionViaStaffEventScheduleUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaCorporateUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CorporateUploadEntityUsingUploadedBy;
				intermediateRelation.SetAliases(string.Empty, "CorporateUpload_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaCorporateUpload_"), null, "FileCollectionViaCorporateUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaPhysicianRecordRequestSignature
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.PhysicianRecordRequestSignatureEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "PhysicianRecordRequestSignature_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaPhysicianRecordRequestSignature"), null, "FileCollectionViaPhysicianRecordRequestSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaCustomerActivityTypeUpload
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerActivityTypeUploadEntityUsingUploadedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerActivityTypeUpload_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaCustomerActivityTypeUpload"), null, "FileCollectionViaCustomerActivityTypeUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaRapsUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.RapsUploadEntityUsingUploadedBy;
				intermediateRelation.SetAliases(string.Empty, "RapsUpload_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaRapsUpload_"), null, "FileCollectionViaRapsUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaCallUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallUploadEntityUsingUploadedBy;
				intermediateRelation.SetAliases(string.Empty, "CallUpload_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaCallUpload_"), null, "FileCollectionViaCallUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaChaperoneSignature_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ChaperoneSignatureEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "ChaperoneSignature_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaChaperoneSignature_"), null, "FileCollectionViaChaperoneSignature_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaRapsUpload
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.RapsUploadEntityUsingUploadedBy;
				intermediateRelation.SetAliases(string.Empty, "RapsUpload_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaRapsUpload"), null, "FileCollectionViaRapsUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaChaperoneSignature
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ChaperoneSignatureEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "ChaperoneSignature_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaChaperoneSignature"), null, "FileCollectionViaChaperoneSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaCorporateUpload__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CorporateUploadEntityUsingUploadedBy;
				intermediateRelation.SetAliases(string.Empty, "CorporateUpload_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaCorporateUpload__"), null, "FileCollectionViaCorporateUpload__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaCallUpload
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallUploadEntityUsingUploadedBy;
				intermediateRelation.SetAliases(string.Empty, "CallUpload_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaCallUpload"), null, "FileCollectionViaCallUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaHealthPlanCriteriaAssignmentUpload
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HealthPlanCriteriaAssignmentUploadEntityUsingUploadedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "HealthPlanCriteriaAssignmentUpload_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaHealthPlanCriteriaAssignmentUpload"), null, "FileCollectionViaHealthPlanCriteriaAssignmentUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaParticipationConsentSignature_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ParticipationConsentSignatureEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "ParticipationConsentSignature_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaParticipationConsentSignature_"), null, "FileCollectionViaParticipationConsentSignature_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaMergeCustomerUpload
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.MergeCustomerUploadEntityUsingUploadedBy;
				intermediateRelation.SetAliases(string.Empty, "MergeCustomerUpload_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaMergeCustomerUpload"), null, "FileCollectionViaMergeCustomerUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaMedicationUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.MedicationUploadEntityUsingUploadedBy;
				intermediateRelation.SetAliases(string.Empty, "MedicationUpload_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaMedicationUpload_"), null, "FileCollectionViaMedicationUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaMedicationUpload
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.MedicationUploadEntityUsingUploadedBy;
				intermediateRelation.SetAliases(string.Empty, "MedicationUpload_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaMedicationUpload"), null, "FileCollectionViaMedicationUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaFluConsentSignature_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.FluConsentSignatureEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "FluConsentSignature_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaFluConsentSignature_"), null, "FileCollectionViaFluConsentSignature_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaFluConsentSignature
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.FluConsentSignatureEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "FluConsentSignature_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaFluConsentSignature"), null, "FileCollectionViaFluConsentSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaMergeCustomerUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.MergeCustomerUploadEntityUsingUploadedBy;
				intermediateRelation.SetAliases(string.Empty, "MergeCustomerUpload_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaMergeCustomerUpload_"), null, "FileCollectionViaMergeCustomerUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaExitInterviewSignature
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ExitInterviewSignatureEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "ExitInterviewSignature_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaExitInterviewSignature"), null, "FileCollectionViaExitInterviewSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaEventCustomerGiftCard_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerGiftCardEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerGiftCard_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaEventCustomerGiftCard_"), null, "FileCollectionViaEventCustomerGiftCard_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaEventCustomerGiftCard
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerGiftCardEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerGiftCard_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaEventCustomerGiftCard"), null, "FileCollectionViaEventCustomerGiftCard", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaEligibilityUpload
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EligibilityUploadEntityUsingUploadedBy;
				intermediateRelation.SetAliases(string.Empty, "EligibilityUpload_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaEligibilityUpload"), null, "FileCollectionViaEligibilityUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaEligibilityUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EligibilityUploadEntityUsingUploadedBy;
				intermediateRelation.SetAliases(string.Empty, "EligibilityUpload_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaEligibilityUpload_"), null, "FileCollectionViaEligibilityUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaExportableReportsQueue
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ExportableReportsQueueEntityUsingRequestedBy;
				intermediateRelation.SetAliases(string.Empty, "ExportableReportsQueue_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaExportableReportsQueue"), null, "FileCollectionViaExportableReportsQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaSuspectConditionUpload
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.SuspectConditionUploadEntityUsingUploadedBy;
				intermediateRelation.SetAliases(string.Empty, "SuspectConditionUpload_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaSuspectConditionUpload"), null, "FileCollectionViaSuspectConditionUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaStaffEventScheduleUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.StaffEventScheduleUploadEntityUsingUploadedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "StaffEventScheduleUpload_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaStaffEventScheduleUpload_"), null, "FileCollectionViaStaffEventScheduleUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaParticipationConsentSignature
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ParticipationConsentSignatureEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "ParticipationConsentSignature_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaParticipationConsentSignature"), null, "FileCollectionViaParticipationConsentSignature", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaCustomerPhoneNumberUpdateUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerPhoneNumberUpdateUploadEntityUsingUploadedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerPhoneNumberUpdateUpload_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaCustomerPhoneNumberUpdateUpload_"), null, "FileCollectionViaCustomerPhoneNumberUpdateUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaCustomerPhoneNumberUpdateUpload
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerPhoneNumberUpdateUploadEntityUsingUploadedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerPhoneNumberUpdateUpload_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaCustomerPhoneNumberUpdateUpload"), null, "FileCollectionViaCustomerPhoneNumberUpdateUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'File' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFileCollectionViaSuspectConditionUpload_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.SuspectConditionUploadEntityUsingUploadedBy;
				intermediateRelation.SetAliases(string.Empty, "SuspectConditionUpload_");
				return new PrefetchPathElement2(new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FileEntity, 0, null, null, GetRelationsForField("FileCollectionViaSuspectConditionUpload_"), null, "FileCollectionViaSuspectConditionUpload_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'FluConsentQuestion' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFluConsentQuestionCollectionViaFluConsentAnswer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.FluConsentAnswerEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "FluConsentAnswer_");
				return new PrefetchPathElement2(new EntityCollection<FluConsentQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentQuestionEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FluConsentQuestionEntity, 0, null, null, GetRelationsForField("FluConsentQuestionCollectionViaFluConsentAnswer"), null, "FluConsentQuestionCollectionViaFluConsentAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'FluConsentQuestion' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathFluConsentQuestionCollectionViaFluConsentAnswer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.FluConsentAnswerEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "FluConsentAnswer_");
				return new PrefetchPathElement2(new EntityCollection<FluConsentQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentQuestionEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.FluConsentQuestionEntity, 0, null, null, GetRelationsForField("FluConsentQuestionCollectionViaFluConsentAnswer_"), null, "FluConsentQuestionCollectionViaFluConsentAnswer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GcNotGivenReason' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGcNotGivenReasonCollectionViaEventCustomers
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventCustomers_");
				return new PrefetchPathElement2(new EntityCollection<GcNotGivenReasonEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GcNotGivenReasonEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.GcNotGivenReasonEntity, 0, null, null, GetRelationsForField("GcNotGivenReasonCollectionViaEventCustomers"), null, "GcNotGivenReasonCollectionViaEventCustomers", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'GcNotGivenReason' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathGcNotGivenReasonCollectionViaEventCustomers_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingConfirmedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomers_");
				return new PrefetchPathElement2(new EntityCollection<GcNotGivenReasonEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GcNotGivenReasonEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.GcNotGivenReasonEntity, 0, null, null, GetRelationsForField("GcNotGivenReasonCollectionViaEventCustomers_"), null, "GcNotGivenReasonCollectionViaEventCustomers_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HafTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHafTemplateCollectionViaClinicalTestQualificationCriteria
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ClinicalTestQualificationCriteriaEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "ClinicalTestQualificationCriteria_");
				return new PrefetchPathElement2(new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HafTemplateEntity, 0, null, null, GetRelationsForField("HafTemplateCollectionViaClinicalTestQualificationCriteria"), null, "HafTemplateCollectionViaClinicalTestQualificationCriteria", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HafTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHafTemplateCollectionViaEvents___
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingSignOffOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HafTemplateEntity, 0, null, null, GetRelationsForField("HafTemplateCollectionViaEvents___"), null, "HafTemplateCollectionViaEvents___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HafTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHafTemplateCollectionViaEvents
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingAssignedToOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HafTemplateEntity, 0, null, null, GetRelationsForField("HafTemplateCollectionViaEvents"), null, "HafTemplateCollectionViaEvents", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HafTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHafTemplateCollectionViaEvents____
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingUpdatedByAdmin;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HafTemplateEntity, 0, null, null, GetRelationsForField("HafTemplateCollectionViaEvents____"), null, "HafTemplateCollectionViaEvents____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HafTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHafTemplateCollectionViaEvents_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HafTemplateEntity, 0, null, null, GetRelationsForField("HafTemplateCollectionViaEvents_"), null, "HafTemplateCollectionViaEvents_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HafTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHafTemplateCollectionViaCustomerClinicalQuestionAnswer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerClinicalQuestionAnswerEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerClinicalQuestionAnswer_");
				return new PrefetchPathElement2(new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HafTemplateEntity, 0, null, null, GetRelationsForField("HafTemplateCollectionViaCustomerClinicalQuestionAnswer"), null, "HafTemplateCollectionViaCustomerClinicalQuestionAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HafTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHafTemplateCollectionViaEvents__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingEventActivityOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HafTemplateEntity, 0, null, null, GetRelationsForField("HafTemplateCollectionViaEvents__"), null, "HafTemplateCollectionViaEvents__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HafTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHafTemplateCollectionViaCustomerClinicalQuestionAnswer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerClinicalQuestionAnswerEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerClinicalQuestionAnswer_");
				return new PrefetchPathElement2(new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HafTemplateEntity, 0, null, null, GetRelationsForField("HafTemplateCollectionViaCustomerClinicalQuestionAnswer_"), null, "HafTemplateCollectionViaCustomerClinicalQuestionAnswer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HafTemplate' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHafTemplateCollectionViaClinicalTestQualificationCriteria_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ClinicalTestQualificationCriteriaEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "ClinicalTestQualificationCriteria_");
				return new PrefetchPathElement2(new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HafTemplateEntity, 0, null, null, GetRelationsForField("HafTemplateCollectionViaClinicalTestQualificationCriteria_"), null, "HafTemplateCollectionViaClinicalTestQualificationCriteria_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HcpcsCode' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHcpcsCodeCollectionViaTestHcpcsCode_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.TestHcpcsCodeEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "TestHcpcsCode_");
				return new PrefetchPathElement2(new EntityCollection<HcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HcpcsCodeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HcpcsCodeEntity, 0, null, null, GetRelationsForField("HcpcsCodeCollectionViaTestHcpcsCode_"), null, "HcpcsCodeCollectionViaTestHcpcsCode_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HcpcsCode' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHcpcsCodeCollectionViaTestHcpcsCode
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.TestHcpcsCodeEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "TestHcpcsCode_");
				return new PrefetchPathElement2(new EntityCollection<HcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HcpcsCodeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HcpcsCodeEntity, 0, null, null, GetRelationsForField("HcpcsCodeCollectionViaTestHcpcsCode"), null, "HcpcsCodeCollectionViaTestHcpcsCode", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HealthPlanCallQueueCriteria' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HealthPlanCriteriaAssignmentUploadEntityUsingUploadedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "HealthPlanCriteriaAssignmentUpload_");
				return new PrefetchPathElement2(new EntityCollection<HealthPlanCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCallQueueCriteriaEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HealthPlanCallQueueCriteriaEntity, 0, null, null, GetRelationsForField("HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload"), null, "HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HealthPlanCallQueueCriteria' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HealthPlanCriteriaTeamAssignmentEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "HealthPlanCriteriaTeamAssignment_");
				return new PrefetchPathElement2(new EntityCollection<HealthPlanCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCallQueueCriteriaEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HealthPlanCallQueueCriteriaEntity, 0, null, null, GetRelationsForField("HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment"), null, "HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HealthPlanCallQueueCriteria' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HealthPlanCriteriaTeamAssignmentEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "HealthPlanCriteriaTeamAssignment_");
				return new PrefetchPathElement2(new EntityCollection<HealthPlanCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCallQueueCriteriaEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HealthPlanCallQueueCriteriaEntity, 0, null, null, GetRelationsForField("HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_"), null, "HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HealthPlanCallQueueCriteria' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HealthPlanCriteriaAssignmentEntityUsingAssignedToOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "HealthPlanCriteriaAssignment_");
				return new PrefetchPathElement2(new EntityCollection<HealthPlanCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCallQueueCriteriaEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HealthPlanCallQueueCriteriaEntity, 0, null, null, GetRelationsForField("HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment"), null, "HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HealthPlanCallQueueCriteria' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HealthPlanCriteriaAssignmentEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "HealthPlanCriteriaAssignment_");
				return new PrefetchPathElement2(new EntityCollection<HealthPlanCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCallQueueCriteriaEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HealthPlanCallQueueCriteriaEntity, 0, null, null, GetRelationsForField("HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__"), null, "HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HealthPlanCallQueueCriteria' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HealthPlanCriteriaAssignmentEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "HealthPlanCriteriaAssignment_");
				return new PrefetchPathElement2(new EntityCollection<HealthPlanCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCallQueueCriteriaEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HealthPlanCallQueueCriteriaEntity, 0, null, null, GetRelationsForField("HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_"), null, "HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HospitalFacility' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHospitalFacilityCollectionViaEventCustomers
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventCustomers_");
				return new PrefetchPathElement2(new EntityCollection<HospitalFacilityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HospitalFacilityEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HospitalFacilityEntity, 0, null, null, GetRelationsForField("HospitalFacilityCollectionViaEventCustomers"), null, "HospitalFacilityCollectionViaEventCustomers", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HospitalFacility' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHospitalFacilityCollectionViaEventCustomers_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingConfirmedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomers_");
				return new PrefetchPathElement2(new EntityCollection<HospitalFacilityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HospitalFacilityEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HospitalFacilityEntity, 0, null, null, GetRelationsForField("HospitalFacilityCollectionViaEventCustomers_"), null, "HospitalFacilityCollectionViaEventCustomers_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'HostPayment' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathHostPaymentCollectionViaHostPaymentTransaction
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HostPaymentTransactionEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "HostPaymentTransaction_");
				return new PrefetchPathElement2(new EntityCollection<HostPaymentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HostPaymentEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.HostPaymentEntity, 0, null, null, GetRelationsForField("HostPaymentCollectionViaHostPaymentTransaction"), null, "HostPaymentCollectionViaHostPaymentTransaction", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'IcdCodes' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathIcdCodesCollectionViaCustomerIcdCode
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerIcdCodeEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerIcdCode_");
				return new PrefetchPathElement2(new EntityCollection<IcdCodesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(IcdCodesEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.IcdCodesEntity, 0, null, null, GetRelationsForField("IcdCodesCollectionViaCustomerIcdCode"), null, "IcdCodesCollectionViaCustomerIcdCode", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'InsuranceCompany' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathInsuranceCompanyCollectionViaEligibility
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EligibilityEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Eligibility_");
				return new PrefetchPathElement2(new EntityCollection<InsuranceCompanyEntity>(EntityFactoryCache2.GetEntityFactory(typeof(InsuranceCompanyEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.InsuranceCompanyEntity, 0, null, null, GetRelationsForField("InsuranceCompanyCollectionViaEligibility"), null, "InsuranceCompanyCollectionViaEligibility", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Language' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLanguageCollectionViaHealthPlanCallQueueCriteria
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HealthPlanCallQueueCriteriaEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "HealthPlanCallQueueCriteria_");
				return new PrefetchPathElement2(new EntityCollection<LanguageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LanguageEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LanguageEntity, 0, null, null, GetRelationsForField("LanguageCollectionViaHealthPlanCallQueueCriteria"), null, "LanguageCollectionViaHealthPlanCallQueueCriteria", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Language' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLanguageCollectionViaCallQueueCustomer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<LanguageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LanguageEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LanguageEntity, 0, null, null, GetRelationsForField("LanguageCollectionViaCallQueueCustomer_"), null, "LanguageCollectionViaCallQueueCustomer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Language' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLanguageCollectionViaCallQueueCustomer__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<LanguageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LanguageEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LanguageEntity, 0, null, null, GetRelationsForField("LanguageCollectionViaCallQueueCustomer__"), null, "LanguageCollectionViaCallQueueCustomer__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Language' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLanguageCollectionViaCallQueueCustomer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingAssignedToOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<LanguageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LanguageEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LanguageEntity, 0, null, null, GetRelationsForField("LanguageCollectionViaCallQueueCustomer"), null, "LanguageCollectionViaCallQueueCustomer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Language' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLanguageCollectionViaHealthPlanCallQueueCriteria_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HealthPlanCallQueueCriteriaEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "HealthPlanCallQueueCriteria_");
				return new PrefetchPathElement2(new EntityCollection<LanguageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LanguageEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LanguageEntity, 0, null, null, GetRelationsForField("LanguageCollectionViaHealthPlanCallQueueCriteria_"), null, "LanguageCollectionViaHealthPlanCallQueueCriteria_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaUncontactedCustomerCallQueue
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.UncontactedCustomerCallQueueEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "UncontactedCustomerCallQueue_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaUncontactedCustomerCallQueue"), null, "LookupCollectionViaUncontactedCustomerCallQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaFillEventCallQueue
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.FillEventCallQueueEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "FillEventCallQueue_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaFillEventCallQueue"), null, "LookupCollectionViaFillEventCallQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaTestPerformedExternally_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.TestPerformedExternallyEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "TestPerformedExternally_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaTestPerformedExternally_"), null, "LookupCollectionViaTestPerformedExternally_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaLanguageBarrierCallQueue
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.LanguageBarrierCallQueueEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "LanguageBarrierCallQueue_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaLanguageBarrierCallQueue"), null, "LookupCollectionViaLanguageBarrierCallQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaMedicationUpload
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.MedicationUploadEntityUsingUploadedBy;
				intermediateRelation.SetAliases(string.Empty, "MedicationUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaMedicationUpload"), null, "LookupCollectionViaMedicationUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaHostFacilityRanking
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HostFacilityRankingEntityUsingRankedByOrganizationRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "HostFacilityRanking_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaHostFacilityRanking"), null, "LookupCollectionViaHostFacilityRanking", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaHostFacilityRanking_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HostFacilityRankingEntityUsingRankedByOrganizationRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "HostFacilityRanking_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaHostFacilityRanking_"), null, "LookupCollectionViaHostFacilityRanking_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaMailRoundCallQueue
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.MailRoundCallQueueEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "MailRoundCallQueue_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaMailRoundCallQueue"), null, "LookupCollectionViaMailRoundCallQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaHostPaymentTransaction_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HostPaymentTransactionEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "HostPaymentTransaction_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaHostPaymentTransaction_"), null, "LookupCollectionViaHostPaymentTransaction_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaHostPayment
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HostPaymentEntityUsingCreatorOrganizationRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "HostPayment_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaHostPayment"), null, "LookupCollectionViaHostPayment", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaHostPaymentTransaction
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HostPaymentTransactionEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "HostPaymentTransaction_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaHostPaymentTransaction"), null, "LookupCollectionViaHostPaymentTransaction", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaHostPayment_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HostPaymentEntityUsingCreatorOrganizationRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "HostPayment_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaHostPayment_"), null, "LookupCollectionViaHostPayment_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaKynLabValues
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.KynLabValuesEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "KynLabValues_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaKynLabValues"), null, "LookupCollectionViaKynLabValues", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaExportableReportsQueue
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ExportableReportsQueueEntityUsingRequestedBy;
				intermediateRelation.SetAliases(string.Empty, "ExportableReportsQueue_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaExportableReportsQueue"), null, "LookupCollectionViaExportableReportsQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaFile
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.FileEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "File_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaFile"), null, "LookupCollectionViaFile", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaTestPerformedExternally
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.TestPerformedExternallyEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "TestPerformedExternally_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaTestPerformedExternally"), null, "LookupCollectionViaTestPerformedExternally", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaKynLabValues_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.KynLabValuesEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "KynLabValues_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaKynLabValues_"), null, "LookupCollectionViaKynLabValues_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaPreQualificationQuestion
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.PreQualificationQuestionEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "PreQualificationQuestion_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaPreQualificationQuestion"), null, "LookupCollectionViaPreQualificationQuestion", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaPrintOrderItemTracking__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.PrintOrderItemTrackingEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "PrintOrderItemTracking_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaPrintOrderItemTracking__"), null, "LookupCollectionViaPrintOrderItemTracking__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaPcpDisposition_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.PcpDispositionEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "PcpDisposition_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaPcpDisposition_"), null, "LookupCollectionViaPcpDisposition_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaPcpAppointment_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.PcpAppointmentEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "PcpAppointment_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaPcpAppointment_"), null, "LookupCollectionViaPcpAppointment_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaPcpDisposition
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.PcpDispositionEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "PcpDisposition_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaPcpDisposition"), null, "LookupCollectionViaPcpDisposition", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaRefundRequest
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.RefundRequestEntityUsingRequestedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "RefundRequest_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaRefundRequest"), null, "LookupCollectionViaRefundRequest", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaRapsUpload
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.RapsUploadEntityUsingUploadedBy;
				intermediateRelation.SetAliases(string.Empty, "RapsUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaRapsUpload"), null, "LookupCollectionViaRapsUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaRefundRequest_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.RefundRequestEntityUsingProcessedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "RefundRequest_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaRefundRequest_"), null, "LookupCollectionViaRefundRequest_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaPrintOrderItemTracking___
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.PrintOrderItemTrackingEntityUsingUpdatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "PrintOrderItemTracking_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaPrintOrderItemTracking___"), null, "LookupCollectionViaPrintOrderItemTracking___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaProspectCustomer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ProspectCustomerEntityUsingContactedBy;
				intermediateRelation.SetAliases(string.Empty, "ProspectCustomer_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaProspectCustomer"), null, "LookupCollectionViaProspectCustomer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaPcpAppointment
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.PcpAppointmentEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "PcpAppointment_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaPcpAppointment"), null, "LookupCollectionViaPcpAppointment", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaHafTemplate
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HafTemplateEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "HafTemplate_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaHafTemplate"), null, "LookupCollectionViaHafTemplate", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaHafTemplate_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HafTemplateEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "HafTemplate_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaHafTemplate_"), null, "LookupCollectionViaHafTemplate_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaSuspectConditionUpload
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.SuspectConditionUploadEntityUsingUploadedBy;
				intermediateRelation.SetAliases(string.Empty, "SuspectConditionUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaSuspectConditionUpload"), null, "LookupCollectionViaSuspectConditionUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaMergeCustomerUpload
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.MergeCustomerUploadEntityUsingUploadedBy;
				intermediateRelation.SetAliases(string.Empty, "MergeCustomerUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaMergeCustomerUpload"), null, "LookupCollectionViaMergeCustomerUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaNoShowCallQueue
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.NoShowCallQueueEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "NoShowCallQueue_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaNoShowCallQueue"), null, "LookupCollectionViaNoShowCallQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaStaffEventScheduleUpload
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.StaffEventScheduleUploadEntityUsingUploadedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "StaffEventScheduleUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaStaffEventScheduleUpload"), null, "LookupCollectionViaStaffEventScheduleUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaHealthPlanRevenue
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HealthPlanRevenueEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "HealthPlanRevenue_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaHealthPlanRevenue"), null, "LookupCollectionViaHealthPlanRevenue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaHealthPlanRevenue_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HealthPlanRevenueEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "HealthPlanRevenue_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaHealthPlanRevenue_"), null, "LookupCollectionViaHealthPlanRevenue_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaHafTemplate__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HafTemplateEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "HafTemplate_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaHafTemplate__"), null, "LookupCollectionViaHafTemplate__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaHafTemplate___
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HafTemplateEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "HafTemplate_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaHafTemplate___"), null, "LookupCollectionViaHafTemplate___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCustomerProfileHistory___
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerProfileHistoryEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerProfileHistory_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCustomerProfileHistory___"), null, "LookupCollectionViaCustomerProfileHistory___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCustomerProfileHistory__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerProfileHistoryEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerProfileHistory_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCustomerProfileHistory__"), null, "LookupCollectionViaCustomerProfileHistory__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCustomerProfileHistory
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerProfileHistoryEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerProfileHistory_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCustomerProfileHistory"), null, "LookupCollectionViaCustomerProfileHistory", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCustomEventNotification
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomEventNotificationEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomEventNotification_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCustomEventNotification"), null, "LookupCollectionViaCustomEventNotification", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCustomerRegistrationNotes
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerRegistrationNotesEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerRegistrationNotes_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCustomerRegistrationNotes"), null, "LookupCollectionViaCustomerRegistrationNotes", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCustomerProfileHistory_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerProfileHistoryEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerProfileHistory_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCustomerProfileHistory_"), null, "LookupCollectionViaCustomerProfileHistory_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCustomerPrimaryCarePhysician__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerPrimaryCarePhysician_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCustomerPrimaryCarePhysician__"), null, "LookupCollectionViaCustomerPrimaryCarePhysician__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCustomerEventTestState__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerEventTestStateEntityUsingUpdatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerEventTestState_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCustomerEventTestState__"), null, "LookupCollectionViaCustomerEventTestState__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCustomerEventTestState_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerEventTestStateEntityUsingEvaluatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerEventTestState_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCustomerEventTestState_"), null, "LookupCollectionViaCustomerEventTestState_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCustomerEventTestState
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerEventTestStateEntityUsingConductedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerEventTestState_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCustomerEventTestState"), null, "LookupCollectionViaCustomerEventTestState", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCustomerPrimaryCarePhysician_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingPcpAddressVerifiedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerPrimaryCarePhysician_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCustomerPrimaryCarePhysician_"), null, "LookupCollectionViaCustomerPrimaryCarePhysician_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCustomerPrimaryCarePhysician
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingUpdatedByOrganizationRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerPrimaryCarePhysician_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCustomerPrimaryCarePhysician"), null, "LookupCollectionViaCustomerPrimaryCarePhysician", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCustomerPhoneNumberUpdateUpload
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerPhoneNumberUpdateUploadEntityUsingUploadedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerPhoneNumberUpdateUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCustomerPhoneNumberUpdateUpload"), null, "LookupCollectionViaCustomerPhoneNumberUpdateUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEligibilityUpload
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EligibilityUploadEntityUsingUploadedBy;
				intermediateRelation.SetAliases(string.Empty, "EligibilityUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEligibilityUpload"), null, "LookupCollectionViaEligibilityUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEventCustomerResult__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingRegeneratedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerResult_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEventCustomerResult__"), null, "LookupCollectionViaEventCustomerResult__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEventCustomerResult______
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingInvoiceDateUpdatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerResult_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEventCustomerResult______"), null, "LookupCollectionViaEventCustomerResult______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEventCustomerResult_____
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingCodedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerResult_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEventCustomerResult_____"), null, "LookupCollectionViaEventCustomerResult_____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEventCustomerResult_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerResult_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEventCustomerResult_"), null, "LookupCollectionViaEventCustomerResult_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEventCustomerResult____
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingVerifiedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerResult_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEventCustomerResult____"), null, "LookupCollectionViaEventCustomerResult____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEventCustomerResult___
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingSignedOffBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerResult_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEventCustomerResult___"), null, "LookupCollectionViaEventCustomerResult___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEventCustomerResult________
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingChatPdfReviewedByPhysicianId;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerResult_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEventCustomerResult________"), null, "LookupCollectionViaEventCustomerResult________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEventAppointmentCancellationLog
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventAppointmentCancellationLogEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventAppointmentCancellationLog_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEventAppointmentCancellationLog"), null, "LookupCollectionViaEventAppointmentCancellationLog", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEmailTemplate_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EmailTemplateEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EmailTemplate_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEmailTemplate_"), null, "LookupCollectionViaEmailTemplate_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEmailTemplate
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EmailTemplateEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EmailTemplate_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEmailTemplate"), null, "LookupCollectionViaEmailTemplate", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEventCustomerResult_______
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingChatPdfReviewedByOverreadPhysicianId;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerResult_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEventCustomerResult_______"), null, "LookupCollectionViaEventCustomerResult_______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEventCustomerResult
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerResultEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerResult_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEventCustomerResult"), null, "LookupCollectionViaEventCustomerResult", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEventAppointmentChangeLog
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventAppointmentChangeLogEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventAppointmentChangeLog_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEventAppointmentChangeLog"), null, "LookupCollectionViaEventAppointmentChangeLog", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCustomerActivityTypeUpload
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerActivityTypeUploadEntityUsingUploadedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerActivityTypeUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCustomerActivityTypeUpload"), null, "LookupCollectionViaCustomerActivityTypeUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCalls
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallsEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Calls_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCalls"), null, "LookupCollectionViaCalls", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCalls_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallsEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Calls_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCalls_"), null, "LookupCollectionViaCalls_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCallRoundCallQueue
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallRoundCallQueueEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "CallRoundCallQueue_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCallRoundCallQueue"), null, "LookupCollectionViaCallRoundCallQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCampaign
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CampaignEntityUsingCreatedby;
				intermediateRelation.SetAliases(string.Empty, "Campaign_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCampaign"), null, "LookupCollectionViaCampaign", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCallUpload
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallUploadEntityUsingUploadedBy;
				intermediateRelation.SetAliases(string.Empty, "CallUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCallUpload"), null, "LookupCollectionViaCallUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCalls__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallsEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Calls_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCalls__"), null, "LookupCollectionViaCalls__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCallQueueCustomer__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCallQueueCustomer__"), null, "LookupCollectionViaCallQueueCustomer__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCallCenterTeam
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallCenterTeamEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "CallCenterTeam_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCallCenterTeam"), null, "LookupCollectionViaCallCenterTeam", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaAccountHraChatQuestionnaire_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.AccountHraChatQuestionnaireEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "AccountHraChatQuestionnaire_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaAccountHraChatQuestionnaire_"), null, "LookupCollectionViaAccountHraChatQuestionnaire_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaAccountHraChatQuestionnaire
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.AccountHraChatQuestionnaireEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "AccountHraChatQuestionnaire_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaAccountHraChatQuestionnaire"), null, "LookupCollectionViaAccountHraChatQuestionnaire", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCallQueueCustomer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCallQueueCustomer_"), null, "LookupCollectionViaCallQueueCustomer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCallQueueCustomer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingAssignedToOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCallQueueCustomer"), null, "LookupCollectionViaCallQueueCustomer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCallCenterTeam_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallCenterTeamEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "CallCenterTeam_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCallCenterTeam_"), null, "LookupCollectionViaCallCenterTeam_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCampaign_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CampaignEntityUsingModifiedby;
				intermediateRelation.SetAliases(string.Empty, "Campaign_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCampaign_"), null, "LookupCollectionViaCampaign_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaClinicalTestQualificationCriteria_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ClinicalTestQualificationCriteriaEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "ClinicalTestQualificationCriteria_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaClinicalTestQualificationCriteria_"), null, "LookupCollectionViaClinicalTestQualificationCriteria_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaClinicalTestQualificationCriteria
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ClinicalTestQualificationCriteriaEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "ClinicalTestQualificationCriteria_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaClinicalTestQualificationCriteria"), null, "LookupCollectionViaClinicalTestQualificationCriteria", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCheckListTemplate_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CheckListTemplateEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "CheckListTemplate_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCheckListTemplate_"), null, "LookupCollectionViaCheckListTemplate_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCorporateUpload
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CorporateUploadEntityUsingUploadedBy;
				intermediateRelation.SetAliases(string.Empty, "CorporateUpload_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCorporateUpload"), null, "LookupCollectionViaCorporateUpload", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaClinicalTestQualificationCriteria___
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ClinicalTestQualificationCriteriaEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "ClinicalTestQualificationCriteria_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaClinicalTestQualificationCriteria___"), null, "LookupCollectionViaClinicalTestQualificationCriteria___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaClinicalTestQualificationCriteria__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ClinicalTestQualificationCriteriaEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "ClinicalTestQualificationCriteria_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaClinicalTestQualificationCriteria__"), null, "LookupCollectionViaClinicalTestQualificationCriteria__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCheckListTemplate
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CheckListTemplateEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "CheckListTemplate_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCheckListTemplate"), null, "LookupCollectionViaCheckListTemplate", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCampaignActivity
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CampaignActivityEntityUsingCreatedby;
				intermediateRelation.SetAliases(string.Empty, "CampaignActivity_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCampaignActivity"), null, "LookupCollectionViaCampaignActivity", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCampaign___
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CampaignEntityUsingModifiedby;
				intermediateRelation.SetAliases(string.Empty, "Campaign_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCampaign___"), null, "LookupCollectionViaCampaign___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCampaign__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CampaignEntityUsingCreatedby;
				intermediateRelation.SetAliases(string.Empty, "Campaign_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCampaign__"), null, "LookupCollectionViaCampaign__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCheckListAnswer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CheckListAnswerEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "CheckListAnswer_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCheckListAnswer_"), null, "LookupCollectionViaCheckListAnswer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCheckListAnswer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CheckListAnswerEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "CheckListAnswer_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCheckListAnswer"), null, "LookupCollectionViaCheckListAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaCampaignActivity_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CampaignActivityEntityUsingModifiedby;
				intermediateRelation.SetAliases(string.Empty, "CampaignActivity_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaCampaignActivity_"), null, "LookupCollectionViaCampaignActivity_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEvents________
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingAssignedToOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEvents________"), null, "LookupCollectionViaEvents________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEvents______________
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingEventActivityOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEvents______________"), null, "LookupCollectionViaEvents______________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEvents_________
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEvents_________"), null, "LookupCollectionViaEvents_________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEvents_____________
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEvents_____________"), null, "LookupCollectionViaEvents_____________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEvents___________________
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingUpdatedByAdmin;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEvents___________________"), null, "LookupCollectionViaEvents___________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEvents__________________
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingUpdatedByAdmin;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEvents__________________"), null, "LookupCollectionViaEvents__________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEvents_______________
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingSignOffOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEvents_______________"), null, "LookupCollectionViaEvents_______________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEvents_______________________
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingUpdatedByAdmin;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEvents_______________________"), null, "LookupCollectionViaEvents_______________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEvents____________
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingAssignedToOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEvents____________"), null, "LookupCollectionViaEvents____________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEvents____
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingAssignedToOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEvents____"), null, "LookupCollectionViaEvents____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEvents________________
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingUpdatedByAdmin;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEvents________________"), null, "LookupCollectionViaEvents________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEvents_______
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingSignOffOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEvents_______"), null, "LookupCollectionViaEvents_______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEvents_____
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEvents_____"), null, "LookupCollectionViaEvents_____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEvents__________
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingEventActivityOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEvents__________"), null, "LookupCollectionViaEvents__________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEvents_________________
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingUpdatedByAdmin;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEvents_________________"), null, "LookupCollectionViaEvents_________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEvents___________
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingSignOffOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEvents___________"), null, "LookupCollectionViaEvents___________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEvents______________________
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEvents______________________"), null, "LookupCollectionViaEvents______________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEvents
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingAssignedToOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEvents"), null, "LookupCollectionViaEvents", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEvents______
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingEventActivityOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEvents______"), null, "LookupCollectionViaEvents______", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEvents__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingEventActivityOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEvents__"), null, "LookupCollectionViaEvents__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEventCustomers___
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingConfirmedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomers_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEventCustomers___"), null, "LookupCollectionViaEventCustomers___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEventCustomers
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventCustomers_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEventCustomers"), null, "LookupCollectionViaEventCustomers", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEventCustomers_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingConfirmedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomers_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEventCustomers_"), null, "LookupCollectionViaEventCustomers_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEventCustomers__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomersEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventCustomers_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEventCustomers__"), null, "LookupCollectionViaEventCustomers__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEvents___
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingSignOffOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEvents___"), null, "LookupCollectionViaEvents___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEvents________________________
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingEventActivityOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEvents________________________"), null, "LookupCollectionViaEvents________________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEvents____________________
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingAssignedToOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEvents____________________"), null, "LookupCollectionViaEvents____________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEvents_____________________
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingSignOffOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEvents_____________________"), null, "LookupCollectionViaEvents_____________________", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Lookup' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathLookupCollectionViaEvents_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.LookupEntity, 0, null, null, GetRelationsForField("LookupCollectionViaEvents_"), null, "LookupCollectionViaEvents_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'MarketingPrintOrderItem' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathMarketingPrintOrderItemCollectionViaPrintOrderItemTracking
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.PrintOrderItemTrackingEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "PrintOrderItemTracking_");
				return new PrefetchPathElement2(new EntityCollection<MarketingPrintOrderItemEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MarketingPrintOrderItemEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.MarketingPrintOrderItemEntity, 0, null, null, GetRelationsForField("MarketingPrintOrderItemCollectionViaPrintOrderItemTracking"), null, "MarketingPrintOrderItemCollectionViaPrintOrderItemTracking", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'MarketingPrintOrderItem' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathMarketingPrintOrderItemCollectionViaPrintOrderItemTracking_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.PrintOrderItemTrackingEntityUsingUpdatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "PrintOrderItemTracking_");
				return new PrefetchPathElement2(new EntityCollection<MarketingPrintOrderItemEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MarketingPrintOrderItemEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.MarketingPrintOrderItemEntity, 0, null, null, GetRelationsForField("MarketingPrintOrderItemCollectionViaPrintOrderItemTracking_"), null, "MarketingPrintOrderItemCollectionViaPrintOrderItemTracking_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'MedicareQuestion' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathMedicareQuestionCollectionViaCustomerMedicareQuestionAnswer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerMedicareQuestionAnswerEntityUsingCreateBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerMedicareQuestionAnswer_");
				return new PrefetchPathElement2(new EntityCollection<MedicareQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicareQuestionEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.MedicareQuestionEntity, 0, null, null, GetRelationsForField("MedicareQuestionCollectionViaCustomerMedicareQuestionAnswer"), null, "MedicareQuestionCollectionViaCustomerMedicareQuestionAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Ndc' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathNdcCollectionViaCurrentMedication
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CurrentMedicationEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CurrentMedication_");
				return new PrefetchPathElement2(new EntityCollection<NdcEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NdcEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.NdcEntity, 0, null, null, GetRelationsForField("NdcCollectionViaCurrentMedication"), null, "NdcCollectionViaCurrentMedication", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'NotesDetails' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathNotesDetailsCollectionViaPriorityInQueue
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.PriorityInQueueEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "PriorityInQueue_");
				return new PrefetchPathElement2(new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.NotesDetailsEntity, 0, null, null, GetRelationsForField("NotesDetailsCollectionViaPriorityInQueue"), null, "NotesDetailsCollectionViaPriorityInQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'NotesDetails' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathNotesDetailsCollectionViaPriorityInQueue_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.PriorityInQueueEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "PriorityInQueue_");
				return new PrefetchPathElement2(new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.NotesDetailsEntity, 0, null, null, GetRelationsForField("NotesDetailsCollectionViaPriorityInQueue_"), null, "NotesDetailsCollectionViaPriorityInQueue_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'NotesDetails' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathNotesDetailsCollectionViaCallQueueCustomer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.NotesDetailsEntity, 0, null, null, GetRelationsForField("NotesDetailsCollectionViaCallQueueCustomer_"), null, "NotesDetailsCollectionViaCallQueueCustomer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'NotesDetails' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathNotesDetailsCollectionViaEvents
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingAssignedToOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.NotesDetailsEntity, 0, null, null, GetRelationsForField("NotesDetailsCollectionViaEvents"), null, "NotesDetailsCollectionViaEvents", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'NotesDetails' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathNotesDetailsCollectionViaCallQueueCustomer__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.NotesDetailsEntity, 0, null, null, GetRelationsForField("NotesDetailsCollectionViaCallQueueCustomer__"), null, "NotesDetailsCollectionViaCallQueueCustomer__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'NotesDetails' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathNotesDetailsCollectionViaEvents_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.NotesDetailsEntity, 0, null, null, GetRelationsForField("NotesDetailsCollectionViaEvents_"), null, "NotesDetailsCollectionViaEvents_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'NotesDetails' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathNotesDetailsCollectionViaEvents___
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingSignOffOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.NotesDetailsEntity, 0, null, null, GetRelationsForField("NotesDetailsCollectionViaEvents___"), null, "NotesDetailsCollectionViaEvents___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'NotesDetails' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathNotesDetailsCollectionViaCallQueueCustomer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingAssignedToOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.NotesDetailsEntity, 0, null, null, GetRelationsForField("NotesDetailsCollectionViaCallQueueCustomer"), null, "NotesDetailsCollectionViaCallQueueCustomer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'NotesDetails' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathNotesDetailsCollectionViaEvents____
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingUpdatedByAdmin;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.NotesDetailsEntity, 0, null, null, GetRelationsForField("NotesDetailsCollectionViaEvents____"), null, "NotesDetailsCollectionViaEvents____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'NotesDetails' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathNotesDetailsCollectionViaEvents__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingEventActivityOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.NotesDetailsEntity, 0, null, null, GetRelationsForField("NotesDetailsCollectionViaEvents__"), null, "NotesDetailsCollectionViaEvents__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'NotificationMedium' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathNotificationMediumCollectionViaNotificationType
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.NotificationTypeEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "NotificationType_");
				return new PrefetchPathElement2(new EntityCollection<NotificationMediumEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotificationMediumEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.NotificationMediumEntity, 0, null, null, GetRelationsForField("NotificationMediumCollectionViaNotificationType"), null, "NotificationMediumCollectionViaNotificationType", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'NotificationMedium' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathNotificationMediumCollectionViaNotification
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.NotificationEntityUsingRequestedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Notification_");
				return new PrefetchPathElement2(new EntityCollection<NotificationMediumEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotificationMediumEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.NotificationMediumEntity, 0, null, null, GetRelationsForField("NotificationMediumCollectionViaNotification"), null, "NotificationMediumCollectionViaNotification", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'NotificationType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathNotificationTypeCollectionViaEventCustomerTestNotPerformedNotification
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerTestNotPerformedNotificationEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerTestNotPerformedNotification_");
				return new PrefetchPathElement2(new EntityCollection<NotificationTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotificationTypeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.NotificationTypeEntity, 0, null, null, GetRelationsForField("NotificationTypeCollectionViaEventCustomerTestNotPerformedNotification"), null, "NotificationTypeCollectionViaEventCustomerTestNotPerformedNotification", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'NotificationType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathNotificationTypeCollectionViaEmailTemplate
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EmailTemplateEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EmailTemplate_");
				return new PrefetchPathElement2(new EntityCollection<NotificationTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotificationTypeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.NotificationTypeEntity, 0, null, null, GetRelationsForField("NotificationTypeCollectionViaEmailTemplate"), null, "NotificationTypeCollectionViaEmailTemplate", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'NotificationType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathNotificationTypeCollectionViaNotification
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.NotificationEntityUsingRequestedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Notification_");
				return new PrefetchPathElement2(new EntityCollection<NotificationTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotificationTypeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.NotificationTypeEntity, 0, null, null, GetRelationsForField("NotificationTypeCollectionViaNotification"), null, "NotificationTypeCollectionViaNotification", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Order' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrderCollectionViaRefundRequest_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.RefundRequestEntityUsingProcessedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "RefundRequest_");
				return new PrefetchPathElement2(new EntityCollection<OrderEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrderEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.OrderEntity, 0, null, null, GetRelationsForField("OrderCollectionViaRefundRequest_"), null, "OrderCollectionViaRefundRequest_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Order' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrderCollectionViaRefundRequest
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.RefundRequestEntityUsingRequestedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "RefundRequest_");
				return new PrefetchPathElement2(new EntityCollection<OrderEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrderEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.OrderEntity, 0, null, null, GetRelationsForField("OrderCollectionViaRefundRequest"), null, "OrderCollectionViaRefundRequest", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Organization' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationCollectionViaAccountTestHcpcsCode_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.AccountTestHcpcsCodeEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "AccountTestHcpcsCode_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.OrganizationEntity, 0, null, null, GetRelationsForField("OrganizationCollectionViaAccountTestHcpcsCode_"), null, "OrganizationCollectionViaAccountTestHcpcsCode_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Organization' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationCollectionViaAccountTestHcpcsCode
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.AccountTestHcpcsCodeEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "AccountTestHcpcsCode_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.OrganizationEntity, 0, null, null, GetRelationsForField("OrganizationCollectionViaAccountTestHcpcsCode"), null, "OrganizationCollectionViaAccountTestHcpcsCode", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Organization' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationCollectionViaAccountCallCenterOrganization
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.AccountCallCenterOrganizationEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "AccountCallCenterOrganization_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.OrganizationEntity, 0, null, null, GetRelationsForField("OrganizationCollectionViaAccountCallCenterOrganization"), null, "OrganizationCollectionViaAccountCallCenterOrganization", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Organization' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationCollectionViaAccountCallCenterOrganization_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.AccountCallCenterOrganizationEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "AccountCallCenterOrganization_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.OrganizationEntity, 0, null, null, GetRelationsForField("OrganizationCollectionViaAccountCallCenterOrganization_"), null, "OrganizationCollectionViaAccountCallCenterOrganization_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Organization' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationCollectionViaEventAccountTestHcpcsCode_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventAccountTestHcpcsCodeEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "EventAccountTestHcpcsCode_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.OrganizationEntity, 0, null, null, GetRelationsForField("OrganizationCollectionViaEventAccountTestHcpcsCode_"), null, "OrganizationCollectionViaEventAccountTestHcpcsCode_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Organization' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationCollectionViaEventAccountTestHcpcsCode
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventAccountTestHcpcsCodeEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventAccountTestHcpcsCode_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.OrganizationEntity, 0, null, null, GetRelationsForField("OrganizationCollectionViaEventAccountTestHcpcsCode"), null, "OrganizationCollectionViaEventAccountTestHcpcsCode", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Organization' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationCollectionViaMarketingPrintOrder
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.MarketingPrintOrderEntityUsingOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "MarketingPrintOrder_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.OrganizationEntity, 0, null, null, GetRelationsForField("OrganizationCollectionViaMarketingPrintOrder"), null, "OrganizationCollectionViaMarketingPrintOrder", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Organization' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationCollectionViaMarketingPrintOrder_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.MarketingPrintOrderEntityUsingOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "MarketingPrintOrder_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.OrganizationEntity, 0, null, null, GetRelationsForField("OrganizationCollectionViaMarketingPrintOrder_"), null, "OrganizationCollectionViaMarketingPrintOrder_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Organization' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganizationCollectionViaAffiliateProfile
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.AffiliateProfileEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "AffiliateProfile_");
				return new PrefetchPathElement2(new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.OrganizationEntity, 0, null, null, GetRelationsForField("OrganizationCollectionViaAffiliateProfile"), null, "OrganizationCollectionViaAffiliateProfile", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Package' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPackageCollectionViaPreApprovedPackage
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.PreApprovedPackageEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "PreApprovedPackage_");
				return new PrefetchPathElement2(new EntityCollection<PackageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PackageEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PackageEntity, 0, null, null, GetRelationsForField("PackageCollectionViaPreApprovedPackage"), null, "PackageCollectionViaPreApprovedPackage", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PhysicianMaster' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPhysicianMasterCollectionViaCustomerPrimaryCarePhysician
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingUpdatedByOrganizationRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerPrimaryCarePhysician_");
				return new PrefetchPathElement2(new EntityCollection<PhysicianMasterEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PhysicianMasterEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PhysicianMasterEntity, 0, null, null, GetRelationsForField("PhysicianMasterCollectionViaCustomerPrimaryCarePhysician"), null, "PhysicianMasterCollectionViaCustomerPrimaryCarePhysician", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PhysicianMaster' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPhysicianMasterCollectionViaCustomerPrimaryCarePhysician_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerPrimaryCarePhysician_");
				return new PrefetchPathElement2(new EntityCollection<PhysicianMasterEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PhysicianMasterEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PhysicianMasterEntity, 0, null, null, GetRelationsForField("PhysicianMasterCollectionViaCustomerPrimaryCarePhysician_"), null, "PhysicianMasterCollectionViaCustomerPrimaryCarePhysician_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PhysicianMaster' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPhysicianMasterCollectionViaCustomerPrimaryCarePhysician__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerPrimaryCarePhysicianEntityUsingPcpAddressVerifiedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerPrimaryCarePhysician_");
				return new PrefetchPathElement2(new EntityCollection<PhysicianMasterEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PhysicianMasterEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PhysicianMasterEntity, 0, null, null, GetRelationsForField("PhysicianMasterCollectionViaCustomerPrimaryCarePhysician__"), null, "PhysicianMasterCollectionViaCustomerPrimaryCarePhysician__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PodDetails' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPodDetailsCollectionViaSalesRepPodAssigments
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.SalesRepPodAssigmentsEntityUsingOrganizationRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "SalesRepPodAssigments_");
				return new PrefetchPathElement2(new EntityCollection<PodDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PodDetailsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PodDetailsEntity, 0, null, null, GetRelationsForField("PodDetailsCollectionViaSalesRepPodAssigments"), null, "PodDetailsCollectionViaSalesRepPodAssigments", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PodDetails' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPodDetailsCollectionViaEventStaffAssignment
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventStaffAssignmentEntityUsingScheduledStaffOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventStaffAssignment_");
				return new PrefetchPathElement2(new EntityCollection<PodDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PodDetailsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PodDetailsEntity, 0, null, null, GetRelationsForField("PodDetailsCollectionViaEventStaffAssignment"), null, "PodDetailsCollectionViaEventStaffAssignment", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PodDetails' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPodDetailsCollectionViaEventNote_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventNoteEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "EventNote_");
				return new PrefetchPathElement2(new EntityCollection<PodDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PodDetailsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PodDetailsEntity, 0, null, null, GetRelationsForField("PodDetailsCollectionViaEventNote_"), null, "PodDetailsCollectionViaEventNote_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PodDetails' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPodDetailsCollectionViaEventNote
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventNoteEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventNote_");
				return new PrefetchPathElement2(new EntityCollection<PodDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PodDetailsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PodDetailsEntity, 0, null, null, GetRelationsForField("PodDetailsCollectionViaEventNote"), null, "PodDetailsCollectionViaEventNote", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PodDetails' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPodDetailsCollectionViaPodDefaultTeam
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.PodDefaultTeamEntityUsingOrgnizationRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "PodDefaultTeam_");
				return new PrefetchPathElement2(new EntityCollection<PodDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PodDetailsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PodDetailsEntity, 0, null, null, GetRelationsForField("PodDetailsCollectionViaPodDefaultTeam"), null, "PodDetailsCollectionViaPodDefaultTeam", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PodDetails' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPodDetailsCollectionViaEventStaffAssignment_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventStaffAssignmentEntityUsingActualStaffOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventStaffAssignment_");
				return new PrefetchPathElement2(new EntityCollection<PodDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PodDetailsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PodDetailsEntity, 0, null, null, GetRelationsForField("PodDetailsCollectionViaEventStaffAssignment_"), null, "PodDetailsCollectionViaEventStaffAssignment_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PodDetails' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPodDetailsCollectionViaEventStaffAssignment__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventStaffAssignmentEntityUsingScheduledByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventStaffAssignment_");
				return new PrefetchPathElement2(new EntityCollection<PodDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PodDetailsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PodDetailsEntity, 0, null, null, GetRelationsForField("PodDetailsCollectionViaEventStaffAssignment__"), null, "PodDetailsCollectionViaEventStaffAssignment__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PreQualificationQuestion' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPreQualificationQuestionCollectionViaEventCustomerQuestionAnswer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerQuestionAnswerEntityUsingUpdatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerQuestionAnswer_");
				return new PrefetchPathElement2(new EntityCollection<PreQualificationQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreQualificationQuestionEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PreQualificationQuestionEntity, 0, null, null, GetRelationsForField("PreQualificationQuestionCollectionViaEventCustomerQuestionAnswer_"), null, "PreQualificationQuestionCollectionViaEventCustomerQuestionAnswer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PreQualificationQuestion' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPreQualificationQuestionCollectionViaDisqualifiedTest
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.DisqualifiedTestEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "DisqualifiedTest_");
				return new PrefetchPathElement2(new EntityCollection<PreQualificationQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreQualificationQuestionEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PreQualificationQuestionEntity, 0, null, null, GetRelationsForField("PreQualificationQuestionCollectionViaDisqualifiedTest"), null, "PreQualificationQuestionCollectionViaDisqualifiedTest", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PreQualificationQuestion' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPreQualificationQuestionCollectionViaDisqualifiedTest_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.DisqualifiedTestEntityUsingUpdatedBy;
				intermediateRelation.SetAliases(string.Empty, "DisqualifiedTest_");
				return new PrefetchPathElement2(new EntityCollection<PreQualificationQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreQualificationQuestionEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PreQualificationQuestionEntity, 0, null, null, GetRelationsForField("PreQualificationQuestionCollectionViaDisqualifiedTest_"), null, "PreQualificationQuestionCollectionViaDisqualifiedTest_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PreQualificationQuestion' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPreQualificationQuestionCollectionViaEventCustomerQuestionAnswer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerQuestionAnswerEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerQuestionAnswer_");
				return new PrefetchPathElement2(new EntityCollection<PreQualificationQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreQualificationQuestionEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PreQualificationQuestionEntity, 0, null, null, GetRelationsForField("PreQualificationQuestionCollectionViaEventCustomerQuestionAnswer"), null, "PreQualificationQuestionCollectionViaEventCustomerQuestionAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ProspectCustomer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProspectCustomerCollectionViaCallQueueCustomer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<ProspectCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectCustomerEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ProspectCustomerEntity, 0, null, null, GetRelationsForField("ProspectCustomerCollectionViaCallQueueCustomer_"), null, "ProspectCustomerCollectionViaCallQueueCustomer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ProspectCustomer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProspectCustomerCollectionViaCallQueueCustomer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingAssignedToOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<ProspectCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectCustomerEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ProspectCustomerEntity, 0, null, null, GetRelationsForField("ProspectCustomerCollectionViaCallQueueCustomer"), null, "ProspectCustomerCollectionViaCallQueueCustomer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ProspectCustomer' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProspectCustomerCollectionViaCallQueueCustomer__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueCustomerEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueueCustomer_");
				return new PrefetchPathElement2(new EntityCollection<ProspectCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectCustomerEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ProspectCustomerEntity, 0, null, null, GetRelationsForField("ProspectCustomerCollectionViaCallQueueCustomer__"), null, "ProspectCustomerCollectionViaCallQueueCustomer__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ProspectListDetails' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProspectListDetailsCollectionViaProspects
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ProspectsEntityUsingOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Prospects_");
				return new PrefetchPathElement2(new EntityCollection<ProspectListDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectListDetailsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ProspectListDetailsEntity, 0, null, null, GetRelationsForField("ProspectListDetailsCollectionViaProspects"), null, "ProspectListDetailsCollectionViaProspects", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Prospects' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProspectsCollectionViaHostFacilityRanking
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HostFacilityRankingEntityUsingRankedByOrganizationRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "HostFacilityRanking_");
				return new PrefetchPathElement2(new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ProspectsEntity, 0, null, null, GetRelationsForField("ProspectsCollectionViaHostFacilityRanking"), null, "ProspectsCollectionViaHostFacilityRanking", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Prospects' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProspectsCollectionViaHostPayment
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HostPaymentEntityUsingCreatorOrganizationRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "HostPayment_");
				return new PrefetchPathElement2(new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ProspectsEntity, 0, null, null, GetRelationsForField("ProspectsCollectionViaHostPayment"), null, "ProspectsCollectionViaHostPayment", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ProspectType' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathProspectTypeCollectionViaProspects
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ProspectsEntityUsingOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Prospects_");
				return new PrefetchPathElement2(new EntityCollection<ProspectTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectTypeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ProspectTypeEntity, 0, null, null, GetRelationsForField("ProspectTypeCollectionViaProspects"), null, "ProspectTypeCollectionViaProspects", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'RefundRequest' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathRefundRequestCollectionViaEventAppointmentCancellationLog
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventAppointmentCancellationLogEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventAppointmentCancellationLog_");
				return new PrefetchPathElement2(new EntityCollection<RefundRequestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RefundRequestEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.RefundRequestEntity, 0, null, null, GetRelationsForField("RefundRequestCollectionViaEventAppointmentCancellationLog"), null, "RefundRequestCollectionViaEventAppointmentCancellationLog", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Relationship' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathRelationshipCollectionViaGuardianDetails_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.GuardianDetailsEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "GuardianDetails_");
				return new PrefetchPathElement2(new EntityCollection<RelationshipEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RelationshipEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.RelationshipEntity, 0, null, null, GetRelationsForField("RelationshipCollectionViaGuardianDetails_"), null, "RelationshipCollectionViaGuardianDetails_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Relationship' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathRelationshipCollectionViaGuardianDetails
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.GuardianDetailsEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "GuardianDetails_");
				return new PrefetchPathElement2(new EntityCollection<RelationshipEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RelationshipEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.RelationshipEntity, 0, null, null, GetRelationsForField("RelationshipCollectionViaGuardianDetails"), null, "RelationshipCollectionViaGuardianDetails", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'RescheduleCancelDisposition' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathRescheduleCancelDispositionCollectionViaEventAppointmentChangeLog
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventAppointmentChangeLogEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventAppointmentChangeLog_");
				return new PrefetchPathElement2(new EntityCollection<RescheduleCancelDispositionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RescheduleCancelDispositionEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.RescheduleCancelDispositionEntity, 0, null, null, GetRelationsForField("RescheduleCancelDispositionCollectionViaEventAppointmentChangeLog"), null, "RescheduleCancelDispositionCollectionViaEventAppointmentChangeLog", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'RescheduleCancelDisposition' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathRescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventAppointmentCancellationLogEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventAppointmentCancellationLog_");
				return new PrefetchPathElement2(new EntityCollection<RescheduleCancelDispositionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RescheduleCancelDispositionEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.RescheduleCancelDispositionEntity, 0, null, null, GetRelationsForField("RescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog"), null, "RescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Role' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathRoleCollectionViaUser
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.UserEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "User_");
				return new PrefetchPathElement2(new EntityCollection<RoleEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RoleEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.RoleEntity, 0, null, null, GetRelationsForField("RoleCollectionViaUser"), null, "RoleCollectionViaUser", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Role' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathRoleCollectionViaHostFacilityRanking
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.HostFacilityRankingEntityUsingRankedByOrganizationRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "HostFacilityRanking_");
				return new PrefetchPathElement2(new EntityCollection<RoleEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RoleEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.RoleEntity, 0, null, null, GetRelationsForField("RoleCollectionViaHostFacilityRanking"), null, "RoleCollectionViaHostFacilityRanking", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Role' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathRoleCollectionViaUser_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.UserEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "User_");
				return new PrefetchPathElement2(new EntityCollection<RoleEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RoleEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.RoleEntity, 0, null, null, GetRelationsForField("RoleCollectionViaUser_"), null, "RoleCollectionViaUser_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ScheduleMethod' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathScheduleMethodCollectionViaEvents___
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingSignOffOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<ScheduleMethodEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ScheduleMethodEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ScheduleMethodEntity, 0, null, null, GetRelationsForField("ScheduleMethodCollectionViaEvents___"), null, "ScheduleMethodCollectionViaEvents___", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ScheduleMethod' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathScheduleMethodCollectionViaEvents____
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingUpdatedByAdmin;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<ScheduleMethodEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ScheduleMethodEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ScheduleMethodEntity, 0, null, null, GetRelationsForField("ScheduleMethodCollectionViaEvents____"), null, "ScheduleMethodCollectionViaEvents____", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ScheduleMethod' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathScheduleMethodCollectionViaEvents
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingAssignedToOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<ScheduleMethodEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ScheduleMethodEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ScheduleMethodEntity, 0, null, null, GetRelationsForField("ScheduleMethodCollectionViaEvents"), null, "ScheduleMethodCollectionViaEvents", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ScheduleMethod' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathScheduleMethodCollectionViaEvents_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<ScheduleMethodEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ScheduleMethodEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ScheduleMethodEntity, 0, null, null, GetRelationsForField("ScheduleMethodCollectionViaEvents_"), null, "ScheduleMethodCollectionViaEvents_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ScheduleMethod' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathScheduleMethodCollectionViaEvents__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventsEntityUsingEventActivityOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Events_");
				return new PrefetchPathElement2(new EntityCollection<ScheduleMethodEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ScheduleMethodEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ScheduleMethodEntity, 0, null, null, GetRelationsForField("ScheduleMethodCollectionViaEvents__"), null, "ScheduleMethodCollectionViaEvents__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Scripts' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathScriptsCollectionViaCallQueue
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueue_");
				return new PrefetchPathElement2(new EntityCollection<ScriptsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ScriptsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ScriptsEntity, 0, null, null, GetRelationsForField("ScriptsCollectionViaCallQueue"), null, "ScriptsCollectionViaCallQueue", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Scripts' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathScriptsCollectionViaCallQueue_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CallQueueEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CallQueue_");
				return new PrefetchPathElement2(new EntityCollection<ScriptsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ScriptsEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ScriptsEntity, 0, null, null, GetRelationsForField("ScriptsCollectionViaCallQueue_"), null, "ScriptsCollectionViaCallQueue_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ShippingOption' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathShippingOptionCollectionViaShippingDetail_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ShippingDetailEntityUsingShippedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "ShippingDetail_");
				return new PrefetchPathElement2(new EntityCollection<ShippingOptionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShippingOptionEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ShippingOptionEntity, 0, null, null, GetRelationsForField("ShippingOptionCollectionViaShippingDetail_"), null, "ShippingOptionCollectionViaShippingDetail_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'ShippingOption' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathShippingOptionCollectionViaShippingDetail
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ShippingDetailEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "ShippingDetail_");
				return new PrefetchPathElement2(new EntityCollection<ShippingOptionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShippingOptionEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ShippingOptionEntity, 0, null, null, GetRelationsForField("ShippingOptionCollectionViaShippingDetail"), null, "ShippingOptionCollectionViaShippingDetail", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'StaffEventRole' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathStaffEventRoleCollectionViaEventStaffAssignment__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventStaffAssignmentEntityUsingScheduledByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventStaffAssignment_");
				return new PrefetchPathElement2(new EntityCollection<StaffEventRoleEntity>(EntityFactoryCache2.GetEntityFactory(typeof(StaffEventRoleEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.StaffEventRoleEntity, 0, null, null, GetRelationsForField("StaffEventRoleCollectionViaEventStaffAssignment__"), null, "StaffEventRoleCollectionViaEventStaffAssignment__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'StaffEventRole' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathStaffEventRoleCollectionViaPodDefaultTeam
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.PodDefaultTeamEntityUsingOrgnizationRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "PodDefaultTeam_");
				return new PrefetchPathElement2(new EntityCollection<StaffEventRoleEntity>(EntityFactoryCache2.GetEntityFactory(typeof(StaffEventRoleEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.StaffEventRoleEntity, 0, null, null, GetRelationsForField("StaffEventRoleCollectionViaPodDefaultTeam"), null, "StaffEventRoleCollectionViaPodDefaultTeam", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'StaffEventRole' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathStaffEventRoleCollectionViaEventStaffAssignment
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventStaffAssignmentEntityUsingScheduledStaffOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventStaffAssignment_");
				return new PrefetchPathElement2(new EntityCollection<StaffEventRoleEntity>(EntityFactoryCache2.GetEntityFactory(typeof(StaffEventRoleEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.StaffEventRoleEntity, 0, null, null, GetRelationsForField("StaffEventRoleCollectionViaEventStaffAssignment"), null, "StaffEventRoleCollectionViaEventStaffAssignment", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'StaffEventRole' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathStaffEventRoleCollectionViaEventStaffAssignment_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventStaffAssignmentEntityUsingActualStaffOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventStaffAssignment_");
				return new PrefetchPathElement2(new EntityCollection<StaffEventRoleEntity>(EntityFactoryCache2.GetEntityFactory(typeof(StaffEventRoleEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.StaffEventRoleEntity, 0, null, null, GetRelationsForField("StaffEventRoleCollectionViaEventStaffAssignment_"), null, "StaffEventRoleCollectionViaEventStaffAssignment_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'StandardFindingTestReading' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathStandardFindingTestReadingCollectionViaCustomerEventReading
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerEventReadingEntityUsingUpdatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerEventReading_");
				return new PrefetchPathElement2(new EntityCollection<StandardFindingTestReadingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(StandardFindingTestReadingEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.StandardFindingTestReadingEntity, 0, null, null, GetRelationsForField("StandardFindingTestReadingCollectionViaCustomerEventReading"), null, "StandardFindingTestReadingCollectionViaCustomerEventReading", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'State' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathStateCollectionViaAddress
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.AddressEntityUsingVerificationOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Address_");
				return new PrefetchPathElement2(new EntityCollection<StateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(StateEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.StateEntity, 0, null, null, GetRelationsForField("StateCollectionViaAddress"), null, "StateCollectionViaAddress", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SurveyQuestion' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSurveyQuestionCollectionViaSurveyAnswer_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.SurveyAnswerEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "SurveyAnswer_");
				return new PrefetchPathElement2(new EntityCollection<SurveyQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyQuestionEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.SurveyQuestionEntity, 0, null, null, GetRelationsForField("SurveyQuestionCollectionViaSurveyAnswer_"), null, "SurveyQuestionCollectionViaSurveyAnswer_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'SurveyQuestion' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathSurveyQuestionCollectionViaSurveyAnswer
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.SurveyAnswerEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "SurveyAnswer_");
				return new PrefetchPathElement2(new EntityCollection<SurveyQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyQuestionEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.SurveyQuestionEntity, 0, null, null, GetRelationsForField("SurveyQuestionCollectionViaSurveyAnswer"), null, "SurveyQuestionCollectionViaSurveyAnswer", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Tag' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTagCollectionViaPreAssessmentCustomerCallQueueCallAttempt
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.PreAssessmentCustomerCallQueueCallAttemptEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "PreAssessmentCustomerCallQueueCallAttempt_");
				return new PrefetchPathElement2(new EntityCollection<TagEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TagEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TagEntity, 0, null, null, GetRelationsForField("TagCollectionViaPreAssessmentCustomerCallQueueCallAttempt"), null, "TagCollectionViaPreAssessmentCustomerCallQueueCallAttempt", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Tag' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTagCollectionViaCustomerCallQueueCallAttempt
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerCallQueueCallAttemptEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "CustomerCallQueueCallAttempt_");
				return new PrefetchPathElement2(new EntityCollection<TagEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TagEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TagEntity, 0, null, null, GetRelationsForField("TagCollectionViaCustomerCallQueueCallAttempt"), null, "TagCollectionViaCustomerCallQueueCallAttempt", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TaskPriorityTypes' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTaskPriorityTypesCollectionViaTaskDetails__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.TaskDetailsEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "TaskDetails_");
				return new PrefetchPathElement2(new EntityCollection<TaskPriorityTypesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TaskPriorityTypesEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TaskPriorityTypesEntity, 0, null, null, GetRelationsForField("TaskPriorityTypesCollectionViaTaskDetails__"), null, "TaskPriorityTypesCollectionViaTaskDetails__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TaskPriorityTypes' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTaskPriorityTypesCollectionViaTaskDetails_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.TaskDetailsEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "TaskDetails_");
				return new PrefetchPathElement2(new EntityCollection<TaskPriorityTypesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TaskPriorityTypesEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TaskPriorityTypesEntity, 0, null, null, GetRelationsForField("TaskPriorityTypesCollectionViaTaskDetails_"), null, "TaskPriorityTypesCollectionViaTaskDetails_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TaskPriorityTypes' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTaskPriorityTypesCollectionViaTaskDetails
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.TaskDetailsEntityUsingAssignedToOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "TaskDetails_");
				return new PrefetchPathElement2(new EntityCollection<TaskPriorityTypesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TaskPriorityTypesEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TaskPriorityTypesEntity, 0, null, null, GetRelationsForField("TaskPriorityTypesCollectionViaTaskDetails"), null, "TaskPriorityTypesCollectionViaTaskDetails", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TaskStatusTypes' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTaskStatusTypesCollectionViaTaskDetails_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.TaskDetailsEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "TaskDetails_");
				return new PrefetchPathElement2(new EntityCollection<TaskStatusTypesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TaskStatusTypesEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TaskStatusTypesEntity, 0, null, null, GetRelationsForField("TaskStatusTypesCollectionViaTaskDetails_"), null, "TaskStatusTypesCollectionViaTaskDetails_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TaskStatusTypes' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTaskStatusTypesCollectionViaTaskDetails__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.TaskDetailsEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "TaskDetails_");
				return new PrefetchPathElement2(new EntityCollection<TaskStatusTypesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TaskStatusTypesEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TaskStatusTypesEntity, 0, null, null, GetRelationsForField("TaskStatusTypesCollectionViaTaskDetails__"), null, "TaskStatusTypesCollectionViaTaskDetails__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TaskStatusTypes' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTaskStatusTypesCollectionViaTaskDetails
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.TaskDetailsEntityUsingAssignedToOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "TaskDetails_");
				return new PrefetchPathElement2(new EntityCollection<TaskStatusTypesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TaskStatusTypesEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TaskStatusTypesEntity, 0, null, null, GetRelationsForField("TaskStatusTypesCollectionViaTaskDetails"), null, "TaskStatusTypesCollectionViaTaskDetails", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TechnicianProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTechnicianProfileCollectionViaPinChangelog
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.PinChangelogEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "PinChangelog_");
				return new PrefetchPathElement2(new EntityCollection<TechnicianProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TechnicianProfileEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TechnicianProfileEntity, 0, null, null, GetRelationsForField("TechnicianProfileCollectionViaPinChangelog"), null, "TechnicianProfileCollectionViaPinChangelog", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Territory' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTerritoryCollectionViaTerritory
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.TerritoryEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "Territory_");
				return new PrefetchPathElement2(new EntityCollection<TerritoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TerritoryEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TerritoryEntity, 0, null, null, GetRelationsForField("TerritoryCollectionViaTerritory"), null, "TerritoryCollectionViaTerritory", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Territory' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTerritoryCollectionViaOrganizationRoleUserTerritory
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.OrganizationRoleUserTerritoryEntityUsingOrganizationRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "OrganizationRoleUserTerritory_");
				return new PrefetchPathElement2(new EntityCollection<TerritoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TerritoryEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TerritoryEntity, 0, null, null, GetRelationsForField("TerritoryCollectionViaOrganizationRoleUserTerritory"), null, "TerritoryCollectionViaOrganizationRoleUserTerritory", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Test' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestCollectionViaEventCustomerTestNotPerformedNotification
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerTestNotPerformedNotificationEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerTestNotPerformedNotification_");
				return new PrefetchPathElement2(new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestEntity, 0, null, null, GetRelationsForField("TestCollectionViaEventCustomerTestNotPerformedNotification"), null, "TestCollectionViaEventCustomerTestNotPerformedNotification", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Test' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestCollectionViaEventPhysicianTest
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventPhysicianTestEntityUsingAssignedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventPhysicianTest_");
				return new PrefetchPathElement2(new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestEntity, 0, null, null, GetRelationsForField("TestCollectionViaEventPhysicianTest"), null, "TestCollectionViaEventPhysicianTest", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Test' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestCollectionViaDisqualifiedTest_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.DisqualifiedTestEntityUsingUpdatedBy;
				intermediateRelation.SetAliases(string.Empty, "DisqualifiedTest_");
				return new PrefetchPathElement2(new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestEntity, 0, null, null, GetRelationsForField("TestCollectionViaDisqualifiedTest_"), null, "TestCollectionViaDisqualifiedTest_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Test' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestCollectionViaEventCustomerRetest
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventCustomerRetestEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventCustomerRetest_");
				return new PrefetchPathElement2(new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestEntity, 0, null, null, GetRelationsForField("TestCollectionViaEventCustomerRetest"), null, "TestCollectionViaEventCustomerRetest", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Test' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestCollectionViaEventPhysicianTest_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventPhysicianTestEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "EventPhysicianTest_");
				return new PrefetchPathElement2(new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestEntity, 0, null, null, GetRelationsForField("TestCollectionViaEventPhysicianTest_"), null, "TestCollectionViaEventPhysicianTest_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Test' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestCollectionViaKynLabValues_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.KynLabValuesEntityUsingModifiedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "KynLabValues_");
				return new PrefetchPathElement2(new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestEntity, 0, null, null, GetRelationsForField("TestCollectionViaKynLabValues_"), null, "TestCollectionViaKynLabValues_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Test' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestCollectionViaEventPhysicianTest__
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventPhysicianTestEntityUsingPhysicianId;
				intermediateRelation.SetAliases(string.Empty, "EventPhysicianTest_");
				return new PrefetchPathElement2(new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestEntity, 0, null, null, GetRelationsForField("TestCollectionViaEventPhysicianTest__"), null, "TestCollectionViaEventPhysicianTest__", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Test' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestCollectionViaTestHcpcsCode_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.TestHcpcsCodeEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "TestHcpcsCode_");
				return new PrefetchPathElement2(new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestEntity, 0, null, null, GetRelationsForField("TestCollectionViaTestHcpcsCode_"), null, "TestCollectionViaTestHcpcsCode_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Test' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestCollectionViaTestHcpcsCode
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.TestHcpcsCodeEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "TestHcpcsCode_");
				return new PrefetchPathElement2(new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestEntity, 0, null, null, GetRelationsForField("TestCollectionViaTestHcpcsCode"), null, "TestCollectionViaTestHcpcsCode", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Test' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestCollectionViaKynLabValues
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.KynLabValuesEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "KynLabValues_");
				return new PrefetchPathElement2(new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestEntity, 0, null, null, GetRelationsForField("TestCollectionViaKynLabValues"), null, "TestCollectionViaKynLabValues", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Test' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestCollectionViaPreApprovedTest
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.PreApprovedTestEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "PreApprovedTest_");
				return new PrefetchPathElement2(new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestEntity, 0, null, null, GetRelationsForField("TestCollectionViaPreApprovedTest"), null, "TestCollectionViaPreApprovedTest", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Test' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestCollectionViaClinicalTestQualificationCriteria
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ClinicalTestQualificationCriteriaEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "ClinicalTestQualificationCriteria_");
				return new PrefetchPathElement2(new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestEntity, 0, null, null, GetRelationsForField("TestCollectionViaClinicalTestQualificationCriteria"), null, "TestCollectionViaClinicalTestQualificationCriteria", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Test' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestCollectionViaRequiredTest
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.RequiredTestEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "RequiredTest_");
				return new PrefetchPathElement2(new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestEntity, 0, null, null, GetRelationsForField("TestCollectionViaRequiredTest"), null, "TestCollectionViaRequiredTest", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Test' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestCollectionViaClinicalTestQualificationCriteria_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.ClinicalTestQualificationCriteriaEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "ClinicalTestQualificationCriteria_");
				return new PrefetchPathElement2(new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestEntity, 0, null, null, GetRelationsForField("TestCollectionViaClinicalTestQualificationCriteria_"), null, "TestCollectionViaClinicalTestQualificationCriteria_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Test' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestCollectionViaDisqualifiedTest
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.DisqualifiedTestEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "DisqualifiedTest_");
				return new PrefetchPathElement2(new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestEntity, 0, null, null, GetRelationsForField("TestCollectionViaDisqualifiedTest"), null, "TestCollectionViaDisqualifiedTest", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Test' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestCollectionViaPreQualificationTestTemplate
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.PreQualificationTestTemplateEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "PreQualificationTestTemplate_");
				return new PrefetchPathElement2(new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestEntity, 0, null, null, GetRelationsForField("TestCollectionViaPreQualificationTestTemplate"), null, "TestCollectionViaPreQualificationTestTemplate", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Test' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestCollectionViaPreQualificationTestTemplate_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.PreQualificationTestTemplateEntityUsingUpdatedBy;
				intermediateRelation.SetAliases(string.Empty, "PreQualificationTestTemplate_");
				return new PrefetchPathElement2(new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestEntity, 0, null, null, GetRelationsForField("TestCollectionViaPreQualificationTestTemplate_"), null, "TestCollectionViaPreQualificationTestTemplate_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Test' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestCollectionViaPreQualificationQuestion
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.PreQualificationQuestionEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "PreQualificationQuestion_");
				return new PrefetchPathElement2(new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestEntity, 0, null, null, GetRelationsForField("TestCollectionViaPreQualificationQuestion"), null, "TestCollectionViaPreQualificationQuestion", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TestHcpcsCode' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestHcpcsCodeCollectionViaEventAccountTestHcpcsCode_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventAccountTestHcpcsCodeEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "EventAccountTestHcpcsCode_");
				return new PrefetchPathElement2(new EntityCollection<TestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestHcpcsCodeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestHcpcsCodeEntity, 0, null, null, GetRelationsForField("TestHcpcsCodeCollectionViaEventAccountTestHcpcsCode_"), null, "TestHcpcsCodeCollectionViaEventAccountTestHcpcsCode_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TestHcpcsCode' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestHcpcsCodeCollectionViaEventAccountTestHcpcsCode
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.EventAccountTestHcpcsCodeEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "EventAccountTestHcpcsCode_");
				return new PrefetchPathElement2(new EntityCollection<TestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestHcpcsCodeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestHcpcsCodeEntity, 0, null, null, GetRelationsForField("TestHcpcsCodeCollectionViaEventAccountTestHcpcsCode"), null, "TestHcpcsCodeCollectionViaEventAccountTestHcpcsCode", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TestHcpcsCode' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestHcpcsCodeCollectionViaAccountTestHcpcsCode_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.AccountTestHcpcsCodeEntityUsingModifiedBy;
				intermediateRelation.SetAliases(string.Empty, "AccountTestHcpcsCode_");
				return new PrefetchPathElement2(new EntityCollection<TestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestHcpcsCodeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestHcpcsCodeEntity, 0, null, null, GetRelationsForField("TestHcpcsCodeCollectionViaAccountTestHcpcsCode_"), null, "TestHcpcsCodeCollectionViaAccountTestHcpcsCode_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TestHcpcsCode' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestHcpcsCodeCollectionViaAccountTestHcpcsCode
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.AccountTestHcpcsCodeEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "AccountTestHcpcsCode_");
				return new PrefetchPathElement2(new EntityCollection<TestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestHcpcsCodeEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestHcpcsCodeEntity, 0, null, null, GetRelationsForField("TestHcpcsCodeCollectionViaAccountTestHcpcsCode"), null, "TestHcpcsCodeCollectionViaAccountTestHcpcsCode", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TestNotPerformedReason' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestNotPerformedReasonCollectionViaTestNotPerformed_
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.TestNotPerformedEntityUsingUpdatedBy;
				intermediateRelation.SetAliases(string.Empty, "TestNotPerformed_");
				return new PrefetchPathElement2(new EntityCollection<TestNotPerformedReasonEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestNotPerformedReasonEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestNotPerformedReasonEntity, 0, null, null, GetRelationsForField("TestNotPerformedReasonCollectionViaTestNotPerformed_"), null, "TestNotPerformedReasonCollectionViaTestNotPerformed_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TestNotPerformedReason' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestNotPerformedReasonCollectionViaTestNotPerformed
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.TestNotPerformedEntityUsingCreatedBy;
				intermediateRelation.SetAliases(string.Empty, "TestNotPerformed_");
				return new PrefetchPathElement2(new EntityCollection<TestNotPerformedReasonEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestNotPerformedReasonEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestNotPerformedReasonEntity, 0, null, null, GetRelationsForField("TestNotPerformedReasonCollectionViaTestNotPerformed"), null, "TestNotPerformedReasonCollectionViaTestNotPerformed", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TestReading' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestReadingCollectionViaCustomerEventReading
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerEventReadingEntityUsingUpdatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerEventReading_");
				return new PrefetchPathElement2(new EntityCollection<TestReadingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestReadingEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestReadingEntity, 0, null, null, GetRelationsForField("TestReadingCollectionViaCustomerEventReading"), null, "TestReadingCollectionViaCustomerEventReading", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TestUnableScreenReason' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTestUnableScreenReasonCollectionViaCustomerEventUnableScreenReason
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.CustomerEventUnableScreenReasonEntityUsingUpdatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "CustomerEventUnableScreenReason_");
				return new PrefetchPathElement2(new EntityCollection<TestUnableScreenReasonEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestUnableScreenReasonEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TestUnableScreenReasonEntity, 0, null, null, GetRelationsForField("TestUnableScreenReasonCollectionViaCustomerEventUnableScreenReason"), null, "TestUnableScreenReasonCollectionViaCustomerEventUnableScreenReason", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'UserLogin' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathUserLoginCollectionViaPasswordChangelog
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.PasswordChangelogEntityUsingCreatedByOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "PasswordChangelog_");
				return new PrefetchPathElement2(new EntityCollection<UserLoginEntity>(EntityFactoryCache2.GetEntityFactory(typeof(UserLoginEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.UserLoginEntity, 0, null, null, GetRelationsForField("UserLoginCollectionViaPasswordChangelog"), null, "UserLoginCollectionViaPasswordChangelog", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Zip' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathZipCollectionViaAddress
		{
			get
			{
				IEntityRelation intermediateRelation = OrganizationRoleUserEntity.Relations.AddressEntityUsingVerificationOrgRoleUserId;
				intermediateRelation.SetAliases(string.Empty, "Address_");
				return new PrefetchPathElement2(new EntityCollection<ZipEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ZipEntityFactory))), intermediateRelation,
					(int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.ZipEntity, 0, null, null, GetRelationsForField("ZipCollectionViaAddress"), null, "ZipCollectionViaAddress", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToMany);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Organization' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrganization
		{
			get
			{
				return new PrefetchPathElement2(new EntityCollection(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory))),
					(IEntityRelation)GetRelationsForField("Organization")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.OrganizationEntity, 0, null, null, null, null, "Organization", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToOne);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Role' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathRole
		{
			get
			{
				return new PrefetchPathElement2(new EntityCollection(EntityFactoryCache2.GetEntityFactory(typeof(RoleEntityFactory))),
					(IEntityRelation)GetRelationsForField("Role")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.RoleEntity, 0, null, null, null, null, "Role", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToOne);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'User' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathUser
		{
			get
			{
				return new PrefetchPathElement2(new EntityCollection(EntityFactoryCache2.GetEntityFactory(typeof(UserEntityFactory))),
					(IEntityRelation)GetRelationsForField("User")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.UserEntity, 0, null, null, null, null, "User", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.ManyToOne);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'AccountCoordinatorProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAccountCoordinatorProfile
		{
			get
			{
				return new PrefetchPathElement2(new EntityCollection(EntityFactoryCache2.GetEntityFactory(typeof(AccountCoordinatorProfileEntityFactory))),
					(IEntityRelation)GetRelationsForField("AccountCoordinatorProfile")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AccountCoordinatorProfileEntity, 0, null, null, null, null, "AccountCoordinatorProfile", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToOne);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'AffiliateProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathAffiliateProfile_
		{
			get
			{
				return new PrefetchPathElement2(new EntityCollection(EntityFactoryCache2.GetEntityFactory(typeof(AffiliateProfileEntityFactory))),
					(IEntityRelation)GetRelationsForField("AffiliateProfile_")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.AffiliateProfileEntity, 0, null, null, null, null, "AffiliateProfile_", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToOne);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CallCenterRepProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCallCenterRepProfile
		{
			get
			{
				return new PrefetchPathElement2(new EntityCollection(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterRepProfileEntityFactory))),
					(IEntityRelation)GetRelationsForField("CallCenterRepProfile")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CallCenterRepProfileEntity, 0, null, null, null, null, "CallCenterRepProfile", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToOne);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerProfile
		{
			get
			{
				return new PrefetchPathElement2(new EntityCollection(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory))),
					(IEntityRelation)GetRelationsForField("CustomerProfile")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.CustomerProfileEntity, 0, null, null, null, null, "CustomerProfile", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToOne);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'PhysicianProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathPhysicianProfile
		{
			get
			{
				return new PrefetchPathElement2(new EntityCollection(EntityFactoryCache2.GetEntityFactory(typeof(PhysicianProfileEntityFactory))),
					(IEntityRelation)GetRelationsForField("PhysicianProfile")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.PhysicianProfileEntity, 0, null, null, null, null, "PhysicianProfile", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToOne);
			}
		}

		/// <summary> Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'TechnicianProfile' 
		/// for this entity. Add the object returned by this property to an existing PrefetchPath2 instance.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathTechnicianProfile
		{
			get
			{
				return new PrefetchPathElement2(new EntityCollection(EntityFactoryCache2.GetEntityFactory(typeof(TechnicianProfileEntityFactory))),
					(IEntityRelation)GetRelationsForField("TechnicianProfile")[0], (int)Falcon.Data.EntityType.OrganizationRoleUserEntity, (int)Falcon.Data.EntityType.TechnicianProfileEntity, 0, null, null, null, null, "TechnicianProfile", SD.LLBLGen.Pro.ORMSupportClasses.RelationType.OneToOne);
			}
		}

		/// <summary> The custom properties for the type of this entity instance.</summary>
		/// <remarks>The data returned from this property should be considered read-only: it is not thread safe to alter this data at runtime.</remarks>
		[Browsable(false), XmlIgnore]
		public override Dictionary<string, string> CustomPropertiesOfType
		{
			get { return OrganizationRoleUserEntity.CustomProperties;}
		}

		/// <summary> The custom properties for the fields of this entity type. The returned Hashtable contains per fieldname a hashtable of name-value
		/// pairs. </summary>
		/// <remarks>The data returned from this property should be considered read-only: it is not thread safe to alter this data at runtime.</remarks>
		public  static Dictionary<string, Dictionary<string, string>> FieldsCustomProperties
		{
			get { return _fieldsCustomProperties;}
		}

		/// <summary> The custom properties for the fields of the type of this entity instance. The returned Hashtable contains per fieldname a hashtable of name-value pairs. </summary>
		/// <remarks>The data returned from this property should be considered read-only: it is not thread safe to alter this data at runtime.</remarks>
		[Browsable(false), XmlIgnore]
		public override Dictionary<string, Dictionary<string, string>> FieldsCustomPropertiesOfType
		{
			get { return OrganizationRoleUserEntity.FieldsCustomProperties;}
		}

		/// <summary> The OrganizationRoleUserId property of the Entity OrganizationRoleUser<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "TblOrganizationRoleUser"."OrganizationRoleUserID"<br/>
		/// Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, true, true</remarks>
		public virtual System.Int64 OrganizationRoleUserId
		{
			get { return (System.Int64)GetValue((int)OrganizationRoleUserFieldIndex.OrganizationRoleUserId, true); }
			set	{ SetValue((int)OrganizationRoleUserFieldIndex.OrganizationRoleUserId, value); }
		}

		/// <summary> The UserId property of the Entity OrganizationRoleUser<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "TblOrganizationRoleUser"."UserID"<br/>
		/// Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int64 UserId
		{
			get { return (System.Int64)GetValue((int)OrganizationRoleUserFieldIndex.UserId, true); }
			set	{ SetValue((int)OrganizationRoleUserFieldIndex.UserId, value); }
		}

		/// <summary> The RoleId property of the Entity OrganizationRoleUser<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "TblOrganizationRoleUser"."RoleID"<br/>
		/// Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int64 RoleId
		{
			get { return (System.Int64)GetValue((int)OrganizationRoleUserFieldIndex.RoleId, true); }
			set	{ SetValue((int)OrganizationRoleUserFieldIndex.RoleId, value); }
		}

		/// <summary> The IsActive property of the Entity OrganizationRoleUser<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "TblOrganizationRoleUser"."IsActive"<br/>
		/// Table field type characteristics (type, precision, scale, length): Bit, 0, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Boolean IsActive
		{
			get { return (System.Boolean)GetValue((int)OrganizationRoleUserFieldIndex.IsActive, true); }
			set	{ SetValue((int)OrganizationRoleUserFieldIndex.IsActive, value); }
		}

		/// <summary> The OrganizationId property of the Entity OrganizationRoleUser<br/><br/>
		/// </summary>
		/// <remarks>Mapped on  table field: "TblOrganizationRoleUser"."OrganizationId"<br/>
		/// Table field type characteristics (type, precision, scale, length): BigInt, 19, 0, 0<br/>
		/// Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int64 OrganizationId
		{
			get { return (System.Int64)GetValue((int)OrganizationRoleUserFieldIndex.OrganizationId, true); }
			set	{ SetValue((int)OrganizationRoleUserFieldIndex.OrganizationId, value); }
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountCallCenterOrganizationEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountCallCenterOrganizationEntity))]
		public virtual EntityCollection<AccountCallCenterOrganizationEntity> AccountCallCenterOrganization_
		{
			get
			{
				if(_accountCallCenterOrganization_==null)
				{
					_accountCallCenterOrganization_ = new EntityCollection<AccountCallCenterOrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountCallCenterOrganizationEntityFactory)));
					_accountCallCenterOrganization_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _accountCallCenterOrganization_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountCallCenterOrganizationEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountCallCenterOrganizationEntity))]
		public virtual EntityCollection<AccountCallCenterOrganizationEntity> AccountCallCenterOrganization
		{
			get
			{
				if(_accountCallCenterOrganization==null)
				{
					_accountCallCenterOrganization = new EntityCollection<AccountCallCenterOrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountCallCenterOrganizationEntityFactory)));
					_accountCallCenterOrganization.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _accountCallCenterOrganization;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountHraChatQuestionnaireEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountHraChatQuestionnaireEntity))]
		public virtual EntityCollection<AccountHraChatQuestionnaireEntity> AccountHraChatQuestionnaire_
		{
			get
			{
				if(_accountHraChatQuestionnaire_==null)
				{
					_accountHraChatQuestionnaire_ = new EntityCollection<AccountHraChatQuestionnaireEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountHraChatQuestionnaireEntityFactory)));
					_accountHraChatQuestionnaire_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _accountHraChatQuestionnaire_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountHraChatQuestionnaireEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountHraChatQuestionnaireEntity))]
		public virtual EntityCollection<AccountHraChatQuestionnaireEntity> AccountHraChatQuestionnaire
		{
			get
			{
				if(_accountHraChatQuestionnaire==null)
				{
					_accountHraChatQuestionnaire = new EntityCollection<AccountHraChatQuestionnaireEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountHraChatQuestionnaireEntityFactory)));
					_accountHraChatQuestionnaire.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _accountHraChatQuestionnaire;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountTestHcpcsCodeEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountTestHcpcsCodeEntity))]
		public virtual EntityCollection<AccountTestHcpcsCodeEntity> AccountTestHcpcsCode_
		{
			get
			{
				if(_accountTestHcpcsCode_==null)
				{
					_accountTestHcpcsCode_ = new EntityCollection<AccountTestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountTestHcpcsCodeEntityFactory)));
					_accountTestHcpcsCode_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _accountTestHcpcsCode_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountTestHcpcsCodeEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountTestHcpcsCodeEntity))]
		public virtual EntityCollection<AccountTestHcpcsCodeEntity> AccountTestHcpcsCode
		{
			get
			{
				if(_accountTestHcpcsCode==null)
				{
					_accountTestHcpcsCode = new EntityCollection<AccountTestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountTestHcpcsCodeEntityFactory)));
					_accountTestHcpcsCode.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _accountTestHcpcsCode;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ActivityTypeEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ActivityTypeEntity))]
		public virtual EntityCollection<ActivityTypeEntity> ActivityType
		{
			get
			{
				if(_activityType==null)
				{
					_activityType = new EntityCollection<ActivityTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ActivityTypeEntityFactory)));
					_activityType.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _activityType;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AdditionalFieldsEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AdditionalFieldsEntity))]
		public virtual EntityCollection<AdditionalFieldsEntity> AdditionalFields_
		{
			get
			{
				if(_additionalFields_==null)
				{
					_additionalFields_ = new EntityCollection<AdditionalFieldsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AdditionalFieldsEntityFactory)));
					_additionalFields_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _additionalFields_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AdditionalFieldsEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AdditionalFieldsEntity))]
		public virtual EntityCollection<AdditionalFieldsEntity> AdditionalFields
		{
			get
			{
				if(_additionalFields==null)
				{
					_additionalFields = new EntityCollection<AdditionalFieldsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AdditionalFieldsEntityFactory)));
					_additionalFields.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _additionalFields;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AddressEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AddressEntity))]
		public virtual EntityCollection<AddressEntity> Address
		{
			get
			{
				if(_address==null)
				{
					_address = new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory)));
					_address.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _address;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AdvocateManagerTeamEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AdvocateManagerTeamEntity))]
		public virtual EntityCollection<AdvocateManagerTeamEntity> AdvocateManagerTeam_
		{
			get
			{
				if(_advocateManagerTeam_==null)
				{
					_advocateManagerTeam_ = new EntityCollection<AdvocateManagerTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AdvocateManagerTeamEntityFactory)));
					_advocateManagerTeam_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _advocateManagerTeam_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AdvocateManagerTeamEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AdvocateManagerTeamEntity))]
		public virtual EntityCollection<AdvocateManagerTeamEntity> AdvocateManagerTeam
		{
			get
			{
				if(_advocateManagerTeam==null)
				{
					_advocateManagerTeam = new EntityCollection<AdvocateManagerTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AdvocateManagerTeamEntityFactory)));
					_advocateManagerTeam.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _advocateManagerTeam;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AfcampaignEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AfcampaignEntity))]
		public virtual EntityCollection<AfcampaignEntity> Afcampaign_
		{
			get
			{
				if(_afcampaign_==null)
				{
					_afcampaign_ = new EntityCollection<AfcampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AfcampaignEntityFactory)));
					_afcampaign_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _afcampaign_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AfcampaignEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AfcampaignEntity))]
		public virtual EntityCollection<AfcampaignEntity> Afcampaign
		{
			get
			{
				if(_afcampaign==null)
				{
					_afcampaign = new EntityCollection<AfcampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AfcampaignEntityFactory)));
					_afcampaign.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _afcampaign;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AffiliateProfileEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AffiliateProfileEntity))]
		public virtual EntityCollection<AffiliateProfileEntity> AffiliateProfile
		{
			get
			{
				if(_affiliateProfile==null)
				{
					_affiliateProfile = new EntityCollection<AffiliateProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AffiliateProfileEntityFactory)));
					_affiliateProfile.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _affiliateProfile;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ApplicationAuthenticationEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ApplicationAuthenticationEntity))]
		public virtual EntityCollection<ApplicationAuthenticationEntity> ApplicationAuthentication_
		{
			get
			{
				if(_applicationAuthentication_==null)
				{
					_applicationAuthentication_ = new EntityCollection<ApplicationAuthenticationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ApplicationAuthenticationEntityFactory)));
					_applicationAuthentication_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _applicationAuthentication_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ApplicationAuthenticationEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ApplicationAuthenticationEntity))]
		public virtual EntityCollection<ApplicationAuthenticationEntity> ApplicationAuthentication
		{
			get
			{
				if(_applicationAuthentication==null)
				{
					_applicationAuthentication = new EntityCollection<ApplicationAuthenticationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ApplicationAuthenticationEntityFactory)));
					_applicationAuthentication.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _applicationAuthentication;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BarrierEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BarrierEntity))]
		public virtual EntityCollection<BarrierEntity> Barrier_
		{
			get
			{
				if(_barrier_==null)
				{
					_barrier_ = new EntityCollection<BarrierEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BarrierEntityFactory)));
					_barrier_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _barrier_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'BarrierEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(BarrierEntity))]
		public virtual EntityCollection<BarrierEntity> Barrier
		{
			get
			{
				if(_barrier==null)
				{
					_barrier = new EntityCollection<BarrierEntity>(EntityFactoryCache2.GetEntityFactory(typeof(BarrierEntityFactory)));
					_barrier.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _barrier;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallCenterAgentTeamEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallCenterAgentTeamEntity))]
		public virtual EntityCollection<CallCenterAgentTeamEntity> CallCenterAgentTeam
		{
			get
			{
				if(_callCenterAgentTeam==null)
				{
					_callCenterAgentTeam = new EntityCollection<CallCenterAgentTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterAgentTeamEntityFactory)));
					_callCenterAgentTeam.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _callCenterAgentTeam;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallCenterAgentTeamLogEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallCenterAgentTeamLogEntity))]
		public virtual EntityCollection<CallCenterAgentTeamLogEntity> CallCenterAgentTeamLog__
		{
			get
			{
				if(_callCenterAgentTeamLog__==null)
				{
					_callCenterAgentTeamLog__ = new EntityCollection<CallCenterAgentTeamLogEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterAgentTeamLogEntityFactory)));
					_callCenterAgentTeamLog__.SetContainingEntityInfo(this, "OrganizationRoleUser__");
				}
				return _callCenterAgentTeamLog__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallCenterAgentTeamLogEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallCenterAgentTeamLogEntity))]
		public virtual EntityCollection<CallCenterAgentTeamLogEntity> CallCenterAgentTeamLog_
		{
			get
			{
				if(_callCenterAgentTeamLog_==null)
				{
					_callCenterAgentTeamLog_ = new EntityCollection<CallCenterAgentTeamLogEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterAgentTeamLogEntityFactory)));
					_callCenterAgentTeamLog_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _callCenterAgentTeamLog_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallCenterAgentTeamLogEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallCenterAgentTeamLogEntity))]
		public virtual EntityCollection<CallCenterAgentTeamLogEntity> CallCenterAgentTeamLog
		{
			get
			{
				if(_callCenterAgentTeamLog==null)
				{
					_callCenterAgentTeamLog = new EntityCollection<CallCenterAgentTeamLogEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterAgentTeamLogEntityFactory)));
					_callCenterAgentTeamLog.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _callCenterAgentTeamLog;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallCenterTeamEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallCenterTeamEntity))]
		public virtual EntityCollection<CallCenterTeamEntity> CallCenterTeam_
		{
			get
			{
				if(_callCenterTeam_==null)
				{
					_callCenterTeam_ = new EntityCollection<CallCenterTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterTeamEntityFactory)));
					_callCenterTeam_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _callCenterTeam_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallCenterTeamEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallCenterTeamEntity))]
		public virtual EntityCollection<CallCenterTeamEntity> CallCenterTeam
		{
			get
			{
				if(_callCenterTeam==null)
				{
					_callCenterTeam = new EntityCollection<CallCenterTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterTeamEntityFactory)));
					_callCenterTeam.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _callCenterTeam;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallQueueEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallQueueEntity))]
		public virtual EntityCollection<CallQueueEntity> CallQueue_
		{
			get
			{
				if(_callQueue_==null)
				{
					_callQueue_ = new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory)));
					_callQueue_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _callQueue_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallQueueEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallQueueEntity))]
		public virtual EntityCollection<CallQueueEntity> CallQueue
		{
			get
			{
				if(_callQueue==null)
				{
					_callQueue = new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory)));
					_callQueue.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _callQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallQueueAssignmentEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallQueueAssignmentEntity))]
		public virtual EntityCollection<CallQueueAssignmentEntity> CallQueueAssignment
		{
			get
			{
				if(_callQueueAssignment==null)
				{
					_callQueueAssignment = new EntityCollection<CallQueueAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueAssignmentEntityFactory)));
					_callQueueAssignment.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _callQueueAssignment;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallQueueCustomerEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallQueueCustomerEntity))]
		public virtual EntityCollection<CallQueueCustomerEntity> CallQueueCustomer__
		{
			get
			{
				if(_callQueueCustomer__==null)
				{
					_callQueueCustomer__ = new EntityCollection<CallQueueCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueCustomerEntityFactory)));
					_callQueueCustomer__.SetContainingEntityInfo(this, "OrganizationRoleUser__");
				}
				return _callQueueCustomer__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallQueueCustomerEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallQueueCustomerEntity))]
		public virtual EntityCollection<CallQueueCustomerEntity> CallQueueCustomer_
		{
			get
			{
				if(_callQueueCustomer_==null)
				{
					_callQueueCustomer_ = new EntityCollection<CallQueueCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueCustomerEntityFactory)));
					_callQueueCustomer_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _callQueueCustomer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallQueueCustomerEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallQueueCustomerEntity))]
		public virtual EntityCollection<CallQueueCustomerEntity> CallQueueCustomer
		{
			get
			{
				if(_callQueueCustomer==null)
				{
					_callQueueCustomer = new EntityCollection<CallQueueCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueCustomerEntityFactory)));
					_callQueueCustomer.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _callQueueCustomer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallQueueCustomerLockEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallQueueCustomerLockEntity))]
		public virtual EntityCollection<CallQueueCustomerLockEntity> CallQueueCustomerLock
		{
			get
			{
				if(_callQueueCustomerLock==null)
				{
					_callQueueCustomerLock = new EntityCollection<CallQueueCustomerLockEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueCustomerLockEntityFactory)));
					_callQueueCustomerLock.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _callQueueCustomerLock;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallQueueCustomTagEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallQueueCustomTagEntity))]
		public virtual EntityCollection<CallQueueCustomTagEntity> CallQueueCustomTag
		{
			get
			{
				if(_callQueueCustomTag==null)
				{
					_callQueueCustomTag = new EntityCollection<CallQueueCustomTagEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueCustomTagEntityFactory)));
					_callQueueCustomTag.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _callQueueCustomTag;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallRoundCallQueueEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallRoundCallQueueEntity))]
		public virtual EntityCollection<CallRoundCallQueueEntity> CallRoundCallQueue
		{
			get
			{
				if(_callRoundCallQueue==null)
				{
					_callRoundCallQueue = new EntityCollection<CallRoundCallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallRoundCallQueueEntityFactory)));
					_callRoundCallQueue.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _callRoundCallQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallsEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallsEntity))]
		public virtual EntityCollection<CallsEntity> Calls
		{
			get
			{
				if(_calls==null)
				{
					_calls = new EntityCollection<CallsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallsEntityFactory)));
					_calls.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _calls;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallUploadEntity))]
		public virtual EntityCollection<CallUploadEntity> CallUpload
		{
			get
			{
				if(_callUpload==null)
				{
					_callUpload = new EntityCollection<CallUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallUploadEntityFactory)));
					_callUpload.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _callUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CampaignEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CampaignEntity))]
		public virtual EntityCollection<CampaignEntity> Campaign_
		{
			get
			{
				if(_campaign_==null)
				{
					_campaign_ = new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory)));
					_campaign_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _campaign_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CampaignEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CampaignEntity))]
		public virtual EntityCollection<CampaignEntity> Campaign
		{
			get
			{
				if(_campaign==null)
				{
					_campaign = new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory)));
					_campaign.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _campaign;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CampaignActivityEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CampaignActivityEntity))]
		public virtual EntityCollection<CampaignActivityEntity> CampaignActivity_
		{
			get
			{
				if(_campaignActivity_==null)
				{
					_campaignActivity_ = new EntityCollection<CampaignActivityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignActivityEntityFactory)));
					_campaignActivity_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _campaignActivity_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CampaignActivityEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CampaignActivityEntity))]
		public virtual EntityCollection<CampaignActivityEntity> CampaignActivity
		{
			get
			{
				if(_campaignActivity==null)
				{
					_campaignActivity = new EntityCollection<CampaignActivityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignActivityEntityFactory)));
					_campaignActivity.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _campaignActivity;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CampaignActivityAssignmentEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CampaignActivityAssignmentEntity))]
		public virtual EntityCollection<CampaignActivityAssignmentEntity> CampaignActivityAssignment
		{
			get
			{
				if(_campaignActivityAssignment==null)
				{
					_campaignActivityAssignment = new EntityCollection<CampaignActivityAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignActivityAssignmentEntityFactory)));
					_campaignActivityAssignment.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _campaignActivityAssignment;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CampaignAssignmentEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CampaignAssignmentEntity))]
		public virtual EntityCollection<CampaignAssignmentEntity> CampaignAssignment
		{
			get
			{
				if(_campaignAssignment==null)
				{
					_campaignAssignment = new EntityCollection<CampaignAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignAssignmentEntityFactory)));
					_campaignAssignment.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _campaignAssignment;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CdcontentGeneratorTrackingEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CdcontentGeneratorTrackingEntity))]
		public virtual EntityCollection<CdcontentGeneratorTrackingEntity> CdcontentGeneratorTracking
		{
			get
			{
				if(_cdcontentGeneratorTracking==null)
				{
					_cdcontentGeneratorTracking = new EntityCollection<CdcontentGeneratorTrackingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CdcontentGeneratorTrackingEntityFactory)));
					_cdcontentGeneratorTracking.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _cdcontentGeneratorTracking;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ChaperoneAnswerEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ChaperoneAnswerEntity))]
		public virtual EntityCollection<ChaperoneAnswerEntity> ChaperoneAnswer_
		{
			get
			{
				if(_chaperoneAnswer_==null)
				{
					_chaperoneAnswer_ = new EntityCollection<ChaperoneAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ChaperoneAnswerEntityFactory)));
					_chaperoneAnswer_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _chaperoneAnswer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ChaperoneAnswerEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ChaperoneAnswerEntity))]
		public virtual EntityCollection<ChaperoneAnswerEntity> ChaperoneAnswer
		{
			get
			{
				if(_chaperoneAnswer==null)
				{
					_chaperoneAnswer = new EntityCollection<ChaperoneAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ChaperoneAnswerEntityFactory)));
					_chaperoneAnswer.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _chaperoneAnswer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ChaperoneSignatureEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ChaperoneSignatureEntity))]
		public virtual EntityCollection<ChaperoneSignatureEntity> ChaperoneSignature
		{
			get
			{
				if(_chaperoneSignature==null)
				{
					_chaperoneSignature = new EntityCollection<ChaperoneSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ChaperoneSignatureEntityFactory)));
					_chaperoneSignature.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _chaperoneSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CheckEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CheckEntity))]
		public virtual EntityCollection<CheckEntity> Check_
		{
			get
			{
				if(_check_==null)
				{
					_check_ = new EntityCollection<CheckEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckEntityFactory)));
					_check_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _check_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CheckEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CheckEntity))]
		public virtual EntityCollection<CheckEntity> Check
		{
			get
			{
				if(_check==null)
				{
					_check = new EntityCollection<CheckEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckEntityFactory)));
					_check.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _check;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CheckListAnswerEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CheckListAnswerEntity))]
		public virtual EntityCollection<CheckListAnswerEntity> CheckListAnswer_
		{
			get
			{
				if(_checkListAnswer_==null)
				{
					_checkListAnswer_ = new EntityCollection<CheckListAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListAnswerEntityFactory)));
					_checkListAnswer_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _checkListAnswer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CheckListAnswerEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CheckListAnswerEntity))]
		public virtual EntityCollection<CheckListAnswerEntity> CheckListAnswer
		{
			get
			{
				if(_checkListAnswer==null)
				{
					_checkListAnswer = new EntityCollection<CheckListAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListAnswerEntityFactory)));
					_checkListAnswer.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _checkListAnswer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CheckListTemplateEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CheckListTemplateEntity))]
		public virtual EntityCollection<CheckListTemplateEntity> CheckListTemplate_
		{
			get
			{
				if(_checkListTemplate_==null)
				{
					_checkListTemplate_ = new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory)));
					_checkListTemplate_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _checkListTemplate_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CheckListTemplateEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CheckListTemplateEntity))]
		public virtual EntityCollection<CheckListTemplateEntity> CheckListTemplate
		{
			get
			{
				if(_checkListTemplate==null)
				{
					_checkListTemplate = new EntityCollection<CheckListTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListTemplateEntityFactory)));
					_checkListTemplate.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _checkListTemplate;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ClinicalTestQualificationCriteriaEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ClinicalTestQualificationCriteriaEntity))]
		public virtual EntityCollection<ClinicalTestQualificationCriteriaEntity> ClinicalTestQualificationCriteria_
		{
			get
			{
				if(_clinicalTestQualificationCriteria_==null)
				{
					_clinicalTestQualificationCriteria_ = new EntityCollection<ClinicalTestQualificationCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ClinicalTestQualificationCriteriaEntityFactory)));
					_clinicalTestQualificationCriteria_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _clinicalTestQualificationCriteria_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ClinicalTestQualificationCriteriaEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ClinicalTestQualificationCriteriaEntity))]
		public virtual EntityCollection<ClinicalTestQualificationCriteriaEntity> ClinicalTestQualificationCriteria
		{
			get
			{
				if(_clinicalTestQualificationCriteria==null)
				{
					_clinicalTestQualificationCriteria = new EntityCollection<ClinicalTestQualificationCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ClinicalTestQualificationCriteriaEntityFactory)));
					_clinicalTestQualificationCriteria.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _clinicalTestQualificationCriteria;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ContactCallEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ContactCallEntity))]
		public virtual EntityCollection<ContactCallEntity> ContactCall_
		{
			get
			{
				if(_contactCall_==null)
				{
					_contactCall_ = new EntityCollection<ContactCallEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContactCallEntityFactory)));
					_contactCall_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _contactCall_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ContactCallEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ContactCallEntity))]
		public virtual EntityCollection<ContactCallEntity> ContactCall
		{
			get
			{
				if(_contactCall==null)
				{
					_contactCall = new EntityCollection<ContactCallEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContactCallEntityFactory)));
					_contactCall.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _contactCall;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ContactMeetingEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ContactMeetingEntity))]
		public virtual EntityCollection<ContactMeetingEntity> ContactMeeting_
		{
			get
			{
				if(_contactMeeting_==null)
				{
					_contactMeeting_ = new EntityCollection<ContactMeetingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContactMeetingEntityFactory)));
					_contactMeeting_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _contactMeeting_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ContactMeetingEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ContactMeetingEntity))]
		public virtual EntityCollection<ContactMeetingEntity> ContactMeeting
		{
			get
			{
				if(_contactMeeting==null)
				{
					_contactMeeting = new EntityCollection<ContactMeetingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContactMeetingEntityFactory)));
					_contactMeeting.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _contactMeeting;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ContentEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ContentEntity))]
		public virtual EntityCollection<ContentEntity> Content_
		{
			get
			{
				if(_content_==null)
				{
					_content_ = new EntityCollection<ContentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContentEntityFactory)));
					_content_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _content_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ContentEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ContentEntity))]
		public virtual EntityCollection<ContentEntity> Content
		{
			get
			{
				if(_content==null)
				{
					_content = new EntityCollection<ContentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContentEntityFactory)));
					_content.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _content;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CorporateTagEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CorporateTagEntity))]
		public virtual EntityCollection<CorporateTagEntity> CorporateTag_
		{
			get
			{
				if(_corporateTag_==null)
				{
					_corporateTag_ = new EntityCollection<CorporateTagEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CorporateTagEntityFactory)));
					_corporateTag_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _corporateTag_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CorporateTagEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CorporateTagEntity))]
		public virtual EntityCollection<CorporateTagEntity> CorporateTag
		{
			get
			{
				if(_corporateTag==null)
				{
					_corporateTag = new EntityCollection<CorporateTagEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CorporateTagEntityFactory)));
					_corporateTag.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _corporateTag;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CorporateUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CorporateUploadEntity))]
		public virtual EntityCollection<CorporateUploadEntity> CorporateUpload
		{
			get
			{
				if(_corporateUpload==null)
				{
					_corporateUpload = new EntityCollection<CorporateUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CorporateUploadEntityFactory)));
					_corporateUpload.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _corporateUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CouponsEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CouponsEntity))]
		public virtual EntityCollection<CouponsEntity> Coupons_
		{
			get
			{
				if(_coupons_==null)
				{
					_coupons_ = new EntityCollection<CouponsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CouponsEntityFactory)));
					_coupons_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _coupons_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CouponsEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CouponsEntity))]
		public virtual EntityCollection<CouponsEntity> Coupons
		{
			get
			{
				if(_coupons==null)
				{
					_coupons = new EntityCollection<CouponsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CouponsEntityFactory)));
					_coupons.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _coupons;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CurrentMedicationEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CurrentMedicationEntity))]
		public virtual EntityCollection<CurrentMedicationEntity> CurrentMedication
		{
			get
			{
				if(_currentMedication==null)
				{
					_currentMedication = new EntityCollection<CurrentMedicationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CurrentMedicationEntityFactory)));
					_currentMedication.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _currentMedication;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerActivityTypeUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerActivityTypeUploadEntity))]
		public virtual EntityCollection<CustomerActivityTypeUploadEntity> CustomerActivityTypeUpload
		{
			get
			{
				if(_customerActivityTypeUpload==null)
				{
					_customerActivityTypeUpload = new EntityCollection<CustomerActivityTypeUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerActivityTypeUploadEntityFactory)));
					_customerActivityTypeUpload.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _customerActivityTypeUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerCallAttemptsEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerCallAttemptsEntity))]
		public virtual EntityCollection<CustomerCallAttemptsEntity> CustomerCallAttempts
		{
			get
			{
				if(_customerCallAttempts==null)
				{
					_customerCallAttempts = new EntityCollection<CustomerCallAttemptsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerCallAttemptsEntityFactory)));
					_customerCallAttempts.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _customerCallAttempts;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerCallQueueCallAttemptEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerCallQueueCallAttemptEntity))]
		public virtual EntityCollection<CustomerCallQueueCallAttemptEntity> CustomerCallQueueCallAttempt
		{
			get
			{
				if(_customerCallQueueCallAttempt==null)
				{
					_customerCallQueueCallAttempt = new EntityCollection<CustomerCallQueueCallAttemptEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerCallQueueCallAttemptEntityFactory)));
					_customerCallQueueCallAttempt.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _customerCallQueueCallAttempt;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerClinicalQuestionAnswerEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerClinicalQuestionAnswerEntity))]
		public virtual EntityCollection<CustomerClinicalQuestionAnswerEntity> CustomerClinicalQuestionAnswer_
		{
			get
			{
				if(_customerClinicalQuestionAnswer_==null)
				{
					_customerClinicalQuestionAnswer_ = new EntityCollection<CustomerClinicalQuestionAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerClinicalQuestionAnswerEntityFactory)));
					_customerClinicalQuestionAnswer_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _customerClinicalQuestionAnswer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerClinicalQuestionAnswerEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerClinicalQuestionAnswerEntity))]
		public virtual EntityCollection<CustomerClinicalQuestionAnswerEntity> CustomerClinicalQuestionAnswer
		{
			get
			{
				if(_customerClinicalQuestionAnswer==null)
				{
					_customerClinicalQuestionAnswer = new EntityCollection<CustomerClinicalQuestionAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerClinicalQuestionAnswerEntityFactory)));
					_customerClinicalQuestionAnswer.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _customerClinicalQuestionAnswer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerEligibilityEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerEligibilityEntity))]
		public virtual EntityCollection<CustomerEligibilityEntity> CustomerEligibility_
		{
			get
			{
				if(_customerEligibility_==null)
				{
					_customerEligibility_ = new EntityCollection<CustomerEligibilityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEligibilityEntityFactory)));
					_customerEligibility_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _customerEligibility_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerEligibilityEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerEligibilityEntity))]
		public virtual EntityCollection<CustomerEligibilityEntity> CustomerEligibility
		{
			get
			{
				if(_customerEligibility==null)
				{
					_customerEligibility = new EntityCollection<CustomerEligibilityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEligibilityEntityFactory)));
					_customerEligibility.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _customerEligibility;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerEventCriticalTestDataEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerEventCriticalTestDataEntity))]
		public virtual EntityCollection<CustomerEventCriticalTestDataEntity> CustomerEventCriticalTestData_
		{
			get
			{
				if(_customerEventCriticalTestData_==null)
				{
					_customerEventCriticalTestData_ = new EntityCollection<CustomerEventCriticalTestDataEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventCriticalTestDataEntityFactory)));
					_customerEventCriticalTestData_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _customerEventCriticalTestData_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerEventCriticalTestDataEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerEventCriticalTestDataEntity))]
		public virtual EntityCollection<CustomerEventCriticalTestDataEntity> CustomerEventCriticalTestData
		{
			get
			{
				if(_customerEventCriticalTestData==null)
				{
					_customerEventCriticalTestData = new EntityCollection<CustomerEventCriticalTestDataEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventCriticalTestDataEntityFactory)));
					_customerEventCriticalTestData.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _customerEventCriticalTestData;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerEventPriorityInQueueDataEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerEventPriorityInQueueDataEntity))]
		public virtual EntityCollection<CustomerEventPriorityInQueueDataEntity> CustomerEventPriorityInQueueData_
		{
			get
			{
				if(_customerEventPriorityInQueueData_==null)
				{
					_customerEventPriorityInQueueData_ = new EntityCollection<CustomerEventPriorityInQueueDataEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventPriorityInQueueDataEntityFactory)));
					_customerEventPriorityInQueueData_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _customerEventPriorityInQueueData_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerEventPriorityInQueueDataEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerEventPriorityInQueueDataEntity))]
		public virtual EntityCollection<CustomerEventPriorityInQueueDataEntity> CustomerEventPriorityInQueueData
		{
			get
			{
				if(_customerEventPriorityInQueueData==null)
				{
					_customerEventPriorityInQueueData = new EntityCollection<CustomerEventPriorityInQueueDataEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventPriorityInQueueDataEntityFactory)));
					_customerEventPriorityInQueueData.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _customerEventPriorityInQueueData;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerEventReadingEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerEventReadingEntity))]
		public virtual EntityCollection<CustomerEventReadingEntity> CustomerEventReading
		{
			get
			{
				if(_customerEventReading==null)
				{
					_customerEventReading = new EntityCollection<CustomerEventReadingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventReadingEntityFactory)));
					_customerEventReading.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _customerEventReading;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerEventTestPhysicianEvaluationEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerEventTestPhysicianEvaluationEntity))]
		public virtual EntityCollection<CustomerEventTestPhysicianEvaluationEntity> CustomerEventTestPhysicianEvaluation
		{
			get
			{
				if(_customerEventTestPhysicianEvaluation==null)
				{
					_customerEventTestPhysicianEvaluation = new EntityCollection<CustomerEventTestPhysicianEvaluationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventTestPhysicianEvaluationEntityFactory)));
					_customerEventTestPhysicianEvaluation.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _customerEventTestPhysicianEvaluation;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerEventTestStateEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerEventTestStateEntity))]
		public virtual EntityCollection<CustomerEventTestStateEntity> CustomerEventTestState__
		{
			get
			{
				if(_customerEventTestState__==null)
				{
					_customerEventTestState__ = new EntityCollection<CustomerEventTestStateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventTestStateEntityFactory)));
					_customerEventTestState__.SetContainingEntityInfo(this, "OrganizationRoleUser__");
				}
				return _customerEventTestState__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerEventTestStateEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerEventTestStateEntity))]
		public virtual EntityCollection<CustomerEventTestStateEntity> CustomerEventTestState_
		{
			get
			{
				if(_customerEventTestState_==null)
				{
					_customerEventTestState_ = new EntityCollection<CustomerEventTestStateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventTestStateEntityFactory)));
					_customerEventTestState_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _customerEventTestState_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerEventTestStateEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerEventTestStateEntity))]
		public virtual EntityCollection<CustomerEventTestStateEntity> CustomerEventTestState
		{
			get
			{
				if(_customerEventTestState==null)
				{
					_customerEventTestState = new EntityCollection<CustomerEventTestStateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventTestStateEntityFactory)));
					_customerEventTestState.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _customerEventTestState;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerEventUnableScreenReasonEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerEventUnableScreenReasonEntity))]
		public virtual EntityCollection<CustomerEventUnableScreenReasonEntity> CustomerEventUnableScreenReason
		{
			get
			{
				if(_customerEventUnableScreenReason==null)
				{
					_customerEventUnableScreenReason = new EntityCollection<CustomerEventUnableScreenReasonEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventUnableScreenReasonEntityFactory)));
					_customerEventUnableScreenReason.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _customerEventUnableScreenReason;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerHealthInfoEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerHealthInfoEntity))]
		public virtual EntityCollection<CustomerHealthInfoEntity> CustomerHealthInfo
		{
			get
			{
				if(_customerHealthInfo==null)
				{
					_customerHealthInfo = new EntityCollection<CustomerHealthInfoEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthInfoEntityFactory)));
					_customerHealthInfo.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _customerHealthInfo;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerHealthInfoArchiveEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerHealthInfoArchiveEntity))]
		public virtual EntityCollection<CustomerHealthInfoArchiveEntity> CustomerHealthInfoArchive
		{
			get
			{
				if(_customerHealthInfoArchive==null)
				{
					_customerHealthInfoArchive = new EntityCollection<CustomerHealthInfoArchiveEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthInfoArchiveEntityFactory)));
					_customerHealthInfoArchive.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _customerHealthInfoArchive;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerIcdCodeEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerIcdCodeEntity))]
		public virtual EntityCollection<CustomerIcdCodeEntity> CustomerIcdCode
		{
			get
			{
				if(_customerIcdCode==null)
				{
					_customerIcdCode = new EntityCollection<CustomerIcdCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerIcdCodeEntityFactory)));
					_customerIcdCode.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _customerIcdCode;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerLockForCallEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerLockForCallEntity))]
		public virtual EntityCollection<CustomerLockForCallEntity> CustomerLockForCall
		{
			get
			{
				if(_customerLockForCall==null)
				{
					_customerLockForCall = new EntityCollection<CustomerLockForCallEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerLockForCallEntityFactory)));
					_customerLockForCall.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _customerLockForCall;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerMedicareQuestionAnswerEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerMedicareQuestionAnswerEntity))]
		public virtual EntityCollection<CustomerMedicareQuestionAnswerEntity> CustomerMedicareQuestionAnswer
		{
			get
			{
				if(_customerMedicareQuestionAnswer==null)
				{
					_customerMedicareQuestionAnswer = new EntityCollection<CustomerMedicareQuestionAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerMedicareQuestionAnswerEntityFactory)));
					_customerMedicareQuestionAnswer.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _customerMedicareQuestionAnswer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerPhoneNumberUpdateUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerPhoneNumberUpdateUploadEntity))]
		public virtual EntityCollection<CustomerPhoneNumberUpdateUploadEntity> CustomerPhoneNumberUpdateUpload
		{
			get
			{
				if(_customerPhoneNumberUpdateUpload==null)
				{
					_customerPhoneNumberUpdateUpload = new EntityCollection<CustomerPhoneNumberUpdateUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerPhoneNumberUpdateUploadEntityFactory)));
					_customerPhoneNumberUpdateUpload.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _customerPhoneNumberUpdateUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerPrimaryCarePhysicianEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerPrimaryCarePhysicianEntity))]
		public virtual EntityCollection<CustomerPrimaryCarePhysicianEntity> CustomerPrimaryCarePhysician_
		{
			get
			{
				if(_customerPrimaryCarePhysician_==null)
				{
					_customerPrimaryCarePhysician_ = new EntityCollection<CustomerPrimaryCarePhysicianEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerPrimaryCarePhysicianEntityFactory)));
					_customerPrimaryCarePhysician_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _customerPrimaryCarePhysician_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerPrimaryCarePhysicianEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerPrimaryCarePhysicianEntity))]
		public virtual EntityCollection<CustomerPrimaryCarePhysicianEntity> CustomerPrimaryCarePhysician__
		{
			get
			{
				if(_customerPrimaryCarePhysician__==null)
				{
					_customerPrimaryCarePhysician__ = new EntityCollection<CustomerPrimaryCarePhysicianEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerPrimaryCarePhysicianEntityFactory)));
					_customerPrimaryCarePhysician__.SetContainingEntityInfo(this, "OrganizationRoleUser__");
				}
				return _customerPrimaryCarePhysician__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerPrimaryCarePhysicianEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerPrimaryCarePhysicianEntity))]
		public virtual EntityCollection<CustomerPrimaryCarePhysicianEntity> CustomerPrimaryCarePhysician
		{
			get
			{
				if(_customerPrimaryCarePhysician==null)
				{
					_customerPrimaryCarePhysician = new EntityCollection<CustomerPrimaryCarePhysicianEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerPrimaryCarePhysicianEntityFactory)));
					_customerPrimaryCarePhysician.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _customerPrimaryCarePhysician;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileHistoryEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileHistoryEntity))]
		public virtual EntityCollection<CustomerProfileHistoryEntity> CustomerProfileHistory
		{
			get
			{
				if(_customerProfileHistory==null)
				{
					_customerProfileHistory = new EntityCollection<CustomerProfileHistoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileHistoryEntityFactory)));
					_customerProfileHistory.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _customerProfileHistory;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerRegistrationNotesEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerRegistrationNotesEntity))]
		public virtual EntityCollection<CustomerRegistrationNotesEntity> CustomerRegistrationNotes
		{
			get
			{
				if(_customerRegistrationNotes==null)
				{
					_customerRegistrationNotes = new EntityCollection<CustomerRegistrationNotesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerRegistrationNotesEntityFactory)));
					_customerRegistrationNotes.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _customerRegistrationNotes;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerResultScreeningCommunicationEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerResultScreeningCommunicationEntity))]
		public virtual EntityCollection<CustomerResultScreeningCommunicationEntity> CustomerResultScreeningCommunication__
		{
			get
			{
				if(_customerResultScreeningCommunication__==null)
				{
					_customerResultScreeningCommunication__ = new EntityCollection<CustomerResultScreeningCommunicationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerResultScreeningCommunicationEntityFactory)));
					_customerResultScreeningCommunication__.SetContainingEntityInfo(this, "OrganizationRoleUser____");
				}
				return _customerResultScreeningCommunication__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerResultScreeningCommunicationEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerResultScreeningCommunicationEntity))]
		public virtual EntityCollection<CustomerResultScreeningCommunicationEntity> CustomerResultScreeningCommunication_
		{
			get
			{
				if(_customerResultScreeningCommunication_==null)
				{
					_customerResultScreeningCommunication_ = new EntityCollection<CustomerResultScreeningCommunicationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerResultScreeningCommunicationEntityFactory)));
					_customerResultScreeningCommunication_.SetContainingEntityInfo(this, "OrganizationRoleUser_____");
				}
				return _customerResultScreeningCommunication_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerResultScreeningCommunicationEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerResultScreeningCommunicationEntity))]
		public virtual EntityCollection<CustomerResultScreeningCommunicationEntity> CustomerResultScreeningCommunication
		{
			get
			{
				if(_customerResultScreeningCommunication==null)
				{
					_customerResultScreeningCommunication = new EntityCollection<CustomerResultScreeningCommunicationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerResultScreeningCommunicationEntityFactory)));
					_customerResultScreeningCommunication.SetContainingEntityInfo(this, "OrganizationRoleUser___");
				}
				return _customerResultScreeningCommunication;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerTagEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerTagEntity))]
		public virtual EntityCollection<CustomerTagEntity> CustomerTag_
		{
			get
			{
				if(_customerTag_==null)
				{
					_customerTag_ = new EntityCollection<CustomerTagEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerTagEntityFactory)));
					_customerTag_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _customerTag_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerTagEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerTagEntity))]
		public virtual EntityCollection<CustomerTagEntity> CustomerTag
		{
			get
			{
				if(_customerTag==null)
				{
					_customerTag = new EntityCollection<CustomerTagEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerTagEntityFactory)));
					_customerTag.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _customerTag;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerTargetedEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerTargetedEntity))]
		public virtual EntityCollection<CustomerTargetedEntity> CustomerTargeted_
		{
			get
			{
				if(_customerTargeted_==null)
				{
					_customerTargeted_ = new EntityCollection<CustomerTargetedEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerTargetedEntityFactory)));
					_customerTargeted_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _customerTargeted_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerTargetedEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerTargetedEntity))]
		public virtual EntityCollection<CustomerTargetedEntity> CustomerTargeted
		{
			get
			{
				if(_customerTargeted==null)
				{
					_customerTargeted = new EntityCollection<CustomerTargetedEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerTargetedEntityFactory)));
					_customerTargeted.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _customerTargeted;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerWarmTransferEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerWarmTransferEntity))]
		public virtual EntityCollection<CustomerWarmTransferEntity> CustomerWarmTransfer_
		{
			get
			{
				if(_customerWarmTransfer_==null)
				{
					_customerWarmTransfer_ = new EntityCollection<CustomerWarmTransferEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerWarmTransferEntityFactory)));
					_customerWarmTransfer_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _customerWarmTransfer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerWarmTransferEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerWarmTransferEntity))]
		public virtual EntityCollection<CustomerWarmTransferEntity> CustomerWarmTransfer
		{
			get
			{
				if(_customerWarmTransfer==null)
				{
					_customerWarmTransfer = new EntityCollection<CustomerWarmTransferEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerWarmTransferEntityFactory)));
					_customerWarmTransfer.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _customerWarmTransfer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomEventNotificationEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomEventNotificationEntity))]
		public virtual EntityCollection<CustomEventNotificationEntity> CustomEventNotification
		{
			get
			{
				if(_customEventNotification==null)
				{
					_customEventNotification = new EntityCollection<CustomEventNotificationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomEventNotificationEntityFactory)));
					_customEventNotification.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _customEventNotification;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DirectMailEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DirectMailEntity))]
		public virtual EntityCollection<DirectMailEntity> DirectMail
		{
			get
			{
				if(_directMail==null)
				{
					_directMail = new EntityCollection<DirectMailEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DirectMailEntityFactory)));
					_directMail.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _directMail;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DirectMailTypeEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DirectMailTypeEntity))]
		public virtual EntityCollection<DirectMailTypeEntity> DirectMailType_
		{
			get
			{
				if(_directMailType_==null)
				{
					_directMailType_ = new EntityCollection<DirectMailTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DirectMailTypeEntityFactory)));
					_directMailType_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _directMailType_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DirectMailTypeEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DirectMailTypeEntity))]
		public virtual EntityCollection<DirectMailTypeEntity> DirectMailType
		{
			get
			{
				if(_directMailType==null)
				{
					_directMailType = new EntityCollection<DirectMailTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DirectMailTypeEntityFactory)));
					_directMailType.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _directMailType;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DisqualifiedTestEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DisqualifiedTestEntity))]
		public virtual EntityCollection<DisqualifiedTestEntity> DisqualifiedTest_
		{
			get
			{
				if(_disqualifiedTest_==null)
				{
					_disqualifiedTest_ = new EntityCollection<DisqualifiedTestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DisqualifiedTestEntityFactory)));
					_disqualifiedTest_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _disqualifiedTest_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DisqualifiedTestEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DisqualifiedTestEntity))]
		public virtual EntityCollection<DisqualifiedTestEntity> DisqualifiedTest
		{
			get
			{
				if(_disqualifiedTest==null)
				{
					_disqualifiedTest = new EntityCollection<DisqualifiedTestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DisqualifiedTestEntityFactory)));
					_disqualifiedTest.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _disqualifiedTest;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EligibilityEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EligibilityEntity))]
		public virtual EntityCollection<EligibilityEntity> Eligibility
		{
			get
			{
				if(_eligibility==null)
				{
					_eligibility = new EntityCollection<EligibilityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EligibilityEntityFactory)));
					_eligibility.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _eligibility;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EligibilityUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EligibilityUploadEntity))]
		public virtual EntityCollection<EligibilityUploadEntity> EligibilityUpload
		{
			get
			{
				if(_eligibilityUpload==null)
				{
					_eligibilityUpload = new EntityCollection<EligibilityUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EligibilityUploadEntityFactory)));
					_eligibilityUpload.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _eligibilityUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EmailTemplateEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EmailTemplateEntity))]
		public virtual EntityCollection<EmailTemplateEntity> EmailTemplate
		{
			get
			{
				if(_emailTemplate==null)
				{
					_emailTemplate = new EntityCollection<EmailTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EmailTemplateEntityFactory)));
					_emailTemplate.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _emailTemplate;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventAccountTestHcpcsCodeEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventAccountTestHcpcsCodeEntity))]
		public virtual EntityCollection<EventAccountTestHcpcsCodeEntity> EventAccountTestHcpcsCode_
		{
			get
			{
				if(_eventAccountTestHcpcsCode_==null)
				{
					_eventAccountTestHcpcsCode_ = new EntityCollection<EventAccountTestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventAccountTestHcpcsCodeEntityFactory)));
					_eventAccountTestHcpcsCode_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _eventAccountTestHcpcsCode_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventAccountTestHcpcsCodeEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventAccountTestHcpcsCodeEntity))]
		public virtual EntityCollection<EventAccountTestHcpcsCodeEntity> EventAccountTestHcpcsCode
		{
			get
			{
				if(_eventAccountTestHcpcsCode==null)
				{
					_eventAccountTestHcpcsCode = new EntityCollection<EventAccountTestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventAccountTestHcpcsCodeEntityFactory)));
					_eventAccountTestHcpcsCode.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _eventAccountTestHcpcsCode;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventActivityTemplateEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventActivityTemplateEntity))]
		public virtual EntityCollection<EventActivityTemplateEntity> EventActivityTemplate
		{
			get
			{
				if(_eventActivityTemplate==null)
				{
					_eventActivityTemplate = new EntityCollection<EventActivityTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventActivityTemplateEntityFactory)));
					_eventActivityTemplate.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _eventActivityTemplate;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventActivityTemplateCallEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventActivityTemplateCallEntity))]
		public virtual EntityCollection<EventActivityTemplateCallEntity> EventActivityTemplateCall
		{
			get
			{
				if(_eventActivityTemplateCall==null)
				{
					_eventActivityTemplateCall = new EntityCollection<EventActivityTemplateCallEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventActivityTemplateCallEntityFactory)));
					_eventActivityTemplateCall.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _eventActivityTemplateCall;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventActivityTemplateEmailEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventActivityTemplateEmailEntity))]
		public virtual EntityCollection<EventActivityTemplateEmailEntity> EventActivityTemplateEmail
		{
			get
			{
				if(_eventActivityTemplateEmail==null)
				{
					_eventActivityTemplateEmail = new EntityCollection<EventActivityTemplateEmailEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventActivityTemplateEmailEntityFactory)));
					_eventActivityTemplateEmail.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _eventActivityTemplateEmail;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventActivityTemplateMeetingEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventActivityTemplateMeetingEntity))]
		public virtual EntityCollection<EventActivityTemplateMeetingEntity> EventActivityTemplateMeeting
		{
			get
			{
				if(_eventActivityTemplateMeeting==null)
				{
					_eventActivityTemplateMeeting = new EntityCollection<EventActivityTemplateMeetingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventActivityTemplateMeetingEntityFactory)));
					_eventActivityTemplateMeeting.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _eventActivityTemplateMeeting;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventActivityTemplateTaskEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventActivityTemplateTaskEntity))]
		public virtual EntityCollection<EventActivityTemplateTaskEntity> EventActivityTemplateTask
		{
			get
			{
				if(_eventActivityTemplateTask==null)
				{
					_eventActivityTemplateTask = new EntityCollection<EventActivityTemplateTaskEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventActivityTemplateTaskEntityFactory)));
					_eventActivityTemplateTask.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _eventActivityTemplateTask;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventAppointmentEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventAppointmentEntity))]
		public virtual EntityCollection<EventAppointmentEntity> EventAppointment
		{
			get
			{
				if(_eventAppointment==null)
				{
					_eventAppointment = new EntityCollection<EventAppointmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventAppointmentEntityFactory)));
					_eventAppointment.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _eventAppointment;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventAppointmentCancellationLogEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventAppointmentCancellationLogEntity))]
		public virtual EntityCollection<EventAppointmentCancellationLogEntity> EventAppointmentCancellationLog
		{
			get
			{
				if(_eventAppointmentCancellationLog==null)
				{
					_eventAppointmentCancellationLog = new EntityCollection<EventAppointmentCancellationLogEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventAppointmentCancellationLogEntityFactory)));
					_eventAppointmentCancellationLog.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _eventAppointmentCancellationLog;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventAppointmentChangeLogEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventAppointmentChangeLogEntity))]
		public virtual EntityCollection<EventAppointmentChangeLogEntity> EventAppointmentChangeLog
		{
			get
			{
				if(_eventAppointmentChangeLog==null)
				{
					_eventAppointmentChangeLog = new EntityCollection<EventAppointmentChangeLogEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventAppointmentChangeLogEntityFactory)));
					_eventAppointmentChangeLog.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _eventAppointmentChangeLog;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerBasicBioMetricEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerBasicBioMetricEntity))]
		public virtual EntityCollection<EventCustomerBasicBioMetricEntity> EventCustomerBasicBioMetric
		{
			get
			{
				if(_eventCustomerBasicBioMetric==null)
				{
					_eventCustomerBasicBioMetric = new EntityCollection<EventCustomerBasicBioMetricEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerBasicBioMetricEntityFactory)));
					_eventCustomerBasicBioMetric.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _eventCustomerBasicBioMetric;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerGiftCardEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerGiftCardEntity))]
		public virtual EntityCollection<EventCustomerGiftCardEntity> EventCustomerGiftCard
		{
			get
			{
				if(_eventCustomerGiftCard==null)
				{
					_eventCustomerGiftCard = new EntityCollection<EventCustomerGiftCardEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerGiftCardEntityFactory)));
					_eventCustomerGiftCard.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _eventCustomerGiftCard;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerPrimaryCarePhysicianEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerPrimaryCarePhysicianEntity))]
		public virtual EntityCollection<EventCustomerPrimaryCarePhysicianEntity> EventCustomerPrimaryCarePhysician
		{
			get
			{
				if(_eventCustomerPrimaryCarePhysician==null)
				{
					_eventCustomerPrimaryCarePhysician = new EntityCollection<EventCustomerPrimaryCarePhysicianEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerPrimaryCarePhysicianEntityFactory)));
					_eventCustomerPrimaryCarePhysician.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _eventCustomerPrimaryCarePhysician;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerQuestionAnswerEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerQuestionAnswerEntity))]
		public virtual EntityCollection<EventCustomerQuestionAnswerEntity> EventCustomerQuestionAnswer_
		{
			get
			{
				if(_eventCustomerQuestionAnswer_==null)
				{
					_eventCustomerQuestionAnswer_ = new EntityCollection<EventCustomerQuestionAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerQuestionAnswerEntityFactory)));
					_eventCustomerQuestionAnswer_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _eventCustomerQuestionAnswer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerQuestionAnswerEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerQuestionAnswerEntity))]
		public virtual EntityCollection<EventCustomerQuestionAnswerEntity> EventCustomerQuestionAnswer
		{
			get
			{
				if(_eventCustomerQuestionAnswer==null)
				{
					_eventCustomerQuestionAnswer = new EntityCollection<EventCustomerQuestionAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerQuestionAnswerEntityFactory)));
					_eventCustomerQuestionAnswer.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _eventCustomerQuestionAnswer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerResultEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerResultEntity))]
		public virtual EntityCollection<EventCustomerResultEntity> EventCustomerResult___
		{
			get
			{
				if(_eventCustomerResult___==null)
				{
					_eventCustomerResult___ = new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory)));
					_eventCustomerResult___.SetContainingEntityInfo(this, "OrganizationRoleUser___");
				}
				return _eventCustomerResult___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerResultEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerResultEntity))]
		public virtual EntityCollection<EventCustomerResultEntity> EventCustomerResult__
		{
			get
			{
				if(_eventCustomerResult__==null)
				{
					_eventCustomerResult__ = new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory)));
					_eventCustomerResult__.SetContainingEntityInfo(this, "OrganizationRoleUser__");
				}
				return _eventCustomerResult__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerResultEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerResultEntity))]
		public virtual EntityCollection<EventCustomerResultEntity> EventCustomerResult_
		{
			get
			{
				if(_eventCustomerResult_==null)
				{
					_eventCustomerResult_ = new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory)));
					_eventCustomerResult_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _eventCustomerResult_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerResultEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerResultEntity))]
		public virtual EntityCollection<EventCustomerResultEntity> EventCustomerResult____
		{
			get
			{
				if(_eventCustomerResult____==null)
				{
					_eventCustomerResult____ = new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory)));
					_eventCustomerResult____.SetContainingEntityInfo(this, "OrganizationRoleUser____");
				}
				return _eventCustomerResult____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerResultEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerResultEntity))]
		public virtual EntityCollection<EventCustomerResultEntity> EventCustomerResult______
		{
			get
			{
				if(_eventCustomerResult______==null)
				{
					_eventCustomerResult______ = new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory)));
					_eventCustomerResult______.SetContainingEntityInfo(this, "OrganizationRoleUser______");
				}
				return _eventCustomerResult______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerResultEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerResultEntity))]
		public virtual EntityCollection<EventCustomerResultEntity> EventCustomerResult_______
		{
			get
			{
				if(_eventCustomerResult_______==null)
				{
					_eventCustomerResult_______ = new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory)));
					_eventCustomerResult_______.SetContainingEntityInfo(this, "OrganizationRoleUser________");
				}
				return _eventCustomerResult_______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerResultEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerResultEntity))]
		public virtual EntityCollection<EventCustomerResultEntity> EventCustomerResult
		{
			get
			{
				if(_eventCustomerResult==null)
				{
					_eventCustomerResult = new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory)));
					_eventCustomerResult.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _eventCustomerResult;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerResultEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerResultEntity))]
		public virtual EntityCollection<EventCustomerResultEntity> EventCustomerResult_____
		{
			get
			{
				if(_eventCustomerResult_____==null)
				{
					_eventCustomerResult_____ = new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory)));
					_eventCustomerResult_____.SetContainingEntityInfo(this, "OrganizationRoleUser_____");
				}
				return _eventCustomerResult_____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerResultEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerResultEntity))]
		public virtual EntityCollection<EventCustomerResultEntity> EventCustomerResult________
		{
			get
			{
				if(_eventCustomerResult________==null)
				{
					_eventCustomerResult________ = new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory)));
					_eventCustomerResult________.SetContainingEntityInfo(this, "OrganizationRoleUser_______");
				}
				return _eventCustomerResult________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerResultBloodLabEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerResultBloodLabEntity))]
		public virtual EntityCollection<EventCustomerResultBloodLabEntity> EventCustomerResultBloodLab
		{
			get
			{
				if(_eventCustomerResultBloodLab==null)
				{
					_eventCustomerResultBloodLab = new EntityCollection<EventCustomerResultBloodLabEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultBloodLabEntityFactory)));
					_eventCustomerResultBloodLab.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _eventCustomerResultBloodLab;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerResultHistoryEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerResultHistoryEntity))]
		public virtual EntityCollection<EventCustomerResultHistoryEntity> EventCustomerResultHistory
		{
			get
			{
				if(_eventCustomerResultHistory==null)
				{
					_eventCustomerResultHistory = new EntityCollection<EventCustomerResultHistoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultHistoryEntityFactory)));
					_eventCustomerResultHistory.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _eventCustomerResultHistory;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerResultHistoryEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerResultHistoryEntity))]
		public virtual EntityCollection<EventCustomerResultHistoryEntity> EventCustomerResultHistory_
		{
			get
			{
				if(_eventCustomerResultHistory_==null)
				{
					_eventCustomerResultHistory_ = new EntityCollection<EventCustomerResultHistoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultHistoryEntityFactory)));
					_eventCustomerResultHistory_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _eventCustomerResultHistory_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerResultHistoryEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerResultHistoryEntity))]
		public virtual EntityCollection<EventCustomerResultHistoryEntity> EventCustomerResultHistory__
		{
			get
			{
				if(_eventCustomerResultHistory__==null)
				{
					_eventCustomerResultHistory__ = new EntityCollection<EventCustomerResultHistoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultHistoryEntityFactory)));
					_eventCustomerResultHistory__.SetContainingEntityInfo(this, "OrganizationRoleUser__");
				}
				return _eventCustomerResultHistory__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerRetestEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerRetestEntity))]
		public virtual EntityCollection<EventCustomerRetestEntity> EventCustomerRetest
		{
			get
			{
				if(_eventCustomerRetest==null)
				{
					_eventCustomerRetest = new EntityCollection<EventCustomerRetestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerRetestEntityFactory)));
					_eventCustomerRetest.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _eventCustomerRetest;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomers_
		{
			get
			{
				if(_eventCustomers_==null)
				{
					_eventCustomers_ = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomers_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _eventCustomers_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomers
		{
			get
			{
				if(_eventCustomers==null)
				{
					_eventCustomers = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomers.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _eventCustomers;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerTestNotPerformedNotificationEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerTestNotPerformedNotificationEntity))]
		public virtual EntityCollection<EventCustomerTestNotPerformedNotificationEntity> EventCustomerTestNotPerformedNotification
		{
			get
			{
				if(_eventCustomerTestNotPerformedNotification==null)
				{
					_eventCustomerTestNotPerformedNotification = new EntityCollection<EventCustomerTestNotPerformedNotificationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerTestNotPerformedNotificationEntityFactory)));
					_eventCustomerTestNotPerformedNotification.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _eventCustomerTestNotPerformedNotification;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventNoteEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventNoteEntity))]
		public virtual EntityCollection<EventNoteEntity> EventNote_
		{
			get
			{
				if(_eventNote_==null)
				{
					_eventNote_ = new EntityCollection<EventNoteEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventNoteEntityFactory)));
					_eventNote_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _eventNote_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventNoteEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventNoteEntity))]
		public virtual EntityCollection<EventNoteEntity> EventNote
		{
			get
			{
				if(_eventNote==null)
				{
					_eventNote = new EntityCollection<EventNoteEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventNoteEntityFactory)));
					_eventNote.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _eventNote;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventPhysicianTestEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventPhysicianTestEntity))]
		public virtual EntityCollection<EventPhysicianTestEntity> EventPhysicianTest__
		{
			get
			{
				if(_eventPhysicianTest__==null)
				{
					_eventPhysicianTest__ = new EntityCollection<EventPhysicianTestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventPhysicianTestEntityFactory)));
					_eventPhysicianTest__.SetContainingEntityInfo(this, "OrganizationRoleUser__");
				}
				return _eventPhysicianTest__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventPhysicianTestEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventPhysicianTestEntity))]
		public virtual EntityCollection<EventPhysicianTestEntity> EventPhysicianTest_
		{
			get
			{
				if(_eventPhysicianTest_==null)
				{
					_eventPhysicianTest_ = new EntityCollection<EventPhysicianTestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventPhysicianTestEntityFactory)));
					_eventPhysicianTest_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _eventPhysicianTest_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventPhysicianTestEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventPhysicianTestEntity))]
		public virtual EntityCollection<EventPhysicianTestEntity> EventPhysicianTest
		{
			get
			{
				if(_eventPhysicianTest==null)
				{
					_eventPhysicianTest = new EntityCollection<EventPhysicianTestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventPhysicianTestEntityFactory)));
					_eventPhysicianTest.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _eventPhysicianTest;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> Events___
		{
			get
			{
				if(_events___==null)
				{
					_events___ = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_events___.SetContainingEntityInfo(this, "OrganizationRoleUser___");
				}
				return _events___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> Events____
		{
			get
			{
				if(_events____==null)
				{
					_events____ = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_events____.SetContainingEntityInfo(this, "OrganizationRoleUser____");
				}
				return _events____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> Events__
		{
			get
			{
				if(_events__==null)
				{
					_events__ = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_events__.SetContainingEntityInfo(this, "OrganizationRoleUser__");
				}
				return _events__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> Events
		{
			get
			{
				if(_events==null)
				{
					_events = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_events.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _events;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> Events_
		{
			get
			{
				if(_events_==null)
				{
					_events_ = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_events_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _events_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventStaffAssignmentEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventStaffAssignmentEntity))]
		public virtual EntityCollection<EventStaffAssignmentEntity> EventStaffAssignment__
		{
			get
			{
				if(_eventStaffAssignment__==null)
				{
					_eventStaffAssignment__ = new EntityCollection<EventStaffAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventStaffAssignmentEntityFactory)));
					_eventStaffAssignment__.SetContainingEntityInfo(this, "OrganizationRoleUser__");
				}
				return _eventStaffAssignment__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventStaffAssignmentEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventStaffAssignmentEntity))]
		public virtual EntityCollection<EventStaffAssignmentEntity> EventStaffAssignment_
		{
			get
			{
				if(_eventStaffAssignment_==null)
				{
					_eventStaffAssignment_ = new EntityCollection<EventStaffAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventStaffAssignmentEntityFactory)));
					_eventStaffAssignment_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _eventStaffAssignment_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventStaffAssignmentEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventStaffAssignmentEntity))]
		public virtual EntityCollection<EventStaffAssignmentEntity> EventStaffAssignment
		{
			get
			{
				if(_eventStaffAssignment==null)
				{
					_eventStaffAssignment = new EntityCollection<EventStaffAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventStaffAssignmentEntityFactory)));
					_eventStaffAssignment.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _eventStaffAssignment;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ExitInterviewAnswerEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ExitInterviewAnswerEntity))]
		public virtual EntityCollection<ExitInterviewAnswerEntity> ExitInterviewAnswer_
		{
			get
			{
				if(_exitInterviewAnswer_==null)
				{
					_exitInterviewAnswer_ = new EntityCollection<ExitInterviewAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExitInterviewAnswerEntityFactory)));
					_exitInterviewAnswer_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _exitInterviewAnswer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ExitInterviewAnswerEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ExitInterviewAnswerEntity))]
		public virtual EntityCollection<ExitInterviewAnswerEntity> ExitInterviewAnswer
		{
			get
			{
				if(_exitInterviewAnswer==null)
				{
					_exitInterviewAnswer = new EntityCollection<ExitInterviewAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExitInterviewAnswerEntityFactory)));
					_exitInterviewAnswer.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _exitInterviewAnswer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ExitInterviewSignatureEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ExitInterviewSignatureEntity))]
		public virtual EntityCollection<ExitInterviewSignatureEntity> ExitInterviewSignature
		{
			get
			{
				if(_exitInterviewSignature==null)
				{
					_exitInterviewSignature = new EntityCollection<ExitInterviewSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExitInterviewSignatureEntityFactory)));
					_exitInterviewSignature.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _exitInterviewSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ExportableReportsQueueEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ExportableReportsQueueEntity))]
		public virtual EntityCollection<ExportableReportsQueueEntity> ExportableReportsQueue
		{
			get
			{
				if(_exportableReportsQueue==null)
				{
					_exportableReportsQueue = new EntityCollection<ExportableReportsQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExportableReportsQueueEntityFactory)));
					_exportableReportsQueue.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _exportableReportsQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> File
		{
			get
			{
				if(_file==null)
				{
					_file = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_file.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _file;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FillEventCallQueueEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FillEventCallQueueEntity))]
		public virtual EntityCollection<FillEventCallQueueEntity> FillEventCallQueue
		{
			get
			{
				if(_fillEventCallQueue==null)
				{
					_fillEventCallQueue = new EntityCollection<FillEventCallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FillEventCallQueueEntityFactory)));
					_fillEventCallQueue.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _fillEventCallQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FluConsentAnswerEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FluConsentAnswerEntity))]
		public virtual EntityCollection<FluConsentAnswerEntity> FluConsentAnswer_
		{
			get
			{
				if(_fluConsentAnswer_==null)
				{
					_fluConsentAnswer_ = new EntityCollection<FluConsentAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentAnswerEntityFactory)));
					_fluConsentAnswer_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _fluConsentAnswer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FluConsentAnswerEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FluConsentAnswerEntity))]
		public virtual EntityCollection<FluConsentAnswerEntity> FluConsentAnswer
		{
			get
			{
				if(_fluConsentAnswer==null)
				{
					_fluConsentAnswer = new EntityCollection<FluConsentAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentAnswerEntityFactory)));
					_fluConsentAnswer.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _fluConsentAnswer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FluConsentSignatureEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FluConsentSignatureEntity))]
		public virtual EntityCollection<FluConsentSignatureEntity> FluConsentSignature
		{
			get
			{
				if(_fluConsentSignature==null)
				{
					_fluConsentSignature = new EntityCollection<FluConsentSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentSignatureEntityFactory)));
					_fluConsentSignature.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _fluConsentSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FluConsentTemplateEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FluConsentTemplateEntity))]
		public virtual EntityCollection<FluConsentTemplateEntity> FluConsentTemplate_
		{
			get
			{
				if(_fluConsentTemplate_==null)
				{
					_fluConsentTemplate_ = new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory)));
					_fluConsentTemplate_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _fluConsentTemplate_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FluConsentTemplateEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FluConsentTemplateEntity))]
		public virtual EntityCollection<FluConsentTemplateEntity> FluConsentTemplate
		{
			get
			{
				if(_fluConsentTemplate==null)
				{
					_fluConsentTemplate = new EntityCollection<FluConsentTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentTemplateEntityFactory)));
					_fluConsentTemplate.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _fluConsentTemplate;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GcNotGivenReasonEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GcNotGivenReasonEntity))]
		public virtual EntityCollection<GcNotGivenReasonEntity> GcNotGivenReason_
		{
			get
			{
				if(_gcNotGivenReason_==null)
				{
					_gcNotGivenReason_ = new EntityCollection<GcNotGivenReasonEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GcNotGivenReasonEntityFactory)));
					_gcNotGivenReason_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _gcNotGivenReason_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GcNotGivenReasonEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GcNotGivenReasonEntity))]
		public virtual EntityCollection<GcNotGivenReasonEntity> GcNotGivenReason
		{
			get
			{
				if(_gcNotGivenReason==null)
				{
					_gcNotGivenReason = new EntityCollection<GcNotGivenReasonEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GcNotGivenReasonEntityFactory)));
					_gcNotGivenReason.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _gcNotGivenReason;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GuardianDetailsEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GuardianDetailsEntity))]
		public virtual EntityCollection<GuardianDetailsEntity> GuardianDetails_
		{
			get
			{
				if(_guardianDetails_==null)
				{
					_guardianDetails_ = new EntityCollection<GuardianDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GuardianDetailsEntityFactory)));
					_guardianDetails_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _guardianDetails_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GuardianDetailsEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GuardianDetailsEntity))]
		public virtual EntityCollection<GuardianDetailsEntity> GuardianDetails
		{
			get
			{
				if(_guardianDetails==null)
				{
					_guardianDetails = new EntityCollection<GuardianDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GuardianDetailsEntityFactory)));
					_guardianDetails.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _guardianDetails;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HafTemplateEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HafTemplateEntity))]
		public virtual EntityCollection<HafTemplateEntity> HafTemplate_
		{
			get
			{
				if(_hafTemplate_==null)
				{
					_hafTemplate_ = new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory)));
					_hafTemplate_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _hafTemplate_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HafTemplateEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HafTemplateEntity))]
		public virtual EntityCollection<HafTemplateEntity> HafTemplate
		{
			get
			{
				if(_hafTemplate==null)
				{
					_hafTemplate = new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory)));
					_hafTemplate.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _hafTemplate;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HcpcsCodeEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HcpcsCodeEntity))]
		public virtual EntityCollection<HcpcsCodeEntity> HcpcsCode_
		{
			get
			{
				if(_hcpcsCode_==null)
				{
					_hcpcsCode_ = new EntityCollection<HcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HcpcsCodeEntityFactory)));
					_hcpcsCode_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _hcpcsCode_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HcpcsCodeEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HcpcsCodeEntity))]
		public virtual EntityCollection<HcpcsCodeEntity> HcpcsCode
		{
			get
			{
				if(_hcpcsCode==null)
				{
					_hcpcsCode = new EntityCollection<HcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HcpcsCodeEntityFactory)));
					_hcpcsCode.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _hcpcsCode;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HealthPlanCallQueueCriteriaEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HealthPlanCallQueueCriteriaEntity))]
		public virtual EntityCollection<HealthPlanCallQueueCriteriaEntity> HealthPlanCallQueueCriteria__
		{
			get
			{
				if(_healthPlanCallQueueCriteria__==null)
				{
					_healthPlanCallQueueCriteria__ = new EntityCollection<HealthPlanCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCallQueueCriteriaEntityFactory)));
					_healthPlanCallQueueCriteria__.SetContainingEntityInfo(this, "OrganizationRoleUser__");
				}
				return _healthPlanCallQueueCriteria__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HealthPlanCallQueueCriteriaEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HealthPlanCallQueueCriteriaEntity))]
		public virtual EntityCollection<HealthPlanCallQueueCriteriaEntity> HealthPlanCallQueueCriteria_
		{
			get
			{
				if(_healthPlanCallQueueCriteria_==null)
				{
					_healthPlanCallQueueCriteria_ = new EntityCollection<HealthPlanCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCallQueueCriteriaEntityFactory)));
					_healthPlanCallQueueCriteria_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _healthPlanCallQueueCriteria_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HealthPlanCriteriaAssignmentEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HealthPlanCriteriaAssignmentEntity))]
		public virtual EntityCollection<HealthPlanCriteriaAssignmentEntity> HealthPlanCriteriaAssignment__
		{
			get
			{
				if(_healthPlanCriteriaAssignment__==null)
				{
					_healthPlanCriteriaAssignment__ = new EntityCollection<HealthPlanCriteriaAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCriteriaAssignmentEntityFactory)));
					_healthPlanCriteriaAssignment__.SetContainingEntityInfo(this, "OrganizationRoleUser__");
				}
				return _healthPlanCriteriaAssignment__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HealthPlanCriteriaAssignmentEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HealthPlanCriteriaAssignmentEntity))]
		public virtual EntityCollection<HealthPlanCriteriaAssignmentEntity> HealthPlanCriteriaAssignment_
		{
			get
			{
				if(_healthPlanCriteriaAssignment_==null)
				{
					_healthPlanCriteriaAssignment_ = new EntityCollection<HealthPlanCriteriaAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCriteriaAssignmentEntityFactory)));
					_healthPlanCriteriaAssignment_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _healthPlanCriteriaAssignment_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HealthPlanCriteriaAssignmentEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HealthPlanCriteriaAssignmentEntity))]
		public virtual EntityCollection<HealthPlanCriteriaAssignmentEntity> HealthPlanCriteriaAssignment
		{
			get
			{
				if(_healthPlanCriteriaAssignment==null)
				{
					_healthPlanCriteriaAssignment = new EntityCollection<HealthPlanCriteriaAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCriteriaAssignmentEntityFactory)));
					_healthPlanCriteriaAssignment.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _healthPlanCriteriaAssignment;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HealthPlanCriteriaAssignmentUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HealthPlanCriteriaAssignmentUploadEntity))]
		public virtual EntityCollection<HealthPlanCriteriaAssignmentUploadEntity> HealthPlanCriteriaAssignmentUpload
		{
			get
			{
				if(_healthPlanCriteriaAssignmentUpload==null)
				{
					_healthPlanCriteriaAssignmentUpload = new EntityCollection<HealthPlanCriteriaAssignmentUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCriteriaAssignmentUploadEntityFactory)));
					_healthPlanCriteriaAssignmentUpload.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _healthPlanCriteriaAssignmentUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HealthPlanCriteriaTeamAssignmentEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HealthPlanCriteriaTeamAssignmentEntity))]
		public virtual EntityCollection<HealthPlanCriteriaTeamAssignmentEntity> HealthPlanCriteriaTeamAssignment_
		{
			get
			{
				if(_healthPlanCriteriaTeamAssignment_==null)
				{
					_healthPlanCriteriaTeamAssignment_ = new EntityCollection<HealthPlanCriteriaTeamAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCriteriaTeamAssignmentEntityFactory)));
					_healthPlanCriteriaTeamAssignment_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _healthPlanCriteriaTeamAssignment_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HealthPlanCriteriaTeamAssignmentEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HealthPlanCriteriaTeamAssignmentEntity))]
		public virtual EntityCollection<HealthPlanCriteriaTeamAssignmentEntity> HealthPlanCriteriaTeamAssignment
		{
			get
			{
				if(_healthPlanCriteriaTeamAssignment==null)
				{
					_healthPlanCriteriaTeamAssignment = new EntityCollection<HealthPlanCriteriaTeamAssignmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCriteriaTeamAssignmentEntityFactory)));
					_healthPlanCriteriaTeamAssignment.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _healthPlanCriteriaTeamAssignment;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HealthPlanRevenueEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HealthPlanRevenueEntity))]
		public virtual EntityCollection<HealthPlanRevenueEntity> HealthPlanRevenue_
		{
			get
			{
				if(_healthPlanRevenue_==null)
				{
					_healthPlanRevenue_ = new EntityCollection<HealthPlanRevenueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanRevenueEntityFactory)));
					_healthPlanRevenue_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _healthPlanRevenue_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HealthPlanRevenueEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HealthPlanRevenueEntity))]
		public virtual EntityCollection<HealthPlanRevenueEntity> HealthPlanRevenue
		{
			get
			{
				if(_healthPlanRevenue==null)
				{
					_healthPlanRevenue = new EntityCollection<HealthPlanRevenueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanRevenueEntityFactory)));
					_healthPlanRevenue.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _healthPlanRevenue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HospitalPartnerCustomerEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HospitalPartnerCustomerEntity))]
		public virtual EntityCollection<HospitalPartnerCustomerEntity> HospitalPartnerCustomer__
		{
			get
			{
				if(_hospitalPartnerCustomer__==null)
				{
					_hospitalPartnerCustomer__ = new EntityCollection<HospitalPartnerCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HospitalPartnerCustomerEntityFactory)));
					_hospitalPartnerCustomer__.SetContainingEntityInfo(this, "OrganizationRoleUser__");
				}
				return _hospitalPartnerCustomer__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HospitalPartnerCustomerEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HospitalPartnerCustomerEntity))]
		public virtual EntityCollection<HospitalPartnerCustomerEntity> HospitalPartnerCustomer_
		{
			get
			{
				if(_hospitalPartnerCustomer_==null)
				{
					_hospitalPartnerCustomer_ = new EntityCollection<HospitalPartnerCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HospitalPartnerCustomerEntityFactory)));
					_hospitalPartnerCustomer_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _hospitalPartnerCustomer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HospitalPartnerCustomerEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HospitalPartnerCustomerEntity))]
		public virtual EntityCollection<HospitalPartnerCustomerEntity> HospitalPartnerCustomer
		{
			get
			{
				if(_hospitalPartnerCustomer==null)
				{
					_hospitalPartnerCustomer = new EntityCollection<HospitalPartnerCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HospitalPartnerCustomerEntityFactory)));
					_hospitalPartnerCustomer.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _hospitalPartnerCustomer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HostFacilityRankingEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HostFacilityRankingEntity))]
		public virtual EntityCollection<HostFacilityRankingEntity> HostFacilityRanking
		{
			get
			{
				if(_hostFacilityRanking==null)
				{
					_hostFacilityRanking = new EntityCollection<HostFacilityRankingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HostFacilityRankingEntityFactory)));
					_hostFacilityRanking.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _hostFacilityRanking;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HostPaymentEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HostPaymentEntity))]
		public virtual EntityCollection<HostPaymentEntity> HostPayment
		{
			get
			{
				if(_hostPayment==null)
				{
					_hostPayment = new EntityCollection<HostPaymentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HostPaymentEntityFactory)));
					_hostPayment.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _hostPayment;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HostPaymentTransactionEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HostPaymentTransactionEntity))]
		public virtual EntityCollection<HostPaymentTransactionEntity> HostPaymentTransaction
		{
			get
			{
				if(_hostPaymentTransaction==null)
				{
					_hostPaymentTransaction = new EntityCollection<HostPaymentTransactionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HostPaymentTransactionEntityFactory)));
					_hostPaymentTransaction.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _hostPaymentTransaction;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'IcdCodesEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(IcdCodesEntity))]
		public virtual EntityCollection<IcdCodesEntity> IcdCodes_
		{
			get
			{
				if(_icdCodes_==null)
				{
					_icdCodes_ = new EntityCollection<IcdCodesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(IcdCodesEntityFactory)));
					_icdCodes_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _icdCodes_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'IcdCodesEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(IcdCodesEntity))]
		public virtual EntityCollection<IcdCodesEntity> IcdCodes
		{
			get
			{
				if(_icdCodes==null)
				{
					_icdCodes = new EntityCollection<IcdCodesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(IcdCodesEntityFactory)));
					_icdCodes.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _icdCodes;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'IncidentalFindingsEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(IncidentalFindingsEntity))]
		public virtual EntityCollection<IncidentalFindingsEntity> IncidentalFindings
		{
			get
			{
				if(_incidentalFindings==null)
				{
					_incidentalFindings = new EntityCollection<IncidentalFindingsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(IncidentalFindingsEntityFactory)));
					_incidentalFindings.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _incidentalFindings;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'KynLabValuesEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(KynLabValuesEntity))]
		public virtual EntityCollection<KynLabValuesEntity> KynLabValues_
		{
			get
			{
				if(_kynLabValues_==null)
				{
					_kynLabValues_ = new EntityCollection<KynLabValuesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(KynLabValuesEntityFactory)));
					_kynLabValues_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _kynLabValues_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'KynLabValuesEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(KynLabValuesEntity))]
		public virtual EntityCollection<KynLabValuesEntity> KynLabValues
		{
			get
			{
				if(_kynLabValues==null)
				{
					_kynLabValues = new EntityCollection<KynLabValuesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(KynLabValuesEntityFactory)));
					_kynLabValues.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _kynLabValues;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LabEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LabEntity))]
		public virtual EntityCollection<LabEntity> Lab
		{
			get
			{
				if(_lab==null)
				{
					_lab = new EntityCollection<LabEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LabEntityFactory)));
					_lab.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _lab;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LanguageEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LanguageEntity))]
		public virtual EntityCollection<LanguageEntity> Language
		{
			get
			{
				if(_language==null)
				{
					_language = new EntityCollection<LanguageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LanguageEntityFactory)));
					_language.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _language;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LanguageBarrierCallQueueEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LanguageBarrierCallQueueEntity))]
		public virtual EntityCollection<LanguageBarrierCallQueueEntity> LanguageBarrierCallQueue
		{
			get
			{
				if(_languageBarrierCallQueue==null)
				{
					_languageBarrierCallQueue = new EntityCollection<LanguageBarrierCallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LanguageBarrierCallQueueEntityFactory)));
					_languageBarrierCallQueue.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _languageBarrierCallQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'MailRoundCallQueueEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(MailRoundCallQueueEntity))]
		public virtual EntityCollection<MailRoundCallQueueEntity> MailRoundCallQueue
		{
			get
			{
				if(_mailRoundCallQueue==null)
				{
					_mailRoundCallQueue = new EntityCollection<MailRoundCallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MailRoundCallQueueEntityFactory)));
					_mailRoundCallQueue.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _mailRoundCallQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'MarketingPrintOrderEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(MarketingPrintOrderEntity))]
		public virtual EntityCollection<MarketingPrintOrderEntity> MarketingPrintOrder
		{
			get
			{
				if(_marketingPrintOrder==null)
				{
					_marketingPrintOrder = new EntityCollection<MarketingPrintOrderEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MarketingPrintOrderEntityFactory)));
					_marketingPrintOrder.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _marketingPrintOrder;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'MedicationEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(MedicationEntity))]
		public virtual EntityCollection<MedicationEntity> Medication_
		{
			get
			{
				if(_medication_==null)
				{
					_medication_ = new EntityCollection<MedicationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicationEntityFactory)));
					_medication_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _medication_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'MedicationEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(MedicationEntity))]
		public virtual EntityCollection<MedicationEntity> Medication
		{
			get
			{
				if(_medication==null)
				{
					_medication = new EntityCollection<MedicationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicationEntityFactory)));
					_medication.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _medication;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'MedicationUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(MedicationUploadEntity))]
		public virtual EntityCollection<MedicationUploadEntity> MedicationUpload
		{
			get
			{
				if(_medicationUpload==null)
				{
					_medicationUpload = new EntityCollection<MedicationUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicationUploadEntityFactory)));
					_medicationUpload.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _medicationUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'MergeCustomerUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(MergeCustomerUploadEntity))]
		public virtual EntityCollection<MergeCustomerUploadEntity> MergeCustomerUpload
		{
			get
			{
				if(_mergeCustomerUpload==null)
				{
					_mergeCustomerUpload = new EntityCollection<MergeCustomerUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MergeCustomerUploadEntityFactory)));
					_mergeCustomerUpload.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _mergeCustomerUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'NoShowCallQueueEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(NoShowCallQueueEntity))]
		public virtual EntityCollection<NoShowCallQueueEntity> NoShowCallQueue
		{
			get
			{
				if(_noShowCallQueue==null)
				{
					_noShowCallQueue = new EntityCollection<NoShowCallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NoShowCallQueueEntityFactory)));
					_noShowCallQueue.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _noShowCallQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'NotesDetailsEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(NotesDetailsEntity))]
		public virtual EntityCollection<NotesDetailsEntity> NotesDetails_
		{
			get
			{
				if(_notesDetails_==null)
				{
					_notesDetails_ = new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory)));
					_notesDetails_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _notesDetails_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'NotesDetailsEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(NotesDetailsEntity))]
		public virtual EntityCollection<NotesDetailsEntity> NotesDetails
		{
			get
			{
				if(_notesDetails==null)
				{
					_notesDetails = new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory)));
					_notesDetails.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _notesDetails;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'NotificationEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(NotificationEntity))]
		public virtual EntityCollection<NotificationEntity> Notification
		{
			get
			{
				if(_notification==null)
				{
					_notification = new EntityCollection<NotificationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotificationEntityFactory)));
					_notification.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _notification;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'NotificationTypeEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(NotificationTypeEntity))]
		public virtual EntityCollection<NotificationTypeEntity> NotificationType
		{
			get
			{
				if(_notificationType==null)
				{
					_notificationType = new EntityCollection<NotificationTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotificationTypeEntityFactory)));
					_notificationType.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _notificationType;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationRoleUserTerritoryEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationRoleUserTerritoryEntity))]
		public virtual EntityCollection<OrganizationRoleUserTerritoryEntity> OrganizationRoleUserTerritory
		{
			get
			{
				if(_organizationRoleUserTerritory==null)
				{
					_organizationRoleUserTerritory = new EntityCollection<OrganizationRoleUserTerritoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationRoleUserTerritoryEntityFactory)));
					_organizationRoleUserTerritory.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _organizationRoleUserTerritory;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrgRoleUserActivityEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrgRoleUserActivityEntity))]
		public virtual EntityCollection<OrgRoleUserActivityEntity> OrgRoleUserActivity
		{
			get
			{
				if(_orgRoleUserActivity==null)
				{
					_orgRoleUserActivity = new EntityCollection<OrgRoleUserActivityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrgRoleUserActivityEntityFactory)));
					_orgRoleUserActivity.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _orgRoleUserActivity;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ParticipationConsentSignatureEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ParticipationConsentSignatureEntity))]
		public virtual EntityCollection<ParticipationConsentSignatureEntity> ParticipationConsentSignature
		{
			get
			{
				if(_participationConsentSignature==null)
				{
					_participationConsentSignature = new EntityCollection<ParticipationConsentSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ParticipationConsentSignatureEntityFactory)));
					_participationConsentSignature.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _participationConsentSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PasswordChangelogEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PasswordChangelogEntity))]
		public virtual EntityCollection<PasswordChangelogEntity> PasswordChangelog
		{
			get
			{
				if(_passwordChangelog==null)
				{
					_passwordChangelog = new EntityCollection<PasswordChangelogEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PasswordChangelogEntityFactory)));
					_passwordChangelog.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _passwordChangelog;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PayPeriodEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PayPeriodEntity))]
		public virtual EntityCollection<PayPeriodEntity> PayPeriod_
		{
			get
			{
				if(_payPeriod_==null)
				{
					_payPeriod_ = new EntityCollection<PayPeriodEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PayPeriodEntityFactory)));
					_payPeriod_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _payPeriod_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PayPeriodEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PayPeriodEntity))]
		public virtual EntityCollection<PayPeriodEntity> PayPeriod
		{
			get
			{
				if(_payPeriod==null)
				{
					_payPeriod = new EntityCollection<PayPeriodEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PayPeriodEntityFactory)));
					_payPeriod.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _payPeriod;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PcpAppointmentEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PcpAppointmentEntity))]
		public virtual EntityCollection<PcpAppointmentEntity> PcpAppointment_
		{
			get
			{
				if(_pcpAppointment_==null)
				{
					_pcpAppointment_ = new EntityCollection<PcpAppointmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PcpAppointmentEntityFactory)));
					_pcpAppointment_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _pcpAppointment_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PcpAppointmentEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PcpAppointmentEntity))]
		public virtual EntityCollection<PcpAppointmentEntity> PcpAppointment
		{
			get
			{
				if(_pcpAppointment==null)
				{
					_pcpAppointment = new EntityCollection<PcpAppointmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PcpAppointmentEntityFactory)));
					_pcpAppointment.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _pcpAppointment;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PcpDispositionEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PcpDispositionEntity))]
		public virtual EntityCollection<PcpDispositionEntity> PcpDisposition_
		{
			get
			{
				if(_pcpDisposition_==null)
				{
					_pcpDisposition_ = new EntityCollection<PcpDispositionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PcpDispositionEntityFactory)));
					_pcpDisposition_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _pcpDisposition_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PcpDispositionEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PcpDispositionEntity))]
		public virtual EntityCollection<PcpDispositionEntity> PcpDisposition
		{
			get
			{
				if(_pcpDisposition==null)
				{
					_pcpDisposition = new EntityCollection<PcpDispositionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PcpDispositionEntityFactory)));
					_pcpDisposition.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _pcpDisposition;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PhysicianRecordRequestSignatureEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PhysicianRecordRequestSignatureEntity))]
		public virtual EntityCollection<PhysicianRecordRequestSignatureEntity> PhysicianRecordRequestSignature
		{
			get
			{
				if(_physicianRecordRequestSignature==null)
				{
					_physicianRecordRequestSignature = new EntityCollection<PhysicianRecordRequestSignatureEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PhysicianRecordRequestSignatureEntityFactory)));
					_physicianRecordRequestSignature.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _physicianRecordRequestSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PinChangelogEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PinChangelogEntity))]
		public virtual EntityCollection<PinChangelogEntity> PinChangelog
		{
			get
			{
				if(_pinChangelog==null)
				{
					_pinChangelog = new EntityCollection<PinChangelogEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PinChangelogEntityFactory)));
					_pinChangelog.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _pinChangelog;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PodDefaultTeamEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PodDefaultTeamEntity))]
		public virtual EntityCollection<PodDefaultTeamEntity> PodDefaultTeam
		{
			get
			{
				if(_podDefaultTeam==null)
				{
					_podDefaultTeam = new EntityCollection<PodDefaultTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PodDefaultTeamEntityFactory)));
					_podDefaultTeam.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _podDefaultTeam;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PreApprovedPackageEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PreApprovedPackageEntity))]
		public virtual EntityCollection<PreApprovedPackageEntity> PreApprovedPackage
		{
			get
			{
				if(_preApprovedPackage==null)
				{
					_preApprovedPackage = new EntityCollection<PreApprovedPackageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreApprovedPackageEntityFactory)));
					_preApprovedPackage.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _preApprovedPackage;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PreApprovedTestEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PreApprovedTestEntity))]
		public virtual EntityCollection<PreApprovedTestEntity> PreApprovedTest
		{
			get
			{
				if(_preApprovedTest==null)
				{
					_preApprovedTest = new EntityCollection<PreApprovedTestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreApprovedTestEntityFactory)));
					_preApprovedTest.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _preApprovedTest;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PreAssessmentCallQueueCustomerLockEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PreAssessmentCallQueueCustomerLockEntity))]
		public virtual EntityCollection<PreAssessmentCallQueueCustomerLockEntity> PreAssessmentCallQueueCustomerLock
		{
			get
			{
				if(_preAssessmentCallQueueCustomerLock==null)
				{
					_preAssessmentCallQueueCustomerLock = new EntityCollection<PreAssessmentCallQueueCustomerLockEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreAssessmentCallQueueCustomerLockEntityFactory)));
					_preAssessmentCallQueueCustomerLock.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _preAssessmentCallQueueCustomerLock;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PreAssessmentCustomerCallQueueCallAttemptEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PreAssessmentCustomerCallQueueCallAttemptEntity))]
		public virtual EntityCollection<PreAssessmentCustomerCallQueueCallAttemptEntity> PreAssessmentCustomerCallQueueCallAttempt
		{
			get
			{
				if(_preAssessmentCustomerCallQueueCallAttempt==null)
				{
					_preAssessmentCustomerCallQueueCallAttempt = new EntityCollection<PreAssessmentCustomerCallQueueCallAttemptEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreAssessmentCustomerCallQueueCallAttemptEntityFactory)));
					_preAssessmentCustomerCallQueueCallAttempt.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _preAssessmentCustomerCallQueueCallAttempt;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PreQualificationQuestionEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PreQualificationQuestionEntity))]
		public virtual EntityCollection<PreQualificationQuestionEntity> PreQualificationQuestion
		{
			get
			{
				if(_preQualificationQuestion==null)
				{
					_preQualificationQuestion = new EntityCollection<PreQualificationQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreQualificationQuestionEntityFactory)));
					_preQualificationQuestion.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _preQualificationQuestion;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PreQualificationTestTemplateEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PreQualificationTestTemplateEntity))]
		public virtual EntityCollection<PreQualificationTestTemplateEntity> PreQualificationTestTemplate_
		{
			get
			{
				if(_preQualificationTestTemplate_==null)
				{
					_preQualificationTestTemplate_ = new EntityCollection<PreQualificationTestTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreQualificationTestTemplateEntityFactory)));
					_preQualificationTestTemplate_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _preQualificationTestTemplate_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PreQualificationTestTemplateEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PreQualificationTestTemplateEntity))]
		public virtual EntityCollection<PreQualificationTestTemplateEntity> PreQualificationTestTemplate
		{
			get
			{
				if(_preQualificationTestTemplate==null)
				{
					_preQualificationTestTemplate = new EntityCollection<PreQualificationTestTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreQualificationTestTemplateEntityFactory)));
					_preQualificationTestTemplate.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _preQualificationTestTemplate;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PrintOrderItemTrackingEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PrintOrderItemTrackingEntity))]
		public virtual EntityCollection<PrintOrderItemTrackingEntity> PrintOrderItemTracking_
		{
			get
			{
				if(_printOrderItemTracking_==null)
				{
					_printOrderItemTracking_ = new EntityCollection<PrintOrderItemTrackingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PrintOrderItemTrackingEntityFactory)));
					_printOrderItemTracking_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _printOrderItemTracking_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PrintOrderItemTrackingEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PrintOrderItemTrackingEntity))]
		public virtual EntityCollection<PrintOrderItemTrackingEntity> PrintOrderItemTracking
		{
			get
			{
				if(_printOrderItemTracking==null)
				{
					_printOrderItemTracking = new EntityCollection<PrintOrderItemTrackingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PrintOrderItemTrackingEntityFactory)));
					_printOrderItemTracking.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _printOrderItemTracking;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PriorityInQueueEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PriorityInQueueEntity))]
		public virtual EntityCollection<PriorityInQueueEntity> PriorityInQueue_
		{
			get
			{
				if(_priorityInQueue_==null)
				{
					_priorityInQueue_ = new EntityCollection<PriorityInQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PriorityInQueueEntityFactory)));
					_priorityInQueue_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _priorityInQueue_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PriorityInQueueEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PriorityInQueueEntity))]
		public virtual EntityCollection<PriorityInQueueEntity> PriorityInQueue
		{
			get
			{
				if(_priorityInQueue==null)
				{
					_priorityInQueue = new EntityCollection<PriorityInQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PriorityInQueueEntityFactory)));
					_priorityInQueue.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _priorityInQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ProspectCustomerEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ProspectCustomerEntity))]
		public virtual EntityCollection<ProspectCustomerEntity> ProspectCustomer
		{
			get
			{
				if(_prospectCustomer==null)
				{
					_prospectCustomer = new EntityCollection<ProspectCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectCustomerEntityFactory)));
					_prospectCustomer.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _prospectCustomer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ProspectsEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ProspectsEntity))]
		public virtual EntityCollection<ProspectsEntity> Prospects
		{
			get
			{
				if(_prospects==null)
				{
					_prospects = new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory)));
					_prospects.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _prospects;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'RapsUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(RapsUploadEntity))]
		public virtual EntityCollection<RapsUploadEntity> RapsUpload
		{
			get
			{
				if(_rapsUpload==null)
				{
					_rapsUpload = new EntityCollection<RapsUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RapsUploadEntityFactory)));
					_rapsUpload.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _rapsUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ReferralEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ReferralEntity))]
		public virtual EntityCollection<ReferralEntity> Referral
		{
			get
			{
				if(_referral==null)
				{
					_referral = new EntityCollection<ReferralEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ReferralEntityFactory)));
					_referral.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _referral;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'RefundRequestEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(RefundRequestEntity))]
		public virtual EntityCollection<RefundRequestEntity> RefundRequest_
		{
			get
			{
				if(_refundRequest_==null)
				{
					_refundRequest_ = new EntityCollection<RefundRequestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RefundRequestEntityFactory)));
					_refundRequest_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _refundRequest_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'RefundRequestEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(RefundRequestEntity))]
		public virtual EntityCollection<RefundRequestEntity> RefundRequest
		{
			get
			{
				if(_refundRequest==null)
				{
					_refundRequest = new EntityCollection<RefundRequestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RefundRequestEntityFactory)));
					_refundRequest.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _refundRequest;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'RequiredTestEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(RequiredTestEntity))]
		public virtual EntityCollection<RequiredTestEntity> RequiredTest
		{
			get
			{
				if(_requiredTest==null)
				{
					_requiredTest = new EntityCollection<RequiredTestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RequiredTestEntityFactory)));
					_requiredTest.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _requiredTest;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'SalesRepPodAssigmentsEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(SalesRepPodAssigmentsEntity))]
		public virtual EntityCollection<SalesRepPodAssigmentsEntity> SalesRepPodAssigments
		{
			get
			{
				if(_salesRepPodAssigments==null)
				{
					_salesRepPodAssigments = new EntityCollection<SalesRepPodAssigmentsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SalesRepPodAssigmentsEntityFactory)));
					_salesRepPodAssigments.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _salesRepPodAssigments;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ScheduleTemplateEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ScheduleTemplateEntity))]
		public virtual EntityCollection<ScheduleTemplateEntity> ScheduleTemplate_
		{
			get
			{
				if(_scheduleTemplate_==null)
				{
					_scheduleTemplate_ = new EntityCollection<ScheduleTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ScheduleTemplateEntityFactory)));
					_scheduleTemplate_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _scheduleTemplate_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ScheduleTemplateEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ScheduleTemplateEntity))]
		public virtual EntityCollection<ScheduleTemplateEntity> ScheduleTemplate
		{
			get
			{
				if(_scheduleTemplate==null)
				{
					_scheduleTemplate = new EntityCollection<ScheduleTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ScheduleTemplateEntityFactory)));
					_scheduleTemplate.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _scheduleTemplate;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'SeminarsEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(SeminarsEntity))]
		public virtual EntityCollection<SeminarsEntity> Seminars
		{
			get
			{
				if(_seminars==null)
				{
					_seminars = new EntityCollection<SeminarsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SeminarsEntityFactory)));
					_seminars.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _seminars;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ShippingDetailEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ShippingDetailEntity))]
		public virtual EntityCollection<ShippingDetailEntity> ShippingDetail_
		{
			get
			{
				if(_shippingDetail_==null)
				{
					_shippingDetail_ = new EntityCollection<ShippingDetailEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShippingDetailEntityFactory)));
					_shippingDetail_.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _shippingDetail_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ShippingDetailEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ShippingDetailEntity))]
		public virtual EntityCollection<ShippingDetailEntity> ShippingDetail
		{
			get
			{
				if(_shippingDetail==null)
				{
					_shippingDetail = new EntityCollection<ShippingDetailEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShippingDetailEntityFactory)));
					_shippingDetail.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _shippingDetail;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'SourceCodeChangeLogEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(SourceCodeChangeLogEntity))]
		public virtual EntityCollection<SourceCodeChangeLogEntity> SourceCodeChangeLog
		{
			get
			{
				if(_sourceCodeChangeLog==null)
				{
					_sourceCodeChangeLog = new EntityCollection<SourceCodeChangeLogEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SourceCodeChangeLogEntityFactory)));
					_sourceCodeChangeLog.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _sourceCodeChangeLog;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'StaffEventScheduleUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(StaffEventScheduleUploadEntity))]
		public virtual EntityCollection<StaffEventScheduleUploadEntity> StaffEventScheduleUpload
		{
			get
			{
				if(_staffEventScheduleUpload==null)
				{
					_staffEventScheduleUpload = new EntityCollection<StaffEventScheduleUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(StaffEventScheduleUploadEntityFactory)));
					_staffEventScheduleUpload.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _staffEventScheduleUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'SurveyAnswerEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(SurveyAnswerEntity))]
		public virtual EntityCollection<SurveyAnswerEntity> SurveyAnswer_
		{
			get
			{
				if(_surveyAnswer_==null)
				{
					_surveyAnswer_ = new EntityCollection<SurveyAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyAnswerEntityFactory)));
					_surveyAnswer_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _surveyAnswer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'SurveyAnswerEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(SurveyAnswerEntity))]
		public virtual EntityCollection<SurveyAnswerEntity> SurveyAnswer
		{
			get
			{
				if(_surveyAnswer==null)
				{
					_surveyAnswer = new EntityCollection<SurveyAnswerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyAnswerEntityFactory)));
					_surveyAnswer.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _surveyAnswer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'SurveyTemplateEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(SurveyTemplateEntity))]
		public virtual EntityCollection<SurveyTemplateEntity> SurveyTemplate_
		{
			get
			{
				if(_surveyTemplate_==null)
				{
					_surveyTemplate_ = new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory)));
					_surveyTemplate_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _surveyTemplate_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'SurveyTemplateEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(SurveyTemplateEntity))]
		public virtual EntityCollection<SurveyTemplateEntity> SurveyTemplate
		{
			get
			{
				if(_surveyTemplate==null)
				{
					_surveyTemplate = new EntityCollection<SurveyTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyTemplateEntityFactory)));
					_surveyTemplate.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _surveyTemplate;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'SuspectConditionUploadEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(SuspectConditionUploadEntity))]
		public virtual EntityCollection<SuspectConditionUploadEntity> SuspectConditionUpload
		{
			get
			{
				if(_suspectConditionUpload==null)
				{
					_suspectConditionUpload = new EntityCollection<SuspectConditionUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SuspectConditionUploadEntityFactory)));
					_suspectConditionUpload.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _suspectConditionUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'SystemGeneratedCallQueueCriteriaEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(SystemGeneratedCallQueueCriteriaEntity))]
		public virtual EntityCollection<SystemGeneratedCallQueueCriteriaEntity> SystemGenertedCallQueueCriteria__
		{
			get
			{
				if(_systemGenertedCallQueueCriteria__==null)
				{
					_systemGenertedCallQueueCriteria__ = new EntityCollection<SystemGeneratedCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SystemGeneratedCallQueueCriteriaEntityFactory)));
					_systemGenertedCallQueueCriteria__.SetContainingEntityInfo(this, "OrganizationRoleUser__");
				}
				return _systemGenertedCallQueueCriteria__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'SystemGeneratedCallQueueCriteriaEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(SystemGeneratedCallQueueCriteriaEntity))]
		public virtual EntityCollection<SystemGeneratedCallQueueCriteriaEntity> SystemGenertedCallQueueCriteria_
		{
			get
			{
				if(_systemGenertedCallQueueCriteria_==null)
				{
					_systemGenertedCallQueueCriteria_ = new EntityCollection<SystemGeneratedCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SystemGeneratedCallQueueCriteriaEntityFactory)));
					_systemGenertedCallQueueCriteria_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _systemGenertedCallQueueCriteria_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'SystemGeneratedCallQueueCriteriaEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(SystemGeneratedCallQueueCriteriaEntity))]
		public virtual EntityCollection<SystemGeneratedCallQueueCriteriaEntity> SystemGenertedCallQueueCriteria
		{
			get
			{
				if(_systemGenertedCallQueueCriteria==null)
				{
					_systemGenertedCallQueueCriteria = new EntityCollection<SystemGeneratedCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SystemGeneratedCallQueueCriteriaEntityFactory)));
					_systemGenertedCallQueueCriteria.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _systemGenertedCallQueueCriteria;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TaskDetailsEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TaskDetailsEntity))]
		public virtual EntityCollection<TaskDetailsEntity> TaskDetails__
		{
			get
			{
				if(_taskDetails__==null)
				{
					_taskDetails__ = new EntityCollection<TaskDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TaskDetailsEntityFactory)));
					_taskDetails__.SetContainingEntityInfo(this, "OrganizationRoleUser__");
				}
				return _taskDetails__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TaskDetailsEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TaskDetailsEntity))]
		public virtual EntityCollection<TaskDetailsEntity> TaskDetails_
		{
			get
			{
				if(_taskDetails_==null)
				{
					_taskDetails_ = new EntityCollection<TaskDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TaskDetailsEntityFactory)));
					_taskDetails_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _taskDetails_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TaskDetailsEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TaskDetailsEntity))]
		public virtual EntityCollection<TaskDetailsEntity> TaskDetails
		{
			get
			{
				if(_taskDetails==null)
				{
					_taskDetails = new EntityCollection<TaskDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TaskDetailsEntityFactory)));
					_taskDetails.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _taskDetails;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TerritoryEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TerritoryEntity))]
		public virtual EntityCollection<TerritoryEntity> Territory
		{
			get
			{
				if(_territory==null)
				{
					_territory = new EntityCollection<TerritoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TerritoryEntityFactory)));
					_territory.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _territory;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestHcpcsCodeEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestHcpcsCodeEntity))]
		public virtual EntityCollection<TestHcpcsCodeEntity> TestHcpcsCode_
		{
			get
			{
				if(_testHcpcsCode_==null)
				{
					_testHcpcsCode_ = new EntityCollection<TestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestHcpcsCodeEntityFactory)));
					_testHcpcsCode_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _testHcpcsCode_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestHcpcsCodeEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestHcpcsCodeEntity))]
		public virtual EntityCollection<TestHcpcsCodeEntity> TestHcpcsCode
		{
			get
			{
				if(_testHcpcsCode==null)
				{
					_testHcpcsCode = new EntityCollection<TestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestHcpcsCodeEntityFactory)));
					_testHcpcsCode.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _testHcpcsCode;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestNotPerformedEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestNotPerformedEntity))]
		public virtual EntityCollection<TestNotPerformedEntity> TestNotPerformed_
		{
			get
			{
				if(_testNotPerformed_==null)
				{
					_testNotPerformed_ = new EntityCollection<TestNotPerformedEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestNotPerformedEntityFactory)));
					_testNotPerformed_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _testNotPerformed_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestNotPerformedEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestNotPerformedEntity))]
		public virtual EntityCollection<TestNotPerformedEntity> TestNotPerformed
		{
			get
			{
				if(_testNotPerformed==null)
				{
					_testNotPerformed = new EntityCollection<TestNotPerformedEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestNotPerformedEntityFactory)));
					_testNotPerformed.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _testNotPerformed;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestNotPerformedReasonEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestNotPerformedReasonEntity))]
		public virtual EntityCollection<TestNotPerformedReasonEntity> TestNotPerformedReason
		{
			get
			{
				if(_testNotPerformedReason==null)
				{
					_testNotPerformedReason = new EntityCollection<TestNotPerformedReasonEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestNotPerformedReasonEntityFactory)));
					_testNotPerformedReason.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _testNotPerformedReason;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestPerformedExternallyEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestPerformedExternallyEntity))]
		public virtual EntityCollection<TestPerformedExternallyEntity> TestPerformedExternally_
		{
			get
			{
				if(_testPerformedExternally_==null)
				{
					_testPerformedExternally_ = new EntityCollection<TestPerformedExternallyEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestPerformedExternallyEntityFactory)));
					_testPerformedExternally_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _testPerformedExternally_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestPerformedExternallyEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestPerformedExternallyEntity))]
		public virtual EntityCollection<TestPerformedExternallyEntity> TestPerformedExternally
		{
			get
			{
				if(_testPerformedExternally==null)
				{
					_testPerformedExternally = new EntityCollection<TestPerformedExternallyEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestPerformedExternallyEntityFactory)));
					_testPerformedExternally.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _testPerformedExternally;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'UncontactedCustomerCallQueueEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(UncontactedCustomerCallQueueEntity))]
		public virtual EntityCollection<UncontactedCustomerCallQueueEntity> UncontactedCustomerCallQueue
		{
			get
			{
				if(_uncontactedCustomerCallQueue==null)
				{
					_uncontactedCustomerCallQueue = new EntityCollection<UncontactedCustomerCallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(UncontactedCustomerCallQueueEntityFactory)));
					_uncontactedCustomerCallQueue.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _uncontactedCustomerCallQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'UploadZipInfoEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(UploadZipInfoEntity))]
		public virtual EntityCollection<UploadZipInfoEntity> UploadZipInfo
		{
			get
			{
				if(_uploadZipInfo==null)
				{
					_uploadZipInfo = new EntityCollection<UploadZipInfoEntity>(EntityFactoryCache2.GetEntityFactory(typeof(UploadZipInfoEntityFactory)));
					_uploadZipInfo.SetContainingEntityInfo(this, "OrganizationRoleUser");
				}
				return _uploadZipInfo;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'UserEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(UserEntity))]
		public virtual EntityCollection<UserEntity> User__
		{
			get
			{
				if(_user__==null)
				{
					_user__ = new EntityCollection<UserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(UserEntityFactory)));
					_user__.SetContainingEntityInfo(this, "OrganizationRoleUser__");
				}
				return _user__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'UserEntity' which are related to this entity via a relation of type '1:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(UserEntity))]
		public virtual EntityCollection<UserEntity> User_
		{
			get
			{
				if(_user_==null)
				{
					_user_ = new EntityCollection<UserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(UserEntityFactory)));
					_user_.SetContainingEntityInfo(this, "OrganizationRoleUser_");
				}
				return _user_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaFillEventCallQueue
		{
			get
			{
				if(_accountCollectionViaFillEventCallQueue==null)
				{
					_accountCollectionViaFillEventCallQueue = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaFillEventCallQueue.IsReadOnly=true;
				}
				return _accountCollectionViaFillEventCallQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaMailRoundCallQueue
		{
			get
			{
				if(_accountCollectionViaMailRoundCallQueue==null)
				{
					_accountCollectionViaMailRoundCallQueue = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaMailRoundCallQueue.IsReadOnly=true;
				}
				return _accountCollectionViaMailRoundCallQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaEligibilityUpload
		{
			get
			{
				if(_accountCollectionViaEligibilityUpload==null)
				{
					_accountCollectionViaEligibilityUpload = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaEligibilityUpload.IsReadOnly=true;
				}
				return _accountCollectionViaEligibilityUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaCorporateUpload
		{
			get
			{
				if(_accountCollectionViaCorporateUpload==null)
				{
					_accountCollectionViaCorporateUpload = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaCorporateUpload.IsReadOnly=true;
				}
				return _accountCollectionViaCorporateUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaHealthPlanCallQueueCriteria
		{
			get
			{
				if(_accountCollectionViaHealthPlanCallQueueCriteria==null)
				{
					_accountCollectionViaHealthPlanCallQueueCriteria = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaHealthPlanCallQueueCriteria.IsReadOnly=true;
				}
				return _accountCollectionViaHealthPlanCallQueueCriteria;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaCallQueueCustomer_
		{
			get
			{
				if(_accountCollectionViaCallQueueCustomer_==null)
				{
					_accountCollectionViaCallQueueCustomer_ = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaCallQueueCustomer_.IsReadOnly=true;
				}
				return _accountCollectionViaCallQueueCustomer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaCallQueueCustomer
		{
			get
			{
				if(_accountCollectionViaCallQueueCustomer==null)
				{
					_accountCollectionViaCallQueueCustomer = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaCallQueueCustomer.IsReadOnly=true;
				}
				return _accountCollectionViaCallQueueCustomer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaCallQueueCustomer__
		{
			get
			{
				if(_accountCollectionViaCallQueueCustomer__==null)
				{
					_accountCollectionViaCallQueueCustomer__ = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaCallQueueCustomer__.IsReadOnly=true;
				}
				return _accountCollectionViaCallQueueCustomer__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaHealthPlanRevenue
		{
			get
			{
				if(_accountCollectionViaHealthPlanRevenue==null)
				{
					_accountCollectionViaHealthPlanRevenue = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaHealthPlanRevenue.IsReadOnly=true;
				}
				return _accountCollectionViaHealthPlanRevenue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaHealthPlanRevenue_
		{
			get
			{
				if(_accountCollectionViaHealthPlanRevenue_==null)
				{
					_accountCollectionViaHealthPlanRevenue_ = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaHealthPlanRevenue_.IsReadOnly=true;
				}
				return _accountCollectionViaHealthPlanRevenue_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaCorporateTag_
		{
			get
			{
				if(_accountCollectionViaCorporateTag_==null)
				{
					_accountCollectionViaCorporateTag_ = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaCorporateTag_.IsReadOnly=true;
				}
				return _accountCollectionViaCorporateTag_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaLanguageBarrierCallQueue
		{
			get
			{
				if(_accountCollectionViaLanguageBarrierCallQueue==null)
				{
					_accountCollectionViaLanguageBarrierCallQueue = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaLanguageBarrierCallQueue.IsReadOnly=true;
				}
				return _accountCollectionViaLanguageBarrierCallQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaEventNote
		{
			get
			{
				if(_accountCollectionViaEventNote==null)
				{
					_accountCollectionViaEventNote = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaEventNote.IsReadOnly=true;
				}
				return _accountCollectionViaEventNote;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaCampaign
		{
			get
			{
				if(_accountCollectionViaCampaign==null)
				{
					_accountCollectionViaCampaign = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaCampaign.IsReadOnly=true;
				}
				return _accountCollectionViaCampaign;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaEventNote_
		{
			get
			{
				if(_accountCollectionViaEventNote_==null)
				{
					_accountCollectionViaEventNote_ = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaEventNote_.IsReadOnly=true;
				}
				return _accountCollectionViaEventNote_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaCampaign_
		{
			get
			{
				if(_accountCollectionViaCampaign_==null)
				{
					_accountCollectionViaCampaign_ = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaCampaign_.IsReadOnly=true;
				}
				return _accountCollectionViaCampaign_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaHealthPlanCallQueueCriteria_
		{
			get
			{
				if(_accountCollectionViaHealthPlanCallQueueCriteria_==null)
				{
					_accountCollectionViaHealthPlanCallQueueCriteria_ = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaHealthPlanCallQueueCriteria_.IsReadOnly=true;
				}
				return _accountCollectionViaHealthPlanCallQueueCriteria_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaCorporateTag
		{
			get
			{
				if(_accountCollectionViaCorporateTag==null)
				{
					_accountCollectionViaCorporateTag = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaCorporateTag.IsReadOnly=true;
				}
				return _accountCollectionViaCorporateTag;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaCallQueueCustomTag
		{
			get
			{
				if(_accountCollectionViaCallQueueCustomTag==null)
				{
					_accountCollectionViaCallQueueCustomTag = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaCallQueueCustomTag.IsReadOnly=true;
				}
				return _accountCollectionViaCallQueueCustomTag;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaCalls
		{
			get
			{
				if(_accountCollectionViaCalls==null)
				{
					_accountCollectionViaCalls = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaCalls.IsReadOnly=true;
				}
				return _accountCollectionViaCalls;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaCallRoundCallQueue
		{
			get
			{
				if(_accountCollectionViaCallRoundCallQueue==null)
				{
					_accountCollectionViaCallRoundCallQueue = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaCallRoundCallQueue.IsReadOnly=true;
				}
				return _accountCollectionViaCallRoundCallQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaAccountHraChatQuestionnaire_
		{
			get
			{
				if(_accountCollectionViaAccountHraChatQuestionnaire_==null)
				{
					_accountCollectionViaAccountHraChatQuestionnaire_ = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaAccountHraChatQuestionnaire_.IsReadOnly=true;
				}
				return _accountCollectionViaAccountHraChatQuestionnaire_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaAccountHraChatQuestionnaire
		{
			get
			{
				if(_accountCollectionViaAccountHraChatQuestionnaire==null)
				{
					_accountCollectionViaAccountHraChatQuestionnaire = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaAccountHraChatQuestionnaire.IsReadOnly=true;
				}
				return _accountCollectionViaAccountHraChatQuestionnaire;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaUncontactedCustomerCallQueue
		{
			get
			{
				if(_accountCollectionViaUncontactedCustomerCallQueue==null)
				{
					_accountCollectionViaUncontactedCustomerCallQueue = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaUncontactedCustomerCallQueue.IsReadOnly=true;
				}
				return _accountCollectionViaUncontactedCustomerCallQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaCustomEventNotification
		{
			get
			{
				if(_accountCollectionViaCustomEventNotification==null)
				{
					_accountCollectionViaCustomEventNotification = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaCustomEventNotification.IsReadOnly=true;
				}
				return _accountCollectionViaCustomEventNotification;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaNoShowCallQueue
		{
			get
			{
				if(_accountCollectionViaNoShowCallQueue==null)
				{
					_accountCollectionViaNoShowCallQueue = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaNoShowCallQueue.IsReadOnly=true;
				}
				return _accountCollectionViaNoShowCallQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaAccountCallCenterOrganization_
		{
			get
			{
				if(_accountCollectionViaAccountCallCenterOrganization_==null)
				{
					_accountCollectionViaAccountCallCenterOrganization_ = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaAccountCallCenterOrganization_.IsReadOnly=true;
				}
				return _accountCollectionViaAccountCallCenterOrganization_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AccountEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AccountEntity))]
		public virtual EntityCollection<AccountEntity> AccountCollectionViaAccountCallCenterOrganization
		{
			get
			{
				if(_accountCollectionViaAccountCallCenterOrganization==null)
				{
					_accountCollectionViaAccountCallCenterOrganization = new EntityCollection<AccountEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AccountEntityFactory)));
					_accountCollectionViaAccountCallCenterOrganization.IsReadOnly=true;
				}
				return _accountCollectionViaAccountCallCenterOrganization;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ActivityEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ActivityEntity))]
		public virtual EntityCollection<ActivityEntity> ActivityCollectionViaOrgRoleUserActivity
		{
			get
			{
				if(_activityCollectionViaOrgRoleUserActivity==null)
				{
					_activityCollectionViaOrgRoleUserActivity = new EntityCollection<ActivityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ActivityEntityFactory)));
					_activityCollectionViaOrgRoleUserActivity.IsReadOnly=true;
				}
				return _activityCollectionViaOrgRoleUserActivity;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ActivityTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ActivityTypeEntity))]
		public virtual EntityCollection<ActivityTypeEntity> ActivityTypeCollectionViaCallQueueCustomer
		{
			get
			{
				if(_activityTypeCollectionViaCallQueueCustomer==null)
				{
					_activityTypeCollectionViaCallQueueCustomer = new EntityCollection<ActivityTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ActivityTypeEntityFactory)));
					_activityTypeCollectionViaCallQueueCustomer.IsReadOnly=true;
				}
				return _activityTypeCollectionViaCallQueueCustomer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ActivityTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ActivityTypeEntity))]
		public virtual EntityCollection<ActivityTypeEntity> ActivityTypeCollectionViaCallQueueCustomer__
		{
			get
			{
				if(_activityTypeCollectionViaCallQueueCustomer__==null)
				{
					_activityTypeCollectionViaCallQueueCustomer__ = new EntityCollection<ActivityTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ActivityTypeEntityFactory)));
					_activityTypeCollectionViaCallQueueCustomer__.IsReadOnly=true;
				}
				return _activityTypeCollectionViaCallQueueCustomer__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ActivityTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ActivityTypeEntity))]
		public virtual EntityCollection<ActivityTypeEntity> ActivityTypeCollectionViaCallQueueCustomer_
		{
			get
			{
				if(_activityTypeCollectionViaCallQueueCustomer_==null)
				{
					_activityTypeCollectionViaCallQueueCustomer_ = new EntityCollection<ActivityTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ActivityTypeEntityFactory)));
					_activityTypeCollectionViaCallQueueCustomer_.IsReadOnly=true;
				}
				return _activityTypeCollectionViaCallQueueCustomer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AddressEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AddressEntity))]
		public virtual EntityCollection<AddressEntity> AddressCollectionViaCustomerPrimaryCarePhysician_
		{
			get
			{
				if(_addressCollectionViaCustomerPrimaryCarePhysician_==null)
				{
					_addressCollectionViaCustomerPrimaryCarePhysician_ = new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory)));
					_addressCollectionViaCustomerPrimaryCarePhysician_.IsReadOnly=true;
				}
				return _addressCollectionViaCustomerPrimaryCarePhysician_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AddressEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AddressEntity))]
		public virtual EntityCollection<AddressEntity> AddressCollectionViaProspects
		{
			get
			{
				if(_addressCollectionViaProspects==null)
				{
					_addressCollectionViaProspects = new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory)));
					_addressCollectionViaProspects.IsReadOnly=true;
				}
				return _addressCollectionViaProspects;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AddressEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AddressEntity))]
		public virtual EntityCollection<AddressEntity> AddressCollectionViaCustomerPrimaryCarePhysician___
		{
			get
			{
				if(_addressCollectionViaCustomerPrimaryCarePhysician___==null)
				{
					_addressCollectionViaCustomerPrimaryCarePhysician___ = new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory)));
					_addressCollectionViaCustomerPrimaryCarePhysician___.IsReadOnly=true;
				}
				return _addressCollectionViaCustomerPrimaryCarePhysician___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AddressEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AddressEntity))]
		public virtual EntityCollection<AddressEntity> AddressCollectionViaCustomerPrimaryCarePhysician____
		{
			get
			{
				if(_addressCollectionViaCustomerPrimaryCarePhysician____==null)
				{
					_addressCollectionViaCustomerPrimaryCarePhysician____ = new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory)));
					_addressCollectionViaCustomerPrimaryCarePhysician____.IsReadOnly=true;
				}
				return _addressCollectionViaCustomerPrimaryCarePhysician____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AddressEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AddressEntity))]
		public virtual EntityCollection<AddressEntity> AddressCollectionViaUser
		{
			get
			{
				if(_addressCollectionViaUser==null)
				{
					_addressCollectionViaUser = new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory)));
					_addressCollectionViaUser.IsReadOnly=true;
				}
				return _addressCollectionViaUser;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AddressEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AddressEntity))]
		public virtual EntityCollection<AddressEntity> AddressCollectionViaUser_
		{
			get
			{
				if(_addressCollectionViaUser_==null)
				{
					_addressCollectionViaUser_ = new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory)));
					_addressCollectionViaUser_.IsReadOnly=true;
				}
				return _addressCollectionViaUser_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AddressEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AddressEntity))]
		public virtual EntityCollection<AddressEntity> AddressCollectionViaShippingDetail
		{
			get
			{
				if(_addressCollectionViaShippingDetail==null)
				{
					_addressCollectionViaShippingDetail = new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory)));
					_addressCollectionViaShippingDetail.IsReadOnly=true;
				}
				return _addressCollectionViaShippingDetail;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AddressEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AddressEntity))]
		public virtual EntityCollection<AddressEntity> AddressCollectionViaHostPayment
		{
			get
			{
				if(_addressCollectionViaHostPayment==null)
				{
					_addressCollectionViaHostPayment = new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory)));
					_addressCollectionViaHostPayment.IsReadOnly=true;
				}
				return _addressCollectionViaHostPayment;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AddressEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AddressEntity))]
		public virtual EntityCollection<AddressEntity> AddressCollectionViaShippingDetail_
		{
			get
			{
				if(_addressCollectionViaShippingDetail_==null)
				{
					_addressCollectionViaShippingDetail_ = new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory)));
					_addressCollectionViaShippingDetail_.IsReadOnly=true;
				}
				return _addressCollectionViaShippingDetail_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AddressEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AddressEntity))]
		public virtual EntityCollection<AddressEntity> AddressCollectionViaCustomerPrimaryCarePhysician
		{
			get
			{
				if(_addressCollectionViaCustomerPrimaryCarePhysician==null)
				{
					_addressCollectionViaCustomerPrimaryCarePhysician = new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory)));
					_addressCollectionViaCustomerPrimaryCarePhysician.IsReadOnly=true;
				}
				return _addressCollectionViaCustomerPrimaryCarePhysician;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AddressEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AddressEntity))]
		public virtual EntityCollection<AddressEntity> AddressCollectionViaCustomerPrimaryCarePhysician__
		{
			get
			{
				if(_addressCollectionViaCustomerPrimaryCarePhysician__==null)
				{
					_addressCollectionViaCustomerPrimaryCarePhysician__ = new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory)));
					_addressCollectionViaCustomerPrimaryCarePhysician__.IsReadOnly=true;
				}
				return _addressCollectionViaCustomerPrimaryCarePhysician__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AddressEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AddressEntity))]
		public virtual EntityCollection<AddressEntity> AddressCollectionViaCustomerPrimaryCarePhysician_____
		{
			get
			{
				if(_addressCollectionViaCustomerPrimaryCarePhysician_____==null)
				{
					_addressCollectionViaCustomerPrimaryCarePhysician_____ = new EntityCollection<AddressEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AddressEntityFactory)));
					_addressCollectionViaCustomerPrimaryCarePhysician_____.IsReadOnly=true;
				}
				return _addressCollectionViaCustomerPrimaryCarePhysician_____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AfadvertiserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AfadvertiserEntity))]
		public virtual EntityCollection<AfadvertiserEntity> AfadvertiserCollectionViaAfcampaign
		{
			get
			{
				if(_afadvertiserCollectionViaAfcampaign==null)
				{
					_afadvertiserCollectionViaAfcampaign = new EntityCollection<AfadvertiserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AfadvertiserEntityFactory)));
					_afadvertiserCollectionViaAfcampaign.IsReadOnly=true;
				}
				return _afadvertiserCollectionViaAfcampaign;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AfadvertiserEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AfadvertiserEntity))]
		public virtual EntityCollection<AfadvertiserEntity> AfadvertiserCollectionViaAfcampaign_
		{
			get
			{
				if(_afadvertiserCollectionViaAfcampaign_==null)
				{
					_afadvertiserCollectionViaAfcampaign_ = new EntityCollection<AfadvertiserEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AfadvertiserEntityFactory)));
					_afadvertiserCollectionViaAfcampaign_.IsReadOnly=true;
				}
				return _afadvertiserCollectionViaAfcampaign_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AfaffiliateCampaignEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AfaffiliateCampaignEntity))]
		public virtual EntityCollection<AfaffiliateCampaignEntity> AfaffiliateCampaignCollectionViaEventCustomers
		{
			get
			{
				if(_afaffiliateCampaignCollectionViaEventCustomers==null)
				{
					_afaffiliateCampaignCollectionViaEventCustomers = new EntityCollection<AfaffiliateCampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AfaffiliateCampaignEntityFactory)));
					_afaffiliateCampaignCollectionViaEventCustomers.IsReadOnly=true;
				}
				return _afaffiliateCampaignCollectionViaEventCustomers;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AfaffiliateCampaignEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AfaffiliateCampaignEntity))]
		public virtual EntityCollection<AfaffiliateCampaignEntity> AfaffiliateCampaignCollectionViaEventCustomers_
		{
			get
			{
				if(_afaffiliateCampaignCollectionViaEventCustomers_==null)
				{
					_afaffiliateCampaignCollectionViaEventCustomers_ = new EntityCollection<AfaffiliateCampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AfaffiliateCampaignEntityFactory)));
					_afaffiliateCampaignCollectionViaEventCustomers_.IsReadOnly=true;
				}
				return _afaffiliateCampaignCollectionViaEventCustomers_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'AfaffiliateCampaignMarketingMaterialEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(AfaffiliateCampaignMarketingMaterialEntity))]
		public virtual EntityCollection<AfaffiliateCampaignMarketingMaterialEntity> AfaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer
		{
			get
			{
				if(_afaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer==null)
				{
					_afaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer = new EntityCollection<AfaffiliateCampaignMarketingMaterialEntity>(EntityFactoryCache2.GetEntityFactory(typeof(AfaffiliateCampaignMarketingMaterialEntityFactory)));
					_afaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer.IsReadOnly=true;
				}
				return _afaffiliateCampaignMarketingMaterialCollectionViaProspectCustomer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallCenterTeamEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallCenterTeamEntity))]
		public virtual EntityCollection<CallCenterTeamEntity> CallCenterTeamCollectionViaCallCenterAgentTeam
		{
			get
			{
				if(_callCenterTeamCollectionViaCallCenterAgentTeam==null)
				{
					_callCenterTeamCollectionViaCallCenterAgentTeam = new EntityCollection<CallCenterTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterTeamEntityFactory)));
					_callCenterTeamCollectionViaCallCenterAgentTeam.IsReadOnly=true;
				}
				return _callCenterTeamCollectionViaCallCenterAgentTeam;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallCenterTeamEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallCenterTeamEntity))]
		public virtual EntityCollection<CallCenterTeamEntity> CallCenterTeamCollectionViaCallCenterAgentTeamLog
		{
			get
			{
				if(_callCenterTeamCollectionViaCallCenterAgentTeamLog==null)
				{
					_callCenterTeamCollectionViaCallCenterAgentTeamLog = new EntityCollection<CallCenterTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterTeamEntityFactory)));
					_callCenterTeamCollectionViaCallCenterAgentTeamLog.IsReadOnly=true;
				}
				return _callCenterTeamCollectionViaCallCenterAgentTeamLog;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallCenterTeamEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallCenterTeamEntity))]
		public virtual EntityCollection<CallCenterTeamEntity> CallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_
		{
			get
			{
				if(_callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_==null)
				{
					_callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_ = new EntityCollection<CallCenterTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterTeamEntityFactory)));
					_callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_.IsReadOnly=true;
				}
				return _callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallCenterTeamEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallCenterTeamEntity))]
		public virtual EntityCollection<CallCenterTeamEntity> CallCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment
		{
			get
			{
				if(_callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment==null)
				{
					_callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment = new EntityCollection<CallCenterTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterTeamEntityFactory)));
					_callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment.IsReadOnly=true;
				}
				return _callCenterTeamCollectionViaHealthPlanCriteriaTeamAssignment;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallCenterTeamEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallCenterTeamEntity))]
		public virtual EntityCollection<CallCenterTeamEntity> CallCenterTeamCollectionViaCallCenterAgentTeamLog_
		{
			get
			{
				if(_callCenterTeamCollectionViaCallCenterAgentTeamLog_==null)
				{
					_callCenterTeamCollectionViaCallCenterAgentTeamLog_ = new EntityCollection<CallCenterTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterTeamEntityFactory)));
					_callCenterTeamCollectionViaCallCenterAgentTeamLog_.IsReadOnly=true;
				}
				return _callCenterTeamCollectionViaCallCenterAgentTeamLog_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallCenterTeamEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallCenterTeamEntity))]
		public virtual EntityCollection<CallCenterTeamEntity> CallCenterTeamCollectionViaCallCenterAgentTeamLog__
		{
			get
			{
				if(_callCenterTeamCollectionViaCallCenterAgentTeamLog__==null)
				{
					_callCenterTeamCollectionViaCallCenterAgentTeamLog__ = new EntityCollection<CallCenterTeamEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallCenterTeamEntityFactory)));
					_callCenterTeamCollectionViaCallCenterAgentTeamLog__.IsReadOnly=true;
				}
				return _callCenterTeamCollectionViaCallCenterAgentTeamLog__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallQueueEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallQueueEntity))]
		public virtual EntityCollection<CallQueueEntity> CallQueueCollectionViaCallQueueCustomer_
		{
			get
			{
				if(_callQueueCollectionViaCallQueueCustomer_==null)
				{
					_callQueueCollectionViaCallQueueCustomer_ = new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory)));
					_callQueueCollectionViaCallQueueCustomer_.IsReadOnly=true;
				}
				return _callQueueCollectionViaCallQueueCustomer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallQueueEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallQueueEntity))]
		public virtual EntityCollection<CallQueueEntity> CallQueueCollectionViaHealthPlanCallQueueCriteria__
		{
			get
			{
				if(_callQueueCollectionViaHealthPlanCallQueueCriteria__==null)
				{
					_callQueueCollectionViaHealthPlanCallQueueCriteria__ = new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory)));
					_callQueueCollectionViaHealthPlanCallQueueCriteria__.IsReadOnly=true;
				}
				return _callQueueCollectionViaHealthPlanCallQueueCriteria__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallQueueEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallQueueEntity))]
		public virtual EntityCollection<CallQueueEntity> CallQueueCollectionViaCallQueueCustomer
		{
			get
			{
				if(_callQueueCollectionViaCallQueueCustomer==null)
				{
					_callQueueCollectionViaCallQueueCustomer = new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory)));
					_callQueueCollectionViaCallQueueCustomer.IsReadOnly=true;
				}
				return _callQueueCollectionViaCallQueueCustomer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallQueueEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallQueueEntity))]
		public virtual EntityCollection<CallQueueEntity> CallQueueCollectionViaCalls
		{
			get
			{
				if(_callQueueCollectionViaCalls==null)
				{
					_callQueueCollectionViaCalls = new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory)));
					_callQueueCollectionViaCalls.IsReadOnly=true;
				}
				return _callQueueCollectionViaCalls;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallQueueEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallQueueEntity))]
		public virtual EntityCollection<CallQueueEntity> CallQueueCollectionViaCallQueueAssignment
		{
			get
			{
				if(_callQueueCollectionViaCallQueueAssignment==null)
				{
					_callQueueCollectionViaCallQueueAssignment = new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory)));
					_callQueueCollectionViaCallQueueAssignment.IsReadOnly=true;
				}
				return _callQueueCollectionViaCallQueueAssignment;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallQueueEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallQueueEntity))]
		public virtual EntityCollection<CallQueueEntity> CallQueueCollectionViaSystemGenertedCallQueueCriteria__
		{
			get
			{
				if(_callQueueCollectionViaSystemGenertedCallQueueCriteria__==null)
				{
					_callQueueCollectionViaSystemGenertedCallQueueCriteria__ = new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory)));
					_callQueueCollectionViaSystemGenertedCallQueueCriteria__.IsReadOnly=true;
				}
				return _callQueueCollectionViaSystemGenertedCallQueueCriteria__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallQueueEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallQueueEntity))]
		public virtual EntityCollection<CallQueueEntity> CallQueueCollectionViaSystemGenertedCallQueueCriteria_
		{
			get
			{
				if(_callQueueCollectionViaSystemGenertedCallQueueCriteria_==null)
				{
					_callQueueCollectionViaSystemGenertedCallQueueCriteria_ = new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory)));
					_callQueueCollectionViaSystemGenertedCallQueueCriteria_.IsReadOnly=true;
				}
				return _callQueueCollectionViaSystemGenertedCallQueueCriteria_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallQueueEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallQueueEntity))]
		public virtual EntityCollection<CallQueueEntity> CallQueueCollectionViaCallQueueCustomer__
		{
			get
			{
				if(_callQueueCollectionViaCallQueueCustomer__==null)
				{
					_callQueueCollectionViaCallQueueCustomer__ = new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory)));
					_callQueueCollectionViaCallQueueCustomer__.IsReadOnly=true;
				}
				return _callQueueCollectionViaCallQueueCustomer__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallQueueEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallQueueEntity))]
		public virtual EntityCollection<CallQueueEntity> CallQueueCollectionViaHealthPlanCallQueueCriteria_
		{
			get
			{
				if(_callQueueCollectionViaHealthPlanCallQueueCriteria_==null)
				{
					_callQueueCollectionViaHealthPlanCallQueueCriteria_ = new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory)));
					_callQueueCollectionViaHealthPlanCallQueueCriteria_.IsReadOnly=true;
				}
				return _callQueueCollectionViaHealthPlanCallQueueCriteria_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallQueueEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallQueueEntity))]
		public virtual EntityCollection<CallQueueEntity> CallQueueCollectionViaSystemGenertedCallQueueCriteria
		{
			get
			{
				if(_callQueueCollectionViaSystemGenertedCallQueueCriteria==null)
				{
					_callQueueCollectionViaSystemGenertedCallQueueCriteria = new EntityCollection<CallQueueEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueEntityFactory)));
					_callQueueCollectionViaSystemGenertedCallQueueCriteria.IsReadOnly=true;
				}
				return _callQueueCollectionViaSystemGenertedCallQueueCriteria;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallQueueCriteriaEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallQueueCriteriaEntity))]
		public virtual EntityCollection<CallQueueCriteriaEntity> CallQueueCriteriaCollectionViaCallQueueCustomer
		{
			get
			{
				if(_callQueueCriteriaCollectionViaCallQueueCustomer==null)
				{
					_callQueueCriteriaCollectionViaCallQueueCustomer = new EntityCollection<CallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueCriteriaEntityFactory)));
					_callQueueCriteriaCollectionViaCallQueueCustomer.IsReadOnly=true;
				}
				return _callQueueCriteriaCollectionViaCallQueueCustomer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallQueueCriteriaEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallQueueCriteriaEntity))]
		public virtual EntityCollection<CallQueueCriteriaEntity> CallQueueCriteriaCollectionViaCallQueueCustomer__
		{
			get
			{
				if(_callQueueCriteriaCollectionViaCallQueueCustomer__==null)
				{
					_callQueueCriteriaCollectionViaCallQueueCustomer__ = new EntityCollection<CallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueCriteriaEntityFactory)));
					_callQueueCriteriaCollectionViaCallQueueCustomer__.IsReadOnly=true;
				}
				return _callQueueCriteriaCollectionViaCallQueueCustomer__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallQueueCriteriaEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallQueueCriteriaEntity))]
		public virtual EntityCollection<CallQueueCriteriaEntity> CallQueueCriteriaCollectionViaCallQueueCustomer_
		{
			get
			{
				if(_callQueueCriteriaCollectionViaCallQueueCustomer_==null)
				{
					_callQueueCriteriaCollectionViaCallQueueCustomer_ = new EntityCollection<CallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueCriteriaEntityFactory)));
					_callQueueCriteriaCollectionViaCallQueueCustomer_.IsReadOnly=true;
				}
				return _callQueueCriteriaCollectionViaCallQueueCustomer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallQueueCustomerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallQueueCustomerEntity))]
		public virtual EntityCollection<CallQueueCustomerEntity> CallQueueCustomerCollectionViaCustomerCallQueueCallAttempt
		{
			get
			{
				if(_callQueueCustomerCollectionViaCustomerCallQueueCallAttempt==null)
				{
					_callQueueCustomerCollectionViaCustomerCallQueueCallAttempt = new EntityCollection<CallQueueCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallQueueCustomerEntityFactory)));
					_callQueueCustomerCollectionViaCustomerCallQueueCallAttempt.IsReadOnly=true;
				}
				return _callQueueCustomerCollectionViaCustomerCallQueueCallAttempt;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallsEntity))]
		public virtual EntityCollection<CallsEntity> CallsCollectionViaCustomerCallQueueCallAttempt
		{
			get
			{
				if(_callsCollectionViaCustomerCallQueueCallAttempt==null)
				{
					_callsCollectionViaCustomerCallQueueCallAttempt = new EntityCollection<CallsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallsEntityFactory)));
					_callsCollectionViaCustomerCallQueueCallAttempt.IsReadOnly=true;
				}
				return _callsCollectionViaCustomerCallQueueCallAttempt;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallsEntity))]
		public virtual EntityCollection<CallsEntity> CallsCollectionViaPreAssessmentCustomerCallQueueCallAttempt
		{
			get
			{
				if(_callsCollectionViaPreAssessmentCustomerCallQueueCallAttempt==null)
				{
					_callsCollectionViaPreAssessmentCustomerCallQueueCallAttempt = new EntityCollection<CallsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallsEntityFactory)));
					_callsCollectionViaPreAssessmentCustomerCallQueueCallAttempt.IsReadOnly=true;
				}
				return _callsCollectionViaPreAssessmentCustomerCallQueueCallAttempt;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CallUploadEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CallUploadEntity))]
		public virtual EntityCollection<CallUploadEntity> CallUploadCollectionViaDirectMail
		{
			get
			{
				if(_callUploadCollectionViaDirectMail==null)
				{
					_callUploadCollectionViaDirectMail = new EntityCollection<CallUploadEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CallUploadEntityFactory)));
					_callUploadCollectionViaDirectMail.IsReadOnly=true;
				}
				return _callUploadCollectionViaDirectMail;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CampaignEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CampaignEntity))]
		public virtual EntityCollection<CampaignEntity> CampaignCollectionViaCallQueueCustomer__
		{
			get
			{
				if(_campaignCollectionViaCallQueueCustomer__==null)
				{
					_campaignCollectionViaCallQueueCustomer__ = new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory)));
					_campaignCollectionViaCallQueueCustomer__.IsReadOnly=true;
				}
				return _campaignCollectionViaCallQueueCustomer__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CampaignEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CampaignEntity))]
		public virtual EntityCollection<CampaignEntity> CampaignCollectionViaCampaignAssignment
		{
			get
			{
				if(_campaignCollectionViaCampaignAssignment==null)
				{
					_campaignCollectionViaCampaignAssignment = new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory)));
					_campaignCollectionViaCampaignAssignment.IsReadOnly=true;
				}
				return _campaignCollectionViaCampaignAssignment;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CampaignEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CampaignEntity))]
		public virtual EntityCollection<CampaignEntity> CampaignCollectionViaCallQueueCustomer
		{
			get
			{
				if(_campaignCollectionViaCallQueueCustomer==null)
				{
					_campaignCollectionViaCallQueueCustomer = new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory)));
					_campaignCollectionViaCallQueueCustomer.IsReadOnly=true;
				}
				return _campaignCollectionViaCallQueueCustomer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CampaignEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CampaignEntity))]
		public virtual EntityCollection<CampaignEntity> CampaignCollectionViaCampaignActivity_
		{
			get
			{
				if(_campaignCollectionViaCampaignActivity_==null)
				{
					_campaignCollectionViaCampaignActivity_ = new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory)));
					_campaignCollectionViaCampaignActivity_.IsReadOnly=true;
				}
				return _campaignCollectionViaCampaignActivity_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CampaignEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CampaignEntity))]
		public virtual EntityCollection<CampaignEntity> CampaignCollectionViaHealthPlanCallQueueCriteria_
		{
			get
			{
				if(_campaignCollectionViaHealthPlanCallQueueCriteria_==null)
				{
					_campaignCollectionViaHealthPlanCallQueueCriteria_ = new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory)));
					_campaignCollectionViaHealthPlanCallQueueCriteria_.IsReadOnly=true;
				}
				return _campaignCollectionViaHealthPlanCallQueueCriteria_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CampaignEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CampaignEntity))]
		public virtual EntityCollection<CampaignEntity> CampaignCollectionViaCampaignActivity
		{
			get
			{
				if(_campaignCollectionViaCampaignActivity==null)
				{
					_campaignCollectionViaCampaignActivity = new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory)));
					_campaignCollectionViaCampaignActivity.IsReadOnly=true;
				}
				return _campaignCollectionViaCampaignActivity;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CampaignEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CampaignEntity))]
		public virtual EntityCollection<CampaignEntity> CampaignCollectionViaCalls
		{
			get
			{
				if(_campaignCollectionViaCalls==null)
				{
					_campaignCollectionViaCalls = new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory)));
					_campaignCollectionViaCalls.IsReadOnly=true;
				}
				return _campaignCollectionViaCalls;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CampaignEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CampaignEntity))]
		public virtual EntityCollection<CampaignEntity> CampaignCollectionViaEventCustomers_
		{
			get
			{
				if(_campaignCollectionViaEventCustomers_==null)
				{
					_campaignCollectionViaEventCustomers_ = new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory)));
					_campaignCollectionViaEventCustomers_.IsReadOnly=true;
				}
				return _campaignCollectionViaEventCustomers_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CampaignEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CampaignEntity))]
		public virtual EntityCollection<CampaignEntity> CampaignCollectionViaHealthPlanCallQueueCriteria
		{
			get
			{
				if(_campaignCollectionViaHealthPlanCallQueueCriteria==null)
				{
					_campaignCollectionViaHealthPlanCallQueueCriteria = new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory)));
					_campaignCollectionViaHealthPlanCallQueueCriteria.IsReadOnly=true;
				}
				return _campaignCollectionViaHealthPlanCallQueueCriteria;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CampaignEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CampaignEntity))]
		public virtual EntityCollection<CampaignEntity> CampaignCollectionViaDirectMail
		{
			get
			{
				if(_campaignCollectionViaDirectMail==null)
				{
					_campaignCollectionViaDirectMail = new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory)));
					_campaignCollectionViaDirectMail.IsReadOnly=true;
				}
				return _campaignCollectionViaDirectMail;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CampaignEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CampaignEntity))]
		public virtual EntityCollection<CampaignEntity> CampaignCollectionViaCallQueueCustomer_
		{
			get
			{
				if(_campaignCollectionViaCallQueueCustomer_==null)
				{
					_campaignCollectionViaCallQueueCustomer_ = new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory)));
					_campaignCollectionViaCallQueueCustomer_.IsReadOnly=true;
				}
				return _campaignCollectionViaCallQueueCustomer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CampaignEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CampaignEntity))]
		public virtual EntityCollection<CampaignEntity> CampaignCollectionViaEventCustomers
		{
			get
			{
				if(_campaignCollectionViaEventCustomers==null)
				{
					_campaignCollectionViaEventCustomers = new EntityCollection<CampaignEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignEntityFactory)));
					_campaignCollectionViaEventCustomers.IsReadOnly=true;
				}
				return _campaignCollectionViaEventCustomers;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CampaignActivityEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CampaignActivityEntity))]
		public virtual EntityCollection<CampaignActivityEntity> CampaignActivityCollectionViaCampaignActivityAssignment
		{
			get
			{
				if(_campaignActivityCollectionViaCampaignActivityAssignment==null)
				{
					_campaignActivityCollectionViaCampaignActivityAssignment = new EntityCollection<CampaignActivityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CampaignActivityEntityFactory)));
					_campaignActivityCollectionViaCampaignActivityAssignment.IsReadOnly=true;
				}
				return _campaignActivityCollectionViaCampaignActivityAssignment;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ChaperoneQuestionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ChaperoneQuestionEntity))]
		public virtual EntityCollection<ChaperoneQuestionEntity> ChaperoneQuestionCollectionViaChaperoneAnswer
		{
			get
			{
				if(_chaperoneQuestionCollectionViaChaperoneAnswer==null)
				{
					_chaperoneQuestionCollectionViaChaperoneAnswer = new EntityCollection<ChaperoneQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ChaperoneQuestionEntityFactory)));
					_chaperoneQuestionCollectionViaChaperoneAnswer.IsReadOnly=true;
				}
				return _chaperoneQuestionCollectionViaChaperoneAnswer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ChaperoneQuestionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ChaperoneQuestionEntity))]
		public virtual EntityCollection<ChaperoneQuestionEntity> ChaperoneQuestionCollectionViaChaperoneAnswer_
		{
			get
			{
				if(_chaperoneQuestionCollectionViaChaperoneAnswer_==null)
				{
					_chaperoneQuestionCollectionViaChaperoneAnswer_ = new EntityCollection<ChaperoneQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ChaperoneQuestionEntityFactory)));
					_chaperoneQuestionCollectionViaChaperoneAnswer_.IsReadOnly=true;
				}
				return _chaperoneQuestionCollectionViaChaperoneAnswer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CheckListQuestionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CheckListQuestionEntity))]
		public virtual EntityCollection<CheckListQuestionEntity> CheckListQuestionCollectionViaCheckListAnswer_
		{
			get
			{
				if(_checkListQuestionCollectionViaCheckListAnswer_==null)
				{
					_checkListQuestionCollectionViaCheckListAnswer_ = new EntityCollection<CheckListQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListQuestionEntityFactory)));
					_checkListQuestionCollectionViaCheckListAnswer_.IsReadOnly=true;
				}
				return _checkListQuestionCollectionViaCheckListAnswer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CheckListQuestionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CheckListQuestionEntity))]
		public virtual EntityCollection<CheckListQuestionEntity> CheckListQuestionCollectionViaCheckListAnswer
		{
			get
			{
				if(_checkListQuestionCollectionViaCheckListAnswer==null)
				{
					_checkListQuestionCollectionViaCheckListAnswer = new EntityCollection<CheckListQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListQuestionEntityFactory)));
					_checkListQuestionCollectionViaCheckListAnswer.IsReadOnly=true;
				}
				return _checkListQuestionCollectionViaCheckListAnswer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CheckListQuestionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CheckListQuestionEntity))]
		public virtual EntityCollection<CheckListQuestionEntity> CheckListQuestionCollectionViaExitInterviewSignature
		{
			get
			{
				if(_checkListQuestionCollectionViaExitInterviewSignature==null)
				{
					_checkListQuestionCollectionViaExitInterviewSignature = new EntityCollection<CheckListQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CheckListQuestionEntityFactory)));
					_checkListQuestionCollectionViaExitInterviewSignature.IsReadOnly=true;
				}
				return _checkListQuestionCollectionViaExitInterviewSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CityEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CityEntity))]
		public virtual EntityCollection<CityEntity> CityCollectionViaAddress
		{
			get
			{
				if(_cityCollectionViaAddress==null)
				{
					_cityCollectionViaAddress = new EntityCollection<CityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CityEntityFactory)));
					_cityCollectionViaAddress.IsReadOnly=true;
				}
				return _cityCollectionViaAddress;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CommunicationModeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CommunicationModeEntity))]
		public virtual EntityCollection<CommunicationModeEntity> CommunicationModeCollectionViaEvents____
		{
			get
			{
				if(_communicationModeCollectionViaEvents____==null)
				{
					_communicationModeCollectionViaEvents____ = new EntityCollection<CommunicationModeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CommunicationModeEntityFactory)));
					_communicationModeCollectionViaEvents____.IsReadOnly=true;
				}
				return _communicationModeCollectionViaEvents____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CommunicationModeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CommunicationModeEntity))]
		public virtual EntityCollection<CommunicationModeEntity> CommunicationModeCollectionViaEvents
		{
			get
			{
				if(_communicationModeCollectionViaEvents==null)
				{
					_communicationModeCollectionViaEvents = new EntityCollection<CommunicationModeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CommunicationModeEntityFactory)));
					_communicationModeCollectionViaEvents.IsReadOnly=true;
				}
				return _communicationModeCollectionViaEvents;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CommunicationModeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CommunicationModeEntity))]
		public virtual EntityCollection<CommunicationModeEntity> CommunicationModeCollectionViaEvents___
		{
			get
			{
				if(_communicationModeCollectionViaEvents___==null)
				{
					_communicationModeCollectionViaEvents___ = new EntityCollection<CommunicationModeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CommunicationModeEntityFactory)));
					_communicationModeCollectionViaEvents___.IsReadOnly=true;
				}
				return _communicationModeCollectionViaEvents___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CommunicationModeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CommunicationModeEntity))]
		public virtual EntityCollection<CommunicationModeEntity> CommunicationModeCollectionViaEvents__
		{
			get
			{
				if(_communicationModeCollectionViaEvents__==null)
				{
					_communicationModeCollectionViaEvents__ = new EntityCollection<CommunicationModeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CommunicationModeEntityFactory)));
					_communicationModeCollectionViaEvents__.IsReadOnly=true;
				}
				return _communicationModeCollectionViaEvents__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CommunicationModeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CommunicationModeEntity))]
		public virtual EntityCollection<CommunicationModeEntity> CommunicationModeCollectionViaEvents_
		{
			get
			{
				if(_communicationModeCollectionViaEvents_==null)
				{
					_communicationModeCollectionViaEvents_ = new EntityCollection<CommunicationModeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CommunicationModeEntityFactory)));
					_communicationModeCollectionViaEvents_.IsReadOnly=true;
				}
				return _communicationModeCollectionViaEvents_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ContactCallStatusEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ContactCallStatusEntity))]
		public virtual EntityCollection<ContactCallStatusEntity> ContactCallStatusCollectionViaContactCall
		{
			get
			{
				if(_contactCallStatusCollectionViaContactCall==null)
				{
					_contactCallStatusCollectionViaContactCall = new EntityCollection<ContactCallStatusEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContactCallStatusEntityFactory)));
					_contactCallStatusCollectionViaContactCall.IsReadOnly=true;
				}
				return _contactCallStatusCollectionViaContactCall;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ContactCallStatusEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ContactCallStatusEntity))]
		public virtual EntityCollection<ContactCallStatusEntity> ContactCallStatusCollectionViaContactCall_
		{
			get
			{
				if(_contactCallStatusCollectionViaContactCall_==null)
				{
					_contactCallStatusCollectionViaContactCall_ = new EntityCollection<ContactCallStatusEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContactCallStatusEntityFactory)));
					_contactCallStatusCollectionViaContactCall_.IsReadOnly=true;
				}
				return _contactCallStatusCollectionViaContactCall_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ContactCallStatusEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ContactCallStatusEntity))]
		public virtual EntityCollection<ContactCallStatusEntity> ContactCallStatusCollectionViaContactMeeting_
		{
			get
			{
				if(_contactCallStatusCollectionViaContactMeeting_==null)
				{
					_contactCallStatusCollectionViaContactMeeting_ = new EntityCollection<ContactCallStatusEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContactCallStatusEntityFactory)));
					_contactCallStatusCollectionViaContactMeeting_.IsReadOnly=true;
				}
				return _contactCallStatusCollectionViaContactMeeting_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ContactCallStatusEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ContactCallStatusEntity))]
		public virtual EntityCollection<ContactCallStatusEntity> ContactCallStatusCollectionViaContactMeeting
		{
			get
			{
				if(_contactCallStatusCollectionViaContactMeeting==null)
				{
					_contactCallStatusCollectionViaContactMeeting = new EntityCollection<ContactCallStatusEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ContactCallStatusEntityFactory)));
					_contactCallStatusCollectionViaContactMeeting.IsReadOnly=true;
				}
				return _contactCallStatusCollectionViaContactMeeting;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CountryEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CountryEntity))]
		public virtual EntityCollection<CountryEntity> CountryCollectionViaAddress
		{
			get
			{
				if(_countryCollectionViaAddress==null)
				{
					_countryCollectionViaAddress = new EntityCollection<CountryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CountryEntityFactory)));
					_countryCollectionViaAddress.IsReadOnly=true;
				}
				return _countryCollectionViaAddress;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CouponTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CouponTypeEntity))]
		public virtual EntityCollection<CouponTypeEntity> CouponTypeCollectionViaCoupons_
		{
			get
			{
				if(_couponTypeCollectionViaCoupons_==null)
				{
					_couponTypeCollectionViaCoupons_ = new EntityCollection<CouponTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CouponTypeEntityFactory)));
					_couponTypeCollectionViaCoupons_.IsReadOnly=true;
				}
				return _couponTypeCollectionViaCoupons_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CouponTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CouponTypeEntity))]
		public virtual EntityCollection<CouponTypeEntity> CouponTypeCollectionViaCoupons
		{
			get
			{
				if(_couponTypeCollectionViaCoupons==null)
				{
					_couponTypeCollectionViaCoupons = new EntityCollection<CouponTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CouponTypeEntityFactory)));
					_couponTypeCollectionViaCoupons.IsReadOnly=true;
				}
				return _couponTypeCollectionViaCoupons;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerEventScreeningTestsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerEventScreeningTestsEntity))]
		public virtual EntityCollection<CustomerEventScreeningTestsEntity> CustomerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation
		{
			get
			{
				if(_customerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation==null)
				{
					_customerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation = new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory)));
					_customerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation.IsReadOnly=true;
				}
				return _customerEventScreeningTestsCollectionViaCustomerEventTestPhysicianEvaluation;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerEventScreeningTestsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerEventScreeningTestsEntity))]
		public virtual EntityCollection<CustomerEventScreeningTestsEntity> CustomerEventScreeningTestsCollectionViaTestPerformedExternally_
		{
			get
			{
				if(_customerEventScreeningTestsCollectionViaTestPerformedExternally_==null)
				{
					_customerEventScreeningTestsCollectionViaTestPerformedExternally_ = new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory)));
					_customerEventScreeningTestsCollectionViaTestPerformedExternally_.IsReadOnly=true;
				}
				return _customerEventScreeningTestsCollectionViaTestPerformedExternally_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerEventScreeningTestsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerEventScreeningTestsEntity))]
		public virtual EntityCollection<CustomerEventScreeningTestsEntity> CustomerEventScreeningTestsCollectionViaCustomerEventTestState
		{
			get
			{
				if(_customerEventScreeningTestsCollectionViaCustomerEventTestState==null)
				{
					_customerEventScreeningTestsCollectionViaCustomerEventTestState = new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory)));
					_customerEventScreeningTestsCollectionViaCustomerEventTestState.IsReadOnly=true;
				}
				return _customerEventScreeningTestsCollectionViaCustomerEventTestState;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerEventScreeningTestsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerEventScreeningTestsEntity))]
		public virtual EntityCollection<CustomerEventScreeningTestsEntity> CustomerEventScreeningTestsCollectionViaCustomerEventTestState_
		{
			get
			{
				if(_customerEventScreeningTestsCollectionViaCustomerEventTestState_==null)
				{
					_customerEventScreeningTestsCollectionViaCustomerEventTestState_ = new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory)));
					_customerEventScreeningTestsCollectionViaCustomerEventTestState_.IsReadOnly=true;
				}
				return _customerEventScreeningTestsCollectionViaCustomerEventTestState_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerEventScreeningTestsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerEventScreeningTestsEntity))]
		public virtual EntityCollection<CustomerEventScreeningTestsEntity> CustomerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason
		{
			get
			{
				if(_customerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason==null)
				{
					_customerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason = new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory)));
					_customerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason.IsReadOnly=true;
				}
				return _customerEventScreeningTestsCollectionViaCustomerEventUnableScreenReason;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerEventScreeningTestsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerEventScreeningTestsEntity))]
		public virtual EntityCollection<CustomerEventScreeningTestsEntity> CustomerEventScreeningTestsCollectionViaCustomerEventTestState__
		{
			get
			{
				if(_customerEventScreeningTestsCollectionViaCustomerEventTestState__==null)
				{
					_customerEventScreeningTestsCollectionViaCustomerEventTestState__ = new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory)));
					_customerEventScreeningTestsCollectionViaCustomerEventTestState__.IsReadOnly=true;
				}
				return _customerEventScreeningTestsCollectionViaCustomerEventTestState__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerEventScreeningTestsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerEventScreeningTestsEntity))]
		public virtual EntityCollection<CustomerEventScreeningTestsEntity> CustomerEventScreeningTestsCollectionViaTestPerformedExternally
		{
			get
			{
				if(_customerEventScreeningTestsCollectionViaTestPerformedExternally==null)
				{
					_customerEventScreeningTestsCollectionViaTestPerformedExternally = new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory)));
					_customerEventScreeningTestsCollectionViaTestPerformedExternally.IsReadOnly=true;
				}
				return _customerEventScreeningTestsCollectionViaTestPerformedExternally;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerEventScreeningTestsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerEventScreeningTestsEntity))]
		public virtual EntityCollection<CustomerEventScreeningTestsEntity> CustomerEventScreeningTestsCollectionViaCustomerEventReading
		{
			get
			{
				if(_customerEventScreeningTestsCollectionViaCustomerEventReading==null)
				{
					_customerEventScreeningTestsCollectionViaCustomerEventReading = new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory)));
					_customerEventScreeningTestsCollectionViaCustomerEventReading.IsReadOnly=true;
				}
				return _customerEventScreeningTestsCollectionViaCustomerEventReading;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerEventScreeningTestsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerEventScreeningTestsEntity))]
		public virtual EntityCollection<CustomerEventScreeningTestsEntity> CustomerEventScreeningTestsCollectionViaTestNotPerformed
		{
			get
			{
				if(_customerEventScreeningTestsCollectionViaTestNotPerformed==null)
				{
					_customerEventScreeningTestsCollectionViaTestNotPerformed = new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory)));
					_customerEventScreeningTestsCollectionViaTestNotPerformed.IsReadOnly=true;
				}
				return _customerEventScreeningTestsCollectionViaTestNotPerformed;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerEventScreeningTestsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerEventScreeningTestsEntity))]
		public virtual EntityCollection<CustomerEventScreeningTestsEntity> CustomerEventScreeningTestsCollectionViaTestNotPerformed_
		{
			get
			{
				if(_customerEventScreeningTestsCollectionViaTestNotPerformed_==null)
				{
					_customerEventScreeningTestsCollectionViaTestNotPerformed_ = new EntityCollection<CustomerEventScreeningTestsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerEventScreeningTestsEntityFactory)));
					_customerEventScreeningTestsCollectionViaTestNotPerformed_.IsReadOnly=true;
				}
				return _customerEventScreeningTestsCollectionViaTestNotPerformed_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerHealthQuestionsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerHealthQuestionsEntity))]
		public virtual EntityCollection<CustomerHealthQuestionsEntity> CustomerHealthQuestionsCollectionViaCustomerHealthInfo
		{
			get
			{
				if(_customerHealthQuestionsCollectionViaCustomerHealthInfo==null)
				{
					_customerHealthQuestionsCollectionViaCustomerHealthInfo = new EntityCollection<CustomerHealthQuestionsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthQuestionsEntityFactory)));
					_customerHealthQuestionsCollectionViaCustomerHealthInfo.IsReadOnly=true;
				}
				return _customerHealthQuestionsCollectionViaCustomerHealthInfo;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerHealthQuestionsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerHealthQuestionsEntity))]
		public virtual EntityCollection<CustomerHealthQuestionsEntity> CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_
		{
			get
			{
				if(_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_==null)
				{
					_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_ = new EntityCollection<CustomerHealthQuestionsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthQuestionsEntityFactory)));
					_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_.IsReadOnly=true;
				}
				return _customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerHealthQuestionsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerHealthQuestionsEntity))]
		public virtual EntityCollection<CustomerHealthQuestionsEntity> CustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_
		{
			get
			{
				if(_customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_==null)
				{
					_customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_ = new EntityCollection<CustomerHealthQuestionsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthQuestionsEntityFactory)));
					_customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_.IsReadOnly=true;
				}
				return _customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerHealthQuestionsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerHealthQuestionsEntity))]
		public virtual EntityCollection<CustomerHealthQuestionsEntity> CustomerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer
		{
			get
			{
				if(_customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer==null)
				{
					_customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer = new EntityCollection<CustomerHealthQuestionsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthQuestionsEntityFactory)));
					_customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer.IsReadOnly=true;
				}
				return _customerHealthQuestionsCollectionViaCustomerClinicalQuestionAnswer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerHealthQuestionsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerHealthQuestionsEntity))]
		public virtual EntityCollection<CustomerHealthQuestionsEntity> CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__
		{
			get
			{
				if(_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__==null)
				{
					_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__ = new EntityCollection<CustomerHealthQuestionsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthQuestionsEntityFactory)));
					_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__.IsReadOnly=true;
				}
				return _customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerHealthQuestionsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerHealthQuestionsEntity))]
		public virtual EntityCollection<CustomerHealthQuestionsEntity> CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___
		{
			get
			{
				if(_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___==null)
				{
					_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___ = new EntityCollection<CustomerHealthQuestionsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthQuestionsEntityFactory)));
					_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___.IsReadOnly=true;
				}
				return _customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerHealthQuestionsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerHealthQuestionsEntity))]
		public virtual EntityCollection<CustomerHealthQuestionsEntity> CustomerHealthQuestionsCollectionViaClinicalTestQualificationCriteria
		{
			get
			{
				if(_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria==null)
				{
					_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria = new EntityCollection<CustomerHealthQuestionsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthQuestionsEntityFactory)));
					_customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria.IsReadOnly=true;
				}
				return _customerHealthQuestionsCollectionViaClinicalTestQualificationCriteria;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerHealthQuestionsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerHealthQuestionsEntity))]
		public virtual EntityCollection<CustomerHealthQuestionsEntity> CustomerHealthQuestionsCollectionViaCustomerHealthInfoArchive
		{
			get
			{
				if(_customerHealthQuestionsCollectionViaCustomerHealthInfoArchive==null)
				{
					_customerHealthQuestionsCollectionViaCustomerHealthInfoArchive = new EntityCollection<CustomerHealthQuestionsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerHealthQuestionsEntityFactory)));
					_customerHealthQuestionsCollectionViaCustomerHealthInfoArchive.IsReadOnly=true;
				}
				return _customerHealthQuestionsCollectionViaCustomerHealthInfoArchive;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerPrimaryCarePhysicianEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerPrimaryCarePhysicianEntity))]
		public virtual EntityCollection<CustomerPrimaryCarePhysicianEntity> CustomerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician
		{
			get
			{
				if(_customerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician==null)
				{
					_customerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician = new EntityCollection<CustomerPrimaryCarePhysicianEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerPrimaryCarePhysicianEntityFactory)));
					_customerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician.IsReadOnly=true;
				}
				return _customerPrimaryCarePhysicianCollectionViaEventCustomerPrimaryCarePhysician;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaFillEventCallQueue
		{
			get
			{
				if(_customerProfileCollectionViaFillEventCallQueue==null)
				{
					_customerProfileCollectionViaFillEventCallQueue = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaFillEventCallQueue.IsReadOnly=true;
				}
				return _customerProfileCollectionViaFillEventCallQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaDisqualifiedTest_
		{
			get
			{
				if(_customerProfileCollectionViaDisqualifiedTest_==null)
				{
					_customerProfileCollectionViaDisqualifiedTest_ = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaDisqualifiedTest_.IsReadOnly=true;
				}
				return _customerProfileCollectionViaDisqualifiedTest_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaCustomerEligibility_
		{
			get
			{
				if(_customerProfileCollectionViaCustomerEligibility_==null)
				{
					_customerProfileCollectionViaCustomerEligibility_ = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaCustomerEligibility_.IsReadOnly=true;
				}
				return _customerProfileCollectionViaCustomerEligibility_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaEventCustomerResult_____
		{
			get
			{
				if(_customerProfileCollectionViaEventCustomerResult_____==null)
				{
					_customerProfileCollectionViaEventCustomerResult_____ = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaEventCustomerResult_____.IsReadOnly=true;
				}
				return _customerProfileCollectionViaEventCustomerResult_____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaCustomerEligibility
		{
			get
			{
				if(_customerProfileCollectionViaCustomerEligibility==null)
				{
					_customerProfileCollectionViaCustomerEligibility = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaCustomerEligibility.IsReadOnly=true;
				}
				return _customerProfileCollectionViaCustomerEligibility;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaLanguageBarrierCallQueue
		{
			get
			{
				if(_customerProfileCollectionViaLanguageBarrierCallQueue==null)
				{
					_customerProfileCollectionViaLanguageBarrierCallQueue = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaLanguageBarrierCallQueue.IsReadOnly=true;
				}
				return _customerProfileCollectionViaLanguageBarrierCallQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaEventCustomerQuestionAnswer
		{
			get
			{
				if(_customerProfileCollectionViaEventCustomerQuestionAnswer==null)
				{
					_customerProfileCollectionViaEventCustomerQuestionAnswer = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaEventCustomerQuestionAnswer.IsReadOnly=true;
				}
				return _customerProfileCollectionViaEventCustomerQuestionAnswer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaHospitalPartnerCustomer_
		{
			get
			{
				if(_customerProfileCollectionViaHospitalPartnerCustomer_==null)
				{
					_customerProfileCollectionViaHospitalPartnerCustomer_ = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaHospitalPartnerCustomer_.IsReadOnly=true;
				}
				return _customerProfileCollectionViaHospitalPartnerCustomer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaHospitalPartnerCustomer__
		{
			get
			{
				if(_customerProfileCollectionViaHospitalPartnerCustomer__==null)
				{
					_customerProfileCollectionViaHospitalPartnerCustomer__ = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaHospitalPartnerCustomer__.IsReadOnly=true;
				}
				return _customerProfileCollectionViaHospitalPartnerCustomer__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaHospitalPartnerCustomer
		{
			get
			{
				if(_customerProfileCollectionViaHospitalPartnerCustomer==null)
				{
					_customerProfileCollectionViaHospitalPartnerCustomer = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaHospitalPartnerCustomer.IsReadOnly=true;
				}
				return _customerProfileCollectionViaHospitalPartnerCustomer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaDisqualifiedTest
		{
			get
			{
				if(_customerProfileCollectionViaDisqualifiedTest==null)
				{
					_customerProfileCollectionViaDisqualifiedTest = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaDisqualifiedTest.IsReadOnly=true;
				}
				return _customerProfileCollectionViaDisqualifiedTest;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaCustomerPrimaryCarePhysician_
		{
			get
			{
				if(_customerProfileCollectionViaCustomerPrimaryCarePhysician_==null)
				{
					_customerProfileCollectionViaCustomerPrimaryCarePhysician_ = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaCustomerPrimaryCarePhysician_.IsReadOnly=true;
				}
				return _customerProfileCollectionViaCustomerPrimaryCarePhysician_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaCustomerPrimaryCarePhysician__
		{
			get
			{
				if(_customerProfileCollectionViaCustomerPrimaryCarePhysician__==null)
				{
					_customerProfileCollectionViaCustomerPrimaryCarePhysician__ = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaCustomerPrimaryCarePhysician__.IsReadOnly=true;
				}
				return _customerProfileCollectionViaCustomerPrimaryCarePhysician__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaNoShowCallQueue
		{
			get
			{
				if(_customerProfileCollectionViaNoShowCallQueue==null)
				{
					_customerProfileCollectionViaNoShowCallQueue = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaNoShowCallQueue.IsReadOnly=true;
				}
				return _customerProfileCollectionViaNoShowCallQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaCustomerPrimaryCarePhysician
		{
			get
			{
				if(_customerProfileCollectionViaCustomerPrimaryCarePhysician==null)
				{
					_customerProfileCollectionViaCustomerPrimaryCarePhysician = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaCustomerPrimaryCarePhysician.IsReadOnly=true;
				}
				return _customerProfileCollectionViaCustomerPrimaryCarePhysician;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaCallQueueCustomer
		{
			get
			{
				if(_customerProfileCollectionViaCallQueueCustomer==null)
				{
					_customerProfileCollectionViaCallQueueCustomer = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaCallQueueCustomer.IsReadOnly=true;
				}
				return _customerProfileCollectionViaCallQueueCustomer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaCustomerHealthInfo
		{
			get
			{
				if(_customerProfileCollectionViaCustomerHealthInfo==null)
				{
					_customerProfileCollectionViaCustomerHealthInfo = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaCustomerHealthInfo.IsReadOnly=true;
				}
				return _customerProfileCollectionViaCustomerHealthInfo;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaCallQueueCustomer__
		{
			get
			{
				if(_customerProfileCollectionViaCallQueueCustomer__==null)
				{
					_customerProfileCollectionViaCallQueueCustomer__ = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaCallQueueCustomer__.IsReadOnly=true;
				}
				return _customerProfileCollectionViaCallQueueCustomer__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaCallQueueCustomer_
		{
			get
			{
				if(_customerProfileCollectionViaCallQueueCustomer_==null)
				{
					_customerProfileCollectionViaCallQueueCustomer_ = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaCallQueueCustomer_.IsReadOnly=true;
				}
				return _customerProfileCollectionViaCallQueueCustomer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaEventCustomerResult______
		{
			get
			{
				if(_customerProfileCollectionViaEventCustomerResult______==null)
				{
					_customerProfileCollectionViaEventCustomerResult______ = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaEventCustomerResult______.IsReadOnly=true;
				}
				return _customerProfileCollectionViaEventCustomerResult______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaCustomerIcdCode
		{
			get
			{
				if(_customerProfileCollectionViaCustomerIcdCode==null)
				{
					_customerProfileCollectionViaCustomerIcdCode = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaCustomerIcdCode.IsReadOnly=true;
				}
				return _customerProfileCollectionViaCustomerIcdCode;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaMailRoundCallQueue
		{
			get
			{
				if(_customerProfileCollectionViaMailRoundCallQueue==null)
				{
					_customerProfileCollectionViaMailRoundCallQueue = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaMailRoundCallQueue.IsReadOnly=true;
				}
				return _customerProfileCollectionViaMailRoundCallQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaCustomerHealthInfoArchive
		{
			get
			{
				if(_customerProfileCollectionViaCustomerHealthInfoArchive==null)
				{
					_customerProfileCollectionViaCustomerHealthInfoArchive = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaCustomerHealthInfoArchive.IsReadOnly=true;
				}
				return _customerProfileCollectionViaCustomerHealthInfoArchive;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaEventCustomerQuestionAnswer_
		{
			get
			{
				if(_customerProfileCollectionViaEventCustomerQuestionAnswer_==null)
				{
					_customerProfileCollectionViaEventCustomerQuestionAnswer_ = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaEventCustomerQuestionAnswer_.IsReadOnly=true;
				}
				return _customerProfileCollectionViaEventCustomerQuestionAnswer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaRequiredTest
		{
			get
			{
				if(_customerProfileCollectionViaRequiredTest==null)
				{
					_customerProfileCollectionViaRequiredTest = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaRequiredTest.IsReadOnly=true;
				}
				return _customerProfileCollectionViaRequiredTest;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaCustomerWarmTransfer_
		{
			get
			{
				if(_customerProfileCollectionViaCustomerWarmTransfer_==null)
				{
					_customerProfileCollectionViaCustomerWarmTransfer_ = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaCustomerWarmTransfer_.IsReadOnly=true;
				}
				return _customerProfileCollectionViaCustomerWarmTransfer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaProspectCustomer
		{
			get
			{
				if(_customerProfileCollectionViaProspectCustomer==null)
				{
					_customerProfileCollectionViaProspectCustomer = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaProspectCustomer.IsReadOnly=true;
				}
				return _customerProfileCollectionViaProspectCustomer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaEventCustomerResult_
		{
			get
			{
				if(_customerProfileCollectionViaEventCustomerResult_==null)
				{
					_customerProfileCollectionViaEventCustomerResult_ = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaEventCustomerResult_.IsReadOnly=true;
				}
				return _customerProfileCollectionViaEventCustomerResult_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaEventCustomerResult__
		{
			get
			{
				if(_customerProfileCollectionViaEventCustomerResult__==null)
				{
					_customerProfileCollectionViaEventCustomerResult__ = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaEventCustomerResult__.IsReadOnly=true;
				}
				return _customerProfileCollectionViaEventCustomerResult__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaUncontactedCustomerCallQueue
		{
			get
			{
				if(_customerProfileCollectionViaUncontactedCustomerCallQueue==null)
				{
					_customerProfileCollectionViaUncontactedCustomerCallQueue = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaUncontactedCustomerCallQueue.IsReadOnly=true;
				}
				return _customerProfileCollectionViaUncontactedCustomerCallQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaCustomerWarmTransfer
		{
			get
			{
				if(_customerProfileCollectionViaCustomerWarmTransfer==null)
				{
					_customerProfileCollectionViaCustomerWarmTransfer = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaCustomerWarmTransfer.IsReadOnly=true;
				}
				return _customerProfileCollectionViaCustomerWarmTransfer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaMedication_
		{
			get
			{
				if(_customerProfileCollectionViaMedication_==null)
				{
					_customerProfileCollectionViaMedication_ = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaMedication_.IsReadOnly=true;
				}
				return _customerProfileCollectionViaMedication_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaCallRoundCallQueue
		{
			get
			{
				if(_customerProfileCollectionViaCallRoundCallQueue==null)
				{
					_customerProfileCollectionViaCallRoundCallQueue = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaCallRoundCallQueue.IsReadOnly=true;
				}
				return _customerProfileCollectionViaCallRoundCallQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaCustomerTag_
		{
			get
			{
				if(_customerProfileCollectionViaCustomerTag_==null)
				{
					_customerProfileCollectionViaCustomerTag_ = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaCustomerTag_.IsReadOnly=true;
				}
				return _customerProfileCollectionViaCustomerTag_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaReferral
		{
			get
			{
				if(_customerProfileCollectionViaReferral==null)
				{
					_customerProfileCollectionViaReferral = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaReferral.IsReadOnly=true;
				}
				return _customerProfileCollectionViaReferral;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaCustomerTargeted_
		{
			get
			{
				if(_customerProfileCollectionViaCustomerTargeted_==null)
				{
					_customerProfileCollectionViaCustomerTargeted_ = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaCustomerTargeted_.IsReadOnly=true;
				}
				return _customerProfileCollectionViaCustomerTargeted_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaCustomerTargeted
		{
			get
			{
				if(_customerProfileCollectionViaCustomerTargeted==null)
				{
					_customerProfileCollectionViaCustomerTargeted = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaCustomerTargeted.IsReadOnly=true;
				}
				return _customerProfileCollectionViaCustomerTargeted;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaCustomerTag
		{
			get
			{
				if(_customerProfileCollectionViaCustomerTag==null)
				{
					_customerProfileCollectionViaCustomerTag = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaCustomerTag.IsReadOnly=true;
				}
				return _customerProfileCollectionViaCustomerTag;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaMedication
		{
			get
			{
				if(_customerProfileCollectionViaMedication==null)
				{
					_customerProfileCollectionViaMedication = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaMedication.IsReadOnly=true;
				}
				return _customerProfileCollectionViaMedication;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaEventCustomerResult________
		{
			get
			{
				if(_customerProfileCollectionViaEventCustomerResult________==null)
				{
					_customerProfileCollectionViaEventCustomerResult________ = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaEventCustomerResult________.IsReadOnly=true;
				}
				return _customerProfileCollectionViaEventCustomerResult________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaEventCustomerResult
		{
			get
			{
				if(_customerProfileCollectionViaEventCustomerResult==null)
				{
					_customerProfileCollectionViaEventCustomerResult = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaEventCustomerResult.IsReadOnly=true;
				}
				return _customerProfileCollectionViaEventCustomerResult;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaEventCustomerResult_______
		{
			get
			{
				if(_customerProfileCollectionViaEventCustomerResult_______==null)
				{
					_customerProfileCollectionViaEventCustomerResult_______ = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaEventCustomerResult_______.IsReadOnly=true;
				}
				return _customerProfileCollectionViaEventCustomerResult_______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaDirectMail
		{
			get
			{
				if(_customerProfileCollectionViaDirectMail==null)
				{
					_customerProfileCollectionViaDirectMail = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaDirectMail.IsReadOnly=true;
				}
				return _customerProfileCollectionViaDirectMail;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaEventCustomerResult____
		{
			get
			{
				if(_customerProfileCollectionViaEventCustomerResult____==null)
				{
					_customerProfileCollectionViaEventCustomerResult____ = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaEventCustomerResult____.IsReadOnly=true;
				}
				return _customerProfileCollectionViaEventCustomerResult____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaCurrentMedication
		{
			get
			{
				if(_customerProfileCollectionViaCurrentMedication==null)
				{
					_customerProfileCollectionViaCurrentMedication = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaCurrentMedication.IsReadOnly=true;
				}
				return _customerProfileCollectionViaCurrentMedication;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaGuardianDetails
		{
			get
			{
				if(_customerProfileCollectionViaGuardianDetails==null)
				{
					_customerProfileCollectionViaGuardianDetails = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaGuardianDetails.IsReadOnly=true;
				}
				return _customerProfileCollectionViaGuardianDetails;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaEventCustomers
		{
			get
			{
				if(_customerProfileCollectionViaEventCustomers==null)
				{
					_customerProfileCollectionViaEventCustomers = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaEventCustomers.IsReadOnly=true;
				}
				return _customerProfileCollectionViaEventCustomers;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaEventCustomers_
		{
			get
			{
				if(_customerProfileCollectionViaEventCustomers_==null)
				{
					_customerProfileCollectionViaEventCustomers_ = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaEventCustomers_.IsReadOnly=true;
				}
				return _customerProfileCollectionViaEventCustomers_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaCustomerCallQueueCallAttempt
		{
			get
			{
				if(_customerProfileCollectionViaCustomerCallQueueCallAttempt==null)
				{
					_customerProfileCollectionViaCustomerCallQueueCallAttempt = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaCustomerCallQueueCallAttempt.IsReadOnly=true;
				}
				return _customerProfileCollectionViaCustomerCallQueueCallAttempt;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaEventCustomerResult___
		{
			get
			{
				if(_customerProfileCollectionViaEventCustomerResult___==null)
				{
					_customerProfileCollectionViaEventCustomerResult___ = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaEventCustomerResult___.IsReadOnly=true;
				}
				return _customerProfileCollectionViaEventCustomerResult___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaCustomerProfileHistory
		{
			get
			{
				if(_customerProfileCollectionViaCustomerProfileHistory==null)
				{
					_customerProfileCollectionViaCustomerProfileHistory = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaCustomerProfileHistory.IsReadOnly=true;
				}
				return _customerProfileCollectionViaCustomerProfileHistory;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt
		{
			get
			{
				if(_customerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt==null)
				{
					_customerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt.IsReadOnly=true;
				}
				return _customerProfileCollectionViaPreAssessmentCustomerCallQueueCallAttempt;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaCustomerClinicalQuestionAnswer
		{
			get
			{
				if(_customerProfileCollectionViaCustomerClinicalQuestionAnswer==null)
				{
					_customerProfileCollectionViaCustomerClinicalQuestionAnswer = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaCustomerClinicalQuestionAnswer.IsReadOnly=true;
				}
				return _customerProfileCollectionViaCustomerClinicalQuestionAnswer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaCustomerClinicalQuestionAnswer_
		{
			get
			{
				if(_customerProfileCollectionViaCustomerClinicalQuestionAnswer_==null)
				{
					_customerProfileCollectionViaCustomerClinicalQuestionAnswer_ = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaCustomerClinicalQuestionAnswer_.IsReadOnly=true;
				}
				return _customerProfileCollectionViaCustomerClinicalQuestionAnswer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileEntity))]
		public virtual EntityCollection<CustomerProfileEntity> CustomerProfileCollectionViaGuardianDetails_
		{
			get
			{
				if(_customerProfileCollectionViaGuardianDetails_==null)
				{
					_customerProfileCollectionViaGuardianDetails_ = new EntityCollection<CustomerProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileEntityFactory)));
					_customerProfileCollectionViaGuardianDetails_.IsReadOnly=true;
				}
				return _customerProfileCollectionViaGuardianDetails_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileHistoryEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileHistoryEntity))]
		public virtual EntityCollection<CustomerProfileHistoryEntity> CustomerProfileHistoryCollectionViaEventCustomers_
		{
			get
			{
				if(_customerProfileHistoryCollectionViaEventCustomers_==null)
				{
					_customerProfileHistoryCollectionViaEventCustomers_ = new EntityCollection<CustomerProfileHistoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileHistoryEntityFactory)));
					_customerProfileHistoryCollectionViaEventCustomers_.IsReadOnly=true;
				}
				return _customerProfileHistoryCollectionViaEventCustomers_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerProfileHistoryEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerProfileHistoryEntity))]
		public virtual EntityCollection<CustomerProfileHistoryEntity> CustomerProfileHistoryCollectionViaEventCustomers
		{
			get
			{
				if(_customerProfileHistoryCollectionViaEventCustomers==null)
				{
					_customerProfileHistoryCollectionViaEventCustomers = new EntityCollection<CustomerProfileHistoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerProfileHistoryEntityFactory)));
					_customerProfileHistoryCollectionViaEventCustomers.IsReadOnly=true;
				}
				return _customerProfileHistoryCollectionViaEventCustomers;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerRegistrationNotesEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerRegistrationNotesEntity))]
		public virtual EntityCollection<CustomerRegistrationNotesEntity> CustomerRegistrationNotesCollectionViaEventAppointmentCancellationLog
		{
			get
			{
				if(_customerRegistrationNotesCollectionViaEventAppointmentCancellationLog==null)
				{
					_customerRegistrationNotesCollectionViaEventAppointmentCancellationLog = new EntityCollection<CustomerRegistrationNotesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerRegistrationNotesEntityFactory)));
					_customerRegistrationNotesCollectionViaEventAppointmentCancellationLog.IsReadOnly=true;
				}
				return _customerRegistrationNotesCollectionViaEventAppointmentCancellationLog;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerRegistrationNotesEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerRegistrationNotesEntity))]
		public virtual EntityCollection<CustomerRegistrationNotesEntity> CustomerRegistrationNotesCollectionViaEventCustomers_
		{
			get
			{
				if(_customerRegistrationNotesCollectionViaEventCustomers_==null)
				{
					_customerRegistrationNotesCollectionViaEventCustomers_ = new EntityCollection<CustomerRegistrationNotesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerRegistrationNotesEntityFactory)));
					_customerRegistrationNotesCollectionViaEventCustomers_.IsReadOnly=true;
				}
				return _customerRegistrationNotesCollectionViaEventCustomers_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'CustomerRegistrationNotesEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(CustomerRegistrationNotesEntity))]
		public virtual EntityCollection<CustomerRegistrationNotesEntity> CustomerRegistrationNotesCollectionViaEventCustomers
		{
			get
			{
				if(_customerRegistrationNotesCollectionViaEventCustomers==null)
				{
					_customerRegistrationNotesCollectionViaEventCustomers = new EntityCollection<CustomerRegistrationNotesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(CustomerRegistrationNotesEntityFactory)));
					_customerRegistrationNotesCollectionViaEventCustomers.IsReadOnly=true;
				}
				return _customerRegistrationNotesCollectionViaEventCustomers;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DirectMailTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DirectMailTypeEntity))]
		public virtual EntityCollection<DirectMailTypeEntity> DirectMailTypeCollectionViaDirectMail
		{
			get
			{
				if(_directMailTypeCollectionViaDirectMail==null)
				{
					_directMailTypeCollectionViaDirectMail = new EntityCollection<DirectMailTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DirectMailTypeEntityFactory)));
					_directMailTypeCollectionViaDirectMail.IsReadOnly=true;
				}
				return _directMailTypeCollectionViaDirectMail;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DirectMailTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DirectMailTypeEntity))]
		public virtual EntityCollection<DirectMailTypeEntity> DirectMailTypeCollectionViaCampaignActivity
		{
			get
			{
				if(_directMailTypeCollectionViaCampaignActivity==null)
				{
					_directMailTypeCollectionViaCampaignActivity = new EntityCollection<DirectMailTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DirectMailTypeEntityFactory)));
					_directMailTypeCollectionViaCampaignActivity.IsReadOnly=true;
				}
				return _directMailTypeCollectionViaCampaignActivity;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'DirectMailTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(DirectMailTypeEntity))]
		public virtual EntityCollection<DirectMailTypeEntity> DirectMailTypeCollectionViaCampaignActivity_
		{
			get
			{
				if(_directMailTypeCollectionViaCampaignActivity_==null)
				{
					_directMailTypeCollectionViaCampaignActivity_ = new EntityCollection<DirectMailTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(DirectMailTypeEntityFactory)));
					_directMailTypeCollectionViaCampaignActivity_.IsReadOnly=true;
				}
				return _directMailTypeCollectionViaCampaignActivity_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventActivityTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventActivityTemplateEntity))]
		public virtual EntityCollection<EventActivityTemplateEntity> EventActivityTemplateCollectionViaEventActivityTemplateMeeting
		{
			get
			{
				if(_eventActivityTemplateCollectionViaEventActivityTemplateMeeting==null)
				{
					_eventActivityTemplateCollectionViaEventActivityTemplateMeeting = new EntityCollection<EventActivityTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventActivityTemplateEntityFactory)));
					_eventActivityTemplateCollectionViaEventActivityTemplateMeeting.IsReadOnly=true;
				}
				return _eventActivityTemplateCollectionViaEventActivityTemplateMeeting;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventActivityTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventActivityTemplateEntity))]
		public virtual EntityCollection<EventActivityTemplateEntity> EventActivityTemplateCollectionViaEventActivityTemplateTask
		{
			get
			{
				if(_eventActivityTemplateCollectionViaEventActivityTemplateTask==null)
				{
					_eventActivityTemplateCollectionViaEventActivityTemplateTask = new EntityCollection<EventActivityTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventActivityTemplateEntityFactory)));
					_eventActivityTemplateCollectionViaEventActivityTemplateTask.IsReadOnly=true;
				}
				return _eventActivityTemplateCollectionViaEventActivityTemplateTask;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventActivityTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventActivityTemplateEntity))]
		public virtual EntityCollection<EventActivityTemplateEntity> EventActivityTemplateCollectionViaEventActivityTemplateCall
		{
			get
			{
				if(_eventActivityTemplateCollectionViaEventActivityTemplateCall==null)
				{
					_eventActivityTemplateCollectionViaEventActivityTemplateCall = new EntityCollection<EventActivityTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventActivityTemplateEntityFactory)));
					_eventActivityTemplateCollectionViaEventActivityTemplateCall.IsReadOnly=true;
				}
				return _eventActivityTemplateCollectionViaEventActivityTemplateCall;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventActivityTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventActivityTemplateEntity))]
		public virtual EntityCollection<EventActivityTemplateEntity> EventActivityTemplateCollectionViaEventActivityTemplateEmail
		{
			get
			{
				if(_eventActivityTemplateCollectionViaEventActivityTemplateEmail==null)
				{
					_eventActivityTemplateCollectionViaEventActivityTemplateEmail = new EntityCollection<EventActivityTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventActivityTemplateEntityFactory)));
					_eventActivityTemplateCollectionViaEventActivityTemplateEmail.IsReadOnly=true;
				}
				return _eventActivityTemplateCollectionViaEventActivityTemplateEmail;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventAppointmentEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventAppointmentEntity))]
		public virtual EntityCollection<EventAppointmentEntity> EventAppointmentCollectionViaEventCustomers
		{
			get
			{
				if(_eventAppointmentCollectionViaEventCustomers==null)
				{
					_eventAppointmentCollectionViaEventCustomers = new EntityCollection<EventAppointmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventAppointmentEntityFactory)));
					_eventAppointmentCollectionViaEventCustomers.IsReadOnly=true;
				}
				return _eventAppointmentCollectionViaEventCustomers;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventAppointmentEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventAppointmentEntity))]
		public virtual EntityCollection<EventAppointmentEntity> EventAppointmentCollectionViaEventCustomers_
		{
			get
			{
				if(_eventAppointmentCollectionViaEventCustomers_==null)
				{
					_eventAppointmentCollectionViaEventCustomers_ = new EntityCollection<EventAppointmentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventAppointmentEntityFactory)));
					_eventAppointmentCollectionViaEventCustomers_.IsReadOnly=true;
				}
				return _eventAppointmentCollectionViaEventCustomers_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerResultEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerResultEntity))]
		public virtual EntityCollection<EventCustomerResultEntity> EventCustomerResultCollectionViaCustomerResultScreeningCommunication
		{
			get
			{
				if(_eventCustomerResultCollectionViaCustomerResultScreeningCommunication==null)
				{
					_eventCustomerResultCollectionViaCustomerResultScreeningCommunication = new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory)));
					_eventCustomerResultCollectionViaCustomerResultScreeningCommunication.IsReadOnly=true;
				}
				return _eventCustomerResultCollectionViaCustomerResultScreeningCommunication;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerResultEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerResultEntity))]
		public virtual EntityCollection<EventCustomerResultEntity> EventCustomerResultCollectionViaPriorityInQueue_
		{
			get
			{
				if(_eventCustomerResultCollectionViaPriorityInQueue_==null)
				{
					_eventCustomerResultCollectionViaPriorityInQueue_ = new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory)));
					_eventCustomerResultCollectionViaPriorityInQueue_.IsReadOnly=true;
				}
				return _eventCustomerResultCollectionViaPriorityInQueue_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerResultEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerResultEntity))]
		public virtual EntityCollection<EventCustomerResultEntity> EventCustomerResultCollectionViaKynLabValues
		{
			get
			{
				if(_eventCustomerResultCollectionViaKynLabValues==null)
				{
					_eventCustomerResultCollectionViaKynLabValues = new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory)));
					_eventCustomerResultCollectionViaKynLabValues.IsReadOnly=true;
				}
				return _eventCustomerResultCollectionViaKynLabValues;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerResultEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerResultEntity))]
		public virtual EntityCollection<EventCustomerResultEntity> EventCustomerResultCollectionViaCustomerResultScreeningCommunication__
		{
			get
			{
				if(_eventCustomerResultCollectionViaCustomerResultScreeningCommunication__==null)
				{
					_eventCustomerResultCollectionViaCustomerResultScreeningCommunication__ = new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory)));
					_eventCustomerResultCollectionViaCustomerResultScreeningCommunication__.IsReadOnly=true;
				}
				return _eventCustomerResultCollectionViaCustomerResultScreeningCommunication__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerResultEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerResultEntity))]
		public virtual EntityCollection<EventCustomerResultEntity> EventCustomerResultCollectionViaCustomerResultScreeningCommunication_
		{
			get
			{
				if(_eventCustomerResultCollectionViaCustomerResultScreeningCommunication_==null)
				{
					_eventCustomerResultCollectionViaCustomerResultScreeningCommunication_ = new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory)));
					_eventCustomerResultCollectionViaCustomerResultScreeningCommunication_.IsReadOnly=true;
				}
				return _eventCustomerResultCollectionViaCustomerResultScreeningCommunication_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerResultEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerResultEntity))]
		public virtual EntityCollection<EventCustomerResultEntity> EventCustomerResultCollectionViaCdcontentGeneratorTracking
		{
			get
			{
				if(_eventCustomerResultCollectionViaCdcontentGeneratorTracking==null)
				{
					_eventCustomerResultCollectionViaCdcontentGeneratorTracking = new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory)));
					_eventCustomerResultCollectionViaCdcontentGeneratorTracking.IsReadOnly=true;
				}
				return _eventCustomerResultCollectionViaCdcontentGeneratorTracking;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerResultEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerResultEntity))]
		public virtual EntityCollection<EventCustomerResultEntity> EventCustomerResultCollectionViaKynLabValues_
		{
			get
			{
				if(_eventCustomerResultCollectionViaKynLabValues_==null)
				{
					_eventCustomerResultCollectionViaKynLabValues_ = new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory)));
					_eventCustomerResultCollectionViaKynLabValues_.IsReadOnly=true;
				}
				return _eventCustomerResultCollectionViaKynLabValues_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomerResultEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomerResultEntity))]
		public virtual EntityCollection<EventCustomerResultEntity> EventCustomerResultCollectionViaPriorityInQueue
		{
			get
			{
				if(_eventCustomerResultCollectionViaPriorityInQueue==null)
				{
					_eventCustomerResultCollectionViaPriorityInQueue = new EntityCollection<EventCustomerResultEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomerResultEntityFactory)));
					_eventCustomerResultCollectionViaPriorityInQueue.IsReadOnly=true;
				}
				return _eventCustomerResultCollectionViaPriorityInQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaDisqualifiedTest_
		{
			get
			{
				if(_eventCustomersCollectionViaDisqualifiedTest_==null)
				{
					_eventCustomersCollectionViaDisqualifiedTest_ = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaDisqualifiedTest_.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaDisqualifiedTest_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaEventAppointmentChangeLog
		{
			get
			{
				if(_eventCustomersCollectionViaEventAppointmentChangeLog==null)
				{
					_eventCustomersCollectionViaEventAppointmentChangeLog = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaEventAppointmentChangeLog.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaEventAppointmentChangeLog;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaDisqualifiedTest
		{
			get
			{
				if(_eventCustomersCollectionViaDisqualifiedTest==null)
				{
					_eventCustomersCollectionViaDisqualifiedTest = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaDisqualifiedTest.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaDisqualifiedTest;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaEventCustomerPrimaryCarePhysician
		{
			get
			{
				if(_eventCustomersCollectionViaEventCustomerPrimaryCarePhysician==null)
				{
					_eventCustomersCollectionViaEventCustomerPrimaryCarePhysician = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaEventCustomerPrimaryCarePhysician.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaEventCustomerPrimaryCarePhysician;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaEventCustomerQuestionAnswer_
		{
			get
			{
				if(_eventCustomersCollectionViaEventCustomerQuestionAnswer_==null)
				{
					_eventCustomersCollectionViaEventCustomerQuestionAnswer_ = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaEventCustomerQuestionAnswer_.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaEventCustomerQuestionAnswer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaEventAppointmentCancellationLog
		{
			get
			{
				if(_eventCustomersCollectionViaEventAppointmentCancellationLog==null)
				{
					_eventCustomersCollectionViaEventAppointmentCancellationLog = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaEventAppointmentCancellationLog.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaEventAppointmentCancellationLog;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaEventCustomerQuestionAnswer
		{
			get
			{
				if(_eventCustomersCollectionViaEventCustomerQuestionAnswer==null)
				{
					_eventCustomersCollectionViaEventCustomerQuestionAnswer = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaEventCustomerQuestionAnswer.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaEventCustomerQuestionAnswer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaEventCustomerGiftCard
		{
			get
			{
				if(_eventCustomersCollectionViaEventCustomerGiftCard==null)
				{
					_eventCustomersCollectionViaEventCustomerGiftCard = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaEventCustomerGiftCard.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaEventCustomerGiftCard;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaSurveyAnswer
		{
			get
			{
				if(_eventCustomersCollectionViaSurveyAnswer==null)
				{
					_eventCustomersCollectionViaSurveyAnswer = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaSurveyAnswer.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaSurveyAnswer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaEventCustomerTestNotPerformedNotification
		{
			get
			{
				if(_eventCustomersCollectionViaEventCustomerTestNotPerformedNotification==null)
				{
					_eventCustomersCollectionViaEventCustomerTestNotPerformedNotification = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaEventCustomerTestNotPerformedNotification.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaEventCustomerTestNotPerformedNotification;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaPhysicianRecordRequestSignature
		{
			get
			{
				if(_eventCustomersCollectionViaPhysicianRecordRequestSignature==null)
				{
					_eventCustomersCollectionViaPhysicianRecordRequestSignature = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaPhysicianRecordRequestSignature.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaPhysicianRecordRequestSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaEventCustomerRetest
		{
			get
			{
				if(_eventCustomersCollectionViaEventCustomerRetest==null)
				{
					_eventCustomersCollectionViaEventCustomerRetest = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaEventCustomerRetest.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaEventCustomerRetest;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaPcpDisposition
		{
			get
			{
				if(_eventCustomersCollectionViaPcpDisposition==null)
				{
					_eventCustomersCollectionViaPcpDisposition = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaPcpDisposition.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaPcpDisposition;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaPcpDisposition_
		{
			get
			{
				if(_eventCustomersCollectionViaPcpDisposition_==null)
				{
					_eventCustomersCollectionViaPcpDisposition_ = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaPcpDisposition_.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaPcpDisposition_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaChaperoneSignature
		{
			get
			{
				if(_eventCustomersCollectionViaChaperoneSignature==null)
				{
					_eventCustomersCollectionViaChaperoneSignature = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaChaperoneSignature.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaChaperoneSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaChaperoneAnswer_
		{
			get
			{
				if(_eventCustomersCollectionViaChaperoneAnswer_==null)
				{
					_eventCustomersCollectionViaChaperoneAnswer_ = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaChaperoneAnswer_.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaChaperoneAnswer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaChaperoneAnswer
		{
			get
			{
				if(_eventCustomersCollectionViaChaperoneAnswer==null)
				{
					_eventCustomersCollectionViaChaperoneAnswer = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaChaperoneAnswer.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaChaperoneAnswer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaCallQueueCustomer__
		{
			get
			{
				if(_eventCustomersCollectionViaCallQueueCustomer__==null)
				{
					_eventCustomersCollectionViaCallQueueCustomer__ = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaCallQueueCustomer__.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaCallQueueCustomer__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaCheckListAnswer_
		{
			get
			{
				if(_eventCustomersCollectionViaCheckListAnswer_==null)
				{
					_eventCustomersCollectionViaCheckListAnswer_ = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaCheckListAnswer_.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaCheckListAnswer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaCallQueueCustomer
		{
			get
			{
				if(_eventCustomersCollectionViaCallQueueCustomer==null)
				{
					_eventCustomersCollectionViaCallQueueCustomer = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaCallQueueCustomer.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaCallQueueCustomer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaCallQueueCustomer_
		{
			get
			{
				if(_eventCustomersCollectionViaCallQueueCustomer_==null)
				{
					_eventCustomersCollectionViaCallQueueCustomer_ = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaCallQueueCustomer_.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaCallQueueCustomer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaCustomerHealthInfo
		{
			get
			{
				if(_eventCustomersCollectionViaCustomerHealthInfo==null)
				{
					_eventCustomersCollectionViaCustomerHealthInfo = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaCustomerHealthInfo.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaCustomerHealthInfo;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaExitInterviewSignature
		{
			get
			{
				if(_eventCustomersCollectionViaExitInterviewSignature==null)
				{
					_eventCustomersCollectionViaExitInterviewSignature = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaExitInterviewSignature.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaExitInterviewSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaFluConsentAnswer
		{
			get
			{
				if(_eventCustomersCollectionViaFluConsentAnswer==null)
				{
					_eventCustomersCollectionViaFluConsentAnswer = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaFluConsentAnswer.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaFluConsentAnswer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaExitInterviewAnswer_
		{
			get
			{
				if(_eventCustomersCollectionViaExitInterviewAnswer_==null)
				{
					_eventCustomersCollectionViaExitInterviewAnswer_ = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaExitInterviewAnswer_.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaExitInterviewAnswer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaCheckListAnswer
		{
			get
			{
				if(_eventCustomersCollectionViaCheckListAnswer==null)
				{
					_eventCustomersCollectionViaCheckListAnswer = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaCheckListAnswer.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaCheckListAnswer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaExitInterviewAnswer
		{
			get
			{
				if(_eventCustomersCollectionViaExitInterviewAnswer==null)
				{
					_eventCustomersCollectionViaExitInterviewAnswer = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaExitInterviewAnswer.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaExitInterviewAnswer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaFluConsentAnswer_
		{
			get
			{
				if(_eventCustomersCollectionViaFluConsentAnswer_==null)
				{
					_eventCustomersCollectionViaFluConsentAnswer_ = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaFluConsentAnswer_.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaFluConsentAnswer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaSurveyAnswer_
		{
			get
			{
				if(_eventCustomersCollectionViaSurveyAnswer_==null)
				{
					_eventCustomersCollectionViaSurveyAnswer_ = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaSurveyAnswer_.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaSurveyAnswer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaCustomerHealthInfoArchive
		{
			get
			{
				if(_eventCustomersCollectionViaCustomerHealthInfoArchive==null)
				{
					_eventCustomersCollectionViaCustomerHealthInfoArchive = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaCustomerHealthInfoArchive.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaCustomerHealthInfoArchive;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaCustomerMedicareQuestionAnswer
		{
			get
			{
				if(_eventCustomersCollectionViaCustomerMedicareQuestionAnswer==null)
				{
					_eventCustomersCollectionViaCustomerMedicareQuestionAnswer = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaCustomerMedicareQuestionAnswer.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaCustomerMedicareQuestionAnswer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaFluConsentSignature
		{
			get
			{
				if(_eventCustomersCollectionViaFluConsentSignature==null)
				{
					_eventCustomersCollectionViaFluConsentSignature = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaFluConsentSignature.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaFluConsentSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventCustomersEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventCustomersEntity))]
		public virtual EntityCollection<EventCustomersEntity> EventCustomersCollectionViaParticipationConsentSignature
		{
			get
			{
				if(_eventCustomersCollectionViaParticipationConsentSignature==null)
				{
					_eventCustomersCollectionViaParticipationConsentSignature = new EntityCollection<EventCustomersEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventCustomersEntityFactory)));
					_eventCustomersCollectionViaParticipationConsentSignature.IsReadOnly=true;
				}
				return _eventCustomersCollectionViaParticipationConsentSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaEventCustomerQuestionAnswer
		{
			get
			{
				if(_eventsCollectionViaEventCustomerQuestionAnswer==null)
				{
					_eventsCollectionViaEventCustomerQuestionAnswer = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaEventCustomerQuestionAnswer.IsReadOnly=true;
				}
				return _eventsCollectionViaEventCustomerQuestionAnswer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaEventPhysicianTest__
		{
			get
			{
				if(_eventsCollectionViaEventPhysicianTest__==null)
				{
					_eventsCollectionViaEventPhysicianTest__ = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaEventPhysicianTest__.IsReadOnly=true;
				}
				return _eventsCollectionViaEventPhysicianTest__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaEventStaffAssignment__
		{
			get
			{
				if(_eventsCollectionViaEventStaffAssignment__==null)
				{
					_eventsCollectionViaEventStaffAssignment__ = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaEventStaffAssignment__.IsReadOnly=true;
				}
				return _eventsCollectionViaEventStaffAssignment__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaEventStaffAssignment_
		{
			get
			{
				if(_eventsCollectionViaEventStaffAssignment_==null)
				{
					_eventsCollectionViaEventStaffAssignment_ = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaEventStaffAssignment_.IsReadOnly=true;
				}
				return _eventsCollectionViaEventStaffAssignment_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaEventCustomers
		{
			get
			{
				if(_eventsCollectionViaEventCustomers==null)
				{
					_eventsCollectionViaEventCustomers = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaEventCustomers.IsReadOnly=true;
				}
				return _eventsCollectionViaEventCustomers;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaEventCustomerResult____
		{
			get
			{
				if(_eventsCollectionViaEventCustomerResult____==null)
				{
					_eventsCollectionViaEventCustomerResult____ = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaEventCustomerResult____.IsReadOnly=true;
				}
				return _eventsCollectionViaEventCustomerResult____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaEventCustomerResult___
		{
			get
			{
				if(_eventsCollectionViaEventCustomerResult___==null)
				{
					_eventsCollectionViaEventCustomerResult___ = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaEventCustomerResult___.IsReadOnly=true;
				}
				return _eventsCollectionViaEventCustomerResult___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaHospitalPartnerCustomer_
		{
			get
			{
				if(_eventsCollectionViaHospitalPartnerCustomer_==null)
				{
					_eventsCollectionViaHospitalPartnerCustomer_ = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaHospitalPartnerCustomer_.IsReadOnly=true;
				}
				return _eventsCollectionViaHospitalPartnerCustomer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaEventCustomerResult_
		{
			get
			{
				if(_eventsCollectionViaEventCustomerResult_==null)
				{
					_eventsCollectionViaEventCustomerResult_ = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaEventCustomerResult_.IsReadOnly=true;
				}
				return _eventsCollectionViaEventCustomerResult_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaEventCustomerResult________
		{
			get
			{
				if(_eventsCollectionViaEventCustomerResult________==null)
				{
					_eventsCollectionViaEventCustomerResult________ = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaEventCustomerResult________.IsReadOnly=true;
				}
				return _eventsCollectionViaEventCustomerResult________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaEventCustomerResult______
		{
			get
			{
				if(_eventsCollectionViaEventCustomerResult______==null)
				{
					_eventsCollectionViaEventCustomerResult______ = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaEventCustomerResult______.IsReadOnly=true;
				}
				return _eventsCollectionViaEventCustomerResult______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaEventCustomerResult__
		{
			get
			{
				if(_eventsCollectionViaEventCustomerResult__==null)
				{
					_eventsCollectionViaEventCustomerResult__ = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaEventCustomerResult__.IsReadOnly=true;
				}
				return _eventsCollectionViaEventCustomerResult__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaEventCustomerResult_______
		{
			get
			{
				if(_eventsCollectionViaEventCustomerResult_______==null)
				{
					_eventsCollectionViaEventCustomerResult_______ = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaEventCustomerResult_______.IsReadOnly=true;
				}
				return _eventsCollectionViaEventCustomerResult_______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaEventPhysicianTest_
		{
			get
			{
				if(_eventsCollectionViaEventPhysicianTest_==null)
				{
					_eventsCollectionViaEventPhysicianTest_ = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaEventPhysicianTest_.IsReadOnly=true;
				}
				return _eventsCollectionViaEventPhysicianTest_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaEventPhysicianTest
		{
			get
			{
				if(_eventsCollectionViaEventPhysicianTest==null)
				{
					_eventsCollectionViaEventPhysicianTest = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaEventPhysicianTest.IsReadOnly=true;
				}
				return _eventsCollectionViaEventPhysicianTest;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaEventCustomerQuestionAnswer_
		{
			get
			{
				if(_eventsCollectionViaEventCustomerQuestionAnswer_==null)
				{
					_eventsCollectionViaEventCustomerQuestionAnswer_ = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaEventCustomerQuestionAnswer_.IsReadOnly=true;
				}
				return _eventsCollectionViaEventCustomerQuestionAnswer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaHospitalPartnerCustomer__
		{
			get
			{
				if(_eventsCollectionViaHospitalPartnerCustomer__==null)
				{
					_eventsCollectionViaHospitalPartnerCustomer__ = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaHospitalPartnerCustomer__.IsReadOnly=true;
				}
				return _eventsCollectionViaHospitalPartnerCustomer__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaEventCustomerResult
		{
			get
			{
				if(_eventsCollectionViaEventCustomerResult==null)
				{
					_eventsCollectionViaEventCustomerResult = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaEventCustomerResult.IsReadOnly=true;
				}
				return _eventsCollectionViaEventCustomerResult;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaHospitalPartnerCustomer
		{
			get
			{
				if(_eventsCollectionViaHospitalPartnerCustomer==null)
				{
					_eventsCollectionViaHospitalPartnerCustomer = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaHospitalPartnerCustomer.IsReadOnly=true;
				}
				return _eventsCollectionViaHospitalPartnerCustomer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaEventCustomerResult_____
		{
			get
			{
				if(_eventsCollectionViaEventCustomerResult_____==null)
				{
					_eventsCollectionViaEventCustomerResult_____ = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaEventCustomerResult_____.IsReadOnly=true;
				}
				return _eventsCollectionViaEventCustomerResult_____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaEventCustomers_
		{
			get
			{
				if(_eventsCollectionViaEventCustomers_==null)
				{
					_eventsCollectionViaEventCustomers_ = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaEventCustomers_.IsReadOnly=true;
				}
				return _eventsCollectionViaEventCustomers_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaEventAccountTestHcpcsCode
		{
			get
			{
				if(_eventsCollectionViaEventAccountTestHcpcsCode==null)
				{
					_eventsCollectionViaEventAccountTestHcpcsCode = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaEventAccountTestHcpcsCode.IsReadOnly=true;
				}
				return _eventsCollectionViaEventAccountTestHcpcsCode;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaCustomerRegistrationNotes
		{
			get
			{
				if(_eventsCollectionViaCustomerRegistrationNotes==null)
				{
					_eventsCollectionViaCustomerRegistrationNotes = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaCustomerRegistrationNotes.IsReadOnly=true;
				}
				return _eventsCollectionViaCustomerRegistrationNotes;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaCallQueueCustomer
		{
			get
			{
				if(_eventsCollectionViaCallQueueCustomer==null)
				{
					_eventsCollectionViaCallQueueCustomer = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaCallQueueCustomer.IsReadOnly=true;
				}
				return _eventsCollectionViaCallQueueCustomer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaEventAccountTestHcpcsCode_
		{
			get
			{
				if(_eventsCollectionViaEventAccountTestHcpcsCode_==null)
				{
					_eventsCollectionViaEventAccountTestHcpcsCode_ = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaEventAccountTestHcpcsCode_.IsReadOnly=true;
				}
				return _eventsCollectionViaEventAccountTestHcpcsCode_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaSeminars
		{
			get
			{
				if(_eventsCollectionViaSeminars==null)
				{
					_eventsCollectionViaSeminars = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaSeminars.IsReadOnly=true;
				}
				return _eventsCollectionViaSeminars;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaDisqualifiedTest_
		{
			get
			{
				if(_eventsCollectionViaDisqualifiedTest_==null)
				{
					_eventsCollectionViaDisqualifiedTest_ = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaDisqualifiedTest_.IsReadOnly=true;
				}
				return _eventsCollectionViaDisqualifiedTest_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaDisqualifiedTest
		{
			get
			{
				if(_eventsCollectionViaDisqualifiedTest==null)
				{
					_eventsCollectionViaDisqualifiedTest = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaDisqualifiedTest.IsReadOnly=true;
				}
				return _eventsCollectionViaDisqualifiedTest;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaCustomEventNotification
		{
			get
			{
				if(_eventsCollectionViaCustomEventNotification==null)
				{
					_eventsCollectionViaCustomEventNotification = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaCustomEventNotification.IsReadOnly=true;
				}
				return _eventsCollectionViaCustomEventNotification;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaCallQueueCustomer__
		{
			get
			{
				if(_eventsCollectionViaCallQueueCustomer__==null)
				{
					_eventsCollectionViaCallQueueCustomer__ = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaCallQueueCustomer__.IsReadOnly=true;
				}
				return _eventsCollectionViaCallQueueCustomer__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaCustomerClinicalQuestionAnswer
		{
			get
			{
				if(_eventsCollectionViaCustomerClinicalQuestionAnswer==null)
				{
					_eventsCollectionViaCustomerClinicalQuestionAnswer = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaCustomerClinicalQuestionAnswer.IsReadOnly=true;
				}
				return _eventsCollectionViaCustomerClinicalQuestionAnswer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaCustomerClinicalQuestionAnswer_
		{
			get
			{
				if(_eventsCollectionViaCustomerClinicalQuestionAnswer_==null)
				{
					_eventsCollectionViaCustomerClinicalQuestionAnswer_ = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaCustomerClinicalQuestionAnswer_.IsReadOnly=true;
				}
				return _eventsCollectionViaCustomerClinicalQuestionAnswer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaEventAppointmentChangeLog
		{
			get
			{
				if(_eventsCollectionViaEventAppointmentChangeLog==null)
				{
					_eventsCollectionViaEventAppointmentChangeLog = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaEventAppointmentChangeLog.IsReadOnly=true;
				}
				return _eventsCollectionViaEventAppointmentChangeLog;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaEventAppointmentChangeLog_
		{
			get
			{
				if(_eventsCollectionViaEventAppointmentChangeLog_==null)
				{
					_eventsCollectionViaEventAppointmentChangeLog_ = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaEventAppointmentChangeLog_.IsReadOnly=true;
				}
				return _eventsCollectionViaEventAppointmentChangeLog_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaCallQueueCustomer_
		{
			get
			{
				if(_eventsCollectionViaCallQueueCustomer_==null)
				{
					_eventsCollectionViaCallQueueCustomer_ = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaCallQueueCustomer_.IsReadOnly=true;
				}
				return _eventsCollectionViaCallQueueCustomer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaHostPayment
		{
			get
			{
				if(_eventsCollectionViaHostPayment==null)
				{
					_eventsCollectionViaHostPayment = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaHostPayment.IsReadOnly=true;
				}
				return _eventsCollectionViaHostPayment;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaEventStaffAssignment
		{
			get
			{
				if(_eventsCollectionViaEventStaffAssignment==null)
				{
					_eventsCollectionViaEventStaffAssignment = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaEventStaffAssignment.IsReadOnly=true;
				}
				return _eventsCollectionViaEventStaffAssignment;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventsEntity))]
		public virtual EntityCollection<EventsEntity> EventsCollectionViaEventAppointmentCancellationLog
		{
			get
			{
				if(_eventsCollectionViaEventAppointmentCancellationLog==null)
				{
					_eventsCollectionViaEventAppointmentCancellationLog = new EntityCollection<EventsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventsEntityFactory)));
					_eventsCollectionViaEventAppointmentCancellationLog.IsReadOnly=true;
				}
				return _eventsCollectionViaEventAppointmentCancellationLog;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventTypeEntity))]
		public virtual EntityCollection<EventTypeEntity> EventTypeCollectionViaEvents
		{
			get
			{
				if(_eventTypeCollectionViaEvents==null)
				{
					_eventTypeCollectionViaEvents = new EntityCollection<EventTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventTypeEntityFactory)));
					_eventTypeCollectionViaEvents.IsReadOnly=true;
				}
				return _eventTypeCollectionViaEvents;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventTypeEntity))]
		public virtual EntityCollection<EventTypeEntity> EventTypeCollectionViaEvents____
		{
			get
			{
				if(_eventTypeCollectionViaEvents____==null)
				{
					_eventTypeCollectionViaEvents____ = new EntityCollection<EventTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventTypeEntityFactory)));
					_eventTypeCollectionViaEvents____.IsReadOnly=true;
				}
				return _eventTypeCollectionViaEvents____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventTypeEntity))]
		public virtual EntityCollection<EventTypeEntity> EventTypeCollectionViaEvents___
		{
			get
			{
				if(_eventTypeCollectionViaEvents___==null)
				{
					_eventTypeCollectionViaEvents___ = new EntityCollection<EventTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventTypeEntityFactory)));
					_eventTypeCollectionViaEvents___.IsReadOnly=true;
				}
				return _eventTypeCollectionViaEvents___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventTypeEntity))]
		public virtual EntityCollection<EventTypeEntity> EventTypeCollectionViaEvents_
		{
			get
			{
				if(_eventTypeCollectionViaEvents_==null)
				{
					_eventTypeCollectionViaEvents_ = new EntityCollection<EventTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventTypeEntityFactory)));
					_eventTypeCollectionViaEvents_.IsReadOnly=true;
				}
				return _eventTypeCollectionViaEvents_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'EventTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(EventTypeEntity))]
		public virtual EntityCollection<EventTypeEntity> EventTypeCollectionViaEvents__
		{
			get
			{
				if(_eventTypeCollectionViaEvents__==null)
				{
					_eventTypeCollectionViaEvents__ = new EntityCollection<EventTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(EventTypeEntityFactory)));
					_eventTypeCollectionViaEvents__.IsReadOnly=true;
				}
				return _eventTypeCollectionViaEvents__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ExitInterviewQuestionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ExitInterviewQuestionEntity))]
		public virtual EntityCollection<ExitInterviewQuestionEntity> ExitInterviewQuestionCollectionViaExitInterviewAnswer_
		{
			get
			{
				if(_exitInterviewQuestionCollectionViaExitInterviewAnswer_==null)
				{
					_exitInterviewQuestionCollectionViaExitInterviewAnswer_ = new EntityCollection<ExitInterviewQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExitInterviewQuestionEntityFactory)));
					_exitInterviewQuestionCollectionViaExitInterviewAnswer_.IsReadOnly=true;
				}
				return _exitInterviewQuestionCollectionViaExitInterviewAnswer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ExitInterviewQuestionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ExitInterviewQuestionEntity))]
		public virtual EntityCollection<ExitInterviewQuestionEntity> ExitInterviewQuestionCollectionViaExitInterviewAnswer
		{
			get
			{
				if(_exitInterviewQuestionCollectionViaExitInterviewAnswer==null)
				{
					_exitInterviewQuestionCollectionViaExitInterviewAnswer = new EntityCollection<ExitInterviewQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExitInterviewQuestionEntityFactory)));
					_exitInterviewQuestionCollectionViaExitInterviewAnswer.IsReadOnly=true;
				}
				return _exitInterviewQuestionCollectionViaExitInterviewAnswer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ExportableReportsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ExportableReportsEntity))]
		public virtual EntityCollection<ExportableReportsEntity> ExportableReportsCollectionViaExportableReportsQueue
		{
			get
			{
				if(_exportableReportsCollectionViaExportableReportsQueue==null)
				{
					_exportableReportsCollectionViaExportableReportsQueue = new EntityCollection<ExportableReportsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ExportableReportsEntityFactory)));
					_exportableReportsCollectionViaExportableReportsQueue.IsReadOnly=true;
				}
				return _exportableReportsCollectionViaExportableReportsQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaCustomerActivityTypeUpload_
		{
			get
			{
				if(_fileCollectionViaCustomerActivityTypeUpload_==null)
				{
					_fileCollectionViaCustomerActivityTypeUpload_ = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaCustomerActivityTypeUpload_.IsReadOnly=true;
				}
				return _fileCollectionViaCustomerActivityTypeUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaCorporateUpload
		{
			get
			{
				if(_fileCollectionViaCorporateUpload==null)
				{
					_fileCollectionViaCorporateUpload = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaCorporateUpload.IsReadOnly=true;
				}
				return _fileCollectionViaCorporateUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaStaffEventScheduleUpload
		{
			get
			{
				if(_fileCollectionViaStaffEventScheduleUpload==null)
				{
					_fileCollectionViaStaffEventScheduleUpload = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaStaffEventScheduleUpload.IsReadOnly=true;
				}
				return _fileCollectionViaStaffEventScheduleUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaCorporateUpload_
		{
			get
			{
				if(_fileCollectionViaCorporateUpload_==null)
				{
					_fileCollectionViaCorporateUpload_ = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaCorporateUpload_.IsReadOnly=true;
				}
				return _fileCollectionViaCorporateUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaPhysicianRecordRequestSignature
		{
			get
			{
				if(_fileCollectionViaPhysicianRecordRequestSignature==null)
				{
					_fileCollectionViaPhysicianRecordRequestSignature = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaPhysicianRecordRequestSignature.IsReadOnly=true;
				}
				return _fileCollectionViaPhysicianRecordRequestSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaCustomerActivityTypeUpload
		{
			get
			{
				if(_fileCollectionViaCustomerActivityTypeUpload==null)
				{
					_fileCollectionViaCustomerActivityTypeUpload = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaCustomerActivityTypeUpload.IsReadOnly=true;
				}
				return _fileCollectionViaCustomerActivityTypeUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaRapsUpload_
		{
			get
			{
				if(_fileCollectionViaRapsUpload_==null)
				{
					_fileCollectionViaRapsUpload_ = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaRapsUpload_.IsReadOnly=true;
				}
				return _fileCollectionViaRapsUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaCallUpload_
		{
			get
			{
				if(_fileCollectionViaCallUpload_==null)
				{
					_fileCollectionViaCallUpload_ = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaCallUpload_.IsReadOnly=true;
				}
				return _fileCollectionViaCallUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaChaperoneSignature_
		{
			get
			{
				if(_fileCollectionViaChaperoneSignature_==null)
				{
					_fileCollectionViaChaperoneSignature_ = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaChaperoneSignature_.IsReadOnly=true;
				}
				return _fileCollectionViaChaperoneSignature_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaRapsUpload
		{
			get
			{
				if(_fileCollectionViaRapsUpload==null)
				{
					_fileCollectionViaRapsUpload = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaRapsUpload.IsReadOnly=true;
				}
				return _fileCollectionViaRapsUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaChaperoneSignature
		{
			get
			{
				if(_fileCollectionViaChaperoneSignature==null)
				{
					_fileCollectionViaChaperoneSignature = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaChaperoneSignature.IsReadOnly=true;
				}
				return _fileCollectionViaChaperoneSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaCorporateUpload__
		{
			get
			{
				if(_fileCollectionViaCorporateUpload__==null)
				{
					_fileCollectionViaCorporateUpload__ = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaCorporateUpload__.IsReadOnly=true;
				}
				return _fileCollectionViaCorporateUpload__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaCallUpload
		{
			get
			{
				if(_fileCollectionViaCallUpload==null)
				{
					_fileCollectionViaCallUpload = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaCallUpload.IsReadOnly=true;
				}
				return _fileCollectionViaCallUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaHealthPlanCriteriaAssignmentUpload
		{
			get
			{
				if(_fileCollectionViaHealthPlanCriteriaAssignmentUpload==null)
				{
					_fileCollectionViaHealthPlanCriteriaAssignmentUpload = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaHealthPlanCriteriaAssignmentUpload.IsReadOnly=true;
				}
				return _fileCollectionViaHealthPlanCriteriaAssignmentUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaParticipationConsentSignature_
		{
			get
			{
				if(_fileCollectionViaParticipationConsentSignature_==null)
				{
					_fileCollectionViaParticipationConsentSignature_ = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaParticipationConsentSignature_.IsReadOnly=true;
				}
				return _fileCollectionViaParticipationConsentSignature_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaMergeCustomerUpload
		{
			get
			{
				if(_fileCollectionViaMergeCustomerUpload==null)
				{
					_fileCollectionViaMergeCustomerUpload = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaMergeCustomerUpload.IsReadOnly=true;
				}
				return _fileCollectionViaMergeCustomerUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaMedicationUpload_
		{
			get
			{
				if(_fileCollectionViaMedicationUpload_==null)
				{
					_fileCollectionViaMedicationUpload_ = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaMedicationUpload_.IsReadOnly=true;
				}
				return _fileCollectionViaMedicationUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaMedicationUpload
		{
			get
			{
				if(_fileCollectionViaMedicationUpload==null)
				{
					_fileCollectionViaMedicationUpload = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaMedicationUpload.IsReadOnly=true;
				}
				return _fileCollectionViaMedicationUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaFluConsentSignature_
		{
			get
			{
				if(_fileCollectionViaFluConsentSignature_==null)
				{
					_fileCollectionViaFluConsentSignature_ = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaFluConsentSignature_.IsReadOnly=true;
				}
				return _fileCollectionViaFluConsentSignature_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaFluConsentSignature
		{
			get
			{
				if(_fileCollectionViaFluConsentSignature==null)
				{
					_fileCollectionViaFluConsentSignature = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaFluConsentSignature.IsReadOnly=true;
				}
				return _fileCollectionViaFluConsentSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaMergeCustomerUpload_
		{
			get
			{
				if(_fileCollectionViaMergeCustomerUpload_==null)
				{
					_fileCollectionViaMergeCustomerUpload_ = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaMergeCustomerUpload_.IsReadOnly=true;
				}
				return _fileCollectionViaMergeCustomerUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaExitInterviewSignature
		{
			get
			{
				if(_fileCollectionViaExitInterviewSignature==null)
				{
					_fileCollectionViaExitInterviewSignature = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaExitInterviewSignature.IsReadOnly=true;
				}
				return _fileCollectionViaExitInterviewSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaEventCustomerGiftCard_
		{
			get
			{
				if(_fileCollectionViaEventCustomerGiftCard_==null)
				{
					_fileCollectionViaEventCustomerGiftCard_ = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaEventCustomerGiftCard_.IsReadOnly=true;
				}
				return _fileCollectionViaEventCustomerGiftCard_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaEventCustomerGiftCard
		{
			get
			{
				if(_fileCollectionViaEventCustomerGiftCard==null)
				{
					_fileCollectionViaEventCustomerGiftCard = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaEventCustomerGiftCard.IsReadOnly=true;
				}
				return _fileCollectionViaEventCustomerGiftCard;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaEligibilityUpload
		{
			get
			{
				if(_fileCollectionViaEligibilityUpload==null)
				{
					_fileCollectionViaEligibilityUpload = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaEligibilityUpload.IsReadOnly=true;
				}
				return _fileCollectionViaEligibilityUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaEligibilityUpload_
		{
			get
			{
				if(_fileCollectionViaEligibilityUpload_==null)
				{
					_fileCollectionViaEligibilityUpload_ = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaEligibilityUpload_.IsReadOnly=true;
				}
				return _fileCollectionViaEligibilityUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaExportableReportsQueue
		{
			get
			{
				if(_fileCollectionViaExportableReportsQueue==null)
				{
					_fileCollectionViaExportableReportsQueue = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaExportableReportsQueue.IsReadOnly=true;
				}
				return _fileCollectionViaExportableReportsQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaSuspectConditionUpload
		{
			get
			{
				if(_fileCollectionViaSuspectConditionUpload==null)
				{
					_fileCollectionViaSuspectConditionUpload = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaSuspectConditionUpload.IsReadOnly=true;
				}
				return _fileCollectionViaSuspectConditionUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaStaffEventScheduleUpload_
		{
			get
			{
				if(_fileCollectionViaStaffEventScheduleUpload_==null)
				{
					_fileCollectionViaStaffEventScheduleUpload_ = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaStaffEventScheduleUpload_.IsReadOnly=true;
				}
				return _fileCollectionViaStaffEventScheduleUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaParticipationConsentSignature
		{
			get
			{
				if(_fileCollectionViaParticipationConsentSignature==null)
				{
					_fileCollectionViaParticipationConsentSignature = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaParticipationConsentSignature.IsReadOnly=true;
				}
				return _fileCollectionViaParticipationConsentSignature;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaCustomerPhoneNumberUpdateUpload_
		{
			get
			{
				if(_fileCollectionViaCustomerPhoneNumberUpdateUpload_==null)
				{
					_fileCollectionViaCustomerPhoneNumberUpdateUpload_ = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaCustomerPhoneNumberUpdateUpload_.IsReadOnly=true;
				}
				return _fileCollectionViaCustomerPhoneNumberUpdateUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaCustomerPhoneNumberUpdateUpload
		{
			get
			{
				if(_fileCollectionViaCustomerPhoneNumberUpdateUpload==null)
				{
					_fileCollectionViaCustomerPhoneNumberUpdateUpload = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaCustomerPhoneNumberUpdateUpload.IsReadOnly=true;
				}
				return _fileCollectionViaCustomerPhoneNumberUpdateUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FileEntity))]
		public virtual EntityCollection<FileEntity> FileCollectionViaSuspectConditionUpload_
		{
			get
			{
				if(_fileCollectionViaSuspectConditionUpload_==null)
				{
					_fileCollectionViaSuspectConditionUpload_ = new EntityCollection<FileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FileEntityFactory)));
					_fileCollectionViaSuspectConditionUpload_.IsReadOnly=true;
				}
				return _fileCollectionViaSuspectConditionUpload_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FluConsentQuestionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FluConsentQuestionEntity))]
		public virtual EntityCollection<FluConsentQuestionEntity> FluConsentQuestionCollectionViaFluConsentAnswer
		{
			get
			{
				if(_fluConsentQuestionCollectionViaFluConsentAnswer==null)
				{
					_fluConsentQuestionCollectionViaFluConsentAnswer = new EntityCollection<FluConsentQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentQuestionEntityFactory)));
					_fluConsentQuestionCollectionViaFluConsentAnswer.IsReadOnly=true;
				}
				return _fluConsentQuestionCollectionViaFluConsentAnswer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'FluConsentQuestionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(FluConsentQuestionEntity))]
		public virtual EntityCollection<FluConsentQuestionEntity> FluConsentQuestionCollectionViaFluConsentAnswer_
		{
			get
			{
				if(_fluConsentQuestionCollectionViaFluConsentAnswer_==null)
				{
					_fluConsentQuestionCollectionViaFluConsentAnswer_ = new EntityCollection<FluConsentQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(FluConsentQuestionEntityFactory)));
					_fluConsentQuestionCollectionViaFluConsentAnswer_.IsReadOnly=true;
				}
				return _fluConsentQuestionCollectionViaFluConsentAnswer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GcNotGivenReasonEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GcNotGivenReasonEntity))]
		public virtual EntityCollection<GcNotGivenReasonEntity> GcNotGivenReasonCollectionViaEventCustomers
		{
			get
			{
				if(_gcNotGivenReasonCollectionViaEventCustomers==null)
				{
					_gcNotGivenReasonCollectionViaEventCustomers = new EntityCollection<GcNotGivenReasonEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GcNotGivenReasonEntityFactory)));
					_gcNotGivenReasonCollectionViaEventCustomers.IsReadOnly=true;
				}
				return _gcNotGivenReasonCollectionViaEventCustomers;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'GcNotGivenReasonEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(GcNotGivenReasonEntity))]
		public virtual EntityCollection<GcNotGivenReasonEntity> GcNotGivenReasonCollectionViaEventCustomers_
		{
			get
			{
				if(_gcNotGivenReasonCollectionViaEventCustomers_==null)
				{
					_gcNotGivenReasonCollectionViaEventCustomers_ = new EntityCollection<GcNotGivenReasonEntity>(EntityFactoryCache2.GetEntityFactory(typeof(GcNotGivenReasonEntityFactory)));
					_gcNotGivenReasonCollectionViaEventCustomers_.IsReadOnly=true;
				}
				return _gcNotGivenReasonCollectionViaEventCustomers_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HafTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HafTemplateEntity))]
		public virtual EntityCollection<HafTemplateEntity> HafTemplateCollectionViaClinicalTestQualificationCriteria
		{
			get
			{
				if(_hafTemplateCollectionViaClinicalTestQualificationCriteria==null)
				{
					_hafTemplateCollectionViaClinicalTestQualificationCriteria = new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory)));
					_hafTemplateCollectionViaClinicalTestQualificationCriteria.IsReadOnly=true;
				}
				return _hafTemplateCollectionViaClinicalTestQualificationCriteria;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HafTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HafTemplateEntity))]
		public virtual EntityCollection<HafTemplateEntity> HafTemplateCollectionViaEvents___
		{
			get
			{
				if(_hafTemplateCollectionViaEvents___==null)
				{
					_hafTemplateCollectionViaEvents___ = new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory)));
					_hafTemplateCollectionViaEvents___.IsReadOnly=true;
				}
				return _hafTemplateCollectionViaEvents___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HafTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HafTemplateEntity))]
		public virtual EntityCollection<HafTemplateEntity> HafTemplateCollectionViaEvents
		{
			get
			{
				if(_hafTemplateCollectionViaEvents==null)
				{
					_hafTemplateCollectionViaEvents = new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory)));
					_hafTemplateCollectionViaEvents.IsReadOnly=true;
				}
				return _hafTemplateCollectionViaEvents;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HafTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HafTemplateEntity))]
		public virtual EntityCollection<HafTemplateEntity> HafTemplateCollectionViaEvents____
		{
			get
			{
				if(_hafTemplateCollectionViaEvents____==null)
				{
					_hafTemplateCollectionViaEvents____ = new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory)));
					_hafTemplateCollectionViaEvents____.IsReadOnly=true;
				}
				return _hafTemplateCollectionViaEvents____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HafTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HafTemplateEntity))]
		public virtual EntityCollection<HafTemplateEntity> HafTemplateCollectionViaEvents_
		{
			get
			{
				if(_hafTemplateCollectionViaEvents_==null)
				{
					_hafTemplateCollectionViaEvents_ = new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory)));
					_hafTemplateCollectionViaEvents_.IsReadOnly=true;
				}
				return _hafTemplateCollectionViaEvents_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HafTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HafTemplateEntity))]
		public virtual EntityCollection<HafTemplateEntity> HafTemplateCollectionViaCustomerClinicalQuestionAnswer
		{
			get
			{
				if(_hafTemplateCollectionViaCustomerClinicalQuestionAnswer==null)
				{
					_hafTemplateCollectionViaCustomerClinicalQuestionAnswer = new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory)));
					_hafTemplateCollectionViaCustomerClinicalQuestionAnswer.IsReadOnly=true;
				}
				return _hafTemplateCollectionViaCustomerClinicalQuestionAnswer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HafTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HafTemplateEntity))]
		public virtual EntityCollection<HafTemplateEntity> HafTemplateCollectionViaEvents__
		{
			get
			{
				if(_hafTemplateCollectionViaEvents__==null)
				{
					_hafTemplateCollectionViaEvents__ = new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory)));
					_hafTemplateCollectionViaEvents__.IsReadOnly=true;
				}
				return _hafTemplateCollectionViaEvents__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HafTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HafTemplateEntity))]
		public virtual EntityCollection<HafTemplateEntity> HafTemplateCollectionViaCustomerClinicalQuestionAnswer_
		{
			get
			{
				if(_hafTemplateCollectionViaCustomerClinicalQuestionAnswer_==null)
				{
					_hafTemplateCollectionViaCustomerClinicalQuestionAnswer_ = new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory)));
					_hafTemplateCollectionViaCustomerClinicalQuestionAnswer_.IsReadOnly=true;
				}
				return _hafTemplateCollectionViaCustomerClinicalQuestionAnswer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HafTemplateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HafTemplateEntity))]
		public virtual EntityCollection<HafTemplateEntity> HafTemplateCollectionViaClinicalTestQualificationCriteria_
		{
			get
			{
				if(_hafTemplateCollectionViaClinicalTestQualificationCriteria_==null)
				{
					_hafTemplateCollectionViaClinicalTestQualificationCriteria_ = new EntityCollection<HafTemplateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HafTemplateEntityFactory)));
					_hafTemplateCollectionViaClinicalTestQualificationCriteria_.IsReadOnly=true;
				}
				return _hafTemplateCollectionViaClinicalTestQualificationCriteria_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HcpcsCodeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HcpcsCodeEntity))]
		public virtual EntityCollection<HcpcsCodeEntity> HcpcsCodeCollectionViaTestHcpcsCode_
		{
			get
			{
				if(_hcpcsCodeCollectionViaTestHcpcsCode_==null)
				{
					_hcpcsCodeCollectionViaTestHcpcsCode_ = new EntityCollection<HcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HcpcsCodeEntityFactory)));
					_hcpcsCodeCollectionViaTestHcpcsCode_.IsReadOnly=true;
				}
				return _hcpcsCodeCollectionViaTestHcpcsCode_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HcpcsCodeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HcpcsCodeEntity))]
		public virtual EntityCollection<HcpcsCodeEntity> HcpcsCodeCollectionViaTestHcpcsCode
		{
			get
			{
				if(_hcpcsCodeCollectionViaTestHcpcsCode==null)
				{
					_hcpcsCodeCollectionViaTestHcpcsCode = new EntityCollection<HcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HcpcsCodeEntityFactory)));
					_hcpcsCodeCollectionViaTestHcpcsCode.IsReadOnly=true;
				}
				return _hcpcsCodeCollectionViaTestHcpcsCode;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HealthPlanCallQueueCriteriaEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HealthPlanCallQueueCriteriaEntity))]
		public virtual EntityCollection<HealthPlanCallQueueCriteriaEntity> HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload
		{
			get
			{
				if(_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload==null)
				{
					_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload = new EntityCollection<HealthPlanCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCallQueueCriteriaEntityFactory)));
					_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload.IsReadOnly=true;
				}
				return _healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignmentUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HealthPlanCallQueueCriteriaEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HealthPlanCallQueueCriteriaEntity))]
		public virtual EntityCollection<HealthPlanCallQueueCriteriaEntity> HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment
		{
			get
			{
				if(_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment==null)
				{
					_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment = new EntityCollection<HealthPlanCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCallQueueCriteriaEntityFactory)));
					_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment.IsReadOnly=true;
				}
				return _healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HealthPlanCallQueueCriteriaEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HealthPlanCallQueueCriteriaEntity))]
		public virtual EntityCollection<HealthPlanCallQueueCriteriaEntity> HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_
		{
			get
			{
				if(_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_==null)
				{
					_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_ = new EntityCollection<HealthPlanCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCallQueueCriteriaEntityFactory)));
					_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_.IsReadOnly=true;
				}
				return _healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaTeamAssignment_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HealthPlanCallQueueCriteriaEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HealthPlanCallQueueCriteriaEntity))]
		public virtual EntityCollection<HealthPlanCallQueueCriteriaEntity> HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment
		{
			get
			{
				if(_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment==null)
				{
					_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment = new EntityCollection<HealthPlanCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCallQueueCriteriaEntityFactory)));
					_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment.IsReadOnly=true;
				}
				return _healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HealthPlanCallQueueCriteriaEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HealthPlanCallQueueCriteriaEntity))]
		public virtual EntityCollection<HealthPlanCallQueueCriteriaEntity> HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__
		{
			get
			{
				if(_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__==null)
				{
					_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__ = new EntityCollection<HealthPlanCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCallQueueCriteriaEntityFactory)));
					_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__.IsReadOnly=true;
				}
				return _healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HealthPlanCallQueueCriteriaEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HealthPlanCallQueueCriteriaEntity))]
		public virtual EntityCollection<HealthPlanCallQueueCriteriaEntity> HealthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_
		{
			get
			{
				if(_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_==null)
				{
					_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_ = new EntityCollection<HealthPlanCallQueueCriteriaEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HealthPlanCallQueueCriteriaEntityFactory)));
					_healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_.IsReadOnly=true;
				}
				return _healthPlanCallQueueCriteriaCollectionViaHealthPlanCriteriaAssignment_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HospitalFacilityEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HospitalFacilityEntity))]
		public virtual EntityCollection<HospitalFacilityEntity> HospitalFacilityCollectionViaEventCustomers
		{
			get
			{
				if(_hospitalFacilityCollectionViaEventCustomers==null)
				{
					_hospitalFacilityCollectionViaEventCustomers = new EntityCollection<HospitalFacilityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HospitalFacilityEntityFactory)));
					_hospitalFacilityCollectionViaEventCustomers.IsReadOnly=true;
				}
				return _hospitalFacilityCollectionViaEventCustomers;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HospitalFacilityEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HospitalFacilityEntity))]
		public virtual EntityCollection<HospitalFacilityEntity> HospitalFacilityCollectionViaEventCustomers_
		{
			get
			{
				if(_hospitalFacilityCollectionViaEventCustomers_==null)
				{
					_hospitalFacilityCollectionViaEventCustomers_ = new EntityCollection<HospitalFacilityEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HospitalFacilityEntityFactory)));
					_hospitalFacilityCollectionViaEventCustomers_.IsReadOnly=true;
				}
				return _hospitalFacilityCollectionViaEventCustomers_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'HostPaymentEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(HostPaymentEntity))]
		public virtual EntityCollection<HostPaymentEntity> HostPaymentCollectionViaHostPaymentTransaction
		{
			get
			{
				if(_hostPaymentCollectionViaHostPaymentTransaction==null)
				{
					_hostPaymentCollectionViaHostPaymentTransaction = new EntityCollection<HostPaymentEntity>(EntityFactoryCache2.GetEntityFactory(typeof(HostPaymentEntityFactory)));
					_hostPaymentCollectionViaHostPaymentTransaction.IsReadOnly=true;
				}
				return _hostPaymentCollectionViaHostPaymentTransaction;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'IcdCodesEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(IcdCodesEntity))]
		public virtual EntityCollection<IcdCodesEntity> IcdCodesCollectionViaCustomerIcdCode
		{
			get
			{
				if(_icdCodesCollectionViaCustomerIcdCode==null)
				{
					_icdCodesCollectionViaCustomerIcdCode = new EntityCollection<IcdCodesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(IcdCodesEntityFactory)));
					_icdCodesCollectionViaCustomerIcdCode.IsReadOnly=true;
				}
				return _icdCodesCollectionViaCustomerIcdCode;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'InsuranceCompanyEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(InsuranceCompanyEntity))]
		public virtual EntityCollection<InsuranceCompanyEntity> InsuranceCompanyCollectionViaEligibility
		{
			get
			{
				if(_insuranceCompanyCollectionViaEligibility==null)
				{
					_insuranceCompanyCollectionViaEligibility = new EntityCollection<InsuranceCompanyEntity>(EntityFactoryCache2.GetEntityFactory(typeof(InsuranceCompanyEntityFactory)));
					_insuranceCompanyCollectionViaEligibility.IsReadOnly=true;
				}
				return _insuranceCompanyCollectionViaEligibility;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LanguageEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LanguageEntity))]
		public virtual EntityCollection<LanguageEntity> LanguageCollectionViaHealthPlanCallQueueCriteria
		{
			get
			{
				if(_languageCollectionViaHealthPlanCallQueueCriteria==null)
				{
					_languageCollectionViaHealthPlanCallQueueCriteria = new EntityCollection<LanguageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LanguageEntityFactory)));
					_languageCollectionViaHealthPlanCallQueueCriteria.IsReadOnly=true;
				}
				return _languageCollectionViaHealthPlanCallQueueCriteria;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LanguageEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LanguageEntity))]
		public virtual EntityCollection<LanguageEntity> LanguageCollectionViaCallQueueCustomer_
		{
			get
			{
				if(_languageCollectionViaCallQueueCustomer_==null)
				{
					_languageCollectionViaCallQueueCustomer_ = new EntityCollection<LanguageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LanguageEntityFactory)));
					_languageCollectionViaCallQueueCustomer_.IsReadOnly=true;
				}
				return _languageCollectionViaCallQueueCustomer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LanguageEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LanguageEntity))]
		public virtual EntityCollection<LanguageEntity> LanguageCollectionViaCallQueueCustomer__
		{
			get
			{
				if(_languageCollectionViaCallQueueCustomer__==null)
				{
					_languageCollectionViaCallQueueCustomer__ = new EntityCollection<LanguageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LanguageEntityFactory)));
					_languageCollectionViaCallQueueCustomer__.IsReadOnly=true;
				}
				return _languageCollectionViaCallQueueCustomer__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LanguageEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LanguageEntity))]
		public virtual EntityCollection<LanguageEntity> LanguageCollectionViaCallQueueCustomer
		{
			get
			{
				if(_languageCollectionViaCallQueueCustomer==null)
				{
					_languageCollectionViaCallQueueCustomer = new EntityCollection<LanguageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LanguageEntityFactory)));
					_languageCollectionViaCallQueueCustomer.IsReadOnly=true;
				}
				return _languageCollectionViaCallQueueCustomer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LanguageEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LanguageEntity))]
		public virtual EntityCollection<LanguageEntity> LanguageCollectionViaHealthPlanCallQueueCriteria_
		{
			get
			{
				if(_languageCollectionViaHealthPlanCallQueueCriteria_==null)
				{
					_languageCollectionViaHealthPlanCallQueueCriteria_ = new EntityCollection<LanguageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LanguageEntityFactory)));
					_languageCollectionViaHealthPlanCallQueueCriteria_.IsReadOnly=true;
				}
				return _languageCollectionViaHealthPlanCallQueueCriteria_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaUncontactedCustomerCallQueue
		{
			get
			{
				if(_lookupCollectionViaUncontactedCustomerCallQueue==null)
				{
					_lookupCollectionViaUncontactedCustomerCallQueue = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaUncontactedCustomerCallQueue.IsReadOnly=true;
				}
				return _lookupCollectionViaUncontactedCustomerCallQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaFillEventCallQueue
		{
			get
			{
				if(_lookupCollectionViaFillEventCallQueue==null)
				{
					_lookupCollectionViaFillEventCallQueue = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaFillEventCallQueue.IsReadOnly=true;
				}
				return _lookupCollectionViaFillEventCallQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaTestPerformedExternally_
		{
			get
			{
				if(_lookupCollectionViaTestPerformedExternally_==null)
				{
					_lookupCollectionViaTestPerformedExternally_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaTestPerformedExternally_.IsReadOnly=true;
				}
				return _lookupCollectionViaTestPerformedExternally_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaLanguageBarrierCallQueue
		{
			get
			{
				if(_lookupCollectionViaLanguageBarrierCallQueue==null)
				{
					_lookupCollectionViaLanguageBarrierCallQueue = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaLanguageBarrierCallQueue.IsReadOnly=true;
				}
				return _lookupCollectionViaLanguageBarrierCallQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaMedicationUpload
		{
			get
			{
				if(_lookupCollectionViaMedicationUpload==null)
				{
					_lookupCollectionViaMedicationUpload = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaMedicationUpload.IsReadOnly=true;
				}
				return _lookupCollectionViaMedicationUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaHostFacilityRanking
		{
			get
			{
				if(_lookupCollectionViaHostFacilityRanking==null)
				{
					_lookupCollectionViaHostFacilityRanking = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaHostFacilityRanking.IsReadOnly=true;
				}
				return _lookupCollectionViaHostFacilityRanking;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaHostFacilityRanking_
		{
			get
			{
				if(_lookupCollectionViaHostFacilityRanking_==null)
				{
					_lookupCollectionViaHostFacilityRanking_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaHostFacilityRanking_.IsReadOnly=true;
				}
				return _lookupCollectionViaHostFacilityRanking_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaMailRoundCallQueue
		{
			get
			{
				if(_lookupCollectionViaMailRoundCallQueue==null)
				{
					_lookupCollectionViaMailRoundCallQueue = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaMailRoundCallQueue.IsReadOnly=true;
				}
				return _lookupCollectionViaMailRoundCallQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaHostPaymentTransaction_
		{
			get
			{
				if(_lookupCollectionViaHostPaymentTransaction_==null)
				{
					_lookupCollectionViaHostPaymentTransaction_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaHostPaymentTransaction_.IsReadOnly=true;
				}
				return _lookupCollectionViaHostPaymentTransaction_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaHostPayment
		{
			get
			{
				if(_lookupCollectionViaHostPayment==null)
				{
					_lookupCollectionViaHostPayment = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaHostPayment.IsReadOnly=true;
				}
				return _lookupCollectionViaHostPayment;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaHostPaymentTransaction
		{
			get
			{
				if(_lookupCollectionViaHostPaymentTransaction==null)
				{
					_lookupCollectionViaHostPaymentTransaction = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaHostPaymentTransaction.IsReadOnly=true;
				}
				return _lookupCollectionViaHostPaymentTransaction;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaHostPayment_
		{
			get
			{
				if(_lookupCollectionViaHostPayment_==null)
				{
					_lookupCollectionViaHostPayment_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaHostPayment_.IsReadOnly=true;
				}
				return _lookupCollectionViaHostPayment_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaKynLabValues
		{
			get
			{
				if(_lookupCollectionViaKynLabValues==null)
				{
					_lookupCollectionViaKynLabValues = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaKynLabValues.IsReadOnly=true;
				}
				return _lookupCollectionViaKynLabValues;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaExportableReportsQueue
		{
			get
			{
				if(_lookupCollectionViaExportableReportsQueue==null)
				{
					_lookupCollectionViaExportableReportsQueue = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaExportableReportsQueue.IsReadOnly=true;
				}
				return _lookupCollectionViaExportableReportsQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaFile
		{
			get
			{
				if(_lookupCollectionViaFile==null)
				{
					_lookupCollectionViaFile = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaFile.IsReadOnly=true;
				}
				return _lookupCollectionViaFile;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaTestPerformedExternally
		{
			get
			{
				if(_lookupCollectionViaTestPerformedExternally==null)
				{
					_lookupCollectionViaTestPerformedExternally = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaTestPerformedExternally.IsReadOnly=true;
				}
				return _lookupCollectionViaTestPerformedExternally;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaKynLabValues_
		{
			get
			{
				if(_lookupCollectionViaKynLabValues_==null)
				{
					_lookupCollectionViaKynLabValues_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaKynLabValues_.IsReadOnly=true;
				}
				return _lookupCollectionViaKynLabValues_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaPreQualificationQuestion
		{
			get
			{
				if(_lookupCollectionViaPreQualificationQuestion==null)
				{
					_lookupCollectionViaPreQualificationQuestion = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaPreQualificationQuestion.IsReadOnly=true;
				}
				return _lookupCollectionViaPreQualificationQuestion;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaPrintOrderItemTracking__
		{
			get
			{
				if(_lookupCollectionViaPrintOrderItemTracking__==null)
				{
					_lookupCollectionViaPrintOrderItemTracking__ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaPrintOrderItemTracking__.IsReadOnly=true;
				}
				return _lookupCollectionViaPrintOrderItemTracking__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaPcpDisposition_
		{
			get
			{
				if(_lookupCollectionViaPcpDisposition_==null)
				{
					_lookupCollectionViaPcpDisposition_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaPcpDisposition_.IsReadOnly=true;
				}
				return _lookupCollectionViaPcpDisposition_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaPcpAppointment_
		{
			get
			{
				if(_lookupCollectionViaPcpAppointment_==null)
				{
					_lookupCollectionViaPcpAppointment_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaPcpAppointment_.IsReadOnly=true;
				}
				return _lookupCollectionViaPcpAppointment_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaPcpDisposition
		{
			get
			{
				if(_lookupCollectionViaPcpDisposition==null)
				{
					_lookupCollectionViaPcpDisposition = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaPcpDisposition.IsReadOnly=true;
				}
				return _lookupCollectionViaPcpDisposition;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaRefundRequest
		{
			get
			{
				if(_lookupCollectionViaRefundRequest==null)
				{
					_lookupCollectionViaRefundRequest = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaRefundRequest.IsReadOnly=true;
				}
				return _lookupCollectionViaRefundRequest;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaRapsUpload
		{
			get
			{
				if(_lookupCollectionViaRapsUpload==null)
				{
					_lookupCollectionViaRapsUpload = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaRapsUpload.IsReadOnly=true;
				}
				return _lookupCollectionViaRapsUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaRefundRequest_
		{
			get
			{
				if(_lookupCollectionViaRefundRequest_==null)
				{
					_lookupCollectionViaRefundRequest_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaRefundRequest_.IsReadOnly=true;
				}
				return _lookupCollectionViaRefundRequest_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaPrintOrderItemTracking___
		{
			get
			{
				if(_lookupCollectionViaPrintOrderItemTracking___==null)
				{
					_lookupCollectionViaPrintOrderItemTracking___ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaPrintOrderItemTracking___.IsReadOnly=true;
				}
				return _lookupCollectionViaPrintOrderItemTracking___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaProspectCustomer
		{
			get
			{
				if(_lookupCollectionViaProspectCustomer==null)
				{
					_lookupCollectionViaProspectCustomer = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaProspectCustomer.IsReadOnly=true;
				}
				return _lookupCollectionViaProspectCustomer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaPcpAppointment
		{
			get
			{
				if(_lookupCollectionViaPcpAppointment==null)
				{
					_lookupCollectionViaPcpAppointment = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaPcpAppointment.IsReadOnly=true;
				}
				return _lookupCollectionViaPcpAppointment;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaHafTemplate
		{
			get
			{
				if(_lookupCollectionViaHafTemplate==null)
				{
					_lookupCollectionViaHafTemplate = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaHafTemplate.IsReadOnly=true;
				}
				return _lookupCollectionViaHafTemplate;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaHafTemplate_
		{
			get
			{
				if(_lookupCollectionViaHafTemplate_==null)
				{
					_lookupCollectionViaHafTemplate_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaHafTemplate_.IsReadOnly=true;
				}
				return _lookupCollectionViaHafTemplate_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaSuspectConditionUpload
		{
			get
			{
				if(_lookupCollectionViaSuspectConditionUpload==null)
				{
					_lookupCollectionViaSuspectConditionUpload = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaSuspectConditionUpload.IsReadOnly=true;
				}
				return _lookupCollectionViaSuspectConditionUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaMergeCustomerUpload
		{
			get
			{
				if(_lookupCollectionViaMergeCustomerUpload==null)
				{
					_lookupCollectionViaMergeCustomerUpload = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaMergeCustomerUpload.IsReadOnly=true;
				}
				return _lookupCollectionViaMergeCustomerUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaNoShowCallQueue
		{
			get
			{
				if(_lookupCollectionViaNoShowCallQueue==null)
				{
					_lookupCollectionViaNoShowCallQueue = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaNoShowCallQueue.IsReadOnly=true;
				}
				return _lookupCollectionViaNoShowCallQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaStaffEventScheduleUpload
		{
			get
			{
				if(_lookupCollectionViaStaffEventScheduleUpload==null)
				{
					_lookupCollectionViaStaffEventScheduleUpload = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaStaffEventScheduleUpload.IsReadOnly=true;
				}
				return _lookupCollectionViaStaffEventScheduleUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaHealthPlanRevenue
		{
			get
			{
				if(_lookupCollectionViaHealthPlanRevenue==null)
				{
					_lookupCollectionViaHealthPlanRevenue = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaHealthPlanRevenue.IsReadOnly=true;
				}
				return _lookupCollectionViaHealthPlanRevenue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaHealthPlanRevenue_
		{
			get
			{
				if(_lookupCollectionViaHealthPlanRevenue_==null)
				{
					_lookupCollectionViaHealthPlanRevenue_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaHealthPlanRevenue_.IsReadOnly=true;
				}
				return _lookupCollectionViaHealthPlanRevenue_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaHafTemplate__
		{
			get
			{
				if(_lookupCollectionViaHafTemplate__==null)
				{
					_lookupCollectionViaHafTemplate__ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaHafTemplate__.IsReadOnly=true;
				}
				return _lookupCollectionViaHafTemplate__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaHafTemplate___
		{
			get
			{
				if(_lookupCollectionViaHafTemplate___==null)
				{
					_lookupCollectionViaHafTemplate___ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaHafTemplate___.IsReadOnly=true;
				}
				return _lookupCollectionViaHafTemplate___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCustomerProfileHistory___
		{
			get
			{
				if(_lookupCollectionViaCustomerProfileHistory___==null)
				{
					_lookupCollectionViaCustomerProfileHistory___ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCustomerProfileHistory___.IsReadOnly=true;
				}
				return _lookupCollectionViaCustomerProfileHistory___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCustomerProfileHistory__
		{
			get
			{
				if(_lookupCollectionViaCustomerProfileHistory__==null)
				{
					_lookupCollectionViaCustomerProfileHistory__ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCustomerProfileHistory__.IsReadOnly=true;
				}
				return _lookupCollectionViaCustomerProfileHistory__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCustomerProfileHistory
		{
			get
			{
				if(_lookupCollectionViaCustomerProfileHistory==null)
				{
					_lookupCollectionViaCustomerProfileHistory = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCustomerProfileHistory.IsReadOnly=true;
				}
				return _lookupCollectionViaCustomerProfileHistory;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCustomEventNotification
		{
			get
			{
				if(_lookupCollectionViaCustomEventNotification==null)
				{
					_lookupCollectionViaCustomEventNotification = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCustomEventNotification.IsReadOnly=true;
				}
				return _lookupCollectionViaCustomEventNotification;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCustomerRegistrationNotes
		{
			get
			{
				if(_lookupCollectionViaCustomerRegistrationNotes==null)
				{
					_lookupCollectionViaCustomerRegistrationNotes = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCustomerRegistrationNotes.IsReadOnly=true;
				}
				return _lookupCollectionViaCustomerRegistrationNotes;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCustomerProfileHistory_
		{
			get
			{
				if(_lookupCollectionViaCustomerProfileHistory_==null)
				{
					_lookupCollectionViaCustomerProfileHistory_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCustomerProfileHistory_.IsReadOnly=true;
				}
				return _lookupCollectionViaCustomerProfileHistory_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCustomerPrimaryCarePhysician__
		{
			get
			{
				if(_lookupCollectionViaCustomerPrimaryCarePhysician__==null)
				{
					_lookupCollectionViaCustomerPrimaryCarePhysician__ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCustomerPrimaryCarePhysician__.IsReadOnly=true;
				}
				return _lookupCollectionViaCustomerPrimaryCarePhysician__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCustomerEventTestState__
		{
			get
			{
				if(_lookupCollectionViaCustomerEventTestState__==null)
				{
					_lookupCollectionViaCustomerEventTestState__ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCustomerEventTestState__.IsReadOnly=true;
				}
				return _lookupCollectionViaCustomerEventTestState__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCustomerEventTestState_
		{
			get
			{
				if(_lookupCollectionViaCustomerEventTestState_==null)
				{
					_lookupCollectionViaCustomerEventTestState_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCustomerEventTestState_.IsReadOnly=true;
				}
				return _lookupCollectionViaCustomerEventTestState_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCustomerEventTestState
		{
			get
			{
				if(_lookupCollectionViaCustomerEventTestState==null)
				{
					_lookupCollectionViaCustomerEventTestState = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCustomerEventTestState.IsReadOnly=true;
				}
				return _lookupCollectionViaCustomerEventTestState;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCustomerPrimaryCarePhysician_
		{
			get
			{
				if(_lookupCollectionViaCustomerPrimaryCarePhysician_==null)
				{
					_lookupCollectionViaCustomerPrimaryCarePhysician_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCustomerPrimaryCarePhysician_.IsReadOnly=true;
				}
				return _lookupCollectionViaCustomerPrimaryCarePhysician_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCustomerPrimaryCarePhysician
		{
			get
			{
				if(_lookupCollectionViaCustomerPrimaryCarePhysician==null)
				{
					_lookupCollectionViaCustomerPrimaryCarePhysician = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCustomerPrimaryCarePhysician.IsReadOnly=true;
				}
				return _lookupCollectionViaCustomerPrimaryCarePhysician;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCustomerPhoneNumberUpdateUpload
		{
			get
			{
				if(_lookupCollectionViaCustomerPhoneNumberUpdateUpload==null)
				{
					_lookupCollectionViaCustomerPhoneNumberUpdateUpload = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCustomerPhoneNumberUpdateUpload.IsReadOnly=true;
				}
				return _lookupCollectionViaCustomerPhoneNumberUpdateUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEligibilityUpload
		{
			get
			{
				if(_lookupCollectionViaEligibilityUpload==null)
				{
					_lookupCollectionViaEligibilityUpload = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEligibilityUpload.IsReadOnly=true;
				}
				return _lookupCollectionViaEligibilityUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEventCustomerResult__
		{
			get
			{
				if(_lookupCollectionViaEventCustomerResult__==null)
				{
					_lookupCollectionViaEventCustomerResult__ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEventCustomerResult__.IsReadOnly=true;
				}
				return _lookupCollectionViaEventCustomerResult__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEventCustomerResult______
		{
			get
			{
				if(_lookupCollectionViaEventCustomerResult______==null)
				{
					_lookupCollectionViaEventCustomerResult______ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEventCustomerResult______.IsReadOnly=true;
				}
				return _lookupCollectionViaEventCustomerResult______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEventCustomerResult_____
		{
			get
			{
				if(_lookupCollectionViaEventCustomerResult_____==null)
				{
					_lookupCollectionViaEventCustomerResult_____ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEventCustomerResult_____.IsReadOnly=true;
				}
				return _lookupCollectionViaEventCustomerResult_____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEventCustomerResult_
		{
			get
			{
				if(_lookupCollectionViaEventCustomerResult_==null)
				{
					_lookupCollectionViaEventCustomerResult_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEventCustomerResult_.IsReadOnly=true;
				}
				return _lookupCollectionViaEventCustomerResult_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEventCustomerResult____
		{
			get
			{
				if(_lookupCollectionViaEventCustomerResult____==null)
				{
					_lookupCollectionViaEventCustomerResult____ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEventCustomerResult____.IsReadOnly=true;
				}
				return _lookupCollectionViaEventCustomerResult____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEventCustomerResult___
		{
			get
			{
				if(_lookupCollectionViaEventCustomerResult___==null)
				{
					_lookupCollectionViaEventCustomerResult___ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEventCustomerResult___.IsReadOnly=true;
				}
				return _lookupCollectionViaEventCustomerResult___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEventCustomerResult________
		{
			get
			{
				if(_lookupCollectionViaEventCustomerResult________==null)
				{
					_lookupCollectionViaEventCustomerResult________ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEventCustomerResult________.IsReadOnly=true;
				}
				return _lookupCollectionViaEventCustomerResult________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEventAppointmentCancellationLog
		{
			get
			{
				if(_lookupCollectionViaEventAppointmentCancellationLog==null)
				{
					_lookupCollectionViaEventAppointmentCancellationLog = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEventAppointmentCancellationLog.IsReadOnly=true;
				}
				return _lookupCollectionViaEventAppointmentCancellationLog;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEmailTemplate_
		{
			get
			{
				if(_lookupCollectionViaEmailTemplate_==null)
				{
					_lookupCollectionViaEmailTemplate_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEmailTemplate_.IsReadOnly=true;
				}
				return _lookupCollectionViaEmailTemplate_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEmailTemplate
		{
			get
			{
				if(_lookupCollectionViaEmailTemplate==null)
				{
					_lookupCollectionViaEmailTemplate = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEmailTemplate.IsReadOnly=true;
				}
				return _lookupCollectionViaEmailTemplate;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEventCustomerResult_______
		{
			get
			{
				if(_lookupCollectionViaEventCustomerResult_______==null)
				{
					_lookupCollectionViaEventCustomerResult_______ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEventCustomerResult_______.IsReadOnly=true;
				}
				return _lookupCollectionViaEventCustomerResult_______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEventCustomerResult
		{
			get
			{
				if(_lookupCollectionViaEventCustomerResult==null)
				{
					_lookupCollectionViaEventCustomerResult = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEventCustomerResult.IsReadOnly=true;
				}
				return _lookupCollectionViaEventCustomerResult;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEventAppointmentChangeLog
		{
			get
			{
				if(_lookupCollectionViaEventAppointmentChangeLog==null)
				{
					_lookupCollectionViaEventAppointmentChangeLog = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEventAppointmentChangeLog.IsReadOnly=true;
				}
				return _lookupCollectionViaEventAppointmentChangeLog;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCustomerActivityTypeUpload
		{
			get
			{
				if(_lookupCollectionViaCustomerActivityTypeUpload==null)
				{
					_lookupCollectionViaCustomerActivityTypeUpload = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCustomerActivityTypeUpload.IsReadOnly=true;
				}
				return _lookupCollectionViaCustomerActivityTypeUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCalls
		{
			get
			{
				if(_lookupCollectionViaCalls==null)
				{
					_lookupCollectionViaCalls = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCalls.IsReadOnly=true;
				}
				return _lookupCollectionViaCalls;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCalls_
		{
			get
			{
				if(_lookupCollectionViaCalls_==null)
				{
					_lookupCollectionViaCalls_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCalls_.IsReadOnly=true;
				}
				return _lookupCollectionViaCalls_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCallRoundCallQueue
		{
			get
			{
				if(_lookupCollectionViaCallRoundCallQueue==null)
				{
					_lookupCollectionViaCallRoundCallQueue = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCallRoundCallQueue.IsReadOnly=true;
				}
				return _lookupCollectionViaCallRoundCallQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCampaign
		{
			get
			{
				if(_lookupCollectionViaCampaign==null)
				{
					_lookupCollectionViaCampaign = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCampaign.IsReadOnly=true;
				}
				return _lookupCollectionViaCampaign;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCallUpload
		{
			get
			{
				if(_lookupCollectionViaCallUpload==null)
				{
					_lookupCollectionViaCallUpload = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCallUpload.IsReadOnly=true;
				}
				return _lookupCollectionViaCallUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCalls__
		{
			get
			{
				if(_lookupCollectionViaCalls__==null)
				{
					_lookupCollectionViaCalls__ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCalls__.IsReadOnly=true;
				}
				return _lookupCollectionViaCalls__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCallQueueCustomer__
		{
			get
			{
				if(_lookupCollectionViaCallQueueCustomer__==null)
				{
					_lookupCollectionViaCallQueueCustomer__ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCallQueueCustomer__.IsReadOnly=true;
				}
				return _lookupCollectionViaCallQueueCustomer__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCallCenterTeam
		{
			get
			{
				if(_lookupCollectionViaCallCenterTeam==null)
				{
					_lookupCollectionViaCallCenterTeam = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCallCenterTeam.IsReadOnly=true;
				}
				return _lookupCollectionViaCallCenterTeam;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaAccountHraChatQuestionnaire_
		{
			get
			{
				if(_lookupCollectionViaAccountHraChatQuestionnaire_==null)
				{
					_lookupCollectionViaAccountHraChatQuestionnaire_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaAccountHraChatQuestionnaire_.IsReadOnly=true;
				}
				return _lookupCollectionViaAccountHraChatQuestionnaire_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaAccountHraChatQuestionnaire
		{
			get
			{
				if(_lookupCollectionViaAccountHraChatQuestionnaire==null)
				{
					_lookupCollectionViaAccountHraChatQuestionnaire = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaAccountHraChatQuestionnaire.IsReadOnly=true;
				}
				return _lookupCollectionViaAccountHraChatQuestionnaire;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCallQueueCustomer_
		{
			get
			{
				if(_lookupCollectionViaCallQueueCustomer_==null)
				{
					_lookupCollectionViaCallQueueCustomer_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCallQueueCustomer_.IsReadOnly=true;
				}
				return _lookupCollectionViaCallQueueCustomer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCallQueueCustomer
		{
			get
			{
				if(_lookupCollectionViaCallQueueCustomer==null)
				{
					_lookupCollectionViaCallQueueCustomer = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCallQueueCustomer.IsReadOnly=true;
				}
				return _lookupCollectionViaCallQueueCustomer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCallCenterTeam_
		{
			get
			{
				if(_lookupCollectionViaCallCenterTeam_==null)
				{
					_lookupCollectionViaCallCenterTeam_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCallCenterTeam_.IsReadOnly=true;
				}
				return _lookupCollectionViaCallCenterTeam_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCampaign_
		{
			get
			{
				if(_lookupCollectionViaCampaign_==null)
				{
					_lookupCollectionViaCampaign_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCampaign_.IsReadOnly=true;
				}
				return _lookupCollectionViaCampaign_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaClinicalTestQualificationCriteria_
		{
			get
			{
				if(_lookupCollectionViaClinicalTestQualificationCriteria_==null)
				{
					_lookupCollectionViaClinicalTestQualificationCriteria_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaClinicalTestQualificationCriteria_.IsReadOnly=true;
				}
				return _lookupCollectionViaClinicalTestQualificationCriteria_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaClinicalTestQualificationCriteria
		{
			get
			{
				if(_lookupCollectionViaClinicalTestQualificationCriteria==null)
				{
					_lookupCollectionViaClinicalTestQualificationCriteria = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaClinicalTestQualificationCriteria.IsReadOnly=true;
				}
				return _lookupCollectionViaClinicalTestQualificationCriteria;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCheckListTemplate_
		{
			get
			{
				if(_lookupCollectionViaCheckListTemplate_==null)
				{
					_lookupCollectionViaCheckListTemplate_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCheckListTemplate_.IsReadOnly=true;
				}
				return _lookupCollectionViaCheckListTemplate_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCorporateUpload
		{
			get
			{
				if(_lookupCollectionViaCorporateUpload==null)
				{
					_lookupCollectionViaCorporateUpload = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCorporateUpload.IsReadOnly=true;
				}
				return _lookupCollectionViaCorporateUpload;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaClinicalTestQualificationCriteria___
		{
			get
			{
				if(_lookupCollectionViaClinicalTestQualificationCriteria___==null)
				{
					_lookupCollectionViaClinicalTestQualificationCriteria___ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaClinicalTestQualificationCriteria___.IsReadOnly=true;
				}
				return _lookupCollectionViaClinicalTestQualificationCriteria___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaClinicalTestQualificationCriteria__
		{
			get
			{
				if(_lookupCollectionViaClinicalTestQualificationCriteria__==null)
				{
					_lookupCollectionViaClinicalTestQualificationCriteria__ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaClinicalTestQualificationCriteria__.IsReadOnly=true;
				}
				return _lookupCollectionViaClinicalTestQualificationCriteria__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCheckListTemplate
		{
			get
			{
				if(_lookupCollectionViaCheckListTemplate==null)
				{
					_lookupCollectionViaCheckListTemplate = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCheckListTemplate.IsReadOnly=true;
				}
				return _lookupCollectionViaCheckListTemplate;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCampaignActivity
		{
			get
			{
				if(_lookupCollectionViaCampaignActivity==null)
				{
					_lookupCollectionViaCampaignActivity = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCampaignActivity.IsReadOnly=true;
				}
				return _lookupCollectionViaCampaignActivity;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCampaign___
		{
			get
			{
				if(_lookupCollectionViaCampaign___==null)
				{
					_lookupCollectionViaCampaign___ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCampaign___.IsReadOnly=true;
				}
				return _lookupCollectionViaCampaign___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCampaign__
		{
			get
			{
				if(_lookupCollectionViaCampaign__==null)
				{
					_lookupCollectionViaCampaign__ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCampaign__.IsReadOnly=true;
				}
				return _lookupCollectionViaCampaign__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCheckListAnswer_
		{
			get
			{
				if(_lookupCollectionViaCheckListAnswer_==null)
				{
					_lookupCollectionViaCheckListAnswer_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCheckListAnswer_.IsReadOnly=true;
				}
				return _lookupCollectionViaCheckListAnswer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCheckListAnswer
		{
			get
			{
				if(_lookupCollectionViaCheckListAnswer==null)
				{
					_lookupCollectionViaCheckListAnswer = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCheckListAnswer.IsReadOnly=true;
				}
				return _lookupCollectionViaCheckListAnswer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaCampaignActivity_
		{
			get
			{
				if(_lookupCollectionViaCampaignActivity_==null)
				{
					_lookupCollectionViaCampaignActivity_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaCampaignActivity_.IsReadOnly=true;
				}
				return _lookupCollectionViaCampaignActivity_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEvents________
		{
			get
			{
				if(_lookupCollectionViaEvents________==null)
				{
					_lookupCollectionViaEvents________ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEvents________.IsReadOnly=true;
				}
				return _lookupCollectionViaEvents________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEvents______________
		{
			get
			{
				if(_lookupCollectionViaEvents______________==null)
				{
					_lookupCollectionViaEvents______________ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEvents______________.IsReadOnly=true;
				}
				return _lookupCollectionViaEvents______________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEvents_________
		{
			get
			{
				if(_lookupCollectionViaEvents_________==null)
				{
					_lookupCollectionViaEvents_________ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEvents_________.IsReadOnly=true;
				}
				return _lookupCollectionViaEvents_________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEvents_____________
		{
			get
			{
				if(_lookupCollectionViaEvents_____________==null)
				{
					_lookupCollectionViaEvents_____________ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEvents_____________.IsReadOnly=true;
				}
				return _lookupCollectionViaEvents_____________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEvents___________________
		{
			get
			{
				if(_lookupCollectionViaEvents___________________==null)
				{
					_lookupCollectionViaEvents___________________ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEvents___________________.IsReadOnly=true;
				}
				return _lookupCollectionViaEvents___________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEvents__________________
		{
			get
			{
				if(_lookupCollectionViaEvents__________________==null)
				{
					_lookupCollectionViaEvents__________________ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEvents__________________.IsReadOnly=true;
				}
				return _lookupCollectionViaEvents__________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEvents_______________
		{
			get
			{
				if(_lookupCollectionViaEvents_______________==null)
				{
					_lookupCollectionViaEvents_______________ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEvents_______________.IsReadOnly=true;
				}
				return _lookupCollectionViaEvents_______________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEvents_______________________
		{
			get
			{
				if(_lookupCollectionViaEvents_______________________==null)
				{
					_lookupCollectionViaEvents_______________________ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEvents_______________________.IsReadOnly=true;
				}
				return _lookupCollectionViaEvents_______________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEvents____________
		{
			get
			{
				if(_lookupCollectionViaEvents____________==null)
				{
					_lookupCollectionViaEvents____________ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEvents____________.IsReadOnly=true;
				}
				return _lookupCollectionViaEvents____________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEvents____
		{
			get
			{
				if(_lookupCollectionViaEvents____==null)
				{
					_lookupCollectionViaEvents____ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEvents____.IsReadOnly=true;
				}
				return _lookupCollectionViaEvents____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEvents________________
		{
			get
			{
				if(_lookupCollectionViaEvents________________==null)
				{
					_lookupCollectionViaEvents________________ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEvents________________.IsReadOnly=true;
				}
				return _lookupCollectionViaEvents________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEvents_______
		{
			get
			{
				if(_lookupCollectionViaEvents_______==null)
				{
					_lookupCollectionViaEvents_______ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEvents_______.IsReadOnly=true;
				}
				return _lookupCollectionViaEvents_______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEvents_____
		{
			get
			{
				if(_lookupCollectionViaEvents_____==null)
				{
					_lookupCollectionViaEvents_____ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEvents_____.IsReadOnly=true;
				}
				return _lookupCollectionViaEvents_____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEvents__________
		{
			get
			{
				if(_lookupCollectionViaEvents__________==null)
				{
					_lookupCollectionViaEvents__________ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEvents__________.IsReadOnly=true;
				}
				return _lookupCollectionViaEvents__________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEvents_________________
		{
			get
			{
				if(_lookupCollectionViaEvents_________________==null)
				{
					_lookupCollectionViaEvents_________________ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEvents_________________.IsReadOnly=true;
				}
				return _lookupCollectionViaEvents_________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEvents___________
		{
			get
			{
				if(_lookupCollectionViaEvents___________==null)
				{
					_lookupCollectionViaEvents___________ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEvents___________.IsReadOnly=true;
				}
				return _lookupCollectionViaEvents___________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEvents______________________
		{
			get
			{
				if(_lookupCollectionViaEvents______________________==null)
				{
					_lookupCollectionViaEvents______________________ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEvents______________________.IsReadOnly=true;
				}
				return _lookupCollectionViaEvents______________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEvents
		{
			get
			{
				if(_lookupCollectionViaEvents==null)
				{
					_lookupCollectionViaEvents = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEvents.IsReadOnly=true;
				}
				return _lookupCollectionViaEvents;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEvents______
		{
			get
			{
				if(_lookupCollectionViaEvents______==null)
				{
					_lookupCollectionViaEvents______ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEvents______.IsReadOnly=true;
				}
				return _lookupCollectionViaEvents______;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEvents__
		{
			get
			{
				if(_lookupCollectionViaEvents__==null)
				{
					_lookupCollectionViaEvents__ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEvents__.IsReadOnly=true;
				}
				return _lookupCollectionViaEvents__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEventCustomers___
		{
			get
			{
				if(_lookupCollectionViaEventCustomers___==null)
				{
					_lookupCollectionViaEventCustomers___ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEventCustomers___.IsReadOnly=true;
				}
				return _lookupCollectionViaEventCustomers___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEventCustomers
		{
			get
			{
				if(_lookupCollectionViaEventCustomers==null)
				{
					_lookupCollectionViaEventCustomers = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEventCustomers.IsReadOnly=true;
				}
				return _lookupCollectionViaEventCustomers;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEventCustomers_
		{
			get
			{
				if(_lookupCollectionViaEventCustomers_==null)
				{
					_lookupCollectionViaEventCustomers_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEventCustomers_.IsReadOnly=true;
				}
				return _lookupCollectionViaEventCustomers_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEventCustomers__
		{
			get
			{
				if(_lookupCollectionViaEventCustomers__==null)
				{
					_lookupCollectionViaEventCustomers__ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEventCustomers__.IsReadOnly=true;
				}
				return _lookupCollectionViaEventCustomers__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEvents___
		{
			get
			{
				if(_lookupCollectionViaEvents___==null)
				{
					_lookupCollectionViaEvents___ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEvents___.IsReadOnly=true;
				}
				return _lookupCollectionViaEvents___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEvents________________________
		{
			get
			{
				if(_lookupCollectionViaEvents________________________==null)
				{
					_lookupCollectionViaEvents________________________ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEvents________________________.IsReadOnly=true;
				}
				return _lookupCollectionViaEvents________________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEvents____________________
		{
			get
			{
				if(_lookupCollectionViaEvents____________________==null)
				{
					_lookupCollectionViaEvents____________________ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEvents____________________.IsReadOnly=true;
				}
				return _lookupCollectionViaEvents____________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEvents_____________________
		{
			get
			{
				if(_lookupCollectionViaEvents_____________________==null)
				{
					_lookupCollectionViaEvents_____________________ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEvents_____________________.IsReadOnly=true;
				}
				return _lookupCollectionViaEvents_____________________;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'LookupEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(LookupEntity))]
		public virtual EntityCollection<LookupEntity> LookupCollectionViaEvents_
		{
			get
			{
				if(_lookupCollectionViaEvents_==null)
				{
					_lookupCollectionViaEvents_ = new EntityCollection<LookupEntity>(EntityFactoryCache2.GetEntityFactory(typeof(LookupEntityFactory)));
					_lookupCollectionViaEvents_.IsReadOnly=true;
				}
				return _lookupCollectionViaEvents_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'MarketingPrintOrderItemEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(MarketingPrintOrderItemEntity))]
		public virtual EntityCollection<MarketingPrintOrderItemEntity> MarketingPrintOrderItemCollectionViaPrintOrderItemTracking
		{
			get
			{
				if(_marketingPrintOrderItemCollectionViaPrintOrderItemTracking==null)
				{
					_marketingPrintOrderItemCollectionViaPrintOrderItemTracking = new EntityCollection<MarketingPrintOrderItemEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MarketingPrintOrderItemEntityFactory)));
					_marketingPrintOrderItemCollectionViaPrintOrderItemTracking.IsReadOnly=true;
				}
				return _marketingPrintOrderItemCollectionViaPrintOrderItemTracking;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'MarketingPrintOrderItemEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(MarketingPrintOrderItemEntity))]
		public virtual EntityCollection<MarketingPrintOrderItemEntity> MarketingPrintOrderItemCollectionViaPrintOrderItemTracking_
		{
			get
			{
				if(_marketingPrintOrderItemCollectionViaPrintOrderItemTracking_==null)
				{
					_marketingPrintOrderItemCollectionViaPrintOrderItemTracking_ = new EntityCollection<MarketingPrintOrderItemEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MarketingPrintOrderItemEntityFactory)));
					_marketingPrintOrderItemCollectionViaPrintOrderItemTracking_.IsReadOnly=true;
				}
				return _marketingPrintOrderItemCollectionViaPrintOrderItemTracking_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'MedicareQuestionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(MedicareQuestionEntity))]
		public virtual EntityCollection<MedicareQuestionEntity> MedicareQuestionCollectionViaCustomerMedicareQuestionAnswer
		{
			get
			{
				if(_medicareQuestionCollectionViaCustomerMedicareQuestionAnswer==null)
				{
					_medicareQuestionCollectionViaCustomerMedicareQuestionAnswer = new EntityCollection<MedicareQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(MedicareQuestionEntityFactory)));
					_medicareQuestionCollectionViaCustomerMedicareQuestionAnswer.IsReadOnly=true;
				}
				return _medicareQuestionCollectionViaCustomerMedicareQuestionAnswer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'NdcEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(NdcEntity))]
		public virtual EntityCollection<NdcEntity> NdcCollectionViaCurrentMedication
		{
			get
			{
				if(_ndcCollectionViaCurrentMedication==null)
				{
					_ndcCollectionViaCurrentMedication = new EntityCollection<NdcEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NdcEntityFactory)));
					_ndcCollectionViaCurrentMedication.IsReadOnly=true;
				}
				return _ndcCollectionViaCurrentMedication;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'NotesDetailsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(NotesDetailsEntity))]
		public virtual EntityCollection<NotesDetailsEntity> NotesDetailsCollectionViaPriorityInQueue
		{
			get
			{
				if(_notesDetailsCollectionViaPriorityInQueue==null)
				{
					_notesDetailsCollectionViaPriorityInQueue = new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory)));
					_notesDetailsCollectionViaPriorityInQueue.IsReadOnly=true;
				}
				return _notesDetailsCollectionViaPriorityInQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'NotesDetailsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(NotesDetailsEntity))]
		public virtual EntityCollection<NotesDetailsEntity> NotesDetailsCollectionViaPriorityInQueue_
		{
			get
			{
				if(_notesDetailsCollectionViaPriorityInQueue_==null)
				{
					_notesDetailsCollectionViaPriorityInQueue_ = new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory)));
					_notesDetailsCollectionViaPriorityInQueue_.IsReadOnly=true;
				}
				return _notesDetailsCollectionViaPriorityInQueue_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'NotesDetailsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(NotesDetailsEntity))]
		public virtual EntityCollection<NotesDetailsEntity> NotesDetailsCollectionViaCallQueueCustomer_
		{
			get
			{
				if(_notesDetailsCollectionViaCallQueueCustomer_==null)
				{
					_notesDetailsCollectionViaCallQueueCustomer_ = new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory)));
					_notesDetailsCollectionViaCallQueueCustomer_.IsReadOnly=true;
				}
				return _notesDetailsCollectionViaCallQueueCustomer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'NotesDetailsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(NotesDetailsEntity))]
		public virtual EntityCollection<NotesDetailsEntity> NotesDetailsCollectionViaEvents
		{
			get
			{
				if(_notesDetailsCollectionViaEvents==null)
				{
					_notesDetailsCollectionViaEvents = new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory)));
					_notesDetailsCollectionViaEvents.IsReadOnly=true;
				}
				return _notesDetailsCollectionViaEvents;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'NotesDetailsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(NotesDetailsEntity))]
		public virtual EntityCollection<NotesDetailsEntity> NotesDetailsCollectionViaCallQueueCustomer__
		{
			get
			{
				if(_notesDetailsCollectionViaCallQueueCustomer__==null)
				{
					_notesDetailsCollectionViaCallQueueCustomer__ = new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory)));
					_notesDetailsCollectionViaCallQueueCustomer__.IsReadOnly=true;
				}
				return _notesDetailsCollectionViaCallQueueCustomer__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'NotesDetailsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(NotesDetailsEntity))]
		public virtual EntityCollection<NotesDetailsEntity> NotesDetailsCollectionViaEvents_
		{
			get
			{
				if(_notesDetailsCollectionViaEvents_==null)
				{
					_notesDetailsCollectionViaEvents_ = new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory)));
					_notesDetailsCollectionViaEvents_.IsReadOnly=true;
				}
				return _notesDetailsCollectionViaEvents_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'NotesDetailsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(NotesDetailsEntity))]
		public virtual EntityCollection<NotesDetailsEntity> NotesDetailsCollectionViaEvents___
		{
			get
			{
				if(_notesDetailsCollectionViaEvents___==null)
				{
					_notesDetailsCollectionViaEvents___ = new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory)));
					_notesDetailsCollectionViaEvents___.IsReadOnly=true;
				}
				return _notesDetailsCollectionViaEvents___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'NotesDetailsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(NotesDetailsEntity))]
		public virtual EntityCollection<NotesDetailsEntity> NotesDetailsCollectionViaCallQueueCustomer
		{
			get
			{
				if(_notesDetailsCollectionViaCallQueueCustomer==null)
				{
					_notesDetailsCollectionViaCallQueueCustomer = new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory)));
					_notesDetailsCollectionViaCallQueueCustomer.IsReadOnly=true;
				}
				return _notesDetailsCollectionViaCallQueueCustomer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'NotesDetailsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(NotesDetailsEntity))]
		public virtual EntityCollection<NotesDetailsEntity> NotesDetailsCollectionViaEvents____
		{
			get
			{
				if(_notesDetailsCollectionViaEvents____==null)
				{
					_notesDetailsCollectionViaEvents____ = new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory)));
					_notesDetailsCollectionViaEvents____.IsReadOnly=true;
				}
				return _notesDetailsCollectionViaEvents____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'NotesDetailsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(NotesDetailsEntity))]
		public virtual EntityCollection<NotesDetailsEntity> NotesDetailsCollectionViaEvents__
		{
			get
			{
				if(_notesDetailsCollectionViaEvents__==null)
				{
					_notesDetailsCollectionViaEvents__ = new EntityCollection<NotesDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotesDetailsEntityFactory)));
					_notesDetailsCollectionViaEvents__.IsReadOnly=true;
				}
				return _notesDetailsCollectionViaEvents__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'NotificationMediumEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(NotificationMediumEntity))]
		public virtual EntityCollection<NotificationMediumEntity> NotificationMediumCollectionViaNotificationType
		{
			get
			{
				if(_notificationMediumCollectionViaNotificationType==null)
				{
					_notificationMediumCollectionViaNotificationType = new EntityCollection<NotificationMediumEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotificationMediumEntityFactory)));
					_notificationMediumCollectionViaNotificationType.IsReadOnly=true;
				}
				return _notificationMediumCollectionViaNotificationType;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'NotificationMediumEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(NotificationMediumEntity))]
		public virtual EntityCollection<NotificationMediumEntity> NotificationMediumCollectionViaNotification
		{
			get
			{
				if(_notificationMediumCollectionViaNotification==null)
				{
					_notificationMediumCollectionViaNotification = new EntityCollection<NotificationMediumEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotificationMediumEntityFactory)));
					_notificationMediumCollectionViaNotification.IsReadOnly=true;
				}
				return _notificationMediumCollectionViaNotification;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'NotificationTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(NotificationTypeEntity))]
		public virtual EntityCollection<NotificationTypeEntity> NotificationTypeCollectionViaEventCustomerTestNotPerformedNotification
		{
			get
			{
				if(_notificationTypeCollectionViaEventCustomerTestNotPerformedNotification==null)
				{
					_notificationTypeCollectionViaEventCustomerTestNotPerformedNotification = new EntityCollection<NotificationTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotificationTypeEntityFactory)));
					_notificationTypeCollectionViaEventCustomerTestNotPerformedNotification.IsReadOnly=true;
				}
				return _notificationTypeCollectionViaEventCustomerTestNotPerformedNotification;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'NotificationTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(NotificationTypeEntity))]
		public virtual EntityCollection<NotificationTypeEntity> NotificationTypeCollectionViaEmailTemplate
		{
			get
			{
				if(_notificationTypeCollectionViaEmailTemplate==null)
				{
					_notificationTypeCollectionViaEmailTemplate = new EntityCollection<NotificationTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotificationTypeEntityFactory)));
					_notificationTypeCollectionViaEmailTemplate.IsReadOnly=true;
				}
				return _notificationTypeCollectionViaEmailTemplate;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'NotificationTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(NotificationTypeEntity))]
		public virtual EntityCollection<NotificationTypeEntity> NotificationTypeCollectionViaNotification
		{
			get
			{
				if(_notificationTypeCollectionViaNotification==null)
				{
					_notificationTypeCollectionViaNotification = new EntityCollection<NotificationTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(NotificationTypeEntityFactory)));
					_notificationTypeCollectionViaNotification.IsReadOnly=true;
				}
				return _notificationTypeCollectionViaNotification;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrderEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrderEntity))]
		public virtual EntityCollection<OrderEntity> OrderCollectionViaRefundRequest_
		{
			get
			{
				if(_orderCollectionViaRefundRequest_==null)
				{
					_orderCollectionViaRefundRequest_ = new EntityCollection<OrderEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrderEntityFactory)));
					_orderCollectionViaRefundRequest_.IsReadOnly=true;
				}
				return _orderCollectionViaRefundRequest_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrderEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrderEntity))]
		public virtual EntityCollection<OrderEntity> OrderCollectionViaRefundRequest
		{
			get
			{
				if(_orderCollectionViaRefundRequest==null)
				{
					_orderCollectionViaRefundRequest = new EntityCollection<OrderEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrderEntityFactory)));
					_orderCollectionViaRefundRequest.IsReadOnly=true;
				}
				return _orderCollectionViaRefundRequest;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationEntity))]
		public virtual EntityCollection<OrganizationEntity> OrganizationCollectionViaAccountTestHcpcsCode_
		{
			get
			{
				if(_organizationCollectionViaAccountTestHcpcsCode_==null)
				{
					_organizationCollectionViaAccountTestHcpcsCode_ = new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory)));
					_organizationCollectionViaAccountTestHcpcsCode_.IsReadOnly=true;
				}
				return _organizationCollectionViaAccountTestHcpcsCode_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationEntity))]
		public virtual EntityCollection<OrganizationEntity> OrganizationCollectionViaAccountTestHcpcsCode
		{
			get
			{
				if(_organizationCollectionViaAccountTestHcpcsCode==null)
				{
					_organizationCollectionViaAccountTestHcpcsCode = new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory)));
					_organizationCollectionViaAccountTestHcpcsCode.IsReadOnly=true;
				}
				return _organizationCollectionViaAccountTestHcpcsCode;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationEntity))]
		public virtual EntityCollection<OrganizationEntity> OrganizationCollectionViaAccountCallCenterOrganization
		{
			get
			{
				if(_organizationCollectionViaAccountCallCenterOrganization==null)
				{
					_organizationCollectionViaAccountCallCenterOrganization = new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory)));
					_organizationCollectionViaAccountCallCenterOrganization.IsReadOnly=true;
				}
				return _organizationCollectionViaAccountCallCenterOrganization;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationEntity))]
		public virtual EntityCollection<OrganizationEntity> OrganizationCollectionViaAccountCallCenterOrganization_
		{
			get
			{
				if(_organizationCollectionViaAccountCallCenterOrganization_==null)
				{
					_organizationCollectionViaAccountCallCenterOrganization_ = new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory)));
					_organizationCollectionViaAccountCallCenterOrganization_.IsReadOnly=true;
				}
				return _organizationCollectionViaAccountCallCenterOrganization_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationEntity))]
		public virtual EntityCollection<OrganizationEntity> OrganizationCollectionViaEventAccountTestHcpcsCode_
		{
			get
			{
				if(_organizationCollectionViaEventAccountTestHcpcsCode_==null)
				{
					_organizationCollectionViaEventAccountTestHcpcsCode_ = new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory)));
					_organizationCollectionViaEventAccountTestHcpcsCode_.IsReadOnly=true;
				}
				return _organizationCollectionViaEventAccountTestHcpcsCode_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationEntity))]
		public virtual EntityCollection<OrganizationEntity> OrganizationCollectionViaEventAccountTestHcpcsCode
		{
			get
			{
				if(_organizationCollectionViaEventAccountTestHcpcsCode==null)
				{
					_organizationCollectionViaEventAccountTestHcpcsCode = new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory)));
					_organizationCollectionViaEventAccountTestHcpcsCode.IsReadOnly=true;
				}
				return _organizationCollectionViaEventAccountTestHcpcsCode;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationEntity))]
		public virtual EntityCollection<OrganizationEntity> OrganizationCollectionViaMarketingPrintOrder
		{
			get
			{
				if(_organizationCollectionViaMarketingPrintOrder==null)
				{
					_organizationCollectionViaMarketingPrintOrder = new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory)));
					_organizationCollectionViaMarketingPrintOrder.IsReadOnly=true;
				}
				return _organizationCollectionViaMarketingPrintOrder;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationEntity))]
		public virtual EntityCollection<OrganizationEntity> OrganizationCollectionViaMarketingPrintOrder_
		{
			get
			{
				if(_organizationCollectionViaMarketingPrintOrder_==null)
				{
					_organizationCollectionViaMarketingPrintOrder_ = new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory)));
					_organizationCollectionViaMarketingPrintOrder_.IsReadOnly=true;
				}
				return _organizationCollectionViaMarketingPrintOrder_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'OrganizationEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(OrganizationEntity))]
		public virtual EntityCollection<OrganizationEntity> OrganizationCollectionViaAffiliateProfile
		{
			get
			{
				if(_organizationCollectionViaAffiliateProfile==null)
				{
					_organizationCollectionViaAffiliateProfile = new EntityCollection<OrganizationEntity>(EntityFactoryCache2.GetEntityFactory(typeof(OrganizationEntityFactory)));
					_organizationCollectionViaAffiliateProfile.IsReadOnly=true;
				}
				return _organizationCollectionViaAffiliateProfile;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PackageEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PackageEntity))]
		public virtual EntityCollection<PackageEntity> PackageCollectionViaPreApprovedPackage
		{
			get
			{
				if(_packageCollectionViaPreApprovedPackage==null)
				{
					_packageCollectionViaPreApprovedPackage = new EntityCollection<PackageEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PackageEntityFactory)));
					_packageCollectionViaPreApprovedPackage.IsReadOnly=true;
				}
				return _packageCollectionViaPreApprovedPackage;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PhysicianMasterEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PhysicianMasterEntity))]
		public virtual EntityCollection<PhysicianMasterEntity> PhysicianMasterCollectionViaCustomerPrimaryCarePhysician
		{
			get
			{
				if(_physicianMasterCollectionViaCustomerPrimaryCarePhysician==null)
				{
					_physicianMasterCollectionViaCustomerPrimaryCarePhysician = new EntityCollection<PhysicianMasterEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PhysicianMasterEntityFactory)));
					_physicianMasterCollectionViaCustomerPrimaryCarePhysician.IsReadOnly=true;
				}
				return _physicianMasterCollectionViaCustomerPrimaryCarePhysician;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PhysicianMasterEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PhysicianMasterEntity))]
		public virtual EntityCollection<PhysicianMasterEntity> PhysicianMasterCollectionViaCustomerPrimaryCarePhysician_
		{
			get
			{
				if(_physicianMasterCollectionViaCustomerPrimaryCarePhysician_==null)
				{
					_physicianMasterCollectionViaCustomerPrimaryCarePhysician_ = new EntityCollection<PhysicianMasterEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PhysicianMasterEntityFactory)));
					_physicianMasterCollectionViaCustomerPrimaryCarePhysician_.IsReadOnly=true;
				}
				return _physicianMasterCollectionViaCustomerPrimaryCarePhysician_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PhysicianMasterEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PhysicianMasterEntity))]
		public virtual EntityCollection<PhysicianMasterEntity> PhysicianMasterCollectionViaCustomerPrimaryCarePhysician__
		{
			get
			{
				if(_physicianMasterCollectionViaCustomerPrimaryCarePhysician__==null)
				{
					_physicianMasterCollectionViaCustomerPrimaryCarePhysician__ = new EntityCollection<PhysicianMasterEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PhysicianMasterEntityFactory)));
					_physicianMasterCollectionViaCustomerPrimaryCarePhysician__.IsReadOnly=true;
				}
				return _physicianMasterCollectionViaCustomerPrimaryCarePhysician__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PodDetailsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PodDetailsEntity))]
		public virtual EntityCollection<PodDetailsEntity> PodDetailsCollectionViaSalesRepPodAssigments
		{
			get
			{
				if(_podDetailsCollectionViaSalesRepPodAssigments==null)
				{
					_podDetailsCollectionViaSalesRepPodAssigments = new EntityCollection<PodDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PodDetailsEntityFactory)));
					_podDetailsCollectionViaSalesRepPodAssigments.IsReadOnly=true;
				}
				return _podDetailsCollectionViaSalesRepPodAssigments;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PodDetailsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PodDetailsEntity))]
		public virtual EntityCollection<PodDetailsEntity> PodDetailsCollectionViaEventStaffAssignment
		{
			get
			{
				if(_podDetailsCollectionViaEventStaffAssignment==null)
				{
					_podDetailsCollectionViaEventStaffAssignment = new EntityCollection<PodDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PodDetailsEntityFactory)));
					_podDetailsCollectionViaEventStaffAssignment.IsReadOnly=true;
				}
				return _podDetailsCollectionViaEventStaffAssignment;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PodDetailsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PodDetailsEntity))]
		public virtual EntityCollection<PodDetailsEntity> PodDetailsCollectionViaEventNote_
		{
			get
			{
				if(_podDetailsCollectionViaEventNote_==null)
				{
					_podDetailsCollectionViaEventNote_ = new EntityCollection<PodDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PodDetailsEntityFactory)));
					_podDetailsCollectionViaEventNote_.IsReadOnly=true;
				}
				return _podDetailsCollectionViaEventNote_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PodDetailsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PodDetailsEntity))]
		public virtual EntityCollection<PodDetailsEntity> PodDetailsCollectionViaEventNote
		{
			get
			{
				if(_podDetailsCollectionViaEventNote==null)
				{
					_podDetailsCollectionViaEventNote = new EntityCollection<PodDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PodDetailsEntityFactory)));
					_podDetailsCollectionViaEventNote.IsReadOnly=true;
				}
				return _podDetailsCollectionViaEventNote;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PodDetailsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PodDetailsEntity))]
		public virtual EntityCollection<PodDetailsEntity> PodDetailsCollectionViaPodDefaultTeam
		{
			get
			{
				if(_podDetailsCollectionViaPodDefaultTeam==null)
				{
					_podDetailsCollectionViaPodDefaultTeam = new EntityCollection<PodDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PodDetailsEntityFactory)));
					_podDetailsCollectionViaPodDefaultTeam.IsReadOnly=true;
				}
				return _podDetailsCollectionViaPodDefaultTeam;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PodDetailsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PodDetailsEntity))]
		public virtual EntityCollection<PodDetailsEntity> PodDetailsCollectionViaEventStaffAssignment_
		{
			get
			{
				if(_podDetailsCollectionViaEventStaffAssignment_==null)
				{
					_podDetailsCollectionViaEventStaffAssignment_ = new EntityCollection<PodDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PodDetailsEntityFactory)));
					_podDetailsCollectionViaEventStaffAssignment_.IsReadOnly=true;
				}
				return _podDetailsCollectionViaEventStaffAssignment_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PodDetailsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PodDetailsEntity))]
		public virtual EntityCollection<PodDetailsEntity> PodDetailsCollectionViaEventStaffAssignment__
		{
			get
			{
				if(_podDetailsCollectionViaEventStaffAssignment__==null)
				{
					_podDetailsCollectionViaEventStaffAssignment__ = new EntityCollection<PodDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PodDetailsEntityFactory)));
					_podDetailsCollectionViaEventStaffAssignment__.IsReadOnly=true;
				}
				return _podDetailsCollectionViaEventStaffAssignment__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PreQualificationQuestionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PreQualificationQuestionEntity))]
		public virtual EntityCollection<PreQualificationQuestionEntity> PreQualificationQuestionCollectionViaEventCustomerQuestionAnswer_
		{
			get
			{
				if(_preQualificationQuestionCollectionViaEventCustomerQuestionAnswer_==null)
				{
					_preQualificationQuestionCollectionViaEventCustomerQuestionAnswer_ = new EntityCollection<PreQualificationQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreQualificationQuestionEntityFactory)));
					_preQualificationQuestionCollectionViaEventCustomerQuestionAnswer_.IsReadOnly=true;
				}
				return _preQualificationQuestionCollectionViaEventCustomerQuestionAnswer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PreQualificationQuestionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PreQualificationQuestionEntity))]
		public virtual EntityCollection<PreQualificationQuestionEntity> PreQualificationQuestionCollectionViaDisqualifiedTest
		{
			get
			{
				if(_preQualificationQuestionCollectionViaDisqualifiedTest==null)
				{
					_preQualificationQuestionCollectionViaDisqualifiedTest = new EntityCollection<PreQualificationQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreQualificationQuestionEntityFactory)));
					_preQualificationQuestionCollectionViaDisqualifiedTest.IsReadOnly=true;
				}
				return _preQualificationQuestionCollectionViaDisqualifiedTest;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PreQualificationQuestionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PreQualificationQuestionEntity))]
		public virtual EntityCollection<PreQualificationQuestionEntity> PreQualificationQuestionCollectionViaDisqualifiedTest_
		{
			get
			{
				if(_preQualificationQuestionCollectionViaDisqualifiedTest_==null)
				{
					_preQualificationQuestionCollectionViaDisqualifiedTest_ = new EntityCollection<PreQualificationQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreQualificationQuestionEntityFactory)));
					_preQualificationQuestionCollectionViaDisqualifiedTest_.IsReadOnly=true;
				}
				return _preQualificationQuestionCollectionViaDisqualifiedTest_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'PreQualificationQuestionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(PreQualificationQuestionEntity))]
		public virtual EntityCollection<PreQualificationQuestionEntity> PreQualificationQuestionCollectionViaEventCustomerQuestionAnswer
		{
			get
			{
				if(_preQualificationQuestionCollectionViaEventCustomerQuestionAnswer==null)
				{
					_preQualificationQuestionCollectionViaEventCustomerQuestionAnswer = new EntityCollection<PreQualificationQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(PreQualificationQuestionEntityFactory)));
					_preQualificationQuestionCollectionViaEventCustomerQuestionAnswer.IsReadOnly=true;
				}
				return _preQualificationQuestionCollectionViaEventCustomerQuestionAnswer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ProspectCustomerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ProspectCustomerEntity))]
		public virtual EntityCollection<ProspectCustomerEntity> ProspectCustomerCollectionViaCallQueueCustomer_
		{
			get
			{
				if(_prospectCustomerCollectionViaCallQueueCustomer_==null)
				{
					_prospectCustomerCollectionViaCallQueueCustomer_ = new EntityCollection<ProspectCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectCustomerEntityFactory)));
					_prospectCustomerCollectionViaCallQueueCustomer_.IsReadOnly=true;
				}
				return _prospectCustomerCollectionViaCallQueueCustomer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ProspectCustomerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ProspectCustomerEntity))]
		public virtual EntityCollection<ProspectCustomerEntity> ProspectCustomerCollectionViaCallQueueCustomer
		{
			get
			{
				if(_prospectCustomerCollectionViaCallQueueCustomer==null)
				{
					_prospectCustomerCollectionViaCallQueueCustomer = new EntityCollection<ProspectCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectCustomerEntityFactory)));
					_prospectCustomerCollectionViaCallQueueCustomer.IsReadOnly=true;
				}
				return _prospectCustomerCollectionViaCallQueueCustomer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ProspectCustomerEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ProspectCustomerEntity))]
		public virtual EntityCollection<ProspectCustomerEntity> ProspectCustomerCollectionViaCallQueueCustomer__
		{
			get
			{
				if(_prospectCustomerCollectionViaCallQueueCustomer__==null)
				{
					_prospectCustomerCollectionViaCallQueueCustomer__ = new EntityCollection<ProspectCustomerEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectCustomerEntityFactory)));
					_prospectCustomerCollectionViaCallQueueCustomer__.IsReadOnly=true;
				}
				return _prospectCustomerCollectionViaCallQueueCustomer__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ProspectListDetailsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ProspectListDetailsEntity))]
		public virtual EntityCollection<ProspectListDetailsEntity> ProspectListDetailsCollectionViaProspects
		{
			get
			{
				if(_prospectListDetailsCollectionViaProspects==null)
				{
					_prospectListDetailsCollectionViaProspects = new EntityCollection<ProspectListDetailsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectListDetailsEntityFactory)));
					_prospectListDetailsCollectionViaProspects.IsReadOnly=true;
				}
				return _prospectListDetailsCollectionViaProspects;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ProspectsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ProspectsEntity))]
		public virtual EntityCollection<ProspectsEntity> ProspectsCollectionViaHostFacilityRanking
		{
			get
			{
				if(_prospectsCollectionViaHostFacilityRanking==null)
				{
					_prospectsCollectionViaHostFacilityRanking = new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory)));
					_prospectsCollectionViaHostFacilityRanking.IsReadOnly=true;
				}
				return _prospectsCollectionViaHostFacilityRanking;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ProspectsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ProspectsEntity))]
		public virtual EntityCollection<ProspectsEntity> ProspectsCollectionViaHostPayment
		{
			get
			{
				if(_prospectsCollectionViaHostPayment==null)
				{
					_prospectsCollectionViaHostPayment = new EntityCollection<ProspectsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectsEntityFactory)));
					_prospectsCollectionViaHostPayment.IsReadOnly=true;
				}
				return _prospectsCollectionViaHostPayment;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ProspectTypeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ProspectTypeEntity))]
		public virtual EntityCollection<ProspectTypeEntity> ProspectTypeCollectionViaProspects
		{
			get
			{
				if(_prospectTypeCollectionViaProspects==null)
				{
					_prospectTypeCollectionViaProspects = new EntityCollection<ProspectTypeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ProspectTypeEntityFactory)));
					_prospectTypeCollectionViaProspects.IsReadOnly=true;
				}
				return _prospectTypeCollectionViaProspects;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'RefundRequestEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(RefundRequestEntity))]
		public virtual EntityCollection<RefundRequestEntity> RefundRequestCollectionViaEventAppointmentCancellationLog
		{
			get
			{
				if(_refundRequestCollectionViaEventAppointmentCancellationLog==null)
				{
					_refundRequestCollectionViaEventAppointmentCancellationLog = new EntityCollection<RefundRequestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RefundRequestEntityFactory)));
					_refundRequestCollectionViaEventAppointmentCancellationLog.IsReadOnly=true;
				}
				return _refundRequestCollectionViaEventAppointmentCancellationLog;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'RelationshipEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(RelationshipEntity))]
		public virtual EntityCollection<RelationshipEntity> RelationshipCollectionViaGuardianDetails_
		{
			get
			{
				if(_relationshipCollectionViaGuardianDetails_==null)
				{
					_relationshipCollectionViaGuardianDetails_ = new EntityCollection<RelationshipEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RelationshipEntityFactory)));
					_relationshipCollectionViaGuardianDetails_.IsReadOnly=true;
				}
				return _relationshipCollectionViaGuardianDetails_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'RelationshipEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(RelationshipEntity))]
		public virtual EntityCollection<RelationshipEntity> RelationshipCollectionViaGuardianDetails
		{
			get
			{
				if(_relationshipCollectionViaGuardianDetails==null)
				{
					_relationshipCollectionViaGuardianDetails = new EntityCollection<RelationshipEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RelationshipEntityFactory)));
					_relationshipCollectionViaGuardianDetails.IsReadOnly=true;
				}
				return _relationshipCollectionViaGuardianDetails;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'RescheduleCancelDispositionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(RescheduleCancelDispositionEntity))]
		public virtual EntityCollection<RescheduleCancelDispositionEntity> RescheduleCancelDispositionCollectionViaEventAppointmentChangeLog
		{
			get
			{
				if(_rescheduleCancelDispositionCollectionViaEventAppointmentChangeLog==null)
				{
					_rescheduleCancelDispositionCollectionViaEventAppointmentChangeLog = new EntityCollection<RescheduleCancelDispositionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RescheduleCancelDispositionEntityFactory)));
					_rescheduleCancelDispositionCollectionViaEventAppointmentChangeLog.IsReadOnly=true;
				}
				return _rescheduleCancelDispositionCollectionViaEventAppointmentChangeLog;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'RescheduleCancelDispositionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(RescheduleCancelDispositionEntity))]
		public virtual EntityCollection<RescheduleCancelDispositionEntity> RescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog
		{
			get
			{
				if(_rescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog==null)
				{
					_rescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog = new EntityCollection<RescheduleCancelDispositionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RescheduleCancelDispositionEntityFactory)));
					_rescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog.IsReadOnly=true;
				}
				return _rescheduleCancelDispositionCollectionViaEventAppointmentCancellationLog;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'RoleEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(RoleEntity))]
		public virtual EntityCollection<RoleEntity> RoleCollectionViaUser
		{
			get
			{
				if(_roleCollectionViaUser==null)
				{
					_roleCollectionViaUser = new EntityCollection<RoleEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RoleEntityFactory)));
					_roleCollectionViaUser.IsReadOnly=true;
				}
				return _roleCollectionViaUser;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'RoleEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(RoleEntity))]
		public virtual EntityCollection<RoleEntity> RoleCollectionViaHostFacilityRanking
		{
			get
			{
				if(_roleCollectionViaHostFacilityRanking==null)
				{
					_roleCollectionViaHostFacilityRanking = new EntityCollection<RoleEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RoleEntityFactory)));
					_roleCollectionViaHostFacilityRanking.IsReadOnly=true;
				}
				return _roleCollectionViaHostFacilityRanking;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'RoleEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(RoleEntity))]
		public virtual EntityCollection<RoleEntity> RoleCollectionViaUser_
		{
			get
			{
				if(_roleCollectionViaUser_==null)
				{
					_roleCollectionViaUser_ = new EntityCollection<RoleEntity>(EntityFactoryCache2.GetEntityFactory(typeof(RoleEntityFactory)));
					_roleCollectionViaUser_.IsReadOnly=true;
				}
				return _roleCollectionViaUser_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ScheduleMethodEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ScheduleMethodEntity))]
		public virtual EntityCollection<ScheduleMethodEntity> ScheduleMethodCollectionViaEvents___
		{
			get
			{
				if(_scheduleMethodCollectionViaEvents___==null)
				{
					_scheduleMethodCollectionViaEvents___ = new EntityCollection<ScheduleMethodEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ScheduleMethodEntityFactory)));
					_scheduleMethodCollectionViaEvents___.IsReadOnly=true;
				}
				return _scheduleMethodCollectionViaEvents___;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ScheduleMethodEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ScheduleMethodEntity))]
		public virtual EntityCollection<ScheduleMethodEntity> ScheduleMethodCollectionViaEvents____
		{
			get
			{
				if(_scheduleMethodCollectionViaEvents____==null)
				{
					_scheduleMethodCollectionViaEvents____ = new EntityCollection<ScheduleMethodEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ScheduleMethodEntityFactory)));
					_scheduleMethodCollectionViaEvents____.IsReadOnly=true;
				}
				return _scheduleMethodCollectionViaEvents____;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ScheduleMethodEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ScheduleMethodEntity))]
		public virtual EntityCollection<ScheduleMethodEntity> ScheduleMethodCollectionViaEvents
		{
			get
			{
				if(_scheduleMethodCollectionViaEvents==null)
				{
					_scheduleMethodCollectionViaEvents = new EntityCollection<ScheduleMethodEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ScheduleMethodEntityFactory)));
					_scheduleMethodCollectionViaEvents.IsReadOnly=true;
				}
				return _scheduleMethodCollectionViaEvents;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ScheduleMethodEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ScheduleMethodEntity))]
		public virtual EntityCollection<ScheduleMethodEntity> ScheduleMethodCollectionViaEvents_
		{
			get
			{
				if(_scheduleMethodCollectionViaEvents_==null)
				{
					_scheduleMethodCollectionViaEvents_ = new EntityCollection<ScheduleMethodEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ScheduleMethodEntityFactory)));
					_scheduleMethodCollectionViaEvents_.IsReadOnly=true;
				}
				return _scheduleMethodCollectionViaEvents_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ScheduleMethodEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ScheduleMethodEntity))]
		public virtual EntityCollection<ScheduleMethodEntity> ScheduleMethodCollectionViaEvents__
		{
			get
			{
				if(_scheduleMethodCollectionViaEvents__==null)
				{
					_scheduleMethodCollectionViaEvents__ = new EntityCollection<ScheduleMethodEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ScheduleMethodEntityFactory)));
					_scheduleMethodCollectionViaEvents__.IsReadOnly=true;
				}
				return _scheduleMethodCollectionViaEvents__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ScriptsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ScriptsEntity))]
		public virtual EntityCollection<ScriptsEntity> ScriptsCollectionViaCallQueue
		{
			get
			{
				if(_scriptsCollectionViaCallQueue==null)
				{
					_scriptsCollectionViaCallQueue = new EntityCollection<ScriptsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ScriptsEntityFactory)));
					_scriptsCollectionViaCallQueue.IsReadOnly=true;
				}
				return _scriptsCollectionViaCallQueue;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ScriptsEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ScriptsEntity))]
		public virtual EntityCollection<ScriptsEntity> ScriptsCollectionViaCallQueue_
		{
			get
			{
				if(_scriptsCollectionViaCallQueue_==null)
				{
					_scriptsCollectionViaCallQueue_ = new EntityCollection<ScriptsEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ScriptsEntityFactory)));
					_scriptsCollectionViaCallQueue_.IsReadOnly=true;
				}
				return _scriptsCollectionViaCallQueue_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ShippingOptionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ShippingOptionEntity))]
		public virtual EntityCollection<ShippingOptionEntity> ShippingOptionCollectionViaShippingDetail_
		{
			get
			{
				if(_shippingOptionCollectionViaShippingDetail_==null)
				{
					_shippingOptionCollectionViaShippingDetail_ = new EntityCollection<ShippingOptionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShippingOptionEntityFactory)));
					_shippingOptionCollectionViaShippingDetail_.IsReadOnly=true;
				}
				return _shippingOptionCollectionViaShippingDetail_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ShippingOptionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ShippingOptionEntity))]
		public virtual EntityCollection<ShippingOptionEntity> ShippingOptionCollectionViaShippingDetail
		{
			get
			{
				if(_shippingOptionCollectionViaShippingDetail==null)
				{
					_shippingOptionCollectionViaShippingDetail = new EntityCollection<ShippingOptionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ShippingOptionEntityFactory)));
					_shippingOptionCollectionViaShippingDetail.IsReadOnly=true;
				}
				return _shippingOptionCollectionViaShippingDetail;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'StaffEventRoleEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(StaffEventRoleEntity))]
		public virtual EntityCollection<StaffEventRoleEntity> StaffEventRoleCollectionViaEventStaffAssignment__
		{
			get
			{
				if(_staffEventRoleCollectionViaEventStaffAssignment__==null)
				{
					_staffEventRoleCollectionViaEventStaffAssignment__ = new EntityCollection<StaffEventRoleEntity>(EntityFactoryCache2.GetEntityFactory(typeof(StaffEventRoleEntityFactory)));
					_staffEventRoleCollectionViaEventStaffAssignment__.IsReadOnly=true;
				}
				return _staffEventRoleCollectionViaEventStaffAssignment__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'StaffEventRoleEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(StaffEventRoleEntity))]
		public virtual EntityCollection<StaffEventRoleEntity> StaffEventRoleCollectionViaPodDefaultTeam
		{
			get
			{
				if(_staffEventRoleCollectionViaPodDefaultTeam==null)
				{
					_staffEventRoleCollectionViaPodDefaultTeam = new EntityCollection<StaffEventRoleEntity>(EntityFactoryCache2.GetEntityFactory(typeof(StaffEventRoleEntityFactory)));
					_staffEventRoleCollectionViaPodDefaultTeam.IsReadOnly=true;
				}
				return _staffEventRoleCollectionViaPodDefaultTeam;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'StaffEventRoleEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(StaffEventRoleEntity))]
		public virtual EntityCollection<StaffEventRoleEntity> StaffEventRoleCollectionViaEventStaffAssignment
		{
			get
			{
				if(_staffEventRoleCollectionViaEventStaffAssignment==null)
				{
					_staffEventRoleCollectionViaEventStaffAssignment = new EntityCollection<StaffEventRoleEntity>(EntityFactoryCache2.GetEntityFactory(typeof(StaffEventRoleEntityFactory)));
					_staffEventRoleCollectionViaEventStaffAssignment.IsReadOnly=true;
				}
				return _staffEventRoleCollectionViaEventStaffAssignment;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'StaffEventRoleEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(StaffEventRoleEntity))]
		public virtual EntityCollection<StaffEventRoleEntity> StaffEventRoleCollectionViaEventStaffAssignment_
		{
			get
			{
				if(_staffEventRoleCollectionViaEventStaffAssignment_==null)
				{
					_staffEventRoleCollectionViaEventStaffAssignment_ = new EntityCollection<StaffEventRoleEntity>(EntityFactoryCache2.GetEntityFactory(typeof(StaffEventRoleEntityFactory)));
					_staffEventRoleCollectionViaEventStaffAssignment_.IsReadOnly=true;
				}
				return _staffEventRoleCollectionViaEventStaffAssignment_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'StandardFindingTestReadingEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(StandardFindingTestReadingEntity))]
		public virtual EntityCollection<StandardFindingTestReadingEntity> StandardFindingTestReadingCollectionViaCustomerEventReading
		{
			get
			{
				if(_standardFindingTestReadingCollectionViaCustomerEventReading==null)
				{
					_standardFindingTestReadingCollectionViaCustomerEventReading = new EntityCollection<StandardFindingTestReadingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(StandardFindingTestReadingEntityFactory)));
					_standardFindingTestReadingCollectionViaCustomerEventReading.IsReadOnly=true;
				}
				return _standardFindingTestReadingCollectionViaCustomerEventReading;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'StateEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(StateEntity))]
		public virtual EntityCollection<StateEntity> StateCollectionViaAddress
		{
			get
			{
				if(_stateCollectionViaAddress==null)
				{
					_stateCollectionViaAddress = new EntityCollection<StateEntity>(EntityFactoryCache2.GetEntityFactory(typeof(StateEntityFactory)));
					_stateCollectionViaAddress.IsReadOnly=true;
				}
				return _stateCollectionViaAddress;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'SurveyQuestionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(SurveyQuestionEntity))]
		public virtual EntityCollection<SurveyQuestionEntity> SurveyQuestionCollectionViaSurveyAnswer_
		{
			get
			{
				if(_surveyQuestionCollectionViaSurveyAnswer_==null)
				{
					_surveyQuestionCollectionViaSurveyAnswer_ = new EntityCollection<SurveyQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyQuestionEntityFactory)));
					_surveyQuestionCollectionViaSurveyAnswer_.IsReadOnly=true;
				}
				return _surveyQuestionCollectionViaSurveyAnswer_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'SurveyQuestionEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(SurveyQuestionEntity))]
		public virtual EntityCollection<SurveyQuestionEntity> SurveyQuestionCollectionViaSurveyAnswer
		{
			get
			{
				if(_surveyQuestionCollectionViaSurveyAnswer==null)
				{
					_surveyQuestionCollectionViaSurveyAnswer = new EntityCollection<SurveyQuestionEntity>(EntityFactoryCache2.GetEntityFactory(typeof(SurveyQuestionEntityFactory)));
					_surveyQuestionCollectionViaSurveyAnswer.IsReadOnly=true;
				}
				return _surveyQuestionCollectionViaSurveyAnswer;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TagEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TagEntity))]
		public virtual EntityCollection<TagEntity> TagCollectionViaPreAssessmentCustomerCallQueueCallAttempt
		{
			get
			{
				if(_tagCollectionViaPreAssessmentCustomerCallQueueCallAttempt==null)
				{
					_tagCollectionViaPreAssessmentCustomerCallQueueCallAttempt = new EntityCollection<TagEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TagEntityFactory)));
					_tagCollectionViaPreAssessmentCustomerCallQueueCallAttempt.IsReadOnly=true;
				}
				return _tagCollectionViaPreAssessmentCustomerCallQueueCallAttempt;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TagEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TagEntity))]
		public virtual EntityCollection<TagEntity> TagCollectionViaCustomerCallQueueCallAttempt
		{
			get
			{
				if(_tagCollectionViaCustomerCallQueueCallAttempt==null)
				{
					_tagCollectionViaCustomerCallQueueCallAttempt = new EntityCollection<TagEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TagEntityFactory)));
					_tagCollectionViaCustomerCallQueueCallAttempt.IsReadOnly=true;
				}
				return _tagCollectionViaCustomerCallQueueCallAttempt;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TaskPriorityTypesEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TaskPriorityTypesEntity))]
		public virtual EntityCollection<TaskPriorityTypesEntity> TaskPriorityTypesCollectionViaTaskDetails__
		{
			get
			{
				if(_taskPriorityTypesCollectionViaTaskDetails__==null)
				{
					_taskPriorityTypesCollectionViaTaskDetails__ = new EntityCollection<TaskPriorityTypesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TaskPriorityTypesEntityFactory)));
					_taskPriorityTypesCollectionViaTaskDetails__.IsReadOnly=true;
				}
				return _taskPriorityTypesCollectionViaTaskDetails__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TaskPriorityTypesEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TaskPriorityTypesEntity))]
		public virtual EntityCollection<TaskPriorityTypesEntity> TaskPriorityTypesCollectionViaTaskDetails_
		{
			get
			{
				if(_taskPriorityTypesCollectionViaTaskDetails_==null)
				{
					_taskPriorityTypesCollectionViaTaskDetails_ = new EntityCollection<TaskPriorityTypesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TaskPriorityTypesEntityFactory)));
					_taskPriorityTypesCollectionViaTaskDetails_.IsReadOnly=true;
				}
				return _taskPriorityTypesCollectionViaTaskDetails_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TaskPriorityTypesEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TaskPriorityTypesEntity))]
		public virtual EntityCollection<TaskPriorityTypesEntity> TaskPriorityTypesCollectionViaTaskDetails
		{
			get
			{
				if(_taskPriorityTypesCollectionViaTaskDetails==null)
				{
					_taskPriorityTypesCollectionViaTaskDetails = new EntityCollection<TaskPriorityTypesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TaskPriorityTypesEntityFactory)));
					_taskPriorityTypesCollectionViaTaskDetails.IsReadOnly=true;
				}
				return _taskPriorityTypesCollectionViaTaskDetails;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TaskStatusTypesEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TaskStatusTypesEntity))]
		public virtual EntityCollection<TaskStatusTypesEntity> TaskStatusTypesCollectionViaTaskDetails_
		{
			get
			{
				if(_taskStatusTypesCollectionViaTaskDetails_==null)
				{
					_taskStatusTypesCollectionViaTaskDetails_ = new EntityCollection<TaskStatusTypesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TaskStatusTypesEntityFactory)));
					_taskStatusTypesCollectionViaTaskDetails_.IsReadOnly=true;
				}
				return _taskStatusTypesCollectionViaTaskDetails_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TaskStatusTypesEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TaskStatusTypesEntity))]
		public virtual EntityCollection<TaskStatusTypesEntity> TaskStatusTypesCollectionViaTaskDetails__
		{
			get
			{
				if(_taskStatusTypesCollectionViaTaskDetails__==null)
				{
					_taskStatusTypesCollectionViaTaskDetails__ = new EntityCollection<TaskStatusTypesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TaskStatusTypesEntityFactory)));
					_taskStatusTypesCollectionViaTaskDetails__.IsReadOnly=true;
				}
				return _taskStatusTypesCollectionViaTaskDetails__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TaskStatusTypesEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TaskStatusTypesEntity))]
		public virtual EntityCollection<TaskStatusTypesEntity> TaskStatusTypesCollectionViaTaskDetails
		{
			get
			{
				if(_taskStatusTypesCollectionViaTaskDetails==null)
				{
					_taskStatusTypesCollectionViaTaskDetails = new EntityCollection<TaskStatusTypesEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TaskStatusTypesEntityFactory)));
					_taskStatusTypesCollectionViaTaskDetails.IsReadOnly=true;
				}
				return _taskStatusTypesCollectionViaTaskDetails;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TechnicianProfileEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TechnicianProfileEntity))]
		public virtual EntityCollection<TechnicianProfileEntity> TechnicianProfileCollectionViaPinChangelog
		{
			get
			{
				if(_technicianProfileCollectionViaPinChangelog==null)
				{
					_technicianProfileCollectionViaPinChangelog = new EntityCollection<TechnicianProfileEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TechnicianProfileEntityFactory)));
					_technicianProfileCollectionViaPinChangelog.IsReadOnly=true;
				}
				return _technicianProfileCollectionViaPinChangelog;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TerritoryEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TerritoryEntity))]
		public virtual EntityCollection<TerritoryEntity> TerritoryCollectionViaTerritory
		{
			get
			{
				if(_territoryCollectionViaTerritory==null)
				{
					_territoryCollectionViaTerritory = new EntityCollection<TerritoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TerritoryEntityFactory)));
					_territoryCollectionViaTerritory.IsReadOnly=true;
				}
				return _territoryCollectionViaTerritory;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TerritoryEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TerritoryEntity))]
		public virtual EntityCollection<TerritoryEntity> TerritoryCollectionViaOrganizationRoleUserTerritory
		{
			get
			{
				if(_territoryCollectionViaOrganizationRoleUserTerritory==null)
				{
					_territoryCollectionViaOrganizationRoleUserTerritory = new EntityCollection<TerritoryEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TerritoryEntityFactory)));
					_territoryCollectionViaOrganizationRoleUserTerritory.IsReadOnly=true;
				}
				return _territoryCollectionViaOrganizationRoleUserTerritory;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestEntity))]
		public virtual EntityCollection<TestEntity> TestCollectionViaEventCustomerTestNotPerformedNotification
		{
			get
			{
				if(_testCollectionViaEventCustomerTestNotPerformedNotification==null)
				{
					_testCollectionViaEventCustomerTestNotPerformedNotification = new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory)));
					_testCollectionViaEventCustomerTestNotPerformedNotification.IsReadOnly=true;
				}
				return _testCollectionViaEventCustomerTestNotPerformedNotification;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestEntity))]
		public virtual EntityCollection<TestEntity> TestCollectionViaEventPhysicianTest
		{
			get
			{
				if(_testCollectionViaEventPhysicianTest==null)
				{
					_testCollectionViaEventPhysicianTest = new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory)));
					_testCollectionViaEventPhysicianTest.IsReadOnly=true;
				}
				return _testCollectionViaEventPhysicianTest;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestEntity))]
		public virtual EntityCollection<TestEntity> TestCollectionViaDisqualifiedTest_
		{
			get
			{
				if(_testCollectionViaDisqualifiedTest_==null)
				{
					_testCollectionViaDisqualifiedTest_ = new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory)));
					_testCollectionViaDisqualifiedTest_.IsReadOnly=true;
				}
				return _testCollectionViaDisqualifiedTest_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestEntity))]
		public virtual EntityCollection<TestEntity> TestCollectionViaEventCustomerRetest
		{
			get
			{
				if(_testCollectionViaEventCustomerRetest==null)
				{
					_testCollectionViaEventCustomerRetest = new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory)));
					_testCollectionViaEventCustomerRetest.IsReadOnly=true;
				}
				return _testCollectionViaEventCustomerRetest;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestEntity))]
		public virtual EntityCollection<TestEntity> TestCollectionViaEventPhysicianTest_
		{
			get
			{
				if(_testCollectionViaEventPhysicianTest_==null)
				{
					_testCollectionViaEventPhysicianTest_ = new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory)));
					_testCollectionViaEventPhysicianTest_.IsReadOnly=true;
				}
				return _testCollectionViaEventPhysicianTest_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestEntity))]
		public virtual EntityCollection<TestEntity> TestCollectionViaKynLabValues_
		{
			get
			{
				if(_testCollectionViaKynLabValues_==null)
				{
					_testCollectionViaKynLabValues_ = new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory)));
					_testCollectionViaKynLabValues_.IsReadOnly=true;
				}
				return _testCollectionViaKynLabValues_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestEntity))]
		public virtual EntityCollection<TestEntity> TestCollectionViaEventPhysicianTest__
		{
			get
			{
				if(_testCollectionViaEventPhysicianTest__==null)
				{
					_testCollectionViaEventPhysicianTest__ = new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory)));
					_testCollectionViaEventPhysicianTest__.IsReadOnly=true;
				}
				return _testCollectionViaEventPhysicianTest__;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestEntity))]
		public virtual EntityCollection<TestEntity> TestCollectionViaTestHcpcsCode_
		{
			get
			{
				if(_testCollectionViaTestHcpcsCode_==null)
				{
					_testCollectionViaTestHcpcsCode_ = new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory)));
					_testCollectionViaTestHcpcsCode_.IsReadOnly=true;
				}
				return _testCollectionViaTestHcpcsCode_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestEntity))]
		public virtual EntityCollection<TestEntity> TestCollectionViaTestHcpcsCode
		{
			get
			{
				if(_testCollectionViaTestHcpcsCode==null)
				{
					_testCollectionViaTestHcpcsCode = new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory)));
					_testCollectionViaTestHcpcsCode.IsReadOnly=true;
				}
				return _testCollectionViaTestHcpcsCode;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestEntity))]
		public virtual EntityCollection<TestEntity> TestCollectionViaKynLabValues
		{
			get
			{
				if(_testCollectionViaKynLabValues==null)
				{
					_testCollectionViaKynLabValues = new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory)));
					_testCollectionViaKynLabValues.IsReadOnly=true;
				}
				return _testCollectionViaKynLabValues;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestEntity))]
		public virtual EntityCollection<TestEntity> TestCollectionViaPreApprovedTest
		{
			get
			{
				if(_testCollectionViaPreApprovedTest==null)
				{
					_testCollectionViaPreApprovedTest = new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory)));
					_testCollectionViaPreApprovedTest.IsReadOnly=true;
				}
				return _testCollectionViaPreApprovedTest;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestEntity))]
		public virtual EntityCollection<TestEntity> TestCollectionViaClinicalTestQualificationCriteria
		{
			get
			{
				if(_testCollectionViaClinicalTestQualificationCriteria==null)
				{
					_testCollectionViaClinicalTestQualificationCriteria = new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory)));
					_testCollectionViaClinicalTestQualificationCriteria.IsReadOnly=true;
				}
				return _testCollectionViaClinicalTestQualificationCriteria;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestEntity))]
		public virtual EntityCollection<TestEntity> TestCollectionViaRequiredTest
		{
			get
			{
				if(_testCollectionViaRequiredTest==null)
				{
					_testCollectionViaRequiredTest = new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory)));
					_testCollectionViaRequiredTest.IsReadOnly=true;
				}
				return _testCollectionViaRequiredTest;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestEntity))]
		public virtual EntityCollection<TestEntity> TestCollectionViaClinicalTestQualificationCriteria_
		{
			get
			{
				if(_testCollectionViaClinicalTestQualificationCriteria_==null)
				{
					_testCollectionViaClinicalTestQualificationCriteria_ = new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory)));
					_testCollectionViaClinicalTestQualificationCriteria_.IsReadOnly=true;
				}
				return _testCollectionViaClinicalTestQualificationCriteria_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestEntity))]
		public virtual EntityCollection<TestEntity> TestCollectionViaDisqualifiedTest
		{
			get
			{
				if(_testCollectionViaDisqualifiedTest==null)
				{
					_testCollectionViaDisqualifiedTest = new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory)));
					_testCollectionViaDisqualifiedTest.IsReadOnly=true;
				}
				return _testCollectionViaDisqualifiedTest;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestEntity))]
		public virtual EntityCollection<TestEntity> TestCollectionViaPreQualificationTestTemplate
		{
			get
			{
				if(_testCollectionViaPreQualificationTestTemplate==null)
				{
					_testCollectionViaPreQualificationTestTemplate = new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory)));
					_testCollectionViaPreQualificationTestTemplate.IsReadOnly=true;
				}
				return _testCollectionViaPreQualificationTestTemplate;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestEntity))]
		public virtual EntityCollection<TestEntity> TestCollectionViaPreQualificationTestTemplate_
		{
			get
			{
				if(_testCollectionViaPreQualificationTestTemplate_==null)
				{
					_testCollectionViaPreQualificationTestTemplate_ = new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory)));
					_testCollectionViaPreQualificationTestTemplate_.IsReadOnly=true;
				}
				return _testCollectionViaPreQualificationTestTemplate_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestEntity))]
		public virtual EntityCollection<TestEntity> TestCollectionViaPreQualificationQuestion
		{
			get
			{
				if(_testCollectionViaPreQualificationQuestion==null)
				{
					_testCollectionViaPreQualificationQuestion = new EntityCollection<TestEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestEntityFactory)));
					_testCollectionViaPreQualificationQuestion.IsReadOnly=true;
				}
				return _testCollectionViaPreQualificationQuestion;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestHcpcsCodeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestHcpcsCodeEntity))]
		public virtual EntityCollection<TestHcpcsCodeEntity> TestHcpcsCodeCollectionViaEventAccountTestHcpcsCode_
		{
			get
			{
				if(_testHcpcsCodeCollectionViaEventAccountTestHcpcsCode_==null)
				{
					_testHcpcsCodeCollectionViaEventAccountTestHcpcsCode_ = new EntityCollection<TestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestHcpcsCodeEntityFactory)));
					_testHcpcsCodeCollectionViaEventAccountTestHcpcsCode_.IsReadOnly=true;
				}
				return _testHcpcsCodeCollectionViaEventAccountTestHcpcsCode_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestHcpcsCodeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestHcpcsCodeEntity))]
		public virtual EntityCollection<TestHcpcsCodeEntity> TestHcpcsCodeCollectionViaEventAccountTestHcpcsCode
		{
			get
			{
				if(_testHcpcsCodeCollectionViaEventAccountTestHcpcsCode==null)
				{
					_testHcpcsCodeCollectionViaEventAccountTestHcpcsCode = new EntityCollection<TestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestHcpcsCodeEntityFactory)));
					_testHcpcsCodeCollectionViaEventAccountTestHcpcsCode.IsReadOnly=true;
				}
				return _testHcpcsCodeCollectionViaEventAccountTestHcpcsCode;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestHcpcsCodeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestHcpcsCodeEntity))]
		public virtual EntityCollection<TestHcpcsCodeEntity> TestHcpcsCodeCollectionViaAccountTestHcpcsCode_
		{
			get
			{
				if(_testHcpcsCodeCollectionViaAccountTestHcpcsCode_==null)
				{
					_testHcpcsCodeCollectionViaAccountTestHcpcsCode_ = new EntityCollection<TestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestHcpcsCodeEntityFactory)));
					_testHcpcsCodeCollectionViaAccountTestHcpcsCode_.IsReadOnly=true;
				}
				return _testHcpcsCodeCollectionViaAccountTestHcpcsCode_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestHcpcsCodeEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestHcpcsCodeEntity))]
		public virtual EntityCollection<TestHcpcsCodeEntity> TestHcpcsCodeCollectionViaAccountTestHcpcsCode
		{
			get
			{
				if(_testHcpcsCodeCollectionViaAccountTestHcpcsCode==null)
				{
					_testHcpcsCodeCollectionViaAccountTestHcpcsCode = new EntityCollection<TestHcpcsCodeEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestHcpcsCodeEntityFactory)));
					_testHcpcsCodeCollectionViaAccountTestHcpcsCode.IsReadOnly=true;
				}
				return _testHcpcsCodeCollectionViaAccountTestHcpcsCode;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestNotPerformedReasonEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestNotPerformedReasonEntity))]
		public virtual EntityCollection<TestNotPerformedReasonEntity> TestNotPerformedReasonCollectionViaTestNotPerformed_
		{
			get
			{
				if(_testNotPerformedReasonCollectionViaTestNotPerformed_==null)
				{
					_testNotPerformedReasonCollectionViaTestNotPerformed_ = new EntityCollection<TestNotPerformedReasonEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestNotPerformedReasonEntityFactory)));
					_testNotPerformedReasonCollectionViaTestNotPerformed_.IsReadOnly=true;
				}
				return _testNotPerformedReasonCollectionViaTestNotPerformed_;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestNotPerformedReasonEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestNotPerformedReasonEntity))]
		public virtual EntityCollection<TestNotPerformedReasonEntity> TestNotPerformedReasonCollectionViaTestNotPerformed
		{
			get
			{
				if(_testNotPerformedReasonCollectionViaTestNotPerformed==null)
				{
					_testNotPerformedReasonCollectionViaTestNotPerformed = new EntityCollection<TestNotPerformedReasonEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestNotPerformedReasonEntityFactory)));
					_testNotPerformedReasonCollectionViaTestNotPerformed.IsReadOnly=true;
				}
				return _testNotPerformedReasonCollectionViaTestNotPerformed;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestReadingEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestReadingEntity))]
		public virtual EntityCollection<TestReadingEntity> TestReadingCollectionViaCustomerEventReading
		{
			get
			{
				if(_testReadingCollectionViaCustomerEventReading==null)
				{
					_testReadingCollectionViaCustomerEventReading = new EntityCollection<TestReadingEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestReadingEntityFactory)));
					_testReadingCollectionViaCustomerEventReading.IsReadOnly=true;
				}
				return _testReadingCollectionViaCustomerEventReading;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'TestUnableScreenReasonEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(TestUnableScreenReasonEntity))]
		public virtual EntityCollection<TestUnableScreenReasonEntity> TestUnableScreenReasonCollectionViaCustomerEventUnableScreenReason
		{
			get
			{
				if(_testUnableScreenReasonCollectionViaCustomerEventUnableScreenReason==null)
				{
					_testUnableScreenReasonCollectionViaCustomerEventUnableScreenReason = new EntityCollection<TestUnableScreenReasonEntity>(EntityFactoryCache2.GetEntityFactory(typeof(TestUnableScreenReasonEntityFactory)));
					_testUnableScreenReasonCollectionViaCustomerEventUnableScreenReason.IsReadOnly=true;
				}
				return _testUnableScreenReasonCollectionViaCustomerEventUnableScreenReason;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'UserLoginEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(UserLoginEntity))]
		public virtual EntityCollection<UserLoginEntity> UserLoginCollectionViaPasswordChangelog
		{
			get
			{
				if(_userLoginCollectionViaPasswordChangelog==null)
				{
					_userLoginCollectionViaPasswordChangelog = new EntityCollection<UserLoginEntity>(EntityFactoryCache2.GetEntityFactory(typeof(UserLoginEntityFactory)));
					_userLoginCollectionViaPasswordChangelog.IsReadOnly=true;
				}
				return _userLoginCollectionViaPasswordChangelog;
			}
		}

		/// <summary> Gets the EntityCollection with the related entities of type 'ZipEntity' which are related to this entity via a relation of type 'm:n'.
		/// If the EntityCollection hasn't been fetched yet, the collection returned will be empty.</summary>
		[TypeContainedAttribute(typeof(ZipEntity))]
		public virtual EntityCollection<ZipEntity> ZipCollectionViaAddress
		{
			get
			{
				if(_zipCollectionViaAddress==null)
				{
					_zipCollectionViaAddress = new EntityCollection<ZipEntity>(EntityFactoryCache2.GetEntityFactory(typeof(ZipEntityFactory)));
					_zipCollectionViaAddress.IsReadOnly=true;
				}
				return _zipCollectionViaAddress;
			}
		}

		/// <summary> Gets / sets related entity of type 'OrganizationEntity' which has to be set using a fetch action earlier. If no related entity
		/// is set for this property, null is returned. This property is not visible in databound grids.</summary>
		[Browsable(false)]
		public virtual OrganizationEntity Organization
		{
			get
			{
				return _organization;
			}
			set
			{
				if(base.IsDeserializing)
				{
					SetupSyncOrganization(value);
				}
				else
				{
					if(value==null)
					{
						if(_organization != null)
						{
							_organization.UnsetRelatedEntity(this, "OrganizationRoleUser");
						}
					}
					else
					{
						if(_organization!=value)
						{
							((IEntity2)value).SetRelatedEntity(this, "OrganizationRoleUser");
						}
					}
				}
			}
		}

		/// <summary> Gets / sets related entity of type 'RoleEntity' which has to be set using a fetch action earlier. If no related entity
		/// is set for this property, null is returned. This property is not visible in databound grids.</summary>
		[Browsable(false)]
		public virtual RoleEntity Role
		{
			get
			{
				return _role;
			}
			set
			{
				if(base.IsDeserializing)
				{
					SetupSyncRole(value);
				}
				else
				{
					if(value==null)
					{
						if(_role != null)
						{
							_role.UnsetRelatedEntity(this, "OrganizationRoleUser");
						}
					}
					else
					{
						if(_role!=value)
						{
							((IEntity2)value).SetRelatedEntity(this, "OrganizationRoleUser");
						}
					}
				}
			}
		}

		/// <summary> Gets / sets related entity of type 'UserEntity' which has to be set using a fetch action earlier. If no related entity
		/// is set for this property, null is returned. This property is not visible in databound grids.</summary>
		[Browsable(false)]
		public virtual UserEntity User
		{
			get
			{
				return _user;
			}
			set
			{
				if(base.IsDeserializing)
				{
					SetupSyncUser(value);
				}
				else
				{
					if(value==null)
					{
						if(_user != null)
						{
							_user.UnsetRelatedEntity(this, "OrganizationRoleUser");
						}
					}
					else
					{
						if(_user!=value)
						{
							((IEntity2)value).SetRelatedEntity(this, "OrganizationRoleUser");
						}
					}
				}
			}
		}

		/// <summary> Gets / sets related entity of type 'AccountCoordinatorProfileEntity' which has to be set using a fetch action earlier. If no related entity
		/// is set for this property, null is returned. This property is not visible in databound grids.</summary>
		[Browsable(false)]
		public virtual AccountCoordinatorProfileEntity AccountCoordinatorProfile
		{
			get
			{
				return _accountCoordinatorProfile;
			}
			set
			{
				if(base.IsDeserializing)
				{
					SetupSyncAccountCoordinatorProfile(value);
					if((SerializationHelper.Optimization == SerializationOptimization.Fast) && (value!=null))
					{
						value.SetRelatedEntity(this, "OrganizationRoleUser");
					}
				}
				else
				{
					if(value==null)
					{
						bool raisePropertyChanged = (_accountCoordinatorProfile !=null);
						DesetupSyncAccountCoordinatorProfile(true, true);
						if(raisePropertyChanged)
						{
							OnPropertyChanged("AccountCoordinatorProfile");
						}
					}
					else
					{
						if(_accountCoordinatorProfile!=value)
						{
							IEntity2 relatedEntity = (IEntity2)value;
							relatedEntity.SetRelatedEntity(this, "OrganizationRoleUser");
							SetupSyncAccountCoordinatorProfile(relatedEntity);
						}
					}
				}
			}
		}

		/// <summary> Gets / sets related entity of type 'AffiliateProfileEntity' which has to be set using a fetch action earlier. If no related entity
		/// is set for this property, null is returned. This property is not visible in databound grids.</summary>
		[Browsable(false)]
		public virtual AffiliateProfileEntity AffiliateProfile_
		{
			get
			{
				return _affiliateProfile_;
			}
			set
			{
				if(base.IsDeserializing)
				{
					SetupSyncAffiliateProfile_(value);
					if((SerializationHelper.Optimization == SerializationOptimization.Fast) && (value!=null))
					{
						value.SetRelatedEntity(this, "OrganizationRoleUser_");
					}
				}
				else
				{
					if(value==null)
					{
						bool raisePropertyChanged = (_affiliateProfile_ !=null);
						DesetupSyncAffiliateProfile_(true, true);
						if(raisePropertyChanged)
						{
							OnPropertyChanged("AffiliateProfile_");
						}
					}
					else
					{
						if(_affiliateProfile_!=value)
						{
							IEntity2 relatedEntity = (IEntity2)value;
							relatedEntity.SetRelatedEntity(this, "OrganizationRoleUser_");
							SetupSyncAffiliateProfile_(relatedEntity);
						}
					}
				}
			}
		}

		/// <summary> Gets / sets related entity of type 'CallCenterRepProfileEntity' which has to be set using a fetch action earlier. If no related entity
		/// is set for this property, null is returned. This property is not visible in databound grids.</summary>
		[Browsable(false)]
		public virtual CallCenterRepProfileEntity CallCenterRepProfile
		{
			get
			{
				return _callCenterRepProfile;
			}
			set
			{
				if(base.IsDeserializing)
				{
					SetupSyncCallCenterRepProfile(value);
					if((SerializationHelper.Optimization == SerializationOptimization.Fast) && (value!=null))
					{
						value.SetRelatedEntity(this, "OrganizationRoleUser");
					}
				}
				else
				{
					if(value==null)
					{
						bool raisePropertyChanged = (_callCenterRepProfile !=null);
						DesetupSyncCallCenterRepProfile(true, true);
						if(raisePropertyChanged)
						{
							OnPropertyChanged("CallCenterRepProfile");
						}
					}
					else
					{
						if(_callCenterRepProfile!=value)
						{
							IEntity2 relatedEntity = (IEntity2)value;
							relatedEntity.SetRelatedEntity(this, "OrganizationRoleUser");
							SetupSyncCallCenterRepProfile(relatedEntity);
						}
					}
				}
			}
		}

		/// <summary> Gets / sets related entity of type 'CustomerProfileEntity' which has to be set using a fetch action earlier. If no related entity
		/// is set for this property, null is returned. This property is not visible in databound grids.</summary>
		[Browsable(false)]
		public virtual CustomerProfileEntity CustomerProfile
		{
			get
			{
				return _customerProfile;
			}
			set
			{
				if(base.IsDeserializing)
				{
					SetupSyncCustomerProfile(value);
					if((SerializationHelper.Optimization == SerializationOptimization.Fast) && (value!=null))
					{
						value.SetRelatedEntity(this, "OrganizationRoleUser");
					}
				}
				else
				{
					if(value==null)
					{
						bool raisePropertyChanged = (_customerProfile !=null);
						DesetupSyncCustomerProfile(true, true);
						if(raisePropertyChanged)
						{
							OnPropertyChanged("CustomerProfile");
						}
					}
					else
					{
						if(_customerProfile!=value)
						{
							IEntity2 relatedEntity = (IEntity2)value;
							relatedEntity.SetRelatedEntity(this, "OrganizationRoleUser");
							SetupSyncCustomerProfile(relatedEntity);
						}
					}
				}
			}
		}

		/// <summary> Gets / sets related entity of type 'PhysicianProfileEntity' which has to be set using a fetch action earlier. If no related entity
		/// is set for this property, null is returned. This property is not visible in databound grids.</summary>
		[Browsable(false)]
		public virtual PhysicianProfileEntity PhysicianProfile
		{
			get
			{
				return _physicianProfile;
			}
			set
			{
				if(base.IsDeserializing)
				{
					SetupSyncPhysicianProfile(value);
					if((SerializationHelper.Optimization == SerializationOptimization.Fast) && (value!=null))
					{
						value.SetRelatedEntity(this, "OrganizationRoleUser");
					}
				}
				else
				{
					if(value==null)
					{
						bool raisePropertyChanged = (_physicianProfile !=null);
						DesetupSyncPhysicianProfile(true, true);
						if(raisePropertyChanged)
						{
							OnPropertyChanged("PhysicianProfile");
						}
					}
					else
					{
						if(_physicianProfile!=value)
						{
							IEntity2 relatedEntity = (IEntity2)value;
							relatedEntity.SetRelatedEntity(this, "OrganizationRoleUser");
							SetupSyncPhysicianProfile(relatedEntity);
						}
					}
				}
			}
		}

		/// <summary> Gets / sets related entity of type 'TechnicianProfileEntity' which has to be set using a fetch action earlier. If no related entity
		/// is set for this property, null is returned. This property is not visible in databound grids.</summary>
		[Browsable(false)]
		public virtual TechnicianProfileEntity TechnicianProfile
		{
			get
			{
				return _technicianProfile;
			}
			set
			{
				if(base.IsDeserializing)
				{
					SetupSyncTechnicianProfile(value);
					if((SerializationHelper.Optimization == SerializationOptimization.Fast) && (value!=null))
					{
						value.SetRelatedEntity(this, "OrganizationRoleUser");
					}
				}
				else
				{
					if(value==null)
					{
						bool raisePropertyChanged = (_technicianProfile !=null);
						DesetupSyncTechnicianProfile(true, true);
						if(raisePropertyChanged)
						{
							OnPropertyChanged("TechnicianProfile");
						}
					}
					else
					{
						if(_technicianProfile!=value)
						{
							IEntity2 relatedEntity = (IEntity2)value;
							relatedEntity.SetRelatedEntity(this, "OrganizationRoleUser");
							SetupSyncTechnicianProfile(relatedEntity);
						}
					}
				}
			}
		}
	
		
		/// <summary> Gets the type of the hierarchy this entity is in. </summary>
		protected override InheritanceHierarchyType LLBLGenProIsInHierarchyOfType
		{
			get { return InheritanceHierarchyType.None;}
		}
		
		/// <summary> Gets or sets a value indicating whether this entity is a subtype</summary>
		protected override bool LLBLGenProIsSubType
		{
			get { return false;}
		}
		
		/// <summary>Returns the Falcon.Data.EntityType enum value for this entity.</summary>
		[Browsable(false), XmlIgnore]
		public override int LLBLGenProEntityTypeValue 
		{ 
			get { return (int)Falcon.Data.EntityType.OrganizationRoleUserEntity; }
		}
		#endregion


		#region Custom Entity code
		
		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END
		#endregion

		#region Included code

		#endregion
	}
}
