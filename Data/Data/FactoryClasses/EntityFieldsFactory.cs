///////////////////////////////////////////////////////////////
// This is generated code. 
//////////////////////////////////////////////////////////////
// Code is generated using LLBLGen Pro version: 2.6
// Code is generated on: 27 June 2019 17:22:53
// Code is generated using templates: SD.TemplateBindings.SharedTemplates.NET20
// Templates vendor: Solutions Design.
// Templates version: 
//////////////////////////////////////////////////////////////
using System;
using Falcon.Data;
using Falcon.Data.HelperClasses;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace Falcon.Data.FactoryClasses
{
	/// <summary>Generates IEntityFields2 instances for different kind of Entities.</summary>
	public partial class EntityFieldsFactory
	{
		/// <summary>Private CTor, no instantiation possible.</summary>
		private EntityFieldsFactory()
		{
		}

		/// <summary>General factory entrance method which will return an EntityFields object with the format generated by the factory specified</summary>
		/// <param name="relatedEntityType">The type of entity the fields are for</param>
		/// <returns>The IEntityFields2 instance requested</returns>
		public static IEntityFields2 CreateEntityFieldsObject(Falcon.Data.EntityType relatedEntityType)
		{
			IEntityFields2 fieldsToReturn=null;
			IInheritanceInfoProvider inheritanceProvider = InheritanceInfoProviderSingleton.GetInstance();
			IFieldInfoProvider fieldProvider = FieldInfoProviderSingleton.GetInstance();
			switch(relatedEntityType)
			{
				case Falcon.Data.EntityType.AccessControlObjectEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AccessControlObjectEntity");
					break;
				case Falcon.Data.EntityType.AccessControlObjectUrlEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AccessControlObjectUrlEntity");
					break;
				case Falcon.Data.EntityType.AccessObjectScopeOptionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AccessObjectScopeOptionEntity");
					break;
				case Falcon.Data.EntityType.AccountEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AccountEntity");
					break;
				case Falcon.Data.EntityType.AccountAdditionalFieldsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AccountAdditionalFieldsEntity");
					break;
				case Falcon.Data.EntityType.AccountCallCenterOrganizationEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AccountCallCenterOrganizationEntity");
					break;
				case Falcon.Data.EntityType.AccountCallQueueSettingEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AccountCallQueueSettingEntity");
					break;
				case Falcon.Data.EntityType.AccountCheckoutPhoneNumberEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AccountCheckoutPhoneNumberEntity");
					break;
				case Falcon.Data.EntityType.AccountCoordinatorProfileEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AccountCoordinatorProfileEntity");
					break;
				case Falcon.Data.EntityType.AccountCustomerResultTestDependencyEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AccountCustomerResultTestDependencyEntity");
					break;
				case Falcon.Data.EntityType.AccountEventZipEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AccountEventZipEntity");
					break;
				case Falcon.Data.EntityType.AccountEventZipSubstituteEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AccountEventZipSubstituteEntity");
					break;
				case Falcon.Data.EntityType.AccountHealthPlanResultTestDependencyEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AccountHealthPlanResultTestDependencyEntity");
					break;
				case Falcon.Data.EntityType.AccountHraChatQuestionnaireEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AccountHraChatQuestionnaireEntity");
					break;
				case Falcon.Data.EntityType.AccountNotReviewableTestEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AccountNotReviewableTestEntity");
					break;
				case Falcon.Data.EntityType.AccountPackageEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AccountPackageEntity");
					break;
				case Falcon.Data.EntityType.AccountPcpResultTestDependencyEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AccountPcpResultTestDependencyEntity");
					break;
				case Falcon.Data.EntityType.AccountTestEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AccountTestEntity");
					break;
				case Falcon.Data.EntityType.AccountTestHcpcsCodeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AccountTestHcpcsCodeEntity");
					break;
				case Falcon.Data.EntityType.ActivityEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ActivityEntity");
					break;
				case Falcon.Data.EntityType.ActivityTypeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ActivityTypeEntity");
					break;
				case Falcon.Data.EntityType.AdditionalFieldsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AdditionalFieldsEntity");
					break;
				case Falcon.Data.EntityType.AddressEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AddressEntity");
					break;
				case Falcon.Data.EntityType.AdvocateManagerTeamEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AdvocateManagerTeamEntity");
					break;
				case Falcon.Data.EntityType.AfadvertiserEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AfadvertiserEntity");
					break;
				case Falcon.Data.EntityType.AfAdvertisingCommissionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AfAdvertisingCommissionEntity");
					break;
				case Falcon.Data.EntityType.AfaffiliateCampaignEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AfaffiliateCampaignEntity");
					break;
				case Falcon.Data.EntityType.AfaffiliateCampaignMarketingMaterialEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AfaffiliateCampaignMarketingMaterialEntity");
					break;
				case Falcon.Data.EntityType.AfcampaignEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AfcampaignEntity");
					break;
				case Falcon.Data.EntityType.AfcampaignCreativeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AfcampaignCreativeEntity");
					break;
				case Falcon.Data.EntityType.AfcampaignSubAdvocateEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AfcampaignSubAdvocateEntity");
					break;
				case Falcon.Data.EntityType.AfcampaignTemplateEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AfcampaignTemplateEntity");
					break;
				case Falcon.Data.EntityType.AfchannelEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AfchannelEntity");
					break;
				case Falcon.Data.EntityType.AfcommisionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AfcommisionEntity");
					break;
				case Falcon.Data.EntityType.AfDailyLogImpressionClickEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AfDailyLogImpressionClickEntity");
					break;
				case Falcon.Data.EntityType.AffiliateProfileEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AffiliateProfileEntity");
					break;
				case Falcon.Data.EntityType.AfimpressionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AfimpressionEntity");
					break;
				case Falcon.Data.EntityType.AfimpressionLogEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AfimpressionLogEntity");
					break;
				case Falcon.Data.EntityType.AfincomingPhoneEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AfincomingPhoneEntity");
					break;
				case Falcon.Data.EntityType.AflAffiliatePaymentMethodEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AflAffiliatePaymentMethodEntity");
					break;
				case Falcon.Data.EntityType.AfmanualCheckEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AfmanualCheckEntity");
					break;
				case Falcon.Data.EntityType.AfmarketingMaterialEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AfmarketingMaterialEntity");
					break;
				case Falcon.Data.EntityType.AfMarketingMaterialBannerSizeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AfMarketingMaterialBannerSizeEntity");
					break;
				case Falcon.Data.EntityType.AfmarketingMaterialGroupEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AfmarketingMaterialGroupEntity");
					break;
				case Falcon.Data.EntityType.AfmarketingMaterialTypeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AfmarketingMaterialTypeEntity");
					break;
				case Falcon.Data.EntityType.AfpaymentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AfpaymentEntity");
					break;
				case Falcon.Data.EntityType.AfpaypalEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AfpaypalEntity");
					break;
				case Falcon.Data.EntityType.AfppcclickLogEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AfppcclickLogEntity");
					break;
				case Falcon.Data.EntityType.AfredirectUrlEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "AfredirectUrlEntity");
					break;
				case Falcon.Data.EntityType.ApplicationAuthenticationEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ApplicationAuthenticationEntity");
					break;
				case Falcon.Data.EntityType.BarrierEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "BarrierEntity");
					break;
				case Falcon.Data.EntityType.BillingAccountEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "BillingAccountEntity");
					break;
				case Falcon.Data.EntityType.BillingAccountTestEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "BillingAccountTestEntity");
					break;
				case Falcon.Data.EntityType.BlockedDaysEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "BlockedDaysEntity");
					break;
				case Falcon.Data.EntityType.BlockedDaysFranchiseeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "BlockedDaysFranchiseeEntity");
					break;
				case Falcon.Data.EntityType.CallCenterAgentTeamEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CallCenterAgentTeamEntity");
					break;
				case Falcon.Data.EntityType.CallCenterAgentTeamLogEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CallCenterAgentTeamLogEntity");
					break;
				case Falcon.Data.EntityType.CallCenterNotesEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CallCenterNotesEntity");
					break;
				case Falcon.Data.EntityType.CallCenterRepProfileEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CallCenterRepProfileEntity");
					break;
				case Falcon.Data.EntityType.CallCenterTeamEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CallCenterTeamEntity");
					break;
				case Falcon.Data.EntityType.CallDetailsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CallDetailsEntity");
					break;
				case Falcon.Data.EntityType.CallQueueEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CallQueueEntity");
					break;
				case Falcon.Data.EntityType.CallQueueAssignmentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CallQueueAssignmentEntity");
					break;
				case Falcon.Data.EntityType.CallQueueCriteriaEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CallQueueCriteriaEntity");
					break;
				case Falcon.Data.EntityType.CallQueueCustomerEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CallQueueCustomerEntity");
					break;
				case Falcon.Data.EntityType.CallQueueCustomerCallEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CallQueueCustomerCallEntity");
					break;
				case Falcon.Data.EntityType.CallQueueCustomerLockEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CallQueueCustomerLockEntity");
					break;
				case Falcon.Data.EntityType.CallQueueCustomTagEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CallQueueCustomTagEntity");
					break;
				case Falcon.Data.EntityType.CallRoundCallQueueEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CallRoundCallQueueEntity");
					break;
				case Falcon.Data.EntityType.CallRoundCallQueueCriteriaAssignmentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CallRoundCallQueueCriteriaAssignmentEntity");
					break;
				case Falcon.Data.EntityType.CallsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CallsEntity");
					break;
				case Falcon.Data.EntityType.CallUploadEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CallUploadEntity");
					break;
				case Falcon.Data.EntityType.CallUploadLogEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CallUploadLogEntity");
					break;
				case Falcon.Data.EntityType.CampaignEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CampaignEntity");
					break;
				case Falcon.Data.EntityType.CampaignActivityEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CampaignActivityEntity");
					break;
				case Falcon.Data.EntityType.CampaignActivityAssignmentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CampaignActivityAssignmentEntity");
					break;
				case Falcon.Data.EntityType.CampaignAssignmentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CampaignAssignmentEntity");
					break;
				case Falcon.Data.EntityType.CampaignTagEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CampaignTagEntity");
					break;
				case Falcon.Data.EntityType.CampaignTagMappingEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CampaignTagMappingEntity");
					break;
				case Falcon.Data.EntityType.CareCodingOutboundEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CareCodingOutboundEntity");
					break;
				case Falcon.Data.EntityType.CarrierEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CarrierEntity");
					break;
				case Falcon.Data.EntityType.CashPaymentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CashPaymentEntity");
					break;
				case Falcon.Data.EntityType.CategoriesEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CategoriesEntity");
					break;
				case Falcon.Data.EntityType.CdcontentGeneratorTrackingEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CdcontentGeneratorTrackingEntity");
					break;
				case Falcon.Data.EntityType.ChaperoneAnswerEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ChaperoneAnswerEntity");
					break;
				case Falcon.Data.EntityType.ChaperoneQuestionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ChaperoneQuestionEntity");
					break;
				case Falcon.Data.EntityType.ChaperoneSignatureEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ChaperoneSignatureEntity");
					break;
				case Falcon.Data.EntityType.ChargeCardEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ChargeCardEntity");
					break;
				case Falcon.Data.EntityType.ChargeCardPaymentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ChargeCardPaymentEntity");
					break;
				case Falcon.Data.EntityType.ChaseCampaignEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ChaseCampaignEntity");
					break;
				case Falcon.Data.EntityType.ChaseCampaignTypeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ChaseCampaignTypeEntity");
					break;
				case Falcon.Data.EntityType.ChaseChannelLevelEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ChaseChannelLevelEntity");
					break;
				case Falcon.Data.EntityType.ChaseGroupEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ChaseGroupEntity");
					break;
				case Falcon.Data.EntityType.ChaseOutboundEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ChaseOutboundEntity");
					break;
				case Falcon.Data.EntityType.ChaseProductEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ChaseProductEntity");
					break;
				case Falcon.Data.EntityType.CheckEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CheckEntity");
					break;
				case Falcon.Data.EntityType.CheckListAnswerEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CheckListAnswerEntity");
					break;
				case Falcon.Data.EntityType.CheckListGroupEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CheckListGroupEntity");
					break;
				case Falcon.Data.EntityType.ChecklistGroupQuestionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ChecklistGroupQuestionEntity");
					break;
				case Falcon.Data.EntityType.CheckListQuestionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CheckListQuestionEntity");
					break;
				case Falcon.Data.EntityType.CheckListTemplateEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CheckListTemplateEntity");
					break;
				case Falcon.Data.EntityType.CheckListTemplateQuestionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CheckListTemplateQuestionEntity");
					break;
				case Falcon.Data.EntityType.CheckPaymentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CheckPaymentEntity");
					break;
				case Falcon.Data.EntityType.CityEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CityEntity");
					break;
				case Falcon.Data.EntityType.ClaimEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ClaimEntity");
					break;
				case Falcon.Data.EntityType.ClickConversionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ClickConversionEntity");
					break;
				case Falcon.Data.EntityType.ClickKeywordEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ClickKeywordEntity");
					break;
				case Falcon.Data.EntityType.ClickLogEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ClickLogEntity");
					break;
				case Falcon.Data.EntityType.ClientEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ClientEntity");
					break;
				case Falcon.Data.EntityType.ClinicalTestQualificationCriteriaEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ClinicalTestQualificationCriteriaEntity");
					break;
				case Falcon.Data.EntityType.CommunicationModeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CommunicationModeEntity");
					break;
				case Falcon.Data.EntityType.ContactCallEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ContactCallEntity");
					break;
				case Falcon.Data.EntityType.ContactCallStatusEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ContactCallStatusEntity");
					break;
				case Falcon.Data.EntityType.ContactFranchiseeAccessEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ContactFranchiseeAccessEntity");
					break;
				case Falcon.Data.EntityType.ContactMeetingEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ContactMeetingEntity");
					break;
				case Falcon.Data.EntityType.ContactNotesEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ContactNotesEntity");
					break;
				case Falcon.Data.EntityType.ContactsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ContactsEntity");
					break;
				case Falcon.Data.EntityType.ContactTypeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ContactTypeEntity");
					break;
				case Falcon.Data.EntityType.ContentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ContentEntity");
					break;
				case Falcon.Data.EntityType.ContractEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ContractEntity");
					break;
				case Falcon.Data.EntityType.CorporateShippingOptionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CorporateShippingOptionEntity");
					break;
				case Falcon.Data.EntityType.CorporateTagEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CorporateTagEntity");
					break;
				case Falcon.Data.EntityType.CorporateUploadEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CorporateUploadEntity");
					break;
				case Falcon.Data.EntityType.CountryEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CountryEntity");
					break;
				case Falcon.Data.EntityType.CouponsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CouponsEntity");
					break;
				case Falcon.Data.EntityType.CouponSignUpModeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CouponSignUpModeEntity");
					break;
				case Falcon.Data.EntityType.CouponTypeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CouponTypeEntity");
					break;
				case Falcon.Data.EntityType.CreditCardTypeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CreditCardTypeEntity");
					break;
				case Falcon.Data.EntityType.CriteriaEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CriteriaEntity");
					break;
				case Falcon.Data.EntityType.CriticalCustomerCommunicationRecordEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CriticalCustomerCommunicationRecordEntity");
					break;
				case Falcon.Data.EntityType.CriticalQuestionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CriticalQuestionEntity");
					break;
				case Falcon.Data.EntityType.CurrentMedicationEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CurrentMedicationEntity");
					break;
				case Falcon.Data.EntityType.CustomCampaignContentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomCampaignContentEntity");
					break;
				case Falcon.Data.EntityType.CustomerAccountGlocomNumberEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerAccountGlocomNumberEntity");
					break;
				case Falcon.Data.EntityType.CustomerActivityTypeUploadEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerActivityTypeUploadEntity");
					break;
				case Falcon.Data.EntityType.CustomerBillingAccountEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerBillingAccountEntity");
					break;
				case Falcon.Data.EntityType.CustomerCallAttemptsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerCallAttemptsEntity");
					break;
				case Falcon.Data.EntityType.CustomerCallQueueCallAttemptEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerCallQueueCallAttemptEntity");
					break;
				case Falcon.Data.EntityType.CustomerChaseCampaignEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerChaseCampaignEntity");
					break;
				case Falcon.Data.EntityType.CustomerChaseChannelEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerChaseChannelEntity");
					break;
				case Falcon.Data.EntityType.CustomerChaseProductEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerChaseProductEntity");
					break;
				case Falcon.Data.EntityType.CustomerClinicalQuestionAnswerEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerClinicalQuestionAnswerEntity");
					break;
				case Falcon.Data.EntityType.CustomerEligibilityEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerEligibilityEntity");
					break;
				case Falcon.Data.EntityType.CustomerEventCriticalTestDataEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerEventCriticalTestDataEntity");
					break;
				case Falcon.Data.EntityType.CustomerEventPriorityInQueueDataEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerEventPriorityInQueueDataEntity");
					break;
				case Falcon.Data.EntityType.CustomerEventReadingEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerEventReadingEntity");
					break;
				case Falcon.Data.EntityType.CustomerEventScreeningTestsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerEventScreeningTestsEntity");
					break;
				case Falcon.Data.EntityType.CustomerEventTestFindingEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerEventTestFindingEntity");
					break;
				case Falcon.Data.EntityType.CustomerEventTestIncidentalFindingEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerEventTestIncidentalFindingEntity");
					break;
				case Falcon.Data.EntityType.CustomerEventTestIncidentalFindingDetailEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerEventTestIncidentalFindingDetailEntity");
					break;
				case Falcon.Data.EntityType.CustomerEventTestPhysicianEvaluationEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerEventTestPhysicianEvaluationEntity");
					break;
				case Falcon.Data.EntityType.CustomerEventTestPhysicianNoteEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerEventTestPhysicianNoteEntity");
					break;
				case Falcon.Data.EntityType.CustomerEventTestStandardFindingEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerEventTestStandardFindingEntity");
					break;
				case Falcon.Data.EntityType.CustomerEventTestStateEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerEventTestStateEntity");
					break;
				case Falcon.Data.EntityType.CustomerEventUnableScreenReasonEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerEventUnableScreenReasonEntity");
					break;
				case Falcon.Data.EntityType.CustomerHealthInfoEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerHealthInfoEntity");
					break;
				case Falcon.Data.EntityType.CustomerHealthInfoArchiveEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerHealthInfoArchiveEntity");
					break;
				case Falcon.Data.EntityType.CustomerHealthQuestionGroupEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerHealthQuestionGroupEntity");
					break;
				case Falcon.Data.EntityType.CustomerHealthQuestionsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerHealthQuestionsEntity");
					break;
				case Falcon.Data.EntityType.CustomerIcdCodeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerIcdCodeEntity");
					break;
				case Falcon.Data.EntityType.CustomerLockForCallEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerLockForCallEntity");
					break;
				case Falcon.Data.EntityType.CustomerMedicareQuestionAnswerEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerMedicareQuestionAnswerEntity");
					break;
				case Falcon.Data.EntityType.CustomerOrderHistoryEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerOrderHistoryEntity");
					break;
				case Falcon.Data.EntityType.CustomerPhoneNumberUpdateUploadEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerPhoneNumberUpdateUploadEntity");
					break;
				case Falcon.Data.EntityType.CustomerPhoneNumberUpdateUploadLogEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerPhoneNumberUpdateUploadLogEntity");
					break;
				case Falcon.Data.EntityType.CustomerPredictedZipEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerPredictedZipEntity");
					break;
				case Falcon.Data.EntityType.CustomerPrimaryCarePhysicianEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerPrimaryCarePhysicianEntity");
					break;
				case Falcon.Data.EntityType.CustomerProfileEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerProfileEntity");
					break;
				case Falcon.Data.EntityType.CustomerProfileHistoryEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerProfileHistoryEntity");
					break;
				case Falcon.Data.EntityType.CustomerRegistrationNotesEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerRegistrationNotesEntity");
					break;
				case Falcon.Data.EntityType.CustomerResultPostedEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerResultPostedEntity");
					break;
				case Falcon.Data.EntityType.CustomerResultScreeningCommunicationEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerResultScreeningCommunicationEntity");
					break;
				case Falcon.Data.EntityType.CustomerSkipReviewEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerSkipReviewEntity");
					break;
				case Falcon.Data.EntityType.CustomerSurveyEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerSurveyEntity");
					break;
				case Falcon.Data.EntityType.CustomerSurveyQuestionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerSurveyQuestionEntity");
					break;
				case Falcon.Data.EntityType.CustomerSurveyQuestionAnswerEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerSurveyQuestionAnswerEntity");
					break;
				case Falcon.Data.EntityType.CustomerTagEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerTagEntity");
					break;
				case Falcon.Data.EntityType.CustomerTargetedEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerTargetedEntity");
					break;
				case Falcon.Data.EntityType.CustomerTraleEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerTraleEntity");
					break;
				case Falcon.Data.EntityType.CustomerUnsubscribedSmsNotificationEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerUnsubscribedSmsNotificationEntity");
					break;
				case Falcon.Data.EntityType.CustomerWarmTransferEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomerWarmTransferEntity");
					break;
				case Falcon.Data.EntityType.CustomEventNotificationEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "CustomEventNotificationEntity");
					break;
				case Falcon.Data.EntityType.DemandDraftPaymentDetailsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "DemandDraftPaymentDetailsEntity");
					break;
				case Falcon.Data.EntityType.DependentDisqualifiedTestEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "DependentDisqualifiedTestEntity");
					break;
				case Falcon.Data.EntityType.DiabeticRetinopathyParserlogEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "DiabeticRetinopathyParserlogEntity");
					break;
				case Falcon.Data.EntityType.DigitalAssetAccessLogEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "DigitalAssetAccessLogEntity");
					break;
				case Falcon.Data.EntityType.DirectMailEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "DirectMailEntity");
					break;
				case Falcon.Data.EntityType.DirectMailTypeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "DirectMailTypeEntity");
					break;
				case Falcon.Data.EntityType.DisqualifiedTestEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "DisqualifiedTestEntity");
					break;
				case Falcon.Data.EntityType.EcheckPaymentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EcheckPaymentEntity");
					break;
				case Falcon.Data.EntityType.EligibilityEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EligibilityEntity");
					break;
				case Falcon.Data.EntityType.EligibilityUploadEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EligibilityUploadEntity");
					break;
				case Falcon.Data.EntityType.EmailTemplateEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EmailTemplateEntity");
					break;
				case Falcon.Data.EntityType.EmailTemplateMacroEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EmailTemplateMacroEntity");
					break;
				case Falcon.Data.EntityType.EncounterEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EncounterEntity");
					break;
				case Falcon.Data.EntityType.EventAccountEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventAccountEntity");
					break;
				case Falcon.Data.EntityType.EventAccountTestHcpcsCodeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventAccountTestHcpcsCodeEntity");
					break;
				case Falcon.Data.EntityType.EventActivityTemplateEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventActivityTemplateEntity");
					break;
				case Falcon.Data.EntityType.EventActivityTemplateCallEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventActivityTemplateCallEntity");
					break;
				case Falcon.Data.EntityType.EventActivityTemplateEmailEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventActivityTemplateEmailEntity");
					break;
				case Falcon.Data.EntityType.EventActivityTemplateHostEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventActivityTemplateHostEntity");
					break;
				case Falcon.Data.EntityType.EventActivityTemplateMeetingEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventActivityTemplateMeetingEntity");
					break;
				case Falcon.Data.EntityType.EventActivityTemplateTaskEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventActivityTemplateTaskEntity");
					break;
				case Falcon.Data.EntityType.EventAffiliateDetailsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventAffiliateDetailsEntity");
					break;
				case Falcon.Data.EntityType.EventAppointmentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventAppointmentEntity");
					break;
				case Falcon.Data.EntityType.EventAppointmentCancellationLogEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventAppointmentCancellationLogEntity");
					break;
				case Falcon.Data.EntityType.EventAppointmentChangeLogEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventAppointmentChangeLogEntity");
					break;
				case Falcon.Data.EntityType.EventCallDetailsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCallDetailsEntity");
					break;
				case Falcon.Data.EntityType.EventCampaignDetailsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCampaignDetailsEntity");
					break;
				case Falcon.Data.EntityType.EventChecklistTemplateEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventChecklistTemplateEntity");
					break;
				case Falcon.Data.EntityType.EventCouponsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCouponsEntity");
					break;
				case Falcon.Data.EntityType.EventCustomerBarrierEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCustomerBarrierEntity");
					break;
				case Falcon.Data.EntityType.EventCustomerBasicBioMetricEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCustomerBasicBioMetricEntity");
					break;
				case Falcon.Data.EntityType.EventCustomerCriticalQuestionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCustomerCriticalQuestionEntity");
					break;
				case Falcon.Data.EntityType.EventCustomerCurrentMedicationEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCustomerCurrentMedicationEntity");
					break;
				case Falcon.Data.EntityType.EventCustomerCustomNotificationEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCustomerCustomNotificationEntity");
					break;
				case Falcon.Data.EntityType.EventCustomerDiagnosisEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCustomerDiagnosisEntity");
					break;
				case Falcon.Data.EntityType.EventCustomerEligibilityEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCustomerEligibilityEntity");
					break;
				case Falcon.Data.EntityType.EventCustomerEncounterEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCustomerEncounterEntity");
					break;
				case Falcon.Data.EntityType.EventCustomerEvaluationLockEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCustomerEvaluationLockEntity");
					break;
				case Falcon.Data.EntityType.EventCustomerGiftCardEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCustomerGiftCardEntity");
					break;
				case Falcon.Data.EntityType.EventCustomerIcdCodesEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCustomerIcdCodesEntity");
					break;
				case Falcon.Data.EntityType.EventCustomerNotificationEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCustomerNotificationEntity");
					break;
				case Falcon.Data.EntityType.EventCustomerOrderDetailEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCustomerOrderDetailEntity");
					break;
				case Falcon.Data.EntityType.EventCustomerPaymentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCustomerPaymentEntity");
					break;
				case Falcon.Data.EntityType.EventCustomerPdfgenerationErrorLogEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCustomerPdfgenerationErrorLogEntity");
					break;
				case Falcon.Data.EntityType.EventCustomerPreApprovedPackageTestEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCustomerPreApprovedPackageTestEntity");
					break;
				case Falcon.Data.EntityType.EventCustomerPreApprovedTestEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCustomerPreApprovedTestEntity");
					break;
				case Falcon.Data.EntityType.EventCustomerPrimaryCarePhysicianEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCustomerPrimaryCarePhysicianEntity");
					break;
				case Falcon.Data.EntityType.EventCustomerQuestionAnswerEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCustomerQuestionAnswerEntity");
					break;
				case Falcon.Data.EntityType.EventCustomerRequiredTestEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCustomerRequiredTestEntity");
					break;
				case Falcon.Data.EntityType.EventCustomerResultEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCustomerResultEntity");
					break;
				case Falcon.Data.EntityType.EventCustomerResultBloodLabEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCustomerResultBloodLabEntity");
					break;
				case Falcon.Data.EntityType.EventCustomerResultBloodLabParserEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCustomerResultBloodLabParserEntity");
					break;
				case Falcon.Data.EntityType.EventCustomerResultHistoryEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCustomerResultHistoryEntity");
					break;
				case Falcon.Data.EntityType.EventCustomerResultTraleEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCustomerResultTraleEntity");
					break;
				case Falcon.Data.EntityType.EventCustomerRetestEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCustomerRetestEntity");
					break;
				case Falcon.Data.EntityType.EventCustomersEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCustomersEntity");
					break;
				case Falcon.Data.EntityType.EventCustomerTestNotPerformedNotificationEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventCustomerTestNotPerformedNotificationEntity");
					break;
				case Falcon.Data.EntityType.EventFluConsentTemplateEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventFluConsentTemplateEntity");
					break;
				case Falcon.Data.EntityType.EventHospitalFacilityEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventHospitalFacilityEntity");
					break;
				case Falcon.Data.EntityType.EventHospitalPartnerEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventHospitalPartnerEntity");
					break;
				case Falcon.Data.EntityType.EventHostPromotionsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventHostPromotionsEntity");
					break;
				case Falcon.Data.EntityType.EventMarketingOffersEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventMarketingOffersEntity");
					break;
				case Falcon.Data.EntityType.EventMeetingDetailsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventMeetingDetailsEntity");
					break;
				case Falcon.Data.EntityType.EventNoteEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventNoteEntity");
					break;
				case Falcon.Data.EntityType.EventNotesLogEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventNotesLogEntity");
					break;
				case Falcon.Data.EntityType.EventNotificationEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventNotificationEntity");
					break;
				case Falcon.Data.EntityType.EventPackageDetailsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventPackageDetailsEntity");
					break;
				case Falcon.Data.EntityType.EventPackageOrderItemEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventPackageOrderItemEntity");
					break;
				case Falcon.Data.EntityType.EventPackageTestEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventPackageTestEntity");
					break;
				case Falcon.Data.EntityType.EventPaymentDetailsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventPaymentDetailsEntity");
					break;
				case Falcon.Data.EntityType.EventPerformanceMailStatusEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventPerformanceMailStatusEntity");
					break;
				case Falcon.Data.EntityType.EventPhysicianTestEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventPhysicianTestEntity");
					break;
				case Falcon.Data.EntityType.EventPodEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventPodEntity");
					break;
				case Falcon.Data.EntityType.EventPodRoomEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventPodRoomEntity");
					break;
				case Falcon.Data.EntityType.EventPodRoomTestEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventPodRoomTestEntity");
					break;
				case Falcon.Data.EntityType.EventProductExclusionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventProductExclusionEntity");
					break;
				case Falcon.Data.EntityType.EventProductTypeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventProductTypeEntity");
					break;
				case Falcon.Data.EntityType.EventPublicationEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventPublicationEntity");
					break;
				case Falcon.Data.EntityType.EventsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventsEntity");
					break;
				case Falcon.Data.EntityType.EventScheduleTemplateEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventScheduleTemplateEntity");
					break;
				case Falcon.Data.EntityType.EventSchedulingSlotEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventSchedulingSlotEntity");
					break;
				case Falcon.Data.EntityType.EventSlotAppointmentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventSlotAppointmentEntity");
					break;
				case Falcon.Data.EntityType.EventStaffAssignmentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventStaffAssignmentEntity");
					break;
				case Falcon.Data.EntityType.EventSurveyTemplateEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventSurveyTemplateEntity");
					break;
				case Falcon.Data.EntityType.EventTaskDetailsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventTaskDetailsEntity");
					break;
				case Falcon.Data.EntityType.EventTestEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventTestEntity");
					break;
				case Falcon.Data.EntityType.EventTestOrderItemEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventTestOrderItemEntity");
					break;
				case Falcon.Data.EntityType.EventTypeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventTypeEntity");
					break;
				case Falcon.Data.EntityType.EventZipEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventZipEntity");
					break;
				case Falcon.Data.EntityType.EventZipProductTypeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventZipProductTypeEntity");
					break;
				case Falcon.Data.EntityType.EventZipProductTypeSubstituteEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "EventZipProductTypeSubstituteEntity");
					break;
				case Falcon.Data.EntityType.ExitInterviewAnswerEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ExitInterviewAnswerEntity");
					break;
				case Falcon.Data.EntityType.ExitInterviewQuestionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ExitInterviewQuestionEntity");
					break;
				case Falcon.Data.EntityType.ExitInterviewSignatureEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ExitInterviewSignatureEntity");
					break;
				case Falcon.Data.EntityType.ExportableReportsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ExportableReportsEntity");
					break;
				case Falcon.Data.EntityType.ExportableReportsQueueEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ExportableReportsQueueEntity");
					break;
				case Falcon.Data.EntityType.FileEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "FileEntity");
					break;
				case Falcon.Data.EntityType.FillEventCallQueueEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "FillEventCallQueueEntity");
					break;
				case Falcon.Data.EntityType.FillEventCallQueueCriteriaAssignmentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "FillEventCallQueueCriteriaAssignmentEntity");
					break;
				case Falcon.Data.EntityType.FluConsentAnswerEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "FluConsentAnswerEntity");
					break;
				case Falcon.Data.EntityType.FluConsentQuestionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "FluConsentQuestionEntity");
					break;
				case Falcon.Data.EntityType.FluConsentSignatureEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "FluConsentSignatureEntity");
					break;
				case Falcon.Data.EntityType.FluConsentTemplateEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "FluConsentTemplateEntity");
					break;
				case Falcon.Data.EntityType.FluConsentTemplateQuestionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "FluConsentTemplateQuestionEntity");
					break;
				case Falcon.Data.EntityType.FraminghamCalculationSourceEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "FraminghamCalculationSourceEntity");
					break;
				case Falcon.Data.EntityType.FraminghamScoreRangeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "FraminghamScoreRangeEntity");
					break;
				case Falcon.Data.EntityType.FranchiseeApplicationEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "FranchiseeApplicationEntity");
					break;
				case Falcon.Data.EntityType.FranchiseeTerritoryEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "FranchiseeTerritoryEntity");
					break;
				case Falcon.Data.EntityType.FranchiseeWiringInstructionsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "FranchiseeWiringInstructionsEntity");
					break;
				case Falcon.Data.EntityType.GcNotGivenReasonEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "GcNotGivenReasonEntity");
					break;
				case Falcon.Data.EntityType.GiftCertificateEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "GiftCertificateEntity");
					break;
				case Falcon.Data.EntityType.GiftCertificateOrderItemEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "GiftCertificateOrderItemEntity");
					break;
				case Falcon.Data.EntityType.GiftCertificatePaymentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "GiftCertificatePaymentEntity");
					break;
				case Falcon.Data.EntityType.GiftCertificateTypeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "GiftCertificateTypeEntity");
					break;
				case Falcon.Data.EntityType.GlobalConfigurationEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "GlobalConfigurationEntity");
					break;
				case Falcon.Data.EntityType.GuardianDetailsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "GuardianDetailsEntity");
					break;
				case Falcon.Data.EntityType.HafTemplateEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HafTemplateEntity");
					break;
				case Falcon.Data.EntityType.HafTemplateQuestionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HafTemplateQuestionEntity");
					break;
				case Falcon.Data.EntityType.HcpcsCodeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HcpcsCodeEntity");
					break;
				case Falcon.Data.EntityType.HealthPlanCallQueueCriteriaEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HealthPlanCallQueueCriteriaEntity");
					break;
				case Falcon.Data.EntityType.HealthPlanCallQueueCriteriaAssignmentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HealthPlanCallQueueCriteriaAssignmentEntity");
					break;
				case Falcon.Data.EntityType.HealthPlanCriteriaAssignmentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HealthPlanCriteriaAssignmentEntity");
					break;
				case Falcon.Data.EntityType.HealthPlanCriteriaAssignmentUploadEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HealthPlanCriteriaAssignmentUploadEntity");
					break;
				case Falcon.Data.EntityType.HealthPlanCriteriaDirectMailEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HealthPlanCriteriaDirectMailEntity");
					break;
				case Falcon.Data.EntityType.HealthPlanCriteriaTeamAssignmentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HealthPlanCriteriaTeamAssignmentEntity");
					break;
				case Falcon.Data.EntityType.HealthPlanEventZipEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HealthPlanEventZipEntity");
					break;
				case Falcon.Data.EntityType.HealthPlanFillEventCallQueueEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HealthPlanFillEventCallQueueEntity");
					break;
				case Falcon.Data.EntityType.HealthPlanRevenueEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HealthPlanRevenueEntity");
					break;
				case Falcon.Data.EntityType.HealthPlanRevenueItemEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HealthPlanRevenueItemEntity");
					break;
				case Falcon.Data.EntityType.HealthQuestionDependencyRuleEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HealthQuestionDependencyRuleEntity");
					break;
				case Falcon.Data.EntityType.HospitalFacilityEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HospitalFacilityEntity");
					break;
				case Falcon.Data.EntityType.HospitalFacilityCampaignEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HospitalFacilityCampaignEntity");
					break;
				case Falcon.Data.EntityType.HospitalPartnerEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HospitalPartnerEntity");
					break;
				case Falcon.Data.EntityType.HospitalPartnerCustomerEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HospitalPartnerCustomerEntity");
					break;
				case Falcon.Data.EntityType.HospitalPartnerEventNotesEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HospitalPartnerEventNotesEntity");
					break;
				case Falcon.Data.EntityType.HospitalPartnerHospitalFacilityEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HospitalPartnerHospitalFacilityEntity");
					break;
				case Falcon.Data.EntityType.HospitalPartnerPackageEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HospitalPartnerPackageEntity");
					break;
				case Falcon.Data.EntityType.HospitalPartnerShippingOptionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HospitalPartnerShippingOptionEntity");
					break;
				case Falcon.Data.EntityType.HospitalPartnerTerritoryEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HospitalPartnerTerritoryEntity");
					break;
				case Falcon.Data.EntityType.HostAdvocateDetailEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HostAdvocateDetailEntity");
					break;
				case Falcon.Data.EntityType.HostEventDetailsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HostEventDetailsEntity");
					break;
				case Falcon.Data.EntityType.HostFacilityRankingEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HostFacilityRankingEntity");
					break;
				case Falcon.Data.EntityType.HostImageEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HostImageEntity");
					break;
				case Falcon.Data.EntityType.HostNotesEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HostNotesEntity");
					break;
				case Falcon.Data.EntityType.HostPaymentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HostPaymentEntity");
					break;
				case Falcon.Data.EntityType.HostPaymentTransactionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "HostPaymentTransactionEntity");
					break;
				case Falcon.Data.EntityType.IcdCodesEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "IcdCodesEntity");
					break;
				case Falcon.Data.EntityType.IflocationMasterEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "IflocationMasterEntity");
					break;
				case Falcon.Data.EntityType.IncidentalFindingIncidentalFindingReadingGroupEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "IncidentalFindingIncidentalFindingReadingGroupEntity");
					break;
				case Falcon.Data.EntityType.IncidentalFindingReadingGroupEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "IncidentalFindingReadingGroupEntity");
					break;
				case Falcon.Data.EntityType.IncidentalFindingReadingGroupItemEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "IncidentalFindingReadingGroupItemEntity");
					break;
				case Falcon.Data.EntityType.IncidentalFindingsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "IncidentalFindingsEntity");
					break;
				case Falcon.Data.EntityType.IncomingPhoneNumberResolverRuleEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "IncomingPhoneNumberResolverRuleEntity");
					break;
				case Falcon.Data.EntityType.InsuranceCompanyEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "InsuranceCompanyEntity");
					break;
				case Falcon.Data.EntityType.InsurancePaymentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "InsurancePaymentEntity");
					break;
				case Falcon.Data.EntityType.InsuranceServiceTypeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "InsuranceServiceTypeEntity");
					break;
				case Falcon.Data.EntityType.InventoryItemEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "InventoryItemEntity");
					break;
				case Falcon.Data.EntityType.InventoryItemTestEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "InventoryItemTestEntity");
					break;
				case Falcon.Data.EntityType.ItemEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ItemEntity");
					break;
				case Falcon.Data.EntityType.ItemTypeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ItemTypeEntity");
					break;
				case Falcon.Data.EntityType.KynLabValuesEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "KynLabValuesEntity");
					break;
				case Falcon.Data.EntityType.LabEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "LabEntity");
					break;
				case Falcon.Data.EntityType.LanguageEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "LanguageEntity");
					break;
				case Falcon.Data.EntityType.LanguageBarrierCallQueueEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "LanguageBarrierCallQueueEntity");
					break;
				case Falcon.Data.EntityType.LanguageBarrierCallQueueCriteriaAssignmentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "LanguageBarrierCallQueueCriteriaAssignmentEntity");
					break;
				case Falcon.Data.EntityType.LoginOtpEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "LoginOtpEntity");
					break;
				case Falcon.Data.EntityType.LoginSettingsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "LoginSettingsEntity");
					break;
				case Falcon.Data.EntityType.LoincCrosswalkEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "LoincCrosswalkEntity");
					break;
				case Falcon.Data.EntityType.LoincLabDataEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "LoincLabDataEntity");
					break;
				case Falcon.Data.EntityType.LookupEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "LookupEntity");
					break;
				case Falcon.Data.EntityType.LookupTypeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "LookupTypeEntity");
					break;
				case Falcon.Data.EntityType.MailRoundCallQueueEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MailRoundCallQueueEntity");
					break;
				case Falcon.Data.EntityType.MailRoundCallQueueCriteriaAssignmentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MailRoundCallQueueCriteriaAssignmentEntity");
					break;
				case Falcon.Data.EntityType.MarketingOfferRoleMappingEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MarketingOfferRoleMappingEntity");
					break;
				case Falcon.Data.EntityType.MarketingOffersEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MarketingOffersEntity");
					break;
				case Falcon.Data.EntityType.MarketingOfferSignUpModeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MarketingOfferSignUpModeEntity");
					break;
				case Falcon.Data.EntityType.MarketingOfferTypeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MarketingOfferTypeEntity");
					break;
				case Falcon.Data.EntityType.MarketingOrderShippingInfoEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MarketingOrderShippingInfoEntity");
					break;
				case Falcon.Data.EntityType.MarketingPrintOrderEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MarketingPrintOrderEntity");
					break;
				case Falcon.Data.EntityType.MarketingPrintOrderEventMappingEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MarketingPrintOrderEventMappingEntity");
					break;
				case Falcon.Data.EntityType.MarketingPrintOrderItemEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MarketingPrintOrderItemEntity");
					break;
				case Falcon.Data.EntityType.MarketingPrintOrderProspectListMappingEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MarketingPrintOrderProspectListMappingEntity");
					break;
				case Falcon.Data.EntityType.MarketingSourceEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MarketingSourceEntity");
					break;
				case Falcon.Data.EntityType.MarketingSourceTerritoryEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MarketingSourceTerritoryEntity");
					break;
				case Falcon.Data.EntityType.MedicalHistoryReadingAssosciationEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MedicalHistoryReadingAssosciationEntity");
					break;
				case Falcon.Data.EntityType.MedicalVendorProfileEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MedicalVendorProfileEntity");
					break;
				case Falcon.Data.EntityType.MedicalVendorTypeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MedicalVendorTypeEntity");
					break;
				case Falcon.Data.EntityType.MedicareGroupDependencyRuleEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MedicareGroupDependencyRuleEntity");
					break;
				case Falcon.Data.EntityType.MedicareQuestionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MedicareQuestionEntity");
					break;
				case Falcon.Data.EntityType.MedicareQuestionDependencyRuleEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MedicareQuestionDependencyRuleEntity");
					break;
				case Falcon.Data.EntityType.MedicareQuestionGroupEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MedicareQuestionGroupEntity");
					break;
				case Falcon.Data.EntityType.MedicareQuestionsRemarksEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MedicareQuestionsRemarksEntity");
					break;
				case Falcon.Data.EntityType.MedicationEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MedicationEntity");
					break;
				case Falcon.Data.EntityType.MedicationUploadEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MedicationUploadEntity");
					break;
				case Falcon.Data.EntityType.MedicationUploadLogEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MedicationUploadLogEntity");
					break;
				case Falcon.Data.EntityType.MemberUploadLogEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MemberUploadLogEntity");
					break;
				case Falcon.Data.EntityType.MemberUploadParseDetailEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MemberUploadParseDetailEntity");
					break;
				case Falcon.Data.EntityType.MergeCustomerUploadEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MergeCustomerUploadEntity");
					break;
				case Falcon.Data.EntityType.MergeCustomerUploadLogEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MergeCustomerUploadLogEntity");
					break;
				case Falcon.Data.EntityType.MolinaAttestationEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MolinaAttestationEntity");
					break;
				case Falcon.Data.EntityType.MVPaymentCheckDetailsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MVPaymentCheckDetailsEntity");
					break;
				case Falcon.Data.EntityType.MvuserClassificationEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "MvuserClassificationEntity");
					break;
				case Falcon.Data.EntityType.NdcEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "NdcEntity");
					break;
				case Falcon.Data.EntityType.NoShowCallQueueEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "NoShowCallQueueEntity");
					break;
				case Falcon.Data.EntityType.NoShowCallQueueCriteriaAssignmentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "NoShowCallQueueCriteriaAssignmentEntity");
					break;
				case Falcon.Data.EntityType.NoteEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "NoteEntity");
					break;
				case Falcon.Data.EntityType.NotesDetailsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "NotesDetailsEntity");
					break;
				case Falcon.Data.EntityType.NotificationEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "NotificationEntity");
					break;
				case Falcon.Data.EntityType.NotificationEmailEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "NotificationEmailEntity");
					break;
				case Falcon.Data.EntityType.NotificationMediumEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "NotificationMediumEntity");
					break;
				case Falcon.Data.EntityType.NotificationPhoneEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "NotificationPhoneEntity");
					break;
				case Falcon.Data.EntityType.NotificationSubscribersEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "NotificationSubscribersEntity");
					break;
				case Falcon.Data.EntityType.NotificationTypeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "NotificationTypeEntity");
					break;
				case Falcon.Data.EntityType.OrderEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "OrderEntity");
					break;
				case Falcon.Data.EntityType.OrderDetailEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "OrderDetailEntity");
					break;
				case Falcon.Data.EntityType.OrderItemEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "OrderItemEntity");
					break;
				case Falcon.Data.EntityType.OrganizationEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "OrganizationEntity");
					break;
				case Falcon.Data.EntityType.OrganizationRoleUserEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "OrganizationRoleUserEntity");
					break;
				case Falcon.Data.EntityType.OrganizationRoleUserTerritoryEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "OrganizationRoleUserTerritoryEntity");
					break;
				case Falcon.Data.EntityType.OrganizationTypeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "OrganizationTypeEntity");
					break;
				case Falcon.Data.EntityType.OrgRoleUserActivityEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "OrgRoleUserActivityEntity");
					break;
				case Falcon.Data.EntityType.OutboundUploadEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "OutboundUploadEntity");
					break;
				case Falcon.Data.EntityType.PackageEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PackageEntity");
					break;
				case Falcon.Data.EntityType.PackageAvailabilityToRolesEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PackageAvailabilityToRolesEntity");
					break;
				case Falcon.Data.EntityType.PackageMarketingOfferDiscountEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PackageMarketingOfferDiscountEntity");
					break;
				case Falcon.Data.EntityType.PackageSourceCodeDiscountEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PackageSourceCodeDiscountEntity");
					break;
				case Falcon.Data.EntityType.PackageTestEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PackageTestEntity");
					break;
				case Falcon.Data.EntityType.ParticipationConsentSignatureEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ParticipationConsentSignatureEntity");
					break;
				case Falcon.Data.EntityType.PasswordChangelogEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PasswordChangelogEntity");
					break;
				case Falcon.Data.EntityType.PaymentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PaymentEntity");
					break;
				case Falcon.Data.EntityType.PaymentFrequencyEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PaymentFrequencyEntity");
					break;
				case Falcon.Data.EntityType.PaymentInstructionsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PaymentInstructionsEntity");
					break;
				case Falcon.Data.EntityType.PaymentOrderEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PaymentOrderEntity");
					break;
				case Falcon.Data.EntityType.PaymentTypeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PaymentTypeEntity");
					break;
				case Falcon.Data.EntityType.PayPeriodEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PayPeriodEntity");
					break;
				case Falcon.Data.EntityType.PayPeriodCriteriaEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PayPeriodCriteriaEntity");
					break;
				case Falcon.Data.EntityType.PcpAppointmentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PcpAppointmentEntity");
					break;
				case Falcon.Data.EntityType.PcpDispositionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PcpDispositionEntity");
					break;
				case Falcon.Data.EntityType.PhysicianCustomerAssignmentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PhysicianCustomerAssignmentEntity");
					break;
				case Falcon.Data.EntityType.PhysicianCustomerPayRateEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PhysicianCustomerPayRateEntity");
					break;
				case Falcon.Data.EntityType.PhysicianEarningsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PhysicianEarningsEntity");
					break;
				case Falcon.Data.EntityType.PhysicianEvaluationEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PhysicianEvaluationEntity");
					break;
				case Falcon.Data.EntityType.PhysicianEventAssignmentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PhysicianEventAssignmentEntity");
					break;
				case Falcon.Data.EntityType.PhysicianInvoiceEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PhysicianInvoiceEntity");
					break;
				case Falcon.Data.EntityType.PhysicianInvoiceItemEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PhysicianInvoiceItemEntity");
					break;
				case Falcon.Data.EntityType.PhysicianLabTestEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PhysicianLabTestEntity");
					break;
				case Falcon.Data.EntityType.PhysicianLicenseEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PhysicianLicenseEntity");
					break;
				case Falcon.Data.EntityType.PhysicianMasterEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PhysicianMasterEntity");
					break;
				case Falcon.Data.EntityType.PhysicianPaymentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PhysicianPaymentEntity");
					break;
				case Falcon.Data.EntityType.PhysicianPaymentInvoiceEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PhysicianPaymentInvoiceEntity");
					break;
				case Falcon.Data.EntityType.PhysicianPermittedTestEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PhysicianPermittedTestEntity");
					break;
				case Falcon.Data.EntityType.PhysicianPodEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PhysicianPodEntity");
					break;
				case Falcon.Data.EntityType.PhysicianProfileEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PhysicianProfileEntity");
					break;
				case Falcon.Data.EntityType.PhysicianRecordRequestSignatureEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PhysicianRecordRequestSignatureEntity");
					break;
				case Falcon.Data.EntityType.PhysicianSpecializationEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PhysicianSpecializationEntity");
					break;
				case Falcon.Data.EntityType.PinChangelogEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PinChangelogEntity");
					break;
				case Falcon.Data.EntityType.PodDefaultTeamEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PodDefaultTeamEntity");
					break;
				case Falcon.Data.EntityType.PodDetailsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PodDetailsEntity");
					break;
				case Falcon.Data.EntityType.PodInventoryItemEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PodInventoryItemEntity");
					break;
				case Falcon.Data.EntityType.PodPackageEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PodPackageEntity");
					break;
				case Falcon.Data.EntityType.PodRoomEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PodRoomEntity");
					break;
				case Falcon.Data.EntityType.PodRoomTestEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PodRoomTestEntity");
					break;
				case Falcon.Data.EntityType.PodTerritoryEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PodTerritoryEntity");
					break;
				case Falcon.Data.EntityType.PodTestEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PodTestEntity");
					break;
				case Falcon.Data.EntityType.PreApprovedPackageEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PreApprovedPackageEntity");
					break;
				case Falcon.Data.EntityType.PreApprovedTestEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PreApprovedTestEntity");
					break;
				case Falcon.Data.EntityType.PreAssessmentCallQueueCustomerLockEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PreAssessmentCallQueueCustomerLockEntity");
					break;
				case Falcon.Data.EntityType.PreAssessmentCustomerCallQueueCallAttemptEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PreAssessmentCustomerCallQueueCallAttemptEntity");
					break;
				case Falcon.Data.EntityType.PreQualificationQuestionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PreQualificationQuestionEntity");
					break;
				case Falcon.Data.EntityType.PreQualificationQuestionRuleEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PreQualificationQuestionRuleEntity");
					break;
				case Falcon.Data.EntityType.PreQualificationResultEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PreQualificationResultEntity");
					break;
				case Falcon.Data.EntityType.PreQualificationTemplateDependentTestEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PreQualificationTemplateDependentTestEntity");
					break;
				case Falcon.Data.EntityType.PreQualificationTemplateQuestionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PreQualificationTemplateQuestionEntity");
					break;
				case Falcon.Data.EntityType.PreQualificationTestTemplateEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PreQualificationTestTemplateEntity");
					break;
				case Falcon.Data.EntityType.PrintOrderItemTrackingEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PrintOrderItemTrackingEntity");
					break;
				case Falcon.Data.EntityType.PriorityInQueueEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "PriorityInQueueEntity");
					break;
				case Falcon.Data.EntityType.ProductEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ProductEntity");
					break;
				case Falcon.Data.EntityType.ProductOrderItemEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ProductOrderItemEntity");
					break;
				case Falcon.Data.EntityType.ProductShippingOptionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ProductShippingOptionEntity");
					break;
				case Falcon.Data.EntityType.ProductSourceCodeDiscountEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ProductSourceCodeDiscountEntity");
					break;
				case Falcon.Data.EntityType.ProspectActivityEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ProspectActivityEntity");
					break;
				case Falcon.Data.EntityType.ProspectActivityDetailsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ProspectActivityDetailsEntity");
					break;
				case Falcon.Data.EntityType.ProspectAddressEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ProspectAddressEntity");
					break;
				case Falcon.Data.EntityType.ProspectCallDetailsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ProspectCallDetailsEntity");
					break;
				case Falcon.Data.EntityType.ProspectCallsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ProspectCallsEntity");
					break;
				case Falcon.Data.EntityType.ProspectContactEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ProspectContactEntity");
					break;
				case Falcon.Data.EntityType.ProspectContactCallsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ProspectContactCallsEntity");
					break;
				case Falcon.Data.EntityType.ProspectContactMeetingsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ProspectContactMeetingsEntity");
					break;
				case Falcon.Data.EntityType.ProspectContactRoleEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ProspectContactRoleEntity");
					break;
				case Falcon.Data.EntityType.ProspectContactRoleMappingEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ProspectContactRoleMappingEntity");
					break;
				case Falcon.Data.EntityType.ProspectContactTasksEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ProspectContactTasksEntity");
					break;
				case Falcon.Data.EntityType.ProspectCustomerEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ProspectCustomerEntity");
					break;
				case Falcon.Data.EntityType.ProspectCustomerCallEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ProspectCustomerCallEntity");
					break;
				case Falcon.Data.EntityType.ProspectCustomerDeletedEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ProspectCustomerDeletedEntity");
					break;
				case Falcon.Data.EntityType.ProspectCustomerNotificationEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ProspectCustomerNotificationEntity");
					break;
				case Falcon.Data.EntityType.ProspectDetailsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ProspectDetailsEntity");
					break;
				case Falcon.Data.EntityType.ProspectFaliureReportEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ProspectFaliureReportEntity");
					break;
				case Falcon.Data.EntityType.ProspectListDetailsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ProspectListDetailsEntity");
					break;
				case Falcon.Data.EntityType.ProspectListTypeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ProspectListTypeEntity");
					break;
				case Falcon.Data.EntityType.ProspectMeetingsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ProspectMeetingsEntity");
					break;
				case Falcon.Data.EntityType.ProspectNotesDetailsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ProspectNotesDetailsEntity");
					break;
				case Falcon.Data.EntityType.ProspectsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ProspectsEntity");
					break;
				case Falcon.Data.EntityType.ProspectTasksEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ProspectTasksEntity");
					break;
				case Falcon.Data.EntityType.ProspectTypeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ProspectTypeEntity");
					break;
				case Falcon.Data.EntityType.RapsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "RapsEntity");
					break;
				case Falcon.Data.EntityType.RapsUploadEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "RapsUploadEntity");
					break;
				case Falcon.Data.EntityType.RapsUploadLogEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "RapsUploadLogEntity");
					break;
				case Falcon.Data.EntityType.ReadingEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ReadingEntity");
					break;
				case Falcon.Data.EntityType.ReferralEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ReferralEntity");
					break;
				case Falcon.Data.EntityType.RefundEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "RefundEntity");
					break;
				case Falcon.Data.EntityType.RefundOrderItemEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "RefundOrderItemEntity");
					break;
				case Falcon.Data.EntityType.RefundRequestEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "RefundRequestEntity");
					break;
				case Falcon.Data.EntityType.RefundRequestGiftCertificateEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "RefundRequestGiftCertificateEntity");
					break;
				case Falcon.Data.EntityType.RelationshipEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "RelationshipEntity");
					break;
				case Falcon.Data.EntityType.RequiredTestEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "RequiredTestEntity");
					break;
				case Falcon.Data.EntityType.RescheduleCancelDispositionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "RescheduleCancelDispositionEntity");
					break;
				case Falcon.Data.EntityType.ResultArchiveUploadEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ResultArchiveUploadEntity");
					break;
				case Falcon.Data.EntityType.ResultArchiveUploadLogEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ResultArchiveUploadLogEntity");
					break;
				case Falcon.Data.EntityType.RoleEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "RoleEntity");
					break;
				case Falcon.Data.EntityType.RoleAccessControlObjectEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "RoleAccessControlObjectEntity");
					break;
				case Falcon.Data.EntityType.RolePermisibleAccessControlObjectEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "RolePermisibleAccessControlObjectEntity");
					break;
				case Falcon.Data.EntityType.RoleScopeOptionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "RoleScopeOptionEntity");
					break;
				case Falcon.Data.EntityType.SafeComputerHistoryEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "SafeComputerHistoryEntity");
					break;
				case Falcon.Data.EntityType.SalesRepPodAssigmentsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "SalesRepPodAssigmentsEntity");
					break;
				case Falcon.Data.EntityType.ScheduleMethodEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ScheduleMethodEntity");
					break;
				case Falcon.Data.EntityType.ScheduleTemplateEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ScheduleTemplateEntity");
					break;
				case Falcon.Data.EntityType.ScheduleTemplateFranchiseeAccessEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ScheduleTemplateFranchiseeAccessEntity");
					break;
				case Falcon.Data.EntityType.ScheduleTemplateTimeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ScheduleTemplateTimeEntity");
					break;
				case Falcon.Data.EntityType.ScreeningAuthorizationEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ScreeningAuthorizationEntity");
					break;
				case Falcon.Data.EntityType.ScriptsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ScriptsEntity");
					break;
				case Falcon.Data.EntityType.ScriptTypeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ScriptTypeEntity");
					break;
				case Falcon.Data.EntityType.SecurityQuestionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "SecurityQuestionEntity");
					break;
				case Falcon.Data.EntityType.SeminarCampaignDetailsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "SeminarCampaignDetailsEntity");
					break;
				case Falcon.Data.EntityType.SeminarsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "SeminarsEntity");
					break;
				case Falcon.Data.EntityType.ShippingDetailEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ShippingDetailEntity");
					break;
				case Falcon.Data.EntityType.ShippingDetailOrderDetailEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ShippingDetailOrderDetailEntity");
					break;
				case Falcon.Data.EntityType.ShippingOptionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ShippingOptionEntity");
					break;
				case Falcon.Data.EntityType.ShippingOptionOrderItemEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ShippingOptionOrderItemEntity");
					break;
				case Falcon.Data.EntityType.ShippingOptionSourceCodeDiscountEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ShippingOptionSourceCodeDiscountEntity");
					break;
				case Falcon.Data.EntityType.SmsReceivedEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "SmsReceivedEntity");
					break;
				case Falcon.Data.EntityType.SourceCodeChangeLogEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "SourceCodeChangeLogEntity");
					break;
				case Falcon.Data.EntityType.SourceCodeOrderDetailEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "SourceCodeOrderDetailEntity");
					break;
				case Falcon.Data.EntityType.StaffEventRoleEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "StaffEventRoleEntity");
					break;
				case Falcon.Data.EntityType.StaffEventRoleTestEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "StaffEventRoleTestEntity");
					break;
				case Falcon.Data.EntityType.StaffEventScheduleUploadEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "StaffEventScheduleUploadEntity");
					break;
				case Falcon.Data.EntityType.StaffEventScheduleUploadLogEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "StaffEventScheduleUploadLogEntity");
					break;
				case Falcon.Data.EntityType.StandardFindingEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "StandardFindingEntity");
					break;
				case Falcon.Data.EntityType.StandardFindingTestReadingEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "StandardFindingTestReadingEntity");
					break;
				case Falcon.Data.EntityType.StateEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "StateEntity");
					break;
				case Falcon.Data.EntityType.SurveyAnswerEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "SurveyAnswerEntity");
					break;
				case Falcon.Data.EntityType.SurveyQuestionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "SurveyQuestionEntity");
					break;
				case Falcon.Data.EntityType.SurveyTemplateEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "SurveyTemplateEntity");
					break;
				case Falcon.Data.EntityType.SurveyTemplateQuestionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "SurveyTemplateQuestionEntity");
					break;
				case Falcon.Data.EntityType.SuspectConditionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "SuspectConditionEntity");
					break;
				case Falcon.Data.EntityType.SuspectConditionUploadEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "SuspectConditionUploadEntity");
					break;
				case Falcon.Data.EntityType.SuspectConditionUploadLogEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "SuspectConditionUploadLogEntity");
					break;
				case Falcon.Data.EntityType.SystemGeneratedCallQueueAssignmentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "SystemGeneratedCallQueueAssignmentEntity");
					break;
				case Falcon.Data.EntityType.SystemGeneratedCallQueueCriteriaEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "SystemGeneratedCallQueueCriteriaEntity");
					break;
				case Falcon.Data.EntityType.SystemUserInfoEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "SystemUserInfoEntity");
					break;
				case Falcon.Data.EntityType.TagEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "TagEntity");
					break;
				case Falcon.Data.EntityType.TaskEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "TaskEntity");
					break;
				case Falcon.Data.EntityType.TaskDetailsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "TaskDetailsEntity");
					break;
				case Falcon.Data.EntityType.TaskPriorityTypesEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "TaskPriorityTypesEntity");
					break;
				case Falcon.Data.EntityType.TaskStatusTypesEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "TaskStatusTypesEntity");
					break;
				case Falcon.Data.EntityType.TechnicianProfileEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "TechnicianProfileEntity");
					break;
				case Falcon.Data.EntityType.TempCartEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "TempCartEntity");
					break;
				case Falcon.Data.EntityType.TemplateEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "TemplateEntity");
					break;
				case Falcon.Data.EntityType.TemplateMacroEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "TemplateMacroEntity");
					break;
				case Falcon.Data.EntityType.TemplateTagEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "TemplateTagEntity");
					break;
				case Falcon.Data.EntityType.TerritoryEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "TerritoryEntity");
					break;
				case Falcon.Data.EntityType.TerritoryPackageEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "TerritoryPackageEntity");
					break;
				case Falcon.Data.EntityType.TerritoryZipEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "TerritoryZipEntity");
					break;
				case Falcon.Data.EntityType.TestEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "TestEntity");
					break;
				case Falcon.Data.EntityType.TestAvailabilityToRolesEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "TestAvailabilityToRolesEntity");
					break;
				case Falcon.Data.EntityType.TestDependencyRuleEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "TestDependencyRuleEntity");
					break;
				case Falcon.Data.EntityType.TestHcpcsCodeEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "TestHcpcsCodeEntity");
					break;
				case Falcon.Data.EntityType.TestimonialEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "TestimonialEntity");
					break;
				case Falcon.Data.EntityType.TestIncidentalFindingEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "TestIncidentalFindingEntity");
					break;
				case Falcon.Data.EntityType.TestMediaEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "TestMediaEntity");
					break;
				case Falcon.Data.EntityType.TestNotPerformedEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "TestNotPerformedEntity");
					break;
				case Falcon.Data.EntityType.TestNotPerformedReasonEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "TestNotPerformedReasonEntity");
					break;
				case Falcon.Data.EntityType.TestOrderItemEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "TestOrderItemEntity");
					break;
				case Falcon.Data.EntityType.TestPerformedExternallyEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "TestPerformedExternallyEntity");
					break;
				case Falcon.Data.EntityType.TestReadingEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "TestReadingEntity");
					break;
				case Falcon.Data.EntityType.TestSourceCodeDiscountEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "TestSourceCodeDiscountEntity");
					break;
				case Falcon.Data.EntityType.TestUnableScreenReasonEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "TestUnableScreenReasonEntity");
					break;
				case Falcon.Data.EntityType.ToolTipEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ToolTipEntity");
					break;
				case Falcon.Data.EntityType.TrackingMarketingEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "TrackingMarketingEntity");
					break;
				case Falcon.Data.EntityType.UncontactedCustomerCallQueueEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "UncontactedCustomerCallQueueEntity");
					break;
				case Falcon.Data.EntityType.UncontactedCustomerCallQueueCriteriaAssignmentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "UncontactedCustomerCallQueueCriteriaAssignmentEntity");
					break;
				case Falcon.Data.EntityType.UnitEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "UnitEntity");
					break;
				case Falcon.Data.EntityType.UploadTestInfoEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "UploadTestInfoEntity");
					break;
				case Falcon.Data.EntityType.UploadZipInfoEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "UploadZipInfoEntity");
					break;
				case Falcon.Data.EntityType.UserEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "UserEntity");
					break;
				case Falcon.Data.EntityType.UserLoginEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "UserLoginEntity");
					break;
				case Falcon.Data.EntityType.UserLoginLogEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "UserLoginLogEntity");
					break;
				case Falcon.Data.EntityType.UserNpiInfoEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "UserNpiInfoEntity");
					break;
				case Falcon.Data.EntityType.UserSecurityQuestionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "UserSecurityQuestionEntity");
					break;
				case Falcon.Data.EntityType.VanDetailsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VanDetailsEntity");
					break;
				case Falcon.Data.EntityType.VwCallCenterCallReportEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwCallCenterCallReportEntity");
					break;
				case Falcon.Data.EntityType.VwCallQueueCustomerCallDetailsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwCallQueueCustomerCallDetailsEntity");
					break;
				case Falcon.Data.EntityType.VwCallQueueCustomerCriteraAssignmentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwCallQueueCustomerCriteraAssignmentEntity");
					break;
				case Falcon.Data.EntityType.VwCallQueueCustomerCriteraAssignmentForGmsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwCallQueueCustomerCriteraAssignmentForGmsEntity");
					break;
				case Falcon.Data.EntityType.VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwCallQueueCustomerCriteraAssignmentForGmsStatsEntity");
					break;
				case Falcon.Data.EntityType.VwCallQueueCustomerCriteraAssignmentForStatsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwCallQueueCustomerCriteraAssignmentForStatsEntity");
					break;
				case Falcon.Data.EntityType.VwCallQueueCustomerCriteraAssignmentWithCustomerEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwCallQueueCustomerCriteraAssignmentWithCustomerEntity");
					break;
				case Falcon.Data.EntityType.VwCallRoundCallQueueCriteraAssignmentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwCallRoundCallQueueCriteraAssignmentEntity");
					break;
				case Falcon.Data.EntityType.VwCampaignClickConversionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwCampaignClickConversionEntity");
					break;
				case Falcon.Data.EntityType.VwCustomerAggregateResultSummaryEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwCustomerAggregateResultSummaryEntity");
					break;
				case Falcon.Data.EntityType.VwEventAppointmentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwEventAppointmentEntity");
					break;
				case Falcon.Data.EntityType.VwEventCustomerPreApprovedTestListEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwEventCustomerPreApprovedTestListEntity");
					break;
				case Falcon.Data.EntityType.VwEventCustomersAccountEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwEventCustomersAccountEntity");
					break;
				case Falcon.Data.EntityType.VwEventCustomersViewServiceReportEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwEventCustomersViewServiceReportEntity");
					break;
				case Falcon.Data.EntityType.VwFillEventCallQueueCriteraAssignmentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwFillEventCallQueueCriteraAssignmentEntity");
					break;
				case Falcon.Data.EntityType.VwGetAllTestForCustomersEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwGetAllTestForCustomersEntity");
					break;
				case Falcon.Data.EntityType.VwGetBookedAppointmentForCalculatingBonusEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwGetBookedAppointmentForCalculatingBonusEntity");
					break;
				case Falcon.Data.EntityType.VwGetCallCenterAgentsForConversionReportEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwGetCallCenterAgentsForConversionReportEntity");
					break;
				case Falcon.Data.EntityType.VwGetCallQueueCustomersEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwGetCallQueueCustomersEntity");
					break;
				case Falcon.Data.EntityType.VwGetCallQueueExcludedCustomersEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwGetCallQueueExcludedCustomersEntity");
					break;
				case Falcon.Data.EntityType.VwGetCallsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwGetCallsEntity");
					break;
				case Falcon.Data.EntityType.VwGetCallsForCalculatingBonusEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwGetCallsForCalculatingBonusEntity");
					break;
				case Falcon.Data.EntityType.VwGetCallsForCallQueueEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwGetCallsForCallQueueEntity");
					break;
				case Falcon.Data.EntityType.VwGetCallsForSuppressionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwGetCallsForSuppressionEntity");
					break;
				case Falcon.Data.EntityType.VwGetConfirmationCallQueueCustomersWithoutSuppressionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwGetConfirmationCallQueueCustomersWithoutSuppressionEntity");
					break;
				case Falcon.Data.EntityType.VwGetCustomerForMailRoundInsertionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwGetCustomerForMailRoundInsertionEntity");
					break;
				case Falcon.Data.EntityType.VwGetCustomerIdsHavingSingleTagForCallQueueEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwGetCustomerIdsHavingSingleTagForCallQueueEntity");
					break;
				case Falcon.Data.EntityType.VwGetCustomersForCallQueueWithCustomerEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwGetCustomersForCallQueueWithCustomerEntity");
					break;
				case Falcon.Data.EntityType.VwGetCustomersForCallQueueWithCustomerViciEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwGetCustomersForCallQueueWithCustomerViciEntity");
					break;
				case Falcon.Data.EntityType.VwGetCustomersForConfirmationCallQueueEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwGetCustomersForConfirmationCallQueueEntity");
					break;
				case Falcon.Data.EntityType.VwGetCustomersForNotInCallQueueEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwGetCustomersForNotInCallQueueEntity");
					break;
				case Falcon.Data.EntityType.VwGetCustomersToGenerateCallQueueEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwGetCustomersToGenerateCallQueueEntity");
					break;
				case Falcon.Data.EntityType.VwGetCustomersToGenerateConfirmationCallQueueEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwGetCustomersToGenerateConfirmationCallQueueEntity");
					break;
				case Falcon.Data.EntityType.VwGetCustomersToGenerateFillEventCallQueueEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwGetCustomersToGenerateFillEventCallQueueEntity");
					break;
				case Falcon.Data.EntityType.VwGetCustomersToGenerateFillEventCallQueue_Entity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwGetCustomersToGenerateFillEventCallQueue_Entity");
					break;
				case Falcon.Data.EntityType.VwGetCustomerTagForCallQueueEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwGetCustomerTagForCallQueueEntity");
					break;
				case Falcon.Data.EntityType.VwGetDataForSkippedCallReportEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwGetDataForSkippedCallReportEntity");
					break;
				case Falcon.Data.EntityType.VwGetDirectMailForCallQueueEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwGetDirectMailForCallQueueEntity");
					break;
				case Falcon.Data.EntityType.VwGetEventCustomerEawvTestInOrderEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwGetEventCustomerEawvTestInOrderEntity");
					break;
				case Falcon.Data.EntityType.VwGetHkynTestCustomersEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwGetHkynTestCustomersEntity");
					break;
				case Falcon.Data.EntityType.VwGetKynTestCustomersEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwGetKynTestCustomersEntity");
					break;
				case Falcon.Data.EntityType.VwGetMyBioCheckTestCustomersEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwGetMyBioCheckTestCustomersEntity");
					break;
				case Falcon.Data.EntityType.VwGetOutboundCallsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwGetOutboundCallsEntity");
					break;
				case Falcon.Data.EntityType.VwGetTestPerformedReportEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwGetTestPerformedReportEntity");
					break;
				case Falcon.Data.EntityType.VwHospitalPartnerCustomersEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwHospitalPartnerCustomersEntity");
					break;
				case Falcon.Data.EntityType.VwHostEventDetailsEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwHostEventDetailsEntity");
					break;
				case Falcon.Data.EntityType.VwLanguageBarrierCallQueueCriteraAssignmentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwLanguageBarrierCallQueueCriteraAssignmentEntity");
					break;
				case Falcon.Data.EntityType.VwMailRoundCallQueueCriteraAssignmentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwMailRoundCallQueueCriteraAssignmentEntity");
					break;
				case Falcon.Data.EntityType.VwOutreachCallReportEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwOutreachCallReportEntity");
					break;
				case Falcon.Data.EntityType.VwPcpAppointmetnDispositionEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwPcpAppointmetnDispositionEntity");
					break;
				case Falcon.Data.EntityType.VwPhysicianQueueRecordEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwPhysicianQueueRecordEntity");
					break;
				case Falcon.Data.EntityType.VwUncontactedCustomerCallQueueCriteraAssignmentEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "VwUncontactedCustomerCallQueueCriteraAssignmentEntity");
					break;
				case Falcon.Data.EntityType.WellMedAttestationEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "WellMedAttestationEntity");
					break;
				case Falcon.Data.EntityType.WfEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "WfEntity");
					break;
				case Falcon.Data.EntityType.WidgetEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "WidgetEntity");
					break;
				case Falcon.Data.EntityType.ZipEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ZipEntity");
					break;
				case Falcon.Data.EntityType.ZipDataEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ZipDataEntity");
					break;
				case Falcon.Data.EntityType.ZipRadiusDistanceEntity:
					fieldsToReturn = fieldProvider.GetEntityFields(inheritanceProvider, "ZipRadiusDistanceEntity");
					break;
			}
			return fieldsToReturn;
		}
		
		/// <summary>General method which will return an array of IEntityFieldCore objects, used by the InheritanceInfoProvider. Only the fields defined in the entity are returned, no inherited fields.</summary>
		/// <param name="entityName">the name of the entity to get the fields for. Example: "CustomerEntity"</param>
		/// <returns>array of IEntityFieldCore fields, defined in the entity with the name specified</returns>
		internal static IEntityFieldCore[] CreateFields(string entityName)
		{
			IFieldInfoProvider fieldProvider = FieldInfoProviderSingleton.GetInstance();
			return fieldProvider.GetEntityFieldsArray(entityName);
		}
		

		/// <summary>General factory entrance method which will return a TypedView EntityFields object with the format generated by the factory specified</summary>
		/// <param name="relatedTypedViewType">The type of typed view the fields are for</param>
		/// <returns>The IEntityFields2 instance requested</returns>
		public static IEntityFields2 CreateTypedViewEntityFieldsObject(TypedViewType relatedTypedViewType)
		{
			IEntityFields2 fieldsToReturn=null;
			switch(relatedTypedViewType)
			{
				case TypedViewType.AddressViewTypedView:
					fieldsToReturn = CreateAddressViewTypedViewEntityFields();
					break;
				case TypedViewType.CcrepMetricesTypedView:
					fieldsToReturn = CreateCcrepMetricesTypedViewEntityFields();
					break;
				case TypedViewType.CustomerEventBasicInfoTypedView:
					fieldsToReturn = CreateCustomerEventBasicInfoTypedViewEntityFields();
					break;
				case TypedViewType.CustomerOrderBasicInfoTypedView:
					fieldsToReturn = CreateCustomerOrderBasicInfoTypedViewEntityFields();
					break;
				case TypedViewType.FranchiseeFranchiseeUserTypedView:
					fieldsToReturn = CreateFranchiseeFranchiseeUserTypedViewEntityFields();
					break;
				case TypedViewType.GetRecordsReadyforCustomerViewTypedView:
					fieldsToReturn = CreateGetRecordsReadyforCustomerViewTypedViewEntityFields();
					break;
				case TypedViewType.MedicalVendorEarningCustomerTypedView:
					fieldsToReturn = CreateMedicalVendorEarningCustomerTypedViewEntityFields();
					break;
				case TypedViewType.MedicalVendorEarningInfoTypedView:
					fieldsToReturn = CreateMedicalVendorEarningInfoTypedViewEntityFields();
					break;
				case TypedViewType.MedicalVendorInvoiceItemTypedView:
					fieldsToReturn = CreateMedicalVendorInvoiceItemTypedViewEntityFields();
					break;
				case TypedViewType.MedicalVendorMedicalVendorUserTypedView:
					fieldsToReturn = CreateMedicalVendorMedicalVendorUserTypedViewEntityFields();
					break;
				case TypedViewType.MedicalVendorMvuserEarningAndPayRateTypedView:
					fieldsToReturn = CreateMedicalVendorMvuserEarningAndPayRateTypedViewEntityFields();
					break;
				case TypedViewType.MedicalVendorMvuserPaymentTypedView:
					fieldsToReturn = CreateMedicalVendorMvuserPaymentTypedViewEntityFields();
					break;
			}
			return fieldsToReturn;
		}

		/// <summary>Creates a complete EntityFields instance for the AddressViewEntity.</summary>
		private static IEntityFields2 CreateAddressViewTypedViewEntityFields()
		{
			IEntityFields2 fieldsToReturn = new EntityFields2((int)AddressViewFieldIndex.AmountOfFields, null, FieldInfoProviderSingleton.GetInstance().GetFieldIndexes("AddressViewTypedView"));
			for(int i=0;i<(int)AddressViewFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((AddressViewFieldIndex)i);
			}
			return fieldsToReturn;
		}

		/// <summary>Creates a complete EntityFields instance for the CcrepMetricesEntity.</summary>
		private static IEntityFields2 CreateCcrepMetricesTypedViewEntityFields()
		{
			IEntityFields2 fieldsToReturn = new EntityFields2((int)CcrepMetricesFieldIndex.AmountOfFields, null, FieldInfoProviderSingleton.GetInstance().GetFieldIndexes("CcrepMetricesTypedView"));
			for(int i=0;i<(int)CcrepMetricesFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((CcrepMetricesFieldIndex)i);
			}
			return fieldsToReturn;
		}

		/// <summary>Creates a complete EntityFields instance for the CustomerEventBasicInfoEntity.</summary>
		private static IEntityFields2 CreateCustomerEventBasicInfoTypedViewEntityFields()
		{
			IEntityFields2 fieldsToReturn = new EntityFields2((int)CustomerEventBasicInfoFieldIndex.AmountOfFields, null, FieldInfoProviderSingleton.GetInstance().GetFieldIndexes("CustomerEventBasicInfoTypedView"));
			for(int i=0;i<(int)CustomerEventBasicInfoFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((CustomerEventBasicInfoFieldIndex)i);
			}
			return fieldsToReturn;
		}

		/// <summary>Creates a complete EntityFields instance for the CustomerOrderBasicInfoEntity.</summary>
		private static IEntityFields2 CreateCustomerOrderBasicInfoTypedViewEntityFields()
		{
			IEntityFields2 fieldsToReturn = new EntityFields2((int)CustomerOrderBasicInfoFieldIndex.AmountOfFields, null, FieldInfoProviderSingleton.GetInstance().GetFieldIndexes("CustomerOrderBasicInfoTypedView"));
			for(int i=0;i<(int)CustomerOrderBasicInfoFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((CustomerOrderBasicInfoFieldIndex)i);
			}
			return fieldsToReturn;
		}

		/// <summary>Creates a complete EntityFields instance for the FranchiseeFranchiseeUserEntity.</summary>
		private static IEntityFields2 CreateFranchiseeFranchiseeUserTypedViewEntityFields()
		{
			IEntityFields2 fieldsToReturn = new EntityFields2((int)FranchiseeFranchiseeUserFieldIndex.AmountOfFields, null, FieldInfoProviderSingleton.GetInstance().GetFieldIndexes("FranchiseeFranchiseeUserTypedView"));
			for(int i=0;i<(int)FranchiseeFranchiseeUserFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((FranchiseeFranchiseeUserFieldIndex)i);
			}
			return fieldsToReturn;
		}

		/// <summary>Creates a complete EntityFields instance for the GetRecordsReadyforCustomerViewEntity.</summary>
		private static IEntityFields2 CreateGetRecordsReadyforCustomerViewTypedViewEntityFields()
		{
			IEntityFields2 fieldsToReturn = new EntityFields2((int)GetRecordsReadyforCustomerViewFieldIndex.AmountOfFields, null, FieldInfoProviderSingleton.GetInstance().GetFieldIndexes("GetRecordsReadyforCustomerViewTypedView"));
			for(int i=0;i<(int)GetRecordsReadyforCustomerViewFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((GetRecordsReadyforCustomerViewFieldIndex)i);
			}
			return fieldsToReturn;
		}

		/// <summary>Creates a complete EntityFields instance for the MedicalVendorEarningCustomerEntity.</summary>
		private static IEntityFields2 CreateMedicalVendorEarningCustomerTypedViewEntityFields()
		{
			IEntityFields2 fieldsToReturn = new EntityFields2((int)MedicalVendorEarningCustomerFieldIndex.AmountOfFields, null, FieldInfoProviderSingleton.GetInstance().GetFieldIndexes("MedicalVendorEarningCustomerTypedView"));
			for(int i=0;i<(int)MedicalVendorEarningCustomerFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((MedicalVendorEarningCustomerFieldIndex)i);
			}
			return fieldsToReturn;
		}

		/// <summary>Creates a complete EntityFields instance for the MedicalVendorEarningInfoEntity.</summary>
		private static IEntityFields2 CreateMedicalVendorEarningInfoTypedViewEntityFields()
		{
			IEntityFields2 fieldsToReturn = new EntityFields2((int)MedicalVendorEarningInfoFieldIndex.AmountOfFields, null, FieldInfoProviderSingleton.GetInstance().GetFieldIndexes("MedicalVendorEarningInfoTypedView"));
			for(int i=0;i<(int)MedicalVendorEarningInfoFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((MedicalVendorEarningInfoFieldIndex)i);
			}
			return fieldsToReturn;
		}

		/// <summary>Creates a complete EntityFields instance for the MedicalVendorInvoiceItemEntity.</summary>
		private static IEntityFields2 CreateMedicalVendorInvoiceItemTypedViewEntityFields()
		{
			IEntityFields2 fieldsToReturn = new EntityFields2((int)MedicalVendorInvoiceItemFieldIndex.AmountOfFields, null, FieldInfoProviderSingleton.GetInstance().GetFieldIndexes("MedicalVendorInvoiceItemTypedView"));
			for(int i=0;i<(int)MedicalVendorInvoiceItemFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((MedicalVendorInvoiceItemFieldIndex)i);
			}
			return fieldsToReturn;
		}

		/// <summary>Creates a complete EntityFields instance for the MedicalVendorMedicalVendorUserEntity.</summary>
		private static IEntityFields2 CreateMedicalVendorMedicalVendorUserTypedViewEntityFields()
		{
			IEntityFields2 fieldsToReturn = new EntityFields2((int)MedicalVendorMedicalVendorUserFieldIndex.AmountOfFields, null, FieldInfoProviderSingleton.GetInstance().GetFieldIndexes("MedicalVendorMedicalVendorUserTypedView"));
			for(int i=0;i<(int)MedicalVendorMedicalVendorUserFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((MedicalVendorMedicalVendorUserFieldIndex)i);
			}
			return fieldsToReturn;
		}

		/// <summary>Creates a complete EntityFields instance for the MedicalVendorMvuserEarningAndPayRateEntity.</summary>
		private static IEntityFields2 CreateMedicalVendorMvuserEarningAndPayRateTypedViewEntityFields()
		{
			IEntityFields2 fieldsToReturn = new EntityFields2((int)MedicalVendorMvuserEarningAndPayRateFieldIndex.AmountOfFields, null, FieldInfoProviderSingleton.GetInstance().GetFieldIndexes("MedicalVendorMvuserEarningAndPayRateTypedView"));
			for(int i=0;i<(int)MedicalVendorMvuserEarningAndPayRateFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((MedicalVendorMvuserEarningAndPayRateFieldIndex)i);
			}
			return fieldsToReturn;
		}

		/// <summary>Creates a complete EntityFields instance for the MedicalVendorMvuserPaymentEntity.</summary>
		private static IEntityFields2 CreateMedicalVendorMvuserPaymentTypedViewEntityFields()
		{
			IEntityFields2 fieldsToReturn = new EntityFields2((int)MedicalVendorMvuserPaymentFieldIndex.AmountOfFields, null, FieldInfoProviderSingleton.GetInstance().GetFieldIndexes("MedicalVendorMvuserPaymentTypedView"));
			for(int i=0;i<(int)MedicalVendorMvuserPaymentFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((MedicalVendorMvuserPaymentFieldIndex)i);
			}
			return fieldsToReturn;
		}

		#region Included Code

		#endregion
	}
}
